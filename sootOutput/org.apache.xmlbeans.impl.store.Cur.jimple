final class org.apache.xmlbeans.impl.store.Cur extends java.lang.Object
{
    static final int TEXT;
    static final int ROOT;
    static final int ELEM;
    static final int ATTR;
    static final int COMMENT;
    static final int PROCINST;
    static final int POOLED;
    static final int REGISTERED;
    static final int EMBEDDED;
    static final int DISPOSED;
    static final int END_POS;
    static final int NO_POS;
    static final java.lang.String LOAD_USE_LOCALE_CHAR_UTIL;
    org.apache.xmlbeans.impl.store.Locale _locale;
    org.apache.xmlbeans.impl.store.Xobj _xobj;
    int _pos;
    int _state;
    java.lang.String _id;
    org.apache.xmlbeans.impl.store.Cur _nextTemp;
    org.apache.xmlbeans.impl.store.Cur _prevTemp;
    int _tempFrame;
    org.apache.xmlbeans.impl.store.Cur _next;
    org.apache.xmlbeans.impl.store.Cur _prev;
    org.apache.xmlbeans.impl.store.Locale$Ref _ref;
    int _stackTop;
    int _selectionFirst;
    int _selectionN;
    int _selectionLoc;
    int _selectionCount;
    private int _posTemp;
    int _offSrc;
    int _cchSrc;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$store$Cur;
    static java.lang.Class class$org$apache$xmlbeans$CDataBookmark;
    static java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPElement;
    static java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPBody;
    static java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPBodyElement;
    static java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPEnvelope;
    static java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPHeader;
    static java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPHeaderElement;
    static java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPFaultElement;
    static java.lang.Class class$org$apache$xmlbeans$impl$soap$Detail;
    static java.lang.Class class$org$apache$xmlbeans$impl$soap$DetailEntry;
    static java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPFault;
    static java.lang.Class class$org$apache$xmlbeans$XmlLineNumber;

    void <init>(org.apache.xmlbeans.impl.store.Locale)
    {
        org.apache.xmlbeans.impl.store.Locale r1;
        int $i1, $i3, $i5, $i7, $i9, $i11;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale> = r1;

        $i1 = (int) -2;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _pos> = $i1;

        $i3 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _tempFrame> = $i3;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _state> = 0;

        $i5 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop> = $i5;

        $i7 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionFirst> = $i7;

        $i9 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN> = $i9;

        $i11 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionLoc> = $i11;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount> = 0;

        return;
    }

    boolean isPositioned()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        java.lang.AssertionError $r2;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r1 == null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    static boolean kindIsContainer(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        if i0 != 1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static boolean kindIsFinish(int)
    {
        int i0, $i2, $i4;
        boolean $z0;

        i0 := @parameter0: int;

        $i2 = (int) -2;

        if i0 == $i2 goto label1;

        $i4 = (int) -1;

        if i0 != $i4 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    int kind()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1, $i2, $i3, $i5;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i1 != 0 goto label2;

        $i3 = $i0;

        goto label4;

     label2:
        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i5 = (int) -1;

        if $i2 != $i5 goto label3;

        $i3 = neg $i0;

        goto label4;

     label3:
        $i3 = 0;

     label4:
        return $i3;
    }

    boolean isRoot()
    {
        java.lang.AssertionError $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i0 != 0 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        if $i1 != 1 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isElem()
    {
        java.lang.AssertionError $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i0 != 0 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        if $i1 != 2 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isAttr()
    {
        java.lang.AssertionError $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i0 != 0 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        if $i1 != 3 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isComment()
    {
        java.lang.AssertionError $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i0 != 0 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        if $i1 != 4 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isProcinst()
    {
        java.lang.AssertionError $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i0 != 0 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        if $i1 != 5 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isText()
    {
        int $i0;
        java.lang.AssertionError $r1;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i0 <= 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isEnd()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1, $i3;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        if $i1 != 2 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isEndRoot()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1, $i3;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        if $i1 != 1 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isNode()
    {
        int $i0;
        java.lang.AssertionError $r1;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i0 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isContainer()
    {
        java.lang.AssertionError $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z2 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i0 != 0 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        $z1 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: boolean kindIsContainer(int)>($i1);

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    boolean isFinish()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1, $i3;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z2 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        $z1 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: boolean kindIsContainer(int)>($i1);

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    boolean isUserNode()
    {
        int $i0;
        java.lang.AssertionError $r1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z2 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        if $i0 == 2 goto label2;

        if $i0 == 1 goto label2;

        if $i0 != 3 goto label3;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isXmlns()>();

        if $z1 != 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    boolean isContainerOrFinish()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1, $i2, $i4, $i6, $i8;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i0 == 0 goto label2;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i4 = (int) -1;

        if $i2 == $i4 goto label2;

        return 0;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        if $i1 == 2 goto label3;

        $i6 = (int) -2;

        if $i1 == $i6 goto label3;

        if $i1 == 1 goto label3;

        $i8 = (int) -1;

        if $i1 != $i8 goto label4;

     label3:
        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    boolean isNormalAttr()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isNormalAttr()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    boolean isXmlns()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isXmlns()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    boolean isTextCData()
    {
        org.apache.xmlbeans.impl.store.Xobj $r2;
        int $i0;
        java.lang.Class $r1, $r3;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r1 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$CDataBookmark>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.CDataBookmark");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$CDataBookmark> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$CDataBookmark>;

     label2:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: boolean hasBookmark(java.lang.Object,int)>($r3, $i0);

        return $z0;
    }

    javax.xml.namespace.QName getName()
    {
        org.apache.xmlbeans.impl.store.Xobj $r2;
        java.lang.AssertionError $r1;
        javax.xml.namespace.QName $r3;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isEnd()>();

        if $z2 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = $r2.<org.apache.xmlbeans.impl.store.Xobj: javax.xml.namespace.QName _name>;

        return $r3;
    }

    java.lang.String getLocal()
    {
        javax.xml.namespace.QName $r1;
        java.lang.String $r2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        $r2 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        return $r2;
    }

    java.lang.String getUri()
    {
        javax.xml.namespace.QName $r1;
        java.lang.String $r2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        $r2 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        return $r2;
    }

    java.lang.String getXmlnsPrefix()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        java.lang.String $r2;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isXmlns()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: java.lang.String getXmlnsPrefix()>();

        return $r2;
    }

    java.lang.String getXmlnsUri()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        java.lang.String $r2;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isXmlns()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: java.lang.String getXmlnsUri()>();

        return $r2;
    }

    boolean isDomDocRoot()
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()>();

        $z1 = $r2 instanceof org.w3c.dom.Document;

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    boolean isDomFragRoot()
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()>();

        $z1 = $r2 instanceof org.w3c.dom.DocumentFragment;

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    int cchRight()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1;
        java.lang.AssertionError $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int cchRight(int)>($i0);

        return $i1;
    }

    int cchLeft()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1;
        java.lang.AssertionError $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int cchLeft(int)>($i0);

        return $i1;
    }

    void createRoot()
    {
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void createDomDocFragRoot()>();

        return;
    }

    void createDomDocFragRoot()
    {
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.impl.store.Cur r0;
        org.apache.xmlbeans.impl.store.Xobj$DocumentFragXobj $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r1 = new org.apache.xmlbeans.impl.store.Xobj$DocumentFragXobj;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        specialinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj$DocumentFragXobj: void <init>(org.apache.xmlbeans.impl.store.Locale)>($r2);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r1);

        return;
    }

    void createDomDocumentRoot()
    {
        org.apache.xmlbeans.impl.store.Locale $r1;
        org.apache.xmlbeans.impl.store.Xobj $r2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj createDomDocumentRootXobj(org.apache.xmlbeans.impl.store.Locale)>($r1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r2);

        return;
    }

    void createAttr(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.store.Locale $r3;
        org.apache.xmlbeans.impl.store.Xobj$AttrXobj $r1;
        javax.xml.namespace.QName r2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter0: javax.xml.namespace.QName;

        $r1 = new org.apache.xmlbeans.impl.store.Xobj$AttrXobj;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        specialinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj$AttrXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>($r3, r2);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void createHelper(org.apache.xmlbeans.impl.store.Xobj)>($r1);

        return;
    }

    void createComment()
    {
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.impl.store.Cur r0;
        org.apache.xmlbeans.impl.store.Xobj$CommentXobj $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r1 = new org.apache.xmlbeans.impl.store.Xobj$CommentXobj;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        specialinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj$CommentXobj: void <init>(org.apache.xmlbeans.impl.store.Locale)>($r2);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void createHelper(org.apache.xmlbeans.impl.store.Xobj)>($r1);

        return;
    }

    void createProcinst(java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Xobj$ProcInstXobj $r1;
        org.apache.xmlbeans.impl.store.Locale $r3;
        java.lang.String r2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter0: java.lang.String;

        $r1 = new org.apache.xmlbeans.impl.store.Xobj$ProcInstXobj;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        specialinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj$ProcInstXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,java.lang.String)>($r3, r2);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void createHelper(org.apache.xmlbeans.impl.store.Xobj)>($r1);

        return;
    }

    void createElement(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: javax.xml.namespace.QName;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void createElement(javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, null);

        return;
    }

    void createElement(javax.xml.namespace.QName, javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.store.Xobj $r4;
        org.apache.xmlbeans.impl.store.Locale $r3;
        javax.xml.namespace.QName r1, r2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: javax.xml.namespace.QName;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj createElementXobj(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName,javax.xml.namespace.QName)>($r3, r1, r2);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void createHelper(org.apache.xmlbeans.impl.store.Xobj)>($r4);

        return;
    }

    static org.apache.xmlbeans.impl.store.Xobj createDomDocumentRootXobj(org.apache.xmlbeans.impl.store.Locale)
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.Xobj $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Locale;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj createDomDocumentRootXobj(org.apache.xmlbeans.impl.store.Locale,boolean)>(r0, 0);

        return $r1;
    }

    static org.apache.xmlbeans.impl.store.Xobj createDomDocumentRootXobj(org.apache.xmlbeans.impl.store.Locale, boolean)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r3, $r7;
        org.apache.xmlbeans.impl.store.Xobj$SoapPartDocXobj $r2;
        org.apache.xmlbeans.impl.store.Xobj$DocumentXobj $r4;
        org.apache.xmlbeans.impl.store.Xobj$NodeXobj r6;
        org.apache.xmlbeans.impl.store.Xobj$DocumentFragXobj $r5;
        org.apache.xmlbeans.impl.store.Saaj $r1;
        org.apache.xmlbeans.impl.store.Locale r0;
        boolean z0;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Locale;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Saaj _saaj>;

        if $r1 != null goto label2;

        if z0 == 0 goto label1;

        $r5 = new org.apache.xmlbeans.impl.store.Xobj$DocumentFragXobj;

        specialinvoke $r5.<org.apache.xmlbeans.impl.store.Xobj$DocumentFragXobj: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        r6 = $r5;

        goto label3;

     label1:
        $r4 = new org.apache.xmlbeans.impl.store.Xobj$DocumentXobj;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.Xobj$DocumentXobj: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        r6 = $r4;

        goto label3;

     label2:
        $r2 = new org.apache.xmlbeans.impl.store.Xobj$SoapPartDocXobj;

        specialinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj$SoapPartDocXobj: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        r6 = $r2;

     label3:
        $r7 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom _ownerDoc>;

        if $r7 != null goto label4;

        $r3 = virtualinvoke r6.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()>();

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom _ownerDoc> = $r3;

     label4:
        return r6;
    }

    static org.apache.xmlbeans.impl.store.Xobj createElementXobj(org.apache.xmlbeans.impl.store.Locale, javax.xml.namespace.QName, javax.xml.namespace.QName)
    {
        java.lang.IllegalStateException $r16;
        org.apache.xmlbeans.impl.store.Xobj$ElementXobj $r31;
        org.apache.xmlbeans.impl.store.Xobj$SoapEnvelopeXobj $r27;
        org.apache.xmlbeans.impl.store.Xobj$DetailEntryXobj $r22;
        org.apache.xmlbeans.impl.store.Xobj$SoapHeaderElementXobj $r25;
        org.apache.xmlbeans.impl.store.Xobj$SoapFaultElementXobj $r24;
        org.apache.xmlbeans.impl.store.Xobj$DetailXobj $r23;
        org.apache.xmlbeans.impl.store.Xobj$SoapFaultXobj $r21;
        org.apache.xmlbeans.impl.store.Xobj$SoapBodyXobj $r29;
        javax.xml.namespace.QName r2, r3;
        java.lang.StringBuffer $r17, $r18, $r19;
        java.lang.String $r20;
        org.apache.xmlbeans.impl.store.Xobj$SoapBodyElementXobj $r28;
        org.apache.xmlbeans.impl.store.Saaj $r1, $r4;
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.Xobj$SoapElementXobj $r30;
        org.apache.xmlbeans.impl.store.Xobj$SoapHeaderXobj $r26;
        java.lang.Class $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Locale;

        r2 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: javax.xml.namespace.QName;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Saaj _saaj>;

        if $r1 != null goto label01;

        $r31 = new org.apache.xmlbeans.impl.store.Xobj$ElementXobj;

        specialinvoke $r31.<org.apache.xmlbeans.impl.store.Xobj$ElementXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r31;

     label01:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Saaj _saaj>;

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.store.Saaj: java.lang.Class identifyElement(javax.xml.namespace.QName,javax.xml.namespace.QName)>(r2, r3);

        $r6 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPElement>;

        if $r6 != null goto label02;

        $r32 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.soap.SOAPElement");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPElement> = $r32;

        goto label03;

     label02:
        $r32 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPElement>;

     label03:
        if $r5 != $r32 goto label04;

        $r30 = new org.apache.xmlbeans.impl.store.Xobj$SoapElementXobj;

        specialinvoke $r30.<org.apache.xmlbeans.impl.store.Xobj$SoapElementXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r30;

     label04:
        $r7 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPBody>;

        if $r7 != null goto label05;

        $r33 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.soap.SOAPBody");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPBody> = $r33;

        goto label06;

     label05:
        $r33 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPBody>;

     label06:
        if $r5 != $r33 goto label07;

        $r29 = new org.apache.xmlbeans.impl.store.Xobj$SoapBodyXobj;

        specialinvoke $r29.<org.apache.xmlbeans.impl.store.Xobj$SoapBodyXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r29;

     label07:
        $r8 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPBodyElement>;

        if $r8 != null goto label08;

        $r34 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.soap.SOAPBodyElement");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPBodyElement> = $r34;

        goto label09;

     label08:
        $r34 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPBodyElement>;

     label09:
        if $r5 != $r34 goto label10;

        $r28 = new org.apache.xmlbeans.impl.store.Xobj$SoapBodyElementXobj;

        specialinvoke $r28.<org.apache.xmlbeans.impl.store.Xobj$SoapBodyElementXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r28;

     label10:
        $r9 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPEnvelope>;

        if $r9 != null goto label11;

        $r35 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.soap.SOAPEnvelope");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPEnvelope> = $r35;

        goto label12;

     label11:
        $r35 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPEnvelope>;

     label12:
        if $r5 != $r35 goto label13;

        $r27 = new org.apache.xmlbeans.impl.store.Xobj$SoapEnvelopeXobj;

        specialinvoke $r27.<org.apache.xmlbeans.impl.store.Xobj$SoapEnvelopeXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r27;

     label13:
        $r10 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPHeader>;

        if $r10 != null goto label14;

        $r36 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.soap.SOAPHeader");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPHeader> = $r36;

        goto label15;

     label14:
        $r36 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPHeader>;

     label15:
        if $r5 != $r36 goto label16;

        $r26 = new org.apache.xmlbeans.impl.store.Xobj$SoapHeaderXobj;

        specialinvoke $r26.<org.apache.xmlbeans.impl.store.Xobj$SoapHeaderXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r26;

     label16:
        $r11 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPHeaderElement>;

        if $r11 != null goto label17;

        $r37 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.soap.SOAPHeaderElement");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPHeaderElement> = $r37;

        goto label18;

     label17:
        $r37 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPHeaderElement>;

     label18:
        if $r5 != $r37 goto label19;

        $r25 = new org.apache.xmlbeans.impl.store.Xobj$SoapHeaderElementXobj;

        specialinvoke $r25.<org.apache.xmlbeans.impl.store.Xobj$SoapHeaderElementXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r25;

     label19:
        $r12 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPFaultElement>;

        if $r12 != null goto label20;

        $r38 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.soap.SOAPFaultElement");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPFaultElement> = $r38;

        goto label21;

     label20:
        $r38 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPFaultElement>;

     label21:
        if $r5 != $r38 goto label22;

        $r24 = new org.apache.xmlbeans.impl.store.Xobj$SoapFaultElementXobj;

        specialinvoke $r24.<org.apache.xmlbeans.impl.store.Xobj$SoapFaultElementXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r24;

     label22:
        $r13 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$Detail>;

        if $r13 != null goto label23;

        $r39 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.soap.Detail");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$Detail> = $r39;

        goto label24;

     label23:
        $r39 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$Detail>;

     label24:
        if $r5 != $r39 goto label25;

        $r23 = new org.apache.xmlbeans.impl.store.Xobj$DetailXobj;

        specialinvoke $r23.<org.apache.xmlbeans.impl.store.Xobj$DetailXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r23;

     label25:
        $r14 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$DetailEntry>;

        if $r14 != null goto label26;

        $r40 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.soap.DetailEntry");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$DetailEntry> = $r40;

        goto label27;

     label26:
        $r40 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$DetailEntry>;

     label27:
        if $r5 != $r40 goto label28;

        $r22 = new org.apache.xmlbeans.impl.store.Xobj$DetailEntryXobj;

        specialinvoke $r22.<org.apache.xmlbeans.impl.store.Xobj$DetailEntryXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r22;

     label28:
        $r15 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPFault>;

        if $r15 != null goto label29;

        $r41 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.soap.SOAPFault");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPFault> = $r41;

        goto label30;

     label29:
        $r41 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$soap$SOAPFault>;

     label30:
        if $r5 != $r41 goto label31;

        $r21 = new org.apache.xmlbeans.impl.store.Xobj$SoapFaultXobj;

        specialinvoke $r21.<org.apache.xmlbeans.impl.store.Xobj$SoapFaultXobj: void <init>(org.apache.xmlbeans.impl.store.Locale,javax.xml.namespace.QName)>(r0, r2);

        return $r21;

     label31:
        $r16 = new java.lang.IllegalStateException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown SAAJ element class: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r16;
    }

    private void createHelper(org.apache.xmlbeans.impl.store.Xobj)
    {
        java.lang.AssertionError $r5;
        org.apache.xmlbeans.impl.store.Xobj r1;
        org.apache.xmlbeans.impl.store.Locale $r3, $r4;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0, $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        if $r4 == $r3 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 == 0 goto label2;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur tempCur(org.apache.xmlbeans.impl.store.Xobj,int)>(r1, 0);

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: void moveNode(org.apache.xmlbeans.impl.store.Cur)>(r0);

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: void release()>();

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>(r1);

        return;
    }

    boolean isSamePos(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r2;
        org.apache.xmlbeans.impl.store.Xobj $r3, $r4;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z1 == 0 goto label1;

        if r1 == null goto label2;

        $z2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z2 != 0 goto label2;

     label1:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r4 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r3 != $r4 goto label3;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i0 = r1.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i1 != $i0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    boolean isJustAfterEnd(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Xobj $r2, $r3;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r1 := @this: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z2 == 0 goto label1;

        if r0 == null goto label1;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z3 == 0 goto label1;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z4 != 0 goto label2;

     label1:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = r1.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $z1 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: boolean isJustAfterEnd(org.apache.xmlbeans.impl.store.Xobj,int)>($r2, $i0);

        return $z1;
    }

    boolean isJustAfterEnd(org.apache.xmlbeans.impl.store.Xobj)
    {
        org.apache.xmlbeans.impl.store.Xobj r0, $r2;
        int $i0;
        org.apache.xmlbeans.impl.store.Cur r1;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        $r2 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = r1.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: boolean isJustAfterEnd(org.apache.xmlbeans.impl.store.Xobj,int)>($r2, $i0);

        return $z0;
    }

    boolean isAtEndOf(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r5;
        org.apache.xmlbeans.impl.store.Xobj $r2, $r3;
        int $i0, $i2;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z2 != 0 goto label2;

     label1:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r3 != $r2 goto label3;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i2 = (int) -1;

        if $i0 != $i2 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    boolean isInSameTree(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Xobj $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z2 == 0 goto label1;

        $z3 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z3 != 0 goto label2;

     label1:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: boolean isInSameTree(org.apache.xmlbeans.impl.store.Xobj)>($r2);

        return $z1;
    }

    int comparePosition(org.apache.xmlbeans.impl.store.Cur)
    {
        byte $b12, $b14, $b16;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Cur r0, r1;
        java.lang.AssertionError $r22, $r23, $r24;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i13, i15, $i18, $i20, $i22, $i24, $i26, $i28;
        org.apache.xmlbeans.impl.store.Xobj $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r14, r16, r17, r18, r19, $r20, $r21;
        org.apache.xmlbeans.impl.store.Locale $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z3 == 0 goto label01;

        $z4 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z4 != 0 goto label02;

     label01:
        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label02:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        if $r3 == $r2 goto label03;

        return 2;

     label03:
        r16 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i18 = (int) -1;

        if $i0 != $i18 goto label04;

        $i9 = virtualinvoke r16.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        $i10 = $i9 - 1;

        goto label05;

     label04:
        $i10 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

     label05:
        i1 = $i10;

        $r14 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        r17 = $r14;

        $i2 = r1.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i20 = (int) -1;

        if $i2 != $i20 goto label06;

        $i8 = virtualinvoke $r14.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        $i11 = $i8 - 1;

        goto label07;

     label06:
        $i11 = r1.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

     label07:
        i3 = $i11;

        if r16 != $r14 goto label11;

        if i1 >= $i11 goto label08;

        $b12 = -1;

        goto label10;

     label08:
        if i1 != $i11 goto label09;

        $b12 = 0;

        goto label10;

     label09:
        $b12 = 1;

     label10:
        return $b12;

     label11:
        i13 = 0;

        r18 = r16.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

     label12:
        if r18 == null goto label16;

        i13 = i13 + 1;

        if r18 != $r14 goto label15;

        $i6 = virtualinvoke $r14.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        $i7 = $i6 - 1;

        if i3 >= $i7 goto label13;

        $b14 = 1;

        goto label14;

     label13:
        $b14 = -1;

     label14:
        return $b14;

     label15:
        r18 = r18.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        goto label12;

     label16:
        i15 = 0;

        r19 = $r14.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

     label17:
        if r19 == null goto label21;

        i15 = i15 + 1;

        if r19 != r16 goto label20;

        $i4 = virtualinvoke r16.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        $i5 = $i4 - 1;

        if i1 >= $i5 goto label18;

        $b16 = -1;

        goto label19;

     label18:
        $b16 = 1;

     label19:
        return $b16;

     label20:
        r19 = r19.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        goto label17;

     label21:
        if i13 <= i15 goto label22;

        $i22 = (int) -1;

        i13 = i13 + $i22;

        r16 = r16.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        goto label21;

     label22:
        if i15 <= i13 goto label23;

        $i24 = (int) -1;

        i15 = i15 + $i24;

        r17 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        goto label22;

     label23:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label24;

        if i15 == i13 goto label24;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label24:
        if i15 != 0 goto label25;

        return 2;

     label25:
        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label27;

        $r10 = r16.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r10 == null goto label26;

        $r12 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r12 != null goto label27;

     label26:
        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label27:
        $r20 = r16.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        $r21 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r20 == $r21 goto label29;

        $r9 = r16.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        r16 = $r9;

        if $r9 != null goto label28;

        return 2;

     label28:
        r17 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        goto label27;

     label29:
        $r4 = r16.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _prevSibling>;

        if $r4 == null goto label30;

        $r5 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        if $r5 != null goto label31;

     label30:
        $i26 = (int) -1;

        return $i26;

     label31:
        $r6 = r16.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        if $r6 == null goto label32;

        $r7 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _prevSibling>;

        if $r7 != null goto label33;

     label32:
        return 1;

     label33:
        if r16 == null goto label34;

        $r8 = r16.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _prevSibling>;

        r16 = $r8;

        if $r8 != r17 goto label33;

        return 1;

     label34:
        $i28 = (int) -1;

        return $i28;
    }

    void setName(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.store.Xobj $r2;
        javax.xml.namespace.QName r1;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 == 0 goto label1;

        if r1 != null goto label2;

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: void setName(javax.xml.namespace.QName)>(r1);

        return;
    }

    void moveTo(org.apache.xmlbeans.impl.store.Xobj)
    {
        org.apache.xmlbeans.impl.store.Xobj r1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>(r1, 0);

        return;
    }

    void moveTo(org.apache.xmlbeans.impl.store.Xobj, int)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r5, $r15;
        org.apache.xmlbeans.impl.store.Cur r0, $r9, $r12;
        java.lang.AssertionError $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        org.apache.xmlbeans.impl.store.Xobj r1, $r2, $r3, $r4, $r6, $r8, $r10, $r11;
        org.apache.xmlbeans.impl.store.Locale $r17, $r18;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        i0 := @parameter1: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if r1 == null goto label01;

        $r18 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r17 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        if $r18 == $r17 goto label01;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label01:
        $z7 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z7 != 0 goto label02;

        if r1 != null goto label02;

        $i8 = (int) -2;

        if i0 == $i8 goto label02;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label02:
        $z8 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z8 != 0 goto label04;

        if r1 == null goto label04;

        $z5 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isNormal(int)>(i0);

        if $z5 != 0 goto label04;

        $z6 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isVacant()>();

        if $z6 == 0 goto label03;

        $i6 = r1.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        if $i6 != 0 goto label03;

        $r15 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.values.TypeStoreUser _user>;

        if $r15 == null goto label04;

     label03:
        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label04:
        $z9 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z9 != 0 goto label05;

        $i4 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i4 == 1 goto label05;

        $i5 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i5 == 2 goto label05;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label05:
        $z10 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z10 != 0 goto label06;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i3 == 2 goto label06;

        $r10 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r10 == null goto label06;

        $r11 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r12 = $r11.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded>;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isOnList(org.apache.xmlbeans.impl.store.Cur)>($r12);

        if $z4 == 0 goto label06;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label06:
        $z11 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z11 != 0 goto label08;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i2 == 1 goto label08;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r6 == null goto label07;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r9 = $r8.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded>;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isOnList(org.apache.xmlbeans.impl.store.Cur)>($r9);

        if $z3 != 0 goto label08;

     label07:
        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label08:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveToNoCheck(org.apache.xmlbeans.impl.store.Xobj,int)>(r1, i0);

        $z12 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z12 != 0 goto label10;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z1 != 0 goto label10;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z2 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: boolean isVacant()>();

        if $z2 == 0 goto label09;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = $r3.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        if $i1 != 0 goto label09;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r5 = $r4.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.values.TypeStoreUser _user>;

        if $r5 == null goto label10;

     label09:
        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label10:
        return;
    }

    void moveToNoCheck(org.apache.xmlbeans.impl.store.Xobj, int)
    {
        org.apache.xmlbeans.impl.store.Xobj r1, $r2, $r3, $r5;
        int $i0, i1;
        org.apache.xmlbeans.impl.store.Locale $r7, $r9;
        org.apache.xmlbeans.impl.store.Cur r0, $r4, $r6, $r8, $r10;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        i1 := @parameter1: int;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i0 != 2 goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if r1 == $r2 goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r4 = $r3.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur listRemove(org.apache.xmlbeans.impl.store.Cur)>($r4);

        $r5.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded> = $r6;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r8 = $r7.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered>;

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur listInsert(org.apache.xmlbeans.impl.store.Cur)>($r8);

        $r9.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered> = $r10;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _state> = 1;

     label1:
        r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj> = r1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _pos> = i1;

        return;
    }

    void moveToCur(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Xobj $r2;
        int $i0, $i2;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r1 := @this: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z1 == 0 goto label1;

        if r0 == null goto label2;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z2 != 0 goto label2;

     label1:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        if r0 != null goto label3;

        $i2 = (int) -2;

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>(null, $i2);

        goto label4;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r2, $i0);

     label4:
        return;
    }

    void moveToDom(org.apache.xmlbeans.impl.store.DomImpl$Dom)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom r1;
        org.apache.xmlbeans.impl.store.Xobj$SoapPartDom $r2;
        java.lang.AssertionError $r3, $r6;
        org.apache.xmlbeans.impl.store.Xobj $r7;
        org.apache.xmlbeans.impl.store.Locale $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.DomImpl$Dom;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.impl.store.DomImpl$Dom: org.apache.xmlbeans.impl.store.Locale locale()>();

        if $r4 == $r5 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = r1 instanceof org.apache.xmlbeans.impl.store.Xobj;

        if $z2 != 0 goto label2;

        $z3 = r1 instanceof org.apache.xmlbeans.impl.store.Xobj$SoapPartDom;

        if $z3 != 0 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $z4 = r1 instanceof org.apache.xmlbeans.impl.store.Xobj;

        if $z4 == 0 goto label3;

        $r7 = (org.apache.xmlbeans.impl.store.Xobj) r1;

        goto label4;

     label3:
        $r2 = (org.apache.xmlbeans.impl.store.Xobj$SoapPartDom) r1;

        $r7 = $r2.<org.apache.xmlbeans.impl.store.Xobj$SoapPartDom: org.apache.xmlbeans.impl.store.Xobj$SoapPartDocXobj _docXobj>;

     label4:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r7);

        return;
    }

    void push()
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r2, $r4;
        java.lang.AssertionError $r5;
        org.apache.xmlbeans.impl.store.Locale $r1, $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur$Locations: int allocate(org.apache.xmlbeans.impl.store.Cur)>(r0);

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r4 = $r3.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i3 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur$Locations: int insert(int,int,int)>($i2, $i1, $i0);

        r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop> = $i3;

        return;
    }

    void pop(boolean)
    {
        boolean z0;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void popButStay()>();

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

     label2:
        return;
    }

    void popButStay()
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r2;
        int $i0, $i1, $i2, $i3, $i5;
        org.apache.xmlbeans.impl.store.Locale $r1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i5 = (int) -1;

        if $i0 == $i5 goto label1;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur$Locations: int remove(int,int)>($i2, $i1);

        r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop> = $i3;

     label1:
        return;
    }

    boolean pop()
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        org.apache.xmlbeans.impl.store.Locale $r1, $r3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur$Locations: void moveTo(int,org.apache.xmlbeans.impl.store.Cur)>($i1, r0);

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r4 = $r3.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i4 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur$Locations: int remove(int,int)>($i3, $i2);

        r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop> = $i4;

        return 1;
    }

    boolean isAtLastPush()
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r2;
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Locale $r1;
        int $i0, $i1, $i3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i3 = (int) -1;

        if $i1 != $i3 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $z1 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur$Locations: boolean isSamePos(int,org.apache.xmlbeans.impl.store.Cur)>($i0, r0);

        return $z1;
    }

    boolean isAtEndOfLastPush()
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r2;
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Locale $r1;
        int $i0, $i1, $i3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i3 = (int) -1;

        if $i1 != $i3 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $z1 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur$Locations: boolean isAtEndOf(int,org.apache.xmlbeans.impl.store.Cur)>($i0, r0);

        return $z1;
    }

    void addToSelection(org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r3, $r5;
        java.lang.AssertionError $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Locale $r1, $r4;
        org.apache.xmlbeans.impl.store.Cur r0, r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if r2 == null goto label1;

        $z4 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z4 != 0 goto label2;

     label1:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z3 != 0 goto label4;

     label3:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label4:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r3 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i0 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur$Locations: int allocate(org.apache.xmlbeans.impl.store.Cur)>(r2);

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r5 = $r4.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionFirst>;

        $i6 = (int) -1;

        $i2 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Cur$Locations: int insert(int,int,int)>($i1, $i6, $i0);

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionFirst> = $i2;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount> = $i4;

        return;
    }

    void addToSelection()
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r2, $r4;
        java.lang.AssertionError $r6;
        org.apache.xmlbeans.impl.store.Locale $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur$Locations: int allocate(org.apache.xmlbeans.impl.store.Cur)>(r0);

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r4 = $r3.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionFirst>;

        $i6 = (int) -1;

        $i2 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur$Locations: int insert(int,int,int)>($i1, $i6, $i0);

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionFirst> = $i2;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount> = $i4;

        return;
    }

    private int selectionIndex(int)
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r2, $r4;
        java.lang.AssertionError $r6;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i19;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Locale $r1, $r3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        i1 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i13 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN>;

        $i17 = (int) -1;

        if $i13 < $i17 goto label1;

        if i1 < 0 goto label1;

        $i14 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount>;

        if i1 < $i14 goto label2;

     label1:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN>;

        $i19 = (int) -1;

        if $i0 != $i19 goto label3;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN> = 0;

        $i12 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionFirst>;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionLoc> = $i12;

     label3:
        $i15 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN>;

        if $i15 >= i1 goto label4;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r4 = $r3.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i8 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionLoc>;

        $i9 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur$Locations: int next(int)>($i8);

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionLoc> = $i9;

        $i10 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN>;

        $i11 = $i10 + 1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN> = $i11;

        goto label3;

     label4:
        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN>;

        if $i2 <= i1 goto label5;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i4 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionLoc>;

        $i5 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur$Locations: int prev(int)>($i4);

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionLoc> = $i5;

        $i6 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN>;

        $i7 = $i6 - 1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN> = $i7;

        goto label4;

     label5:
        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionLoc>;

        return $i3;
    }

    void removeSelection(int)
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r2, $r5;
        java.lang.AssertionError $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Locale $r1, $r4;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i0 < 0 goto label1;

        $i10 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount>;

        if i0 < $i10 goto label2;

     label1:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        $i1 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int selectionIndex(int)>(i0);

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN>;

        if i0 >= $i2 goto label3;

        $i8 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN>;

        $i9 = $i8 - 1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN> = $i9;

        goto label5;

     label3:
        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN>;

        if i0 != $i3 goto label5;

        $i4 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN>;

        $i5 = $i4 - 1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionN> = $i5;

        if i0 != 0 goto label4;

        $i16 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionLoc> = $i16;

        goto label5;

     label4:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i6 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionLoc>;

        $i7 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur$Locations: int prev(int)>($i6);

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionLoc> = $i7;

     label5:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r5 = $r4.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i11 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionFirst>;

        $i12 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Cur$Locations: int remove(int,int)>($i11, $i1);

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionFirst> = $i12;

        $i13 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount>;

        $i14 = $i13 - 1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount> = $i14;

        return;
    }

    int selectionCount()
    {
        int $i0;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount>;

        return $i0;
    }

    void moveToSelection(int)
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r2;
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Locale $r1;
        int i0, $i1, $i2;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i0 < 0 goto label1;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount>;

        if i0 < $i2 goto label2;

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        $i1 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int selectionIndex(int)>(i0);

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur$Locations: void moveTo(int,org.apache.xmlbeans.impl.store.Cur)>($i1, r0);

        return;
    }

    void clearSelection()
    {
        int $i0, $i1;
        java.lang.AssertionError $r1;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount>;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _selectionCount>;

        if $i1 <= 0 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void removeSelection(int)>(0);

        goto label1;

     label2:
        return;
    }

    boolean toParent()
    {
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParent(boolean)>(0);

        return $z0;
    }

    boolean toParentRaw()
    {
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParent(boolean)>(1);

        return $z0;
    }

    org.apache.xmlbeans.impl.store.Xobj getParent()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getParent(boolean)>(0);

        return $r1;
    }

    org.apache.xmlbeans.impl.store.Xobj getParentRaw()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getParent(boolean)>(1);

        return $r1;
    }

    boolean hasParent()
    {
        java.lang.AssertionError $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, $r4, $r6, $r7;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z2 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i6 = (int) -1;

        if $i0 == $i6 goto label2;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i1 < 1 goto label3;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i4 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        if $i3 >= $i4 goto label3;

     label2:
        return 1;

     label3:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i2 == 0 goto label4;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r2 != null goto label4;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label4:
        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r7 = $r6.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r7 == null goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        return $z3;
    }

    org.apache.xmlbeans.impl.store.Xobj getParentNoRoot()
    {
        java.lang.AssertionError $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, $r3, $r4, $r5, $r7, $r9, $r10;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z2 != 0 goto label1;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i6 = (int) -1;

        if $i0 == $i6 goto label2;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i1 < 1 goto label3;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i4 = virtualinvoke $r7.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        if $i3 >= $i4 goto label3;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        return $r1;

     label3:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i2 == 0 goto label4;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r5 = $r4.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r5 != null goto label4;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label4:
        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r10 = $r9.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r10 == null goto label5;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = $r2.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        return $r3;

     label5:
        return null;
    }

    org.apache.xmlbeans.impl.store.Xobj getParent(boolean)
    {
        java.lang.AssertionError $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0, $z1, z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, r5, $r6, $r7, $r8, $r9, $r11, $r13, $r14;
        org.apache.xmlbeans.impl.store.Locale $r3;
        org.apache.xmlbeans.impl.store.Cur r0, $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        z2 := @parameter0: boolean;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z4 != 0 goto label1;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i6 = (int) -1;

        if $i0 == $i6 goto label2;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i1 < 1 goto label3;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r11 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i4 = virtualinvoke $r11.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        if $i3 >= $i4 goto label3;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        return $r1;

     label3:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i2 == 0 goto label4;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r9 = $r8.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r9 != null goto label4;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label4:
        $r13 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r14 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r14 == null goto label5;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r7 = $r6.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        return $r7;

     label5:
        if z2 != 0 goto label6;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: boolean isRoot()>();

        if $z3 == 0 goto label7;

     label6:
        return null;

     label7:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur tempCur()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: void createRoot()>();

        r5 = $r4.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveNode(org.apache.xmlbeans.impl.store.Cur)>($r4);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        return r5;
    }

    boolean toParent(boolean)
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getParent(boolean)>(z0);

        if $r1 != null goto label1;

        return 0;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r1);

        return 1;
    }

    void toRoot()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1, r4, r5;
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.impl.store.Cur r0, $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r5 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

     label1:
        $z0 = virtualinvoke r5.<org.apache.xmlbeans.impl.store.Xobj: boolean isRoot()>();

        if $z0 != 0 goto label3;

        $r1 = r5.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r1 != null goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur tempCur()>();

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: void createRoot()>();

        r4 = $r3.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveNode(org.apache.xmlbeans.impl.store.Cur)>($r3);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        r5 = r4;

        goto label3;

     label2:
        r5 = r5.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        goto label1;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>(r5);

        return;
    }

    boolean hasText()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        java.lang.AssertionError $r2;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z2 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean hasTextEnsureOccupancy()>();

        return $z1;
    }

    boolean hasAttrs()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        java.lang.AssertionError $r2;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z2 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean hasAttrs()>();

        return $z1;
    }

    boolean hasChildren()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        java.lang.AssertionError $r2;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z2 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean hasChildren()>();

        return $z1;
    }

    boolean toFirstChild()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, r4;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z3 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean hasChildren()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        r4 = $r2.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _firstChild>;

     label3:
        $z2 = virtualinvoke r4.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z2 != 0 goto label4;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>(r4);

        return 1;

     label4:
        r4 = r4.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        goto label3;
    }

    protected boolean toLastChild()
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, $r3;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z2 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean hasChildren()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = $r2.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _lastChild>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r3);

        return 1;
    }

    boolean toNextSibling()
    {
        java.lang.AssertionError $r12;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z3 != 0 goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z1 == 0 goto label2;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r7 = $r6.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        if $r7 == null goto label3;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r9 = $r8.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        $z2 = virtualinvoke $r9.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z2 == 0 goto label3;

        $r10 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r11 = $r10.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r11);

        return 1;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = $r2.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r5 = $r4.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r5);

        return 1;

     label3:
        return 0;
    }

    void setValueAsQName(javax.xml.namespace.QName)
    {
        java.lang.AssertionError $r10;
        java.lang.StringBuffer $r6, $r7, $r8, $r9;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r4, $r5, r11, $r12;
        boolean $z0, $z1;
        javax.xml.namespace.QName r0;
        org.apache.xmlbeans.impl.store.Cur r3;

        r3 := @this: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter0: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 != 0 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        r11 = $r1;

        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r12 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        goto label3;

     label2:
        $r12 = null;

     label3:
        $r5 = virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: java.lang.String prefixForNamespace(java.lang.String,java.lang.String,boolean)>($r2, $r12, 1);

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 <= 0 goto label4;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: void setValue(java.lang.String)>(r11);

        return;
    }

    void setValue(java.lang.String)
    {
        java.lang.String r1;
        java.lang.AssertionError $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveNodeContents(org.apache.xmlbeans.impl.store.Cur,boolean)>(null, 0);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void insertString(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

        return;
    }

    void removeFollowingAttrs()
    {
        java.lang.AssertionError $r3;
        javax.xml.namespace.QName $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z4 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toNextAttr()>();

        if $z1 == 0 goto label4;

     label2:
        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z5 == 0 goto label4;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        $z2 = virtualinvoke $r2.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label3;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveNode(org.apache.xmlbeans.impl.store.Cur)>(null);

        goto label2;

     label3:
        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toNextAttr()>();

        if $z3 != 0 goto label2;

        goto label4;

     label4:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return;
    }

    java.lang.String getAttrValue(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r1;
        java.lang.String r2;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 = null;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toAttr(javax.xml.namespace.QName)>(r1);

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getValueAsString()>();

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return r2;
    }

    void setAttrValueAsQName(javax.xml.namespace.QName, javax.xml.namespace.QName)
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Xobj $r3;
        javax.xml.namespace.QName r0, r2;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r1;

        r1 := @this: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter0: javax.xml.namespace.QName;

        r0 := @parameter1: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z2 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        if r0 != null goto label2;

        $r3 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: boolean removeAttr(javax.xml.namespace.QName)>(r2);

        goto label5;

     label2:
        $z1 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean toAttr(javax.xml.namespace.QName)>(r2);

        if $z1 == 0 goto label3;

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: void removeFollowingAttrs()>();

        goto label4;

     label3:
        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: void createAttr(javax.xml.namespace.QName)>(r2);

     label4:
        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: void setValueAsQName(javax.xml.namespace.QName)>(r0);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

     label5:
        return;
    }

    boolean removeAttr(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.store.Xobj $r2;
        javax.xml.namespace.QName r1;
        java.lang.AssertionError $r3;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z2 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: boolean removeAttr(javax.xml.namespace.QName)>(r1);

        return $z1;
    }

    void setAttrValue(javax.xml.namespace.QName, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Xobj $r3;
        javax.xml.namespace.QName r1;
        java.lang.String r2;
        java.lang.AssertionError $r4;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z1 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj setAttr(javax.xml.namespace.QName,java.lang.String)>(r1, r2);

        return;
    }

    boolean toAttr(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.store.Xobj $r2, $r3;
        javax.xml.namespace.QName r1;
        java.lang.AssertionError $r4;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj getAttr(javax.xml.namespace.QName)>(r1);

        if $r3 != null goto label2;

        return 0;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r3);

        return 1;
    }

    boolean toFirstAttr()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj firstAttr()>();

        if $r2 != null goto label2;

        return 0;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r2);

        return 1;
    }

    boolean toLastAttr()
    {
        java.lang.AssertionError $r1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z3 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toFirstAttr()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toNextAttr()>();

        if $z2 == 0 goto label3;

        goto label2;

     label3:
        return 1;
    }

    boolean toNextAttr()
    {
        org.apache.xmlbeans.impl.store.Xobj $r2, $r3;
        java.lang.AssertionError $r1;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z2 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj nextAttr()>();

        if $r3 != null goto label2;

        return 0;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r3);

        return 1;
    }

    boolean toPrevAttr()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _prevSibling>;

        if $r2 != null goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj ensureParent()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r6);

        goto label2;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r4 = $r3.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _prevSibling>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r4);

     label2:
        return 1;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean prev()>();

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z1 != 0 goto label4;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        return 0;

     label4:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toLastAttr()>();

        return $z2;
    }

    boolean skipWithAttrs()
    {
        java.lang.AssertionError $r3, $r4;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z5 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean skip()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isRoot()>();

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $z3 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z3 != 0 goto label4;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z4 != 0 goto label4;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        return 1;
    }

    boolean skip()
    {
        java.lang.AssertionError $r12;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z4 != 0 goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isRoot()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z2 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z2 == 0 goto label5;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r7 = $r6.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        if $r7 == null goto label3;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r9 = $r8.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        $z3 = virtualinvoke $r9.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z3 != 0 goto label4;

     label3:
        return 0;

     label4:
        $r10 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r11 = $r10.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r11, 0);

        goto label6;

     label5:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        $r5 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getNormal(org.apache.xmlbeans.impl.store.Xobj,int)>($r4, $i0);

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r5, $i1);

     label6:
        return 1;
    }

    void toEnd()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i1;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = (int) -1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r1, $i1);

        return;
    }

    void moveToCharNode(org.apache.xmlbeans.impl.store.DomImpl$CharNode)
    {
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2, $r24, $r26;
        org.apache.xmlbeans.impl.store.DomImpl$CharNode r1, $r6, $r10, $r13, $r17, r29, r30;
        java.lang.AssertionError $r18, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.xmlbeans.impl.store.Xobj $r3, $r4, $r5, $r7, $r9, $r11, $r12, $r14, $r16, $r19, $r20, $r21, $r22, $r23;
        org.apache.xmlbeans.impl.store.Locale $r8, $r15, $r27, $r28;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.DomImpl$CharNode;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r24 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()>();

        if $r24 == null goto label1;

        $r26 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()>();

        $r27 = interfaceinvoke $r26.<org.apache.xmlbeans.impl.store.DomImpl$Dom: org.apache.xmlbeans.impl.store.Locale locale()>();

        $r28 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        if $r27 == $r28 goto label2;

     label1:
        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label2:
        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveToDom(org.apache.xmlbeans.impl.store.DomImpl$Dom)>($r2);

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: void ensureOccupancy()>();

        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r6 = $r4.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesValue>;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = $r5.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        $r10 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.DomImpl$CharNode updateCharNodes(org.apache.xmlbeans.impl.store.Locale,org.apache.xmlbeans.impl.store.Xobj,org.apache.xmlbeans.impl.store.DomImpl$CharNode,int)>($r8, $r7, $r6, $i0);

        $r9.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesValue> = $r10;

        r29 = $r10;

     label3:
        if r29 == null goto label5;

        if r1 != r29 goto label4;

        $r22 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i7 = r29.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _off>;

        $i8 = $i7 + 1;

        $r23 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getNormal(org.apache.xmlbeans.impl.store.Xobj,int)>($r22, $i8);

        $i9 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r23, $i9);

        return;

     label4:
        r29 = r29.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$CharNode _next>;

        goto label3;

     label5:
        $r16 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r15 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r14 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r11 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r13 = $r11.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesAfter>;

        $r12 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = $r12.<org.apache.xmlbeans.impl.store.Xobj: int _cchAfter>;

        $r17 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.DomImpl$CharNode updateCharNodes(org.apache.xmlbeans.impl.store.Locale,org.apache.xmlbeans.impl.store.Xobj,org.apache.xmlbeans.impl.store.DomImpl$CharNode,int)>($r15, $r14, $r13, $i1);

        $r16.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesAfter> = $r17;

        r30 = $r17;

     label6:
        if r30 == null goto label8;

        if r1 != r30 goto label7;

        $r20 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i3 = r30.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _off>;

        $r19 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i2 = $r19.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        $i4 = $i3 + $i2;

        $i5 = $i4 + 2;

        $r21 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getNormal(org.apache.xmlbeans.impl.store.Xobj,int)>($r20, $i5);

        $i6 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r21, $i6);

        return;

     label7:
        r30 = r30.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$CharNode _next>;

        goto label6;

     label8:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label9;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label9:
        return;
    }

    boolean prevWithAttrs()
    {
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean prev()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

        return 1;
    }

    boolean prev()
    {
        byte $b8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xmlbeans.impl.store.Cur r0;
        java.lang.AssertionError $r13, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i9, $i11, $i13;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, $r4, $r5, $r7, $r8, $r10, r11, $r12;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z6 != 0 goto label01;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label01:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isRoot()>();

        if $z1 == 0 goto label02;

        $i5 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i5 != 0 goto label02;

        return 0;

     label02:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z2 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z2 == 0 goto label03;

        $i4 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i4 != 0 goto label03;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r8 = $r7.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _prevSibling>;

        if $r8 != null goto label03;

        return 0;

     label03:
        $r10 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getDenormal()>();

        r11 = $r10;

        $i6 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        $z7 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z7 != 0 goto label05;

        if $i6 <= 0 goto label04;

        $i11 = (int) -1;

        if $i6 != $i11 goto label05;

     label04:
        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label05:
        $i0 = virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        if $i6 <= $i0 goto label06;

        i7 = $i0;

        goto label15;

     label06:
        if $i6 != $i0 goto label09;

        $z4 = virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z4 == 0 goto label08;

        $i3 = $r10.<org.apache.xmlbeans.impl.store.Xobj: int _cchAfter>;

        if $i3 > 0 goto label07;

        $r4 = $r10.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        if $r4 == null goto label07;

        $r5 = $r10.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        $z5 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z5 != 0 goto label08;

     label07:
        r11 = virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj ensureParent()>();

        i7 = 0;

        goto label15;

     label08:
        $i13 = (int) -1;

        i7 = $i13;

        goto label15;

     label09:
        $i1 = $i0 - 1;

        if $i6 != $i1 goto label12;

        virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Xobj: void ensureOccupancy()>();

        $i2 = $r10.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        if $i2 <= 0 goto label10;

        $b8 = 1;

        goto label11;

     label10:
        $b8 = 0;

     label11:
        i7 = $b8;

        goto label15;

     label12:
        if $i6 <= 1 goto label13;

        i7 = 1;

        goto label15;

     label13:
        $z3 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z3 != 0 goto label14;

        if $i6 == 1 goto label14;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label14:
        i7 = 0;

     label15:
        $r12 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getNormal(org.apache.xmlbeans.impl.store.Xobj,int)>(r11, i7);

        $i9 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r12, $i9);

        return 1;
    }

    boolean next(boolean)
    {
        boolean z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean nextWithAttrs()>();

        goto label2;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

     label2:
        return $z1;
    }

    boolean nextWithAttrs()
    {
        int $i0, $i2;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        $z0 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: boolean kindIsContainer(int)>($i0);

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toFirstAttr()>();

        if $z3 == 0 goto label3;

        return 1;

     label1:
        $i2 = (int) -3;

        if $i0 != $i2 goto label3;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParentRaw()>();

        if $z2 != 0 goto label3;

        return 0;

     label3:
        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        return $z4;
    }

    boolean next()
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.xmlbeans.impl.store.Cur r0;
        java.lang.AssertionError $r19, $r20, $r21;
        int $i0, $i1, $i2, $i3, i4, $i5, $i7, $i9;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, r15, $r16, r17, $r18;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z9 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z9 != 0 goto label01;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label01:
        $r13 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        r15 = $r13;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i0 = virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        if $i3 < $i0 goto label02;

        $r12 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        i4 = virtualinvoke $r12.<org.apache.xmlbeans.impl.store.Xobj: int posMax()>();

        goto label15;

     label02:
        $i7 = (int) -1;

        if $i3 != $i7 goto label05;

        $z6 = virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Xobj: boolean isRoot()>();

        if $z6 != 0 goto label03;

        $z7 = virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z7 == 0 goto label04;

        $r10 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        if $r10 == null goto label03;

        $r11 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        $z8 = virtualinvoke $r11.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z8 != 0 goto label04;

     label03:
        return 0;

     label04:
        i4 = $i0;

        goto label15;

     label05:
        if $i3 <= 0 goto label08;

        $z4 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z4 != 0 goto label06;

        $r7 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _firstChild>;

        if $r7 == null goto label06;

        $r8 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _firstChild>;

        $z5 = virtualinvoke $r8.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z5 == 0 goto label06;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label06:
        $r16 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _firstChild>;

        if $r16 == null goto label07;

        r15 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _firstChild>;

        i4 = 0;

        goto label15;

     label07:
        $i9 = (int) -1;

        i4 = $i9;

        goto label15;

     label08:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label09;

        if $i3 == 0 goto label09;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label09:
        virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Xobj: void ensureOccupancy()>();

        i4 = 1;

        $i1 = $r13.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        if $i1 != 0 goto label15;

        $r1 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _firstChild>;

        if $r1 == null goto label15;

        $r2 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _firstChild>;

        $z2 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z2 == 0 goto label14;

        r17 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _firstChild>;

     label10:
        $r3 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        if $r3 == null goto label11;

        $r5 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        $z3 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z3 == 0 goto label11;

        r17 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        goto label10;

     label11:
        $i2 = r17.<org.apache.xmlbeans.impl.store.Xobj: int _cchAfter>;

        if $i2 <= 0 goto label12;

        r15 = r17;

        i4 = virtualinvoke r17.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        goto label13;

     label12:
        $r4 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        if $r4 == null goto label13;

        r15 = r17.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        i4 = 0;

     label13:
        goto label15;

     label14:
        r15 = $r13.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _firstChild>;

        i4 = 0;

     label15:
        $r18 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getNormal(org.apache.xmlbeans.impl.store.Xobj,int)>(r15, i4);

        $i5 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r18, $i5);

        return 1;
    }

    int prevChars(int)
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2;
        int $i0, $i1, $i2, $i3, i4;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        i4 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchLeft()>();

        if i4 < 0 goto label2;

        if i4 <= $i0 goto label3;

     label2:
        i4 = $i0;

     label3:
        if i4 == 0 goto label4;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getDenormal()>();

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        $i2 = $i1 - i4;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getNormal(org.apache.xmlbeans.impl.store.Xobj,int)>($r1, $i2);

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r2, $i3);

     label4:
        return i4;
    }

    int nextChars(int)
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2;
        int $i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        i1 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchRight()>();

        if $i0 != 0 goto label2;

        return 0;

     label2:
        if i1 < 0 goto label3;

        if i1 < $i0 goto label4;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        return $i0;

     label4:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i3 = $i2 + i1;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getNormal(org.apache.xmlbeans.impl.store.Xobj,int)>($r1, $i3);

        $i4 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r2, $i4);

        return i1;
    }

    void setCharNodes(org.apache.xmlbeans.impl.store.DomImpl$CharNode)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2;
        java.lang.AssertionError $r3, $r4, $r7;
        org.apache.xmlbeans.impl.store.DomImpl$CharNode r8;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Locale $r5, $r6;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r8 := @parameter0: org.apache.xmlbeans.impl.store.DomImpl$CharNode;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r8 == null goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r6 = virtualinvoke r8.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.Locale locale()>();

        if $r5 == $r6 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $z4 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z4 != 0 goto label2;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z3 != 0 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getDenormal()>();

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isRoot()>();

        if $z2 == 0 goto label4;

        if $i1 <= 0 goto label3;

        $i0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        if $i1 < $i0 goto label4;

     label3:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        $i2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        if $i1 < $i2 goto label5;

        $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesAfter> = r8;

        goto label6;

     label5:
        $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesValue> = r8;

     label6:
        if r8 == null goto label7;

        $r2 = (org.apache.xmlbeans.impl.store.DomImpl$Dom) $r1;

        virtualinvoke r8.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: void setDom(org.apache.xmlbeans.impl.store.DomImpl$Dom)>($r2);

        r8 = r8.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$CharNode _next>;

        goto label6;

     label7:
        return;
    }

    org.apache.xmlbeans.impl.store.DomImpl$CharNode getCharNodes()
    {
        org.apache.xmlbeans.impl.store.DomImpl$CharNode $r2, $r4, $r5, $r7, r10;
        java.lang.AssertionError $r8, $r9;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Locale $r3, $r6;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z3 != 0 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z2 == 0 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getDenormal()>();

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        if $i0 < $i1 goto label3;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r5 = $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesAfter>;

        $i3 = $r1.<org.apache.xmlbeans.impl.store.Xobj: int _cchAfter>;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.DomImpl$CharNode updateCharNodes(org.apache.xmlbeans.impl.store.Locale,org.apache.xmlbeans.impl.store.Xobj,org.apache.xmlbeans.impl.store.DomImpl$CharNode,int)>($r6, $r1, $r5, $i3);

        $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesAfter> = $r7;

        r10 = $r7;

        goto label4;

     label3:
        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: void ensureOccupancy()>();

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesValue>;

        $i2 = $r1.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.DomImpl$CharNode updateCharNodes(org.apache.xmlbeans.impl.store.Locale,org.apache.xmlbeans.impl.store.Xobj,org.apache.xmlbeans.impl.store.DomImpl$CharNode,int)>($r3, $r1, $r2, $i2);

        $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesValue> = $r4;

        r10 = $r4;

     label4:
        return r10;
    }

    static org.apache.xmlbeans.impl.store.DomImpl$CharNode updateCharNodes(org.apache.xmlbeans.impl.store.Locale, org.apache.xmlbeans.impl.store.Xobj, org.apache.xmlbeans.impl.store.DomImpl$CharNode, int)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r3, $r4, $r6;
        java.lang.AssertionError $r5, $r7, $r9;
        org.apache.xmlbeans.impl.store.DomImpl$CharNode r10, r11;
        int $i0, $i1, $i2, $i3, i4, i5;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Xobj r2;
        org.apache.xmlbeans.impl.store.Locale r0, $r8;
        org.apache.xmlbeans.impl.store.DomImpl$TextNode $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Locale;

        r2 := @parameter1: org.apache.xmlbeans.impl.store.Xobj;

        r10 := @parameter2: org.apache.xmlbeans.impl.store.DomImpl$CharNode;

        i4 := @parameter3: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if r10 == null goto label01;

        $r8 = virtualinvoke r10.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.Locale locale()>();

        if $r8 == r0 goto label01;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label01:
        r11 = r10;

        i5 = 0;

     label02:
        if r11 == null goto label05;

        if i4 <= 0 goto label05;

        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $r6 = virtualinvoke r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()>();

        if $r6 == r2 goto label03;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label03:
        $i1 = r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _cch>;

        if $i1 <= i4 goto label04;

        r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _cch> = i4;

     label04:
        r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _off> = i5;

        $i2 = r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _cch>;

        i5 = i5 + $i2;

        $i3 = r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _cch>;

        i4 = i4 - $i3;

        r11 = r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$CharNode _next>;

        goto label02;

     label05:
        if i4 > 0 goto label09;

     label06:
        if r11 == null goto label10;

        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label07;

        $r4 = virtualinvoke r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()>();

        if $r4 == r2 goto label07;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label07:
        $i0 = r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _cch>;

        if $i0 == 0 goto label08;

        r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _cch> = 0;

     label08:
        r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _off> = i5;

        r11 = r11.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$CharNode _next>;

        goto label06;

     label09:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$TextNode createTextNode()>();

        $r3 = (org.apache.xmlbeans.impl.store.DomImpl$Dom) r2;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: void setDom(org.apache.xmlbeans.impl.store.DomImpl$Dom)>($r3);

        $r1.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _cch> = i4;

        $r1.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _off> = i5;

        r10 = staticinvoke <org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$CharNode appendNode(org.apache.xmlbeans.impl.store.DomImpl$CharNode,org.apache.xmlbeans.impl.store.DomImpl$CharNode)>(r10, $r1);

     label10:
        return r10;
    }

    final javax.xml.namespace.QName getXsiTypeName()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        javax.xml.namespace.QName $r2;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: javax.xml.namespace.QName getXsiTypeName()>();

        return $r2;
    }

    final void setXsiType(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r1, $r2;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiType>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void setAttrValueAsQName(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r2, r1);

        return;
    }

    final javax.xml.namespace.QName valueAsQName()
    {
        java.lang.RuntimeException $r0;
        org.apache.xmlbeans.impl.store.Cur r1;

        r1 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented");

        throw $r0;
    }

    final java.lang.String namespaceForPrefix(java.lang.String, boolean)
    {
        org.apache.xmlbeans.impl.store.Xobj $r2;
        java.lang.String r1, $r3;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: java.lang.String namespaceForPrefix(java.lang.String,boolean)>(r1, z0);

        return $r3;
    }

    final java.lang.String prefixForNamespace(java.lang.String, java.lang.String, boolean)
    {
        org.apache.xmlbeans.impl.store.Xobj $r4;
        java.lang.String r1, r2, $r3;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, z1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getParent()>();

     label2:
        $r3 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Xobj: java.lang.String prefixForNamespace(java.lang.String,java.lang.String,boolean)>(r1, r2, z1);

        return $r3;
    }

    boolean contains(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r3, $r4;
        org.apache.xmlbeans.impl.store.Xobj $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z4 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        if r1 == null goto label2;

        $z3 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z3 != 0 goto label3;

     label2:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z2 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: boolean contains(org.apache.xmlbeans.impl.store.Cur)>(r1);

        return $z2;
    }

    void insertString(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        org.apache.xmlbeans.impl.store.Cur r1;

        r1 := @this: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: void insertChars(java.lang.Object,int,int)>(r0, 0, $i0);

     label1:
        return;
    }

    void insertChars(java.lang.Object, int, int)
    {
        long $l3, $l4;
        java.lang.AssertionError $r9, $r10, $r11;
        int i0, $i1, i2, $i5, $i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.store.Xobj $r2, $r6;
        org.apache.xmlbeans.impl.store.Locale $r1, $r4;
        java.lang.Object r3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r3 := @parameter0: java.lang.Object;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z4 == 0 goto label1;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z5 == 0 goto label2;

     label1:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label2:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>(r3, i2, i0);

        if $z3 != 0 goto label3;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label3:
        if i0 > 0 goto label4;

        return;

     label4:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Locale: void notifyChange()>();

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i7 = (int) -1;

        if $i1 != $i7 goto label5;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Xobj: void ensureOccupancy()>();

     label5:
        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getDenormal()>();

        $i5 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label6;

        if $i5 > 0 goto label6;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label6:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: void insertCharsHelper(int,java.lang.Object,int,int,boolean)>($i5, r3, i2, i0, 1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r2, $i5);

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l3 = $r4.<org.apache.xmlbeans.impl.store.Locale: long _versionAll>;

        $l4 = $l3 + 1L;

        $r4.<org.apache.xmlbeans.impl.store.Locale: long _versionAll> = $l4;

        return;
    }

    java.lang.Object moveChars(org.apache.xmlbeans.impl.store.Cur, int)
    {
        org.apache.xmlbeans.impl.store.Xobj$Bookmark r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.xmlbeans.impl.store.Cur r0, r2, $r10;
        long $l3, $l4;
        java.lang.AssertionError $r20, $r21, $r22, $r23;
        int i0, $i1, $i2, $i5, $i6, $i7, $i8, i9, $i11;
        org.apache.xmlbeans.impl.store.Xobj $r4, $r5, $r7, $r8, $r13, $r14, $r18;
        org.apache.xmlbeans.impl.store.Locale $r3, $r6, $r9;
        java.lang.Object $r1, $r11;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        i9 := @parameter1: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z9 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z9 != 0 goto label01;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label01:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        if i9 <= 0 goto label02;

        $i8 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchRight()>();

        if i9 <= $i8 goto label02;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label02:
        $z10 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z10 != 0 goto label04;

        if r2 == null goto label04;

        $z7 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z7 == 0 goto label03;

        $z8 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z8 == 0 goto label04;

     label03:
        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label04:
        if i9 >= 0 goto label05;

        i9 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchRight()>();

     label05:
        if i9 != 0 goto label06;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _offSrc> = 0;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc> = 0;

        return null;

     label06:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object getChars(int)>(i9);

        i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _offSrc>;

        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label10;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z5 == 0 goto label09;

        $i6 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r13 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i7 = virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        if $i6 < $i7 goto label07;

        $r14 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r18 = $r14.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        goto label08;

     label07:
        $r18 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

     label08:
        $z6 = virtualinvoke $r18.<org.apache.xmlbeans.impl.store.Xobj: boolean isOccupied()>();

        if $z6 != 0 goto label10;

     label09:
        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label10:
        if r2 != null goto label14;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        r19 = $r8.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj$Bookmark _bookmarks>;

     label11:
        if r19 == null goto label13;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean inChars(org.apache.xmlbeans.impl.store.Xobj$Bookmark,int,boolean)>(r19, i9, 0);

        if $z4 == 0 goto label12;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r10 = virtualinvoke $r9.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur tempCur()>();

        virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Cur: void createRoot()>();

        virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object moveChars(org.apache.xmlbeans.impl.store.Cur,int)>($r10, i9);

        virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        return $r11;

     label12:
        r19 = r19.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: org.apache.xmlbeans.impl.store.Xobj$Bookmark _next>;

        goto label11;

     label13:
        goto label16;

     label14:
        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean inChars(org.apache.xmlbeans.impl.store.Cur,int,boolean)>(r2, i9, 1);

        if $z3 == 0 goto label15;

        virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: void moveToCur(org.apache.xmlbeans.impl.store.Cur)>(r0);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int nextChars(int)>(i9);

        r0.<org.apache.xmlbeans.impl.store.Cur: int _offSrc> = i0;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc> = i9;

        return $r1;

     label15:
        virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: void insertChars(java.lang.Object,int,int)>($r1, i0, i9);

     label16:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale: void notifyChange()>();

        if r2 != null goto label17;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i5 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i11 = (int) -2;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.store.Xobj: void removeCharsHelper(int,int,org.apache.xmlbeans.impl.store.Xobj,int,boolean,boolean)>($i5, i9, null, $i11, 0, 1);

        goto label18;

     label17:
        $r5 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r4 = r2.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = r2.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Xobj: void removeCharsHelper(int,int,org.apache.xmlbeans.impl.store.Xobj,int,boolean,boolean)>($i2, i9, $r4, $i1, 0, 1);

     label18:
        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l3 = $r6.<org.apache.xmlbeans.impl.store.Locale: long _versionAll>;

        $l4 = $l3 + 1L;

        $r6.<org.apache.xmlbeans.impl.store.Locale: long _versionAll> = $l4;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _offSrc> = i0;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc> = i9;

        return $r1;
    }

    void moveNode(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.xmlbeans.impl.store.Xobj $r6;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z5 == 0 goto label1;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z6 == 0 goto label2;

     label1:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        if r1 == null goto label3;

        $z4 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z4 != 0 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label3:
        $z7 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z7 != 0 goto label4;

        if r1 == null goto label4;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean contains(org.apache.xmlbeans.impl.store.Cur)>(r1);

        if $z3 == 0 goto label4;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        $z8 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z8 != 0 goto label5;

        if r1 == null goto label5;

        $z2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z2 == 0 goto label5;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label5:
        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean skip()>();

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void moveNode(org.apache.xmlbeans.impl.store.Xobj,org.apache.xmlbeans.impl.store.Cur)>($r6, r1);

        return;
    }

    private static void transferChars(org.apache.xmlbeans.impl.store.Xobj, int, org.apache.xmlbeans.impl.store.Xobj, int, int)
    {
        java.lang.AssertionError $r2, $r3, $r4, $r5, $r8, $r9;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.impl.store.Xobj r0, r1;
        org.apache.xmlbeans.impl.store.Locale $r6, $r7, $r11, $r12;
        java.lang.Object $r10;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        i1 := @parameter1: int;

        r0 := @parameter2: org.apache.xmlbeans.impl.store.Xobj;

        i0 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != r0 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r7 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        if $r7 == $r6 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        if i1 <= 0 goto label3;

        $i6 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: int posMax()>();

        if i1 < $i6 goto label4;

     label3:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        $z3 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z3 != 0 goto label6;

        if i0 <= 0 goto label5;

        $i5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: int posMax()>();

        if i0 <= $i5 goto label6;

     label5:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label6:
        $z4 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z4 != 0 goto label8;

        if i2 <= 0 goto label7;

        $i4 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: int cchRight(int)>(i1);

        if i2 <= $i4 goto label8;

     label7:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label8:
        $z5 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z5 != 0 goto label9;

        $i3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        if i0 >= $i3 goto label9;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: boolean isOccupied()>();

        if $z6 != 0 goto label9;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label9:
        $r10 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: java.lang.Object getCharsHelper(int,int)>(i1, i2);

        $r11 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $i7 = $r11.<org.apache.xmlbeans.impl.store.Locale: int _offSrc>;

        $r12 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $i8 = $r12.<org.apache.xmlbeans.impl.store.Locale: int _cchSrc>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: void insertCharsHelper(int,java.lang.Object,int,int,boolean)>(i0, $r10, $i7, $i8, 0);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: void removeCharsHelper(int,int,org.apache.xmlbeans.impl.store.Xobj,int,boolean,boolean)>(i1, i2, r0, i0, 1, 0);

        return;
    }

    static void moveNode(org.apache.xmlbeans.impl.store.Xobj, org.apache.xmlbeans.impl.store.Cur)
    {
        long $l0, $l1, $l2, $l3, $l14, $l15, $l16, $l17;
        java.lang.AssertionError $r30, $r31, $r32, $r33, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14;
        org.apache.xmlbeans.impl.store.Cur r0, $r8, $r10;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i18, $i19, $i20, $i22;
        org.apache.xmlbeans.impl.store.Xobj r1, $r5, $r7, $r11, $r13, $r14, $r15, $r21, $r22, $r27, r28, r29;
        org.apache.xmlbeans.impl.store.Locale $r2, $r3, $r4, $r6, $r9, $r16, $r17, $r18, $r19, $r20;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        r0 := @parameter1: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        if r1 == null goto label01;

        $z8 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isRoot()>();

        if $z8 == 0 goto label02;

     label01:
        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label02:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        if r0 == null goto label03;

        $z7 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z7 != 0 goto label03;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label03:
        $z9 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z9 != 0 goto label04;

        if r0 == null goto label04;

        $z6 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: boolean contains(org.apache.xmlbeans.impl.store.Cur)>(r0);

        if $z6 == 0 goto label04;

        $r32 = new java.lang.AssertionError;

        specialinvoke $r32.<java.lang.AssertionError: void <init>()>();

        throw $r32;

     label04:
        $z10 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z10 != 0 goto label05;

        if r0 == null goto label05;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z5 == 0 goto label05;

        $r33 = new java.lang.AssertionError;

        specialinvoke $r33.<java.lang.AssertionError: void <init>()>();

        throw $r33;

     label05:
        if r0 == null goto label09;

        $i18 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i22 = (int) -1;

        if $i18 != $i22 goto label06;

        $r22 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        virtualinvoke $r22.<org.apache.xmlbeans.impl.store.Xobj: void ensureOccupancy()>();

     label06:
        $i19 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i19 != 0 goto label07;

        $r21 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r21 == r1 goto label08;

     label07:
        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isJustAfterEnd(org.apache.xmlbeans.impl.store.Xobj)>(r1);

        if $z4 == 0 goto label09;

     label08:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>(r1);

        return;

     label09:
        $r2 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void notifyChange()>();

        $r3 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l0 = $r3.<org.apache.xmlbeans.impl.store.Locale: long _versionAll>;

        $l1 = $l0 + 1L;

        $r3.<org.apache.xmlbeans.impl.store.Locale: long _versionAll> = $l1;

        $r4 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l2 = $r4.<org.apache.xmlbeans.impl.store.Locale: long _versionSansText>;

        $l3 = $l2 + 1L;

        $r4.<org.apache.xmlbeans.impl.store.Locale: long _versionSansText> = $l3;

        if r0 == null goto label10;

        $r17 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r16 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        if $r17 == $r16 goto label10;

        $r18 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r18.<org.apache.xmlbeans.impl.store.Locale: void notifyChange()>();

        $r19 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l14 = $r19.<org.apache.xmlbeans.impl.store.Locale: long _versionAll>;

        $l15 = $l14 + 1L;

        $r19.<org.apache.xmlbeans.impl.store.Locale: long _versionAll> = $l15;

        $r20 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l16 = $r20.<org.apache.xmlbeans.impl.store.Locale: long _versionSansText>;

        $l17 = $l16 + 1L;

        $r20.<org.apache.xmlbeans.impl.store.Locale: long _versionSansText> = $l17;

     label10:
        $z11 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z11 == 0 goto label13;

        if r0 != null goto label11;

        $r27 = null;

        goto label12;

     label11:
        $r27 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getParentRaw()>();

     label12:
        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: void invalidateSpecialAttr(org.apache.xmlbeans.impl.store.Xobj)>($r27);

        goto label15;

     label13:
        $r5 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r5 == null goto label14;

        $r15 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        virtualinvoke $r15.<org.apache.xmlbeans.impl.store.Xobj: void invalidateUser()>();

     label14:
        if r0 == null goto label15;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean hasParent()>();

        if $z3 == 0 goto label15;

        $r14 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getParent()>();

        virtualinvoke $r14.<org.apache.xmlbeans.impl.store.Xobj: void invalidateUser()>();

     label15:
        $i20 = r1.<org.apache.xmlbeans.impl.store.Xobj: int _cchAfter>;

        if $i20 <= 0 goto label16;

        $i11 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        $r13 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj getDenormal(int)>(0);

        $i12 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: int posTemp()>();

        $i13 = r1.<org.apache.xmlbeans.impl.store.Xobj: int _cchAfter>;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void transferChars(org.apache.xmlbeans.impl.store.Xobj,int,org.apache.xmlbeans.impl.store.Xobj,int,int)>(r1, $i11, $r13, $i12, $i13);

     label16:
        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label17;

        $i10 = r1.<org.apache.xmlbeans.impl.store.Xobj: int _cchAfter>;

        if $i10 == 0 goto label17;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label17:
        $r6 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Locale: void embedCurs()>();

        r28 = r1;

     label18:
        if r28 == null goto label22;

     label19:
        $r8 = r28.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded>;

        if $r8 == null goto label20;

        $r10 = r28.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded>;

        $i9 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        $r11 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj getNormal(int)>($i9);

        virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r11);

        goto label19;

     label20:
        virtualinvoke r28.<org.apache.xmlbeans.impl.store.Xobj: void disconnectUser()>();

        if r0 == null goto label21;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        r28.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale> = $r9;

     label21:
        r28 = virtualinvoke r28.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj walk(org.apache.xmlbeans.impl.store.Xobj,boolean)>(r1, 1);

        goto label18;

     label22:
        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj removeXobj()>();

        if r0 == null goto label31;

        r29 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i4 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i4 == 0 goto label23;

        $z12 = 1;

        goto label24;

     label23:
        $z12 = 0;

     label24:
        z13 = $z12;

        $i5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchRight()>();

        if $i5 <= 0 goto label27;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        r29 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i8 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i8 == 0 goto label25;

        $z14 = 1;

        goto label26;

     label25:
        $z14 = 0;

     label26:
        z13 = $z14;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

     label27:
        if z13 == 0 goto label28;

        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj appendXobj(org.apache.xmlbeans.impl.store.Xobj)>(r1);

        goto label29;

     label28:
        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj insertXobj(org.apache.xmlbeans.impl.store.Xobj)>(r1);

     label29:
        if $i5 <= 0 goto label30;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i6 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i7 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void transferChars(org.apache.xmlbeans.impl.store.Xobj,int,org.apache.xmlbeans.impl.store.Xobj,int,int)>($r7, $i6, r1, $i7, $i5);

     label30:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>(r1);

     label31:
        return;
    }

    void moveNodeContents(org.apache.xmlbeans.impl.store.Cur, boolean)
    {
        java.lang.AssertionError $r2, $r3;
        org.apache.xmlbeans.impl.store.Xobj $r4;
        int $i0;
        boolean $z0, $z1, z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        z2 := @parameter1: boolean;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i0 == 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if r1 == null goto label2;

        $z3 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z3 == 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void moveNodeContents(org.apache.xmlbeans.impl.store.Xobj,org.apache.xmlbeans.impl.store.Cur,boolean)>($r4, r1, z2);

        return;
    }

    static void moveNodeContents(org.apache.xmlbeans.impl.store.Xobj, org.apache.xmlbeans.impl.store.Cur, boolean)
    {
        org.apache.xmlbeans.impl.store.Xobj$Bookmark $r15;
        long $l0, $l1, $l2, $l3, $l13, $l14, $l15, $l16, $l20, $l21;
        java.lang.AssertionError $r43, $r44, $r45, $r46;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, $z18, $z19, z20, $z21, $z22, $z23, z24, $z25, $z26;
        org.apache.xmlbeans.impl.store.Cur $r13, $r19, $r26, r29, $r30, $r31, $r37, r39;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i17, $i18, $i19, i22, i23, i24, $i26, $i28, $i30, $i32;
        org.apache.xmlbeans.impl.store.Xobj r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r14, $r17, $r20, $r23, $r33, r34, r35, $r36, r38, r40, r41, r42;
        org.apache.xmlbeans.impl.store.Locale $r1, $r2, $r10, $r11, $r12, $r16, $r21, $r22, $r27, $r32;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        r29 := @parameter1: org.apache.xmlbeans.impl.store.Cur;

        z5 := @parameter2: boolean;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if r29 == null goto label01;

        $z12 = virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z12 == 0 goto label01;

        $r43 = new java.lang.AssertionError;

        specialinvoke $r43.<java.lang.AssertionError: void <init>()>();

        throw $r43;

     label01:
        $z13 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: boolean hasAttrs()>();

        $z14 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: boolean hasChildren()>();

        if $z14 != 0 goto label03;

        if z5 == 0 goto label02;

        if $z13 != 0 goto label03;

     label02:
        $z15 = 1;

        goto label04;

     label03:
        $z15 = 0;

     label04:
        if $z15 == 0 goto label07;

        $z10 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: boolean isVacant()>();

        if $z10 == 0 goto label05;

        if r29 != null goto label05;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: void clearBit(int)>(256);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: void invalidateUser()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: void invalidateSpecialAttr(org.apache.xmlbeans.impl.store.Xobj)>(null);

        $r27 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l20 = $r27.<org.apache.xmlbeans.impl.store.Locale: long _versionAll>;

        $l21 = $l20 + 1L;

        $r27.<org.apache.xmlbeans.impl.store.Locale: long _versionAll> = $l21;

        goto label06;

     label05:
        $z11 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: boolean hasTextEnsureOccupancy()>();

        if $z11 == 0 goto label06;

        $r26 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur tempCur()>();

        virtualinvoke $r26.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        $i26 = (int) -1;

        virtualinvoke $r26.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object moveChars(org.apache.xmlbeans.impl.store.Cur,int)>(r29, $i26);

        virtualinvoke $r26.<org.apache.xmlbeans.impl.store.Cur: void release()>();

     label06:
        return;

     label07:
        if r29 == null goto label16;

        $r20 = r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if r0 != $r20 goto label10;

        $i19 = r29.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i28 = (int) -1;

        if $i19 != $i28 goto label10;

        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>(r0);

        $r30 = r29;

        if z5 == 0 goto label08;

        if $z13 == 0 goto label08;

        $z16 = 1;

        goto label09;

     label08:
        $z16 = 0;

     label09:
        virtualinvoke $r30.<org.apache.xmlbeans.impl.store.Cur: boolean next(boolean)>($z16);

        return;

     label10:
        z17 = 0;

        $r22 = r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r21 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        if $r22 != $r21 goto label13;

        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>(r0);

        $r31 = r29;

        if z5 == 0 goto label11;

        if $z13 == 0 goto label11;

        $z18 = 1;

        goto label12;

     label11:
        $z18 = 0;

     label12:
        virtualinvoke $r31.<org.apache.xmlbeans.impl.store.Cur: boolean next(boolean)>($z18);

        z17 = virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: boolean isAtLastPush()>();

        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

     label13:
        if z17 == 0 goto label14;

        return;

     label14:
        $z6 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z6 != 0 goto label15;

        $z9 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: boolean contains(org.apache.xmlbeans.impl.store.Cur)>(r29);

        if $z9 == 0 goto label15;

        $r44 = new java.lang.AssertionError;

        specialinvoke $r44.<java.lang.AssertionError: void <init>()>();

        throw $r44;

     label15:
        $z7 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z7 != 0 goto label16;

        $r23 = virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getParent()>();

        $z8 = virtualinvoke $r23.<org.apache.xmlbeans.impl.store.Xobj: boolean isOccupied()>();

        if $z8 != 0 goto label16;

        $r45 = new java.lang.AssertionError;

        specialinvoke $r45.<java.lang.AssertionError: void <init>()>();

        throw $r45;

     label16:
        i22 = 0;

        $z19 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: boolean hasTextNoEnsureOccupancy()>();

        if $z19 == 0 goto label17;

        $r19 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur tempCur()>();

        virtualinvoke $r19.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        $i30 = (int) -1;

        virtualinvoke $r19.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object moveChars(org.apache.xmlbeans.impl.store.Cur,int)>(r29, $i30);

        virtualinvoke $r19.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        if r29 == null goto label17;

        $i18 = $r19.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc>;

        i22 = $i18;

        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: int nextChars(int)>($i18);

     label17:
        $r32 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r32.<org.apache.xmlbeans.impl.store.Locale: void embedCurs()>();

        $r33 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj walk(org.apache.xmlbeans.impl.store.Xobj,boolean)>(r0, 1);

        r34 = $r33;

        z20 = 0;

        r35 = $r33;

     label18:
        if r35 == null goto label30;

        $r14 = r35.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r14 != r0 goto label23;

        $z3 = virtualinvoke r35.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z3 == 0 goto label23;

        $z4 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z4 != 0 goto label19;

        $i17 = r35.<org.apache.xmlbeans.impl.store.Xobj: int _cchAfter>;

        if $i17 == 0 goto label19;

        $r46 = new java.lang.AssertionError;

        specialinvoke $r46.<java.lang.AssertionError: void <init>()>();

        throw $r46;

     label19:
        if z5 != 0 goto label20;

        r34 = r35.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        goto label29;

     label20:
        $r17 = r35;

        if r29 != null goto label21;

        $r36 = null;

        goto label22;

     label21:
        $r36 = virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getParent()>();

     label22:
        virtualinvoke $r17.<org.apache.xmlbeans.impl.store.Xobj: void invalidateSpecialAttr(org.apache.xmlbeans.impl.store.Xobj)>($r36);

     label23:
        $r37 = r35.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded>;

        if $r37 == null goto label24;

        $i32 = (int) -1;

        virtualinvoke $r37.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>(r0, $i32);

        goto label23;

     label24:
        virtualinvoke r35.<org.apache.xmlbeans.impl.store.Xobj: void disconnectUser()>();

        if r29 == null goto label25;

        $r16 = r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        r35.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale> = $r16;

     label25:
        if z20 != 0 goto label26;

        $r15 = r35.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj$Bookmark _bookmarks>;

        if $r15 == null goto label27;

     label26:
        $z21 = 1;

        goto label28;

     label27:
        $z21 = 0;

     label28:
        z20 = $z21;

     label29:
        r35 = virtualinvoke r35.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj walk(org.apache.xmlbeans.impl.store.Xobj,boolean)>(r0, 1);

        goto label18;

     label30:
        r38 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _lastChild>;

        r39 = null;

        if z20 == 0 goto label31;

        if r29 != null goto label31;

        $r12 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r13 = virtualinvoke $r12.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur tempCur()>();

        r29 = $r13;

        r39 = $r13;

        virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Cur: void createRoot()>();

        virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

     label31:
        $z22 = virtualinvoke r38.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z22 != 0 goto label32;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: void invalidateUser()>();

     label32:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l0 = $r1.<org.apache.xmlbeans.impl.store.Locale: long _versionAll>;

        $l1 = $l0 + 1L;

        $r1.<org.apache.xmlbeans.impl.store.Locale: long _versionAll> = $l1;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l2 = $r2.<org.apache.xmlbeans.impl.store.Locale: long _versionSansText>;

        $l3 = $l2 + 1L;

        $r2.<org.apache.xmlbeans.impl.store.Locale: long _versionSansText> = $l3;

        if r29 == null goto label33;

        if i22 != 0 goto label33;

        $r9 = virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getParent()>();

        virtualinvoke $r9.<org.apache.xmlbeans.impl.store.Xobj: void invalidateUser()>();

        $r10 = r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l13 = $r10.<org.apache.xmlbeans.impl.store.Locale: long _versionAll>;

        $l14 = $l13 + 1L;

        $r10.<org.apache.xmlbeans.impl.store.Locale: long _versionAll> = $l14;

        $r11 = r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l15 = $r11.<org.apache.xmlbeans.impl.store.Locale: long _versionSansText>;

        $l16 = $l15 + 1L;

        $r11.<org.apache.xmlbeans.impl.store.Locale: long _versionSansText> = $l16;

     label33:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: void removeXobjs(org.apache.xmlbeans.impl.store.Xobj,org.apache.xmlbeans.impl.store.Xobj)>(r34, r38);

        if r29 == null goto label49;

        r40 = r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i4 = r29.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i4 == 0 goto label34;

        $z23 = 1;

        goto label35;

     label34:
        $z23 = 0;

     label35:
        z24 = $z23;

        $i5 = virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: int cchRight()>();

        if $i5 <= 0 goto label38;

        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        r40 = r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i12 = r29.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i12 == 0 goto label36;

        $z25 = 1;

        goto label37;

     label36:
        $z25 = 0;

     label37:
        z24 = $z25;

        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

     label38:
        $z26 = virtualinvoke r34.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z26 == 0 goto label45;

        r41 = r34;

     label39:
        $r4 = r41.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        if $r4 == null goto label40;

        $r8 = r41.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        $z2 = virtualinvoke $r8.<org.apache.xmlbeans.impl.store.Xobj: boolean isAttr()>();

        if $z2 == 0 goto label40;

        r41 = r41.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        goto label39;

     label40:
        $r5 = virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getParent()>();

        r42 = $r5;

        if $i5 <= 0 goto label41;

        $r7 = r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i10 = r29.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i11 = virtualinvoke r41.<org.apache.xmlbeans.impl.store.Xobj: int posMax()>();

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void transferChars(org.apache.xmlbeans.impl.store.Xobj,int,org.apache.xmlbeans.impl.store.Xobj,int,int)>($r7, $i10, r41, $i11, $i5);

     label41:
        $z1 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Xobj: boolean hasTextNoEnsureOccupancy()>();

        if $z1 == 0 goto label44;

        $i8 = $r5.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        if $i8 <= 0 goto label42;

        i23 = 1;

        i24 = $r5.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        goto label43;

     label42:
        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj lastAttr()>();

        r42 = $r6;

        i23 = virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        i24 = $r6.<org.apache.xmlbeans.impl.store.Xobj: int _cchAfter>;

     label43:
        $i9 = virtualinvoke r41.<org.apache.xmlbeans.impl.store.Xobj: int posAfter()>();

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void transferChars(org.apache.xmlbeans.impl.store.Xobj,int,org.apache.xmlbeans.impl.store.Xobj,int,int)>(r42, i23, r41, $i9, i24);

     label44:
        goto label46;

     label45:
        if $i5 <= 0 goto label46;

        $r3 = r29.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i6 = r29.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i7 = virtualinvoke r38.<org.apache.xmlbeans.impl.store.Xobj: int posMax()>();

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void transferChars(org.apache.xmlbeans.impl.store.Xobj,int,org.apache.xmlbeans.impl.store.Xobj,int,int)>($r3, $i6, r38, $i7, $i5);

     label46:
        if z24 == 0 goto label47;

        virtualinvoke r40.<org.apache.xmlbeans.impl.store.Xobj: void appendXobjs(org.apache.xmlbeans.impl.store.Xobj,org.apache.xmlbeans.impl.store.Xobj)>(r34, r38);

        goto label48;

     label47:
        virtualinvoke r40.<org.apache.xmlbeans.impl.store.Xobj: void insertXobjs(org.apache.xmlbeans.impl.store.Xobj,org.apache.xmlbeans.impl.store.Xobj)>(r34, r38);

     label48:
        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>(r34);

        virtualinvoke r29.<org.apache.xmlbeans.impl.store.Cur: int prevChars(int)>(i22);

     label49:
        if r39 == null goto label50;

        virtualinvoke r39.<org.apache.xmlbeans.impl.store.Cur: void release()>();

     label50:
        return;
    }

    protected final org.apache.xmlbeans.impl.store.Xobj$Bookmark setBookmark(java.lang.Object, java.lang.Object)
    {
        org.apache.xmlbeans.impl.store.Xobj$Bookmark $r4;
        java.lang.AssertionError $r5, $r6;
        org.apache.xmlbeans.impl.store.Xobj $r3;
        int $i0;
        java.lang.Object r1, r2;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z2 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if r1 != null goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj$Bookmark setBookmark(int,java.lang.Object,java.lang.Object)>($i0, r1, r2);

        return $r4;
    }

    java.lang.Object getBookmark(java.lang.Object)
    {
        org.apache.xmlbeans.impl.store.Xobj$Bookmark r7;
        java.lang.AssertionError $r5, $r6;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1;
        java.lang.Object r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter0: java.lang.Object;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z2 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if r2 != null goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        r7 = $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj$Bookmark _bookmarks>;

     label3:
        if r7 == null goto label5;

        $i1 = r7.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: int _pos>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        if $i1 != $i0 goto label4;

        $r3 = r7.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: java.lang.Object _key>;

        if $r3 != r2 goto label4;

        $r4 = r7.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: java.lang.Object _value>;

        return $r4;

     label4:
        r7 = r7.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: org.apache.xmlbeans.impl.store.Xobj$Bookmark _next>;

        goto label3;

     label5:
        return null;
    }

    int firstBookmarkInChars(java.lang.Object, int)
    {
        org.apache.xmlbeans.impl.store.Xobj$Bookmark r8;
        java.lang.AssertionError $r9, $r10, $r11, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i10, $i12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        java.lang.Object r2, $r3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z6 != 0 goto label01;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label01:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        if r2 != null goto label02;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label02:
        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        if i0 > 0 goto label03;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label03:
        $z3 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        $i6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchRight()>();

        if i0 <= $i6 goto label04;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label04:
        $i10 = (int) -1;

        i7 = $i10;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z4 == 0 goto label10;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        r8 = $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj$Bookmark _bookmarks>;

     label05:
        if r8 == null goto label10;

        $r3 = r8.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: java.lang.Object _key>;

        if $r3 != r2 goto label09;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean inChars(org.apache.xmlbeans.impl.store.Xobj$Bookmark,int,boolean)>(r8, i0, 0);

        if $z5 == 0 goto label09;

        $i12 = (int) -1;

        if i7 == $i12 goto label06;

        $i4 = r8.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: int _pos>;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i5 = $i4 - $i3;

        if $i5 >= i7 goto label07;

     label06:
        $i2 = r8.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: int _pos>;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i8 = $i2 - $i1;

        goto label08;

     label07:
        $i8 = i7;

     label08:
        i7 = $i8;

     label09:
        r8 = r8.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: org.apache.xmlbeans.impl.store.Xobj$Bookmark _next>;

        goto label05;

     label10:
        return i7;
    }

    int firstBookmarkInCharsLeft(java.lang.Object, int)
    {
        org.apache.xmlbeans.impl.store.Xobj$Bookmark r9;
        java.lang.AssertionError $r10, $r11, $r12, $r13;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i12, $i14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r4;
        java.lang.Object r2, $r3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter0: java.lang.Object;

        i1 := @parameter1: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z5 != 0 goto label01;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label01:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        if r2 != null goto label02;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label02:
        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        if i1 > 0 goto label03;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label03:
        $z3 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        $i8 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchLeft()>();

        if i1 <= $i8 goto label04;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label04:
        $i12 = (int) -1;

        i9 = $i12;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchLeft()>();

        if $i0 <= 0 goto label10;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getDenormal()>();

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        i3 = $i2 - i1;

        r9 = $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj$Bookmark _bookmarks>;

     label05:
        if r9 == null goto label10;

        $r3 = r9.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: java.lang.Object _key>;

        if $r3 != r2 goto label09;

        $r4 = r9.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i4 = r9.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: int _pos>;

        $z4 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: boolean inChars(int,org.apache.xmlbeans.impl.store.Xobj,int,int,boolean)>(i3, $r4, $i4, i1, 0);

        if $z4 == 0 goto label09;

        $i14 = (int) -1;

        if i9 == $i14 goto label06;

        $i6 = r9.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: int _pos>;

        $i7 = $i6 - i3;

        if $i7 >= i9 goto label07;

     label06:
        $i5 = r9.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: int _pos>;

        $i10 = $i5 - i3;

        goto label08;

     label07:
        $i10 = i9;

     label08:
        i9 = $i10;

     label09:
        r9 = r9.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: org.apache.xmlbeans.impl.store.Xobj$Bookmark _next>;

        goto label05;

     label10:
        return i9;
    }

    java.lang.String getCharsAsString(int)
    {
        org.apache.xmlbeans.impl.store.Xobj $r3;
        int i0;
        java.lang.String $r1;
        java.lang.AssertionError $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r3 != null goto label2;

     label1:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getCharsAsString(int,int)>(i0, 1);

        return $r1;
    }

    java.lang.String getCharsAsString(int, int)
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int i0, i1, $i2;
        java.lang.String $r2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: java.lang.String getCharsAsString(int,int,int)>($i2, i0, i1);

        return $r2;
    }

    java.lang.String getValueAsString(int)
    {
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int i0;
        java.lang.String $r2;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: java.lang.String getValueAsString(int)>(i0);

        return $r2;
    }

    java.lang.String getValueAsString()
    {
        java.lang.AssertionError $r3, $r4;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z3 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean hasChildren()>();

        if $z2 == 0 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: java.lang.String getValueAsString()>();

        return $r2;
    }

    java.lang.Object getChars(int)
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int i0, $i1;
        java.lang.Object $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: java.lang.Object getChars(int,int,org.apache.xmlbeans.impl.store.Cur)>($i1, i0, r0);

        return $r2;
    }

    java.lang.Object getFirstChars()
    {
        java.lang.AssertionError $r5;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Locale $r3, $r4;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: java.lang.Object getFirstChars()>();

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $i0 = $r3.<org.apache.xmlbeans.impl.store.Locale: int _offSrc>;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _offSrc> = $i0;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $i1 = $r4.<org.apache.xmlbeans.impl.store.Locale: int _cchSrc>;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc> = $i1;

        return $r2;
    }

    void copyNode(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r5, $r6;
        org.apache.xmlbeans.impl.store.Xobj $r3, $r4;
        org.apache.xmlbeans.impl.store.Locale $r2;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z3 != 0 goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj copyNode(org.apache.xmlbeans.impl.store.Locale)>($r2);

        $z2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z2 == 0 goto label3;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void moveNode(org.apache.xmlbeans.impl.store.Xobj,org.apache.xmlbeans.impl.store.Cur)>($r4, r1);

        goto label4;

     label3:
        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r4);

     label4:
        return;
    }

    org.apache.xmlbeans.impl.store.Cur weakCur(java.lang.Object)
    {
        org.apache.xmlbeans.impl.store.Locale $r2;
        java.lang.Object r1;
        org.apache.xmlbeans.impl.store.Cur r0, $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur weakCur(java.lang.Object)>(r1);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: void moveToCur(org.apache.xmlbeans.impl.store.Cur)>(r0);

        return $r3;
    }

    org.apache.xmlbeans.impl.store.Cur tempCur()
    {
        org.apache.xmlbeans.impl.store.Cur r0, $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur tempCur(java.lang.String)>(null);

        return $r1;
    }

    org.apache.xmlbeans.impl.store.Cur tempCur(java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Locale $r2;
        java.lang.String r1;
        org.apache.xmlbeans.impl.store.Cur r0, $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur tempCur(java.lang.String)>(r1);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: void moveToCur(org.apache.xmlbeans.impl.store.Cur)>(r0);

        return $r3;
    }

    private org.apache.xmlbeans.impl.store.Cur tempCur(org.apache.xmlbeans.impl.store.Xobj, int)
    {
        java.lang.AssertionError $r9, $r10;
        org.apache.xmlbeans.impl.store.Xobj r1, $r2;
        int i0, $i1, $i3;
        org.apache.xmlbeans.impl.store.Locale $r4, $r5, $r7;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0, $r8;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        i0 := @parameter1: int;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r4 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        if $r5 == $r4 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if r1 != null goto label2;

        $i3 = (int) -2;

        if i0 == $i3 goto label2;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label2:
        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r8 = virtualinvoke $r7.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur tempCur()>();

        if r1 == null goto label3;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getNormal(org.apache.xmlbeans.impl.store.Xobj,int)>(r1, i0);

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _posTemp>;

        virtualinvoke $r8.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r2, $i1);

     label3:
        return $r8;
    }

    boolean inChars(org.apache.xmlbeans.impl.store.Cur, int, boolean)
    {
        java.lang.AssertionError $r4, $r5;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.impl.store.Xobj $r2, $r3;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        i0 := @parameter1: int;

        z2 := @parameter2: boolean;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z5 == 0 goto label1;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z6 == 0 goto label1;

        $i3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchRight()>();

        if $i3 >= i0 goto label2;

     label1:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $z4 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z4 != 0 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label3:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r2 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = r1.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $z3 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: boolean inChars(int,org.apache.xmlbeans.impl.store.Xobj,int,int,boolean)>($i2, $r2, $i1, i0, z2);

        return $z3;
    }

    boolean inChars(org.apache.xmlbeans.impl.store.Xobj$Bookmark, int, boolean)
    {
        org.apache.xmlbeans.impl.store.Xobj$Bookmark r1;
        java.lang.AssertionError $r5, $r6;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.impl.store.Xobj $r2, $r3, $r4;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Xobj$Bookmark;

        i0 := @parameter1: int;

        z2 := @parameter2: boolean;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z5 == 0 goto label1;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z6 == 0 goto label1;

        $i4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchRight()>();

        if $i4 >= i0 goto label2;

     label1:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $r4 = r1.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i3 = r1.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: int _pos>;

        $z4 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Xobj: boolean isNormal(int)>($i3);

        if $z4 != 0 goto label3;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label3:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r2 = r1.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i1 = r1.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: int _pos>;

        $z3 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: boolean inChars(int,org.apache.xmlbeans.impl.store.Xobj,int,int,boolean)>($i2, $r2, $i1, i0, z2);

        return $z3;
    }

    private org.apache.xmlbeans.impl.store.Xobj getNormal(org.apache.xmlbeans.impl.store.Xobj, int)
    {
        org.apache.xmlbeans.impl.store.Xobj r0, $r1;
        int i0, $i1;
        org.apache.xmlbeans.impl.store.Locale $r3;
        org.apache.xmlbeans.impl.store.Cur r2;

        r2 := @this: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj getNormal(int)>(i0);

        $r3 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $i1 = $r3.<org.apache.xmlbeans.impl.store.Locale: int _posTemp>;

        r2.<org.apache.xmlbeans.impl.store.Cur: int _posTemp> = $i1;

        return $r1;
    }

    private org.apache.xmlbeans.impl.store.Xobj getDenormal()
    {
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2;
        int $i0;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj getDenormal(org.apache.xmlbeans.impl.store.Xobj,int)>($r1, $i0);

        return $r2;
    }

    private org.apache.xmlbeans.impl.store.Xobj getDenormal(org.apache.xmlbeans.impl.store.Xobj, int)
    {
        org.apache.xmlbeans.impl.store.Xobj r0, $r1;
        int i0, $i1;
        org.apache.xmlbeans.impl.store.Locale $r3;
        org.apache.xmlbeans.impl.store.Cur r2;

        r2 := @this: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj getDenormal(int)>(i0);

        $r3 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        $i1 = $r3.<org.apache.xmlbeans.impl.store.Locale: int _posTemp>;

        r2.<org.apache.xmlbeans.impl.store.Cur: int _posTemp> = $i1;

        return $r1;
    }

    void setType(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.SchemaType r1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void setType(org.apache.xmlbeans.SchemaType,boolean)>(r1, 1);

        return;
    }

    void setType(org.apache.xmlbeans.SchemaType, boolean)
    {
        org.apache.xmlbeans.SchemaType $r6, r7, $r10, $r17, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r1, $r4;
        javax.xml.namespace.QName $r5, $r8, $r9, $r11, $r14, $r16;
        org.apache.xmlbeans.impl.store.Cur r0;
        java.lang.AssertionError $r15, $r26, $r27;
        java.lang.StringBuffer $r19, $r20, $r22;
        java.lang.String $r21, $r23;
        java.lang.IllegalArgumentException $r12, $r13, $r18;
        org.apache.xmlbeans.impl.store.Xobj $r2, $r3, $r24;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r7 := @parameter0: org.apache.xmlbeans.SchemaType;

        z5 := @parameter1: boolean;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if r7 != null goto label01;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label01:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $z7 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isUserNode()>();

        if $z7 != 0 goto label02;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label02:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.values.TypeStoreUser peekUser()>();

        if $r1 == null goto label03;

        $r25 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStoreUser: org.apache.xmlbeans.SchemaType get_schema_type()>();

        if $r25 != r7 goto label03;

        return;

     label03:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z2 == 0 goto label04;

        $r24 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        virtualinvoke $r24.<org.apache.xmlbeans.impl.store.Xobj: void setStableType(org.apache.xmlbeans.SchemaType)>(r7);

        return;

     label04:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj ensureParent()>();

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z3 == 0 goto label06;

        if z5 == 0 goto label05;

        $r16 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        $r17 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.values.TypeStoreUser: org.apache.xmlbeans.SchemaType get_attribute_type(javax.xml.namespace.QName)>($r16);

        if $r17 == r7 goto label05;

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t set type of attribute to ");

        $r21 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label05:
        return;

     label06:
        $z4 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z4 != 0 goto label07;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isElem()>();

        if $z6 != 0 goto label07;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label07:
        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        $r6 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.values.TypeStoreUser: org.apache.xmlbeans.SchemaType get_element_type(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r5, null);

        if $r6 != r7 goto label08;

        $r14 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiType>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean removeAttr(javax.xml.namespace.QName)>($r14);

        return;

     label08:
        $r8 = interfaceinvoke r7.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        if $r8 != null goto label10;

        if z5 == 0 goto label09;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set type of element, type is un-named");

        throw $r13;

     label09:
        return;

     label10:
        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        $r10 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.values.TypeStoreUser: org.apache.xmlbeans.SchemaType get_element_type(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r9, $r8);

        if $r10 == r7 goto label12;

        if z5 == 0 goto label11;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set type of element, invalid type");

        throw $r12;

     label11:
        return;

     label12:
        $r11 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiType>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void setAttrValueAsQName(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r11, $r8);

        return;
    }

    void setSubstitution(javax.xml.namespace.QName, org.apache.xmlbeans.SchemaType)
    {
        javax.xml.namespace.QName r1;
        org.apache.xmlbeans.SchemaType r2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: org.apache.xmlbeans.SchemaType;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void setSubstitution(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaType,boolean)>(r1, r2, 1);

        return;
    }

    void setSubstitution(javax.xml.namespace.QName, org.apache.xmlbeans.SchemaType, boolean)
    {
        java.lang.AssertionError $r14, $r18, $r19, $r20;
        org.apache.xmlbeans.SchemaType $r6, r7, $r9, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7, $z8, $z9;
        java.lang.IllegalArgumentException $r11, $r12, $r15;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r1, $r4;
        org.apache.xmlbeans.impl.store.Xobj $r2, $r3;
        javax.xml.namespace.QName r5, $r8, $r10, $r13, $r17;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r5 := @parameter0: javax.xml.namespace.QName;

        r7 := @parameter1: org.apache.xmlbeans.SchemaType;

        z5 := @parameter2: boolean;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if r5 != null goto label01;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label01:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        if r7 != null goto label02;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label02:
        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $z8 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isUserNode()>();

        if $z8 != 0 goto label03;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label03:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.values.TypeStoreUser peekUser()>();

        if $r1 == null goto label04;

        $r16 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStoreUser: org.apache.xmlbeans.SchemaType get_schema_type()>();

        if $r16 != r7 goto label04;

        $r17 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        $z7 = virtualinvoke r5.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r17);

        if $z7 == 0 goto label04;

        return;

     label04:
        $z9 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z9 == 0 goto label05;

        return;

     label05:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj ensureParent()>();

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z3 == 0 goto label07;

        if z5 == 0 goto label06;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t use substitution with attributes");

        throw $r15;

     label06:
        return;

     label07:
        $z4 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z4 != 0 goto label08;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isElem()>();

        if $z6 != 0 goto label08;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label08:
        $r6 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.values.TypeStoreUser: org.apache.xmlbeans.SchemaType get_element_type(javax.xml.namespace.QName,javax.xml.namespace.QName)>(r5, null);

        if $r6 != r7 goto label09;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void setName(javax.xml.namespace.QName)>(r5);

        $r13 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiType>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean removeAttr(javax.xml.namespace.QName)>($r13);

        return;

     label09:
        $r8 = interfaceinvoke r7.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        if $r8 != null goto label11;

        if z5 == 0 goto label10;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set xsi:type on element, type is un-named");

        throw $r12;

     label10:
        return;

     label11:
        $r9 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.values.TypeStoreUser: org.apache.xmlbeans.SchemaType get_element_type(javax.xml.namespace.QName,javax.xml.namespace.QName)>(r5, $r8);

        if $r9 == r7 goto label13;

        if z5 == 0 goto label12;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set xsi:type on element, invalid type");

        throw $r11;

     label12:
        return;

     label13:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void setName(javax.xml.namespace.QName)>(r5);

        $r10 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiType>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void setAttrValueAsQName(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r10, $r8);

        return;
    }

    org.apache.xmlbeans.impl.values.TypeStoreUser peekUser()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isUserNode()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.values.TypeStoreUser _user>;

        return $r2;
    }

    org.apache.xmlbeans.XmlObject getObject()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r1;
        org.apache.xmlbeans.XmlObject $r2;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isUserNode()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        $r2 = (org.apache.xmlbeans.XmlObject) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    org.apache.xmlbeans.impl.values.TypeStoreUser getUser()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isUserNode()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        return $r2;
    }

    org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2;
        java.lang.AssertionError $r3, $r4;
        org.apache.xmlbeans.impl.store.DomImpl$CharNode r5;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int $i0, $i1, i2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z4 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z3 != 0 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z2 == 0 goto label5;

        i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int cchLeft()>();

        r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.DomImpl$CharNode getCharNodes()>();

     label3:
        $i0 = r5.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _cch>;

        $i1 = i2 - $i0;

        i2 = $i1;

        if $i1 >= 0 goto label4;

        return r5;

     label4:
        r5 = r5.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$CharNode _next>;

        goto label3;

     label5:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()>();

        return $r2;
    }

    static void release(org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        if r0 == null goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void release()>();

     label1:
        return;
    }

    void release()
    {
        org.apache.xmlbeans.impl.store.Cur[] $r25;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Cur r0, $r3, $r5, $r8, $r10, $r19, $r20, $r21, $r22, $r24, $r26, $r27;
        org.apache.xmlbeans.impl.store.Locale$Ref $r1, $r13, $r14;
        java.lang.AssertionError $r28, $r29, $r30, $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i13, $i15;
        org.apache.xmlbeans.impl.store.Xobj $r16;
        org.apache.xmlbeans.impl.store.Locale $r2, $r4, $r6, $r7, $r9, $r11, $r23;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _tempFrame>;

        if $i0 < 0 goto label04;

        $r19 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _nextTemp>;

        if $r19 == null goto label01;

        $r27 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _nextTemp>;

        $r26 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prevTemp>;

        $r27.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prevTemp> = $r26;

     label01:
        $r20 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prevTemp>;

        if $r20 != null goto label02;

        $r23 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r25 = $r23.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $i8 = r0.<org.apache.xmlbeans.impl.store.Cur: int _tempFrame>;

        $r24 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _nextTemp>;

        $r25[$i8] = $r24;

        goto label03;

     label02:
        $r22 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prevTemp>;

        $r21 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _nextTemp>;

        $r22.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _nextTemp> = $r21;

     label03:
        r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _nextTemp> = null;

        r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prevTemp> = null;

        $i11 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _tempFrame> = $i11;

     label04:
        $i9 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i9 == 0 goto label13;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i1 == 3 goto label13;

     label05:
        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _stackTop>;

        $i13 = (int) -1;

        if $i2 == $i13 goto label06;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void popButStay()>();

        goto label05;

     label06:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void clearSelection()>();

        r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.String _id> = null;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveToCur(org.apache.xmlbeans.impl.store.Cur)>(null);

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label07;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormal()>();

        if $z4 != 0 goto label07;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label07:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label08;

        $r16 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r16 == null goto label08;

        $r29 = new java.lang.AssertionError;

        specialinvoke $r29.<java.lang.AssertionError: void <init>()>();

        throw $r29;

     label08:
        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label09;

        $i7 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i15 = (int) -2;

        if $i7 == $i15 goto label09;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label09:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale$Ref _ref>;

        if $r1 == null goto label10;

        $r13 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale$Ref _ref>;

        virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Locale$Ref: void clear()>();

        $r14 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale$Ref _ref>;

        $r14.<org.apache.xmlbeans.impl.store.Locale$Ref: org.apache.xmlbeans.impl.store.Cur _cur> = null;

     label10:
        r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale$Ref _ref> = null;

        $z3 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z3 != 0 goto label11;

        $i6 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i6 == 1 goto label11;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label11:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r3 = $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered>;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur listRemove(org.apache.xmlbeans.impl.store.Cur)>($r3);

        $r4.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered> = $r5;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $i3 = $r6.<org.apache.xmlbeans.impl.store.Locale: int _curPoolCount>;

        if $i3 >= 16 goto label12;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r8 = $r7.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _curPool>;

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur listInsert(org.apache.xmlbeans.impl.store.Cur)>($r8);

        $r9.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _curPool> = $r10;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _state> = 0;

        $r11 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $i4 = $r11.<org.apache.xmlbeans.impl.store.Locale: int _curPoolCount>;

        $i5 = $i4 + 1;

        $r11.<org.apache.xmlbeans.impl.store.Locale: int _curPoolCount> = $i5;

        goto label13;

     label12:
        r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale> = null;

        r0.<org.apache.xmlbeans.impl.store.Cur: int _state> = 3;

     label13:
        return;
    }

    boolean isOnList(org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

     label1:
        if r1 == null goto label3;

        if r1 != r0 goto label2;

        return 1;

     label2:
        r1 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next>;

        goto label1;

     label3:
        return 0;
    }

    org.apache.xmlbeans.impl.store.Cur listInsert(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r4;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Cur r0, $r1, $r2, $r3, $r5, r6;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r6 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next>;

        if $r3 != null goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev>;

        if $r5 == null goto label2;

     label1:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        if r6 != null goto label3;

        r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev> = r0;

        r6 = r0;

        goto label4;

     label3:
        $r1 = r6.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev>;

        r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev> = $r1;

        $r2 = r6.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev>;

        $r2.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next> = r0;

        r6.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev> = r0;

     label4:
        return r6;
    }

    org.apache.xmlbeans.impl.store.Cur listRemove(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r8, $r11;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, r12;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r12 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r10 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev>;

        if $r10 == null goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isOnList(org.apache.xmlbeans.impl.store.Cur)>(r12);

        if $z1 != 0 goto label2;

     label1:
        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev>;

        if $r1 != r0 goto label3;

        r12 = null;

        goto label7;

     label3:
        if r12 != r0 goto label4;

        r12 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next>;

        goto label5;

     label4:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev>;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next>;

        $r3.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next> = $r2;

     label5:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next>;

        if $r4 != null goto label6;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev>;

        r12.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev> = $r9;

        goto label7;

     label6:
        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next>;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev>;

        $r6.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev> = $r5;

        r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next> = null;

     label7:
        r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev> = null;

        $z2 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z2 != 0 goto label8;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next>;

        if $r7 == null goto label8;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label8:
        return r12;
    }

    boolean isNormal()
    {
        java.lang.AssertionError $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r2, $r6;
        org.apache.xmlbeans.impl.store.Locale $r3;
        org.apache.xmlbeans.impl.store.Cur r0, $r4, $r7;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i0 == 0 goto label1;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i1 != 3 goto label2;

     label1:
        return 0;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r1 != null goto label5;

        $i5 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i7 = (int) -2;

        if $i5 != $i7 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;

     label5:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Xobj: boolean isNormal(int)>($i2);

        if $z0 != 0 goto label6;

        return 0;

     label6:
        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i3 != 2 goto label7;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r7 = $r6.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded>;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isOnList(org.apache.xmlbeans.impl.store.Cur)>($r7);

        return $z3;

     label7:
        $z1 = <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label8;

        $i4 = r0.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i4 == 1 goto label8;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label8:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r4 = $r3.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered>;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isOnList(org.apache.xmlbeans.impl.store.Cur)>($r4);

        return $z2;
    }

    static java.lang.String kindName(int)
    {
        java.lang.StringBuffer $r0, $r1, $r2, $r3;
        int i0;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label6;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label7;
        };

     label1:
        return "ROOT";

     label2:
        return "ELEM";

     label3:
        return "ATTR";

     label4:
        return "COMMENT";

     label5:
        return "PROCINST";

     label6:
        return "TEXT";

     label7:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<< Unknown Kind (");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") >>");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    static void dump(java.io.PrintStream, org.apache.xmlbeans.impl.store.DomImpl$Dom, java.lang.Object)
    {
        java.io.PrintStream r0;
        org.apache.xmlbeans.impl.store.DomImpl$Dom r1;
        java.lang.Object r2;

        r0 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: org.apache.xmlbeans.impl.store.DomImpl$Dom;

        r2 := @parameter2: java.lang.Object;

        return;
    }

    static void dump(java.io.PrintStream, org.apache.xmlbeans.impl.store.DomImpl$Dom)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom r0;
        java.io.PrintStream r1;

        r1 := @parameter0: java.io.PrintStream;

        r0 := @parameter1: org.apache.xmlbeans.impl.store.DomImpl$Dom;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.store.DomImpl$Dom: void dump(java.io.PrintStream)>(r1);

        return;
    }

    static void dump(org.apache.xmlbeans.impl.store.DomImpl$Dom)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom r0;
        java.io.PrintStream $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.DomImpl$Dom;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dump(java.io.PrintStream,org.apache.xmlbeans.impl.store.DomImpl$Dom)>($r1, r0);

        return;
    }

    static void dump(org.w3c.dom.Node)
    {
        java.io.PrintStream $r1;
        org.w3c.dom.Node r0;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dump(java.io.PrintStream,org.w3c.dom.Node)>($r1, r0);

        return;
    }

    static void dump(java.io.PrintStream, org.w3c.dom.Node)
    {
        java.io.PrintStream r0;
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2;
        org.w3c.dom.Node r1;

        r0 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: org.w3c.dom.Node;

        $r2 = (org.apache.xmlbeans.impl.store.DomImpl$Dom) r1;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dump(java.io.PrintStream,org.apache.xmlbeans.impl.store.DomImpl$Dom)>(r0, $r2);

        return;
    }

    void dump()
    {
        java.io.PrintStream $r2;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dump(java.io.PrintStream,org.apache.xmlbeans.impl.store.Xobj,java.lang.Object)>($r2, $r1, r0);

        return;
    }

    void dump(java.io.PrintStream)
    {
        java.io.PrintStream r2;
        org.apache.xmlbeans.impl.store.Xobj $r1, $r3;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter0: java.io.PrintStream;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r1 != null goto label1;

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>("Unpositioned xptr");

        return;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dump(java.io.PrintStream,org.apache.xmlbeans.impl.store.Xobj,java.lang.Object)>(r2, $r3, r0);

        return;
    }

    public static void dump(java.io.PrintStream, org.apache.xmlbeans.impl.store.Xobj, java.lang.Object)
    {
        java.io.PrintStream r0;
        org.apache.xmlbeans.impl.store.Xobj r1, $r3;
        java.lang.Object r2;

        r0 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: org.apache.xmlbeans.impl.store.Xobj;

        r2 := @parameter2: java.lang.Object;

        if r2 != null goto label1;

        r2 = r1;

     label1:
        $r3 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        if $r3 == null goto label2;

        r1 = r1.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _parent>;

        goto label1;

     label2:
        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dumpXobj(java.io.PrintStream,org.apache.xmlbeans.impl.store.Xobj,int,java.lang.Object)>(r0, r1, 0, r2);

        virtualinvoke r0.<java.io.PrintStream: void println()>();

        return;
    }

    private static void dumpCur(java.io.PrintStream, java.lang.String, org.apache.xmlbeans.impl.store.Cur, java.lang.Object)
    {
        java.io.PrintStream r0;
        java.lang.StringBuffer $r3, $r5, $r7, $r8, $r9, $r10;
        int $i0;
        java.lang.Object r1;
        java.lang.String r4, $r6, $r11, $r12;
        org.apache.xmlbeans.impl.store.Cur r2;

        r0 := @parameter0: java.io.PrintStream;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter3: java.lang.Object;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" ");

        if r1 != r2 goto label1;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("*:");

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String _id>;

        if $r6 != null goto label2;

        $r12 = "<cur>";

        goto label3;

     label2:
        $r12 = r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String _id>;

     label3:
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $i0 = r2.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r11);

        return;
    }

    private static void dumpCurs(java.io.PrintStream, org.apache.xmlbeans.impl.store.Xobj, java.lang.Object)
    {
        java.io.PrintStream r3;
        org.apache.xmlbeans.impl.store.Xobj r0, $r2;
        org.apache.xmlbeans.impl.store.Locale $r1;
        java.lang.Object r4;
        org.apache.xmlbeans.impl.store.Cur r5, r6;

        r3 := @parameter0: java.io.PrintStream;

        r0 := @parameter1: org.apache.xmlbeans.impl.store.Xobj;

        r4 := @parameter2: java.lang.Object;

        r5 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded>;

     label1:
        if r5 == null goto label2;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dumpCur(java.io.PrintStream,java.lang.String,org.apache.xmlbeans.impl.store.Cur,java.lang.Object)>(r3, "E:", r5, r4);

        r5 = r5.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next>;

        goto label1;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Locale _locale>;

        r6 = $r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered>;

     label3:
        if r6 == null goto label5;

        $r2 = r6.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r2 != r0 goto label4;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dumpCur(java.io.PrintStream,java.lang.String,org.apache.xmlbeans.impl.store.Cur,java.lang.Object)>(r3, "R:", r6, r4);

     label4:
        r6 = r6.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next>;

        goto label3;

     label5:
        return;
    }

    private static void dumpBookmarks(java.io.PrintStream, org.apache.xmlbeans.impl.store.Xobj, java.lang.Object)
    {
        org.apache.xmlbeans.impl.store.Xobj$Bookmark r19;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int $i0, $i1, $i2;
        java.lang.String $r8, $r18;
        boolean $z0;
        java.io.PrintStream r1;
        org.apache.xmlbeans.XmlLineNumber r10;
        org.apache.xmlbeans.impl.store.Xobj r0;
        java.lang.Object r2, $r3, $r9;

        r1 := @parameter0: java.io.PrintStream;

        r0 := @parameter1: org.apache.xmlbeans.impl.store.Xobj;

        r2 := @parameter2: java.lang.Object;

        r19 = r0.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj$Bookmark _bookmarks>;

     label1:
        if r19 == null goto label5;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" ");

        if r2 != r19 goto label2;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>("*:");

     label2:
        $r3 = r19.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: java.lang.Object _value>;

        $z0 = $r3 instanceof org.apache.xmlbeans.XmlLineNumber;

        if $z0 == 0 goto label3;

        $r9 = r19.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: java.lang.Object _value>;

        r10 = (org.apache.xmlbeans.XmlLineNumber) $r9;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<line:");

        $i1 = virtualinvoke r10.<org.apache.xmlbeans.XmlLineNumber: int getLine()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $i2 = r19.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: int _pos>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r18);

        goto label4;

     label3:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<mark>[");

        $i0 = r19.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: int _pos>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r8);

     label4:
        r19 = r19.<org.apache.xmlbeans.impl.store.Xobj$Bookmark: org.apache.xmlbeans.impl.store.Xobj$Bookmark _next>;

        goto label1;

     label5:
        return;
    }

    private static void dumpCharNodes(java.io.PrintStream, org.apache.xmlbeans.impl.store.DomImpl$CharNode, java.lang.Object)
    {
        java.io.PrintStream r1;
        org.apache.xmlbeans.impl.store.DomImpl$CharNode r0, r9;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r7;
        int $i0;
        java.lang.Object r2;
        java.lang.String $r8, $r10;
        boolean $z0;

        r1 := @parameter0: java.io.PrintStream;

        r0 := @parameter1: org.apache.xmlbeans.impl.store.DomImpl$CharNode;

        r2 := @parameter2: java.lang.Object;

        r9 = r0;

     label1:
        if r9 == null goto label5;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" ");

        if r9 != r2 goto label2;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>("*");

     label2:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $z0 = r9 instanceof org.apache.xmlbeans.impl.store.DomImpl$TextNode;

        if $z0 == 0 goto label3;

        $r10 = "TEXT";

        goto label4;

     label3:
        $r10 = "CDATA";

     label4:
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $i0 = r9.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: int _cch>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r8);

        r9 = r9.<org.apache.xmlbeans.impl.store.DomImpl$CharNode: org.apache.xmlbeans.impl.store.DomImpl$CharNode _next>;

        goto label1;

     label5:
        return;
    }

    private static void dumpChars(java.io.PrintStream, java.lang.Object, int, int)
    {
        java.lang.StringBuffer $r4, $r5, $r6, $r8;
        int i0, i1, $i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r2, $r7;
        java.io.PrintStream r0;
        char $c3;
        java.lang.Object r1;

        r0 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\"");

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: java.lang.String getString(java.lang.Object,int,int)>(r1, i0, i1);

        i4 = 0;

     label1:
        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i4 >= $i2 goto label9;

        if i4 != 36 goto label2;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("...");

        goto label9;

     label2:
        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c3;

        if $i5 < 32 goto label3;

        $i6 = (int) $c3;

        if $i6 >= 127 goto label3;

        virtualinvoke r0.<java.io.PrintStream: void print(char)>($c3);

        goto label8;

     label3:
        $i7 = (int) $c3;

        if $i7 != 10 goto label4;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\n");

        goto label8;

     label4:
        $i8 = (int) $c3;

        if $i8 != 13 goto label5;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\r");

        goto label8;

     label5:
        $i9 = (int) $c3;

        if $i9 != 9 goto label6;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\t");

        goto label8;

     label6:
        $i10 = (int) $c3;

        if $i10 != 34 goto label7;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\\"");

        goto label8;

     label7:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<#");

        $i11 = (int) $c3;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i11);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r7);

     label8:
        i4 = i4 + 1;

        goto label1;

     label9:
        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\"");

        return;
    }

    private static void dumpXobj(java.io.PrintStream, org.apache.xmlbeans.impl.store.Xobj, int, java.lang.Object)
    {
        boolean $z0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r32;
        javax.xml.namespace.QName $r3, $r12, $r14, $r16, $r20, $r25;
        org.apache.xmlbeans.impl.store.DomImpl$CharNode $r5, $r8, $r10, $r11;
        java.lang.StringBuffer $r18, $r19, $r22, $r24, $r27, $r28;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13;
        java.lang.String $r2, $r9, $r13, $r15, $r17, $r21, $r23, $r26, $r29, $r34, r35;
        java.io.PrintStream r1;
        org.apache.xmlbeans.impl.store.Xobj r30, r36;
        java.lang.Object r0, $r4, $r6, $r7, $r31;
        java.lang.Class $r33;

        r1 := @parameter0: java.io.PrintStream;

        r30 := @parameter1: org.apache.xmlbeans.impl.store.Xobj;

        i0 := @parameter2: int;

        r0 := @parameter3: java.lang.Object;

        if r30 != null goto label01;

        return;

     label01:
        if r30 != r0 goto label02;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>("* ");

        goto label03;

     label02:
        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>("  ");

     label03:
        i12 = 0;

     label04:
        if i12 >= i0 goto label05;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>("  ");

        i12 = i12 + 1;

        goto label04;

     label05:
        $i1 = virtualinvoke r30.<org.apache.xmlbeans.impl.store.Xobj: int kind()>();

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.String kindName(int)>($i1);

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r2);

        $r3 = r30.<org.apache.xmlbeans.impl.store.Xobj: javax.xml.namespace.QName _name>;

        if $r3 == null goto label07;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" ");

        $r12 = r30.<org.apache.xmlbeans.impl.store.Xobj: javax.xml.namespace.QName _name>;

        $r13 = virtualinvoke $r12.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $i10 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i10 <= 0 goto label06;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = r30.<org.apache.xmlbeans.impl.store.Xobj: javax.xml.namespace.QName _name>;

        $r26 = virtualinvoke $r25.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r29);

     label06:
        $r14 = r30.<org.apache.xmlbeans.impl.store.Xobj: javax.xml.namespace.QName _name>;

        $r15 = virtualinvoke $r14.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r15);

        $r16 = r30.<org.apache.xmlbeans.impl.store.Xobj: javax.xml.namespace.QName _name>;

        $r17 = virtualinvoke $r16.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i11 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i11 <= 0 goto label07;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r20 = r30.<org.apache.xmlbeans.impl.store.Xobj: javax.xml.namespace.QName _name>;

        $r21 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r23);

     label07:
        $r31 = r30.<org.apache.xmlbeans.impl.store.Xobj: java.lang.Object _srcValue>;

        if $r31 != null goto label08;

        $r11 = r30.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesValue>;

        if $r11 == null goto label09;

     label08:
        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" Value( ");

        $r4 = r30.<org.apache.xmlbeans.impl.store.Xobj: java.lang.Object _srcValue>;

        $i3 = r30.<org.apache.xmlbeans.impl.store.Xobj: int _offValue>;

        $i2 = r30.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dumpChars(java.io.PrintStream,java.lang.Object,int,int)>(r1, $r4, $i3, $i2);

        $r5 = r30.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesValue>;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dumpCharNodes(java.io.PrintStream,org.apache.xmlbeans.impl.store.DomImpl$CharNode,java.lang.Object)>(r1, $r5, r0);

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" )");

     label09:
        $r32 = r30.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.values.TypeStoreUser _user>;

        if $r32 == null goto label10;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" (USER)");

     label10:
        $z0 = virtualinvoke r30.<org.apache.xmlbeans.impl.store.Xobj: boolean isVacant()>();

        if $z0 == 0 goto label11;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" (VACANT)");

     label11:
        $r6 = r30.<org.apache.xmlbeans.impl.store.Xobj: java.lang.Object _srcAfter>;

        if $r6 != null goto label12;

        $r10 = r30.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesAfter>;

        if $r10 == null goto label13;

     label12:
        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" After( ");

        $r7 = r30.<org.apache.xmlbeans.impl.store.Xobj: java.lang.Object _srcAfter>;

        $i5 = r30.<org.apache.xmlbeans.impl.store.Xobj: int _offAfter>;

        $i4 = r30.<org.apache.xmlbeans.impl.store.Xobj: int _cchAfter>;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dumpChars(java.io.PrintStream,java.lang.Object,int,int)>(r1, $r7, $i5, $i4);

        $r8 = r30.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.DomImpl$CharNode _charNodesAfter>;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dumpCharNodes(java.io.PrintStream,org.apache.xmlbeans.impl.store.DomImpl$CharNode,java.lang.Object)>(r1, $r8, r0);

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" )");

     label13:
        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dumpCurs(java.io.PrintStream,org.apache.xmlbeans.impl.store.Xobj,java.lang.Object)>(r1, r30, r0);

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dumpBookmarks(java.io.PrintStream,org.apache.xmlbeans.impl.store.Xobj,java.lang.Object)>(r1, r30, r0);

        $r33 = virtualinvoke r30.<java.lang.Object: java.lang.Class getClass()>();

        $r34 = virtualinvoke $r33.<java.lang.Class: java.lang.String getName()>();

        r35 = $r34;

        $i13 = virtualinvoke $r34.<java.lang.String: int lastIndexOf(int)>(46);

        if $i13 <= 0 goto label14;

        $i7 = $i13 + 1;

        $r9 = virtualinvoke $r34.<java.lang.String: java.lang.String substring(int)>($i7);

        r35 = $r9;

        $i8 = virtualinvoke $r9.<java.lang.String: int lastIndexOf(int)>(36);

        if $i8 <= 0 goto label14;

        $i9 = $i8 + 1;

        r35 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i9);

     label14:
        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" (");

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(r35);

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(")");

        virtualinvoke r1.<java.io.PrintStream: void println()>();

        r36 = r30.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _firstChild>;

     label15:
        if r36 == null goto label16;

        $i6 = i0 + 1;

        staticinvoke <org.apache.xmlbeans.impl.store.Cur: void dumpXobj(java.io.PrintStream,org.apache.xmlbeans.impl.store.Xobj,int,java.lang.Object)>(r1, r36, $i6, r0);

        r36 = r36.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        goto label15;

     label16:
        return;
    }

    void setId(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.String _id> = r1;

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.store.Cur: java.lang.String LOAD_USE_LOCALE_CHAR_UTIL> = "LOAD_USE_LOCALE_CHAR_UTIL";

        <org.apache.xmlbeans.impl.store.Cur: int NO_POS> = -2;

        <org.apache.xmlbeans.impl.store.Cur: int END_POS> = -1;

        <org.apache.xmlbeans.impl.store.Cur: int DISPOSED> = 3;

        <org.apache.xmlbeans.impl.store.Cur: int EMBEDDED> = 2;

        <org.apache.xmlbeans.impl.store.Cur: int REGISTERED> = 1;

        <org.apache.xmlbeans.impl.store.Cur: int POOLED> = 0;

        <org.apache.xmlbeans.impl.store.Cur: int PROCINST> = 5;

        <org.apache.xmlbeans.impl.store.Cur: int COMMENT> = 4;

        <org.apache.xmlbeans.impl.store.Cur: int ATTR> = 3;

        <org.apache.xmlbeans.impl.store.Cur: int ELEM> = 2;

        <org.apache.xmlbeans.impl.store.Cur: int ROOT> = 1;

        <org.apache.xmlbeans.impl.store.Cur: int TEXT> = 0;

        $r0 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$store$Cur>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Cur");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$store$Cur> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$store$Cur>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.store.Cur: boolean $assertionsDisabled> = $z1;

        return;
    }
}
