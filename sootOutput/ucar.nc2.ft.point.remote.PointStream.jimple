public class ucar.nc2.ft.point.remote.PointStream extends java.lang.Object
{
    private static final byte[] MAGIC_StationList;
    private static final byte[] MAGIC_PointFeatureCollection;
    private static final byte[] MAGIC_PointFeature;
    private static final boolean debug;

    public void <init>()
    {
        ucar.nc2.ft.point.remote.PointStream r0;

        r0 := @this: ucar.nc2.ft.point.remote.PointStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static ucar.nc2.ft.point.remote.PointStream$MessageType readMagic(java.io.InputStream) throws java.io.IOException
    {
        byte[] r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        ucar.nc2.ft.point.remote.PointStream$MessageType $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r0 = newarray (byte)[4];

        $i0 = staticinvoke <ucar.nc2.stream.NcStream: int readFully(java.io.InputStream,byte[])>(r1, r0);

        if $i0 == 4 goto label1;

        $r18 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType Eos>;

        return $r18;

     label1:
        $r2 = <ucar.nc2.ft.point.remote.PointStream: byte[] MAGIC_PointFeature>;

        $z0 = staticinvoke <ucar.nc2.ft.point.remote.PointStream: boolean test(byte[],byte[])>(r0, $r2);

        if $z0 == 0 goto label2;

        $r17 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType PointFeature>;

        return $r17;

     label2:
        $r3 = <ucar.nc2.ft.point.remote.PointStream: byte[] MAGIC_PointFeatureCollection>;

        $z1 = staticinvoke <ucar.nc2.ft.point.remote.PointStream: boolean test(byte[],byte[])>(r0, $r3);

        if $z1 == 0 goto label3;

        $r16 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType PointFeatureCollection>;

        return $r16;

     label3:
        $r4 = <ucar.nc2.ft.point.remote.PointStream: byte[] MAGIC_StationList>;

        $z2 = staticinvoke <ucar.nc2.ft.point.remote.PointStream: boolean test(byte[],byte[])>(r0, $r4);

        if $z2 == 0 goto label4;

        $r15 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType StationList>;

        return $r15;

     label4:
        $r5 = <ucar.nc2.stream.NcStream: byte[] MAGIC_START>;

        $z3 = staticinvoke <ucar.nc2.ft.point.remote.PointStream: boolean test(byte[],byte[])>(r0, $r5);

        if $z3 == 0 goto label5;

        $r14 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType Start>;

        return $r14;

     label5:
        $r6 = <ucar.nc2.stream.NcStream: byte[] MAGIC_HEADER>;

        $z4 = staticinvoke <ucar.nc2.ft.point.remote.PointStream: boolean test(byte[],byte[])>(r0, $r6);

        if $z4 == 0 goto label6;

        $r13 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType Header>;

        return $r13;

     label6:
        $r7 = <ucar.nc2.stream.NcStream: byte[] MAGIC_DATA>;

        $z5 = staticinvoke <ucar.nc2.ft.point.remote.PointStream: boolean test(byte[],byte[])>(r0, $r7);

        if $z5 == 0 goto label7;

        $r12 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType Data>;

        return $r12;

     label7:
        $r8 = <ucar.nc2.stream.NcStream: byte[] MAGIC_END>;

        $z6 = staticinvoke <ucar.nc2.ft.point.remote.PointStream: boolean test(byte[],byte[])>(r0, $r8);

        if $z6 == 0 goto label8;

        $r11 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType End>;

        return $r11;

     label8:
        $r9 = <ucar.nc2.stream.NcStream: byte[] MAGIC_ERR>;

        $z7 = staticinvoke <ucar.nc2.ft.point.remote.PointStream: boolean test(byte[],byte[])>(r0, $r9);

        if $z7 == 0 goto label9;

        $r10 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType Error>;

        return $r10;

     label9:
        return null;
    }

    public static int writeMagic(java.io.OutputStream, ucar.nc2.ft.point.remote.PointStream$MessageType) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r3, $r4, $r5, $r6, $r7;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        ucar.nc2.ft.point.remote.PointStream$MessageType r0;

        r2 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: ucar.nc2.ft.point.remote.PointStream$MessageType;

        $r1 = <ucar.nc2.ft.point.remote.PointStream$1: int[] $SwitchMap$ucar$nc2$ft$point$remote$PointStream$MessageType>;

        $i0 = virtualinvoke r0.<ucar.nc2.ft.point.remote.PointStream$MessageType: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        $r7 = <ucar.nc2.ft.point.remote.PointStream: byte[] MAGIC_PointFeature>;

        $i6 = staticinvoke <ucar.nc2.stream.NcStream: int writeBytes(java.io.OutputStream,byte[])>(r2, $r7);

        return $i6;

     label2:
        $r6 = <ucar.nc2.ft.point.remote.PointStream: byte[] MAGIC_PointFeatureCollection>;

        $i5 = staticinvoke <ucar.nc2.stream.NcStream: int writeBytes(java.io.OutputStream,byte[])>(r2, $r6);

        return $i5;

     label3:
        $r5 = <ucar.nc2.ft.point.remote.PointStream: byte[] MAGIC_StationList>;

        $i4 = staticinvoke <ucar.nc2.stream.NcStream: int writeBytes(java.io.OutputStream,byte[])>(r2, $r5);

        return $i4;

     label4:
        $r4 = <ucar.nc2.stream.NcStream: byte[] MAGIC_END>;

        $i3 = staticinvoke <ucar.nc2.stream.NcStream: int writeBytes(java.io.OutputStream,byte[])>(r2, $r4);

        return $i3;

     label5:
        $r3 = <ucar.nc2.stream.NcStream: byte[] MAGIC_ERR>;

        $i2 = staticinvoke <ucar.nc2.stream.NcStream: int writeBytes(java.io.OutputStream,byte[])>(r2, $r3);

        return $i2;

     label6:
        return 0;
    }

    private static boolean test(byte[], byte[])
    {
        byte[] r0, r1;
        byte $b3, $b4;
        int $i0, $i1, $i2, i5, $i6, $i7;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        i5 = 0;

     label2:
        $i2 = lengthof r0;

        if i5 >= $i2 goto label4;

        $b4 = r0[i5];

        $b3 = r1[i5];

        $i6 = (int) $b4;

        $i7 = (int) $b3;

        if $i6 == $i7 goto label3;

        return 0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection encodePointFeatureCollection(java.lang.String, ucar.nc2.ft.PointFeature) throws java.io.IOException
    {
        ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder $r12;
        java.lang.Object[] $r23;
        ucar.ma2.Section $r18;
        ucar.ma2.StructureMembers$Member r11;
        ucar.ma2.StructureData $r5;
        ucar.nc2.ft.PointFeature r2;
        int[] $r19;
        java.lang.String r1, $r4, $r13, $r14, $r15, $r21, $r22;
        boolean $z0;
        java.io.PrintStream $r24;
        java.util.Iterator $r8;
        ucar.nc2.stream.NcStreamProto$DataType $r17;
        ucar.nc2.stream.NcStreamProto$Section $r20;
        ucar.nc2.units.DateUnit $r3;
        ucar.ma2.DataType $r16;
        ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection$Builder $r0;
        java.util.List $r7;
        ucar.ma2.StructureMembers $r6;
        ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection $r9;
        java.lang.Object $r10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: ucar.nc2.ft.PointFeature;

        $r0 = staticinvoke <ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection: ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection$Builder newBuilder()>();

        if r1 != null goto label1;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = newarray (java.lang.Object)[0];

        virtualinvoke $r24.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("HEY null pointstream name%n", $r23);

     label1:
        virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection$Builder: ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection$Builder setName(java.lang.String)>(r1);

        $r3 = interfaceinvoke r2.<ucar.nc2.ft.PointFeature: ucar.nc2.units.DateUnit getTimeUnit()>();

        $r4 = virtualinvoke $r3.<ucar.nc2.units.DateUnit: java.lang.String getUnitsString()>();

        virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection$Builder: ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection$Builder setTimeUnit(java.lang.String)>($r4);

        $r5 = interfaceinvoke r2.<ucar.nc2.ft.PointFeature: ucar.ma2.StructureData getData()>();

        $r6 = virtualinvoke $r5.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r7 = virtualinvoke $r6.<ucar.ma2.StructureMembers: java.util.List getMembers()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r11 = (ucar.ma2.StructureMembers$Member) $r10;

        $r12 = staticinvoke <ucar.nc2.ft.point.remote.PointStreamProto$Member: ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder newBuilder()>();

        $r13 = virtualinvoke r11.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        virtualinvoke $r12.<ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder setName(java.lang.String)>($r13);

        $r14 = virtualinvoke r11.<ucar.ma2.StructureMembers$Member: java.lang.String getDescription()>();

        if null == $r14 goto label3;

        $r22 = virtualinvoke r11.<ucar.ma2.StructureMembers$Member: java.lang.String getDescription()>();

        virtualinvoke $r12.<ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder setDesc(java.lang.String)>($r22);

     label3:
        $r15 = virtualinvoke r11.<ucar.ma2.StructureMembers$Member: java.lang.String getUnitsString()>();

        if null == $r15 goto label4;

        $r21 = virtualinvoke r11.<ucar.ma2.StructureMembers$Member: java.lang.String getUnitsString()>();

        virtualinvoke $r12.<ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder setUnits(java.lang.String)>($r21);

     label4:
        $r16 = virtualinvoke r11.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r17 = staticinvoke <ucar.nc2.stream.NcStream: ucar.nc2.stream.NcStreamProto$DataType encodeDataType(ucar.ma2.DataType)>($r16);

        virtualinvoke $r12.<ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder setDataType(ucar.nc2.stream.NcStreamProto$DataType)>($r17);

        $r18 = new ucar.ma2.Section;

        $r19 = virtualinvoke r11.<ucar.ma2.StructureMembers$Member: int[] getShape()>();

        specialinvoke $r18.<ucar.ma2.Section: void <init>(int[])>($r19);

        $r20 = staticinvoke <ucar.nc2.stream.NcStream: ucar.nc2.stream.NcStreamProto$Section encodeSection(ucar.ma2.Section)>($r18);

        virtualinvoke $r12.<ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder setSection(ucar.nc2.stream.NcStreamProto$Section)>($r20);

        virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection$Builder: ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection$Builder addMembers(ucar.nc2.ft.point.remote.PointStreamProto$Member$Builder)>($r12);

        goto label2;

     label5:
        $r9 = virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection$Builder: ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection build()>();

        return $r9;
    }

    public static ucar.nc2.ft.point.remote.PointStreamProto$PointFeature encodePointFeature(ucar.nc2.ft.PointFeature) throws java.io.IOException
    {
        byte[] $r11;
        java.lang.IllegalStateException $r17;
        java.lang.Integer $r9, $r10;
        java.nio.ByteBuffer $r5;
        ucar.ma2.StructureData $r3;
        ucar.ma2.ArrayStructureBB $r4;
        byte $b2;
        ucar.nc2.ft.point.remote.PointStreamProto$PointFeature $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.google.protobuf.ByteString $r12;
        java.util.List $r13;
        ucar.ma2.StructureMembers $r6;
        java.lang.StringBuilder $r18, $r19, $r20;
        java.lang.Object[] $r7;
        ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder $r0;
        ucar.nc2.ft.PointFeature r1;
        ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder $r2;
        int $i0, $i1;
        java.lang.String $r21, $r22, $r23;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        java.io.PrintStream $r8;
        java.util.Iterator $r15;
        ucar.unidata.geoloc.EarthLocation $r24;
        java.lang.Object $r16;

        r1 := @parameter0: ucar.nc2.ft.PointFeature;

        $r0 = staticinvoke <ucar.nc2.ft.point.remote.PointStreamProto$Location: ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder newBuilder()>();

        $d0 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: double getObservationTime()>();

        virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder setTime(double)>($d0);

        $d1 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: double getNominalTime()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z0 != 0 goto label1;

        $d3 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: double getNominalTime()>();

        $d4 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: double getObservationTime()>();

        $b2 = $d3 cmpl $d4;

        if $b2 == 0 goto label1;

        $d5 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: double getNominalTime()>();

        virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder setNomTime(double)>($d5);

     label1:
        $r24 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: ucar.unidata.geoloc.EarthLocation getLocation()>();

        $d6 = interfaceinvoke $r24.<ucar.unidata.geoloc.EarthLocation: double getLatitude()>();

        virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder setLat(double)>($d6);

        $d7 = interfaceinvoke $r24.<ucar.unidata.geoloc.EarthLocation: double getLongitude()>();

        virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder setLon(double)>($d7);

        $d8 = interfaceinvoke $r24.<ucar.unidata.geoloc.EarthLocation: double getAltitude()>();

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d8);

        if $z4 != 0 goto label2;

        $d2 = interfaceinvoke $r24.<ucar.unidata.geoloc.EarthLocation: double getAltitude()>();

        virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder setAlt(double)>($d2);

     label2:
        $r2 = staticinvoke <ucar.nc2.ft.point.remote.PointStreamProto$PointFeature: ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder newBuilder()>();

        virtualinvoke $r2.<ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder: ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder setLoc(ucar.nc2.ft.point.remote.PointStreamProto$Location$Builder)>($r0);

        $r3 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: ucar.ma2.StructureData getData()>();

        $r4 = staticinvoke <ucar.nc2.iosp.IospHelper: ucar.ma2.ArrayStructureBB copyToArrayBB(ucar.ma2.StructureData)>($r3);

        $r5 = virtualinvoke $r4.<ucar.ma2.ArrayStructureBB: java.nio.ByteBuffer getByteBuffer()>();

        $r6 = virtualinvoke $r3.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $i0 = virtualinvoke $r6.<ucar.ma2.StructureMembers: int getStructureSize()>();

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[0] = $r9;

        $i1 = virtualinvoke $r5.<java.nio.ByteBuffer: int position()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[1] = $r10;

        virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("encodePointFeature size= %d bb=%d%n", $r7);

        $r11 = virtualinvoke $r5.<java.nio.ByteBuffer: byte[] array()>();

        $r12 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>($r11);

        virtualinvoke $r2.<ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder: ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder setData(com.google.protobuf.ByteString)>($r12);

        $r13 = virtualinvoke $r4.<ucar.ma2.ArrayStructureBB: java.util.List getHeap()>();

        if $r13 == null goto label7;

        $r15 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $z2 = $r16 instanceof java.lang.String;

        if $z2 == 0 goto label4;

        $r23 = (java.lang.String) $r16;

        virtualinvoke $r2.<ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder: ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder addSdata(java.lang.String)>($r23);

        goto label6;

     label4:
        $z3 = $r16 instanceof java.lang.String[];

        if $z3 == 0 goto label5;

        $r22 = (java.lang.String) $r16;

        virtualinvoke $r2.<ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder: ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder addSdata(java.lang.String)>($r22);

        goto label6;

     label5:
        $r17 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal object on heap = ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label6:
        goto label3;

     label7:
        $r14 = virtualinvoke $r2.<ucar.nc2.ft.point.remote.PointStreamProto$PointFeature$Builder: ucar.nc2.ft.point.remote.PointStreamProto$PointFeature build()>();

        return $r14;
    }

    public static ucar.nc2.ft.point.remote.PointStreamProto$StationList encodeStations(java.util.List) throws java.io.IOException
    {
        ucar.nc2.ft.point.remote.PointStreamProto$StationList $r3;
        ucar.unidata.geoloc.Station r5;
        java.lang.String $r7, $r8, $r9, $r10, $r11;
        ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder $r6;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3;
        java.util.Iterator $r2;
        ucar.nc2.ft.point.remote.PointStreamProto$StationList$Builder $r0;
        java.util.List r1;
        java.lang.Object $r4;

        r1 := @parameter0: java.util.List;

        $r0 = staticinvoke <ucar.nc2.ft.point.remote.PointStreamProto$StationList: ucar.nc2.ft.point.remote.PointStreamProto$StationList$Builder newBuilder()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.unidata.geoloc.Station) $r4;

        $r6 = staticinvoke <ucar.nc2.ft.point.remote.PointStreamProto$Station: ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder newBuilder()>();

        $r7 = interfaceinvoke r5.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        virtualinvoke $r6.<ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder setId(java.lang.String)>($r7);

        $d0 = interfaceinvoke r5.<ucar.unidata.geoloc.Station: double getLatitude()>();

        virtualinvoke $r6.<ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder setLat(double)>($d0);

        $d1 = interfaceinvoke r5.<ucar.unidata.geoloc.Station: double getLongitude()>();

        virtualinvoke $r6.<ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder setLon(double)>($d1);

        $d2 = interfaceinvoke r5.<ucar.unidata.geoloc.Station: double getAltitude()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z1 != 0 goto label2;

        $d3 = interfaceinvoke r5.<ucar.unidata.geoloc.Station: double getAltitude()>();

        virtualinvoke $r6.<ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder setAlt(double)>($d3);

     label2:
        $r8 = interfaceinvoke r5.<ucar.unidata.geoloc.Station: java.lang.String getDescription()>();

        if $r8 == null goto label3;

        $r11 = interfaceinvoke r5.<ucar.unidata.geoloc.Station: java.lang.String getDescription()>();

        virtualinvoke $r6.<ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder setDesc(java.lang.String)>($r11);

     label3:
        $r9 = interfaceinvoke r5.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        if $r9 == null goto label4;

        $r10 = interfaceinvoke r5.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        virtualinvoke $r6.<ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder: ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder setWmoId(java.lang.String)>($r10);

     label4:
        virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$StationList$Builder: ucar.nc2.ft.point.remote.PointStreamProto$StationList$Builder addStations(ucar.nc2.ft.point.remote.PointStreamProto$Station$Builder)>($r6);

        goto label1;

     label5:
        $r3 = virtualinvoke $r0.<ucar.nc2.ft.point.remote.PointStreamProto$StationList$Builder: ucar.nc2.ft.point.remote.PointStreamProto$StationList build()>();

        return $r3;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2;

        <ucar.nc2.ft.point.remote.PointStream: boolean debug> = 1;

        $r0 = newarray (byte)[4];

        $r0[0] = -2;

        $r0[1] = -2;

        $r0[2] = -17;

        $r0[3] = -17;

        <ucar.nc2.ft.point.remote.PointStream: byte[] MAGIC_StationList> = $r0;

        $r1 = newarray (byte)[4];

        $r1[0] = -6;

        $r1[1] = -6;

        $r1[2] = -81;

        $r1[3] = -81;

        <ucar.nc2.ft.point.remote.PointStream: byte[] MAGIC_PointFeatureCollection> = $r1;

        $r2 = newarray (byte)[4];

        $r2[0] = -16;

        $r2[1] = -16;

        $r2[2] = 15;

        $r2[3] = 15;

        <ucar.nc2.ft.point.remote.PointStream: byte[] MAGIC_PointFeature> = $r2;

        return;
    }
}
