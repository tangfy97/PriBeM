public class com.sun.lwuit.spinner.Spinner extends com.sun.lwuit.List
{
    public static final int DATE_FORMAT_DD_MM_YYYY;
    public static final int DATE_FORMAT_MM_DD_YYYY;
    public static final int DATE_FORMAT_DD_MM_YY;
    public static final int DATE_FORMAT_MM_DD_YY;
    private static com.sun.lwuit.Image spinnerHandle;
    private long lastKeyInteraction;
    private com.sun.lwuit.TextField quickType;
    private boolean monthFirst;
    private int currentInputAlign;
    private static int inputSkipDelay;

    public static com.sun.lwuit.spinner.Spinner createTime(int, int, int, int, boolean, boolean)
    {
        com.sun.lwuit.spinner.SpinnerNumberModel $r1;
        com.sun.lwuit.spinner.Spinner $r0;
        com.sun.lwuit.spinner.DateTimeRenderer $r2;
        int i0, i1, i2, i3;
        boolean z0, z1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r0 = new com.sun.lwuit.spinner.Spinner;

        $r1 = new com.sun.lwuit.spinner.SpinnerNumberModel;

        specialinvoke $r1.<com.sun.lwuit.spinner.SpinnerNumberModel: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        $r2 = staticinvoke <com.sun.lwuit.spinner.DateTimeRenderer: com.sun.lwuit.spinner.DateTimeRenderer createTimeRenderer(boolean,boolean)>(z0, z1);

        specialinvoke $r0.<com.sun.lwuit.spinner.Spinner: void <init>(com.sun.lwuit.list.ListModel,com.sun.lwuit.list.ListCellRenderer)>($r1, $r2);

        return $r0;
    }

    public static com.sun.lwuit.spinner.Spinner createDate(long, long, long, char, int)
    {
        com.sun.lwuit.spinner.Spinner $r0;
        long l0, l1, l2;
        char c3;
        com.sun.lwuit.spinner.DateTimeRenderer $r2;
        com.sun.lwuit.spinner.SpinnerDateModel $r1;
        int i4;
        boolean $z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        c3 := @parameter3: char;

        i4 := @parameter4: int;

        $r0 = new com.sun.lwuit.spinner.Spinner;

        $r1 = new com.sun.lwuit.spinner.SpinnerDateModel;

        specialinvoke $r1.<com.sun.lwuit.spinner.SpinnerDateModel: void <init>(long,long,long)>(l0, l1, l2);

        $r2 = staticinvoke <com.sun.lwuit.spinner.DateTimeRenderer: com.sun.lwuit.spinner.DateTimeRenderer createDateRenderer(char,int)>(c3, i4);

        specialinvoke $r0.<com.sun.lwuit.spinner.Spinner: void <init>(com.sun.lwuit.list.ListModel,com.sun.lwuit.list.ListCellRenderer)>($r1, $r2);

        if i4 == 12 goto label1;

        if i4 != 2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r0.<com.sun.lwuit.spinner.Spinner: boolean monthFirst> = $z0;

        return $r0;
    }

    public static com.sun.lwuit.spinner.Spinner create(int, int, int, int)
    {
        com.sun.lwuit.spinner.SpinnerNumberModel $r1;
        com.sun.lwuit.list.DefaultListCellRenderer $r2;
        int i0, i1, i2, i3;
        com.sun.lwuit.spinner.Spinner $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r0 = new com.sun.lwuit.spinner.Spinner;

        $r1 = new com.sun.lwuit.spinner.SpinnerNumberModel;

        specialinvoke $r1.<com.sun.lwuit.spinner.SpinnerNumberModel: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        $r2 = new com.sun.lwuit.list.DefaultListCellRenderer;

        specialinvoke $r2.<com.sun.lwuit.list.DefaultListCellRenderer: void <init>(boolean)>(0);

        specialinvoke $r0.<com.sun.lwuit.spinner.Spinner: void <init>(com.sun.lwuit.list.ListModel,com.sun.lwuit.list.ListCellRenderer)>($r1, $r2);

        return $r0;
    }

    public static com.sun.lwuit.spinner.Spinner create(double, double, double, double)
    {
        com.sun.lwuit.spinner.SpinnerNumberModel $r1;
        com.sun.lwuit.spinner.Spinner $r0;
        com.sun.lwuit.spinner.Spinner$1 $r2;
        double d0, d1, d2, d3;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r0 = new com.sun.lwuit.spinner.Spinner;

        $r1 = new com.sun.lwuit.spinner.SpinnerNumberModel;

        specialinvoke $r1.<com.sun.lwuit.spinner.SpinnerNumberModel: void <init>(double,double,double,double)>(d0, d1, d2, d3);

        $r2 = new com.sun.lwuit.spinner.Spinner$1;

        specialinvoke $r2.<com.sun.lwuit.spinner.Spinner$1: void <init>(boolean)>(0);

        specialinvoke $r0.<com.sun.lwuit.spinner.Spinner: void <init>(com.sun.lwuit.list.ListModel,com.sun.lwuit.list.ListCellRenderer)>($r1, $r2);

        return $r0;
    }

    private void <init>(com.sun.lwuit.list.ListModel, com.sun.lwuit.list.ListCellRenderer)
    {
        com.sun.lwuit.list.ListModel r1;
        com.sun.lwuit.spinner.Spinner r0;
        java.lang.String[] $r10;
        com.sun.lwuit.Component $r6;
        com.sun.lwuit.plaf.Style $r7, $r8;
        com.sun.lwuit.list.ListCellRenderer r3, $r4, $r16;
        int $i0, $i1;
        com.sun.lwuit.TextField $r2, $r9, $r11, $r12, $r13, $r14, $r17;
        boolean $z0;
        com.sun.lwuit.list.DefaultListCellRenderer r5;
        java.lang.Object $r15;

        r0 := @this: com.sun.lwuit.spinner.Spinner;

        r1 := @parameter0: com.sun.lwuit.list.ListModel;

        r3 := @parameter1: com.sun.lwuit.list.ListCellRenderer;

        specialinvoke r0.<com.sun.lwuit.List: void <init>(com.sun.lwuit.list.ListModel)>(r1);

        $r2 = new com.sun.lwuit.TextField;

        specialinvoke $r2.<com.sun.lwuit.TextField: void <init>()>();

        r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType> = $r2;

        r0.<com.sun.lwuit.spinner.Spinner: int currentInputAlign> = 1;

        virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: void setListCellRenderer(com.sun.lwuit.list.ListCellRenderer)>(r3);

        virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: void setUIID(java.lang.String)>("Spinner");

        virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: void setFixedSelection(int)>(12);

        virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: void setOrientation(int)>(0);

        virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: void setInputOnFocus(boolean)>(0);

        virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: void setIsScrollVisible(boolean)>(0);

        $r4 = specialinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        r5 = (com.sun.lwuit.list.DefaultListCellRenderer) $r4;

        virtualinvoke r5.<com.sun.lwuit.list.DefaultListCellRenderer: void setRTL(boolean)>(0);

        virtualinvoke r5.<com.sun.lwuit.list.DefaultListCellRenderer: void setShowNumbers(boolean)>(0);

        virtualinvoke r5.<com.sun.lwuit.list.DefaultListCellRenderer: void setUIID(java.lang.String)>("SpinnerRenderer");

        $r6 = virtualinvoke r5.<com.sun.lwuit.list.DefaultListCellRenderer: com.sun.lwuit.Component getListFocusComponent(com.sun.lwuit.List)>(r0);

        $r7 = virtualinvoke $r6.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getSelectedStyle()>();

        virtualinvoke $r7.<com.sun.lwuit.plaf.Style: void setBgTransparency(int)>(0);

        $r8 = virtualinvoke $r6.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        virtualinvoke $r8.<com.sun.lwuit.plaf.Style: void setBgTransparency(int)>(0);

        $r9 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r9.<com.sun.lwuit.TextField: void setReplaceMenu(boolean)>(0);

        $r11 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = "123";

        virtualinvoke $r11.<com.sun.lwuit.TextField: void setInputModeOrder(java.lang.String[])>($r10);

        $r12 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r12.<com.sun.lwuit.TextField: void setFocus(boolean)>(1);

        $r13 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r13.<com.sun.lwuit.TextField: void setRTL(boolean)>(0);

        $r14 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r14.<com.sun.lwuit.TextField: void setAlignment(int)>(1);

        virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: void setIgnoreFocusComponentWhenUnfocused(boolean)>(1);

        $i0 = interfaceinvoke r1.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i1 = $i0 - 1;

        $r15 = interfaceinvoke r1.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>($i1);

        virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: void setRenderingPrototype(java.lang.Object)>($r15);

        $r16 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        $z0 = $r16 instanceof com.sun.lwuit.spinner.DateTimeRenderer;

        if $z0 == 0 goto label1;

        $r17 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r17.<com.sun.lwuit.TextField: void setColumns(int)>(2);

     label1:
        return;
    }

    protected void initComponent()
    {
        com.sun.lwuit.spinner.Spinner r0;
        com.sun.lwuit.Form $r1;

        r0 := @this: com.sun.lwuit.spinner.Spinner;

        $r1 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.Form getComponentForm()>();

        virtualinvoke $r1.<com.sun.lwuit.Form: void registerAnimated(com.sun.lwuit.animations.Animation)>(r0);

        return;
    }

    protected com.sun.lwuit.geom.Dimension calcScrollSize()
    {
        com.sun.lwuit.spinner.Spinner r0;
        com.sun.lwuit.geom.Dimension $r1;

        r0 := @this: com.sun.lwuit.spinner.Spinner;

        $r1 = specialinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension calcPreferredSize()>();

        return $r1;
    }

    protected com.sun.lwuit.geom.Dimension calcPreferredSize()
    {
        com.sun.lwuit.Component r15;
        com.sun.lwuit.plaf.Style $r1, $r2, $r3, $r4;
        com.sun.lwuit.list.ListCellRenderer $r6;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.list.ListModel $r7, $r13;
        com.sun.lwuit.spinner.Spinner r0;
        com.sun.lwuit.geom.Dimension $r8, $r9;
        int $i0, $i1, i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, $i19, i20;
        com.sun.lwuit.Display $r17;
        com.sun.lwuit.Image $r10, $r11, $r12, $r16;
        java.lang.Object $r5, $r14;

        r0 := @this: com.sun.lwuit.spinner.Spinner;

        i18 = 0;

        $r1 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $r2 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.plaf.Style getStyle()>();

        $i1 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        i2 = $i0 + $i1;

        $r3 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.plaf.Style getStyle()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: boolean isRTL()>();

        $i3 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z0, 3);

        $r4 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.plaf.Style getStyle()>();

        $z1 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: boolean isRTL()>();

        $i4 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 1);

        i5 = $i3 + $i4;

        $r5 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: java.lang.Object getRenderingPrototype()>();

        $r6 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        if $r5 == null goto label1;

        r15 = interfaceinvoke $r6.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, $r5, 0, 1);

        goto label3;

     label1:
        $r7 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $i6 = interfaceinvoke $r7.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i6 <= 0 goto label2;

        $r13 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $r14 = interfaceinvoke $r13.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(0);

        r15 = interfaceinvoke $r6.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, $r14, 0, 1);

        goto label3;

     label2:
        r15 = interfaceinvoke $r6.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, null, 0, 1);

     label3:
        $i19 = virtualinvoke r15.<com.sun.lwuit.Component: int getPreferredH()>();

        i20 = $i19;

        $r16 = <com.sun.lwuit.spinner.Spinner: com.sun.lwuit.Image spinnerHandle>;

        if $r16 == null goto label5;

        $r10 = <com.sun.lwuit.spinner.Spinner: com.sun.lwuit.Image spinnerHandle>;

        $i16 = virtualinvoke $r10.<com.sun.lwuit.Image: int getHeight()>();

        if $i16 <= $i19 goto label4;

        $r12 = <com.sun.lwuit.spinner.Spinner: com.sun.lwuit.Image spinnerHandle>;

        i20 = virtualinvoke $r12.<com.sun.lwuit.Image: int getHeight()>();

     label4:
        $r11 = <com.sun.lwuit.spinner.Spinner: com.sun.lwuit.Image spinnerHandle>;

        $i17 = virtualinvoke $r11.<com.sun.lwuit.Image: int getWidth()>();

        i18 = 0 + $i17;

     label5:
        $r17 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z2 = virtualinvoke $r17.<com.sun.lwuit.Display: boolean isTouchScreenDevice()>();

        if $z2 == 0 goto label6;

        $r9 = new com.sun.lwuit.geom.Dimension;

        $i11 = virtualinvoke r15.<com.sun.lwuit.Component: int getPreferredW()>();

        $i12 = $i11 + i18;

        $i15 = $i12 + i5;

        $i13 = i20 * 3;

        $i14 = $i13 + i2;

        specialinvoke $r9.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i15, $i14);

        return $r9;

     label6:
        $r8 = new com.sun.lwuit.geom.Dimension;

        $i7 = virtualinvoke r15.<com.sun.lwuit.Component: int getPreferredW()>();

        $i8 = $i7 + i18;

        $i10 = $i8 + i5;

        $i9 = i20 + i2;

        specialinvoke $r8.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i10, $i9);

        return $r8;
    }

    public void keyPressed(int)
    {
        int i0, $i1;
        com.sun.lwuit.spinner.Spinner r1;
        long $l2;
        com.sun.lwuit.TextField $r2;
        com.sun.lwuit.Display $r0;

        r1 := @this: com.sun.lwuit.spinner.Spinner;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i1 = virtualinvoke $r0.<com.sun.lwuit.Display: int getGameAction(int)>(i0);

        if $i1 <= 0 goto label1;

        specialinvoke r1.<com.sun.lwuit.List: void keyPressed(int)>(i0);

        goto label2;

     label1:
        $r2 = r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r2.<com.sun.lwuit.TextField: void keyPressed(int)>(i0);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1.<com.sun.lwuit.spinner.Spinner: long lastKeyInteraction> = $l2;

     label2:
        return;
    }

    public void setValue(java.lang.Object)
    {
        com.sun.lwuit.spinner.SpinnerNumberModel $r3;
        com.sun.lwuit.list.ListModel $r1;
        java.util.Date $r4;
        com.sun.lwuit.spinner.Spinner r0;
        java.lang.Object r2;
        com.sun.lwuit.spinner.SpinnerDateModel $r5;
        boolean $z0;

        r0 := @this: com.sun.lwuit.spinner.Spinner;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $z0 = $r1 instanceof com.sun.lwuit.spinner.SpinnerDateModel;

        if $z0 == 0 goto label1;

        $r5 = (com.sun.lwuit.spinner.SpinnerDateModel) $r1;

        $r4 = (java.util.Date) r2;

        virtualinvoke $r5.<com.sun.lwuit.spinner.SpinnerDateModel: void setValue(java.util.Date)>($r4);

        goto label2;

     label1:
        $r3 = (com.sun.lwuit.spinner.SpinnerNumberModel) $r1;

        virtualinvoke $r3.<com.sun.lwuit.spinner.SpinnerNumberModel: void setValue(java.lang.Object)>(r2);

     label2:
        return;
    }

    public java.lang.Object getValue()
    {
        com.sun.lwuit.spinner.SpinnerNumberModel $r2;
        com.sun.lwuit.list.ListModel $r1;
        com.sun.lwuit.spinner.Spinner r0;
        java.lang.Object $r3, $r5;
        com.sun.lwuit.spinner.SpinnerDateModel $r4;
        boolean $z0;

        r0 := @this: com.sun.lwuit.spinner.Spinner;

        $r1 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $z0 = $r1 instanceof com.sun.lwuit.spinner.SpinnerDateModel;

        if $z0 == 0 goto label1;

        $r4 = (com.sun.lwuit.spinner.SpinnerDateModel) $r1;

        $r5 = virtualinvoke $r4.<com.sun.lwuit.spinner.SpinnerDateModel: java.lang.Object getValue()>();

        return $r5;

     label1:
        $r2 = (com.sun.lwuit.spinner.SpinnerNumberModel) $r1;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.spinner.SpinnerNumberModel: java.lang.Object getValue()>();

        return $r3;
    }

    public void keyReleased(int)
    {
        java.lang.Integer $r27, $r41, $r43;
        byte $b4, $b5, $b7, $b8;
        com.sun.lwuit.list.ListCellRenderer $r5, $r29, $r31;
        com.sun.lwuit.list.ListModel $r6, $r7, $r9, $r12, $r13, $r16, $r18, $r21;
        java.lang.Double $r42;
        long $l2;
        java.util.Calendar $r22;
        java.lang.String $r4, $r15, $r36, $r39;
        com.sun.lwuit.TextField $r2, $r3, $r25, $r28, $r35, $r38;
        com.sun.lwuit.Display $r0;
        java.util.Date $r24, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.sun.lwuit.spinner.SpinnerNumberModel $r8, $r10, $r17, $r19, r40;
        com.sun.lwuit.spinner.Spinner r1;
        int i0, $i1, $i3, $i6, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, $i40, $i41, $i42, $i43;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        com.sun.lwuit.spinner.DateTimeRenderer $r30, $r32;
        java.lang.IllegalArgumentException $r33;
        java.lang.Object $r14, $r23, $r26;

        r1 := @this: com.sun.lwuit.spinner.Spinner;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i1 = virtualinvoke $r0.<com.sun.lwuit.Display: int getGameAction(int)>(i0);

        if $i1 <= 0 goto label01;

        specialinvoke r1.<com.sun.lwuit.List: void keyReleased(int)>(i0);

        goto label39;

     label01:
        $r2 = r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r2.<com.sun.lwuit.TextField: void keyReleased(int)>(i0);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1.<com.sun.lwuit.spinner.Spinner: long lastKeyInteraction> = $l2;

        $r3 = r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $r4 = virtualinvoke $r3.<com.sun.lwuit.TextField: java.lang.String getText()>();

        $r5 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        $z0 = $r5 instanceof com.sun.lwuit.spinner.DateTimeRenderer;

        if $z0 == 0 goto label27;

        $r21 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $z3 = $r21 instanceof com.sun.lwuit.spinner.SpinnerNumberModel;

        if $z3 == 0 goto label16;

        $r26 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: java.lang.Object getValue()>();

        $r27 = (java.lang.Integer) $r26;

        $i22 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

        i28 = $i22 % 60;

        i29 = $i22 / 60;

        i30 = i29 / 60;

        i31 = i29 % 60;

        $i23 = r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign>;

        tableswitch($i23)
        {
            case 1: goto label02;
            case 2: goto label10;
            case 3: goto label08;
            case 4: goto label06;
            default: goto label10;
        };

     label02:
        $i27 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        i30 = $i27;

        $r31 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        $r32 = (com.sun.lwuit.spinner.DateTimeRenderer) $r31;

        $z7 = virtualinvoke $r32.<com.sun.lwuit.spinner.DateTimeRenderer: boolean isTwentyFourHours()>();

        if $z7 == 0 goto label04;

        if $i27 <= 24 goto label10;

     label03:
        return;

     label04:
        if $i27 <= 12 goto label10;

     label05:
        return;

     label06:
        $i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        i31 = $i24;

        if $i24 <= 59 goto label10;

     label07:
        return;

     label08:
        $i26 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        i28 = $i26;

        if $i26 <= 59 goto label10;

     label09:
        return;

     label10:
        $i32 = i31 * 60;

        $i33 = i28 + $i32;

        $i34 = i30 * 60;

        $i35 = $i34 * 60;

        $i36 = $i33 + $i35;

        $r41 = new java.lang.Integer;

        specialinvoke $r41.<java.lang.Integer: void <init>(int)>($i36);

        virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: void setValue(java.lang.Object)>($r41);

        $r35 = r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $r36 = virtualinvoke $r35.<com.sun.lwuit.TextField: java.lang.String getText()>();

        $i37 = virtualinvoke $r36.<java.lang.String: int length()>();

        if $i37 <= 1 goto label15;

        $r28 = r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r28.<com.sun.lwuit.TextField: void setText(java.lang.String)>("");

        $i25 = r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign>;

        tableswitch($i25)
        {
            case 1: goto label11;
            case 2: goto label15;
            case 3: goto label14;
            case 4: goto label12;
            default: goto label15;
        };

     label11:
        r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign> = 4;

        goto label15;

     label12:
        $r29 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        $r30 = (com.sun.lwuit.spinner.DateTimeRenderer) $r29;

        $z6 = virtualinvoke $r30.<com.sun.lwuit.spinner.DateTimeRenderer: boolean isShowSeconds()>();

        if $z6 == 0 goto label13;

        r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign> = 3;

        goto label15;

     label13:
        r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign> = 1;

        r1.<com.sun.lwuit.spinner.Spinner: long lastKeyInteraction> = -1L;

        goto label15;

     label14:
        r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign> = 1;

        r1.<com.sun.lwuit.spinner.Spinner: long lastKeyInteraction> = -1L;

     label15:
        goto label26;

     label16:
        $r22 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r23 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: java.lang.Object getValue()>();

        $r24 = (java.util.Date) $r23;

        virtualinvoke $r22.<java.util.Calendar: void setTime(java.util.Date)>($r24);

        $i9 = r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign>;

        tableswitch($i9)
        {
            case 1: goto label17;
            case 2: goto label22;
            case 3: goto label21;
            case 4: goto label19;
            default: goto label22;
        };

     label17:
        $z5 = r1.<com.sun.lwuit.spinner.Spinner: boolean monthFirst>;

        if $z5 == 0 goto label18;

        $i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $i21 = $i20 - 1;

        virtualinvoke $r22.<java.util.Calendar: void set(int,int)>(2, $i21);

        goto label22;

     label18:
        $i19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        virtualinvoke $r22.<java.util.Calendar: void set(int,int)>(5, $i19);

        goto label22;

     label19:
        $z4 = r1.<com.sun.lwuit.spinner.Spinner: boolean monthFirst>;

        if $z4 == 0 goto label20;

        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        virtualinvoke $r22.<java.util.Calendar: void set(int,int)>(5, $i13);

        goto label22;

     label20:
        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $i11 = $i10 - 1;

        virtualinvoke $r22.<java.util.Calendar: void set(int,int)>(2, $i11);

        goto label22;

     label21:
        $i14 = virtualinvoke $r22.<java.util.Calendar: int get(int)>(1);

        $i15 = $i14 % 100;

        $i16 = $i14 - $i15;

        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $i18 = $i16 + $i17;

        virtualinvoke $r22.<java.util.Calendar: void set(int,int)>(1, $i18);

     label22:
        $r37 = virtualinvoke $r22.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: void setValue(java.lang.Object)>($r37);

        $r38 = r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $r39 = virtualinvoke $r38.<com.sun.lwuit.TextField: java.lang.String getText()>();

        $i38 = virtualinvoke $r39.<java.lang.String: int length()>();

        if $i38 <= 1 goto label26;

        $r25 = r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r25.<com.sun.lwuit.TextField: void setText(java.lang.String)>("");

        $i12 = r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign>;

        tableswitch($i12)
        {
            case 1: goto label23;
            case 2: goto label26;
            case 3: goto label25;
            case 4: goto label24;
            default: goto label26;
        };

     label23:
        r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign> = 4;

        goto label26;

     label24:
        r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign> = 3;

        goto label26;

     label25:
        r1.<com.sun.lwuit.spinner.Spinner: int currentInputAlign> = 1;

        r1.<com.sun.lwuit.spinner.Spinner: long lastKeyInteraction> = -1L;

     label26:
        return;

     label27:
        $r6 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        r40 = (com.sun.lwuit.spinner.SpinnerNumberModel) $r6;

        $z1 = r40.<com.sun.lwuit.spinner.SpinnerNumberModel: boolean realValues>;

        if $z1 == 0 goto label30;

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $r16 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $r17 = (com.sun.lwuit.spinner.SpinnerNumberModel) $r16;

        $d5 = virtualinvoke $r17.<com.sun.lwuit.spinner.SpinnerNumberModel: double getMax()>();

        $b7 = $d4 cmpl $d5;

        $i40 = (int) $b7;

        if $i40 > 0 goto label28;

        $r18 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $r19 = (com.sun.lwuit.spinner.SpinnerNumberModel) $r18;

        $d6 = virtualinvoke $r19.<com.sun.lwuit.spinner.SpinnerNumberModel: double getMin()>();

        $b8 = $d4 cmpg $d6;

        $i41 = (int) $b8;

        if $i41 >= 0 goto label29;

     label28:
        return;

     label29:
        $r42 = new java.lang.Double;

        specialinvoke $r42.<java.lang.Double: void <init>(double)>($d4);

        virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: void setValue(java.lang.Object)>($r42);

        goto label33;

     label30:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $d0 = (double) $i3;

        $r7 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $r8 = (com.sun.lwuit.spinner.SpinnerNumberModel) $r7;

        $d1 = virtualinvoke $r8.<com.sun.lwuit.spinner.SpinnerNumberModel: double getMax()>();

        $b4 = $d0 cmpl $d1;

        $i42 = (int) $b4;

        if $i42 > 0 goto label31;

        $d2 = (double) $i3;

        $r9 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $r10 = (com.sun.lwuit.spinner.SpinnerNumberModel) $r9;

        $d3 = virtualinvoke $r10.<com.sun.lwuit.spinner.SpinnerNumberModel: double getMin()>();

        $b5 = $d2 cmpg $d3;

        $i43 = (int) $b5;

        if $i43 >= 0 goto label32;

     label31:
        return;

     label32:
        $r43 = new java.lang.Integer;

        specialinvoke $r43.<java.lang.Integer: void <init>(int)>($i3);

        virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: void setValue(java.lang.Object)>($r43);

     label33:
        $r12 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $i6 = interfaceinvoke $r12.<com.sun.lwuit.list.ListModel: int getSize()>();

        i39 = 0;

     label34:
        if i39 >= $i6 goto label37;

        $r13 = virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListModel getModel()>();

        $r14 = interfaceinvoke $r13.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i39);

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        $z2 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z2 == 0 goto label36;

        virtualinvoke r1.<com.sun.lwuit.spinner.Spinner: void setSelectedIndex(int)>(i39);

     label35:
        return;

     label36:
        i39 = i39 + 1;

        goto label34;

     label37:
        goto label39;

     label38:
        $r33 := @caughtexception;

        virtualinvoke $r33.<java.lang.IllegalArgumentException: void printStackTrace()>();

     label39:
        return;

        catch java.lang.IllegalArgumentException from label01 to label03 with label38;
        catch java.lang.IllegalArgumentException from label04 to label05 with label38;
        catch java.lang.IllegalArgumentException from label06 to label07 with label38;
        catch java.lang.IllegalArgumentException from label08 to label09 with label38;
        catch java.lang.IllegalArgumentException from label10 to label26 with label38;
        catch java.lang.IllegalArgumentException from label27 to label28 with label38;
        catch java.lang.IllegalArgumentException from label29 to label31 with label38;
        catch java.lang.IllegalArgumentException from label32 to label35 with label38;
        catch java.lang.IllegalArgumentException from label36 to label37 with label38;
    }

    public boolean isRTL()
    {
        com.sun.lwuit.spinner.Spinner r0;

        r0 := @this: com.sun.lwuit.spinner.Spinner;

        return 0;
    }

    public void setRTL(boolean)
    {
        com.sun.lwuit.spinner.Spinner r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.spinner.Spinner;

        z0 := @parameter0: boolean;

        return;
    }

    public void paint(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.plaf.Style $r8, $r14, $r19, $r22;
        byte $b5;
        com.sun.lwuit.list.ListCellRenderer $r10;
        com.sun.lwuit.Graphics r1;
        long $l0, $l2, $l3, $l4;
        com.sun.lwuit.TextField $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r13, $r16, $r17, $r18, $r21, $r25;
        boolean $z0, $z1, $z2, $z3;
        com.sun.lwuit.spinner.Spinner r0;
        int $i1, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44;
        char $c18, $c26;
        com.sun.lwuit.Image $r2, $r23, $r24;
        com.sun.lwuit.Font $r15, $r20;

        r0 := @this: com.sun.lwuit.spinner.Spinner;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        specialinvoke r0.<com.sun.lwuit.List: void paint(com.sun.lwuit.Graphics)>(r1);

        $r2 = <com.sun.lwuit.spinner.Spinner: com.sun.lwuit.Image spinnerHandle>;

        if $r2 == null goto label1;

        $r22 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.plaf.Style getStyle()>();

        $r23 = <com.sun.lwuit.spinner.Spinner: com.sun.lwuit.Image spinnerHandle>;

        $i32 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getX()>();

        $i33 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getWidth()>();

        $i34 = $i32 + $i33;

        $r24 = <com.sun.lwuit.spinner.Spinner: com.sun.lwuit.Image spinnerHandle>;

        $i35 = virtualinvoke $r24.<com.sun.lwuit.Image: int getWidth()>();

        $i36 = $i34 - $i35;

        $z2 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: boolean isRTL()>();

        $i37 = virtualinvoke $r22.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z2, 1);

        $i38 = $i36 - $i37;

        $z3 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: boolean isRTL()>();

        $i39 = virtualinvoke $r22.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z3, 3);

        $i40 = $i38 - $i39;

        $i41 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getY()>();

        $i42 = virtualinvoke $r22.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i43 = $i41 + $i42;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>($r23, $i40, $i43);

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = <com.sun.lwuit.spinner.Spinner: int inputSkipDelay>;

        $l2 = (long) $i1;

        $l4 = $l0 - $l2;

        $l3 = r0.<com.sun.lwuit.spinner.Spinner: long lastKeyInteraction>;

        $b5 = $l4 cmp $l3;

        $i44 = (int) $b5;

        if $i44 < 0 goto label2;

        $r21 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $z1 = virtualinvoke $r21.<com.sun.lwuit.TextField: boolean isPendingCommit()>();

        if $z1 == 0 goto label8;

     label2:
        $r3 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $i6 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getWidth()>();

        $r4 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $i7 = virtualinvoke $r4.<com.sun.lwuit.TextField: int getPreferredW()>();

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i7);

        virtualinvoke $r3.<com.sun.lwuit.TextField: void setWidth(int)>($i8);

        $r5 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $i9 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getHeight()>();

        $r6 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $i10 = virtualinvoke $r6.<com.sun.lwuit.TextField: int getPreferredH()>();

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i10);

        virtualinvoke $r5.<com.sun.lwuit.TextField: void setHeight(int)>($i11);

        $r7 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $r8 = virtualinvoke $r7.<com.sun.lwuit.TextField: com.sun.lwuit.plaf.Style getStyle()>();

        $r9 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $i12 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getScrollY()>();

        $i13 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getY()>();

        $i14 = $i12 + $i13;

        virtualinvoke $r9.<com.sun.lwuit.TextField: void setY(int)>($i14);

        $r10 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        $z0 = $r10 instanceof com.sun.lwuit.spinner.DateTimeRenderer;

        if $z0 == 0 goto label6;

        $i16 = r0.<com.sun.lwuit.spinner.Spinner: int currentInputAlign>;

        lookupswitch($i16)
        {
            case 1: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label3:
        $r16 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $i24 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getX()>();

        virtualinvoke $r16.<com.sun.lwuit.TextField: void setX(int)>($i24);

        goto label7;

     label4:
        $r12 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $i17 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getX()>();

        $r13 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $r14 = virtualinvoke $r13.<com.sun.lwuit.TextField: com.sun.lwuit.plaf.Style getStyle()>();

        $r15 = virtualinvoke $r14.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $c18 = staticinvoke <com.sun.lwuit.TextArea: char getWidestChar()>();

        $i19 = virtualinvoke $r15.<com.sun.lwuit.Font: int charWidth(char)>($c18);

        $i20 = $i19 * 4;

        $i21 = $i17 + $i20;

        $i22 = virtualinvoke $r8.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 3);

        $i23 = $i21 + $i22;

        virtualinvoke $r12.<com.sun.lwuit.TextField: void setX(int)>($i23);

        goto label7;

     label5:
        $r17 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $i25 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getX()>();

        $r18 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $r19 = virtualinvoke $r18.<com.sun.lwuit.TextField: com.sun.lwuit.plaf.Style getStyle()>();

        $r20 = virtualinvoke $r19.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $c26 = staticinvoke <com.sun.lwuit.TextArea: char getWidestChar()>();

        $i27 = virtualinvoke $r20.<com.sun.lwuit.Font: int charWidth(char)>($c26);

        $i28 = $i27 * 2;

        $i29 = $i25 + $i28;

        $i30 = virtualinvoke $r8.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 3);

        $i31 = $i29 + $i30;

        virtualinvoke $r17.<com.sun.lwuit.TextField: void setX(int)>($i31);

        goto label7;

     label6:
        $r11 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $i15 = virtualinvoke r0.<com.sun.lwuit.spinner.Spinner: int getX()>();

        virtualinvoke $r11.<com.sun.lwuit.TextField: void setX(int)>($i15);

     label7:
        $r25 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r25.<com.sun.lwuit.TextField: void paintComponent(com.sun.lwuit.Graphics,boolean)>(r1, 1);

     label8:
        return;
    }

    public boolean animate()
    {
        com.sun.lwuit.spinner.Spinner r0;
        long $l0, $l2, $l4, $l5, $l6;
        byte $b1, $b7;
        int $i3, $i8;
        com.sun.lwuit.TextField $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.spinner.Spinner;

        $z0 = specialinvoke r0.<com.sun.lwuit.List: boolean animate()>();

        $l0 = r0.<com.sun.lwuit.spinner.Spinner: long lastKeyInteraction>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label2;

        $r1 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r1.<com.sun.lwuit.TextField: boolean animate()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i3 = <com.sun.lwuit.spinner.Spinner: int inputSkipDelay>;

        $l4 = (long) $i3;

        $l6 = $l2 - $l4;

        $l5 = r0.<com.sun.lwuit.spinner.Spinner: long lastKeyInteraction>;

        $b7 = $l6 cmp $l5;

        $i8 = (int) $b7;

        if $i8 <= 0 goto label1;

        $r2 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        $z1 = virtualinvoke $r2.<com.sun.lwuit.TextField: boolean isPendingCommit()>();

        if $z1 != 0 goto label1;

        r0.<com.sun.lwuit.spinner.Spinner: long lastKeyInteraction> = -1L;

        $r3 = r0.<com.sun.lwuit.spinner.Spinner: com.sun.lwuit.TextField quickType>;

        virtualinvoke $r3.<com.sun.lwuit.TextField: void clear()>();

        r0.<com.sun.lwuit.spinner.Spinner: int currentInputAlign> = 1;

     label1:
        return 1;

     label2:
        return $z0;
    }

    public static com.sun.lwuit.Image getSpinnerHandle()
    {
        com.sun.lwuit.Image $r0;

        $r0 = <com.sun.lwuit.spinner.Spinner: com.sun.lwuit.Image spinnerHandle>;

        return $r0;
    }

    public static void setSpinnerHandle(com.sun.lwuit.Image)
    {
        com.sun.lwuit.Image r0;

        r0 := @parameter0: com.sun.lwuit.Image;

        <com.sun.lwuit.spinner.Spinner: com.sun.lwuit.Image spinnerHandle> = r0;

        return;
    }

    public static int getInputSkipDelay()
    {
        int $i0;

        $i0 = <com.sun.lwuit.spinner.Spinner: int inputSkipDelay>;

        return $i0;
    }

    public static void setInputSkipDelay(int)
    {
        int i0;

        i0 := @parameter0: int;

        <com.sun.lwuit.spinner.Spinner: int inputSkipDelay> = i0;

        return;
    }

    static void <clinit>()
    {
        <com.sun.lwuit.spinner.Spinner: int DATE_FORMAT_MM_DD_YY> = 12;

        <com.sun.lwuit.spinner.Spinner: int DATE_FORMAT_DD_MM_YY> = 11;

        <com.sun.lwuit.spinner.Spinner: int DATE_FORMAT_MM_DD_YYYY> = 2;

        <com.sun.lwuit.spinner.Spinner: int DATE_FORMAT_DD_MM_YYYY> = 1;

        <com.sun.lwuit.spinner.Spinner: int inputSkipDelay> = 2000;

        return;
    }
}
