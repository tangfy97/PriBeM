public final class org.apache.cxf.common.util.ReflectionUtil extends java.lang.Object
{
    private static java.lang.reflect.Method springBeanUtilsDescriptorFetcher;
    private static boolean springChecked;

    private void <init>()
    {
        org.apache.cxf.common.util.ReflectionUtil r0;

        r0 := @this: org.apache.cxf.common.util.ReflectionUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object accessDeclaredField(java.lang.reflect.Field, java.lang.Object, java.lang.Class)
    {
        org.apache.cxf.common.util.ReflectionUtil$1 $r0;
        java.lang.Class r2;
        java.lang.Object r3, $r4;
        java.lang.reflect.Field r1;

        r1 := @parameter0: java.lang.reflect.Field;

        r3 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Class;

        $r0 = new org.apache.cxf.common.util.ReflectionUtil$1;

        specialinvoke $r0.<org.apache.cxf.common.util.ReflectionUtil$1: void <init>(java.lang.reflect.Field,java.lang.Class,java.lang.Object)>(r1, r2, r3);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        return $r4;
    }

    public static java.lang.reflect.Field getDeclaredField(java.lang.Class, java.lang.String)
    {
        org.apache.cxf.common.util.ReflectionUtil$2 $r0;
        java.lang.Class r1;
        java.lang.Object $r3;
        java.lang.String r2;
        java.lang.reflect.Field $r4;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.cxf.common.util.ReflectionUtil$2;

        specialinvoke $r0.<org.apache.cxf.common.util.ReflectionUtil$2: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r4 = (java.lang.reflect.Field) $r3;

        return $r4;
    }

    public static transient java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class, java.lang.Class[])
    {
        org.apache.cxf.common.util.ReflectionUtil$3 $r0;
        java.lang.Class[] r2;
        java.lang.Class r1;
        java.lang.Object $r3;
        java.lang.reflect.Constructor $r4;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        $r0 = new org.apache.cxf.common.util.ReflectionUtil$3;

        specialinvoke $r0.<org.apache.cxf.common.util.ReflectionUtil$3: void <init>(java.lang.Class,java.lang.Class[])>(r1, r2);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r4 = (java.lang.reflect.Constructor) $r3;

        return $r4;
    }

    public static transient java.lang.reflect.Constructor getConstructor(java.lang.Class, java.lang.Class[])
    {
        org.apache.cxf.common.util.ReflectionUtil$4 $r0;
        java.lang.Class[] r2;
        java.lang.Class r1;
        java.lang.Object $r3;
        java.lang.reflect.Constructor $r4;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        $r0 = new org.apache.cxf.common.util.ReflectionUtil$4;

        specialinvoke $r0.<org.apache.cxf.common.util.ReflectionUtil$4: void <init>(java.lang.Class,java.lang.Class[])>(r1, r2);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r4 = (java.lang.reflect.Constructor) $r3;

        return $r4;
    }

    public static java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
    {
        org.apache.cxf.common.util.ReflectionUtil$5 $r0;
        java.lang.Class r1;
        java.lang.Object $r2;
        java.lang.reflect.Method[] $r3;

        r1 := @parameter0: java.lang.Class;

        $r0 = new org.apache.cxf.common.util.ReflectionUtil$5;

        specialinvoke $r0.<org.apache.cxf.common.util.ReflectionUtil$5: void <init>(java.lang.Class)>(r1);

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r3 = (java.lang.reflect.Method[]) $r2;

        return $r3;
    }

    public static transient java.lang.reflect.Method getDeclaredMethod(java.lang.Class, java.lang.String, java.lang.Class[]) throws java.lang.NoSuchMethodException
    {
        java.security.PrivilegedActionException $r6;
        java.lang.NoSuchMethodException $r9;
        java.lang.Class[] r3;
        java.lang.Exception $r7;
        java.lang.Class r1;
        java.lang.Object $r4;
        java.lang.SecurityException $r8;
        org.apache.cxf.common.util.ReflectionUtil$6 $r0;
        java.lang.String r2;
        java.lang.reflect.Method $r5;
        boolean $z0;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class[];

     label1:
        $r0 = new org.apache.cxf.common.util.ReflectionUtil$6;

        specialinvoke $r0.<org.apache.cxf.common.util.ReflectionUtil$6: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(r1, r2, r3);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r0);

        $r5 = (java.lang.reflect.Method) $r4;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        $z0 = $r7 instanceof java.lang.NoSuchMethodException;

        if $z0 == 0 goto label4;

        $r9 = (java.lang.NoSuchMethodException) $r7;

        throw $r9;

     label4:
        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.security.PrivilegedActionException from label1 to label2 with label3;
    }

    public static java.lang.reflect.Field[] getDeclaredFields(java.lang.Class)
    {
        java.lang.reflect.Field[] $r3;
        java.lang.Class r1;
        java.lang.Object $r2;
        org.apache.cxf.common.util.ReflectionUtil$7 $r0;

        r1 := @parameter0: java.lang.Class;

        $r0 = new org.apache.cxf.common.util.ReflectionUtil$7;

        specialinvoke $r0.<org.apache.cxf.common.util.ReflectionUtil$7: void <init>(java.lang.Class)>(r1);

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r3 = (java.lang.reflect.Field[]) $r2;

        return $r3;
    }

    public static java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)
    {
        java.lang.reflect.AccessibleObject r1, $r3;
        java.lang.Object $r2;
        org.apache.cxf.common.util.ReflectionUtil$8 $r0;

        r1 := @parameter0: java.lang.reflect.AccessibleObject;

        $r0 = new org.apache.cxf.common.util.ReflectionUtil$8;

        specialinvoke $r0.<org.apache.cxf.common.util.ReflectionUtil$8: void <init>(java.lang.reflect.AccessibleObject)>(r1);

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r3 = (java.lang.reflect.AccessibleObject) $r2;

        return $r3;
    }

    public static java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject, boolean)
    {
        java.lang.reflect.AccessibleObject r1, $r3;
        java.lang.Object $r2;
        org.apache.cxf.common.util.ReflectionUtil$9 $r0;
        boolean z0;

        r1 := @parameter0: java.lang.reflect.AccessibleObject;

        z0 := @parameter1: boolean;

        $r0 = new org.apache.cxf.common.util.ReflectionUtil$9;

        specialinvoke $r0.<org.apache.cxf.common.util.ReflectionUtil$9: void <init>(java.lang.reflect.AccessibleObject,boolean)>(r1, z0);

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r3 = (java.lang.reflect.AccessibleObject) $r2;

        return $r3;
    }

    public static java.util.List getPackagesFromJar(java.io.File) throws java.io.IOException
    {
        java.util.Iterator $r4;
        java.io.File r1;
        java.util.ArrayList $r0;
        java.util.List $r3;
        org.apache.cxf.common.util.JarResource $r2;
        java.lang.Object $r5;
        java.lang.String r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @parameter0: java.io.File;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        staticinvoke <org.apache.cxf.common.util.ReflectionUtil: void getPackageNamesFromDir(java.io.File,java.io.File,java.util.List)>(r1, r1, $r0);

        goto label5;

     label1:
        $r2 = new org.apache.cxf.common.util.JarResource;

        specialinvoke $r2.<org.apache.cxf.common.util.JarResource: void <init>()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.common.util.JarResource: java.util.List getJarContents(java.io.File)>(r1);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $z1 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>(".class");

        if $z1 != 0 goto label3;

        goto label2;

     label3:
        $r7 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.String getPackageName(java.lang.String)>(r6);

        $z2 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r7);

        if $z2 != 0 goto label4;

        $z3 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r7);

        if $z3 != 0 goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

     label4:
        goto label2;

     label5:
        return $r0;
    }

    private static void getPackageNamesFromDir(java.io.File, java.io.File, java.util.List)
    {
        int i0, i1;
        java.lang.String $r2, $r5, $r7, r14;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.io.File r0, r3, r13, r15;
        java.util.List r4;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r12;
        java.io.File[] $r1;

        r3 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

        r4 := @parameter2: java.util.List;

        z5 = 0;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        r13 = $r1[i1];

        $z0 = virtualinvoke r13.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        staticinvoke <org.apache.cxf.common.util.ReflectionUtil: void getPackageNamesFromDir(java.io.File,java.io.File,java.util.List)>(r3, r13, r4);

        goto label6;

     label2:
        if z5 != 0 goto label6;

        $r2 = virtualinvoke r13.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".class");

        if $z1 == 0 goto label6;

        z5 = 1;

        r14 = "";

        r15 = r0;

     label3:
        $z2 = virtualinvoke r15.<java.io.File: boolean equals(java.lang.Object)>(r3);

        if $z2 != 0 goto label5;

        $r5 = "";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z4 != 0 goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r15.<java.io.File: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r15 = virtualinvoke r15.<java.io.File: java.io.File getParentFile()>();

        goto label3;

     label5:
        $z3 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r14);

        if $z3 != 0 goto label6;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r14);

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return;
    }

    private static java.lang.String getPackageName(java.lang.String)
    {
        int $i0, $i1, $i3;
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("/");

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        return null;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("/", ".");

        return $r2;
    }

    public static java.beans.PropertyDescriptor[] getPropertyDescriptorsAvoidSunBug(java.lang.Class, java.beans.BeanInfo, java.lang.Class, java.beans.PropertyDescriptor[])
    {
        java.beans.PropertyDescriptor[] $r1, r2, $r4, $r6;
        java.lang.reflect.Method $r9, $r15, $r24;
        boolean $z0;
        java.lang.IllegalAccessException $r19;
        java.lang.Exception $r23;
        java.lang.reflect.InvocationTargetException $r16;
        java.beans.PropertyDescriptor r25, r26;
        java.lang.Throwable $r18;
        java.lang.Object[] $r5, $r7;
        java.util.ArrayList $r3;
        java.beans.BeanInfo r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r10;
        java.lang.Class[] $r14;
        java.lang.RuntimeException $r17, $r20, $r22;
        java.lang.IllegalArgumentException $r21;
        java.lang.Class r8, r12, $r13;
        java.lang.Object $r11;

        r12 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.beans.BeanInfo;

        r8 := @parameter2: java.lang.Class;

        r2 := @parameter3: java.beans.PropertyDescriptor[];

        $z0 = <org.apache.cxf.common.util.ReflectionUtil: boolean springChecked>;

        if $z0 != 0 goto label04;

     label01:
        <org.apache.cxf.common.util.ReflectionUtil: boolean springChecked> = 1;

        $r13 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>("org.springframework.beans.BeanUtils", r12);

        $r14 = newarray (java.lang.Class)[2];

        $r14[0] = class "Ljava/lang/Class;";

        $r14[1] = class "Ljava/lang/String;";

        $r15 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPropertyDescriptor", $r14);

        <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method springBeanUtilsDescriptorFetcher> = $r15;

     label02:
        goto label04;

     label03:
        $r23 := @caughtexception;

     label04:
        $r24 = <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method springBeanUtilsDescriptorFetcher>;

        if $r24 == null goto label14;

        if r2 == null goto label13;

        $r3 = new java.util.ArrayList;

        $i0 = lengthof r2;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        i3 = 0;

     label05:
        $i1 = lengthof r2;

        if i3 >= $i1 goto label12;

        r25 = r2[i3];

     label06:
        $r9 = <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method springBeanUtilsDescriptorFetcher>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r8;

        $r10 = virtualinvoke r25.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $r7[1] = $r10;

        $r11 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r7);

        r26 = (java.beans.PropertyDescriptor) $r11;

        if r26 == null goto label07;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r26);

     label07:
        goto label11;

     label08:
        $r21 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

     label09:
        $r19 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r19);

        throw $r20;

     label10:
        $r16 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        $r18 = virtualinvoke $r16.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r18);

        throw $r17;

     label11:
        i3 = i3 + 1;

        goto label05;

     label12:
        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = newarray (java.beans.PropertyDescriptor)[$i2];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.beans.PropertyDescriptor[]) $r5;

        return $r6;

     label13:
        return null;

     label14:
        $r1 = interfaceinvoke r0.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();

        return $r1;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
        catch java.lang.IllegalAccessException from label06 to label07 with label09;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label10;
    }

    public static transient java.lang.reflect.Method findMethod(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        int $i0, $i1, $i2, i3, i4;
        java.lang.String r2;
        java.lang.reflect.Method $r4, $r6, $r8, r11;
        boolean $z0, $z1, $z2;
        java.lang.Class[] $r1, r3;
        java.lang.Exception $r9, $r10;
        java.lang.Class r0, $r5, r7;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class[];

        if r0 != null goto label01;

        return null;

     label01:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i3 = lengthof $r1;

        i4 = 0;

     label02:
        if i4 >= i3 goto label04;

        r7 = $r1[i4];

        $i1 = virtualinvoke r7.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

        if $z1 == 0 goto label03;

        $r8 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r7, r2, r3);

        if $r8 == null goto label03;

        $i2 = virtualinvoke $r8.<java.lang.reflect.Method: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i2);

        if $z2 == 0 goto label03;

        return $r8;

     label03:
        i4 = i4 + 1;

        goto label02;

     label04:
        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r2, r3);

        if $r4 == null goto label06;

        $i0 = virtualinvoke $r4.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 == 0 goto label06;

     label05:
        return $r4;

     label06:
        goto label08;

     label07:
        $r10 := @caughtexception;

     label08:
        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r6 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r5, r2, r3);

        r11 = $r6;

        if $r6 != null goto label12;

     label09:
        r11 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r2, r3);

     label10:
        goto label12;

     label11:
        $r9 := @caughtexception;

     label12:
        return r11;

        catch java.lang.Exception from label04 to label05 with label07;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static java.lang.'annotation'.Annotation getAnnotationForMethodOrContainingClass(java.lang.reflect.Method, java.lang.Class)
    {
        java.lang.'annotation'.Annotation $r2, $r4;
        java.lang.Class r1, $r3;
        java.lang.reflect.Method r0;

        r0 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        return $r4;
    }
}
