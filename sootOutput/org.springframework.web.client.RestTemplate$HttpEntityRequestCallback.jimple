class org.springframework.web.client.RestTemplate$HttpEntityRequestCallback extends org.springframework.web.client.RestTemplate$AcceptHeaderRequestCallback
{
    private final org.springframework.http.HttpEntity requestEntity;
    final org.springframework.web.client.RestTemplate this$0;

    private void <init>(org.springframework.web.client.RestTemplate, java.lang.Object)
    {
        java.lang.Object r2;
        org.springframework.web.client.RestTemplate$HttpEntityRequestCallback r0;
        org.springframework.web.client.RestTemplate r1;

        r0 := @this: org.springframework.web.client.RestTemplate$HttpEntityRequestCallback;

        r1 := @parameter0: org.springframework.web.client.RestTemplate;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: void <init>(org.springframework.web.client.RestTemplate,java.lang.Object,java.lang.Class)>(r1, r2, null);

        return;
    }

    private void <init>(org.springframework.web.client.RestTemplate, java.lang.Object, java.lang.Class)
    {
        org.springframework.web.client.RestTemplate$HttpEntityRequestCallback r0;
        org.springframework.http.HttpEntity $r4, $r5, $r6;
        java.lang.Class r2;
        java.lang.Object r3;
        org.springframework.web.client.RestTemplate r1;
        boolean $z0;

        r0 := @this: org.springframework.web.client.RestTemplate$HttpEntityRequestCallback;

        r1 := @parameter0: org.springframework.web.client.RestTemplate;

        r3 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Class;

        r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.web.client.RestTemplate this$0> = r1;

        specialinvoke r0.<org.springframework.web.client.RestTemplate$AcceptHeaderRequestCallback: void <init>(org.springframework.web.client.RestTemplate,java.lang.Class,org.springframework.web.client.RestTemplate$AcceptHeaderRequestCallback)>(r1, r2, null);

        $z0 = r3 instanceof org.springframework.http.HttpEntity;

        if $z0 == 0 goto label1;

        $r6 = (org.springframework.http.HttpEntity) r3;

        r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.http.HttpEntity requestEntity> = $r6;

        goto label3;

     label1:
        if r3 == null goto label2;

        $r5 = new org.springframework.http.HttpEntity;

        specialinvoke $r5.<org.springframework.http.HttpEntity: void <init>(java.lang.Object)>(r3);

        r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.http.HttpEntity requestEntity> = $r5;

        goto label3;

     label2:
        $r4 = <org.springframework.http.HttpEntity: org.springframework.http.HttpEntity EMPTY>;

        r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.http.HttpEntity requestEntity> = $r4;

     label3:
        return;
    }

    public void doWithRequest(org.springframework.http.client.ClientHttpRequest) throws java.io.IOException
    {
        byte $b1;
        org.springframework.web.client.RestTemplate $r9, $r13, $r15, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.springframework.web.client.RestClientException $r39;
        org.springframework.http.HttpHeaders $r7, $r33, $r45, $r47;
        org.springframework.http.MediaType $r8;
        org.springframework.http.HttpEntity $r2, $r3, $r6, $r46;
        java.util.List $r10;
        org.springframework.http.converter.HttpMessageConverter r48;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r21, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r36, $r37, $r40, $r42, $r43, $r44;
        org.springframework.web.client.RestTemplate$HttpEntityRequestCallback r0;
        long $l0;
        org.springframework.http.client.ClientHttpRequest r1;
        java.lang.String $r22, $r32, $r35, $r38, $r41, r49;
        java.util.Iterator $r11;
        java.lang.Object $r4, $r12;
        java.lang.Class $r5;
        org.apache.commons.logging.Log $r14, $r16, $r24;

        r0 := @this: org.springframework.web.client.RestTemplate$HttpEntityRequestCallback;

        r1 := @parameter0: org.springframework.http.client.ClientHttpRequest;

        specialinvoke r0.<org.springframework.web.client.RestTemplate$AcceptHeaderRequestCallback: void doWithRequest(org.springframework.http.client.ClientHttpRequest)>(r1);

        $r2 = r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.http.HttpEntity requestEntity>;

        $z0 = virtualinvoke $r2.<org.springframework.http.HttpEntity: boolean hasBody()>();

        if $z0 != 0 goto label2;

        $r45 = interfaceinvoke r1.<org.springframework.http.client.ClientHttpRequest: org.springframework.http.HttpHeaders getHeaders()>();

        $r46 = r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.http.HttpEntity requestEntity>;

        $r47 = virtualinvoke $r46.<org.springframework.http.HttpEntity: org.springframework.http.HttpHeaders getHeaders()>();

        $z5 = virtualinvoke $r47.<org.springframework.http.HttpHeaders: boolean isEmpty()>();

        if $z5 != 0 goto label1;

        virtualinvoke $r45.<org.springframework.http.HttpHeaders: void putAll(java.util.Map)>($r47);

     label1:
        $l0 = virtualinvoke $r45.<org.springframework.http.HttpHeaders: long getContentLength()>();

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label9;

        virtualinvoke $r45.<org.springframework.http.HttpHeaders: void setContentLength(long)>(0L);

        goto label9;

     label2:
        $r3 = r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.http.HttpEntity requestEntity>;

        $r4 = virtualinvoke $r3.<org.springframework.http.HttpEntity: java.lang.Object getBody()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.http.HttpEntity requestEntity>;

        $r7 = virtualinvoke $r6.<org.springframework.http.HttpEntity: org.springframework.http.HttpHeaders getHeaders()>();

        $r8 = virtualinvoke $r7.<org.springframework.http.HttpHeaders: org.springframework.http.MediaType getContentType()>();

        $r9 = r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.web.client.RestTemplate this$0>;

        $r10 = virtualinvoke $r9.<org.springframework.web.client.RestTemplate: java.util.List getMessageConverters()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

        goto label7;

     label3:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r48 = (org.springframework.http.converter.HttpMessageConverter) $r12;

        $z2 = interfaceinvoke r48.<org.springframework.http.converter.HttpMessageConverter: boolean canWrite(java.lang.Class,org.springframework.http.MediaType)>($r5, $r8);

        if $z2 == 0 goto label7;

        $z3 = virtualinvoke $r7.<org.springframework.http.HttpHeaders: boolean isEmpty()>();

        if $z3 != 0 goto label4;

        $r33 = interfaceinvoke r1.<org.springframework.http.client.ClientHttpRequest: org.springframework.http.HttpHeaders getHeaders()>();

        virtualinvoke $r33.<org.springframework.http.HttpHeaders: void putAll(java.util.Map)>($r7);

     label4:
        $r13 = r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.web.client.RestTemplate this$0>;

        $r14 = staticinvoke <org.springframework.web.client.RestTemplate: org.apache.commons.logging.Log access$0(org.springframework.web.client.RestTemplate)>($r13);

        $z4 = interfaceinvoke $r14.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label6;

        if $r8 == null goto label5;

        $r23 = r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.web.client.RestTemplate this$0>;

        $r24 = staticinvoke <org.springframework.web.client.RestTemplate: org.apache.commons.logging.Log access$0(org.springframework.web.client.RestTemplate)>($r23);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("Writing [");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] as \"");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" using [");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r32);

        goto label6;

     label5:
        $r15 = r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: org.springframework.web.client.RestTemplate this$0>;

        $r16 = staticinvoke <org.springframework.web.client.RestTemplate: org.apache.commons.logging.Log access$0(org.springframework.web.client.RestTemplate)>($r15);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Writing [");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] using [");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r22);

     label6:
        interfaceinvoke r48.<org.springframework.http.converter.HttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r4, $r8, r1);

        return;

     label7:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not write request: no suitable HttpMessageConverter found for request type [");

        $r35 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        r49 = $r38;

        if $r8 == null goto label8;

        $r40 = new java.lang.StringBuilder;

        $r41 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r38);

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>($r41);

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and content type [");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        $r39 = new org.springframework.web.client.RestClientException;

        specialinvoke $r39.<org.springframework.web.client.RestClientException: void <init>(java.lang.String)>(r49);

        throw $r39;

     label9:
        return;
    }

    void <init>(org.springframework.web.client.RestTemplate, java.lang.Object, org.springframework.web.client.RestTemplate$HttpEntityRequestCallback)
    {
        org.springframework.web.client.RestTemplate$HttpEntityRequestCallback r0, r3;
        java.lang.Object r2;
        org.springframework.web.client.RestTemplate r1;

        r0 := @this: org.springframework.web.client.RestTemplate$HttpEntityRequestCallback;

        r1 := @parameter0: org.springframework.web.client.RestTemplate;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.springframework.web.client.RestTemplate$HttpEntityRequestCallback;

        specialinvoke r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: void <init>(org.springframework.web.client.RestTemplate,java.lang.Object)>(r1, r2);

        return;
    }

    void <init>(org.springframework.web.client.RestTemplate, java.lang.Object, java.lang.Class, org.springframework.web.client.RestTemplate$HttpEntityRequestCallback)
    {
        org.springframework.web.client.RestTemplate$HttpEntityRequestCallback r0, r4;
        java.lang.Object r2;
        java.lang.Class r3;
        org.springframework.web.client.RestTemplate r1;

        r0 := @this: org.springframework.web.client.RestTemplate$HttpEntityRequestCallback;

        r1 := @parameter0: org.springframework.web.client.RestTemplate;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: org.springframework.web.client.RestTemplate$HttpEntityRequestCallback;

        specialinvoke r0.<org.springframework.web.client.RestTemplate$HttpEntityRequestCallback: void <init>(org.springframework.web.client.RestTemplate,java.lang.Object,java.lang.Class)>(r1, r2, r3);

        return;
    }
}
