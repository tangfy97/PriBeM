class org.jdesktop.swingx.sort.RowFilters$RegexFilter extends org.jdesktop.swingx.sort.RowFilters$GeneralFilter
{
    private java.util.regex.Matcher matcher;

    void <init>(java.util.regex.Pattern, int[])
    {
        org.jdesktop.swingx.sort.RowFilters$RegexFilter r0;
        java.util.regex.Matcher $r3;
        int[] r1;
        java.util.regex.Pattern r2;

        r0 := @this: org.jdesktop.swingx.sort.RowFilters$RegexFilter;

        r2 := @parameter0: java.util.regex.Pattern;

        r1 := @parameter1: int[];

        specialinvoke r0.<org.jdesktop.swingx.sort.RowFilters$GeneralFilter: void <init>(int[])>(r1);

        if r2 != null goto label1;

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r2, "Pattern must be non-null");

     label1:
        $r3 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("");

        r0.<org.jdesktop.swingx.sort.RowFilters$RegexFilter: java.util.regex.Matcher matcher> = $r3;

        return;
    }

    protected boolean include(javax.swing.RowFilter$Entry, int)
    {
        org.jdesktop.swingx.sort.RowFilters$RegexFilter r0;
        java.util.regex.Matcher $r2, $r4;
        javax.swing.RowFilter$Entry r1;
        int i0;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.sort.RowFilters$RegexFilter;

        r1 := @parameter0: javax.swing.RowFilter$Entry;

        i0 := @parameter1: int;

        $r2 = r0.<org.jdesktop.swingx.sort.RowFilters$RegexFilter: java.util.regex.Matcher matcher>;

        $r3 = virtualinvoke r1.<javax.swing.RowFilter$Entry: java.lang.String getStringValue(int)>(i0);

        virtualinvoke $r2.<java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>($r3);

        $r4 = r0.<org.jdesktop.swingx.sort.RowFilters$RegexFilter: java.util.regex.Matcher matcher>;

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        return $z0;
    }
}
