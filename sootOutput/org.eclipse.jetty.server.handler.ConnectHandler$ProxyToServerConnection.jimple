public class org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection extends java.lang.Object implements org.eclipse.jetty.io.nio.AsyncConnection
{
    private final java.util.concurrent.CountDownLatch _ready;
    private final org.eclipse.jetty.io.Buffer _buffer;
    private final java.util.concurrent.ConcurrentMap _context;
    private volatile org.eclipse.jetty.io.Buffer _data;
    private volatile org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection _toClient;
    private volatile long _timestamp;
    private volatile org.eclipse.jetty.io.AsyncEndPoint _endPoint;
    final org.eclipse.jetty.server.handler.ConnectHandler this$0;

    public void <init>(org.eclipse.jetty.server.handler.ConnectHandler, java.util.concurrent.ConcurrentMap, org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.io.nio.IndirectNIOBuffer $r3;
        java.util.concurrent.CountDownLatch $r2;
        org.eclipse.jetty.server.handler.ConnectHandler r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;
        org.eclipse.jetty.io.Buffer r5;
        java.util.concurrent.ConcurrentMap r4;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        r1 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler;

        r4 := @parameter1: java.util.concurrent.ConcurrentMap;

        r5 := @parameter2: org.eclipse.jetty.io.Buffer;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.server.handler.ConnectHandler this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r2.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: java.util.concurrent.CountDownLatch _ready> = $r2;

        $r3 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        specialinvoke $r3.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(int)>(4096);

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.Buffer _buffer> = $r3;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: java.util.concurrent.ConcurrentMap _context> = r4;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.Buffer _data> = r5;

        return;
    }

    public java.lang.String toString()
    {
        org.eclipse.jetty.io.AsyncEndPoint $r3, $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r1, $r4, $r6;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r2;
        java.lang.String $r7;

        r2 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("ProxyToServer");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(:");

        $r3 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        $i0 = interfaceinvoke $r3.<org.eclipse.jetty.io.AsyncEndPoint: int getLocalPort()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=>:");

        $r5 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        $i1 = interfaceinvoke $r5.<org.eclipse.jetty.io.AsyncEndPoint: int getRemotePort()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public org.eclipse.jetty.io.Connection handle() throws java.io.IOException
    {
        org.eclipse.jetty.io.EndPoint $r13;
        java.lang.Integer $r9, $r19;
        org.eclipse.jetty.io.Buffer $r4, $r15;
        boolean $z0, $z1;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r2;
        java.lang.StringBuilder $r32, $r33, $r38, $r39, $r45, $r46;
        java.lang.Throwable $r26;
        java.lang.Object[] $r1, $r8, $r17, $r21, $r28, $r44;
        org.eclipse.jetty.server.handler.ConnectHandler $r6, $r12;
        java.util.concurrent.ConcurrentMap $r3, $r14;
        int $i0, $i1, $i3;
        java.lang.String $r34, $r40;
        java.nio.channels.ClosedChannelException $r41;
        java.io.IOException $r35;
        java.lang.RuntimeException $r29;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection $r11, $r18, $r25;
        org.eclipse.jetty.io.AsyncEndPoint $r5, $r10, $r22, $r23, $r24;
        org.eclipse.jetty.util.log.Logger $r0, $r7, $r16, $r20, $r27, $r30, $r36, $r42, $r43;

        r2 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        $r0 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        interfaceinvoke $r0.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: begin reading from server", $r1);

     label01:
        specialinvoke r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void writeData()>();

     label02:
        $r6 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.server.handler.ConnectHandler this$0>;

        $r5 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        $r4 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.Buffer _buffer>;

        $r3 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: java.util.concurrent.ConcurrentMap _context>;

        $i0 = virtualinvoke $r6.<org.eclipse.jetty.server.handler.ConnectHandler: int read(org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.io.Buffer,java.util.concurrent.ConcurrentMap)>($r5, $r4, $r3);

        $i3 = (int) -1;

        if $i0 != $i3 goto label05;

        $r20 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = r2;

        $r22 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        $r21[1] = $r22;

        interfaceinvoke $r20.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: server closed connection {}", $r21);

        $r23 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        $z0 = interfaceinvoke $r23.<org.eclipse.jetty.io.AsyncEndPoint: boolean isOutputShutdown()>();

        if $z0 != 0 goto label03;

        $r24 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        $z1 = interfaceinvoke $r24.<org.eclipse.jetty.io.AsyncEndPoint: boolean isOpen()>();

        if $z1 != 0 goto label04;

     label03:
        virtualinvoke r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void closeClient()>();

        goto label07;

     label04:
        $r25 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection _toClient>;

        virtualinvoke $r25.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void shutdownOutput()>();

        goto label07;

     label05:
        if $i0 != 0 goto label06;

        goto label07;

     label06:
        $r7 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r8 = newarray (java.lang.Object)[3];

        $r8[0] = r2;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8[1] = $r9;

        $r10 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        $r8[2] = $r10;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: read from server {} bytes {}", $r8);

        $r12 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.server.handler.ConnectHandler this$0>;

        $r11 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection _toClient>;

        $r13 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint access$400(org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection)>($r11);

        $r15 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.Buffer _buffer>;

        $r14 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: java.util.concurrent.ConcurrentMap _context>;

        $i1 = virtualinvoke $r12.<org.eclipse.jetty.server.handler.ConnectHandler: int write(org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.io.Buffer,java.util.concurrent.ConcurrentMap)>($r13, $r15, $r14);

        $r16 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = r2;

        $r18 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection _toClient>;

        $r17[1] = $r18;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r17[2] = $r19;

        interfaceinvoke $r16.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: written to {} {} bytes", $r17);

        goto label02;

     label07:
        $r43 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r44 = newarray (java.lang.Object)[1];

        $r44[0] = r2;

        interfaceinvoke $r43.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: end reading from server", $r44);

        return r2;

     label08:
        $r41 := @caughtexception;

        $r42 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        interfaceinvoke $r42.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r41);

        throw $r41;

     label09:
        $r35 := @caughtexception;

        $r36 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unexpected exception");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r36.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r40, $r35);

        virtualinvoke r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void close()>();

        throw $r35;

     label10:
        $r29 := @caughtexception;

        $r30 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unexpected exception");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r34, $r29);

        virtualinvoke r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void close()>();

        throw $r29;

     label11:
        $r26 := @caughtexception;

     label12:
        $r27 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r28 = newarray (java.lang.Object)[1];

        $r28[0] = r2;

        interfaceinvoke $r27.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: end reading from server", $r28);

        throw $r26;

        catch java.nio.channels.ClosedChannelException from label01 to label07 with label08;
        catch java.io.IOException from label01 to label07 with label09;
        catch java.lang.RuntimeException from label01 to label07 with label10;
        catch java.lang.Throwable from label01 to label07 with label11;
        catch java.lang.Throwable from label08 to label12 with label11;
    }

    public void onInputShutdown() throws java.io.IOException
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        return;
    }

    private void writeData() throws java.io.IOException
    {
        java.lang.Throwable $r9, $r10;
        java.lang.Object[] $r7;
        org.eclipse.jetty.server.handler.ConnectHandler $r5;
        java.lang.Integer $r8;
        java.util.concurrent.ConcurrentMap $r2;
        org.eclipse.jetty.io.AsyncEndPoint $r4;
        int $i0;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;
        org.eclipse.jetty.util.log.Logger $r6;
        org.eclipse.jetty.io.Buffer $r1, $r3;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        entermonitor r0;

     label01:
        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.Buffer _data>;

        if $r1 == null goto label06;

     label02:
        $r5 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.server.handler.ConnectHandler this$0>;

        $r4 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        $r3 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.Buffer _data>;

        $r2 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: java.util.concurrent.ConcurrentMap _context>;

        $i0 = virtualinvoke $r5.<org.eclipse.jetty.server.handler.ConnectHandler: int write(org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.io.Buffer,java.util.concurrent.ConcurrentMap)>($r4, $r3, $r2);

        $r6 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r0;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[1] = $r8;

        interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: written to server {} bytes", $r7);

     label03:
        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.Buffer _data> = null;

        goto label06;

     label04:
        $r10 := @caughtexception;

     label05:
        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.Buffer _data> = null;

        throw $r10;

     label06:
        exitmonitor r0;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        exitmonitor r0;

     label09:
        throw $r9;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void setConnection(org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection)
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        r1 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection _toClient> = r1;

        return;
    }

    public long getTimeStamp()
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        $l0 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: long _timestamp>;

        return $l0;
    }

    public void setTimeStamp(long)
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;
        long l0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        l0 := @parameter0: long;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: long _timestamp> = l0;

        return;
    }

    public void setEndPoint(org.eclipse.jetty.io.AsyncEndPoint)
    {
        org.eclipse.jetty.io.AsyncEndPoint r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        r1 := @parameter0: org.eclipse.jetty.io.AsyncEndPoint;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint> = r1;

        return;
    }

    public boolean isIdle()
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        return 0;
    }

    public boolean isSuspended()
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        return 0;
    }

    public void onClose()
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        return;
    }

    public void ready()
    {
        java.util.concurrent.CountDownLatch $r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: java.util.concurrent.CountDownLatch _ready>;

        virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }

    public void waitReady(long) throws java.io.IOException
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.CountDownLatch $r2;
        java.lang.InterruptedException $r3;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection$1 $r4;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;
        long l0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: java.util.concurrent.CountDownLatch _ready>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l0, $r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection$1;

        specialinvoke $r4.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection$1: void <init>(org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection,java.lang.InterruptedException)>(r0, $r3);

        throw $r4;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void closeClient() throws java.io.IOException
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection $r1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection _toClient>;

        virtualinvoke $r1.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void closeClient()>();

        return;
    }

    public void closeServer() throws java.io.IOException
    {
        org.eclipse.jetty.io.AsyncEndPoint $r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        interfaceinvoke $r1.<org.eclipse.jetty.io.AsyncEndPoint: void close()>();

        return;
    }

    public void close()
    {
        java.io.IOException $r1, $r7;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r9, $r10, $r11;
        org.eclipse.jetty.util.log.Logger $r2, $r8;
        java.lang.String $r6, $r12;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void closeClient()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unexpected exception closing the client");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>($r12, $r7);

     label4:
        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void closeServer()>();

     label5:
        goto label7;

     label6:
        $r1 := @caughtexception;

        $r2 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unexpected exception closing the server");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>($r6, $r1);

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public void shutdownOutput() throws java.io.IOException
    {
        org.eclipse.jetty.io.AsyncEndPoint $r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        specialinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void writeData()>();

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        interfaceinvoke $r1.<org.eclipse.jetty.io.AsyncEndPoint: void shutdownOutput()>();

        return;
    }

    public void onIdleExpired(long)
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;
        long l0;
        org.eclipse.jetty.util.log.Logger $r2;
        java.lang.Exception $r1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        l0 := @parameter0: long;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void shutdownOutput()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r1);

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void close()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static org.eclipse.jetty.io.AsyncEndPoint access$600(org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection)
    {
        org.eclipse.jetty.io.AsyncEndPoint $r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint _endPoint>;

        return $r1;
    }
}
