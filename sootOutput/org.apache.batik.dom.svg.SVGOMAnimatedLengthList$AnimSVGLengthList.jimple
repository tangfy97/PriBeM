public class org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList extends org.apache.batik.dom.svg.AbstractSVGLengthList
{
    private final org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0;

    public void <init>(org.apache.batik.dom.svg.SVGOMAnimatedLengthList)
    {
        short $s0;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList r1;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGOMAnimatedLengthList;

        $s0 = r1.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList: short direction>;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLengthList: void <init>(short)>($s0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(1);

        r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList> = $r2;

        return;
    }

    protected org.w3c.dom.DOMException createDOMException(short, java.lang.String, java.lang.Object[])
    {
        short s0;
        java.lang.Object[] r3;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1;
        org.w3c.dom.DOMException $r5;
        java.lang.String r2;
        org.apache.batik.dom.svg.AbstractElement $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        s0 := @parameter0: short;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r4 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r5 = virtualinvoke $r4.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(s0, r2, r3);

        return $r5;
    }

    protected org.w3c.dom.svg.SVGException createSVGException(short, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r4;
        short s0;
        org.w3c.dom.svg.SVGException $r6;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1;
        java.lang.String r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;
        org.apache.batik.dom.svg.SVGOMElement $r5;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        s0 := @parameter0: short;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object[];

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r5 = (org.apache.batik.dom.svg.SVGOMElement) $r2;

        $r6 = virtualinvoke $r5.<org.apache.batik.dom.svg.SVGOMElement: org.w3c.dom.svg.SVGException createSVGException(short,java.lang.String,java.lang.Object[])>(s0, r3, r4);

        return $r6;
    }

    protected org.w3c.dom.Element getElement()
    {
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        return $r2;
    }

    public int getNumberOfItems()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1, $r2;
        int $i0, $i1;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;
        boolean $z0;
        org.w3c.dom.svg.SVGLengthList $r3;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: int getNumberOfItems()>();

        return $i1;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList: org.w3c.dom.svg.SVGLengthList getBaseVal()>();

        $i0 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGLengthList: int getNumberOfItems()>();

        return $i0;
    }

    public org.w3c.dom.svg.SVGLength getItem(int) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.svg.SVGLength $r4, $r5;
        org.w3c.dom.svg.SVGLengthList $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1, $r2;
        int i0;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLengthList: org.w3c.dom.svg.SVGLength getItem(int)>(i0);

        return $r5;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList: org.w3c.dom.svg.SVGLengthList getBaseVal()>();

        $r4 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGLengthList: org.w3c.dom.svg.SVGLength getItem(int)>(i0);

        return $r4;
    }

    protected java.lang.String getValueAsString()
    {
        java.lang.StringBuffer $r2;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r9, $r10, $r13;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        org.apache.batik.dom.svg.SVGItem $r8, $r12;
        java.util.List $r1, $r3, $r4;
        java.lang.Object $r7, $r11;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuffer;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = $i1 * 8;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i2);

        $r4 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.apache.batik.dom.svg.SVGItem) $r11;

        $r13 = interfaceinvoke $r12.<org.apache.batik.dom.svg.SVGItem: java.lang.String getValueAsString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        goto label3;

     label2:
        $r6 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLengthList: java.lang.String getItemSeparator()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.batik.dom.svg.SVGItem) $r7;

        $r9 = interfaceinvoke $r8.<org.apache.batik.dom.svg.SVGItem: java.lang.String getValueAsString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

        $r10 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    protected void setAttributeValue(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void clear() throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.length.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGLength initialize(org.w3c.dom.svg.SVGLength) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1;
        org.w3c.dom.DOMException $r3;
        org.w3c.dom.svg.SVGLength r4;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        r4 := @parameter0: org.w3c.dom.svg.SVGLength;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.length.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGLength insertItemBefore(org.w3c.dom.svg.SVGLength, int) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1;
        org.w3c.dom.DOMException $r3;
        int i0;
        org.w3c.dom.svg.SVGLength r4;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        r4 := @parameter0: org.w3c.dom.svg.SVGLength;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.length.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGLength replaceItem(org.w3c.dom.svg.SVGLength, int) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1;
        org.w3c.dom.DOMException $r3;
        int i0;
        org.w3c.dom.svg.SVGLength r4;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        r4 := @parameter0: org.w3c.dom.svg.SVGLength;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.length.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGLength removeItem(int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1;
        org.w3c.dom.DOMException $r3;
        int i0;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.length.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGLength appendItem(org.w3c.dom.svg.SVGLength) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList $r1;
        org.w3c.dom.DOMException $r3;
        org.w3c.dom.svg.SVGLength r4;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        r4 := @parameter0: org.w3c.dom.svg.SVGLength;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList: org.apache.batik.dom.svg.SVGOMAnimatedLengthList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.length.list", null);

        throw $r3;
    }

    protected void setAnimatedValue(short[], float[])
    {
        org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem r7, $r8;
        float[] r4;
        short $s1, $s2, $s5, $s6;
        int $i0, $i3, $i4, i7, i8, $i9, $i11;
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;
        java.util.List $r1, $r5;
        float $f0, $f1;
        java.lang.Object $r6;
        short[] r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        r2 := @parameter0: short[];

        r4 := @parameter1: float[];

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i7 = $i0;

        i8 = 0;

        goto label2;

     label1:
        $r5 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i8);

        r7 = (org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem) $r6;

        $s5 = r2[i8];

        r7.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType> = $s5;

        $f1 = r4[i8];

        r7.<org.apache.batik.dom.svg.AbstractSVGLength: float value> = $f1;

        $s6 = r0.<org.apache.batik.dom.svg.AbstractSVGLengthList: short direction>;

        r7.<org.apache.batik.dom.svg.AbstractSVGLength: short direction> = $s6;

        i8 = i8 + 1;

     label2:
        if i8 >= $i0 goto label4;

        $i4 = lengthof r2;

        if i8 < $i4 goto label1;

        goto label4;

     label3:
        $r8 = new org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem;

        $s2 = r2[i8];

        $f0 = r4[i8];

        $s1 = r0.<org.apache.batik.dom.svg.AbstractSVGLengthList: short direction>;

        specialinvoke $r8.<org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem: void <init>(org.apache.batik.dom.svg.AbstractSVGLengthList,short,float,short)>(r0, $s2, $f0, $s1);

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem appendItemImpl(java.lang.Object)>($r8);

        i8 = i8 + 1;

     label4:
        $i9 = lengthof r2;

        if i8 < $i9 goto label3;

        goto label6;

     label5:
        $i11 = (int) -1;

        i7 = i7 + $i11;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem removeItemImpl(int)>(i7);

     label6:
        $i3 = lengthof r2;

        if i7 > $i3 goto label5;

        return;
    }

    protected void resetAttribute()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        return;
    }

    protected void resetAttribute(org.apache.batik.dom.svg.SVGItem)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;
        org.apache.batik.dom.svg.SVGItem r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGItem;

        return;
    }

    protected void revalidate()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedLengthList$AnimSVGLengthList;

        r0.<org.apache.batik.dom.svg.AbstractSVGList: boolean valid> = 1;

        return;
    }
}
