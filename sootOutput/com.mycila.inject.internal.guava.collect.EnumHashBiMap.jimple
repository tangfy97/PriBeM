public final class com.mycila.inject.internal.guava.collect.EnumHashBiMap extends com.mycila.inject.internal.guava.collect.AbstractBiMap
{
    private transient java.lang.Class keyType;
    private static final long serialVersionUID;

    public static com.mycila.inject.internal.guava.collect.EnumHashBiMap create(java.lang.Class)
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap $r0;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        $r0 = new com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: void <init>(java.lang.Class)>(r1);

        return $r0;
    }

    public static com.mycila.inject.internal.guava.collect.EnumHashBiMap create(java.util.Map)
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap $r2;
        java.lang.Class $r1;
        java.util.Map r0;

        r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.collect.EnumBiMap: java.lang.Class inferKeyType(java.util.Map)>(r0);

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.EnumHashBiMap: com.mycila.inject.internal.guava.collect.EnumHashBiMap create(java.lang.Class)>($r1);

        virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: void putAll(java.util.Map)>(r0);

        return $r2;
    }

    private void <init>(java.lang.Class)
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.lang.Object[] $r4;
        java.util.EnumMap $r1;
        java.util.HashMap $r6;
        com.mycila.inject.internal.guava.collect.WellBehavedMap $r3;
        int $i0;
        java.lang.Enum[] $r5;
        java.lang.Class r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        r2 := @parameter0: java.lang.Class;

        $r1 = new java.util.EnumMap;

        specialinvoke $r1.<java.util.EnumMap: void <init>(java.lang.Class)>(r2);

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.WellBehavedMap: com.mycila.inject.internal.guava.collect.WellBehavedMap wrap(java.util.Map)>($r1);

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r5 = (java.lang.Enum[]) $r4;

        $i0 = lengthof $r5;

        $r6 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.HashMap newHashMapWithExpectedSize(int)>($i0);

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: void <init>(java.util.Map,java.util.Map)>($r3, $r6);

        r0.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: java.lang.Class keyType> = r2;

        return;
    }

    public java.lang.Object put(java.lang.Enum, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.lang.Enum r1;
        java.lang.Object r2, $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        r1 := @parameter0: java.lang.Enum;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public java.lang.Object forcePut(java.lang.Enum, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.lang.Enum r1;
        java.lang.Object r2, $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        r1 := @parameter0: java.lang.Enum;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: java.lang.Object forcePut(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public java.lang.Class keyType()
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.lang.Class $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: java.lang.Class keyType>;

        return $r1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r1;
        java.io.ObjectOutputStream r0;
        java.lang.Class $r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r1.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: java.lang.Class keyType>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        staticinvoke <com.mycila.inject.internal.guava.collect.Serialization: void writeMap(java.util.Map,java.io.ObjectOutputStream)>(r1, r0);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r1;
        java.lang.Object[] $r9;
        java.util.EnumMap $r4;
        java.io.ObjectInputStream r0;
        java.util.HashMap $r7;
        com.mycila.inject.internal.guava.collect.WellBehavedMap $r6;
        int $i0, $i1, $i2;
        java.lang.Enum[] $r10;
        java.lang.Object $r2;
        java.lang.Class $r3, $r5, $r8;

        r1 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.lang.Class) $r2;

        r1.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: java.lang.Class keyType> = $r3;

        $r4 = new java.util.EnumMap;

        $r5 = r1.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: java.lang.Class keyType>;

        specialinvoke $r4.<java.util.EnumMap: void <init>(java.lang.Class)>($r5);

        $r6 = staticinvoke <com.mycila.inject.internal.guava.collect.WellBehavedMap: com.mycila.inject.internal.guava.collect.WellBehavedMap wrap(java.util.Map)>($r4);

        $r7 = new java.util.HashMap;

        $r8 = r1.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: java.lang.Class keyType>;

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r10 = (java.lang.Enum[]) $r9;

        $i0 = lengthof $r10;

        $i1 = $i0 * 3;

        $i2 = $i1 / 2;

        specialinvoke $r7.<java.util.HashMap: void <init>(int)>($i2);

        virtualinvoke r1.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: void setDelegates(java.util.Map,java.util.Map)>($r6, $r7);

        staticinvoke <com.mycila.inject.internal.guava.collect.Serialization: void populateMap(java.util.Map,java.io.ObjectInputStream)>(r1, r0);

        return;
    }

    public volatile java.util.Set entrySet()
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.util.Set $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        $r1 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: java.util.Set entrySet()>();

        return $r1;
    }

    public volatile java.util.Set values()
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.util.Set $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        $r1 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: java.util.Set values()>();

        return $r1;
    }

    public volatile java.util.Set keySet()
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.util.Set $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        $r1 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: java.util.Set keySet()>();

        return $r1;
    }

    public volatile com.mycila.inject.internal.guava.collect.BiMap inverse()
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        com.mycila.inject.internal.guava.collect.BiMap $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        $r1 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: com.mycila.inject.internal.guava.collect.BiMap inverse()>();

        return $r1;
    }

    public volatile void clear()
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: void clear()>();

        return;
    }

    public volatile void putAll(java.util.Map)
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.util.Map r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.lang.Object r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: java.lang.Object remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object forcePut(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.lang.Enum $r3;
        java.lang.Object r1, r2, $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Enum) r1;

        $r4 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: java.lang.Object forcePut(java.lang.Enum,java.lang.Object)>($r3, r2);

        return $r4;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.lang.Enum $r3;
        java.lang.Object r1, r2, $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Enum) r1;

        $r4 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EnumHashBiMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r3, r2);

        return $r4;
    }

    public volatile boolean containsValue(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EnumHashBiMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EnumHashBiMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.collect.EnumHashBiMap: long serialVersionUID> = 0L;

        return;
    }
}
