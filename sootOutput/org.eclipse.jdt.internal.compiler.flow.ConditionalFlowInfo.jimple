public class org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo extends org.eclipse.jdt.internal.compiler.flow.FlowInfo
{
    public org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue;
    public org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse;

    void <init>(org.eclipse.jdt.internal.compiler.flow.FlowInfo, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r1, r2;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue> = r1;

        r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse> = r2;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r1);

        return r0;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo addPotentialInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addPotentialInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addPotentialInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r1);

        return r0;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo asNegatedCondition()
    {
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r1, $r2;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue> = $r2;

        r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse> = r1;

        return r0;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo $r0, r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3, $r4, $r5;

        r1 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r0 = new org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        $r4 = r1.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r3, $r5);

        return $r0;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse()
    {
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r1;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        return $r1;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue()
    {
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r1;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        return $r1;
    }

    public boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r1;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDefinitelyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDefinitelyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDefinitelyUnknown(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyUnknown(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyUnknown(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isPotentiallyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r1;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r1);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isPotentiallyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isPotentiallyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isPotentiallyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isPotentiallyUnknown(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyUnknown(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyUnknown(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isProtectedNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isProtectedNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isProtectedNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isProtectedNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isProtectedNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isProtectedNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void markAsComparedEqualToNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsComparedEqualToNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsComparedEqualToNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        return;
    }

    public void markAsComparedEqualToNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsComparedEqualToNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsComparedEqualToNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        return;
    }

    public void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r1);

        return;
    }

    public void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        return;
    }

    public void markAsDefinitelyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        return;
    }

    public void markAsDefinitelyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        return;
    }

    public void markAsDefinitelyUnknown(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyUnknown(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyUnknown(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)
    {
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r1, $r2;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        int i0, $i1, $i2, $i3, $i4, $i6;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: int tagBits>;

        $i6 = (int) -2;

        $i4 = $i3 & $i6;

        r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: int tagBits> = $i4;

        goto label2;

     label1:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: int tagBits>;

        $i2 = $i1 | 1;

        r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: int tagBits> = $i2;

     label2:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(i0);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(i0);

        return r0;
    }

    public org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedWith(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)
    {
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r1, r2, $r3;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r3 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedWith(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>(r2);

        return $r3;
    }

    public org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo nullInfoLessUnconditionalCopy()
    {
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r1, $r2;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInitsWithoutSideEffect()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo nullInfoLessUnconditionalCopy()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r2, $r6;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r1;
        java.lang.StringBuffer $r0, $r4, $r5, $r8, $r9;
        java.lang.String $r3, $r7, $r10;

        r1 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("FlowInfo<true: ");

        $r2 = r1.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", false: ");

        $r6 = r1.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo safeInitsWhenTrue()
    {
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r1;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        return $r1;
    }

    public org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalCopy()
    {
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r2, $r4, $r5;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r1, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalCopy()>();

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r5 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedWith(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r4);

        return $r5;
    }

    public org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalFieldLessCopy()
    {
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r2, $r4, $r5;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r1, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalFieldLessCopy()>();

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalFieldLessCopy()>();

        $r5 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedWith(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r4);

        return $r5;
    }

    public org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()
    {
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r2, $r4, $r5;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r1, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r5 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedWith(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r4);

        return $r5;
    }

    public org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInitsWithoutSideEffect()
    {
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r2, $r4, $r5;
        org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r1, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalCopy()>();

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r5 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedWith(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r4);

        return $r5;
    }
}
