class org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher extends java.lang.Object implements org.springframework.aop.IntroductionAwareMethodMatcher, java.io.Serializable
{
    private org.springframework.aop.MethodMatcher mm1;
    private org.springframework.aop.MethodMatcher mm2;

    public void <init>(org.springframework.aop.MethodMatcher, org.springframework.aop.MethodMatcher)
    {
        org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher r0;
        org.springframework.aop.MethodMatcher r1, r2;

        r0 := @this: org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher;

        r1 := @parameter0: org.springframework.aop.MethodMatcher;

        r2 := @parameter1: org.springframework.aop.MethodMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "First MethodMatcher must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "Second MethodMatcher must not be null");

        r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm1> = r1;

        r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm2> = r2;

        return;
    }

    public boolean matches(java.lang.reflect.Method, java.lang.Class, boolean)
    {
        org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher r0;
        java.lang.Class r2;
        java.lang.reflect.Method r1;
        org.springframework.aop.MethodMatcher $r3, $r4;
        boolean z0, $z1, $z2;

        r0 := @this: org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        $r3 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm1>;

        $z1 = staticinvoke <org.springframework.aop.support.MethodMatchers: boolean matches(org.springframework.aop.MethodMatcher,java.lang.reflect.Method,java.lang.Class,boolean)>($r3, r1, r2, z0);

        if $z1 == 0 goto label1;

        $r4 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm2>;

        $z2 = staticinvoke <org.springframework.aop.support.MethodMatchers: boolean matches(org.springframework.aop.MethodMatcher,java.lang.reflect.Method,java.lang.Class,boolean)>($r4, r1, r2, z0);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean matches(java.lang.reflect.Method, java.lang.Class)
    {
        org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher r0;
        java.lang.Class r2;
        java.lang.reflect.Method r1;
        org.springframework.aop.MethodMatcher $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm1>;

        $z0 = interfaceinvoke $r3.<org.springframework.aop.MethodMatcher: boolean matches(java.lang.reflect.Method,java.lang.Class)>(r1, r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm2>;

        $z1 = interfaceinvoke $r4.<org.springframework.aop.MethodMatcher: boolean matches(java.lang.reflect.Method,java.lang.Class)>(r1, r2);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isRuntime()
    {
        org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher r0;
        org.springframework.aop.MethodMatcher $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher;

        $r1 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm1>;

        $z0 = interfaceinvoke $r1.<org.springframework.aop.MethodMatcher: boolean isRuntime()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm2>;

        $z1 = interfaceinvoke $r2.<org.springframework.aop.MethodMatcher: boolean isRuntime()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean matches(java.lang.reflect.Method, java.lang.Class, java.lang.Object[])
    {
        org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher r0;
        java.lang.Object[] r7;
        java.lang.Class r3;
        java.lang.reflect.Method r2;
        org.springframework.aop.MethodMatcher $r1, $r4, $r5, $r6, $r8, $r9;
        boolean $z0, z1, $z2, $z3, $z4;

        r0 := @this: org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher;

        r2 := @parameter0: java.lang.reflect.Method;

        r3 := @parameter1: java.lang.Class;

        r7 := @parameter2: java.lang.Object[];

        $r1 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm1>;

        $z0 = interfaceinvoke $r1.<org.springframework.aop.MethodMatcher: boolean isRuntime()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm1>;

        $z3 = interfaceinvoke $r9.<org.springframework.aop.MethodMatcher: boolean matches(java.lang.reflect.Method,java.lang.Class,java.lang.Object[])>(r2, r3, r7);

        goto label2;

     label1:
        $r4 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm1>;

        $z3 = interfaceinvoke $r4.<org.springframework.aop.MethodMatcher: boolean matches(java.lang.reflect.Method,java.lang.Class)>(r2, r3);

     label2:
        z1 = $z3;

        $r5 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm2>;

        $z2 = interfaceinvoke $r5.<org.springframework.aop.MethodMatcher: boolean isRuntime()>();

        if $z2 == 0 goto label3;

        $r8 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm2>;

        $z4 = interfaceinvoke $r8.<org.springframework.aop.MethodMatcher: boolean matches(java.lang.reflect.Method,java.lang.Class,java.lang.Object[])>(r2, r3, r7);

        goto label4;

     label3:
        $r6 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm2>;

        $z4 = interfaceinvoke $r6.<org.springframework.aop.MethodMatcher: boolean matches(java.lang.reflect.Method,java.lang.Class)>(r2, r3);

     label4:
        if z1 == 0 goto label5;

        if $z4 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher r0, r2;
        java.lang.Object r1;
        org.springframework.aop.MethodMatcher $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher) r1;

        $r4 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm1>;

        $r3 = r2.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm1>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm2>;

        $r5 = r2.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm2>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher r0;
        int $i0, $i1, $i2, i3, i4;
        org.springframework.aop.MethodMatcher $r1, $r2;

        r0 := @this: org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher;

        $r1 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm1>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i3 = 629 + $i0;

        $i1 = 37 * i3;

        $r2 = r0.<org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher: org.springframework.aop.MethodMatcher mm2>;

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }
}
