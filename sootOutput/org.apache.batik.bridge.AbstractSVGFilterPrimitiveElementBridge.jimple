public abstract class org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge extends org.apache.batik.bridge.AnimatableGenericSVGBridge implements org.apache.batik.bridge.FilterPrimitiveBridge, org.apache.batik.bridge.ErrorConstants
{
    static final java.awt.geom.Rectangle2D INFINITE_FILTER_REGION;

    protected void <init>()
    {
        org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge r0;

        r0 := @this: org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AnimatableGenericSVGBridge: void <init>()>();

        return;
    }

    protected static org.apache.batik.ext.awt.image.renderable.Filter getIn(org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.util.Map, org.apache.batik.bridge.BridgeContext)
    {
        org.apache.batik.gvt.GraphicsNode r3;
        org.apache.batik.bridge.BridgeContext r5;
        org.apache.batik.ext.awt.image.renderable.Filter $r6, r7;
        org.w3c.dom.Element r0, r2;
        java.util.Map r4;
        int $i0;
        java.lang.String $r1;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.batik.gvt.GraphicsNode;

        r7 := @parameter3: org.apache.batik.ext.awt.image.renderable.Filter;

        r4 := @parameter4: java.util.Map;

        r5 := @parameter5: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "in");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return r7;

     label1:
        $r6 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: org.apache.batik.ext.awt.image.renderable.Filter getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r0, $r1, r2, r3, r4, r5);

        return $r6;
    }

    protected static org.apache.batik.ext.awt.image.renderable.Filter getIn2(org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.util.Map, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r8;
        org.apache.batik.gvt.GraphicsNode r3;
        org.apache.batik.bridge.BridgeException $r7;
        org.apache.batik.bridge.BridgeContext r5;
        org.apache.batik.ext.awt.image.renderable.Filter $r6, r9;
        org.w3c.dom.Element r0, r2;
        java.util.Map r4;
        int $i0;
        java.lang.String $r1;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.batik.gvt.GraphicsNode;

        r9 := @parameter3: org.apache.batik.ext.awt.image.renderable.Filter;

        r4 := @parameter4: java.util.Map;

        r5 := @parameter5: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "in2");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r7 = new org.apache.batik.bridge.BridgeException;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = "in2";

        specialinvoke $r7.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r5, r0, "attribute.missing", $r8);

        throw $r7;

     label1:
        $r6 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: org.apache.batik.ext.awt.image.renderable.Filter getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r0, $r1, r2, r3, r4, r5);

        return $r6;
    }

    protected static void updateFilterMap(org.w3c.dom.Element, org.apache.batik.ext.awt.image.renderable.Filter, java.util.Map)
    {
        org.w3c.dom.Element r0;
        java.util.Map r3;
        int $i0, $i1;
        java.lang.String $r1, $r2;
        org.apache.batik.ext.awt.image.renderable.Filter r4;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.apache.batik.ext.awt.image.renderable.Filter;

        r3 := @parameter2: java.util.Map;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "result");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 == 0 goto label1;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r4);

     label1:
        return;
    }

    protected static void handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.apache.batik.ext.awt.image.renderable.FilterColorInterpolation $r2;
        org.apache.batik.ext.awt.image.renderable.Filter r0;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        r1 := @parameter1: org.w3c.dom.Element;

        $z0 = r0 instanceof org.apache.batik.ext.awt.image.renderable.FilterColorInterpolation;

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.apache.batik.bridge.CSSUtilities: boolean convertColorInterpolationFilters(org.w3c.dom.Element)>(r1);

        $r2 = (org.apache.batik.ext.awt.image.renderable.FilterColorInterpolation) r0;

        interfaceinvoke $r2.<org.apache.batik.ext.awt.image.renderable.FilterColorInterpolation: void setColorSpaceLinear(boolean)>($z1);

     label1:
        return;
    }

    static org.apache.batik.ext.awt.image.renderable.Filter getFilterSource(org.w3c.dom.Element, java.lang.String, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, java.util.Map, org.apache.batik.bridge.BridgeContext)
    {
        java.awt.Color $r40;
        java.awt.geom.Rectangle2D $r3;
        java.util.Map r0;
        org.apache.batik.ext.awt.image.renderable.FloodRable8Bit $r34, $r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.batik.gvt.filter.BackgroundRable8Bit $r35, $r37;
        org.apache.batik.gvt.GraphicsNode r9;
        org.apache.batik.bridge.BridgeContext r21;
        org.apache.batik.ext.awt.image.renderable.Filter r2, r31;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r36, $r39;
        java.awt.Paint $r22, $r27, r32;
        org.apache.batik.ext.awt.image.renderable.FilterAlphaRable $r33, $r38;
        org.apache.batik.ext.awt.image.PadMode $r12, $r16;
        int $i0, $i5, $i6, $i7, $i8;
        java.lang.String r4, $r5, $r6, $r13, $r17, $r18, $r19, $r24, $r26;
        char $c1, $c2, $c3, $c4;
        org.w3c.dom.Element r20, r30;
        java.lang.Object $r1, $r7;

        r30 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: java.lang.String;

        r20 := @parameter2: org.w3c.dom.Element;

        r9 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        r0 := @parameter4: java.util.Map;

        r21 := @parameter5: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("SourceGraphic");

        r2 = (org.apache.batik.ext.awt.image.renderable.Filter) $r1;

        $r3 = interfaceinvoke r2.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        r31 = null;

        tableswitch($i0)
        {
            case 9: goto label6;
            case 10: goto label8;
            case 11: goto label2;
            case 12: goto label8;
            case 13: goto label1;
            case 14: goto label8;
            case 15: goto label4;
            default: goto label8;
        };

     label1:
        $r17 = "SourceGraphic";

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label8;

        r31 = r2;

        goto label8;

     label2:
        $c3 = virtualinvoke r4.<java.lang.String: char charAt(int)>(1);

        $r18 = "SourceAlpha";

        $c4 = virtualinvoke $r18.<java.lang.String: char charAt(int)>(1);

        $i5 = (int) $c3;

        $i6 = (int) $c4;

        if $i5 != $i6 goto label3;

        $r24 = "SourceAlpha";

        $z4 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label8;

        $r33 = new org.apache.batik.ext.awt.image.renderable.FilterAlphaRable;

        specialinvoke $r33.<org.apache.batik.ext.awt.image.renderable.FilterAlphaRable: void <init>(org.apache.batik.ext.awt.image.renderable.Filter)>(r2);

        r31 = $r33;

        goto label8;

     label3:
        $r19 = "StrokePaint";

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label8;

        $r22 = staticinvoke <org.apache.batik.bridge.PaintServer: java.awt.Paint convertStrokePaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)>(r20, r9, r21);

        $r34 = new org.apache.batik.ext.awt.image.renderable.FloodRable8Bit;

        specialinvoke $r34.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: void <init>(java.awt.geom.Rectangle2D,java.awt.Paint)>($r3, $r22);

        r31 = $r34;

        goto label8;

     label4:
        $c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(10);

        $r5 = "BackgroundImage";

        $c2 = virtualinvoke $r5.<java.lang.String: char charAt(int)>(10);

        $i7 = (int) $c1;

        $i8 = (int) $c2;

        if $i7 != $i8 goto label5;

        $r13 = "BackgroundImage";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label8;

        $r35 = new org.apache.batik.gvt.filter.BackgroundRable8Bit;

        specialinvoke $r35.<org.apache.batik.gvt.filter.BackgroundRable8Bit: void <init>(org.apache.batik.gvt.GraphicsNode)>(r9);

        $r36 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r16 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r36.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r35, $r3, $r16);

        r31 = $r36;

        goto label8;

     label5:
        $r6 = "BackgroundAlpha";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label8;

        $r37 = new org.apache.batik.gvt.filter.BackgroundRable8Bit;

        specialinvoke $r37.<org.apache.batik.gvt.filter.BackgroundRable8Bit: void <init>(org.apache.batik.gvt.GraphicsNode)>(r9);

        $r38 = new org.apache.batik.ext.awt.image.renderable.FilterAlphaRable;

        specialinvoke $r38.<org.apache.batik.ext.awt.image.renderable.FilterAlphaRable: void <init>(org.apache.batik.ext.awt.image.renderable.Filter)>($r37);

        $r39 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r12 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r39.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r38, $r3, $r12);

        r31 = $r39;

        goto label8;

     label6:
        $r26 = "FillPaint";

        $z5 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 == 0 goto label8;

        $r27 = staticinvoke <org.apache.batik.bridge.PaintServer: java.awt.Paint convertFillPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)>(r20, r9, r21);

        r32 = $r27;

        if $r27 != null goto label7;

        $r40 = new java.awt.Color;

        specialinvoke $r40.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r32 = $r40;

     label7:
        $r41 = new org.apache.batik.ext.awt.image.renderable.FloodRable8Bit;

        specialinvoke $r41.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: void <init>(java.awt.geom.Rectangle2D,java.awt.Paint)>($r3, r32);

        r31 = $r41;

     label8:
        if r31 != null goto label9;

        $r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r31 = (org.apache.batik.ext.awt.image.renderable.Filter) $r7;

     label9:
        return r31;
    }

    protected static int convertInteger(org.w3c.dom.Element, java.lang.String, int, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r6;
        org.apache.batik.bridge.BridgeException $r4;
        java.lang.NumberFormatException $r3;
        org.apache.batik.bridge.BridgeContext r5;
        org.w3c.dom.Element r0;
        int $i0, $i1, i2;
        java.lang.String r1, $r2;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        r5 := @parameter3: org.apache.batik.bridge.BridgeContext;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return i2;

     label1:
        $i1 = staticinvoke <org.apache.batik.bridge.SVGUtilities: int convertSVGInteger(java.lang.String)>($r2);

        return $i1;

     label2:
        $r3 := @caughtexception;

        $r4 = new org.apache.batik.bridge.BridgeException;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r1;

        $r6[1] = $r2;

        specialinvoke $r4.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r5, r0, $r3, "attribute.malformed", $r6);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label2;
    }

    protected static float convertNumber(org.w3c.dom.Element, java.lang.String, float, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r6;
        org.apache.batik.bridge.BridgeException $r4;
        java.lang.NumberFormatException $r3;
        org.apache.batik.bridge.BridgeContext r5;
        org.w3c.dom.Element r0;
        int $i0;
        float $f0, f1;
        java.lang.String r1, $r2;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        f1 := @parameter2: float;

        r5 := @parameter3: org.apache.batik.bridge.BridgeContext;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return f1;

     label1:
        $f0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r2);

        return $f0;

     label2:
        $r3 := @caughtexception;

        $r4 = new org.apache.batik.bridge.BridgeException;

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = r1;

        $r6[1] = $r2;

        $r6[2] = $r3;

        specialinvoke $r4.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r5, r0, $r3, "attribute.malformed", $r6);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label2;
    }

    public abstract org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.awt.geom.Rectangle2D, java.util.Map);

    static void <clinit>()
    {
        java.awt.geom.Rectangle2D$Float $r0;

        $r0 = new java.awt.geom.Rectangle2D$Float;

        specialinvoke $r0.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(-1.7014117E38F, -1.7014117E38F, 3.4028235E38F, 3.4028235E38F);

        <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: java.awt.geom.Rectangle2D INFINITE_FILTER_REGION> = $r0;

        return;
    }
}
