public class org.apache.batik.util.gui.MemoryMonitor$Usage extends javax.swing.JPanel implements org.apache.batik.util.gui.MemoryMonitor$MemoryChangeListener
{
    public static final int PREFERRED_WIDTH;
    public static final int PREFERRED_HEIGHT;
    protected static final java.lang.String UNITS;
    protected static final java.lang.String TOTAL;
    protected static final java.lang.String USED;
    protected static final boolean POSTFIX;
    protected static final int FONT_SIZE;
    protected static final int BLOCK_MARGIN;
    protected static final int BLOCKS;
    protected static final double BLOCK_WIDTH;
    protected static final double BLOCK_HEIGHT;
    protected static final int[] BLOCK_TYPE;
    protected java.awt.Color[] usedColors;
    protected java.awt.Color[] freeColors;
    protected java.awt.Font font;
    protected java.awt.Color textColor;
    protected long totalMemory;
    protected long freeMemory;

    public void <init>()
    {
        java.awt.Color $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11;
        java.awt.Font $r9;
        java.awt.Dimension $r12;
        org.apache.batik.util.gui.MemoryMonitor$Usage r0;
        java.awt.Color[] $r1, $r5;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$Usage;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = newarray (java.awt.Color)[3];

        $r2 = <java.awt.Color: java.awt.Color red>;

        $r1[0] = $r2;

        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(255, 165, 0);

        $r1[1] = $r3;

        $r4 = <java.awt.Color: java.awt.Color green>;

        $r1[2] = $r4;

        r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color[] usedColors> = $r1;

        $r5 = newarray (java.awt.Color)[3];

        $r6 = new java.awt.Color;

        specialinvoke $r6.<java.awt.Color: void <init>(int,int,int)>(130, 0, 0);

        $r5[0] = $r6;

        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(130, 90, 0);

        $r5[1] = $r7;

        $r8 = new java.awt.Color;

        specialinvoke $r8.<java.awt.Color: void <init>(int,int,int)>(0, 130, 0);

        $r5[2] = $r8;

        r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color[] freeColors> = $r5;

        $r9 = new java.awt.Font;

        specialinvoke $r9.<java.awt.Font: void <init>(java.lang.String,int,int)>("SansSerif", 1, 9);

        r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Font font> = $r9;

        $r10 = <java.awt.Color: java.awt.Color green>;

        r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color textColor> = $r10;

        $r11 = <java.awt.Color: java.awt.Color black>;

        virtualinvoke r0.<javax.swing.JComponent: void setBackground(java.awt.Color)>($r11);

        $r12 = new java.awt.Dimension;

        specialinvoke $r12.<java.awt.Dimension: void <init>(int,int)>(90, 100);

        virtualinvoke r0.<javax.swing.JComponent: void setPreferredSize(java.awt.Dimension)>($r12);

        return;
    }

    public void memoryStateChanged(long, long)
    {
        org.apache.batik.util.gui.MemoryMonitor$Usage r0;
        long l0, l1;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$Usage;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: long totalMemory> = l0;

        r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: long freeMemory> = l1;

        return;
    }

    public void setTextColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.batik.util.gui.MemoryMonitor$Usage r0;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$Usage;

        r1 := @parameter0: java.awt.Color;

        r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color textColor> = r1;

        return;
    }

    public void setLowUsedMemoryColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.batik.util.gui.MemoryMonitor$Usage r0;
        java.awt.Color[] $r2;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$Usage;

        r1 := @parameter0: java.awt.Color;

        $r2 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color[] usedColors>;

        $r2[2] = r1;

        return;
    }

    public void setMediumUsedMemoryColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.batik.util.gui.MemoryMonitor$Usage r0;
        java.awt.Color[] $r2;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$Usage;

        r1 := @parameter0: java.awt.Color;

        $r2 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color[] usedColors>;

        $r2[1] = r1;

        return;
    }

    public void setHighUsedMemoryColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.batik.util.gui.MemoryMonitor$Usage r0;
        java.awt.Color[] $r2;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$Usage;

        r1 := @parameter0: java.awt.Color;

        $r2 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color[] usedColors>;

        $r2[0] = r1;

        return;
    }

    public void setLowFreeMemoryColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.batik.util.gui.MemoryMonitor$Usage r0;
        java.awt.Color[] $r2;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$Usage;

        r1 := @parameter0: java.awt.Color;

        $r2 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color[] freeColors>;

        $r2[2] = r1;

        return;
    }

    public void setMediumFreeMemoryColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.batik.util.gui.MemoryMonitor$Usage r0;
        java.awt.Color[] $r2;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$Usage;

        r1 := @parameter0: java.awt.Color;

        $r2 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color[] freeColors>;

        $r2[1] = r1;

        return;
    }

    public void setHighFreeMemoryColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.batik.util.gui.MemoryMonitor$Usage r0;
        java.awt.Color[] $r2;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$Usage;

        r1 := @parameter0: java.awt.Color;

        $r2 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color[] freeColors>;

        $r2[0] = r1;

        return;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r10, $r14, $r15;
        java.awt.geom.AffineTransform $r4;
        org.apache.batik.util.gui.MemoryMonitor$Usage r0;
        long $l2, $l3, $l4, $l8, $l9, $l10, $l11, l12, l15;
        java.lang.StringBuffer $r17, $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r32, $r34, $r35, $r37, $r38, $r39, $r41, $r42, $r44;
        java.lang.String $r18, $r22, $r25, $r29, $r33, $r36, $r40, $r43, r45, r46;
        java.awt.RenderingHints$Key $r6;
        java.awt.Color[] $r9, $r13;
        int[] $r8, $r12;
        java.awt.geom.Rectangle2D$Double $r7, $r11;
        boolean $z0;
        java.awt.Font $r16;
        java.awt.Dimension $r3;
        java.awt.Graphics r1;
        java.awt.Graphics2D r2;
        int $i0, $i1, i5, $i6, $i7, i13, i14;
        double $d0, d1, $d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        java.lang.Object $r5;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$Usage;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<javax.swing.JComponent: void paintComponent(java.awt.Graphics)>(r1);

        r2 = (java.awt.Graphics2D) r1;

        $r3 = virtualinvoke r0.<java.awt.Component: java.awt.Dimension getSize()>();

        $i0 = $r3.<java.awt.Dimension: int width>;

        $d0 = (double) $i0;

        d1 = $d0 / 90.0;

        $i1 = $r3.<java.awt.Dimension: int height>;

        $d2 = (double) $i1;

        d3 = $d2 / 100.0;

        $r4 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>(d1, d3);

        virtualinvoke r2.<java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>($r4);

        $r6 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r5 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r6, $r5);

        $l2 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: long freeMemory>;

        $d4 = (double) $l2;

        $d6 = 15.0 * $d4;

        $l3 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: long totalMemory>;

        $d5 = (double) $l3;

        $d7 = $d6 / $d5;

        $l4 = staticinvoke <java.lang.Math: long round(double)>($d7);

        i5 = (int) $l4;

        i13 = 0;

        goto label2;

     label1:
        $r7 = new java.awt.geom.Rectangle2D$Double;

        $d8 = (double) i13;

        $d10 = $d8 * 3.8666666666666667;

        $d9 = (double) i13;

        $d11 = $d10 + $d9;

        $d12 = $d11 + 9.0;

        $d13 = $d12 + 5.0;

        specialinvoke $r7.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(10.0, $d13, 70.0, 3.8666666666666667);

        $r9 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color[] freeColors>;

        $r8 = <org.apache.batik.util.gui.MemoryMonitor$Usage: int[] BLOCK_TYPE>;

        $i6 = $r8[i13];

        $r10 = $r9[$i6];

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r10);

        virtualinvoke r2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r7);

        i13 = i13 + 1;

     label2:
        if i13 < i5 goto label1;

        i14 = i5;

        goto label4;

     label3:
        $r11 = new java.awt.geom.Rectangle2D$Double;

        $d14 = (double) i14;

        $d16 = $d14 * 3.8666666666666667;

        $d15 = (double) i14;

        $d17 = $d16 + $d15;

        $d18 = $d17 + 9.0;

        $d19 = $d18 + 5.0;

        specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(10.0, $d19, 70.0, 3.8666666666666667);

        $r13 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color[] usedColors>;

        $r12 = <org.apache.batik.util.gui.MemoryMonitor$Usage: int[] BLOCK_TYPE>;

        $i7 = $r12[i14];

        $r14 = $r13[$i7];

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14);

        virtualinvoke r2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r11);

        i14 = i14 + 1;

     label4:
        if i14 < 15 goto label3;

        $r15 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Color textColor>;

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15);

        $r16 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: java.awt.Font font>;

        virtualinvoke r2.<java.awt.Graphics: void setFont(java.awt.Font)>($r16);

        $l8 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: long totalMemory>;

        l15 = $l8 / 1024L;

        $l10 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: long totalMemory>;

        $l9 = r0.<org.apache.batik.util.gui.MemoryMonitor$Usage: long freeMemory>;

        $l11 = $l10 - $l9;

        l12 = $l11 / 1024L;

        $z0 = <org.apache.batik.util.gui.MemoryMonitor$Usage: boolean POSTFIX>;

        if $z0 == 0 goto label5;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l15);

        $r33 = <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String UNITS>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r36 = <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String TOTAL>;

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        r45 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l12);

        $r40 = <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String UNITS>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r43 = <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String USED>;

        $r44 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label6;

     label5:
        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String TOTAL>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l15);

        $r22 = <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String UNITS>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        r45 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String USED>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l12);

        $r29 = <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String UNITS>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        r46 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        virtualinvoke r2.<java.awt.Graphics2D: void drawString(java.lang.String,int,int)>(r45, 10, 10);

        virtualinvoke r2.<java.awt.Graphics2D: void drawString(java.lang.String,int,int)>(r46, 10, 97);

        return;
    }

    static void <clinit>()
    {
        int[] $r7;
        org.apache.batik.util.resources.ResourceManager $r0, $r2, $r4, $r6;
        java.lang.String $r1, $r3, $r5;
        boolean $z0;

        <org.apache.batik.util.gui.MemoryMonitor$Usage: double BLOCK_HEIGHT> = 3.8666666666666667;

        <org.apache.batik.util.gui.MemoryMonitor$Usage: double BLOCK_WIDTH> = 70.0;

        <org.apache.batik.util.gui.MemoryMonitor$Usage: int BLOCKS> = 15;

        <org.apache.batik.util.gui.MemoryMonitor$Usage: int BLOCK_MARGIN> = 10;

        <org.apache.batik.util.gui.MemoryMonitor$Usage: int FONT_SIZE> = 9;

        <org.apache.batik.util.gui.MemoryMonitor$Usage: int PREFERRED_HEIGHT> = 100;

        <org.apache.batik.util.gui.MemoryMonitor$Usage: int PREFERRED_WIDTH> = 90;

        $r0 = <org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.resources.ResourceManager resources>;

        $r1 = virtualinvoke $r0.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Usage.units");

        <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String UNITS> = $r1;

        $r2 = <org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.resources.ResourceManager resources>;

        $r3 = virtualinvoke $r2.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Usage.total");

        <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String TOTAL> = $r3;

        $r4 = <org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.resources.ResourceManager resources>;

        $r5 = virtualinvoke $r4.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Usage.used");

        <org.apache.batik.util.gui.MemoryMonitor$Usage: java.lang.String USED> = $r5;

        $r6 = <org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.resources.ResourceManager resources>;

        $z0 = virtualinvoke $r6.<org.apache.batik.util.resources.ResourceManager: boolean getBoolean(java.lang.String)>("Usage.postfix");

        <org.apache.batik.util.gui.MemoryMonitor$Usage: boolean POSTFIX> = $z0;

        $r7 = newarray (int)[15];

        $r7[0] = 0;

        $r7[1] = 0;

        $r7[2] = 0;

        $r7[3] = 1;

        $r7[4] = 1;

        $r7[5] = 1;

        $r7[6] = 1;

        $r7[7] = 1;

        $r7[8] = 2;

        $r7[9] = 2;

        $r7[10] = 2;

        $r7[11] = 2;

        $r7[12] = 2;

        $r7[13] = 2;

        $r7[14] = 2;

        <org.apache.batik.util.gui.MemoryMonitor$Usage: int[] BLOCK_TYPE> = $r7;

        return;
    }
}
