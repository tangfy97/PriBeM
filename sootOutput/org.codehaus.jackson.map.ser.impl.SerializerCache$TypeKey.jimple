public final class org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey extends java.lang.Object
{
    protected int _hashCode;
    protected java.lang.Class _class;
    protected org.codehaus.jackson.type.JavaType _type;
    protected boolean _isTyped;

    public void <init>(java.lang.Class, boolean)
    {
        org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey r0;
        int $i0;
        java.lang.Class r1;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class> = r1;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: org.codehaus.jackson.type.JavaType _type> = null;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean _isTyped> = z0;

        $i0 = staticinvoke <org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int hash(java.lang.Class,boolean)>(r1, z0);

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int _hashCode> = $i0;

        return;
    }

    public void <init>(org.codehaus.jackson.type.JavaType, boolean)
    {
        org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey r0;
        int $i0;
        org.codehaus.jackson.type.JavaType r1;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: org.codehaus.jackson.type.JavaType _type> = r1;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class> = null;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean _isTyped> = z0;

        $i0 = staticinvoke <org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int hash(org.codehaus.jackson.type.JavaType,boolean)>(r1, z0);

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int _hashCode> = $i0;

        return;
    }

    private static final int hash(java.lang.Class, boolean)
    {
        int $i0, i1;
        java.lang.Class r0;
        java.lang.String $r1;
        boolean z0;

        r0 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i1 = $i0;

        if z0 == 0 goto label1;

        i1 = $i0 + 1;

     label1:
        return i1;
    }

    private static final int hash(org.codehaus.jackson.type.JavaType, boolean)
    {
        int $i0, i1, $i3;
        org.codehaus.jackson.type.JavaType r0;
        boolean z0;

        r0 := @parameter0: org.codehaus.jackson.type.JavaType;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<org.codehaus.jackson.type.JavaType: int hashCode()>();

        i1 = $i0 - 1;

        if z0 == 0 goto label1;

        $i3 = (int) -1;

        i1 = i1 + $i3;

     label1:
        return i1;
    }

    public void resetTyped(java.lang.Class)
    {
        int $i0;
        java.lang.Class r1;
        org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey r0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey;

        r1 := @parameter0: java.lang.Class;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: org.codehaus.jackson.type.JavaType _type> = null;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class> = r1;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean _isTyped> = 1;

        $i0 = staticinvoke <org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int hash(java.lang.Class,boolean)>(r1, 1);

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int _hashCode> = $i0;

        return;
    }

    public void resetUntyped(java.lang.Class)
    {
        int $i0;
        java.lang.Class r1;
        org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey r0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey;

        r1 := @parameter0: java.lang.Class;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: org.codehaus.jackson.type.JavaType _type> = null;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class> = r1;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean _isTyped> = 0;

        $i0 = staticinvoke <org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int hash(java.lang.Class,boolean)>(r1, 0);

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int _hashCode> = $i0;

        return;
    }

    public void resetTyped(org.codehaus.jackson.type.JavaType)
    {
        int $i0;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey r0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: org.codehaus.jackson.type.JavaType _type> = r1;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class> = null;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean _isTyped> = 1;

        $i0 = staticinvoke <org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int hash(org.codehaus.jackson.type.JavaType,boolean)>(r1, 1);

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int _hashCode> = $i0;

        return;
    }

    public void resetUntyped(org.codehaus.jackson.type.JavaType)
    {
        int $i0;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey r0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: org.codehaus.jackson.type.JavaType _type> = r1;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class> = null;

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean _isTyped> = 0;

        $i0 = staticinvoke <org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int hash(org.codehaus.jackson.type.JavaType,boolean)>(r1, 0);

        r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int _hashCode> = $i0;

        return;
    }

    public final int hashCode()
    {
        int $i0;
        org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey r0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey;

        $i0 = r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: int _hashCode>;

        return $i0;
    }

    public final java.lang.String toString()
    {
        org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey r0;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.String $r9, $r13, $r18;
        boolean $z0, $z1;
        java.lang.Class $r1, $r12;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r14, $r15, $r16, $r17;

        r0 := @this: org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey;

        $r1 = r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class>;

        if $r1 == null goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{class: ");

        $r12 = r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class>;

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", typed? ");

        $z1 = r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean _isTyped>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{type: ");

        $r4 = r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: org.codehaus.jackson.type.JavaType _type>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", typed? ");

        $z0 = r0.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean _isTyped>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public final boolean equals(java.lang.Object)
    {
        org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey r1, r2;
        org.codehaus.jackson.type.JavaType $r4, $r5;
        java.lang.Object r0;
        java.lang.Class $r3, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        r2 = (org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey) r0;

        $z1 = r2.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean _isTyped>;

        $z0 = r1.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean _isTyped>;

        if $z1 != $z0 goto label5;

        $r3 = r1.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class>;

        if $r3 == null goto label4;

        $r7 = r2.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class>;

        $r6 = r1.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.Class _class>;

        if $r7 != $r6 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        $r5 = r1.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: org.codehaus.jackson.type.JavaType _type>;

        $r4 = r2.<org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: org.codehaus.jackson.type.JavaType _type>;

        $z2 = virtualinvoke $r5.<org.codehaus.jackson.type.JavaType: boolean equals(java.lang.Object)>($r4);

        return $z2;

     label5:
        return 0;
    }
}
