class org.apache.zookeeper.server.quorum.QuorumPeer$1 extends java.lang.Thread
{
    final org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer val$roZk;
    final org.apache.zookeeper.server.quorum.QuorumPeer this$0;

    void <init>(org.apache.zookeeper.server.quorum.QuorumPeer, org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer r2;
        org.apache.zookeeper.server.quorum.QuorumPeer$1 r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer$1;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPeer;

        r2 := @parameter1: org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer$1: org.apache.zookeeper.server.quorum.QuorumPeer this$0> = r1;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeer$1: org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer val$roZk> = r2;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r1, $r2;
        org.slf4j.Logger $r7, $r9;
        org.apache.zookeeper.server.quorum.QuorumPeer$1 r0;
        long $l2;
        org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer $r5;
        java.lang.Exception $r6;
        org.apache.zookeeper.server.quorum.QuorumPeer$ServerState $r3, $r4;
        java.lang.InterruptedException $r8;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeer$1;

     label1:
        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer$1: org.apache.zookeeper.server.quorum.QuorumPeer this$0>;

        $i0 = $r1.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(2000, $i0);

        $l2 = (long) $i1;

        staticinvoke <org.apache.zookeeper.server.quorum.QuorumPeer$1: void sleep(long)>($l2);

        $r3 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LOOKING>;

        $r2 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer$1: org.apache.zookeeper.server.quorum.QuorumPeer this$0>;

        $r4 = virtualinvoke $r2.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState getPeerState()>();

        $z0 = virtualinvoke $r3.<org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.zookeeper.server.quorum.QuorumPeer$1: org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer val$roZk>;

        virtualinvoke $r5.<org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer: void startup()>();

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = staticinvoke <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger access$000()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("Interrupted while attempting to start ReadOnlyZooKeeperServer, not started");

        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = staticinvoke <org.apache.zookeeper.server.quorum.QuorumPeer: org.slf4j.Logger access$000()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("FAILED to start ReadOnlyZooKeeperServer", $r6);

     label5:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }
}
