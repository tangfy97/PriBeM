public class com.jidesoft.plaf.basic.BasicJideOptionPaneUI extends javax.swing.plaf.basic.BasicOptionPaneUI
{
    private java.awt.Container _detailsArea;
    private javax.swing.JButton _detailsButton;
    private java.awt.Container _buttonArea;
    private java.awt.Container _bannerArea;
    private java.awt.Component _titleComponent;
    private com.jidesoft.plaf.basic.ThemePainter _painter;
    private java.beans.PropertyChangeListener _propertyListener;
    private int _detailsPreferredWidth;
    private boolean _detailsVisible;

    public void <init>()
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        int $i1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        specialinvoke r0.<javax.swing.plaf.basic.BasicOptionPaneUI: void <init>()>();

        $i1 = (int) -1;

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int _detailsPreferredWidth> = $i1;

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: boolean _detailsVisible> = 0;

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI $r0;
        javax.swing.JComponent r1;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void <init>()>();

        return $r0;
    }

    protected java.awt.LayoutManager createLayoutManager()
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r1;
        com.jidesoft.swing.JideBoxLayout $r0;
        javax.swing.JOptionPane $r2;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r0 = new com.jidesoft.swing.JideBoxLayout;

        $r2 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        specialinvoke $r0.<com.jidesoft.swing.JideBoxLayout: void <init>(java.awt.Container,int)>($r2, 1);

        return $r0;
    }

    public boolean isDetailsVisible()
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $z0 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: boolean _detailsVisible>;

        return $z0;
    }

    public void setDetailsVisible(boolean)
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        boolean z0, $z1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: boolean _detailsVisible>;

        if $z1 == z0 goto label1;

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: boolean _detailsVisible> = z0;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void toggleDetailsArea()>();

     label1:
        return;
    }

    protected void installComponents()
    {
        java.awt.Container $r2, $r5, $r7, $r13;
        boolean z0, $z1, $z2, $z4, $z5;
        javax.swing.JComponent $r3;
        javax.swing.JOptionPane $r4, $r6, $r8, $r9, $r11, $r12;
        java.awt.ComponentOrientation $r10;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r1;
        java.lang.Object $r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.showBanner");

        if $r0 == null goto label1;

        $z2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("OptionPane.showBanner");

        if $z2 == 0 goto label2;

     label1:
        $z5 = 1;

        $z4 = 1;

        goto label3;

     label2:
        $z5 = 0;

        $z4 = 0;

     label3:
        z0 = $z4;

        if $z5 == 0 goto label4;

        $r12 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r13 = virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container createBannerArea()>();

        r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _bannerArea> = $r13;

        virtualinvoke $r12.<javax.swing.JOptionPane: void add(java.awt.Component,java.lang.Object)>($r13, "fix");

     label4:
        $r2 = virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container createMessageArea()>();

        if z0 != 0 goto label5;

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void addIcon(java.awt.Container)>($r2);

     label5:
        $r3 = (javax.swing.JComponent) $r2;

        staticinvoke <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>($r3, "OptionPane.border");

        $r4 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        virtualinvoke $r4.<javax.swing.JOptionPane: java.awt.Component add(java.awt.Component)>($r2);

        $r5 = virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container createSeparator()>();

        if $r5 == null goto label6;

        $r11 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        virtualinvoke $r11.<javax.swing.JOptionPane: java.awt.Component add(java.awt.Component)>($r5);

     label6:
        $r6 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r7 = virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container createButtonArea()>();

        r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _buttonArea> = $r7;

        virtualinvoke $r6.<javax.swing.JOptionPane: void add(java.awt.Component,java.lang.Object)>($r7, "fix");

        $r9 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r8 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r10 = virtualinvoke $r8.<javax.swing.JOptionPane: java.awt.ComponentOrientation getComponentOrientation()>();

        virtualinvoke $r9.<javax.swing.JOptionPane: void applyComponentOrientation(java.awt.ComponentOrientation)>($r10);

        $z1 = specialinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: boolean shouldDetailsButtonVisible()>();

        if $z1 == 0 goto label7;

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void updateDetailsComponent()>();

     label7:
        return;
    }

    protected void installListeners()
    {
        java.beans.PropertyChangeListener $r2;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI$1 $r1;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        javax.swing.JOptionPane $r3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        specialinvoke r0.<javax.swing.plaf.basic.BasicOptionPaneUI: void installListeners()>();

        $r1 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$1;

        specialinvoke $r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$1: void <init>(com.jidesoft.plaf.basic.BasicJideOptionPaneUI)>(r0);

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.beans.PropertyChangeListener _propertyListener> = $r1;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.beans.PropertyChangeListener _propertyListener>;

        virtualinvoke $r3.<javax.swing.JOptionPane: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r2);

        return;
    }

    protected void uninstallListeners()
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        java.beans.PropertyChangeListener $r1;
        javax.swing.JOptionPane $r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        specialinvoke r0.<javax.swing.plaf.basic.BasicOptionPaneUI: void uninstallListeners()>();

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.beans.PropertyChangeListener _propertyListener>;

        virtualinvoke $r2.<javax.swing.JOptionPane: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r1);

        return;
    }

    protected void updateDetailsComponent()
    {
        javax.swing.JOptionPane $r5, $r8;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        java.awt.Container $r1, $r2, $r3, $r4, $r6, $r7;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _detailsArea>;

        if $r1 == null goto label1;

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _detailsArea>;

        virtualinvoke $r8.<javax.swing.JOptionPane: void remove(java.awt.Component)>($r7);

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _detailsArea> = null;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container createDetailsComponent()>();

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _detailsArea> = $r2;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _detailsArea>;

        if $r3 == null goto label2;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _detailsArea>;

        virtualinvoke $r5.<javax.swing.JOptionPane: void add(java.awt.Component,java.lang.Object)>($r4, "vary");

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _detailsArea>;

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: boolean isDetailsVisible()>();

        virtualinvoke $r6.<java.awt.Container: void setVisible(boolean)>($z0);

     label2:
        return;
    }

    protected java.awt.Container createMessageArea()
    {
        java.awt.Insets $r11;
        javax.swing.border.Border r2;
        int $i0, $i1, $i2;
        java.awt.BorderLayout $r3, $r7;
        javax.swing.Icon $r9;
        java.awt.GridBagConstraints $r10;
        java.awt.Dimension $r14;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r8;
        java.lang.Object $r1, $r12;
        java.awt.GridBagLayout $r5;
        javax.swing.JPanel $r0, $r4, $r6, $r13;

        r8 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r0 = new javax.swing.JPanel;

        specialinvoke $r0.<javax.swing.JPanel: void <init>()>();

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.messageAreaBorder");

        r2 = (javax.swing.border.Border) $r1;

        if r2 == null goto label1;

        virtualinvoke $r0.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>(r2);

     label1:
        $r3 = new java.awt.BorderLayout;

        specialinvoke $r3.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke $r0.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r3);

        $r4 = new javax.swing.JPanel;

        $r5 = new java.awt.GridBagLayout;

        specialinvoke $r5.<java.awt.GridBagLayout: void <init>()>();

        specialinvoke $r4.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r5);

        $r6 = new javax.swing.JPanel;

        $r7 = new java.awt.BorderLayout;

        specialinvoke $r7.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $r6.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r7);

        virtualinvoke $r4.<java.awt.Container: void setName(java.lang.String)>("OptionPane.body");

        virtualinvoke $r6.<java.awt.Container: void setName(java.lang.String)>("OptionPane.realBody");

        $r9 = virtualinvoke r8.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.Icon getIcon()>();

        if $r9 == null goto label2;

        $r13 = new javax.swing.JPanel;

        specialinvoke $r13.<javax.swing.JPanel: void <init>()>();

        virtualinvoke $r13.<javax.swing.JPanel: void setName(java.lang.String)>("OptionPane.separator");

        $r14 = new java.awt.Dimension;

        specialinvoke $r14.<java.awt.Dimension: void <init>(int,int)>(15, 1);

        virtualinvoke $r13.<javax.swing.JPanel: void setPreferredSize(java.awt.Dimension)>($r14);

        virtualinvoke $r6.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r13, "Before");

     label2:
        virtualinvoke $r6.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r4, "Center");

        $r10 = new java.awt.GridBagConstraints;

        specialinvoke $r10.<java.awt.GridBagConstraints: void <init>()>();

        $r10.<java.awt.GridBagConstraints: int gridy> = 0;

        $r10.<java.awt.GridBagConstraints: int gridx> = 0;

        $r10.<java.awt.GridBagConstraints: int gridwidth> = 0;

        $r10.<java.awt.GridBagConstraints: int gridheight> = 1;

        $i0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("OptionPane.messageAnchor");

        if $i0 != 0 goto label3;

        $i2 = 10;

        goto label4;

     label3:
        $i2 = $i0;

     label4:
        $r10.<java.awt.GridBagConstraints: int anchor> = $i2;

        $r11 = new java.awt.Insets;

        specialinvoke $r11.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 3, 0);

        $r10.<java.awt.GridBagConstraints: java.awt.Insets insets> = $r11;

        $r12 = virtualinvoke r8.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.lang.Object getMessage()>();

        $i1 = virtualinvoke r8.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int getMaxCharactersPerLineCount()>();

        virtualinvoke r8.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void addMessageComponents(java.awt.Container,java.awt.GridBagConstraints,java.lang.Object,int,boolean)>($r4, $r10, $r12, $i1, 0);

        virtualinvoke $r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r6, "Center");

        return $r0;
    }

    protected java.awt.Container createSeparator()
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r1;
        javax.swing.JSeparator $r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r0 = new javax.swing.JSeparator;

        specialinvoke $r0.<javax.swing.JSeparator: void <init>()>();

        return $r0;
    }

    protected void installDefaults()
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        java.lang.Object $r3;
        javax.swing.JOptionPane $r1;
        com.jidesoft.plaf.basic.ThemePainter $r4;
        javax.swing.border.Border $r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        specialinvoke r0.<javax.swing.plaf.basic.BasicOptionPaneUI: void installDefaults()>();

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r2 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        virtualinvoke $r1.<javax.swing.JOptionPane: void setBorder(javax.swing.border.Border)>($r2);

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Theme.painter");

        $r4 = (com.jidesoft.plaf.basic.ThemePainter) $r3;

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: com.jidesoft.plaf.basic.ThemePainter _painter> = $r4;

        return;
    }

    protected void uninstallDefaults()
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        specialinvoke r0.<javax.swing.plaf.basic.BasicOptionPaneUI: void uninstallDefaults()>();

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: com.jidesoft.plaf.basic.ThemePainter _painter> = null;

        return;
    }

    protected java.awt.Container createDetailsComponent()
    {
        javax.swing.border.Border $r10;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        java.awt.Container $r16, $r18;
        java.awt.BorderLayout $r8, $r13;
        com.jidesoft.dialog.JideOptionPane r3;
        boolean $z0, $z1, $z2, $z3;
        javax.swing.JOptionPane $r1, $r2;
        java.awt.Component $r14;
        javax.swing.JScrollPane $r9;
        java.awt.Dimension $r11, $r15, $r17;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        java.lang.Object $r4;
        javax.swing.JTextArea $r5;
        javax.swing.JPanel $r7, $r12;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z0 = $r1 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        r3 = (com.jidesoft.dialog.JideOptionPane) $r2;

        $r4 = virtualinvoke r3.<com.jidesoft.dialog.JideOptionPane: java.lang.Object getDetails()>();

        $z1 = $r4 instanceof java.awt.Container;

        if $z1 == 0 goto label2;

        $r16 = (java.awt.Container) $r4;

        $r17 = virtualinvoke $r16.<java.awt.Container: java.awt.Dimension getPreferredSize()>();

        $i2 = $r17.<java.awt.Dimension: int width>;

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int _detailsPreferredWidth> = $i2;

        $r18 = (java.awt.Container) $r4;

        return $r18;

     label2:
        $z2 = $r4 instanceof java.awt.Component;

        if $z2 == 0 goto label3;

        $r12 = new javax.swing.JPanel;

        $r13 = new java.awt.BorderLayout;

        specialinvoke $r13.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $r12.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r13);

        $r14 = (java.awt.Component) $r4;

        virtualinvoke $r12.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r14);

        $r15 = virtualinvoke $r12.<javax.swing.JPanel: java.awt.Dimension getPreferredSize()>();

        $i1 = $r15.<java.awt.Dimension: int width>;

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int _detailsPreferredWidth> = $i1;

        return $r12;

     label3:
        $z3 = $r4 instanceof java.lang.String;

        if $z3 == 0 goto label4;

        $r5 = new javax.swing.JTextArea;

        $r6 = (java.lang.String) $r4;

        specialinvoke $r5.<javax.swing.JTextArea: void <init>(java.lang.String)>($r6);

        virtualinvoke $r5.<javax.swing.JTextArea: void setEditable(boolean)>(0);

        virtualinvoke $r5.<javax.swing.JTextArea: void setRows(int)>(20);

        virtualinvoke $r5.<javax.swing.JTextArea: void setColumns(int)>(60);

        $r7 = new javax.swing.JPanel;

        $r8 = new java.awt.BorderLayout;

        specialinvoke $r8.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $r7.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r8);

        $r9 = new javax.swing.JScrollPane;

        specialinvoke $r9.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r5);

        virtualinvoke $r7.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r9);

        $r10 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(10, 6, 10, 6);

        virtualinvoke $r7.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r10);

        $r11 = virtualinvoke $r7.<javax.swing.JPanel: java.awt.Dimension getPreferredSize()>();

        $i0 = $r11.<java.awt.Dimension: int width>;

        r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int _detailsPreferredWidth> = $i0;

        return $r7;

     label4:
        return null;
    }

    protected java.awt.Container createButtonArea()
    {
        java.lang.Object[] $r3;
        com.jidesoft.dialog.ButtonPanel $r0;
        javax.swing.border.Border $r4;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i5;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r2;
        java.lang.Object $r1;
        boolean $z0;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $i0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("OptionPane.buttonOrientation");

        if $i0 != 0 goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = $i0;

     label2:
        $r0 = new com.jidesoft.dialog.ButtonPanel;

        specialinvoke $r0.<com.jidesoft.dialog.ButtonPanel: void <init>(int)>($i3);

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.buttonAreaBorder");

        $r4 = (javax.swing.border.Border) $r1;

        virtualinvoke $r0.<com.jidesoft.dialog.ButtonPanel: void setName(java.lang.String)>("OptionPane.buttonArea");

        if $r4 == null goto label3;

        virtualinvoke $r0.<com.jidesoft.dialog.ButtonPanel: void setBorder(javax.swing.border.Border)>($r4);

     label3:
        $z0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("OptionPane.sameSizeButtons");

        if $z0 == 0 goto label4;

        $b4 = 0;

        goto label5;

     label4:
        $b4 = 1;

     label5:
        virtualinvoke $r0.<com.jidesoft.dialog.ButtonPanel: void setSizeConstraint(int)>($b4);

        $i1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("OptionPane.buttonPadding");

        if $i1 != 0 goto label6;

        $i5 = 6;

        goto label7;

     label6:
        $i5 = $i1;

     label7:
        virtualinvoke $r0.<com.jidesoft.dialog.ButtonPanel: void setButtonGap(int)>($i5);

        $r3 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.lang.Object[] getButtons()>();

        $i2 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int getInitialValueIndex()>();

        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void addButtonComponents(java.awt.Container,java.lang.Object[],int)>($r0, $r3, $i2);

        return $r0;
    }

    protected void addButtonComponents(java.awt.Container, java.lang.Object[], int)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        javax.swing.Icon $r24;
        java.awt.Component $r7, $r8, r26;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory $r25;
        java.lang.Object[] r0;
        java.awt.event.ActionListener $r6;
        long $l5;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI$2 $r10;
        int $i0, i1, i2, i3, $i4;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI$3 $r9;
        java.lang.String $r3, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r28, $r29, $r30, $r31;
        java.awt.Container r5;
        javax.swing.JButton $r2, $r23, r27, r32;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r4;
        java.lang.Object r1;

        r4 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        r5 := @parameter0: java.awt.Container;

        r0 := @parameter1: java.lang.Object[];

        i2 := @parameter2: int;

        if r0 == null goto label15;

        $i0 = lengthof r0;

        if $i0 <= 0 goto label15;

        i1 = lengthof r0;

        i3 = 0;

     label01:
        if i3 >= i1 goto label15;

        r1 = r0[i3];

        $z0 = r1 instanceof java.awt.Component;

        if $z0 == 0 goto label02;

        r26 = (java.awt.Component) r1;

        virtualinvoke r5.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>(r26, "ALTERNATIVE");

        r4.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: boolean hasCustomComponents> = 1;

        goto label13;

     label02:
        $z1 = r1 instanceof com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        if $z1 == 0 goto label03;

        $r25 = (com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory) r1;

        r27 = virtualinvoke $r25.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: javax.swing.JButton createButton()>();

        goto label05;

     label03:
        $z2 = r1 instanceof javax.swing.Icon;

        if $z2 == 0 goto label04;

        $r23 = new javax.swing.JButton;

        $r24 = (javax.swing.Icon) r1;

        specialinvoke $r23.<javax.swing.JButton: void <init>(javax.swing.Icon)>($r24);

        r27 = $r23;

        goto label05;

     label04:
        $r2 = new javax.swing.JButton;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<javax.swing.JButton: void <init>(java.lang.String)>($r3);

        r27 = $r2;

     label05:
        $i4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("OptionPane.buttonClickThreshhold");

        $l5 = (long) $i4;

        virtualinvoke r27.<javax.swing.JButton: void setMultiClickThreshhold(long)>($l5);

        virtualinvoke r4.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void configureButton(javax.swing.JButton)>(r27);

        $r28 = "YES";

        $r29 = virtualinvoke r27.<javax.swing.JButton: java.lang.String getName()>();

        $z11 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z11 != 0 goto label06;

        $r11 = "NO";

        $r12 = virtualinvoke r27.<javax.swing.JButton: java.lang.String getName()>();

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z5 != 0 goto label06;

        $r13 = "OK";

        $r14 = virtualinvoke r27.<javax.swing.JButton: java.lang.String getName()>();

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z6 != 0 goto label06;

        $r15 = "CLOSE";

        $r16 = virtualinvoke r27.<javax.swing.JButton: java.lang.String getName()>();

        $z7 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z7 != 0 goto label06;

        $r17 = "FINISH";

        $r18 = virtualinvoke r27.<javax.swing.JButton: java.lang.String getName()>();

        $z8 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z8 == 0 goto label07;

     label06:
        virtualinvoke r5.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>(r27, "AFFIRMATIVE");

        goto label10;

     label07:
        $r19 = "CANCEL";

        $r20 = virtualinvoke r27.<javax.swing.JButton: java.lang.String getName()>();

        $z9 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z9 == 0 goto label08;

        virtualinvoke r5.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>(r27, "CANCEL");

        goto label10;

     label08:
        $r21 = "HELP";

        $r22 = virtualinvoke r27.<javax.swing.JButton: java.lang.String getName()>();

        $z10 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z10 == 0 goto label09;

        virtualinvoke r5.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>(r27, "HELP");

        goto label10;

     label09:
        virtualinvoke r5.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>(r27, "ALTERNATIVE");

     label10:
        $r30 = "DETAILS";

        $r31 = virtualinvoke r27.<javax.swing.JButton: java.lang.String getName()>();

        $z12 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z12 == 0 goto label11;

        $r10 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$2;

        specialinvoke $r10.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$2: void <init>(com.jidesoft.plaf.basic.BasicJideOptionPaneUI)>(r4);

        virtualinvoke r27.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r10);

        $z4 = specialinvoke r4.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: boolean shouldDetailsButtonVisible()>();

        virtualinvoke r27.<javax.swing.JButton: void setVisible(boolean)>($z4);

        r4.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JButton _detailsButton> = r27;

        goto label12;

     label11:
        $r6 = virtualinvoke r4.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.event.ActionListener createButtonActionListener(int)>(i3);

        if $r6 == null goto label12;

        virtualinvoke r27.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r6);

     label12:
        r26 = r27;

     label13:
        if i3 != i2 goto label14;

        r4.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component initialFocusComponent> = r26;

        $r7 = r4.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component initialFocusComponent>;

        $z3 = $r7 instanceof javax.swing.JButton;

        if $z3 == 0 goto label14;

        $r8 = r4.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component initialFocusComponent>;

        r32 = (javax.swing.JButton) $r8;

        $r9 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$3;

        specialinvoke $r9.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$3: void <init>(com.jidesoft.plaf.basic.BasicJideOptionPaneUI)>(r4);

        virtualinvoke r32.<javax.swing.JButton: void addAncestorListener(javax.swing.event.AncestorListener)>($r9);

     label14:
        i3 = i3 + 1;

        goto label01;

     label15:
        return;
    }

    private void toggleDetailsArea()
    {
        java.util.Locale $r2;
        com.jidesoft.dialog.JideOptionPane $r12, $r15, $r23, $r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.ResourceBundle $r3;
        java.awt.Container $r4, $r5, $r16;
        java.lang.String $r10, $r13, $r21, $r24, $r27, $r28;
        javax.swing.JButton $r7, $r9, $r18, $r20;
        char $c0, $c1;
        javax.swing.JOptionPane $r1, $r6, $r8, $r11, $r14, $r17, $r19, $r22, $r25;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r2 = virtualinvoke $r1.<javax.swing.JOptionPane: java.util.Locale getLocale()>();

        $r3 = staticinvoke <com.jidesoft.dialog.ButtonResources: java.util.ResourceBundle getResourceBundle(java.util.Locale)>($r2);

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _detailsArea>;

        $z0 = virtualinvoke $r4.<java.awt.Container: boolean isVisible()>();

        if $z0 == 0 goto label05;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void setDetailsVisible(boolean)>(0);

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _detailsArea>;

        virtualinvoke $r16.<java.awt.Container: void setVisible(boolean)>(0);

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JButton _detailsButton>;

        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z3 = $r17 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z3 == 0 goto label01;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r26 = (com.jidesoft.dialog.JideOptionPane) $r25;

        $r27 = virtualinvoke $r26.<com.jidesoft.dialog.JideOptionPane: java.lang.String getResourceString(java.lang.String)>("Button.showDetails");

        goto label02;

     label01:
        $r27 = virtualinvoke $r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Button.showDetails");

     label02:
        virtualinvoke $r18.<javax.swing.JButton: void setText(java.lang.String)>($r27);

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JButton _detailsButton>;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z4 = $r19 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z4 == 0 goto label03;

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r23 = (com.jidesoft.dialog.JideOptionPane) $r22;

        $r24 = virtualinvoke $r23.<com.jidesoft.dialog.JideOptionPane: java.lang.String getResourceString(java.lang.String)>("Button.showDetails.mnemonic");

        $c0 = virtualinvoke $r24.<java.lang.String: char charAt(int)>(0);

        goto label04;

     label03:
        $r21 = virtualinvoke $r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Button.showDetails.mnemonic");

        $c0 = virtualinvoke $r21.<java.lang.String: char charAt(int)>(0);

     label04:
        virtualinvoke $r20.<javax.swing.JButton: void setMnemonic(char)>($c0);

        goto label10;

     label05:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void setDetailsVisible(boolean)>(1);

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _detailsArea>;

        virtualinvoke $r5.<java.awt.Container: void setVisible(boolean)>(1);

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JButton _detailsButton>;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z1 = $r6 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z1 == 0 goto label06;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r15 = (com.jidesoft.dialog.JideOptionPane) $r14;

        $r28 = virtualinvoke $r15.<com.jidesoft.dialog.JideOptionPane: java.lang.String getResourceString(java.lang.String)>("Button.hideDetails");

        goto label07;

     label06:
        $r28 = virtualinvoke $r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Button.hideDetails");

     label07:
        virtualinvoke $r7.<javax.swing.JButton: void setText(java.lang.String)>($r28);

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JButton _detailsButton>;

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z2 = $r8 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z2 == 0 goto label08;

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r12 = (com.jidesoft.dialog.JideOptionPane) $r11;

        $r13 = virtualinvoke $r12.<com.jidesoft.dialog.JideOptionPane: java.lang.String getResourceString(java.lang.String)>("Button.hideDetails.mnemonic");

        $c1 = virtualinvoke $r13.<java.lang.String: char charAt(int)>(0);

        goto label09;

     label08:
        $r10 = virtualinvoke $r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Button.hideDetails.mnemonic");

        $c1 = virtualinvoke $r10.<java.lang.String: char charAt(int)>(0);

     label09:
        virtualinvoke $r9.<javax.swing.JButton: void setMnemonic(char)>($c1);

     label10:
        return;
    }

    protected java.lang.Object[] getButtons()
    {
        java.lang.Object[] $r3, $r4, $r55;
        java.util.ResourceBundle $r14;
        java.lang.String $r9, $r17, $r20, $r24, $r28, $r32, $r36, $r40, $r44, $r48, $r54;
        java.util.Locale $r7, $r13;
        com.jidesoft.dialog.JideOptionPane $r19, $r22;
        boolean $z0, $z1;
        javax.swing.Icon $r11, $r26, $r30, $r34, $r38, $r42, $r46, $r50;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory[] r51, $r52;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        char $c9;
        javax.swing.JOptionPane $r1, $r2, $r5, $r6, $r12, $r15, $r16, $r18, $r21;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        java.lang.Object $r10, $r25, $r29, $r33, $r37, $r41, $r45, $r49;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        if $r1 == null goto label11;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r3 = virtualinvoke $r2.<javax.swing.JOptionPane: java.lang.Object[] getOptions()>();

        if $r3 != null goto label10;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $i0 = virtualinvoke $r5.<javax.swing.JOptionPane: int getOptionType()>();

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r7 = virtualinvoke $r6.<javax.swing.JOptionPane: java.util.Locale getLocale()>();

        if $i0 != 0 goto label01;

        r51 = newarray (com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory)[2];

        $r56 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r44 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.String getString(java.lang.Object,java.util.Locale)>("OptionPane.yesButtonText", $r7);

        $i7 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int getMnemonic(java.lang.String,java.util.Locale)>("OptionPane.yesButtonMnemonic", $r7);

        $r45 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.yesIcon");

        $r46 = (javax.swing.Icon) $r45;

        specialinvoke $r56.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("YES", $r44, $i7, $r46);

        r51[0] = $r56;

        $r57 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r48 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.String getString(java.lang.Object,java.util.Locale)>("OptionPane.noButtonText", $r7);

        $i8 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int getMnemonic(java.lang.String,java.util.Locale)>("OptionPane.noButtonMnemonic", $r7);

        $r49 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.noIcon");

        $r50 = (javax.swing.Icon) $r49;

        specialinvoke $r57.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("NO", $r48, $i8, $r50);

        r51[1] = $r57;

        goto label09;

     label01:
        if $i0 != 1 goto label02;

        r51 = newarray (com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory)[3];

        $r58 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r32 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.String getString(java.lang.Object,java.util.Locale)>("OptionPane.yesButtonText", $r7);

        $i4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int getMnemonic(java.lang.String,java.util.Locale)>("OptionPane.yesButtonMnemonic", $r7);

        $r33 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.yesIcon");

        $r34 = (javax.swing.Icon) $r33;

        specialinvoke $r58.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("YES", $r32, $i4, $r34);

        r51[0] = $r58;

        $r59 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r36 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.String getString(java.lang.Object,java.util.Locale)>("OptionPane.noButtonText", $r7);

        $i5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int getMnemonic(java.lang.String,java.util.Locale)>("OptionPane.noButtonMnemonic", $r7);

        $r37 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.noIcon");

        $r38 = (javax.swing.Icon) $r37;

        specialinvoke $r59.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("NO", $r36, $i5, $r38);

        r51[1] = $r59;

        $r60 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r40 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.String getString(java.lang.Object,java.util.Locale)>("OptionPane.cancelButtonText", $r7);

        $i6 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int getMnemonic(java.lang.String,java.util.Locale)>("OptionPane.cancelButtonMnemonic", $r7);

        $r41 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.cancelIcon");

        $r42 = (javax.swing.Icon) $r41;

        specialinvoke $r60.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("CANCEL", $r40, $i6, $r42);

        r51[2] = $r60;

        goto label09;

     label02:
        if $i0 != 2 goto label03;

        r51 = newarray (com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory)[2];

        $r61 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r24 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.String getOKString(java.util.Locale)>($r7);

        $i2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int getMnemonic(java.lang.String,java.util.Locale)>("OptionPane.okButtonMnemonic", $r7);

        $r25 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.okIcon");

        $r26 = (javax.swing.Icon) $r25;

        specialinvoke $r61.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("OK", $r24, $i2, $r26);

        r51[0] = $r61;

        $r62 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r28 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.String getCancelString(java.util.Locale)>($r7);

        $i3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int getMnemonic(java.lang.String,java.util.Locale)>("OptionPane.cancelButtonMnemonic", $r7);

        $r29 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.cancelIcon");

        $r30 = (javax.swing.Icon) $r29;

        specialinvoke $r62.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("CANCEL", $r28, $i3, $r30);

        r51[1] = $r62;

        goto label09;

     label03:
        if $i0 != 3 goto label08;

        r51 = newarray (com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory)[1];

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r13 = virtualinvoke $r12.<javax.swing.JOptionPane: java.util.Locale getLocale()>();

        $r14 = staticinvoke <com.jidesoft.dialog.ButtonResources: java.util.ResourceBundle getResourceBundle(java.util.Locale)>($r13);

        $r52 = r51;

        $r63 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z0 = $r15 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z0 == 0 goto label04;

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r22 = (com.jidesoft.dialog.JideOptionPane) $r21;

        $r54 = virtualinvoke $r22.<com.jidesoft.dialog.JideOptionPane: java.lang.String getResourceString(java.lang.String)>("Button.close");

        goto label05;

     label04:
        $r54 = virtualinvoke $r14.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Button.close");

     label05:
        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z1 = $r16 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z1 == 0 goto label06;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r19 = (com.jidesoft.dialog.JideOptionPane) $r18;

        $r20 = virtualinvoke $r19.<com.jidesoft.dialog.JideOptionPane: java.lang.String getResourceString(java.lang.String)>("Button.close.mnemonic");

        $c9 = virtualinvoke $r20.<java.lang.String: char charAt(int)>(0);

        goto label07;

     label06:
        $r17 = virtualinvoke $r14.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Button.close.mnemonic");

        $c9 = virtualinvoke $r17.<java.lang.String: char charAt(int)>(0);

     label07:
        $i10 = (int) $c9;

        specialinvoke $r63.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("CLOSE", $r54, $i10, null);

        $r52[0] = $r63;

        goto label09;

     label08:
        r51 = newarray (com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory)[1];

        $r64 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r9 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.String getOKString(java.util.Locale)>($r7);

        $i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int getMnemonic(java.lang.String,java.util.Locale)>("OptionPane.okButtonMnemonic", $r7);

        $r10 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.okIcon");

        $r11 = (javax.swing.Icon) $r10;

        specialinvoke $r64.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("OK", $r9, $i1, $r11);

        r51[0] = $r64;

     label09:
        $r55 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.lang.Object[] addDetailsButton(java.lang.Object[],boolean)>(r51, 1);

        return $r55;

     label10:
        $r4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.lang.Object[] addDetailsButton(java.lang.Object[],boolean)>($r3, 1);

        return $r4;

     label11:
        return null;
    }

    protected java.lang.Object[] addDetailsButton(java.lang.Object[], boolean)
    {
        java.util.Locale $r4;
        com.jidesoft.dialog.JideOptionPane $r10, $r13, $r18, $r21;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory $r26, $r27;
        java.lang.Object[] r0, r1;
        java.util.ResourceBundle $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i10;
        java.lang.String $r8, $r11, $r16, $r19, $r23, $r25;
        char $c6, $c8;
        javax.swing.JOptionPane $r3, $r6, $r7, $r9, $r12, $r14, $r15, $r17, $r20;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r2;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        r0 := @parameter0: java.lang.Object[];

        z0 := @parameter1: boolean;

        if z0 == 0 goto label11;

        $i0 = lengthof r0;

        $i1 = $i0 + 1;

        r1 = newarray (java.lang.Object)[$i1];

        $i2 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i2);

        $r3 = r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r4 = virtualinvoke $r3.<javax.swing.JOptionPane: java.util.Locale getLocale()>();

        $r5 = staticinvoke <com.jidesoft.dialog.ButtonResources: java.util.ResourceBundle getResourceBundle(java.util.Locale)>($r4);

        $z1 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: boolean isDetailsVisible()>();

        if $z1 == 0 goto label05;

        $i4 = lengthof r1;

        $i5 = $i4 - 1;

        $r26 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r14 = r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z4 = $r14 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z4 == 0 goto label01;

        $r20 = r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r21 = (com.jidesoft.dialog.JideOptionPane) $r20;

        $r23 = virtualinvoke $r21.<com.jidesoft.dialog.JideOptionPane: java.lang.String getResourceString(java.lang.String)>("Button.hideDetails");

        goto label02;

     label01:
        $r23 = virtualinvoke $r5.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Button.hideDetails");

     label02:
        $r15 = r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z5 = $r15 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z5 == 0 goto label03;

        $r17 = r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r18 = (com.jidesoft.dialog.JideOptionPane) $r17;

        $r19 = virtualinvoke $r18.<com.jidesoft.dialog.JideOptionPane: java.lang.String getResourceString(java.lang.String)>("Button.hideDetails.mnemonic");

        $c6 = virtualinvoke $r19.<java.lang.String: char charAt(int)>(0);

        goto label04;

     label03:
        $r16 = virtualinvoke $r5.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Button.hideDetails.mnemonic");

        $c6 = virtualinvoke $r16.<java.lang.String: char charAt(int)>(0);

     label04:
        $i9 = (int) $c6;

        specialinvoke $r26.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("DETAILS", $r23, $i9, null);

        r1[$i5] = $r26;

        goto label10;

     label05:
        $i3 = lengthof r1;

        $i7 = $i3 - 1;

        $r27 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory;

        $r6 = r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z2 = $r6 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z2 == 0 goto label06;

        $r12 = r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r13 = (com.jidesoft.dialog.JideOptionPane) $r12;

        $r25 = virtualinvoke $r13.<com.jidesoft.dialog.JideOptionPane: java.lang.String getResourceString(java.lang.String)>("Button.showDetails");

        goto label07;

     label06:
        $r25 = virtualinvoke $r5.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Button.showDetails");

     label07:
        $r7 = r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z3 = $r7 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z3 == 0 goto label08;

        $r9 = r2.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r10 = (com.jidesoft.dialog.JideOptionPane) $r9;

        $r11 = virtualinvoke $r10.<com.jidesoft.dialog.JideOptionPane: java.lang.String getResourceString(java.lang.String)>("Button.showDetails.mnemonic");

        $c8 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(0);

        goto label09;

     label08:
        $r8 = virtualinvoke $r5.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Button.showDetails.mnemonic");

        $c8 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(0);

     label09:
        $i10 = (int) $c8;

        specialinvoke $r27.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$ButtonFactory: void <init>(java.lang.String,java.lang.String,int,javax.swing.Icon)>("DETAILS", $r25, $i10, null);

        r1[$i7] = $r27;

     label10:
        return r1;

     label11:
        return r0;
    }

    private boolean shouldDetailsButtonVisible()
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        java.lang.Object $r4;
        javax.swing.JOptionPane $r1, $r2;
        com.jidesoft.dialog.JideOptionPane $r3;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z0 = $r1 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r3 = (com.jidesoft.dialog.JideOptionPane) $r2;

        $r4 = virtualinvoke $r3.<com.jidesoft.dialog.JideOptionPane: java.lang.Object getDetails()>();

        if $r4 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected void configureButton(javax.swing.JButton)
    {
        javax.swing.JButton r2;
        java.awt.Font r1;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r3;
        java.lang.Object $r0;

        r3 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        r2 := @parameter0: javax.swing.JButton;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.buttonFont");

        r1 = (java.awt.Font) $r0;

        if r1 == null goto label1;

        virtualinvoke r2.<javax.swing.JButton: void setFont(java.awt.Font)>(r1);

     label1:
        return;
    }

    protected int getMnemonic(java.lang.String, java.util.Locale)
    {
        java.util.Locale r1;
        int $i0;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r5;
        java.lang.Object $r2;
        java.lang.NumberFormatException $r4;
        java.lang.String r0, r3;

        r5 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        r3 = (java.lang.String) $r2;

        if r3 != null goto label1;

        return 0;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected void addIcon(java.awt.Container)
    {
        javax.swing.JLabel $r2;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        javax.swing.Icon $r1;
        java.awt.Container r3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        r3 := @parameter0: java.awt.Container;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.Icon getIcon()>();

        if $r1 == null goto label1;

        $r2 = new javax.swing.JLabel;

        specialinvoke $r2.<javax.swing.JLabel: void <init>(javax.swing.Icon)>($r1);

        virtualinvoke $r2.<javax.swing.JLabel: void setName(java.lang.String)>("OptionPane.iconLabel");

        virtualinvoke r3.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r2, "Before");

     label1:
        return;
    }

    protected java.awt.Container createBannerArea()
    {
        javax.swing.JLabel $r3;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI$4 $r0;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r1;
        javax.swing.Icon $r4;
        java.awt.BorderLayout $r2;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r0 = new com.jidesoft.plaf.basic.BasicJideOptionPaneUI$4;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI$4: void <init>(com.jidesoft.plaf.basic.BasicJideOptionPaneUI)>(r1);

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void customizeBannerArea(com.jidesoft.swing.PaintPanel)>($r0);

        $r2 = new java.awt.BorderLayout;

        specialinvoke $r2.<java.awt.BorderLayout: void <init>(int,int)>(10, 10);

        virtualinvoke $r0.<com.jidesoft.swing.PaintPanel: void setLayout(java.awt.LayoutManager)>($r2);

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void addIcon(java.awt.Container)>($r0);

        specialinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void updateTitleComponent(java.awt.Container)>($r0);

        $r3 = new javax.swing.JLabel;

        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("OptionPane.bannerIcon");

        specialinvoke $r3.<javax.swing.JLabel: void <init>(javax.swing.Icon)>($r4);

        virtualinvoke $r0.<com.jidesoft.swing.PaintPanel: void add(java.awt.Component,java.lang.Object)>($r3, "After");

        return $r0;
    }

    protected void customizeBannerArea(com.jidesoft.swing.PaintPanel)
    {
        java.awt.Color $r2, $r3, $r13, $r14, $r15, $r16, $r17, $r18;
        javax.swing.border.Border $r19, $r20;
        com.jidesoft.plaf.basic.ThemePainter $r7, $r8, $r9, $r10, $r11, $r12;
        boolean z0, $z1, $z2;
        java.awt.Paint r1;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r6;
        java.lang.Object $r0, $r4;
        com.jidesoft.swing.PaintPanel r5;

        r6 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        r5 := @parameter0: com.jidesoft.swing.PaintPanel;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.bannerBackgroundPaint");

        r1 = (java.awt.Paint) $r0;

        if r1 == null goto label01;

        virtualinvoke r5.<com.jidesoft.swing.PaintPanel: void setBackgroundPaint(java.awt.Paint)>(r1);

        goto label19;

     label01:
        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("OptionPane.bannerBackgroundDk");

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("OptionPane.bannerBackgroundLt");

        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("OptionPane.bannerBackgroundDirection");

        if $r4 == null goto label02;

        $z1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("OptionPane.bannerBackgroundDirection");

        if $z1 == 0 goto label03;

     label02:
        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

        if $r2 != null goto label09;

        if $r3 == null goto label09;

        if $r3 == null goto label05;

        $r13 = $r3;

        goto label06;

     label05:
        $r11 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r13 = interfaceinvoke $r11.<com.jidesoft.plaf.basic.ThemePainter: java.awt.Color getOptionPaneBannerLt()>();

     label06:
        if $r3 == null goto label07;

        $r14 = $r3;

        goto label08;

     label07:
        $r12 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r14 = interfaceinvoke $r12.<com.jidesoft.plaf.basic.ThemePainter: java.awt.Color getOptionPaneBannerDk()>();

     label08:
        virtualinvoke r5.<com.jidesoft.swing.PaintPanel: void setGradientPaint(java.awt.Color,java.awt.Color,boolean)>($r13, $r14, z0);

        goto label19;

     label09:
        if $r2 == null goto label14;

        if $r3 != null goto label14;

        if $r2 == null goto label10;

        $r15 = $r2;

        goto label11;

     label10:
        $r9 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r15 = interfaceinvoke $r9.<com.jidesoft.plaf.basic.ThemePainter: java.awt.Color getOptionPaneBannerLt()>();

     label11:
        if $r2 == null goto label12;

        $r16 = $r2;

        goto label13;

     label12:
        $r10 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r16 = interfaceinvoke $r10.<com.jidesoft.plaf.basic.ThemePainter: java.awt.Color getOptionPaneBannerDk()>();

     label13:
        virtualinvoke r5.<com.jidesoft.swing.PaintPanel: void setGradientPaint(java.awt.Color,java.awt.Color,boolean)>($r15, $r16, z0);

        goto label19;

     label14:
        if $r2 == null goto label19;

        if $r3 == null goto label19;

        if $r2 == null goto label15;

        $r17 = $r2;

        goto label16;

     label15:
        $r7 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r17 = interfaceinvoke $r7.<com.jidesoft.plaf.basic.ThemePainter: java.awt.Color getOptionPaneBannerLt()>();

     label16:
        if $r3 == null goto label17;

        $r18 = $r3;

        goto label18;

     label17:
        $r8 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r18 = interfaceinvoke $r8.<com.jidesoft.plaf.basic.ThemePainter: java.awt.Color getOptionPaneBannerDk()>();

     label18:
        virtualinvoke r5.<com.jidesoft.swing.PaintPanel: void setGradientPaint(java.awt.Color,java.awt.Color,boolean)>($r17, $r18, z0);

     label19:
        $r19 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.border.Border getBorder(java.lang.Object)>("OptionPane.bannerBorder");

        if $r19 == null goto label20;

        $r20 = $r19;

        goto label21;

     label20:
        $r20 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 10, 0, 0);

     label21:
        virtualinvoke r5.<com.jidesoft.swing.PaintPanel: void setBorder(javax.swing.border.Border)>($r20);

        return;
    }

    private void updateTitleComponent(java.awt.Container)
    {
        java.awt.Color $r21, $r27;
        com.jidesoft.plaf.basic.ThemePainter $r22;
        com.jidesoft.dialog.JideOptionPane $r24;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.Font $r19, $r20;
        java.awt.Component $r2, $r5, $r6, $r15, $r16, $r25, $r28;
        float $f0;
        java.lang.String[] $r12;
        int $i0, i1, $i2, $i3, i4;
        java.awt.Container r0;
        java.lang.String $r7, $r9, $r10, $r11, r17;
        javax.swing.BoxLayout $r14;
        com.jidesoft.swing.NullPanel $r13;
        javax.swing.JOptionPane $r3, $r23;
        javax.swing.JLabel $r8, $r18;
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r1;
        java.lang.Object r4, $r26;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        r0 := @parameter0: java.awt.Container;

        if r0 != null goto label01;

        return;

     label01:
        $r2 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component _titleComponent>;

        if $r2 == null goto label02;

        $r25 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component _titleComponent>;

        virtualinvoke r0.<java.awt.Container: void remove(java.awt.Component)>($r25);

        r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component _titleComponent> = null;

     label02:
        $r3 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $z0 = $r3 instanceof com.jidesoft.dialog.JideOptionPane;

        if $z0 == 0 goto label03;

        $r23 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: javax.swing.JOptionPane optionPane>;

        $r24 = (com.jidesoft.dialog.JideOptionPane) $r23;

        $r26 = virtualinvoke $r24.<com.jidesoft.dialog.JideOptionPane: java.lang.Object getTitle()>();

        goto label04;

     label03:
        $r26 = null;

     label04:
        r4 = $r26;

        $z1 = $r26 instanceof java.lang.String;

        if $z1 == 0 goto label11;

        $r7 = (java.lang.String) $r26;

        $z3 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("<html>");

        if $z3 != 0 goto label05;

        $r10 = (java.lang.String) $r26;

        $z4 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("<HTML>");

        if $z4 == 0 goto label06;

     label05:
        $r8 = new javax.swing.JLabel;

        $r9 = (java.lang.String) r4;

        specialinvoke $r8.<javax.swing.JLabel: void <init>(java.lang.String)>($r9);

        r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component _titleComponent> = $r8;

        goto label12;

     label06:
        $r11 = (java.lang.String) $r26;

        $i0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("OptionPane.bannerMaxCharsPerLine");

        $r12 = staticinvoke <com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.lang.String[] fitInWidth(java.lang.String,int)>($r11, $i0);

        $r13 = new com.jidesoft.swing.NullPanel;

        specialinvoke $r13.<com.jidesoft.swing.NullPanel: void <init>()>();

        $r14 = new javax.swing.BoxLayout;

        specialinvoke $r14.<javax.swing.BoxLayout: void <init>(java.awt.Container,int)>($r13, 1);

        virtualinvoke $r13.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r14);

        virtualinvoke $r13.<javax.swing.JPanel: void setOpaque(boolean)>(0);

        $r15 = staticinvoke <javax.swing.Box: java.awt.Component createGlue()>();

        virtualinvoke $r13.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r15);

        i1 = lengthof $r12;

        i4 = 0;

     label07:
        if i4 >= i1 goto label10;

        r17 = $r12[i4];

        $r18 = new javax.swing.JLabel;

        specialinvoke $r18.<javax.swing.JLabel: void <init>(java.lang.String)>(r17);

        $r19 = virtualinvoke $r18.<javax.swing.JLabel: java.awt.Font getFont()>();

        $i2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("OptionPane.bannerFontStyle");

        $i3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("OptionPane.bannerFontSize");

        $f0 = (float) $i3;

        $r20 = virtualinvoke $r19.<java.awt.Font: java.awt.Font deriveFont(int,float)>($i2, $f0);

        virtualinvoke $r18.<javax.swing.JLabel: void setFont(java.awt.Font)>($r20);

        $r21 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("OptionPane.bannerForeground");

        if $r21 == null goto label08;

        $r27 = $r21;

        goto label09;

     label08:
        $r22 = virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r27 = interfaceinvoke $r22.<com.jidesoft.plaf.basic.ThemePainter: java.awt.Color getOptionPaneBannerForeground()>();

     label09:
        virtualinvoke $r18.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r27);

        virtualinvoke $r13.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r18);

        i4 = i4 + 1;

        goto label07;

     label10:
        $r16 = staticinvoke <javax.swing.Box: java.awt.Component createGlue()>();

        virtualinvoke $r13.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r16);

        r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component _titleComponent> = $r13;

        goto label12;

     label11:
        $z2 = $r26 instanceof java.awt.Component;

        if $z2 == 0 goto label12;

        $r6 = (java.awt.Component) $r26;

        r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component _titleComponent> = $r6;

     label12:
        $r28 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component _titleComponent>;

        if $r28 == null goto label13;

        $r5 = r1.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Component _titleComponent>;

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r5, "Center");

     label13:
        return;
    }

    private static java.lang.String[] fitInWidth(java.lang.String, int)
    {
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r12, $r14, $r17, $r19, $r25, $r26;
        java.lang.Object[] $r5;
        java.lang.String[] $r4, $r6, $r7;
        java.util.ArrayList $r24;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, i10, i11, $i13, $i15, $i17;
        java.lang.String $r0, $r1, $r2, $r9, $r10, $r13, $r15, $r18, r20, r21, $r22, r23;
        char $c6, c12;
        java.lang.Object $r8;

        r20 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r20 != null goto label01;

        r20 = "";

     label01:
        $r0 = staticinvoke <com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.lang.String blankString(int,byte)>(i0, 32);

        $r1 = staticinvoke <com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.lang.String replaceOccurrences(java.lang.String,java.lang.String,java.lang.String)>(r20, "\n", $r0);

        $r2 = staticinvoke <com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.lang.String replaceOccurrences(java.lang.String,java.lang.String,java.lang.String)>($r1, "\t", "    ");

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r21 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

     label02:
        $i9 = virtualinvoke r21.<java.lang.String: int length()>();

        if $i9 <= i0 goto label08;

        i10 = i0;

        $c6 = virtualinvoke r21.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c6);

        if $z0 == 0 goto label06;

        $i15 = (int) -1;

        i11 = i0 + $i15;

        c12 = virtualinvoke r21.<java.lang.String: char charAt(int)>(i11);

     label03:
        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c12);

        if $z1 == 0 goto label04;

        if i11 <= 0 goto label04;

        $i17 = (int) -1;

        i11 = i11 + $i17;

        c12 = virtualinvoke r21.<java.lang.String: char charAt(int)>(i11);

        goto label03;

     label04:
        if i11 != 0 goto label05;

        $z2 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c12);

        if $z2 == 0 goto label05;

        i10 = i0;

        goto label06;

     label05:
        i10 = i11 + 1;

     label06:
        $r22 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(0, i10);

        r23 = $r22;

        $i13 = virtualinvoke $r22.<java.lang.String: int length()>();

        if $i13 >= i0 goto label07;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $i7 = virtualinvoke $r22.<java.lang.String: int length()>();

        $i8 = i0 - $i7;

        $r18 = staticinvoke <com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.lang.String blankString(int,byte)>($i8, 32);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        virtualinvoke $r24.<java.util.ArrayList: boolean add(java.lang.Object)>(r23);

        $r15 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int)>(i10);

        r21 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        goto label02;

     label08:
        $i1 = virtualinvoke r21.<java.lang.String: int length()>();

        if $i1 >= i0 goto label09;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $i4 = virtualinvoke r21.<java.lang.String: int length()>();

        $i5 = i0 - $i4;

        $r13 = staticinvoke <com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.lang.String blankString(int,byte)>($i5, 32);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r21 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        virtualinvoke $r24.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

        $i2 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        if $i2 != 1 goto label10;

        $r7 = newarray (java.lang.String)[1];

        $r8 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r9 = (java.lang.String) $r8;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $r7[0] = $r10;

        return $r7;

     label10:
        $i3 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        $r4 = newarray (java.lang.String)[$i3];

        $r5 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        return $r6;
    }

    private static java.lang.String blankString(int, byte)
    {
        byte[] r0;
        byte b1;
        int i0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        r0 = newarray (byte)[i0];

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r0, b1);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>(r0);

        return $r1;
    }

    private static java.lang.String replaceOccurrences(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r1, r2, r3, $r4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(r1);

        i4 = 0;

     label1:
        $i0 = staticinvoke <com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int indexOf(java.lang.StringBuffer,java.lang.String,int)>($r0, r2, i4);

        if $i0 >= 0 goto label2;

        goto label3;

     label2:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>($i0, $i2, r3);

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        i4 = $i0 + $i3;

        goto label1;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private static int indexOf(char[], int, int, char[], int, int, int)
    {
        int i0, i1, i2, i4, $i5, i6, $i7, i8, $i9, $i10, $i11, i15, $i16, i17, i18, i19, $i21, $i22, $i23, $i25, $i26, $i27;
        char c3, $c12, $c13, $c14;
        char[] r0, r1;

        r1 := @parameter0: char[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        r0 := @parameter3: char[];

        i2 := @parameter4: int;

        i1 := @parameter5: int;

        i15 := @parameter6: int;

        if i15 < i0 goto label03;

        if i1 != 0 goto label01;

        $i16 = i0;

        goto label02;

     label01:
        $i21 = (int) -1;

        $i16 = $i21;

     label02:
        return $i16;

     label03:
        if i15 >= 0 goto label04;

        i15 = 0;

     label04:
        if i1 != 0 goto label05;

        return i15;

     label05:
        c3 = r0[i2];

        i17 = i4 + i15;

        $i5 = i0 - i1;

        i6 = i4 + $i5;

     label06:
        if i17 > i6 goto label07;

        $c14 = r1[i17];

        $i22 = (int) $c14;

        $i23 = (int) c3;

        if $i22 == $i23 goto label07;

        i17 = i17 + 1;

        goto label06;

     label07:
        if i17 <= i6 goto label08;

        $i25 = (int) -1;

        return $i25;

     label08:
        i18 = i17 + 1;

        $i7 = i18 + i1;

        i8 = $i7 - 1;

        i19 = i2 + 1;

     label09:
        if i18 >= i8 goto label10;

        $i10 = i18;

        i18 = i18 + 1;

        $c13 = r1[$i10];

        $i11 = i19;

        i19 = i19 + 1;

        $c12 = r0[$i11];

        $i26 = (int) $c13;

        $i27 = (int) $c12;

        if $i26 == $i27 goto label09;

        i17 = i17 + 1;

        goto label06;

     label10:
        $i9 = i17 - i4;

        return $i9;
    }

    private static int indexOf(java.lang.StringBuffer, java.lang.String, int)
    {
        java.lang.Throwable $r4;
        java.lang.StringBuffer r0;
        int $i0, $i1, i2, $i3;
        char[] r1, $r3;
        java.lang.String r2;

        r0 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        r1 = newarray (char)[$i0];

        virtualinvoke r0.<java.lang.StringBuffer: void getChars(int,int,char[],int)>(0, $i0, r1, 0);

        $r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i3 = staticinvoke <com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int indexOf(char[],int,int,char[],int,int,int)>(r1, 0, $i0, $r3, 0, $i1, i2);

        exitmonitor r0;

     label2:
        return $i3;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.jidesoft.plaf.basic.ThemePainter getPainter()
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        com.jidesoft.plaf.basic.ThemePainter $r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: com.jidesoft.plaf.basic.ThemePainter _painter>;

        return $r1;
    }

    static java.awt.Container access$000(com.jidesoft.plaf.basic.BasicJideOptionPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        java.awt.Container $r1;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _buttonArea>;

        return $r1;
    }

    static java.awt.Container access$100(com.jidesoft.plaf.basic.BasicJideOptionPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        java.awt.Container $r1;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: java.awt.Container _bannerArea>;

        return $r1;
    }

    static void access$200(com.jidesoft.plaf.basic.BasicJideOptionPaneUI, java.awt.Container)
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        java.awt.Container r1;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        r1 := @parameter1: java.awt.Container;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void updateTitleComponent(java.awt.Container)>(r1);

        return;
    }

    static void access$300(com.jidesoft.plaf.basic.BasicJideOptionPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: void toggleDetailsArea()>();

        return;
    }

    static int access$400(com.jidesoft.plaf.basic.BasicJideOptionPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideOptionPaneUI r0;
        int $i0;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideOptionPaneUI;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideOptionPaneUI: int _detailsPreferredWidth>;

        return $i0;
    }
}
