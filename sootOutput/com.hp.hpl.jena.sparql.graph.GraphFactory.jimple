public class com.hp.hpl.jena.sparql.graph.GraphFactory extends java.lang.Object
{
    private static com.hp.hpl.jena.sparql.util.RefBoolean usePlainGraph;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.graph.GraphFactory r0;

        r0 := @this: com.hp.hpl.jena.sparql.graph.GraphFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.graph.Graph createGraphMem()
    {
        com.hp.hpl.jena.graph.Graph $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.graph.Factory: com.hp.hpl.jena.graph.Graph createGraphMem()>();

        return $r0;
    }

    public static com.hp.hpl.jena.graph.Graph createDefaultGraph()
    {
        com.hp.hpl.jena.sparql.util.RefBoolean $r0;
        com.hp.hpl.jena.graph.Graph $r1;
        boolean $z0;

        $r0 = <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.sparql.util.RefBoolean usePlainGraph>;

        $z0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.util.RefBoolean: boolean getValue()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.graph.Graph createPlainGraph()>();

        goto label2;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.graph.Graph createJenaDefaultGraph()>();

     label2:
        return $r1;
    }

    public static com.hp.hpl.jena.graph.Graph createJenaDefaultGraph()
    {
        com.hp.hpl.jena.graph.Graph $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.graph.Factory: com.hp.hpl.jena.graph.Graph createDefaultGraph()>();

        return $r0;
    }

    public static com.hp.hpl.jena.graph.Graph createPlainGraph()
    {
        com.hp.hpl.jena.sparql.graph.GraphMemPlain $r0;

        $r0 = new com.hp.hpl.jena.sparql.graph.GraphMemPlain;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.graph.GraphMemPlain: void <init>()>();

        return $r0;
    }

    public static com.hp.hpl.jena.graph.Graph sinkGraph()
    {
        com.hp.hpl.jena.sparql.util.graph.GraphSink $r0;

        $r0 = new com.hp.hpl.jena.sparql.util.graph.GraphSink;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.util.graph.GraphSink: void <init>()>();

        return $r0;
    }

    public static com.hp.hpl.jena.graph.Graph createDataBagGraph(org.apache.jena.atlas.data.ThresholdPolicy)
    {
        com.hp.hpl.jena.sparql.graph.GraphDistinctDataBag $r0;
        org.apache.jena.atlas.data.ThresholdPolicy r1;

        r1 := @parameter0: org.apache.jena.atlas.data.ThresholdPolicy;

        $r0 = new com.hp.hpl.jena.sparql.graph.GraphDistinctDataBag;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.graph.GraphDistinctDataBag: void <init>(org.apache.jena.atlas.data.ThresholdPolicy)>(r1);

        return $r0;
    }

    public static com.hp.hpl.jena.rdf.model.Model makeJenaDefaultModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        return $r0;
    }

    public static com.hp.hpl.jena.rdf.model.Model makeDefaultModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.graph.Graph $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.graph.Graph createDefaultGraph()>();

        $r1 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createModelForGraph(com.hp.hpl.jena.graph.Graph)>($r0);

        return $r1;
    }

    public static com.hp.hpl.jena.rdf.model.Model makePlainModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.graph.Graph $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.graph.Graph createPlainGraph()>();

        $r1 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createModelForGraph(com.hp.hpl.jena.graph.Graph)>($r0);

        return $r1;
    }

    public static com.hp.hpl.jena.rdf.model.Model makeDataBagModel(org.apache.jena.atlas.data.ThresholdPolicy)
    {
        com.hp.hpl.jena.rdf.model.Model $r2;
        org.apache.jena.atlas.data.ThresholdPolicy r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @parameter0: org.apache.jena.atlas.data.ThresholdPolicy;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.graph.Graph createDataBagGraph(org.apache.jena.atlas.data.ThresholdPolicy)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createModelForGraph(com.hp.hpl.jena.graph.Graph)>($r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.sparql.util.RefBoolean $r0;
        com.hp.hpl.jena.sparql.util.Symbol $r1;

        $r0 = new com.hp.hpl.jena.sparql.util.RefBoolean;

        $r1 = <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Symbol strictGraph>;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.util.RefBoolean: void <init>(com.hp.hpl.jena.sparql.util.Symbol)>($r1);

        <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.sparql.util.RefBoolean usePlainGraph> = $r0;

        return;
    }
}
