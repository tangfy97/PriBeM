public class thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels extends java.lang.Object implements thredds.cataloggen.DatasetEnhancer1$DatasetMetadataAdder
{
    private java.lang.String substitutionPattern;
    private java.lang.String duration;
    private java.util.regex.Pattern pattern;

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels r0;
        java.lang.String r1, r2, r3;
        java.util.regex.Pattern $r4;

        r0 := @this: thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels: java.lang.String substitutionPattern> = r1;

        r0.<thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels: java.lang.String duration> = r2;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r3);

        r0.<thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels: java.util.regex.Pattern pattern> = $r4;

        return;
    }

    public boolean addMetadata(thredds.catalog.InvDataset)
    {
        java.util.regex.Matcher $r4;
        java.lang.StringBuffer $r5;
        int $i0;
        java.lang.String $r3, $r6, $r10, $r12, $r18, $r21, $r24, $r26;
        java.text.ParseException $r14;
        thredds.catalog.InvDataset r1;
        boolean $z0;
        org.slf4j.Logger $r15;
        thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels r0;
        ucar.nc2.units.TimeDuration $r11;
        ucar.nc2.units.DateRange $r7;
        java.lang.StringBuilder $r16, $r17, $r19, $r20, $r22, $r23, $r25;
        java.util.regex.Pattern $r2;
        thredds.catalog.InvDatasetImpl $r9, $r13;
        ucar.nc2.units.DateType $r8;

        r0 := @this: thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels;

        r1 := @parameter0: thredds.catalog.InvDataset;

        $r2 = r0.<thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels: java.util.regex.Pattern pattern>;

        $r3 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels: java.lang.String substitutionPattern>;

        virtualinvoke $r4.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>($r5, $r6);

        $i0 = virtualinvoke $r4.<java.util.regex.Matcher: int start()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i0);

     label2:
        $r9 = (thredds.catalog.InvDatasetImpl) r1;

        $r7 = new ucar.nc2.units.DateRange;

        $r8 = new ucar.nc2.units.DateType;

        $r10 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<ucar.nc2.units.DateType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r10, null, null);

        $r11 = new ucar.nc2.units.TimeDuration;

        $r12 = r0.<thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels: java.lang.String duration>;

        specialinvoke $r11.<ucar.nc2.units.TimeDuration: void <init>(java.lang.String)>($r12);

        specialinvoke $r7.<ucar.nc2.units.DateRange: void <init>(ucar.nc2.units.DateType,ucar.nc2.units.DateType,ucar.nc2.units.TimeDuration,ucar.nc2.units.TimeDuration)>($r8, null, $r11, null);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setTimeCoverage(ucar.nc2.units.DateRange)>($r7);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r15 = staticinvoke <thredds.cataloggen.DatasetEnhancer1: org.slf4j.Logger access$000()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start time <");

        $r18 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> or duration <");

        $r21 = r0.<thredds.cataloggen.DatasetEnhancer1$AddTimeCoverageModels: java.lang.String duration>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not parsable: ");

        $r24 = virtualinvoke $r14.<java.text.ParseException: java.lang.String getMessage()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>($r26);

        return 0;

     label5:
        $r13 = (thredds.catalog.InvDatasetImpl) r1;

        virtualinvoke $r13.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        return 1;

        catch java.text.ParseException from label2 to label3 with label4;
    }
}
