public class org.sat4j.reader.AIGReader extends org.sat4j.reader.Reader
{
    private static final int FALSE;
    private static final int TRUE;
    private final org.sat4j.tools.GateTranslator solver;
    private int maxvarid;
    private int nbinputs;
    static final boolean $assertionsDisabled;

    void <init>(org.sat4j.specs.ISolver)
    {
        org.sat4j.reader.AIGReader r0;
        org.sat4j.tools.GateTranslator $r1;
        org.sat4j.specs.ISolver r2;

        r0 := @this: org.sat4j.reader.AIGReader;

        r2 := @parameter0: org.sat4j.specs.ISolver;

        specialinvoke r0.<org.sat4j.reader.Reader: void <init>()>();

        $r1 = new org.sat4j.tools.GateTranslator;

        specialinvoke $r1.<org.sat4j.tools.GateTranslator: void <init>(org.sat4j.specs.ISolver)>(r2);

        r0.<org.sat4j.reader.AIGReader: org.sat4j.tools.GateTranslator solver> = $r1;

        return;
    }

    public java.lang.String decode(int[])
    {
        byte $b3;
        org.sat4j.reader.AIGReader r1;
        int[] r3;
        java.lang.StringBuffer $r0;
        int $i0, $i1, i2;
        java.lang.String $r2;

        r1 := @this: org.sat4j.reader.AIGReader;

        r3 := @parameter0: int[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        $i0 = r1.<org.sat4j.reader.AIGReader: int nbinputs>;

        if i2 >= $i0 goto label4;

        $i1 = r3[i2];

        if $i1 <= 0 goto label2;

        $b3 = 1;

        goto label3;

     label2:
        $b3 = 0;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($b3);

        i2 = i2 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public void decode(int[], java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        byte $b3;
        org.sat4j.reader.AIGReader r0;
        int[] r2;
        int $i0, $i1, i2;

        r0 := @this: org.sat4j.reader.AIGReader;

        r2 := @parameter0: int[];

        r1 := @parameter1: java.io.PrintWriter;

        i2 = 0;

     label1:
        $i0 = r0.<org.sat4j.reader.AIGReader: int nbinputs>;

        if i2 >= $i0 goto label4;

        $i1 = r2[i2];

        if $i1 <= 0 goto label2;

        $b3 = 1;

        goto label3;

     label2:
        $b3 = 0;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($b3);

        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    int parseInt(java.io.InputStream, char) throws java.io.IOException, org.sat4j.reader.ParseFormatException
    {
        char c2;
        org.sat4j.reader.ParseFormatException $r4, $r5;
        org.sat4j.reader.AIGReader r3;
        int $i0, $i1, $i3, $i4, i5, $i6;
        java.io.InputStream r0;

        r3 := @this: org.sat4j.reader.AIGReader;

        r0 := @parameter0: java.io.InputStream;

        c2 := @parameter1: char;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if $i0 < 48 goto label1;

        if $i0 <= 57 goto label2;

     label1:
        $r4 = new org.sat4j.reader.ParseFormatException;

        specialinvoke $r4.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>("expected digit");

        throw $r4;

     label2:
        i5 = $i0 - 48;

     label3:
        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if $i1 < 48 goto label4;

        if $i1 > 57 goto label4;

        $i3 = 10 * i5;

        $i4 = $i3 + $i1;

        i5 = $i4 - 48;

        goto label3;

     label4:
        $i6 = (int) c2;

        if $i1 == $i6 goto label5;

        $r5 = new org.sat4j.reader.ParseFormatException;

        specialinvoke $r5.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>("unexpected character");

        throw $r5;

     label5:
        return i5;
    }

    public org.sat4j.specs.IProblem parseInstance(java.io.InputStream) throws org.sat4j.reader.ParseFormatException, org.sat4j.specs.ContradictionException, java.io.IOException
    {
        java.lang.AssertionError $r4;
        org.sat4j.reader.AIGReader r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean $z0;
        org.sat4j.tools.GateTranslator $r2, $r3, $r8;
        org.sat4j.reader.ParseFormatException $r5, $r6, $r7;
        java.io.InputStream r0;

        r1 := @this: org.sat4j.reader.AIGReader;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if $i0 != 97 goto label1;

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if $i1 != 105 goto label1;

        $i2 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if $i2 != 103 goto label1;

        $i3 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if $i3 == 32 goto label2;

     label1:
        $r7 = new org.sat4j.reader.ParseFormatException;

        specialinvoke $r7.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>("AIG format only!");

        throw $r7;

     label2:
        $i4 = virtualinvoke r1.<org.sat4j.reader.AIGReader: int parseInt(java.io.InputStream,char)>(r0, 32);

        r1.<org.sat4j.reader.AIGReader: int maxvarid> = $i4;

        $i5 = virtualinvoke r1.<org.sat4j.reader.AIGReader: int parseInt(java.io.InputStream,char)>(r0, 32);

        r1.<org.sat4j.reader.AIGReader: int nbinputs> = $i5;

        $i6 = virtualinvoke r1.<org.sat4j.reader.AIGReader: int parseInt(java.io.InputStream,char)>(r0, 32);

        if $i6 <= 0 goto label3;

        $r6 = new org.sat4j.reader.ParseFormatException;

        specialinvoke $r6.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>("CNF conversion cannot handle latches!");

        throw $r6;

     label3:
        $i7 = virtualinvoke r1.<org.sat4j.reader.AIGReader: int parseInt(java.io.InputStream,char)>(r0, 32);

        if $i7 <= 1 goto label4;

        $r5 = new org.sat4j.reader.ParseFormatException;

        specialinvoke $r5.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>("CNF conversion allowed for single output circuit only!");

        throw $r5;

     label4:
        $i8 = virtualinvoke r1.<org.sat4j.reader.AIGReader: int parseInt(java.io.InputStream,char)>(r0, 10);

        $r2 = r1.<org.sat4j.reader.AIGReader: org.sat4j.tools.GateTranslator solver>;

        $i9 = r1.<org.sat4j.reader.AIGReader: int maxvarid>;

        $i10 = $i9 + 1;

        virtualinvoke $r2.<org.sat4j.tools.GateTranslator: int newVar(int)>($i10);

        $r3 = r1.<org.sat4j.reader.AIGReader: org.sat4j.tools.GateTranslator solver>;

        $i11 = 3 * $i8;

        $i12 = $i11 + 2;

        virtualinvoke $r3.<org.sat4j.tools.GateTranslator: void setExpectedNumberOfClauses(int)>($i12);

        if $i7 <= 0 goto label6;

        $z0 = <org.sat4j.reader.AIGReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        if $i7 == 1 goto label5;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label5:
        $i13 = virtualinvoke r1.<org.sat4j.reader.AIGReader: int parseInt(java.io.InputStream,char)>(r0, 10);

        $i14 = r1.<org.sat4j.reader.AIGReader: int nbinputs>;

        $i15 = $i14 + 1;

        $i16 = 2 * $i15;

        specialinvoke r1.<org.sat4j.reader.AIGReader: void readAnd(int,int,java.io.InputStream,int)>($i8, $i13, r0, $i16);

     label6:
        $r8 = r1.<org.sat4j.reader.AIGReader: org.sat4j.tools.GateTranslator solver>;

        return $r8;
    }

    static int safeGet(java.io.InputStream) throws java.io.IOException, org.sat4j.reader.ParseFormatException
    {
        int $i0, $i2;
        org.sat4j.reader.ParseFormatException $r2;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $r2 = new org.sat4j.reader.ParseFormatException;

        specialinvoke $r2.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>("AIG Error, EOF met too early");

        throw $r2;

     label1:
        return $i0;
    }

    static int decode(java.io.InputStream) throws java.io.IOException, org.sat4j.reader.ParseFormatException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        java.lang.String $r5;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        i9 = 0;

        i10 = 0;

     label1:
        $i0 = staticinvoke <org.sat4j.reader.AIGReader: int safeGet(java.io.InputStream)>(r0);

        $i1 = $i0 & 128;

        if $i1 <= 0 goto label2;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=>");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $i7 = $i0 & 127;

        $i5 = i10;

        i10 = i10 + 1;

        $i6 = 7 * $i5;

        $i8 = $i7 << $i6;

        i9 = i9 | $i8;

        goto label1;

     label2:
        $i2 = 7 * i10;

        $i3 = $i0 << $i2;

        $i4 = i9 | $i3;

        return $i4;
    }

    private void readAnd(int, int, java.io.InputStream, int) throws org.sat4j.specs.ContradictionException, java.io.IOException, org.sat4j.reader.ParseFormatException
    {
        org.sat4j.reader.AIGReader r0;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, i8, i9, $i10, $i11, $i12, i13, i14;
        org.sat4j.tools.GateTranslator $r1, $r2, $r4;
        java.io.InputStream r3;

        r0 := @this: org.sat4j.reader.AIGReader;

        i1 := @parameter0: int;

        i4 := @parameter1: int;

        r3 := @parameter2: java.io.InputStream;

        i0 := @parameter3: int;

        i13 = i0;

        i14 = 0;

     label1:
        if i14 >= i1 goto label2;

        $i6 = staticinvoke <org.sat4j.reader.AIGReader: int decode(java.io.InputStream)>(r3);

        $i7 = staticinvoke <org.sat4j.reader.AIGReader: int decode(java.io.InputStream)>(r3);

        i8 = i13 - $i6;

        i9 = i8 - $i7;

        $r4 = r0.<org.sat4j.reader.AIGReader: org.sat4j.tools.GateTranslator solver>;

        $i10 = specialinvoke r0.<org.sat4j.reader.AIGReader: int toDimacs(int)>(i13);

        $i11 = specialinvoke r0.<org.sat4j.reader.AIGReader: int toDimacs(int)>(i8);

        $i12 = specialinvoke r0.<org.sat4j.reader.AIGReader: int toDimacs(int)>(i9);

        virtualinvoke $r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr[] and(int,int,int)>($i10, $i11, $i12);

        i13 = i13 + 2;

        i14 = i14 + 1;

        goto label1;

     label2:
        $r1 = r0.<org.sat4j.reader.AIGReader: org.sat4j.tools.GateTranslator solver>;

        $i2 = r0.<org.sat4j.reader.AIGReader: int maxvarid>;

        $i3 = $i2 + 1;

        virtualinvoke $r1.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr gateTrue(int)>($i3);

        $r2 = r0.<org.sat4j.reader.AIGReader: org.sat4j.tools.GateTranslator solver>;

        $i5 = specialinvoke r0.<org.sat4j.reader.AIGReader: int toDimacs(int)>(i4);

        virtualinvoke $r2.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr gateTrue(int)>($i5);

        return;
    }

    private int toDimacs(int)
    {
        org.sat4j.reader.AIGReader r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.sat4j.reader.AIGReader;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i6 = r0.<org.sat4j.reader.AIGReader: int maxvarid>;

        $i7 = $i6 + 1;

        $i8 = neg $i7;

        return $i8;

     label1:
        if i0 != 1 goto label2;

        $i4 = r0.<org.sat4j.reader.AIGReader: int maxvarid>;

        $i5 = $i4 + 1;

        return $i5;

     label2:
        i1 = i0 >> 1;

        $i2 = i0 & 1;

        if $i2 != 0 goto label3;

        return i1;

     label3:
        $i3 = neg i1;

        return $i3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.reader.AIGReader: int TRUE> = 1;

        <org.sat4j.reader.AIGReader: int FALSE> = 0;

        $r0 = class "Lorg/sat4j/reader/AIGReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.reader.AIGReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
