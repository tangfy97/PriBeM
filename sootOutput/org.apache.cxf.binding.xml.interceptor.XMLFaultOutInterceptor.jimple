public class org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor extends org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor
{
    private static final java.util.ResourceBundle BUNDLE;

    public void <init>()
    {
        org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor r0;

        r0 := @this: org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: void <init>(java.lang.String)>("marshal");

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor r0;

        r0 := @this: org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: void <init>(java.lang.String)>(r1);

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        java.lang.Throwable $r11;
        org.apache.cxf.binding.xml.XMLFault $r9;
        java.lang.Object[] $r19;
        org.apache.cxf.common.i18n.Message $r18;
        java.lang.Integer $r5;
        org.apache.cxf.interceptor.Fault r3, $r15, $r17;
        java.util.ResourceBundle $r20;
        javax.xml.stream.XMLStreamException $r16;
        org.w3c.dom.Node r22;
        int $i0;
        javax.xml.stream.XMLStreamWriter r8;
        java.lang.String $r4, $r10, $r21;
        boolean $z0;
        org.apache.cxf.message.Message r1;
        org.w3c.dom.Element $r12, $r13;
        java.lang.Object $r2, $r7, $r14;
        org.apache.cxf.helpers.NSStack $r6;
        org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor r0;

        r0 := @this: org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $z0 = virtualinvoke r0.<org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor: boolean mustPropogateException(org.apache.cxf.message.Message)>(r1);

        if $z0 == 0 goto label01;

        $r14 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        $r15 = (org.apache.cxf.interceptor.Fault) $r14;

        throw $r15;

     label01:
        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        r3 = (org.apache.cxf.interceptor.Fault) $r2;

        $r4 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $i0 = virtualinvoke r3.<org.apache.cxf.interceptor.Fault: int getStatusCode()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r6 = new org.apache.cxf.helpers.NSStack;

        specialinvoke $r6.<org.apache.cxf.helpers.NSStack: void <init>()>();

        virtualinvoke $r6.<org.apache.cxf.helpers.NSStack: void push()>();

        $r7 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        r8 = (javax.xml.stream.XMLStreamWriter) $r7;

        $r9 = staticinvoke <org.apache.cxf.binding.xml.XMLFault: org.apache.cxf.binding.xml.XMLFault createFault(org.apache.cxf.interceptor.Fault)>(r3);

     label02:
        virtualinvoke $r6.<org.apache.cxf.helpers.NSStack: java.lang.String add(java.lang.String)>("http://cxf.apache.org/bindings/xformat");

        $r10 = virtualinvoke $r6.<org.apache.cxf.helpers.NSStack: java.lang.String getPrefix(java.lang.String)>("http://cxf.apache.org/bindings/xformat");

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)>(r8, $r10, "XMLFault", "http://cxf.apache.org/bindings/xformat");

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)>(r8, $r10, "faultstring", "http://cxf.apache.org/bindings/xformat");

        $r11 = virtualinvoke $r9.<org.apache.cxf.binding.xml.XMLFault: java.lang.Throwable getCause()>();

        if $r11 != null goto label03;

        $r21 = virtualinvoke $r9.<org.apache.cxf.binding.xml.XMLFault: java.lang.String getMessage()>();

        goto label04;

     label03:
        $r21 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String toString()>();

     label04:
        interfaceinvoke r8.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>($r21);

        interfaceinvoke r8.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        $r12 = virtualinvoke $r9.<org.apache.cxf.binding.xml.XMLFault: org.w3c.dom.Element getDetail()>();

        if $r12 == null goto label07;

        $r13 = virtualinvoke $r9.<org.apache.cxf.binding.xml.XMLFault: org.w3c.dom.Element getDetail()>();

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)>(r8, $r10, "detail", "http://cxf.apache.org/bindings/xformat");

        r22 = interfaceinvoke $r13.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label05:
        if r22 == null goto label06;

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)>(r22, r8, 0);

        r22 = interfaceinvoke r22.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label05;

     label06:
        interfaceinvoke r8.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

     label07:
        interfaceinvoke r8.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        interfaceinvoke r8.<javax.xml.stream.XMLStreamWriter: void flush()>();

     label08:
        goto label10;

     label09:
        $r16 := @caughtexception;

        $r17 = new org.apache.cxf.interceptor.Fault;

        $r18 = new org.apache.cxf.common.i18n.Message;

        $r20 = <org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor: java.util.ResourceBundle BUNDLE>;

        $r19 = newarray (java.lang.Object)[0];

        specialinvoke $r18.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("XML_WRITE_EXC", $r20, $r19);

        specialinvoke $r17.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r18, $r16);

        throw $r17;

     label10:
        return;

        catch javax.xml.stream.XMLStreamException from label02 to label08 with label09;
    }

    public void handleFault(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        org.apache.cxf.interceptor.Fault $r3;
        org.apache.cxf.message.Message r1;
        java.lang.Object $r2;
        org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $z0 = virtualinvoke r0.<org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor: boolean mustPropogateException(org.apache.cxf.message.Message)>(r1);

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        $r3 = (org.apache.cxf.interceptor.Fault) $r2;

        throw $r3;

     label1:
        return;
    }

    protected boolean mustPropogateException(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Boolean $r1;
        java.lang.Object $r4;
        java.lang.String $r3;
        org.apache.cxf.message.Exchange $r2;
        org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor r5;
        boolean $z0;

        r5 := @this: org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = <org.apache.cxf.message.Message: java.lang.String PROPOGATE_EXCEPTION>;

        $r4 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>($r3);

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        $r0 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/binding/xml/interceptor/XMLFaultOutInterceptor;");

        <org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor: java.util.ResourceBundle BUNDLE> = $r0;

        return;
    }
}
