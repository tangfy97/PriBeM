public class org.apache.xmlbeans.impl.regex.BMPattern extends java.lang.Object
{
    char[] pattern;
    int[] shiftTable;
    boolean ignoreCase;

    public void <init>(java.lang.String, boolean)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.regex.BMPattern r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.regex.BMPattern;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.regex.BMPattern: void <init>(java.lang.String,int,boolean)>(r1, 256, z0);

        return;
    }

    public void <init>(java.lang.String, int, boolean)
    {
        org.apache.xmlbeans.impl.regex.BMPattern r0;
        int[] $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        boolean z0, $z1;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i8, $i9, $i11, $i12, $i13, i14, i15, i17, i18, $i19, $i20, $i21;
        java.lang.String r1;
        char $c7, $c10, c16;
        char[] $r2, $r4, $r6;

        r0 := @this: org.apache.xmlbeans.impl.regex.BMPattern;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern> = $r2;

        $r3 = newarray (int)[i0];

        r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable> = $r3;

        r0.<org.apache.xmlbeans.impl.regex.BMPattern: boolean ignoreCase> = z0;

        $r4 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        i1 = lengthof $r4;

        i14 = 0;

     label1:
        $r5 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i2 = lengthof $r5;

        if i14 >= $i2 goto label2;

        $r16 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $r16[i14] = i1;

        i14 = i14 + 1;

        goto label1;

     label2:
        i15 = 0;

     label3:
        if i15 >= i1 goto label7;

        $r6 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        c16 = $r6[i15];

        $i3 = i1 - i15;

        i4 = $i3 - 1;

        $r7 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i5 = lengthof $r7;

        $i19 = (int) c16;

        i17 = $i19 % $i5;

        $r8 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i6 = $r8[i17];

        if i4 >= $i6 goto label4;

        $r15 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $r15[i17] = i4;

     label4:
        $z1 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: boolean ignoreCase>;

        if $z1 == 0 goto label6;

        $c7 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c16);

        $r9 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i8 = lengthof $r9;

        $i20 = (int) $c7;

        i18 = $i20 % $i8;

        $r10 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i9 = $r10[i18];

        if i4 >= $i9 goto label5;

        $r14 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $r14[i18] = i4;

     label5:
        $c10 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c7);

        $r11 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i11 = lengthof $r11;

        $i21 = (int) $c10;

        $i13 = $i21 % $i11;

        $r12 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i12 = $r12[$i13];

        if i4 >= $i12 goto label6;

        $r13 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $r13[$i13] = i4;

     label6:
        i15 = i15 + 1;

        goto label3;

     label7:
        return;
    }

    public int matches(java.text.CharacterIterator, int, int)
    {
        org.apache.xmlbeans.impl.regex.BMPattern r0;
        int[] $r4, $r5;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i15, $i17, $i18, $i19, $i20, $i22;
        boolean $z0;
        java.text.CharacterIterator r2;
        char $c4, $c5;
        char[] $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.regex.BMPattern;

        r2 := @parameter0: java.text.CharacterIterator;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: boolean ignoreCase>;

        if $z0 == 0 goto label1;

        $i11 = virtualinvoke r0.<org.apache.xmlbeans.impl.regex.BMPattern: int matchesIgnoreCase(java.text.CharacterIterator,int,int)>(r2, i1, i2);

        return $i11;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        i0 = lengthof $r1;

        if i0 != 0 goto label2;

        return i1;

     label2:
        i12 = i1 + i0;

     label3:
        if i12 > i2 goto label9;

        i13 = i0;

        i3 = i12 + 1;

     label4:
        $i15 = (int) -1;

        i12 = i12 + $i15;

        $c4 = interfaceinvoke r2.<java.text.CharacterIterator: char setIndex(int)>(i12);

        $r3 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        $i17 = (int) -1;

        i13 = i13 + $i17;

        $c5 = $r3[i13];

        $i18 = (int) $c4;

        $i19 = (int) $c5;

        if $i18 == $i19 goto label5;

        goto label7;

     label5:
        if i13 != 0 goto label6;

        return i12;

     label6:
        if i13 > 0 goto label4;

     label7:
        $r5 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $r4 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i6 = lengthof $r4;

        $i20 = (int) $c4;

        $i7 = $i20 % $i6;

        $i8 = $r5[$i7];

        $i9 = $i8 + 1;

        $i10 = i12 + $i9;

        i12 = $i10;

        if $i10 >= i3 goto label8;

        i12 = i3;

     label8:
        goto label3;

     label9:
        $i22 = (int) -1;

        return $i22;
    }

    public int matches(java.lang.String, int, int)
    {
        org.apache.xmlbeans.impl.regex.BMPattern r0;
        int[] $r4, $r5;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i15, $i17, $i18, $i19, $i20, $i22;
        java.lang.String r2;
        boolean $z0;
        char $c4, $c5;
        char[] $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.regex.BMPattern;

        r2 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: boolean ignoreCase>;

        if $z0 == 0 goto label1;

        $i11 = virtualinvoke r0.<org.apache.xmlbeans.impl.regex.BMPattern: int matchesIgnoreCase(java.lang.String,int,int)>(r2, i1, i2);

        return $i11;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        i0 = lengthof $r1;

        if i0 != 0 goto label2;

        return i1;

     label2:
        i12 = i1 + i0;

     label3:
        if i12 > i2 goto label9;

        i13 = i0;

        i3 = i12 + 1;

     label4:
        $i15 = (int) -1;

        i12 = i12 + $i15;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i12);

        $r3 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        $i17 = (int) -1;

        i13 = i13 + $i17;

        $c5 = $r3[i13];

        $i18 = (int) $c4;

        $i19 = (int) $c5;

        if $i18 == $i19 goto label5;

        goto label7;

     label5:
        if i13 != 0 goto label6;

        return i12;

     label6:
        if i13 > 0 goto label4;

     label7:
        $r5 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $r4 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i6 = lengthof $r4;

        $i20 = (int) $c4;

        $i7 = $i20 % $i6;

        $i8 = $r5[$i7];

        $i9 = $i8 + 1;

        $i10 = i12 + $i9;

        i12 = $i10;

        if $i10 >= i3 goto label8;

        i12 = i3;

     label8:
        goto label3;

     label9:
        $i22 = (int) -1;

        return $i22;
    }

    public int matches(char[], int, int)
    {
        org.apache.xmlbeans.impl.regex.BMPattern r0;
        int[] $r4, $r5;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i15, $i17, $i18, $i19, $i20, $i22;
        boolean $z0;
        char $c4, $c5;
        char[] $r1, r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.regex.BMPattern;

        r2 := @parameter0: char[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: boolean ignoreCase>;

        if $z0 == 0 goto label1;

        $i11 = virtualinvoke r0.<org.apache.xmlbeans.impl.regex.BMPattern: int matchesIgnoreCase(char[],int,int)>(r2, i1, i2);

        return $i11;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        i0 = lengthof $r1;

        if i0 != 0 goto label2;

        return i1;

     label2:
        i12 = i1 + i0;

     label3:
        if i12 > i2 goto label9;

        i13 = i0;

        i3 = i12 + 1;

     label4:
        $i15 = (int) -1;

        i12 = i12 + $i15;

        $c4 = r2[i12];

        $r3 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        $i17 = (int) -1;

        i13 = i13 + $i17;

        $c5 = $r3[i13];

        $i18 = (int) $c4;

        $i19 = (int) $c5;

        if $i18 == $i19 goto label5;

        goto label7;

     label5:
        if i13 != 0 goto label6;

        return i12;

     label6:
        if i13 > 0 goto label4;

     label7:
        $r5 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $r4 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i6 = lengthof $r4;

        $i20 = (int) $c4;

        $i7 = $i20 % $i6;

        $i8 = $r5[$i7];

        $i9 = $i8 + 1;

        $i10 = i12 + $i9;

        i12 = $i10;

        if $i10 >= i3 goto label8;

        i12 = i3;

     label8:
        goto label3;

     label9:
        $i22 = (int) -1;

        return $i22;
    }

    int matchesIgnoreCase(java.text.CharacterIterator, int, int)
    {
        org.apache.xmlbeans.impl.regex.BMPattern r0;
        int[] $r4, $r5;
        java.text.CharacterIterator r2;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9, $i14, i15, i16, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29;
        char $c4, $c5, $c10, $c11, $c12, $c13;
        char[] $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.regex.BMPattern;

        r2 := @parameter0: java.text.CharacterIterator;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        i0 = lengthof $r1;

        if i0 != 0 goto label1;

        return i1;

     label1:
        i15 = i1 + i0;

     label2:
        if i15 > i2 goto label8;

        i16 = i0;

        i3 = i15 + 1;

     label3:
        $i18 = (int) -1;

        i15 = i15 + $i18;

        $c4 = interfaceinvoke r2.<java.text.CharacterIterator: char setIndex(int)>(i15);

        $r3 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        $i20 = (int) -1;

        i16 = i16 + $i20;

        $c5 = $r3[i16];

        $i21 = (int) $c4;

        $i22 = (int) $c5;

        if $i21 == $i22 goto label4;

        $c10 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4);

        $c11 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c5);

        $i23 = (int) $c10;

        $i24 = (int) $c11;

        if $i23 == $i24 goto label4;

        $c12 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c10);

        $c13 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);

        $i25 = (int) $c12;

        $i26 = (int) $c13;

        if $i25 == $i26 goto label4;

        goto label6;

     label4:
        if i16 != 0 goto label5;

        return i15;

     label5:
        if i16 > 0 goto label3;

     label6:
        $r5 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $r4 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i6 = lengthof $r4;

        $i27 = (int) $c4;

        $i7 = $i27 % $i6;

        $i8 = $r5[$i7];

        $i9 = $i8 + 1;

        $i14 = i15 + $i9;

        i15 = $i14;

        if $i14 >= i3 goto label7;

        i15 = i3;

     label7:
        goto label2;

     label8:
        $i29 = (int) -1;

        return $i29;
    }

    int matchesIgnoreCase(java.lang.String, int, int)
    {
        org.apache.xmlbeans.impl.regex.BMPattern r0;
        int[] $r4, $r5;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9, $i14, i15, i16, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29;
        java.lang.String r2;
        char $c4, $c5, $c10, $c11, $c12, $c13;
        char[] $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.regex.BMPattern;

        r2 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        i0 = lengthof $r1;

        if i0 != 0 goto label1;

        return i1;

     label1:
        i15 = i1 + i0;

     label2:
        if i15 > i2 goto label8;

        i16 = i0;

        i3 = i15 + 1;

     label3:
        $i18 = (int) -1;

        i15 = i15 + $i18;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i15);

        $r3 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        $i20 = (int) -1;

        i16 = i16 + $i20;

        $c5 = $r3[i16];

        $i21 = (int) $c4;

        $i22 = (int) $c5;

        if $i21 == $i22 goto label4;

        $c10 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4);

        $c11 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c5);

        $i23 = (int) $c10;

        $i24 = (int) $c11;

        if $i23 == $i24 goto label4;

        $c12 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c10);

        $c13 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);

        $i25 = (int) $c12;

        $i26 = (int) $c13;

        if $i25 == $i26 goto label4;

        goto label6;

     label4:
        if i16 != 0 goto label5;

        return i15;

     label5:
        if i16 > 0 goto label3;

     label6:
        $r5 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $r4 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i6 = lengthof $r4;

        $i27 = (int) $c4;

        $i7 = $i27 % $i6;

        $i8 = $r5[$i7];

        $i9 = $i8 + 1;

        $i14 = i15 + $i9;

        i15 = $i14;

        if $i14 >= i3 goto label7;

        i15 = i3;

     label7:
        goto label2;

     label8:
        $i29 = (int) -1;

        return $i29;
    }

    int matchesIgnoreCase(char[], int, int)
    {
        org.apache.xmlbeans.impl.regex.BMPattern r0;
        int[] $r4, $r5;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9, $i14, i15, i16, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29;
        char $c4, $c5, $c10, $c11, $c12, $c13;
        char[] $r1, r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.regex.BMPattern;

        r2 := @parameter0: char[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        i0 = lengthof $r1;

        if i0 != 0 goto label1;

        return i1;

     label1:
        i15 = i1 + i0;

     label2:
        if i15 > i2 goto label8;

        i16 = i0;

        i3 = i15 + 1;

     label3:
        $i18 = (int) -1;

        i15 = i15 + $i18;

        $c4 = r2[i15];

        $r3 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: char[] pattern>;

        $i20 = (int) -1;

        i16 = i16 + $i20;

        $c5 = $r3[i16];

        $i21 = (int) $c4;

        $i22 = (int) $c5;

        if $i21 == $i22 goto label4;

        $c10 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4);

        $c11 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c5);

        $i23 = (int) $c10;

        $i24 = (int) $c11;

        if $i23 == $i24 goto label4;

        $c12 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c10);

        $c13 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);

        $i25 = (int) $c12;

        $i26 = (int) $c13;

        if $i25 == $i26 goto label4;

        goto label6;

     label4:
        if i16 != 0 goto label5;

        return i15;

     label5:
        if i16 > 0 goto label3;

     label6:
        $r5 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $r4 = r0.<org.apache.xmlbeans.impl.regex.BMPattern: int[] shiftTable>;

        $i6 = lengthof $r4;

        $i27 = (int) $c4;

        $i7 = $i27 % $i6;

        $i8 = $r5[$i7];

        $i9 = $i8 + 1;

        $i14 = i15 + $i9;

        i15 = $i14;

        if $i14 >= i3 goto label7;

        i15 = i3;

     label7:
        goto label2;

     label8:
        $i29 = (int) -1;

        return $i29;
    }
}
