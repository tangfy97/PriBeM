public class org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction extends javax.swing.AbstractAction
{
    private final org.apache.batik.util.gui.MemoryMonitor this$0;

    protected void <init>(org.apache.batik.util.gui.MemoryMonitor)
    {
        org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction r0;
        org.apache.batik.util.gui.MemoryMonitor r1;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction;

        r1 := @parameter0: org.apache.batik.util.gui.MemoryMonitor;

        specialinvoke r0.<javax.swing.AbstractAction: void <init>()>();

        r0.<org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction: org.apache.batik.util.gui.MemoryMonitor this$0> = r1;

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread $r3;
        org.apache.batik.util.gui.MemoryMonitor $r1, $r4;
        org.apache.batik.util.gui.MemoryMonitor$Panel $r2;
        org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction r0;
        java.awt.event.ActionEvent r5;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction;

        r5 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction: org.apache.batik.util.gui.MemoryMonitor this$0>;

        $r2 = $r1.<org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.gui.MemoryMonitor$Panel panel>;

        $r3 = virtualinvoke $r2.<org.apache.batik.util.gui.MemoryMonitor$Panel: org.apache.batik.util.gui.MemoryMonitor$RepaintThread getRepaintThread()>();

        virtualinvoke $r3.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: void safeSuspend()>();

        $r4 = r0.<org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction: org.apache.batik.util.gui.MemoryMonitor this$0>;

        virtualinvoke $r4.<java.awt.Window: void dispose()>();

        return;
    }
}
