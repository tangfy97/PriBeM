public class org.bouncycastle.crypto.macs.GOST28147Mac extends java.lang.Object implements org.bouncycastle.crypto.Mac
{
    private int blockSize;
    private int macSize;
    private int bufOff;
    private byte[] buf;
    private byte[] mac;
    private boolean firstStep;
    private int[] workingKey;
    private byte[] S;

    public void <init>()
    {
        byte[] $r1, $r2, $r3;
        int $i0, $i1;
        org.bouncycastle.crypto.macs.GOST28147Mac r0;

        r0 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int blockSize> = 8;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int macSize> = 4;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: boolean firstStep> = 1;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int[] workingKey> = null;

        $r1 = newarray (byte)[128];

        $r1[0] = 9;

        $r1[1] = 6;

        $r1[2] = 3;

        $r1[3] = 2;

        $r1[4] = 8;

        $r1[5] = 11;

        $r1[6] = 1;

        $r1[7] = 7;

        $r1[8] = 10;

        $r1[9] = 4;

        $r1[10] = 14;

        $r1[11] = 15;

        $r1[12] = 12;

        $r1[13] = 0;

        $r1[14] = 13;

        $r1[15] = 5;

        $r1[16] = 3;

        $r1[17] = 7;

        $r1[18] = 14;

        $r1[19] = 9;

        $r1[20] = 8;

        $r1[21] = 10;

        $r1[22] = 15;

        $r1[23] = 0;

        $r1[24] = 5;

        $r1[25] = 2;

        $r1[26] = 6;

        $r1[27] = 12;

        $r1[28] = 11;

        $r1[29] = 4;

        $r1[30] = 13;

        $r1[31] = 1;

        $r1[32] = 14;

        $r1[33] = 4;

        $r1[34] = 6;

        $r1[35] = 2;

        $r1[36] = 11;

        $r1[37] = 3;

        $r1[38] = 13;

        $r1[39] = 8;

        $r1[40] = 12;

        $r1[41] = 15;

        $r1[42] = 5;

        $r1[43] = 10;

        $r1[44] = 0;

        $r1[45] = 7;

        $r1[46] = 1;

        $r1[47] = 9;

        $r1[48] = 14;

        $r1[49] = 7;

        $r1[50] = 10;

        $r1[51] = 12;

        $r1[52] = 13;

        $r1[53] = 1;

        $r1[54] = 3;

        $r1[55] = 9;

        $r1[56] = 0;

        $r1[57] = 2;

        $r1[58] = 11;

        $r1[59] = 4;

        $r1[60] = 15;

        $r1[61] = 8;

        $r1[62] = 5;

        $r1[63] = 6;

        $r1[64] = 11;

        $r1[65] = 5;

        $r1[66] = 1;

        $r1[67] = 9;

        $r1[68] = 8;

        $r1[69] = 13;

        $r1[70] = 15;

        $r1[71] = 0;

        $r1[72] = 14;

        $r1[73] = 4;

        $r1[74] = 2;

        $r1[75] = 3;

        $r1[76] = 12;

        $r1[77] = 7;

        $r1[78] = 10;

        $r1[79] = 6;

        $r1[80] = 3;

        $r1[81] = 10;

        $r1[82] = 13;

        $r1[83] = 12;

        $r1[84] = 1;

        $r1[85] = 2;

        $r1[86] = 0;

        $r1[87] = 11;

        $r1[88] = 7;

        $r1[89] = 5;

        $r1[90] = 9;

        $r1[91] = 4;

        $r1[92] = 8;

        $r1[93] = 15;

        $r1[94] = 14;

        $r1[95] = 6;

        $r1[96] = 1;

        $r1[97] = 13;

        $r1[98] = 2;

        $r1[99] = 9;

        $r1[100] = 7;

        $r1[101] = 10;

        $r1[102] = 6;

        $r1[103] = 0;

        $r1[104] = 8;

        $r1[105] = 12;

        $r1[106] = 4;

        $r1[107] = 5;

        $r1[108] = 15;

        $r1[109] = 3;

        $r1[110] = 11;

        $r1[111] = 14;

        $r1[112] = 11;

        $r1[113] = 10;

        $r1[114] = 15;

        $r1[115] = 5;

        $r1[116] = 0;

        $r1[117] = 12;

        $r1[118] = 14;

        $r1[119] = 8;

        $r1[120] = 6;

        $r1[121] = 2;

        $r1[122] = 3;

        $r1[123] = 9;

        $r1[124] = 1;

        $r1[125] = 7;

        $r1[126] = 13;

        $r1[127] = 4;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] S> = $r1;

        $i0 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int blockSize>;

        $r2 = newarray (byte)[$i0];

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac> = $r2;

        $i1 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int blockSize>;

        $r3 = newarray (byte)[$i1];

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf> = $r3;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff> = 0;

        return;
    }

    private int[] generateWorkingKey(byte[])
    {
        byte[] r0;
        java.lang.IllegalArgumentException $r3;
        int[] r1;
        int $i0, $i1, $i2, i3;
        org.bouncycastle.crypto.macs.GOST28147Mac r2;

        r2 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        if $i0 == 32 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key length invalid. Key needs to be 32 byte - 256 bit!!!");

        throw $r3;

     label1:
        r1 = newarray (int)[8];

        i3 = 0;

     label2:
        if i3 == 8 goto label3;

        $i1 = i3 * 4;

        $i2 = specialinvoke r2.<org.bouncycastle.crypto.macs.GOST28147Mac: int bytesToint(byte[],int)>(r0, $i1);

        r1[i3] = $i2;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r1;
    }

    public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        byte[] $r1, $r11, $r14, $r15, $r16, $r20;
        int[] $r12, $r21;
        int $i0, $i1;
        java.lang.String $r7, $r9;
        org.bouncycastle.crypto.params.KeyParameter $r10, $r19;
        org.bouncycastle.crypto.CipherParameters r2, $r17, $r18;
        boolean $z0, $z1;
        org.bouncycastle.crypto.params.ParametersWithSBox r13;
        java.lang.IllegalArgumentException $r3;
        org.bouncycastle.crypto.macs.GOST28147Mac r0;
        java.lang.StringBuilder $r4, $r5, $r8;
        java.lang.Class $r6;

        r0 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        r2 := @parameter0: org.bouncycastle.crypto.CipherParameters;

        virtualinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: void reset()>();

        $i0 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int blockSize>;

        $r1 = newarray (byte)[$i0];

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf> = $r1;

        $z0 = r2 instanceof org.bouncycastle.crypto.params.ParametersWithSBox;

        if $z0 == 0 goto label2;

        r13 = (org.bouncycastle.crypto.params.ParametersWithSBox) r2;

        $r14 = virtualinvoke r13.<org.bouncycastle.crypto.params.ParametersWithSBox: byte[] getSBox()>();

        $r15 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] S>;

        $r16 = virtualinvoke r13.<org.bouncycastle.crypto.params.ParametersWithSBox: byte[] getSBox()>();

        $i1 = lengthof $r16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, $r15, 0, $i1);

        $r17 = virtualinvoke r13.<org.bouncycastle.crypto.params.ParametersWithSBox: org.bouncycastle.crypto.CipherParameters getParameters()>();

        if $r17 == null goto label1;

        $r18 = virtualinvoke r13.<org.bouncycastle.crypto.params.ParametersWithSBox: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r19 = (org.bouncycastle.crypto.params.KeyParameter) $r18;

        $r20 = virtualinvoke $r19.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $r21 = specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int[] generateWorkingKey(byte[])>($r20);

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int[] workingKey> = $r21;

     label1:
        goto label4;

     label2:
        $z1 = r2 instanceof org.bouncycastle.crypto.params.KeyParameter;

        if $z1 == 0 goto label3;

        $r10 = (org.bouncycastle.crypto.params.KeyParameter) r2;

        $r11 = virtualinvoke $r10.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $r12 = specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int[] generateWorkingKey(byte[])>($r11);

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int[] workingKey> = $r12;

        goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid parameter passed to GOST28147 init - ");

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label4:
        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.macs.GOST28147Mac r0;

        r0 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        return "GOST28147Mac";
    }

    public int getMacSize()
    {
        int $i0;
        org.bouncycastle.crypto.macs.GOST28147Mac r0;

        r0 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        $i0 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int macSize>;

        return $i0;
    }

    private int gost28147_mainStep(int, int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b6, $b10, $b15, $b20, $b25, $b30, $b35, $b40;
        org.bouncycastle.crypto.macs.GOST28147Mac r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i31, $i32, $i33, $i34, $i36, $i37, $i38, $i39, $i41, $i42, $i43, $i44, i45, i46, i47, i48, i49, i50, i51, i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60;

        r0 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i2 = i0 + i1;

        $r1 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] S>;

        $i3 = i2 >> 0;

        $i4 = $i3 & 15;

        $i5 = 0 + $i4;

        $b6 = $r1[$i5];

        $i53 = (int) $b6;

        i45 = $i53 << 0;

        $r2 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] S>;

        $i7 = i2 >> 4;

        $i8 = $i7 & 15;

        $i9 = 16 + $i8;

        $b10 = $r2[$i9];

        $i54 = (int) $b10;

        $i11 = $i54 << 4;

        i46 = i45 + $i11;

        $r3 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] S>;

        $i12 = i2 >> 8;

        $i13 = $i12 & 15;

        $i14 = 32 + $i13;

        $b15 = $r3[$i14];

        $i55 = (int) $b15;

        $i16 = $i55 << 8;

        i47 = i46 + $i16;

        $r4 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] S>;

        $i17 = i2 >> 12;

        $i18 = $i17 & 15;

        $i19 = 48 + $i18;

        $b20 = $r4[$i19];

        $i56 = (int) $b20;

        $i21 = $i56 << 12;

        i48 = i47 + $i21;

        $r5 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] S>;

        $i22 = i2 >> 16;

        $i23 = $i22 & 15;

        $i24 = 64 + $i23;

        $b25 = $r5[$i24];

        $i57 = (int) $b25;

        $i26 = $i57 << 16;

        i49 = i48 + $i26;

        $r6 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] S>;

        $i27 = i2 >> 20;

        $i28 = $i27 & 15;

        $i29 = 80 + $i28;

        $b30 = $r6[$i29];

        $i58 = (int) $b30;

        $i31 = $i58 << 20;

        i50 = i49 + $i31;

        $r7 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] S>;

        $i32 = i2 >> 24;

        $i33 = $i32 & 15;

        $i34 = 96 + $i33;

        $b35 = $r7[$i34];

        $i59 = (int) $b35;

        $i36 = $i59 << 24;

        i51 = i50 + $i36;

        $r8 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] S>;

        $i37 = i2 >> 28;

        $i38 = $i37 & 15;

        $i39 = 112 + $i38;

        $b40 = $r8[$i39];

        $i60 = (int) $b40;

        $i41 = $i60 << 28;

        i52 = i51 + $i41;

        $i43 = i52 << 11;

        $i42 = i52 >>> 21;

        $i44 = $i43 | $i42;

        return $i44;
    }

    private void gost28147MacFunc(int[], byte[], int, byte[], int)
    {
        byte[] r1, r2;
        int[] r3;
        int i0, $i1, i2, $i3, i4, $i5, $i6, i7, i8, i9, i10;
        org.bouncycastle.crypto.macs.GOST28147Mac r0;

        r0 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        r3 := @parameter0: int[];

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        i7 = specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bytesToint(byte[],int)>(r1, i0);

        $i1 = i0 + 4;

        i8 = specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bytesToint(byte[],int)>(r1, $i1);

        i9 = 0;

     label1:
        if i9 >= 2 goto label4;

        i10 = 0;

     label2:
        if i10 >= 8 goto label3;

        i4 = i7;

        $i5 = r3[i10];

        $i6 = specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int gost28147_mainStep(int,int)>(i7, $i5);

        i7 = i8 ^ $i6;

        i8 = i4;

        i10 = i10 + 1;

        goto label2;

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: void intTobytes(int,byte[],int)>(i7, r2, i2);

        $i3 = i2 + 4;

        specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: void intTobytes(int,byte[],int)>(i8, r2, $i3);

        return;
    }

    private int bytesToint(byte[], int)
    {
        byte[] r0;
        short $s15, $s23;
        byte $b2, $b5, $b10, $b14;
        int i0, $i1, $i3, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i22, $i24;
        org.bouncycastle.crypto.macs.GOST28147Mac r1;

        r1 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 3;

        $b2 = r0[$i1];

        $i18 = (int) $b2;

        $i3 = $i18 << 24;

        $i8 = $i3 & -16777216;

        $i4 = i0 + 2;

        $b5 = r0[$i4];

        $i19 = (int) $b5;

        $i6 = $i19 << 16;

        $i7 = $i6 & 16711680;

        $i13 = $i8 + $i7;

        $i9 = i0 + 1;

        $b10 = r0[$i9];

        $i20 = (int) $b10;

        $i11 = $i20 << 8;

        $i22 = (int) 65280;

        $i12 = $i11 & $i22;

        $i16 = $i13 + $i12;

        $b14 = r0[i0];

        $s23 = (short) $b14;

        $s15 = $s23 & 255;

        $i24 = (int) $s15;

        $i17 = $i16 + $i24;

        return $i17;
    }

    private void intTobytes(int, byte[], int)
    {
        byte[] r0;
        byte $b3, $b6, $b9, $b11;
        int i0, i1, $i2, $i4, $i5, $i7, $i8, $i10;
        org.bouncycastle.crypto.macs.GOST28147Mac r1;

        r1 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        i1 := @parameter0: int;

        r0 := @parameter1: byte[];

        i0 := @parameter2: int;

        $i4 = i0 + 3;

        $i2 = i1 >>> 24;

        $b3 = (byte) $i2;

        r0[$i4] = $b3;

        $i7 = i0 + 2;

        $i5 = i1 >>> 16;

        $b6 = (byte) $i5;

        r0[$i7] = $b6;

        $i10 = i0 + 1;

        $i8 = i1 >>> 8;

        $b9 = (byte) $i8;

        r0[$i10] = $b9;

        $b11 = (byte) i1;

        r0[i0] = $b11;

        return;
    }

    private byte[] CM5func(byte[], int, byte[])
    {
        byte[] r0, r1, r2;
        byte $b5, $b6, $b7, $b8;
        int i0, $i1, $i2, $i3, $i4, i9;
        org.bouncycastle.crypto.macs.GOST28147Mac r3;

        r3 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        $i1 = lengthof r0;

        $i2 = $i1 - i0;

        r1 = newarray (byte)[$i2];

        $i3 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i0, r1, 0, $i3);

        i9 = 0;

     label1:
        $i4 = lengthof r2;

        if i9 == $i4 goto label2;

        $b6 = r1[i9];

        $b5 = r2[i9];

        $b7 = $b6 ^ $b5;

        $b8 = (byte) $b7;

        r1[i9] = $b8;

        i9 = i9 + 1;

        goto label1;

     label2:
        return r1;
    }

    public void update(byte) throws java.lang.IllegalStateException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, r9, $r10;
        byte b2;
        int[] $r8;
        int $i0, $i1, $i3, $i4, $i5, $i6;
        boolean $z0;
        org.bouncycastle.crypto.macs.GOST28147Mac r0;

        r0 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        b2 := @parameter0: byte;

        $i1 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff>;

        $r1 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label3;

        $r2 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $i3 = lengthof $r2;

        r9 = newarray (byte)[$i3];

        $r4 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $r3 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        $i4 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r9, 0, $i4);

        $z0 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: boolean firstStep>;

        if $z0 == 0 goto label1;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: boolean firstStep> = 0;

        goto label2;

     label1:
        $r6 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $r5 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        r9 = specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] CM5func(byte[],int,byte[])>($r6, 0, $r5);

     label2:
        $r8 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int[] workingKey>;

        $r7 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: void gost28147MacFunc(int[],byte[],int,byte[],int)>($r8, r9, 0, $r7, 0);

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff> = 0;

     label3:
        $r10 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $i5 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff>;

        $i6 = $i5 + 1;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff> = $i6;

        $r10[$i5] = b2;

        return;
    }

    public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, r16;
        int[] $r10, $r14;
        boolean $z0;
        org.bouncycastle.crypto.macs.GOST28147Mac r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        r1 := @parameter0: byte[];

        i11 := @parameter1: int;

        i12 := @parameter2: int;

        if i12 >= 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t have a negative input length!");

        throw $r15;

     label1:
        $i1 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int blockSize>;

        $i0 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff>;

        i2 = $i1 - $i0;

        if i12 <= i2 goto label5;

        $r3 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $i6 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i11, $r3, $i6, i2);

        $r4 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $i7 = lengthof $r4;

        r16 = newarray (byte)[$i7];

        $r6 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $r5 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        $i8 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r16, 0, $i8);

        $z0 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: boolean firstStep>;

        if $z0 == 0 goto label2;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: boolean firstStep> = 0;

        goto label3;

     label2:
        $r8 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $r7 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        r16 = specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] CM5func(byte[],int,byte[])>($r8, 0, $r7);

     label3:
        $r10 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int[] workingKey>;

        $r9 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: void gost28147MacFunc(int[],byte[],int,byte[],int)>($r10, r16, 0, $r9, 0);

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff> = 0;

        i12 = i12 - i2;

        i11 = i11 + i2;

     label4:
        $i13 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int blockSize>;

        if i12 <= $i13 goto label5;

        $r11 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        $r12 = specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] CM5func(byte[],int,byte[])>(r1, i11, $r11);

        $r14 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int[] workingKey>;

        $r13 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: void gost28147MacFunc(int[],byte[],int,byte[],int)>($r14, $r12, 0, $r13, 0);

        $i9 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int blockSize>;

        i12 = i12 - $i9;

        $i10 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int blockSize>;

        i11 = i11 + $i10;

        goto label4;

     label5:
        $r2 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $i3 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i11, $r2, $i3, i12);

        $i4 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff>;

        $i5 = $i4 + i12;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff> = $i5;

        return;
    }

    public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r8, r9, $r10, $r11, r12;
        int[] $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;
        org.bouncycastle.crypto.macs.GOST28147Mac r0;

        r0 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        r9 := @parameter0: byte[];

        i7 := @parameter1: int;

     label1:
        $i1 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff>;

        $i0 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int blockSize>;

        if $i1 >= $i0 goto label2;

        $r11 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $i11 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff>;

        $r11[$i11] = 0;

        $i12 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff>;

        $i13 = $i12 + 1;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff> = $i13;

        goto label1;

     label2:
        $r1 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $i2 = lengthof $r1;

        r12 = newarray (byte)[$i2];

        $r3 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $r2 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        $i3 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r12, 0, $i3);

        $z0 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: boolean firstStep>;

        if $z0 == 0 goto label3;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: boolean firstStep> = 0;

        goto label4;

     label3:
        $r5 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $r4 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        r12 = specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] CM5func(byte[],int,byte[])>($r5, 0, $r4);

     label4:
        $r7 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int[] workingKey>;

        $r6 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        specialinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: void gost28147MacFunc(int[],byte[],int,byte[],int)>($r7, r12, 0, $r6, 0);

        $r10 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        $r8 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] mac>;

        $i4 = lengthof $r8;

        $i6 = $i4 / 2;

        $i5 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int macSize>;

        $i9 = $i6 - $i5;

        $i8 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, $i9, r9, i7, $i8);

        virtualinvoke r0.<org.bouncycastle.crypto.macs.GOST28147Mac: void reset()>();

        $i10 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int macSize>;

        return $i10;
    }

    public void reset()
    {
        byte[] $r1, $r2;
        int $i0, i1;
        org.bouncycastle.crypto.macs.GOST28147Mac r0;

        r0 := @this: org.bouncycastle.crypto.macs.GOST28147Mac;

        i1 = 0;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.bouncycastle.crypto.macs.GOST28147Mac: byte[] buf>;

        $r2[i1] = 0;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: int bufOff> = 0;

        r0.<org.bouncycastle.crypto.macs.GOST28147Mac: boolean firstStep> = 1;

        return;
    }
}
