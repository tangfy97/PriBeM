public class org.apache.batik.bridge.NoLoadExternalResourceSecurity extends java.lang.Object implements org.apache.batik.bridge.ExternalResourceSecurity
{
    public static final java.lang.String ERROR_NO_EXTERNAL_RESOURCE_ALLOWED;
    protected java.lang.SecurityException se;

    public void checkLoadExternalResource()
    {
        java.lang.SecurityException $r1, $r2, $r3;
        org.apache.batik.bridge.NoLoadExternalResourceSecurity r0;

        r0 := @this: org.apache.batik.bridge.NoLoadExternalResourceSecurity;

        $r1 = r0.<org.apache.batik.bridge.NoLoadExternalResourceSecurity: java.lang.SecurityException se>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.bridge.NoLoadExternalResourceSecurity: java.lang.SecurityException se>;

        virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        $r3 = r0.<org.apache.batik.bridge.NoLoadExternalResourceSecurity: java.lang.SecurityException se>;

        throw $r3;

     label1:
        return;
    }

    public void <init>()
    {
        java.lang.SecurityException $r1;
        org.apache.batik.bridge.NoLoadExternalResourceSecurity r0;
        java.lang.String $r2;

        r0 := @this: org.apache.batik.bridge.NoLoadExternalResourceSecurity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.SecurityException;

        $r2 = staticinvoke <org.apache.batik.bridge.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("NoLoadExternalResourceSecurity.error.no.external.resource.allowed", null);

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        r0.<org.apache.batik.bridge.NoLoadExternalResourceSecurity: java.lang.SecurityException se> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.bridge.NoLoadExternalResourceSecurity: java.lang.String ERROR_NO_EXTERNAL_RESOURCE_ALLOWED> = "NoLoadExternalResourceSecurity.error.no.external.resource.allowed";

        return;
    }
}
