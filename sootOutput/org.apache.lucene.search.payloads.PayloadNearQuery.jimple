public class org.apache.lucene.search.payloads.PayloadNearQuery extends org.apache.lucene.search.spans.SpanNearQuery
{
    protected java.lang.String fieldName;
    protected org.apache.lucene.search.payloads.PayloadFunction function;

    public void <init>(org.apache.lucene.search.spans.SpanQuery[], int, boolean)
    {
        org.apache.lucene.search.payloads.PayloadNearQuery r0;
        int i0;
        org.apache.lucene.search.spans.SpanQuery[] r1;
        org.apache.lucene.search.payloads.AveragePayloadFunction $r2;
        boolean z0;

        r0 := @this: org.apache.lucene.search.payloads.PayloadNearQuery;

        r1 := @parameter0: org.apache.lucene.search.spans.SpanQuery[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = new org.apache.lucene.search.payloads.AveragePayloadFunction;

        specialinvoke $r2.<org.apache.lucene.search.payloads.AveragePayloadFunction: void <init>()>();

        specialinvoke r0.<org.apache.lucene.search.payloads.PayloadNearQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[],int,boolean,org.apache.lucene.search.payloads.PayloadFunction)>(r1, i0, z0, $r2);

        return;
    }

    public void <init>(org.apache.lucene.search.spans.SpanQuery[], int, boolean, org.apache.lucene.search.payloads.PayloadFunction)
    {
        org.apache.lucene.search.payloads.PayloadFunction r4;
        org.apache.lucene.search.payloads.PayloadNearQuery r0;
        int i0;
        org.apache.lucene.search.spans.SpanQuery[] r1;
        java.lang.String $r3;
        org.apache.lucene.search.spans.SpanQuery $r2;
        boolean z0;

        r0 := @this: org.apache.lucene.search.payloads.PayloadNearQuery;

        r1 := @parameter0: org.apache.lucene.search.spans.SpanQuery[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r4 := @parameter3: org.apache.lucene.search.payloads.PayloadFunction;

        specialinvoke r0.<org.apache.lucene.search.spans.SpanNearQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[],int,boolean)>(r1, i0, z0);

        $r2 = r1[0];

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.spans.SpanQuery: java.lang.String getField()>();

        r0.<org.apache.lucene.search.payloads.PayloadNearQuery: java.lang.String fieldName> = $r3;

        r0.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadFunction function> = r4;

        return;
    }

    public org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.IndexSearcher) throws java.io.IOException
    {
        org.apache.lucene.search.payloads.PayloadNearQuery r1;
        org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanWeight $r0;
        org.apache.lucene.search.IndexSearcher r2;

        r1 := @this: org.apache.lucene.search.payloads.PayloadNearQuery;

        r2 := @parameter0: org.apache.lucene.search.IndexSearcher;

        $r0 = new org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanWeight;

        specialinvoke $r0.<org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanWeight: void <init>(org.apache.lucene.search.payloads.PayloadNearQuery,org.apache.lucene.search.spans.SpanQuery,org.apache.lucene.search.IndexSearcher)>(r1, r1, r2);

        return $r0;
    }

    public org.apache.lucene.search.payloads.PayloadNearQuery clone()
    {
        org.apache.lucene.search.Query $r8;
        org.apache.lucene.search.spans.SpanQuery[] r2;
        java.util.List $r1, $r5;
        org.apache.lucene.search.payloads.PayloadFunction $r4;
        org.apache.lucene.search.payloads.PayloadNearQuery r0, $r3;
        int $i0, $i1, i2;
        float $f0;
        java.lang.Object $r6;
        org.apache.lucene.search.spans.SpanQuery $r7, $r9;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.payloads.PayloadNearQuery;

        $r1 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: java.util.List clauses>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (org.apache.lucene.search.spans.SpanQuery)[$i0];

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        $r5 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: java.util.List clauses>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = (org.apache.lucene.search.spans.SpanQuery) $r6;

        $r8 = virtualinvoke $r7.<org.apache.lucene.search.spans.SpanQuery: org.apache.lucene.search.Query clone()>();

        $r9 = (org.apache.lucene.search.spans.SpanQuery) $r8;

        r2[i2] = $r9;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = new org.apache.lucene.search.payloads.PayloadNearQuery;

        $i1 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: int slop>;

        $z0 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: boolean inOrder>;

        $r4 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        specialinvoke $r3.<org.apache.lucene.search.payloads.PayloadNearQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[],int,boolean,org.apache.lucene.search.payloads.PayloadFunction)>(r2, $i1, $z0, $r4);

        $f0 = virtualinvoke r0.<org.apache.lucene.search.payloads.PayloadNearQuery: float getBoost()>();

        virtualinvoke $r3.<org.apache.lucene.search.payloads.PayloadNearQuery: void setBoost(float)>($f0);

        return $r3;
    }

    public java.lang.String toString(java.lang.String)
    {
        java.util.Iterator $r3;
        java.util.List $r2;
        org.apache.lucene.search.payloads.PayloadNearQuery r1;
        int $i0;
        float $f0;
        java.lang.StringBuilder $r0;
        java.lang.Object $r6;
        java.lang.String $r4, $r5, r8, $r9;
        org.apache.lucene.search.spans.SpanQuery r7;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.search.payloads.PayloadNearQuery;

        r8 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("payloadNear([");

        $r2 = r1.<org.apache.lucene.search.payloads.PayloadNearQuery: java.util.List clauses>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.lucene.search.spans.SpanQuery) $r6;

        $r9 = virtualinvoke r7.<org.apache.lucene.search.spans.SpanQuery: java.lang.String toString(java.lang.String)>(r8);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");

        $i0 = r1.<org.apache.lucene.search.payloads.PayloadNearQuery: int slop>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $z1 = r1.<org.apache.lucene.search.payloads.PayloadNearQuery: boolean inOrder>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $f0 = virtualinvoke r1.<org.apache.lucene.search.payloads.PayloadNearQuery: float getBoost()>();

        $r4 = staticinvoke <org.apache.lucene.util.ToStringUtils: java.lang.String boost(float)>($f0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int hashCode()
    {
        org.apache.lucene.search.payloads.PayloadFunction $r3, $r4;
        org.apache.lucene.search.payloads.PayloadNearQuery r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.lucene.search.payloads.PayloadNearQuery;

        $i0 = specialinvoke r0.<org.apache.lucene.search.spans.SpanNearQuery: int hashCode()>();

        $i1 = 31 * $i0;

        $r1 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: java.lang.String fieldName>;

        if $r1 != null goto label1;

        $i5 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: java.lang.String fieldName>;

        $i5 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        $i4 = $i1 + $i5;

        $i2 = 31 * $i4;

        $r3 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        if $r3 != null goto label3;

        $i6 = 0;

        goto label4;

     label3:
        $r4 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        $i6 = virtualinvoke $r4.<org.apache.lucene.search.payloads.PayloadFunction: int hashCode()>();

     label4:
        $i3 = $i2 + $i6;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.search.payloads.PayloadFunction $r8, $r9, $r10, $r11;
        java.lang.String $r5, $r6, $r7, $r12;
        boolean $z0, $z1, $z2;
        org.apache.lucene.search.payloads.PayloadNearQuery r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.lucene.search.payloads.PayloadNearQuery;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<org.apache.lucene.search.spans.SpanNearQuery: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.lucene.search.payloads.PayloadNearQuery) r1;

        $r5 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: java.lang.String fieldName>;

        if $r5 != null goto label4;

        $r12 = r4.<org.apache.lucene.search.payloads.PayloadNearQuery: java.lang.String fieldName>;

        if $r12 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: java.lang.String fieldName>;

        $r6 = r4.<org.apache.lucene.search.payloads.PayloadNearQuery: java.lang.String fieldName>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        if $r8 != null goto label6;

        $r11 = r4.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        if $r11 == null goto label7;

        return 0;

     label6:
        $r10 = r0.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        $r9 = r4.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        $z2 = virtualinvoke $r10.<org.apache.lucene.search.payloads.PayloadFunction: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public volatile org.apache.lucene.search.spans.SpanNearQuery clone()
    {
        org.apache.lucene.search.payloads.PayloadNearQuery r0, $r1;

        r0 := @this: org.apache.lucene.search.payloads.PayloadNearQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadNearQuery clone()>();

        return $r1;
    }

    public volatile org.apache.lucene.search.Query clone()
    {
        org.apache.lucene.search.payloads.PayloadNearQuery r0, $r1;

        r0 := @this: org.apache.lucene.search.payloads.PayloadNearQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadNearQuery clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.search.payloads.PayloadNearQuery r0, $r1;

        r0 := @this: org.apache.lucene.search.payloads.PayloadNearQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.payloads.PayloadNearQuery clone()>();

        return $r1;
    }
}
