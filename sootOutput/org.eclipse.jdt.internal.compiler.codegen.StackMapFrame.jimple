public class org.eclipse.jdt.internal.compiler.codegen.StackMapFrame extends java.lang.Object
{
    public static final int USED;
    public static final int SAME_FRAME;
    public static final int CHOP_FRAME;
    public static final int APPEND_FRAME;
    public static final int SAME_FRAME_EXTENDED;
    public static final int FULL_FRAME;
    public static final int SAME_LOCALS_1_STACK_ITEMS;
    public static final int SAME_LOCALS_1_STACK_ITEMS_EXTENDED;
    public int pc;
    public int numberOfStackItems;
    private int numberOfLocals;
    public int localIndex;
    public org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals;
    public org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems;
    private int numberOfDifferentLocals;
    public int tagBits;

    public void <init>(int)
    {
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0;
        int i0, $i2, $i4, $i6;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = $i2;

        $r1 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[i0];

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals> = $r1;

        $i4 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfLocals> = $i4;

        $i6 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = $i6;

        return;
    }

    public int getFrameType(org.eclipse.jdt.internal.compiler.codegen.StackMapFrame)
    {
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0, r1;
        byte $b4, $b5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int getOffsetDelta(org.eclipse.jdt.internal.compiler.codegen.StackMapFrame)>(r1);

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        tableswitch($i1)
        {
            case 0: goto label01;
            case 1: goto label08;
            default: goto label12;
        };

     label01:
        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals(org.eclipse.jdt.internal.compiler.codegen.StackMapFrame)>(r1);

        tableswitch($i3)
        {
            case -3: goto label06;
            case -2: goto label06;
            case -1: goto label06;
            case 0: goto label02;
            case 1: goto label05;
            case 2: goto label05;
            case 3: goto label05;
            default: goto label07;
        };

     label02:
        if $i0 > 63 goto label03;

        $b4 = 0;

        goto label04;

     label03:
        $b4 = 3;

     label04:
        return $b4;

     label05:
        return 2;

     label06:
        return 1;

     label07:
        goto label12;

     label08:
        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals(org.eclipse.jdt.internal.compiler.codegen.StackMapFrame)>(r1);

        tableswitch($i2)
        {
            case 0: goto label09;
            default: goto label12;
        };

     label09:
        if $i0 > 63 goto label10;

        $b5 = 5;

        goto label11;

     label10:
        $b5 = 6;

     label11:
        return $b5;

     label12:
        return 4;
    }

    public void addLocal(int, org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)
    {
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] $r1, $r2, $r4, $r5, $r6, $r7, $r8;
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0;
        int i0, i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        i1 := @parameter0: int;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        if $r1 != null goto label1;

        $i3 = i1 + 1;

        $r7 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[$i3];

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals> = $r7;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $r8[i1] = r3;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        i0 = lengthof $r2;

        if i1 < i0 goto label2;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $i2 = i1 + 1;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[$i2];

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals> = $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i0);

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $r4[i1] = r3;

     label3:
        return;
    }

    public void addStackItem(org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)
    {
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.IllegalArgumentException $r9;
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r1;
        int i0, $i1, $i2, $i3, $i4;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo r0;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("info cannot be null");

        throw $r9;

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        if $r2 != null goto label2;

        $r7 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[1];

        r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems> = $r7;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $r8[0] = r0;

        r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems> = 1;

        goto label4;

     label2:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        i0 = lengthof $r3;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        if $i1 != i0 goto label3;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $i4 = i0 + 1;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[$i4];

        r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems> = $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i0);

     label3:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        $i3 = $i2 + 1;

        r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems> = $i3;

        $r4[$i2] = r0;

     label4:
        return;
    }

    public void addStackItem(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0;
        int i0, $i1, $i2, $i3, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r5;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo $r4, $r9;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] $r1, $r2, $r3, $r6, $r7, $r8, $r10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        if $r1 != null goto label1;

        $r8 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[1];

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems> = $r8;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $r9 = new org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo;

        specialinvoke $r9.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: void <init>(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r5);

        $r10[0] = $r9;

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems> = 1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        i0 = lengthof $r2;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        if $i1 != i0 goto label2;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $i4 = i0 + 1;

        $r6 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[$i4];

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems> = $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, 0, i0);

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems> = $i3;

        $r4 = new org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: void <init>(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r5);

        $r3[$i2] = $r4;

     label3:
        return;
    }

    public org.eclipse.jdt.internal.compiler.codegen.StackMapFrame duplicate()
    {
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r1, $r15;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, $i9, $i11;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo $r7, $r9, r12, $r14;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] $r2, $r3, $r4, $r5, $r6, $r8, $r10, $r11, $r13;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        $r15 = new org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $i0 = lengthof $r2;

        specialinvoke $r15.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: void <init>(int)>($i0);

        $i9 = (int) -1;

        $r15.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfLocals> = $i9;

        $i11 = (int) -1;

        $r15.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = $i11;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int pc>;

        $r15.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int pc> = $i1;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        $r15.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems> = $i2;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        if $r3 != null goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $i4 = lengthof $r4;

     label2:
        i5 = $i4;

        if $i4 == 0 goto label6;

        $r10 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[$i4];

        $r15.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals> = $r10;

        i6 = 0;

        goto label5;

     label3:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        r12 = $r11[i6];

        if r12 == null goto label4;

        $r13 = $r15.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $r14 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo duplicate()>();

        $r13[i6] = $r14;

     label4:
        i6 = i6 + 1;

     label5:
        if i6 < i5 goto label3;

     label6:
        $i3 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        if $i3 == 0 goto label9;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[$i3];

        $r15.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems> = $r5;

        i7 = 0;

        goto label8;

     label7:
        $r8 = $r15.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $r7 = $r6[i7];

        $r9 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo duplicate()>();

        $r8[i7] = $r9;

        i7 = i7 + 1;

     label8:
        if i7 < $i3 goto label7;

     label9:
        return $r15;
    }

    public int numberOfDifferentLocals(org.eclipse.jdt.internal.compiler.codegen.StackMapFrame)
    {
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo r4, $r5, $r6, $r7, $r8, r9, r10, r11;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] r2, r3;
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0, r1;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, $i24, $i26;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals>;

        $i24 = (int) -1;

        if $i0 == $i24 goto label01;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals>;

        return $i11;

     label01:
        if r1 != null goto label02;

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = 0;

        return 0;

     label02:
        r2 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        if r2 != null goto label03;

        $i12 = 0;

        goto label04;

     label03:
        $i12 = lengthof r2;

     label04:
        i1 = $i12;

        if r3 != null goto label05;

        $i13 = 0;

        goto label06;

     label05:
        $i13 = lengthof r3;

     label06:
        i2 = $i13;

        $i3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int getNumberOfLocals()>();

        $i4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int getNumberOfLocals()>();

        i14 = 0;

        if $i3 != 0 goto label13;

        if $i4 == 0 goto label45;

        i14 = $i4;

        i15 = 0;

        i16 = 0;

        goto label12;

     label07:
        $r7 = r3[i16];

        if $r7 == null goto label10;

        $r8 = r3[i16];

        $i10 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: int id()>();

        tableswitch($i10)
        {
            case 7: goto label08;
            case 8: goto label08;
            default: goto label09;
        };

     label08:
        i16 = i16 + 1;

     label09:
        i15 = i15 + 1;

        goto label11;

     label10:
        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = 2147483647;

        return 2147483647;

     label11:
        i16 = i16 + 1;

     label12:
        if i16 >= i2 goto label45;

        if i15 < $i4 goto label07;

        goto label45;

     label13:
        if $i4 != 0 goto label20;

        i17 = 0;

        i14 = neg $i3;

        i18 = 0;

        goto label19;

     label14:
        $r5 = r2[i18];

        if $r5 == null goto label17;

        $r6 = r2[i18];

        $i9 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: int id()>();

        tableswitch($i9)
        {
            case 7: goto label15;
            case 8: goto label15;
            default: goto label16;
        };

     label15:
        i18 = i18 + 1;

     label16:
        i17 = i17 + 1;

        goto label18;

     label17:
        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = 2147483647;

        return 2147483647;

     label18:
        i18 = i18 + 1;

     label19:
        if i18 >= i1 goto label45;

        if i17 < $i3 goto label14;

        goto label45;

     label20:
        i19 = 0;

        i20 = 0;

        i21 = 0;

        i22 = 0;

        goto label32;

     label21:
        r9 = r3[i20];

        if r9 == null goto label23;

        i21 = i21 + 1;

        $i8 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: int id()>();

        tableswitch($i8)
        {
            case 7: goto label22;
            case 8: goto label22;
            default: goto label23;
        };

     label22:
        i20 = i20 + 1;

     label23:
        if i19 >= i1 goto label28;

        if i22 >= $i3 goto label28;

        r4 = r2[i19];

        if r4 == null goto label25;

        i22 = i22 + 1;

        $i7 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: int id()>();

        tableswitch($i7)
        {
            case 7: goto label24;
            case 8: goto label24;
            default: goto label25;
        };

     label24:
        i19 = i19 + 1;

     label25:
        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: boolean equals(org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo,org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)>(r4, r9);

        if $z0 == 0 goto label26;

        if i19 != i20 goto label26;

        if 0 == 0 goto label27;

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = 2147483647;

        return 2147483647;

     label26:
        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = 2147483647;

        return 2147483647;

     label27:
        i19 = i19 + 1;

        goto label31;

     label28:
        if r9 == null goto label29;

        i14 = 1;

        goto label30;

     label29:
        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = 2147483647;

        return 2147483647;

     label30:
        i20 = i20 + 1;

        goto label33;

     label31:
        i20 = i20 + 1;

     label32:
        if i20 >= i2 goto label33;

        if i21 < $i4 goto label21;

     label33:
        if i21 >= $i4 goto label39;

        goto label38;

     label34:
        r10 = r3[i20];

        if r10 != null goto label35;

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = 2147483647;

        return 2147483647;

     label35:
        i14 = i14 + 1;

        i21 = i21 + 1;

        $i6 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: int id()>();

        tableswitch($i6)
        {
            case 7: goto label36;
            case 8: goto label36;
            default: goto label37;
        };

     label36:
        i20 = i20 + 1;

     label37:
        i20 = i20 + 1;

     label38:
        if i20 >= i2 goto label45;

        if i21 < $i4 goto label34;

        goto label45;

     label39:
        if i22 >= $i3 goto label45;

        i14 = neg i14;

        goto label44;

     label40:
        r11 = r2[i19];

        if r11 != null goto label41;

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = 2147483647;

        return 2147483647;

     label41:
        $i26 = (int) -1;

        i14 = i14 + $i26;

        i22 = i22 + 1;

        $i5 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: int id()>();

        tableswitch($i5)
        {
            case 7: goto label42;
            case 8: goto label42;
            default: goto label43;
        };

     label42:
        i19 = i19 + 1;

     label43:
        i19 = i19 + 1;

     label44:
        if i19 >= i1 goto label45;

        if i22 < $i3 goto label40;

     label45:
        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfDifferentLocals> = i14;

        return i14;
    }

    public int getNumberOfLocals()
    {
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] $r1, $r2, $r3, $r5;
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0;
        int $i0, i1, $i2, $i3, i4, $i5, i6, $i8;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo $r4, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfLocals>;

        $i8 = (int) -1;

        if $i0 == $i8 goto label1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfLocals>;

        return $i3;

     label1:
        i4 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        if $r1 != null goto label2;

        $i5 = 0;

        goto label3;

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $i5 = lengthof $r2;

     label3:
        i1 = $i5;

        i6 = 0;

        goto label8;

     label4:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $r4 = $r3[i6];

        if $r4 == null goto label7;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $r6 = $r5[i6];

        $i2 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: int id()>();

        tableswitch($i2)
        {
            case 7: goto label5;
            case 8: goto label5;
            default: goto label6;
        };

     label5:
        i6 = i6 + 1;

     label6:
        i4 = i4 + 1;

     label7:
        i6 = i6 + 1;

     label8:
        if i6 < i1 goto label4;

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfLocals> = i4;

        return i4;
    }

    public int getOffsetDelta(org.eclipse.jdt.internal.compiler.codegen.StackMapFrame)
    {
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        if r0 != null goto label1;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int pc>;

        return $i4;

     label1:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int pc>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label2;

        $i5 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int pc>;

        goto label3;

     label2:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int pc>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int pc>;

        $i3 = $i2 - $i1;

        $i5 = $i3 - 1;

     label3:
        return $i5;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r1;
        java.lang.String $r2;
        java.lang.StringBuffer $r0;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: void printFrame(java.lang.StringBuffer,org.eclipse.jdt.internal.compiler.codegen.StackMapFrame)>($r0, r1);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        return $r2;
    }

    private void printFrame(java.lang.StringBuffer, org.eclipse.jdt.internal.compiler.codegen.StackMapFrame)
    {
        java.lang.String[] $r4;
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0, r8;
        java.lang.StringBuffer r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r5, $r6, $r7, $r10, $r12, $r13;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] $r1, $r2, $r9, $r11;

        r8 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        r3 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        if $r1 != null goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $i4 = lengthof $r2;

     label2:
        $r4 = newarray (java.lang.String)[5];

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int pc>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r4[0] = $r5;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int getNumberOfLocals()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r4[1] = $r6;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r4[2] = $r7;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $r10 = specialinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: java.lang.String print(org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[],int)>($r9, $i4);

        $r4[3] = $r10;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        $r12 = specialinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: java.lang.String print(org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[],int)>($r11, $i3);

        $r4[4] = $r12;

        $r13 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("[pc : {0} locals: {1} stack items: {2}\nlocals: {3}\nstack: {4}\n]", $r4);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        return;
    }

    private java.lang.String print(org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[], int)
    {
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r4;
        java.lang.StringBuffer $r0;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] r1;
        java.lang.String $r2;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo $r3;

        r4 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[];

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        if r1 == null goto label6;

        i1 = 0;

        goto label5;

     label1:
        if i1 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label2:
        $r3 = r1[i1];

        if $r3 != null goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("top");

        goto label4;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label1;

     label6:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        return $r2;
    }

    public void putLocal(int, org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)
    {
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] $r1, $r2, $r4, $r5, $r6, $r7, $r8;
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0;
        int i0, i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        i1 := @parameter0: int;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        if $r1 != null goto label1;

        $i3 = i1 + 1;

        $r7 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[$i3];

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals> = $r7;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $r8[i1] = r3;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        i0 = lengthof $r2;

        if i1 < i0 goto label2;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $i2 = i1 + 1;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)[$i2];

        r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals> = $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i0);

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $r4[i1] = r3;

     label3:
        return;
    }

    public void replaceWithElementType()
    {
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] $r1, $r4;
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0;
        int $i0, $i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        $i1 = $i0 - 1;

        r2 = $r1[$i1];

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo duplicate()>();

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: void replaceWithElementType()>();

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] stackItems>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int numberOfStackItems>;

        $i3 = $i2 - 1;

        $r4[$i3] = $r3;

        return;
    }

    public int getIndexOfDifferentLocals(int)
    {
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r0;
        int $i0, i1, i2, $i4, $i6;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        i1 := @parameter0: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        $i0 = lengthof $r1;

        i2 = $i0 - 1;

        goto label4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo[] locals>;

        r3 = $r2[i2];

        if r3 != null goto label2;

        goto label3;

     label2:
        $i4 = (int) -1;

        i1 = i1 + $i4;

        if i1 != 0 goto label3;

        return i2;

     label3:
        $i6 = (int) -1;

        i2 = i2 + $i6;

     label4:
        if i2 >= 0 goto label1;

        return 0;
    }

    private boolean equals(org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo, org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo)
    {
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrame r2;
        org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo r0, r1;
        boolean $z0;

        r2 := @this: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo;

        if r0 != null goto label2;

        if r1 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        if r1 != null goto label3;

        return 0;

     label3:
        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int SAME_LOCALS_1_STACK_ITEMS_EXTENDED> = 6;

        <org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int SAME_LOCALS_1_STACK_ITEMS> = 5;

        <org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int FULL_FRAME> = 4;

        <org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int SAME_FRAME_EXTENDED> = 3;

        <org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int APPEND_FRAME> = 2;

        <org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int CHOP_FRAME> = 1;

        <org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int SAME_FRAME> = 0;

        <org.eclipse.jdt.internal.compiler.codegen.StackMapFrame: int USED> = 1;

        return;
    }
}
