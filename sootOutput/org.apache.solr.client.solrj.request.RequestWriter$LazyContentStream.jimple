public class org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream extends java.lang.Object implements org.apache.solr.common.util.ContentStream
{
    org.apache.solr.common.util.ContentStream contentStream;
    org.apache.solr.client.solrj.request.UpdateRequest req;
    final org.apache.solr.client.solrj.request.RequestWriter this$0;

    public void <init>(org.apache.solr.client.solrj.request.RequestWriter, org.apache.solr.client.solrj.request.UpdateRequest)
    {
        org.apache.solr.client.solrj.request.RequestWriter r1;
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream r0;
        org.apache.solr.client.solrj.request.UpdateRequest r2;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        r1 := @parameter0: org.apache.solr.client.solrj.request.RequestWriter;

        r2 := @parameter1: org.apache.solr.client.solrj.request.UpdateRequest;

        r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.client.solrj.request.RequestWriter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.common.util.ContentStream contentStream> = null;

        r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.client.solrj.request.UpdateRequest req> = null;

        r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.client.solrj.request.UpdateRequest req> = r2;

        return;
    }

    private org.apache.solr.common.util.ContentStream getDelegate()
    {
        org.apache.solr.client.solrj.request.RequestWriter $r4;
        java.io.IOException $r6;
        java.lang.RuntimeException $r7;
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream r0;
        org.apache.solr.common.util.ContentStream $r1, $r2, $r5;
        org.apache.solr.client.solrj.request.UpdateRequest $r3;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        $r1 = r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.common.util.ContentStream contentStream>;

        if $r1 != null goto label4;

     label1:
        $r4 = r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.client.solrj.request.RequestWriter this$0>;

        $r3 = r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.client.solrj.request.UpdateRequest req>;

        $r5 = virtualinvoke $r4.<org.apache.solr.client.solrj.request.RequestWriter: org.apache.solr.common.util.ContentStream getContentStream(org.apache.solr.client.solrj.request.UpdateRequest)>($r3);

        r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.common.util.ContentStream contentStream> = $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to write xml into a stream", $r6);

        throw $r7;

     label4:
        $r2 = r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.common.util.ContentStream contentStream>;

        return $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        java.lang.String $r2;
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream r0;
        org.apache.solr.common.util.ContentStream $r1;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        $r1 = specialinvoke r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.common.util.ContentStream getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.apache.solr.common.util.ContentStream: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getSourceInfo()
    {
        java.lang.String $r2;
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream r0;
        org.apache.solr.common.util.ContentStream $r1;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        $r1 = specialinvoke r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.common.util.ContentStream getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.apache.solr.common.util.ContentStream: java.lang.String getSourceInfo()>();

        return $r2;
    }

    public java.lang.String getContentType()
    {
        org.apache.solr.client.solrj.request.RequestWriter $r1;
        java.lang.String $r2;
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream r0;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        $r1 = r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.client.solrj.request.RequestWriter this$0>;

        $r2 = virtualinvoke $r1.<org.apache.solr.client.solrj.request.RequestWriter: java.lang.String getUpdateContentType()>();

        return $r2;
    }

    public java.lang.Long getSize()
    {
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream r0;
        java.lang.Long $r2;
        org.apache.solr.common.util.ContentStream $r1;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        $r1 = specialinvoke r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.common.util.ContentStream getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.apache.solr.common.util.ContentStream: java.lang.Long getSize()>();

        return $r2;
    }

    public java.io.InputStream getStream() throws java.io.IOException
    {
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream r0;
        org.apache.solr.common.util.ContentStream $r1;
        java.io.InputStream $r2;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        $r1 = specialinvoke r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.common.util.ContentStream getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.apache.solr.common.util.ContentStream: java.io.InputStream getStream()>();

        return $r2;
    }

    public java.io.Reader getReader() throws java.io.IOException
    {
        java.io.Reader $r2;
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream r0;
        org.apache.solr.common.util.ContentStream $r1;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        $r1 = specialinvoke r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.common.util.ContentStream getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.apache.solr.common.util.ContentStream: java.io.Reader getReader()>();

        return $r2;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream r0;
        org.apache.solr.client.solrj.request.UpdateRequest $r2;
        org.apache.solr.client.solrj.request.RequestWriter $r3;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        r1 := @parameter0: java.io.OutputStream;

        $r3 = r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.client.solrj.request.RequestWriter this$0>;

        $r2 = r0.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: org.apache.solr.client.solrj.request.UpdateRequest req>;

        virtualinvoke $r3.<org.apache.solr.client.solrj.request.RequestWriter: void write(org.apache.solr.client.solrj.SolrRequest,java.io.OutputStream)>($r2, r1);

        return;
    }
}
