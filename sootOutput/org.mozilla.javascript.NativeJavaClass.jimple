public class org.mozilla.javascript.NativeJavaClass extends org.mozilla.javascript.NativeJavaObject implements org.mozilla.javascript.Function
{
    static final long serialVersionUID;
    private java.util.Hashtable staticFieldAndMethods;

    public void <init>()
    {
        org.mozilla.javascript.NativeJavaClass r0;

        r0 := @this: org.mozilla.javascript.NativeJavaClass;

        specialinvoke r0.<org.mozilla.javascript.NativeJavaObject: void <init>()>();

        return;
    }

    public void <init>(org.mozilla.javascript.Scriptable, java.lang.Class)
    {
        org.mozilla.javascript.NativeJavaClass r0;
        java.lang.Class r2;
        org.mozilla.javascript.Scriptable r1;

        r0 := @this: org.mozilla.javascript.NativeJavaClass;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.mozilla.javascript.NativeJavaObject: void <init>()>();

        r0.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.Scriptable parent> = r1;

        r0.<org.mozilla.javascript.NativeJavaClass: java.lang.Object javaObject> = r2;

        virtualinvoke r0.<org.mozilla.javascript.NativeJavaClass: void initMembers()>();

        return;
    }

    protected void initMembers()
    {
        org.mozilla.javascript.JavaMembers $r4, $r5;
        org.mozilla.javascript.Scriptable $r3;
        org.mozilla.javascript.NativeJavaClass r0;
        java.lang.Object $r1;
        java.lang.Class r2;
        java.util.Hashtable $r6;

        r0 := @this: org.mozilla.javascript.NativeJavaClass;

        $r1 = r0.<org.mozilla.javascript.NativeJavaClass: java.lang.Object javaObject>;

        r2 = (java.lang.Class) $r1;

        $r3 = r0.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.Scriptable parent>;

        $r4 = staticinvoke <org.mozilla.javascript.JavaMembers: org.mozilla.javascript.JavaMembers lookupClass(org.mozilla.javascript.Scriptable,java.lang.Class,java.lang.Class)>($r3, r2, r2);

        r0.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.JavaMembers members> = $r4;

        $r5 = r0.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.JavaMembers members>;

        $r6 = virtualinvoke $r5.<org.mozilla.javascript.JavaMembers: java.util.Hashtable getFieldAndMethodsObjects(org.mozilla.javascript.Scriptable,java.lang.Object,boolean)>(r0, r2, 1);

        r0.<org.mozilla.javascript.NativeJavaClass: java.util.Hashtable staticFieldAndMethods> = $r6;

        return;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.NativeJavaClass r0;

        r0 := @this: org.mozilla.javascript.NativeJavaClass;

        return "JavaClass";
    }

    public boolean has(java.lang.String, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.JavaMembers $r2;
        org.mozilla.javascript.Scriptable r3;
        org.mozilla.javascript.NativeJavaClass r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.NativeJavaClass;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        $r2 = r0.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.JavaMembers members>;

        $z0 = virtualinvoke $r2.<org.mozilla.javascript.JavaMembers: boolean has(java.lang.String,boolean)>(r1, 1);

        return $z0;
    }

    public java.lang.Object get(java.lang.String, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.JavaMembers $r3, $r8, $r11;
        java.lang.String r0;
        java.util.Hashtable $r2, $r12;
        boolean $z0, $z1;
        org.mozilla.javascript.NativeJavaClass r1, $r6;
        java.lang.RuntimeException $r9;
        org.mozilla.javascript.Scriptable $r7, r14;
        java.lang.Class $r4, $r5;
        java.lang.Object $r10, $r13, r15, r16;

        r1 := @this: org.mozilla.javascript.NativeJavaClass;

        r0 := @parameter0: java.lang.String;

        r14 := @parameter1: org.mozilla.javascript.Scriptable;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("prototype");

        if $z0 == 0 goto label1;

        return null;

     label1:
        r15 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        $r2 = r1.<org.mozilla.javascript.NativeJavaClass: java.util.Hashtable staticFieldAndMethods>;

        if $r2 == null goto label2;

        $r12 = r1.<org.mozilla.javascript.NativeJavaClass: java.util.Hashtable staticFieldAndMethods>;

        $r13 = virtualinvoke $r12.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        if $r13 == null goto label2;

        return $r13;

     label2:
        $r3 = r1.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.JavaMembers members>;

        $z1 = virtualinvoke $r3.<org.mozilla.javascript.JavaMembers: boolean has(java.lang.String,boolean)>(r0, 1);

        if $z1 == 0 goto label3;

        $r11 = r1.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.JavaMembers members>;

        $r10 = r1.<org.mozilla.javascript.NativeJavaClass: java.lang.Object javaObject>;

        r16 = virtualinvoke $r11.<org.mozilla.javascript.JavaMembers: java.lang.Object get(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,boolean)>(r1, r0, $r10, 1);

        goto label5;

     label3:
        $r4 = virtualinvoke r1.<org.mozilla.javascript.NativeJavaClass: java.lang.Class getClassObject()>();

        $r5 = staticinvoke <org.mozilla.javascript.NativeJavaClass: java.lang.Class findNestedClass(java.lang.Class,java.lang.String)>($r4, r0);

        if $r5 != null goto label4;

        $r8 = r1.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.JavaMembers members>;

        $r9 = virtualinvoke $r8.<org.mozilla.javascript.JavaMembers: java.lang.RuntimeException reportMemberNotFound(java.lang.String)>(r0);

        throw $r9;

     label4:
        $r6 = new org.mozilla.javascript.NativeJavaClass;

        $r7 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r1);

        specialinvoke $r6.<org.mozilla.javascript.NativeJavaClass: void <init>(org.mozilla.javascript.Scriptable,java.lang.Class)>($r7, $r5);

        virtualinvoke $r6.<org.mozilla.javascript.NativeJavaClass: void setParentScope(org.mozilla.javascript.Scriptable)>(r1);

        r16 = $r6;

     label5:
        return r16;
    }

    public void put(java.lang.String, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.JavaMembers $r4;
        org.mozilla.javascript.Scriptable r5;
        org.mozilla.javascript.NativeJavaClass r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.NativeJavaClass;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.Object;

        $r4 = r0.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.JavaMembers members>;

        $r3 = r0.<org.mozilla.javascript.NativeJavaClass: java.lang.Object javaObject>;

        virtualinvoke $r4.<org.mozilla.javascript.JavaMembers: void put(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,java.lang.Object,boolean)>(r0, r1, $r3, r2, 1);

        return;
    }

    public java.lang.Object[] getIds()
    {
        org.mozilla.javascript.NativeJavaClass r0;
        org.mozilla.javascript.JavaMembers $r1;
        java.lang.Object[] $r2;

        r0 := @this: org.mozilla.javascript.NativeJavaClass;

        $r1 = r0.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.JavaMembers members>;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.JavaMembers: java.lang.Object[] getIds(boolean)>(1);

        return $r2;
    }

    public java.lang.Class getClassObject()
    {
        org.mozilla.javascript.NativeJavaClass r0;
        java.lang.Object $r1;
        java.lang.Class $r2;

        r0 := @this: org.mozilla.javascript.NativeJavaClass;

        $r1 = specialinvoke r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object unwrap()>();

        $r2 = (java.lang.Class) $r1;

        return $r2;
    }

    public java.lang.Object getDefaultValue(java.lang.Class)
    {
        java.lang.Double $r6;
        org.mozilla.javascript.NativeJavaClass r1;
        java.lang.Boolean $r7;
        java.lang.Class r0, $r3, $r4, $r5;
        java.lang.String $r2;

        r1 := @this: org.mozilla.javascript.NativeJavaClass;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label1;

        $r3 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r0 != $r3 goto label2;

     label1:
        $r2 = virtualinvoke r1.<org.mozilla.javascript.NativeJavaClass: java.lang.String toString()>();

        return $r2;

     label2:
        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class BooleanClass>;

        if r0 != $r4 goto label3;

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r7;

     label3:
        $r5 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        if r0 != $r5 goto label4;

        $r6 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r6;

     label4:
        return r1;
    }

    public java.lang.Object call(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r0;
        int $i0;
        boolean $z0, $z1, $z2;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.NativeJavaClass r1;
        org.mozilla.javascript.Wrapper $r8;
        org.mozilla.javascript.Scriptable r3, $r7, r10, r11, $r12;
        java.lang.Object $r4, $r6, $r9;
        java.lang.Class $r5;

        r1 := @this: org.mozilla.javascript.NativeJavaClass;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r10 := @parameter2: org.mozilla.javascript.Scriptable;

        r0 := @parameter3: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 != 1 goto label3;

        $r4 = r0[0];

        $z0 = $r4 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r1.<org.mozilla.javascript.NativeJavaClass: java.lang.Class getClassObject()>();

        $r6 = r0[0];

        r11 = (org.mozilla.javascript.Scriptable) $r6;

     label1:
        $z1 = r11 instanceof org.mozilla.javascript.Wrapper;

        if $z1 == 0 goto label2;

        $r8 = (org.mozilla.javascript.Wrapper) r11;

        $r9 = interfaceinvoke $r8.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        $z2 = virtualinvoke $r5.<java.lang.Class: boolean isInstance(java.lang.Object)>($r9);

        if $z2 == 0 goto label2;

        return r11;

     label2:
        $r7 = interfaceinvoke r11.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        r11 = $r7;

        if $r7 != null goto label1;

     label3:
        $r12 = virtualinvoke r1.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r3, r0);

        return $r12;
    }

    public org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.JavaMembers $r10;
        org.mozilla.javascript.MemberBox $r12;
        java.lang.Object[] $r5, r6;
        org.mozilla.javascript.MemberBox[] r19;
        int $i0, $i1;
        org.mozilla.javascript.Function r21;
        java.lang.String $r14, $r15, $r18, r20, $r22;
        boolean $z0, $z1;
        org.mozilla.javascript.Context r8;
        org.mozilla.javascript.EvaluatorException $r16, $r23;
        org.mozilla.javascript.NativeJavaClass r0;
        java.lang.Exception $r17;
        org.mozilla.javascript.Scriptable $r2, $r9, r11, $r13;
        java.lang.Class $r1;
        java.lang.Object $r3, $r4, $r7;

        r0 := @this: org.mozilla.javascript.NativeJavaClass;

        r8 := @parameter0: org.mozilla.javascript.Context;

        r11 := @parameter1: org.mozilla.javascript.Scriptable;

        r6 := @parameter2: java.lang.Object[];

        $r1 = virtualinvoke r0.<org.mozilla.javascript.NativeJavaClass: java.lang.Class getClassObject()>();

        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isInterface(int)>($i0);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        if $z1 != 0 goto label2;

        $r10 = r0.<org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.JavaMembers members>;

        r19 = $r10.<org.mozilla.javascript.JavaMembers: org.mozilla.javascript.MemberBox[] ctors>;

        $i1 = staticinvoke <org.mozilla.javascript.NativeJavaMethod: int findFunction(org.mozilla.javascript.Context,org.mozilla.javascript.MemberBox[],java.lang.Object[])>(r8, r19, r6);

        if $i1 >= 0 goto label1;

        $r14 = staticinvoke <org.mozilla.javascript.NativeJavaMethod: java.lang.String scriptSignature(java.lang.Object[])>(r6);

        $r15 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r16 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError2(java.lang.String,java.lang.Object,java.lang.Object)>("msg.no.java.ctor", $r15, $r14);

        throw $r16;

     label1:
        $r12 = r19[$i1];

        $r13 = staticinvoke <org.mozilla.javascript.NativeJavaClass: org.mozilla.javascript.Scriptable constructSpecific(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.MemberBox)>(r8, r11, r6, $r12);

        return $r13;

     label2:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r0);

        r20 = "";

     label3:
        $r3 = interfaceinvoke $r2.<org.mozilla.javascript.Scriptable: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>("JavaAdapter", $r2);

        $r4 = <org.mozilla.javascript.NativeJavaClass: java.lang.Object NOT_FOUND>;

        if $r3 == $r4 goto label5;

        r21 = (org.mozilla.javascript.Function) $r3;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r0;

        $r7 = r6[0];

        $r5[1] = $r7;

        $r9 = interfaceinvoke r21.<org.mozilla.javascript.Function: org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r8, $r2, $r5);

     label4:
        return $r9;

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

        $r18 = virtualinvoke $r17.<java.lang.Exception: java.lang.String getMessage()>();

        if $r18 == null goto label7;

        r20 = $r18;

     label7:
        $r22 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r23 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError2(java.lang.String,java.lang.Object,java.lang.Object)>("msg.cant.instantiate", r20, $r22);

        throw $r23;

        catch java.lang.Exception from label3 to label4 with label6;
    }

    static org.mozilla.javascript.Scriptable constructSpecific(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.MemberBox)
    {
        org.mozilla.javascript.MemberBox r2;
        java.lang.Object[] r4, r13;
        int $i0, i1;
        org.mozilla.javascript.Context r6;
        java.lang.Class[] r3;
        org.mozilla.javascript.WrapFactory $r7;
        org.mozilla.javascript.Scriptable r0, $r1, $r8;
        java.lang.Object $r5, r9, $r11, $r12;
        java.lang.Class $r10;

        r6 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        r13 := @parameter2: java.lang.Object[];

        r2 := @parameter3: org.mozilla.javascript.MemberBox;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r0);

        r3 = r2.<org.mozilla.javascript.MemberBox: java.lang.Class[] argTypes>;

        r4 = r13;

        i1 = 0;

     label1:
        $i0 = lengthof r13;

        if i1 >= $i0 goto label4;

        r9 = r13[i1];

        $r10 = r3[i1];

        $r11 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>(r9, $r10);

        if $r11 == r9 goto label3;

        if r13 != r4 goto label2;

        $r12 = virtualinvoke r4.<java.lang.Object: java.lang.Object clone()>();

        r13 = (java.lang.Object[]) $r12;

     label2:
        r13[i1] = $r11;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r5 = virtualinvoke r2.<org.mozilla.javascript.MemberBox: java.lang.Object newInstance(java.lang.Object[])>(r13);

        $r7 = virtualinvoke r6.<org.mozilla.javascript.Context: org.mozilla.javascript.WrapFactory getWrapFactory()>();

        $r8 = virtualinvoke $r7.<org.mozilla.javascript.WrapFactory: org.mozilla.javascript.Scriptable wrapNewObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>(r6, $r1, $r5);

        return $r8;
    }

    public java.lang.String toString()
    {
        org.mozilla.javascript.NativeJavaClass r2;
        java.lang.StringBuffer $r0, $r1, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;

        r2 := @this: org.mozilla.javascript.NativeJavaClass;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[JavaClass ");

        $r3 = virtualinvoke r2.<org.mozilla.javascript.NativeJavaClass: java.lang.Class getClassObject()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public boolean hasInstance(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.NativeJavaClass r3;
        org.mozilla.javascript.Wrapper $r1;
        org.mozilla.javascript.Scriptable r0;
        java.lang.Object $r2;
        java.lang.Class $r4;
        boolean $z0, $z1, $z2;

        r3 := @this: org.mozilla.javascript.NativeJavaClass;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        $z0 = r0 instanceof org.mozilla.javascript.Wrapper;

        if $z0 == 0 goto label1;

        $z1 = r0 instanceof org.mozilla.javascript.NativeJavaClass;

        if $z1 != 0 goto label1;

        $r1 = (org.mozilla.javascript.Wrapper) r0;

        $r2 = interfaceinvoke $r1.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        $r4 = virtualinvoke r3.<org.mozilla.javascript.NativeJavaClass: java.lang.Class getClassObject()>();

        $z2 = virtualinvoke $r4.<java.lang.Class: boolean isInstance(java.lang.Object)>($r2);

        return $z2;

     label1:
        return 0;
    }

    private static java.lang.Class findNestedClass(java.lang.Class, java.lang.String)
    {
        java.lang.StringBuffer $r0, $r3, $r4, $r6;
        java.lang.Class r1, $r9, $r10;
        java.lang.String $r2, r5, $r7;
        java.lang.ClassLoader $r8;

        r1 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(36);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r8 != null goto label1;

        $r10 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>($r7);

        return $r10;

     label1:
        $r9 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.ClassLoader,java.lang.String)>($r8, $r7);

        return $r9;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.NativeJavaClass: long serialVersionUID> = -6460763940409461664L;

        return;
    }
}
