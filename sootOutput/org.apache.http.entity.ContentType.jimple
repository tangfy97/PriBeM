public final class org.apache.http.entity.ContentType extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    public static final org.apache.http.entity.ContentType APPLICATION_ATOM_XML;
    public static final org.apache.http.entity.ContentType APPLICATION_FORM_URLENCODED;
    public static final org.apache.http.entity.ContentType APPLICATION_JSON;
    public static final org.apache.http.entity.ContentType APPLICATION_OCTET_STREAM;
    public static final org.apache.http.entity.ContentType APPLICATION_SVG_XML;
    public static final org.apache.http.entity.ContentType APPLICATION_XHTML_XML;
    public static final org.apache.http.entity.ContentType APPLICATION_XML;
    public static final org.apache.http.entity.ContentType MULTIPART_FORM_DATA;
    public static final org.apache.http.entity.ContentType TEXT_HTML;
    public static final org.apache.http.entity.ContentType TEXT_PLAIN;
    public static final org.apache.http.entity.ContentType TEXT_XML;
    public static final org.apache.http.entity.ContentType WILDCARD;
    public static final org.apache.http.entity.ContentType DEFAULT_TEXT;
    public static final org.apache.http.entity.ContentType DEFAULT_BINARY;
    private final java.lang.String mimeType;
    private final java.nio.charset.Charset charset;

    void <init>(java.lang.String, java.nio.charset.Charset)
    {
        org.apache.http.entity.ContentType r0;
        java.lang.String r1;
        java.nio.charset.Charset r2;

        r0 := @this: org.apache.http.entity.ContentType;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.nio.charset.Charset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.entity.ContentType: java.lang.String mimeType> = r1;

        r0.<org.apache.http.entity.ContentType: java.nio.charset.Charset charset> = r2;

        return;
    }

    public java.lang.String getMimeType()
    {
        org.apache.http.entity.ContentType r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.entity.ContentType;

        $r1 = r0.<org.apache.http.entity.ContentType: java.lang.String mimeType>;

        return $r1;
    }

    public java.nio.charset.Charset getCharset()
    {
        org.apache.http.entity.ContentType r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.http.entity.ContentType;

        $r1 = r0.<org.apache.http.entity.ContentType: java.nio.charset.Charset charset>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.nio.charset.Charset $r3, $r5;
        org.apache.http.entity.ContentType r1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r4, $r6;

        r1 := @this: org.apache.http.entity.ContentType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.http.entity.ContentType: java.lang.String mimeType>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = r1.<org.apache.http.entity.ContentType: java.nio.charset.Charset charset>;

        if $r3 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; charset=");

        $r5 = r1.<org.apache.http.entity.ContentType: java.nio.charset.Charset charset>;

        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label1:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static boolean valid(java.lang.String)
    {
        int $i0, i2, $i3, $i4, $i5;
        char $c1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 == 34 goto label2;

        $i4 = (int) $c1;

        if $i4 == 44 goto label2;

        $i5 = (int) $c1;

        if $i5 != 59 goto label3;

     label2:
        return 0;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return 1;
    }

    public static org.apache.http.entity.ContentType create(java.lang.String, java.nio.charset.Charset)
    {
        org.apache.http.entity.ContentType $r4;
        java.lang.IllegalArgumentException $r6, $r7, $r8;
        java.nio.charset.Charset r5;
        java.util.Locale $r2;
        int $i0;
        java.lang.String r0, $r1, $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.nio.charset.Charset;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MIME type may not be null");

        throw $r8;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MIME type may not be empty");

        throw $r7;

     label2:
        $z0 = staticinvoke <org.apache.http.entity.ContentType: boolean valid(java.lang.String)>($r3);

        if $z0 != 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MIME type may not contain reserved characters");

        throw $r6;

     label3:
        $r4 = new org.apache.http.entity.ContentType;

        specialinvoke $r4.<org.apache.http.entity.ContentType: void <init>(java.lang.String,java.nio.charset.Charset)>($r3, r5);

        return $r4;
    }

    public static org.apache.http.entity.ContentType create(java.lang.String)
    {
        org.apache.http.entity.ContentType $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.http.entity.ContentType;

        specialinvoke $r0.<org.apache.http.entity.ContentType: void <init>(java.lang.String,java.nio.charset.Charset)>(r1, null);

        return $r0;
    }

    public static org.apache.http.entity.ContentType create(java.lang.String, java.lang.String) throws java.nio.charset.UnsupportedCharsetException
    {
        java.nio.charset.Charset $r3;
        org.apache.http.entity.ContentType $r2;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

        goto label2;

     label1:
        $r3 = null;

     label2:
        $r2 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>(r0, $r3);

        return $r2;
    }

    private static org.apache.http.entity.ContentType create(org.apache.http.HeaderElement)
    {
        org.apache.http.entity.ContentType $r3;
        org.apache.http.HeaderElement r0;
        java.lang.String $r1, r4;
        org.apache.http.NameValuePair $r2;

        r0 := @parameter0: org.apache.http.HeaderElement;

        $r1 = interfaceinvoke r0.<org.apache.http.HeaderElement: java.lang.String getName()>();

        r4 = null;

        $r2 = interfaceinvoke r0.<org.apache.http.HeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)>("charset");

        if $r2 == null goto label1;

        r4 = interfaceinvoke $r2.<org.apache.http.NameValuePair: java.lang.String getValue()>();

     label1:
        $r3 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.lang.String)>($r1, r4);

        return $r3;
    }

    public static org.apache.http.entity.ContentType parse(java.lang.String) throws org.apache.http.ParseException, java.nio.charset.UnsupportedCharsetException
    {
        org.apache.http.HeaderElement[] $r1;
        org.apache.http.ParseException $r2;
        org.apache.http.entity.ContentType $r8;
        org.apache.http.HeaderElement $r7;
        java.lang.IllegalArgumentException $r9;
        int $i0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r0, $r6;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content type may not be null");

        throw $r9;

     label1:
        $r1 = staticinvoke <org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser)>(r0, null);

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label2;

        $r7 = $r1[0];

        $r8 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(org.apache.http.HeaderElement)>($r7);

        return $r8;

     label2:
        $r2 = new org.apache.http.ParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid content type: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.http.ParseException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public static org.apache.http.entity.ContentType get(org.apache.http.HttpEntity) throws org.apache.http.ParseException, java.nio.charset.UnsupportedCharsetException
    {
        org.apache.http.HeaderElement[] $r2;
        org.apache.http.HttpEntity r0;
        int $i0;
        org.apache.http.entity.ContentType $r4;
        org.apache.http.HeaderElement $r3;
        org.apache.http.Header $r1;

        r0 := @parameter0: org.apache.http.HttpEntity;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        if $r1 == null goto label2;

        $r2 = interfaceinvoke $r1.<org.apache.http.Header: org.apache.http.HeaderElement[] getElements()>();

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label2;

        $r3 = $r2[0];

        $r4 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(org.apache.http.HeaderElement)>($r3);

        return $r4;

     label2:
        return null;
    }

    public static org.apache.http.entity.ContentType getOrDefault(org.apache.http.HttpEntity) throws org.apache.http.ParseException
    {
        org.apache.http.HttpEntity r0;
        org.apache.http.entity.ContentType $r1, $r2;

        r0 := @parameter0: org.apache.http.HttpEntity;

        $r1 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType get(org.apache.http.HttpEntity)>(r0);

        if $r1 == null goto label1;

        $r2 = $r1;

        goto label2;

     label1:
        $r2 = <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType DEFAULT_TEXT>;

     label2:
        return $r2;
    }

    static void <clinit>()
    {
        java.nio.charset.Charset $r0, $r2, $r4, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        org.apache.http.entity.ContentType $r1, $r3, $r5, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r21, $r22, $r23;

        <org.apache.http.entity.ContentType: long serialVersionUID> = -7768694718232371896L;

        $r0 = <org.apache.http.Consts: java.nio.charset.Charset ISO_8859_1>;

        $r1 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("application/atom+xml", $r0);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType APPLICATION_ATOM_XML> = $r1;

        $r2 = <org.apache.http.Consts: java.nio.charset.Charset ISO_8859_1>;

        $r3 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("application/x-www-form-urlencoded", $r2);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType APPLICATION_FORM_URLENCODED> = $r3;

        $r4 = <org.apache.http.Consts: java.nio.charset.Charset UTF_8>;

        $r5 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("application/json", $r4);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType APPLICATION_JSON> = $r5;

        $r6 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("application/octet-stream", null);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType APPLICATION_OCTET_STREAM> = $r6;

        $r7 = <org.apache.http.Consts: java.nio.charset.Charset ISO_8859_1>;

        $r8 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("application/svg+xml", $r7);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType APPLICATION_SVG_XML> = $r8;

        $r9 = <org.apache.http.Consts: java.nio.charset.Charset ISO_8859_1>;

        $r10 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("application/xhtml+xml", $r9);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType APPLICATION_XHTML_XML> = $r10;

        $r11 = <org.apache.http.Consts: java.nio.charset.Charset ISO_8859_1>;

        $r12 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("application/xml", $r11);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType APPLICATION_XML> = $r12;

        $r13 = <org.apache.http.Consts: java.nio.charset.Charset ISO_8859_1>;

        $r14 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("multipart/form-data", $r13);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType MULTIPART_FORM_DATA> = $r14;

        $r15 = <org.apache.http.Consts: java.nio.charset.Charset ISO_8859_1>;

        $r16 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("text/html", $r15);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType TEXT_HTML> = $r16;

        $r17 = <org.apache.http.Consts: java.nio.charset.Charset ISO_8859_1>;

        $r18 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("text/plain", $r17);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType TEXT_PLAIN> = $r18;

        $r19 = <org.apache.http.Consts: java.nio.charset.Charset ISO_8859_1>;

        $r20 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("text/xml", $r19);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType TEXT_XML> = $r20;

        $r21 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>("*/*", null);

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType WILDCARD> = $r21;

        $r22 = <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType TEXT_PLAIN>;

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType DEFAULT_TEXT> = $r22;

        $r23 = <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType APPLICATION_OCTET_STREAM>;

        <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType DEFAULT_BINARY> = $r23;

        return;
    }
}
