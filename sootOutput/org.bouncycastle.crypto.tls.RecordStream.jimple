public class org.bouncycastle.crypto.tls.RecordStream extends java.lang.Object
{
    private org.bouncycastle.crypto.tls.TlsProtocolHandler handler;
    private java.io.InputStream is;
    private java.io.OutputStream os;
    protected org.bouncycastle.crypto.tls.CombinedHash hash1;
    protected org.bouncycastle.crypto.tls.CombinedHash hash2;
    protected org.bouncycastle.crypto.tls.TlsCipherSuite readSuite;
    protected org.bouncycastle.crypto.tls.TlsCipherSuite writeSuite;

    protected void <init>(org.bouncycastle.crypto.tls.TlsProtocolHandler, java.io.InputStream, java.io.OutputStream)
    {
        org.bouncycastle.crypto.tls.RecordStream r0;
        java.io.OutputStream r3;
        org.bouncycastle.crypto.tls.CombinedHash $r4, $r5;
        org.bouncycastle.crypto.tls.TlsProtocolHandler r1;
        org.bouncycastle.crypto.tls.TlsNullCipherSuite $r6;
        org.bouncycastle.crypto.tls.TlsCipherSuite $r7;
        java.io.InputStream r2;

        r0 := @this: org.bouncycastle.crypto.tls.RecordStream;

        r1 := @parameter0: org.bouncycastle.crypto.tls.TlsProtocolHandler;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.io.OutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsCipherSuite readSuite> = null;

        r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsCipherSuite writeSuite> = null;

        r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsProtocolHandler handler> = r1;

        r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.InputStream is> = r2;

        r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.OutputStream os> = r3;

        $r4 = new org.bouncycastle.crypto.tls.CombinedHash;

        specialinvoke $r4.<org.bouncycastle.crypto.tls.CombinedHash: void <init>()>();

        r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.CombinedHash hash1> = $r4;

        $r5 = new org.bouncycastle.crypto.tls.CombinedHash;

        specialinvoke $r5.<org.bouncycastle.crypto.tls.CombinedHash: void <init>()>();

        r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.CombinedHash hash2> = $r5;

        $r6 = new org.bouncycastle.crypto.tls.TlsNullCipherSuite;

        specialinvoke $r6.<org.bouncycastle.crypto.tls.TlsNullCipherSuite: void <init>()>();

        r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsCipherSuite readSuite> = $r6;

        $r7 = r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsCipherSuite readSuite>;

        r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsCipherSuite writeSuite> = $r7;

        return;
    }

    public void readData() throws java.io.IOException
    {
        org.bouncycastle.crypto.tls.RecordStream r0;
        byte[] $r6;
        org.bouncycastle.crypto.tls.TlsProtocolHandler $r2, $r7;
        short $s0;
        int $i1, $i2;
        java.io.InputStream $r1, $r3, $r4, $r5;

        r0 := @this: org.bouncycastle.crypto.tls.RecordStream;

        $r1 = r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.InputStream is>;

        $s0 = staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: short readUint8(java.io.InputStream)>($r1);

        $r3 = r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.InputStream is>;

        $r2 = r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsProtocolHandler handler>;

        staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: void checkVersion(java.io.InputStream,org.bouncycastle.crypto.tls.TlsProtocolHandler)>($r3, $r2);

        $r4 = r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.InputStream is>;

        $i1 = staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: int readUint16(java.io.InputStream)>($r4);

        $r5 = r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.InputStream is>;

        $r6 = virtualinvoke r0.<org.bouncycastle.crypto.tls.RecordStream: byte[] decodeAndVerify(short,java.io.InputStream,int)>($s0, $r5, $i1);

        $r7 = r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsProtocolHandler handler>;

        $i2 = lengthof $r6;

        virtualinvoke $r7.<org.bouncycastle.crypto.tls.TlsProtocolHandler: void processData(short,byte[],int,int)>($s0, $r6, 0, $i2);

        return;
    }

    protected byte[] decodeAndVerify(short, java.io.InputStream, int) throws java.io.IOException
    {
        org.bouncycastle.crypto.tls.RecordStream r2;
        byte[] r0, $r5;
        org.bouncycastle.crypto.tls.TlsProtocolHandler $r3;
        short s1;
        int i0, $i2;
        org.bouncycastle.crypto.tls.TlsCipherSuite $r4;
        java.io.InputStream r1;

        r2 := @this: org.bouncycastle.crypto.tls.RecordStream;

        s1 := @parameter0: short;

        r1 := @parameter1: java.io.InputStream;

        i0 := @parameter2: int;

        r0 = newarray (byte)[i0];

        staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: void readFully(byte[],java.io.InputStream)>(r0, r1);

        $r4 = r2.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsCipherSuite readSuite>;

        $i2 = lengthof r0;

        $r3 = r2.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsProtocolHandler handler>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.tls.TlsCipherSuite: byte[] decodeCiphertext(short,byte[],int,int,org.bouncycastle.crypto.tls.TlsProtocolHandler)>(s1, r0, 0, $i2, $r3);

        return $r5;
    }

    protected void writeMessage(short, byte[], int, int) throws java.io.IOException
    {
        org.bouncycastle.crypto.tls.RecordStream r0;
        byte[] r1, $r3, $r8;
        org.bouncycastle.crypto.tls.CombinedHash $r6, $r7;
        short s0;
        int i1, i2, $i3, $i4, $i5, $i6, $i7;
        org.bouncycastle.crypto.tls.TlsCipherSuite $r2;
        java.io.OutputStream $r4, $r5;

        r0 := @this: org.bouncycastle.crypto.tls.RecordStream;

        s0 := @parameter0: short;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i7 = (int) s0;

        if $i7 != 22 goto label1;

        $r6 = r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.CombinedHash hash1>;

        virtualinvoke $r6.<org.bouncycastle.crypto.tls.CombinedHash: void update(byte[],int,int)>(r1, i1, i2);

        $r7 = r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.CombinedHash hash2>;

        virtualinvoke $r7.<org.bouncycastle.crypto.tls.CombinedHash: void update(byte[],int,int)>(r1, i1, i2);

     label1:
        $r2 = r0.<org.bouncycastle.crypto.tls.RecordStream: org.bouncycastle.crypto.tls.TlsCipherSuite writeSuite>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.tls.TlsCipherSuite: byte[] encodePlaintext(short,byte[],int,int)>(s0, r1, i1, i2);

        $i3 = lengthof $r3;

        $i4 = $i3 + 5;

        $r8 = newarray (byte)[$i4];

        staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: void writeUint8(short,byte[],int)>(s0, $r8, 0);

        staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: void writeUint8(short,byte[],int)>(3, $r8, 1);

        staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: void writeUint8(short,byte[],int)>(1, $r8, 2);

        $i5 = lengthof $r3;

        staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: void writeUint16(int,byte[],int)>($i5, $r8, 3);

        $i6 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r8, 5, $i6);

        $r4 = r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.OutputStream os>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r8);

        $r5 = r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.OutputStream os>;

        virtualinvoke $r5.<java.io.OutputStream: void flush()>();

        return;
    }

    protected void close() throws java.io.IOException
    {
        org.bouncycastle.crypto.tls.RecordStream r0;
        java.io.OutputStream $r2;
        java.io.IOException $r3, $r4, r5;
        java.io.InputStream $r1;

        r0 := @this: org.bouncycastle.crypto.tls.RecordStream;

        r5 = null;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.InputStream is>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

     label4:
        $r2 = r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.OutputStream os>;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        r5 = $r3;

     label7:
        if r5 == null goto label8;

        throw r5;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    protected void flush() throws java.io.IOException
    {
        org.bouncycastle.crypto.tls.RecordStream r0;
        java.io.OutputStream $r1;

        r0 := @this: org.bouncycastle.crypto.tls.RecordStream;

        $r1 = r0.<org.bouncycastle.crypto.tls.RecordStream: java.io.OutputStream os>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }
}
