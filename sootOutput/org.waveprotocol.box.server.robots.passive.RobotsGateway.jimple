public class org.waveprotocol.box.server.robots.passive.RobotsGateway extends java.lang.Object implements org.waveprotocol.box.server.waveserver.WaveBus$Subscriber
{
    private static final org.waveprotocol.wave.util.logging.Log LOG;
    private final org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider;
    private final org.waveprotocol.box.server.persistence.AccountStore accountStore;
    private final com.google.wave.api.data.converter.EventDataConverterManager converterManager;
    private final org.waveprotocol.box.server.robots.passive.RobotConnector connector;
    private final java.util.Map allRobots;
    private final java.util.Set runnableRobots;
    private final java.util.concurrent.Executor executor;
    private final org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil;
    private final org.waveprotocol.box.server.robots.operations.NotifyOperationService notifyOpService;

    void <init>(org.waveprotocol.box.server.waveserver.WaveletProvider, org.waveprotocol.box.server.robots.passive.RobotConnector, org.waveprotocol.box.server.persistence.AccountStore, com.google.wave.api.RobotSerializer, com.google.wave.api.data.converter.EventDataConverterManager, java.util.concurrent.Executor, org.waveprotocol.box.server.robots.util.ConversationUtil, org.waveprotocol.box.server.robots.operations.NotifyOperationService)
    {
        org.waveprotocol.box.server.robots.operations.NotifyOperationService r9;
        com.google.wave.api.data.converter.EventDataConverterManager r5;
        org.waveprotocol.box.server.robots.util.ConversationUtil r8;
        org.waveprotocol.box.server.waveserver.WaveletProvider r3;
        java.util.concurrent.Executor r7;
        org.waveprotocol.box.server.robots.passive.RobotsGateway r0;
        org.waveprotocol.box.server.robots.passive.RobotConnector r6;
        java.util.HashMap $r1;
        java.util.HashSet $r2;
        com.google.wave.api.RobotSerializer r10;
        org.waveprotocol.box.server.persistence.AccountStore r4;

        r0 := @this: org.waveprotocol.box.server.robots.passive.RobotsGateway;

        r3 := @parameter0: org.waveprotocol.box.server.waveserver.WaveletProvider;

        r6 := @parameter1: org.waveprotocol.box.server.robots.passive.RobotConnector;

        r4 := @parameter2: org.waveprotocol.box.server.persistence.AccountStore;

        r10 := @parameter3: com.google.wave.api.RobotSerializer;

        r5 := @parameter4: com.google.wave.api.data.converter.EventDataConverterManager;

        r7 := @parameter5: java.util.concurrent.Executor;

        r8 := @parameter6: org.waveprotocol.box.server.robots.util.ConversationUtil;

        r9 := @parameter7: org.waveprotocol.box.server.robots.operations.NotifyOperationService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: java.util.Map allRobots> = $r1;

        $r2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: java.util.Set runnableRobots> = $r2;

        r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider> = r3;

        r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.persistence.AccountStore accountStore> = r4;

        r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: com.google.wave.api.data.converter.EventDataConverterManager converterManager> = r5;

        r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.robots.passive.RobotConnector connector> = r6;

        r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: java.util.concurrent.Executor executor> = r7;

        r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil> = r8;

        r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.robots.operations.NotifyOperationService notifyOpService> = r9;

        return;
    }

    public void waveletCommitted(org.waveprotocol.wave.model.id.WaveletName, org.waveprotocol.wave.model.version.HashedVersion)
    {
        org.waveprotocol.wave.model.version.HashedVersion r2;
        org.waveprotocol.wave.model.id.WaveletName r1;
        org.waveprotocol.box.server.robots.passive.RobotsGateway r0;

        r0 := @this: org.waveprotocol.box.server.robots.passive.RobotsGateway;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        r2 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        return;
    }

    public void waveletUpdate(org.waveprotocol.wave.model.wave.data.ReadableWaveletData, org.waveprotocol.box.common.DeltaSequence)
    {
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta r28;
        org.waveprotocol.box.server.account.RobotAccountData $r14;
        org.waveprotocol.wave.model.wave.ParticipantId $r10, $r20, r30;
        org.waveprotocol.wave.util.logging.Log $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Set $r1;
        com.google.wave.api.robot.RobotName $r8;
        java.lang.StringBuilder $r22, $r24, $r26;
        org.waveprotocol.wave.model.operation.wave.AddParticipant $r19;
        org.waveprotocol.wave.model.operation.wave.WaveletOperation r29;
        org.waveprotocol.box.server.robots.passive.RobotsGateway r11;
        org.waveprotocol.box.server.account.AccountData $r13;
        org.waveprotocol.box.server.persistence.PersistenceException $r21;
        org.waveprotocol.box.common.DeltaSequence r3;
        java.util.HashSet $r2;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData r0;
        java.lang.String $r7, $r9, $r25, $r27;
        java.util.Iterator $r4, $r5, $r17;
        java.lang.Object $r6, $r16, $r18;
        org.waveprotocol.box.server.persistence.AccountStore $r12;
        org.waveprotocol.box.server.robots.passive.Robot $r15;

        r11 := @this: org.waveprotocol.box.server.robots.passive.RobotsGateway;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.ReadableWaveletData;

        r3 := @parameter1: org.waveprotocol.box.common.DeltaSequence;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: java.util.Set getParticipants()>();

        $r2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>($r1);

        $r4 = virtualinvoke r3.<org.waveprotocol.box.common.DeltaSequence: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r16 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta) $r16;

        $r17 = virtualinvoke r28.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.waveprotocol.wave.model.operation.wave.WaveletOperation) $r18;

        $z4 = r29 instanceof org.waveprotocol.wave.model.operation.wave.AddParticipant;

        if $z4 == 0 goto label03;

        $r19 = (org.waveprotocol.wave.model.operation.wave.AddParticipant) r29;

        $r20 = virtualinvoke $r19.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()>();

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r20);

     label03:
        goto label02;

     label04:
        goto label01;

     label05:
        $r5 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z5 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label13;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r30 = (org.waveprotocol.wave.model.wave.ParticipantId) $r6;

        $r7 = virtualinvoke r30.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r8 = staticinvoke <com.google.wave.api.robot.RobotName: com.google.wave.api.robot.RobotName fromAddress(java.lang.String)>($r7);

        if $r8 != null goto label07;

        goto label06;

     label07:
        $r9 = virtualinvoke $r8.<com.google.wave.api.robot.RobotName: java.lang.String toEmailAddress()>();

        $r10 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId ofUnsafe(java.lang.String)>($r9);

     label08:
        $r12 = r11.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.persistence.AccountStore accountStore>;

        $r13 = interfaceinvoke $r12.<org.waveprotocol.box.server.persistence.AccountStore: org.waveprotocol.box.server.account.AccountData getAccount(org.waveprotocol.wave.model.wave.ParticipantId)>($r10);

     label09:
        goto label11;

     label10:
        $r21 := @caughtexception;

        $r23 = <org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.wave.util.logging.Log LOG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retrieve the account data for ");

        $r25 = virtualinvoke $r10.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r27, $r21);

        goto label06;

     label11:
        if $r13 == null goto label12;

        $z1 = interfaceinvoke $r13.<org.waveprotocol.box.server.account.AccountData: boolean isRobot()>();

        if $z1 == 0 goto label12;

        $r14 = interfaceinvoke $r13.<org.waveprotocol.box.server.account.AccountData: org.waveprotocol.box.server.account.RobotAccountData asRobot()>();

        $z2 = interfaceinvoke $r14.<org.waveprotocol.box.server.account.RobotAccountData: boolean isVerified()>();

        if $z2 == 0 goto label12;

        $r15 = specialinvoke r11.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.robots.passive.Robot getOrCreateRobot(com.google.wave.api.robot.RobotName,org.waveprotocol.box.server.account.RobotAccountData)>($r8, $r14);

        specialinvoke r11.<org.waveprotocol.box.server.robots.passive.RobotsGateway: void updateRobot(org.waveprotocol.box.server.robots.passive.Robot,org.waveprotocol.wave.model.wave.data.ReadableWaveletData,org.waveprotocol.box.common.DeltaSequence)>($r15, r0, r3);

     label12:
        goto label06;

     label13:
        return;

        catch org.waveprotocol.box.server.persistence.PersistenceException from label08 to label09 with label10;
    }

    private org.waveprotocol.box.server.robots.passive.Robot getOrCreateRobot(com.google.wave.api.robot.RobotName, org.waveprotocol.box.server.account.RobotAccountData)
    {
        org.waveprotocol.box.server.robots.passive.RobotsGateway r0;
        org.waveprotocol.box.server.account.RobotAccountData r4;
        com.google.wave.api.robot.RobotName r1;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;
        org.waveprotocol.box.server.robots.passive.Robot $r5, r7;

        r0 := @this: org.waveprotocol.box.server.robots.passive.RobotsGateway;

        r1 := @parameter0: com.google.wave.api.robot.RobotName;

        r4 := @parameter1: org.waveprotocol.box.server.account.RobotAccountData;

        $r2 = r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: java.util.Map allRobots>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (org.waveprotocol.box.server.robots.passive.Robot) $r3;

        if r7 != null goto label1;

        $r5 = specialinvoke r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.robots.passive.Robot createNewRobot(com.google.wave.api.robot.RobotName,org.waveprotocol.box.server.account.RobotAccountData)>(r1, r4);

        r7 = $r5;

        $r6 = r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: java.util.Map allRobots>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        return r7;
    }

    private org.waveprotocol.box.server.robots.passive.Robot createNewRobot(com.google.wave.api.robot.RobotName, org.waveprotocol.box.server.account.RobotAccountData)
    {
        org.waveprotocol.box.server.robots.operations.NotifyOperationService $r6;
        org.waveprotocol.box.server.robots.passive.RobotOperationApplicator $r4;
        org.waveprotocol.box.server.robots.util.ConversationUtil $r3, $r9;
        com.google.wave.api.data.converter.EventDataConverterManager $r7, $r13;
        org.waveprotocol.box.server.robots.passive.EventGenerator $r0;
        org.waveprotocol.box.server.robots.passive.OperationServiceRegistryImpl $r5;
        org.waveprotocol.box.server.waveserver.WaveletProvider $r8, $r12;
        org.waveprotocol.box.server.robots.passive.RobotsGateway r2;
        org.waveprotocol.box.server.account.RobotAccountData r11;
        org.waveprotocol.box.server.robots.passive.RobotConnector $r14;
        com.google.wave.api.robot.RobotName r1;
        org.waveprotocol.box.server.robots.passive.Robot $r10;

        r2 := @this: org.waveprotocol.box.server.robots.passive.RobotsGateway;

        r1 := @parameter0: com.google.wave.api.robot.RobotName;

        r11 := @parameter1: org.waveprotocol.box.server.account.RobotAccountData;

        $r0 = new org.waveprotocol.box.server.robots.passive.EventGenerator;

        $r3 = r2.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil>;

        specialinvoke $r0.<org.waveprotocol.box.server.robots.passive.EventGenerator: void <init>(com.google.wave.api.robot.RobotName,org.waveprotocol.box.server.robots.util.ConversationUtil)>(r1, $r3);

        $r4 = new org.waveprotocol.box.server.robots.passive.RobotOperationApplicator;

        $r7 = r2.<org.waveprotocol.box.server.robots.passive.RobotsGateway: com.google.wave.api.data.converter.EventDataConverterManager converterManager>;

        $r8 = r2.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider>;

        $r5 = new org.waveprotocol.box.server.robots.passive.OperationServiceRegistryImpl;

        $r6 = r2.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.robots.operations.NotifyOperationService notifyOpService>;

        specialinvoke $r5.<org.waveprotocol.box.server.robots.passive.OperationServiceRegistryImpl: void <init>(org.waveprotocol.box.server.robots.operations.NotifyOperationService)>($r6);

        $r9 = r2.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil>;

        specialinvoke $r4.<org.waveprotocol.box.server.robots.passive.RobotOperationApplicator: void <init>(com.google.wave.api.data.converter.EventDataConverterManager,org.waveprotocol.box.server.waveserver.WaveletProvider,org.waveprotocol.box.server.robots.OperationServiceRegistry,org.waveprotocol.box.server.robots.util.ConversationUtil)>($r7, $r8, $r5, $r9);

        $r10 = new org.waveprotocol.box.server.robots.passive.Robot;

        $r14 = r2.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.robots.passive.RobotConnector connector>;

        $r13 = r2.<org.waveprotocol.box.server.robots.passive.RobotsGateway: com.google.wave.api.data.converter.EventDataConverterManager converterManager>;

        $r12 = r2.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider>;

        specialinvoke $r10.<org.waveprotocol.box.server.robots.passive.Robot: void <init>(com.google.wave.api.robot.RobotName,org.waveprotocol.box.server.account.RobotAccountData,org.waveprotocol.box.server.robots.passive.RobotsGateway,org.waveprotocol.box.server.robots.passive.RobotConnector,com.google.wave.api.data.converter.EventDataConverterManager,org.waveprotocol.box.server.waveserver.WaveletProvider,org.waveprotocol.box.server.robots.passive.EventGenerator,org.waveprotocol.box.server.robots.passive.RobotOperationApplicator)>(r1, r11, r2, $r14, $r13, $r12, $r0, $r4);

        return $r10;
    }

    private void updateRobot(org.waveprotocol.box.server.robots.passive.Robot, org.waveprotocol.wave.model.wave.data.ReadableWaveletData, org.waveprotocol.box.common.DeltaSequence)
    {
        org.waveprotocol.box.server.robots.passive.RobotsGateway r3;
        org.waveprotocol.box.common.DeltaSequence r2;
        com.google.wave.api.robot.RobotName $r8;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData r1;
        org.waveprotocol.wave.model.operation.OperationException $r4;
        java.lang.StringBuilder $r5, $r7, $r9, $r10;
        org.waveprotocol.wave.util.logging.Log $r6;
        java.lang.String $r11;
        org.waveprotocol.box.server.robots.passive.Robot r0;

        r3 := @this: org.waveprotocol.box.server.robots.passive.RobotsGateway;

        r0 := @parameter0: org.waveprotocol.box.server.robots.passive.Robot;

        r1 := @parameter1: org.waveprotocol.wave.model.wave.data.ReadableWaveletData;

        r2 := @parameter2: org.waveprotocol.box.common.DeltaSequence;

     label1:
        virtualinvoke r0.<org.waveprotocol.box.server.robots.passive.Robot: void waveletUpdate(org.waveprotocol.wave.model.wave.data.ReadableWaveletData,org.waveprotocol.box.common.DeltaSequence)>(r1, r2);

        virtualinvoke r3.<org.waveprotocol.box.server.robots.passive.RobotsGateway: void ensureScheduled(org.waveprotocol.box.server.robots.passive.Robot)>(r0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.wave.util.logging.Log LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to update robot(");

        $r8 = virtualinvoke r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName getRobotName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String,java.lang.Throwable)>($r11, $r4);

     label4:
        return;

        catch org.waveprotocol.wave.model.operation.OperationException from label1 to label2 with label3;
    }

    public synchronized void ensureScheduled(org.waveprotocol.box.server.robots.passive.Robot)
    {
        java.util.concurrent.Executor $r12;
        org.waveprotocol.box.server.robots.passive.RobotsGateway r0;
        java.util.Set $r2, $r10;
        com.google.wave.api.robot.RobotName $r3, $r7, $r11;
        java.lang.StringBuilder $r4, $r6, $r8;
        org.waveprotocol.wave.util.logging.Log $r5;
        java.lang.String $r9;
        org.waveprotocol.box.server.robots.passive.Robot r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.robots.passive.RobotsGateway;

        r1 := @parameter0: org.waveprotocol.box.server.robots.passive.Robot;

        $r2 = r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: java.util.Set runnableRobots>;

        $r3 = virtualinvoke r1.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName getRobotName()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r5 = <org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.wave.util.logging.Log LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Enqueing robot: ");

        $r7 = virtualinvoke r1.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName getRobotName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r9);

        $r10 = r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: java.util.Set runnableRobots>;

        $r11 = virtualinvoke r1.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName getRobotName()>();

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r11);

        $r12 = r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: java.util.concurrent.Executor executor>;

        interfaceinvoke $r12.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r1);

     label1:
        return;
    }

    public synchronized void doneRunning(org.waveprotocol.box.server.robots.passive.Robot)
    {
        com.google.wave.api.robot.RobotName $r3;
        org.waveprotocol.box.server.robots.passive.RobotsGateway r0;
        java.util.Set $r2;
        org.waveprotocol.box.server.robots.passive.Robot r1;

        r0 := @this: org.waveprotocol.box.server.robots.passive.RobotsGateway;

        r1 := @parameter0: org.waveprotocol.box.server.robots.passive.Robot;

        $r2 = r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: java.util.Set runnableRobots>;

        $r3 = virtualinvoke r1.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName getRobotName()>();

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        return;
    }

    public void updateRobotAccount(org.waveprotocol.box.server.robots.passive.Robot) throws com.google.wave.api.robot.CapabilityFetchException, org.waveprotocol.box.server.persistence.PersistenceException
    {
        org.waveprotocol.box.server.robots.passive.RobotsGateway r0;
        org.waveprotocol.box.server.account.RobotAccountData $r3, $r4;
        org.waveprotocol.box.server.robots.passive.RobotConnector $r2;
        org.waveprotocol.box.server.persistence.AccountStore $r5;
        org.waveprotocol.box.server.robots.passive.Robot r1;

        r0 := @this: org.waveprotocol.box.server.robots.passive.RobotsGateway;

        r1 := @parameter0: org.waveprotocol.box.server.robots.passive.Robot;

        $r2 = r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.robots.passive.RobotConnector connector>;

        $r3 = virtualinvoke r1.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.account.RobotAccountData getAccount()>();

        $r4 = virtualinvoke $r2.<org.waveprotocol.box.server.robots.passive.RobotConnector: org.waveprotocol.box.server.account.RobotAccountData fetchCapabilities(org.waveprotocol.box.server.account.RobotAccountData,java.lang.String)>($r3, "");

        $r5 = r0.<org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.box.server.persistence.AccountStore accountStore>;

        interfaceinvoke $r5.<org.waveprotocol.box.server.persistence.AccountStore: void putAccount(org.waveprotocol.box.server.account.AccountData)>($r4);

        virtualinvoke r1.<org.waveprotocol.box.server.robots.passive.Robot: void setAccount(org.waveprotocol.box.server.account.RobotAccountData)>($r4);

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.util.logging.Log $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.util.logging.Log: org.waveprotocol.wave.util.logging.Log get(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/passive/RobotsGateway;");

        <org.waveprotocol.box.server.robots.passive.RobotsGateway: org.waveprotocol.wave.util.logging.Log LOG> = $r0;

        return;
    }
}
