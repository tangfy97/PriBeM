class org.codehaus.groovy.control.CompilationUnit$9 extends org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation
{
    private final org.codehaus.groovy.control.CompilationUnit this$0;

    void <init>(org.codehaus.groovy.control.CompilationUnit)
    {
        org.codehaus.groovy.control.CompilationUnit$9 r0;
        org.codehaus.groovy.control.CompilationUnit r1;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit$9;

        r1 := @parameter0: org.codehaus.groovy.control.CompilationUnit;

        r0.<org.codehaus.groovy.control.CompilationUnit$9: org.codehaus.groovy.control.CompilationUnit this$0> = r1;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation: void <init>()>();

        return;
    }

    public void call(org.codehaus.groovy.control.SourceUnit) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.CompilationUnit$9 r10;
        org.codehaus.groovy.ast.ModuleNode $r1, $r14;
        boolean $z0, $z1, $z2, $z3, z4;
        org.codehaus.groovy.control.messages.SimpleMessage $r24;
        java.util.List $r2, $r15;
        org.codehaus.groovy.control.CompilationUnit $r11, $r22, $r26;
        java.lang.StringBuffer $r16, $r17, $r18, $r19;
        java.lang.String r9, $r20, $r25, $r29;
        org.codehaus.groovy.control.ErrorCollector $r23;
        java.util.Iterator $r3, $r7, $r21;
        org.codehaus.groovy.control.SourceUnit r0, $r13;
        org.codehaus.groovy.ast.ClassNode r5, r28;
        java.lang.Object $r4, $r8, $r27;
        org.codehaus.groovy.ast.CompileUnit $r6, $r12;

        r10 := @this: org.codehaus.groovy.control.CompilationUnit$9;

        r0 := @parameter0: org.codehaus.groovy.control.SourceUnit;

        $r1 = r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.ast.ModuleNode ast>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.ast.ModuleNode: java.util.List getClasses()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.groovy.ast.ClassNode) $r4;

        $r6 = virtualinvoke r5.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.CompileUnit getCompileUnit()>();

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.ast.CompileUnit: java.util.Iterator iterateClassNodeToCompile()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r11 = r10.<org.codehaus.groovy.control.CompilationUnit$9: org.codehaus.groovy.control.CompilationUnit this$0>;

        $r12 = $r11.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.ast.CompileUnit ast>;

        $r13 = virtualinvoke $r12.<org.codehaus.groovy.ast.CompileUnit: org.codehaus.groovy.control.SourceUnit getScriptSourceLocation(java.lang.String)>(r9);

        $r14 = $r13.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.ast.ModuleNode ast>;

        $r15 = virtualinvoke $r14.<org.codehaus.groovy.ast.ModuleNode: java.util.List getClasses()>();

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Compilation incomplete: expected to find the class ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in ");

        $r20 = virtualinvoke $r13.<org.codehaus.groovy.control.SourceUnit: java.lang.String getName()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $z2 = interfaceinvoke $r15.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", but the file seems not to contain any classes");

        goto label7;

     label3:
        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", but the file contains the classes: ");

        z4 = 1;

        $r21 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r27 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.codehaus.groovy.ast.ClassNode) $r27;

        if z4 != 0 goto label5;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        goto label6;

     label5:
        z4 = 0;

     label6:
        $r29 = virtualinvoke r28.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        goto label4;

     label7:
        $r22 = r10.<org.codehaus.groovy.control.CompilationUnit$9: org.codehaus.groovy.control.CompilationUnit this$0>;

        $r23 = virtualinvoke $r22.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $r24 = new org.codehaus.groovy.control.messages.SimpleMessage;

        $r25 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        $r26 = r10.<org.codehaus.groovy.control.CompilationUnit$9: org.codehaus.groovy.control.CompilationUnit this$0>;

        specialinvoke $r24.<org.codehaus.groovy.control.messages.SimpleMessage: void <init>(java.lang.String,org.codehaus.groovy.control.ProcessingUnit)>($r25, $r26);

        virtualinvoke $r23.<org.codehaus.groovy.control.ErrorCollector: void addErrorAndContinue(org.codehaus.groovy.control.messages.Message)>($r24);

        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

        goto label2;

     label8:
        goto label1;

     label9:
        return;
    }
}
