public class org.springframework.aop.support.IntroductionInfoSupport extends java.lang.Object implements org.springframework.aop.IntroductionInfo, java.io.Serializable
{
    protected final java.util.Set publishedInterfaces;
    private transient java.util.Map rememberedMethods;

    public void <init>()
    {
        org.springframework.aop.support.IntroductionInfoSupport r0;
        java.util.HashSet $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        r0 := @this: org.springframework.aop.support.IntroductionInfoSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.springframework.aop.support.IntroductionInfoSupport: java.util.Set publishedInterfaces> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(32);

        r0.<org.springframework.aop.support.IntroductionInfoSupport: java.util.Map rememberedMethods> = $r2;

        return;
    }

    public void suppressInterface(java.lang.Class)
    {
        org.springframework.aop.support.IntroductionInfoSupport r0;
        java.util.Set $r2;
        java.lang.Class r1;

        r0 := @this: org.springframework.aop.support.IntroductionInfoSupport;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.springframework.aop.support.IntroductionInfoSupport: java.util.Set publishedInterfaces>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public java.lang.Class[] getInterfaces()
    {
        org.springframework.aop.support.IntroductionInfoSupport r0;
        java.lang.Object[] $r4;
        int $i0;
        java.util.Set $r1, $r2;
        java.lang.Class[] $r3, $r5;

        r0 := @this: org.springframework.aop.support.IntroductionInfoSupport;

        $r2 = r0.<org.springframework.aop.support.IntroductionInfoSupport: java.util.Set publishedInterfaces>;

        $r1 = r0.<org.springframework.aop.support.IntroductionInfoSupport: java.util.Set publishedInterfaces>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        $r3 = newarray (java.lang.Class)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.Class[]) $r4;

        return $r5;
    }

    public boolean implementsInterface(java.lang.Class)
    {
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.springframework.aop.support.IntroductionInfoSupport r0;
        java.lang.Object $r3;
        java.lang.Class r4, r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.aop.support.IntroductionInfoSupport;

        r5 := @parameter0: java.lang.Class;

        $r1 = r0.<org.springframework.aop.support.IntroductionInfoSupport: java.util.Set publishedInterfaces>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Class) $r3;

        $z0 = virtualinvoke r5.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

        return 0;
    }

    protected void implementInterfacesOnObject(java.lang.Object)
    {
        org.springframework.aop.support.IntroductionInfoSupport r0;
        java.util.Set $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.springframework.aop.support.IntroductionInfoSupport;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.aop.support.IntroductionInfoSupport: java.util.Set publishedInterfaces>;

        $r3 = staticinvoke <org.springframework.util.ClassUtils: java.util.Set getAllInterfacesAsSet(java.lang.Object)>(r1);

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>($r3);

        return;
    }

    protected final boolean isMethodOnIntroducedInterface(org.aopalliance.intercept.MethodInvocation)
    {
        org.springframework.aop.support.IntroductionInfoSupport r0;
        org.aopalliance.intercept.MethodInvocation r1;
        java.util.Map $r2, $r8;
        java.lang.Boolean r5, $r10;
        java.lang.Object $r4;
        java.lang.Class $r7;
        java.lang.reflect.Method $r3, $r6, $r9;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.support.IntroductionInfoSupport;

        r1 := @parameter0: org.aopalliance.intercept.MethodInvocation;

        $r2 = r0.<org.springframework.aop.support.IntroductionInfoSupport: java.util.Map rememberedMethods>;

        $r3 = interfaceinvoke r1.<org.aopalliance.intercept.MethodInvocation: java.lang.reflect.Method getMethod()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.lang.Boolean) $r4;

        if r5 == null goto label1;

        $z1 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        $r6 = interfaceinvoke r1.<org.aopalliance.intercept.MethodInvocation: java.lang.reflect.Method getMethod()>();

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke r0.<org.springframework.aop.support.IntroductionInfoSupport: boolean implementsInterface(java.lang.Class)>($r7);

        $r8 = r0.<org.springframework.aop.support.IntroductionInfoSupport: java.util.Map rememberedMethods>;

        $r9 = interfaceinvoke r1.<org.aopalliance.intercept.MethodInvocation: java.lang.reflect.Method getMethod()>();

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        return $z0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r0;
        org.springframework.aop.support.IntroductionInfoSupport r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        r1 := @this: org.springframework.aop.support.IntroductionInfoSupport;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(32);

        r1.<org.springframework.aop.support.IntroductionInfoSupport: java.util.Map rememberedMethods> = $r2;

        return;
    }
}
