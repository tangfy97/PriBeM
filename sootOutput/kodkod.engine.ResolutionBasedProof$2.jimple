final class kodkod.engine.ResolutionBasedProof$2 extends kodkod.ast.visitor.AbstractVoidVisitor
{
    final java.util.Set visited;
    final kodkod.engine.ResolutionBasedProof this$0;
    private final java.util.Set val$coreNodes;
    private final java.util.Set val$connected;

    void <init>(kodkod.engine.ResolutionBasedProof, java.util.Set, java.util.Set)
    {
        kodkod.engine.ResolutionBasedProof r1;
        kodkod.util.collections.IdentityHashSet $r4;
        kodkod.engine.ResolutionBasedProof$2 r0;
        java.util.Set r2, r3;

        r0 := @this: kodkod.engine.ResolutionBasedProof$2;

        r1 := @parameter0: kodkod.engine.ResolutionBasedProof;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.util.Set;

        r0.<kodkod.engine.ResolutionBasedProof$2: kodkod.engine.ResolutionBasedProof this$0> = r1;

        r0.<kodkod.engine.ResolutionBasedProof$2: java.util.Set val$coreNodes> = r2;

        r0.<kodkod.engine.ResolutionBasedProof$2: java.util.Set val$connected> = r3;

        specialinvoke r0.<kodkod.ast.visitor.AbstractVoidVisitor: void <init>()>();

        $r4 = new kodkod.util.collections.IdentityHashSet;

        specialinvoke $r4.<kodkod.util.collections.IdentityHashSet: void <init>()>();

        r0.<kodkod.engine.ResolutionBasedProof$2: java.util.Set visited> = $r4;

        return;
    }

    protected boolean visited(kodkod.ast.Node)
    {
        kodkod.engine.ResolutionBasedProof$2 r0;
        kodkod.ast.Formula $r4;
        java.util.Set $r2, $r3, $r5;
        kodkod.ast.Node r1;
        boolean $z0, $z1;

        r0 := @this: kodkod.engine.ResolutionBasedProof$2;

        r1 := @parameter0: kodkod.ast.Node;

        $r2 = r0.<kodkod.engine.ResolutionBasedProof$2: java.util.Set visited>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<kodkod.engine.ResolutionBasedProof$2: java.util.Set val$coreNodes>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r5 = r0.<kodkod.engine.ResolutionBasedProof$2: java.util.Set val$connected>;

        $r4 = (kodkod.ast.Formula) r1;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r4);

        return 0;

     label1:
        return 1;
    }
}
