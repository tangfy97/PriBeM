class org.jdesktop.layout.WindowsLayoutStyle extends org.jdesktop.layout.LayoutStyle
{
    private int baseUnitX;
    private int baseUnitY;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$jdesktop$layout$WindowsLayoutStyle;

    void <init>()
    {
        org.jdesktop.layout.WindowsLayoutStyle r0;

        r0 := @this: org.jdesktop.layout.WindowsLayoutStyle;

        specialinvoke r0.<org.jdesktop.layout.LayoutStyle: void <init>()>();

        return;
    }

    public int getPreferredGap(javax.swing.JComponent, javax.swing.JComponent, int, int, java.awt.Container)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8;
        java.awt.Container r3;
        java.lang.String $r4, $r5;
        boolean z0, $z1, z2, $z4, $z5;
        javax.swing.JComponent r1, r2;
        org.jdesktop.layout.WindowsLayoutStyle r0;

        r0 := @this: org.jdesktop.layout.WindowsLayoutStyle;

        r1 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: javax.swing.JComponent;

        i6 := @parameter2: int;

        i0 := @parameter3: int;

        r3 := @parameter4: java.awt.Container;

        specialinvoke r0.<org.jdesktop.layout.LayoutStyle: int getPreferredGap(javax.swing.JComponent,javax.swing.JComponent,int,int,java.awt.Container)>(r1, r2, i6, i0, r3);

        if i6 != 3 goto label04;

        if i0 == 3 goto label01;

        if i0 != 7 goto label03;

     label01:
        $i5 = virtualinvoke r0.<org.jdesktop.layout.WindowsLayoutStyle: int getButtonChildIndent(javax.swing.JComponent,int)>(r1, i0);

        if $i5 == 0 goto label02;

        return $i5;

     label02:
        return 10;

     label03:
        i6 = 0;

     label04:
        if i6 != 1 goto label05;

        $i3 = specialinvoke r0.<org.jdesktop.layout.WindowsLayoutStyle: int dluToPixels(int,int)>(7, i0);

        $i4 = virtualinvoke r0.<org.jdesktop.layout.WindowsLayoutStyle: int getCBRBPadding(javax.swing.JComponent,javax.swing.JComponent,int,int)>(r1, r2, i0, $i3);

        return $i4;

     label05:
        $r4 = virtualinvoke r1.<javax.swing.JComponent: java.lang.String getUIClassID()>();

        if $r4 != "LabelUI" goto label06;

        $z1 = 1;

        goto label07;

     label06:
        $z1 = 0;

     label07:
        z2 = $z1;

        $r5 = virtualinvoke r2.<javax.swing.JComponent: java.lang.String getUIClassID()>();

        if $r5 != "LabelUI" goto label08;

        $z5 = 1;

        $z4 = 1;

        goto label09;

     label08:
        $z5 = 0;

        $z4 = 0;

     label09:
        z0 = $z4;

        if z2 == 0 goto label10;

        if $z5 == 0 goto label11;

     label10:
        if z0 == 0 goto label13;

        if z2 != 0 goto label13;

     label11:
        if i0 == 3 goto label12;

        if i0 != 7 goto label13;

     label12:
        $i1 = specialinvoke r0.<org.jdesktop.layout.WindowsLayoutStyle: int dluToPixels(int,int)>(3, i0);

        $i2 = virtualinvoke r0.<org.jdesktop.layout.WindowsLayoutStyle: int getCBRBPadding(javax.swing.JComponent,javax.swing.JComponent,int,int)>(r1, r2, i0, $i1);

        return $i2;

     label13:
        $i7 = specialinvoke r0.<org.jdesktop.layout.WindowsLayoutStyle: int dluToPixels(int,int)>(4, i0);

        $i8 = virtualinvoke r0.<org.jdesktop.layout.WindowsLayoutStyle: int getCBRBPadding(javax.swing.JComponent,javax.swing.JComponent,int,int)>(r1, r2, i0, $i7);

        return $i8;
    }

    public int getContainerGap(javax.swing.JComponent, int, java.awt.Container)
    {
        javax.swing.JComponent r1;
        org.jdesktop.layout.WindowsLayoutStyle r0;
        int i0, $i1, $i2;
        java.awt.Container r2;

        r0 := @this: org.jdesktop.layout.WindowsLayoutStyle;

        r1 := @parameter0: javax.swing.JComponent;

        i0 := @parameter1: int;

        r2 := @parameter2: java.awt.Container;

        specialinvoke r0.<org.jdesktop.layout.LayoutStyle: int getContainerGap(javax.swing.JComponent,int,java.awt.Container)>(r1, i0, r2);

        $i1 = specialinvoke r0.<org.jdesktop.layout.WindowsLayoutStyle: int dluToPixels(int,int)>(7, i0);

        $i2 = virtualinvoke r0.<org.jdesktop.layout.WindowsLayoutStyle: int getCBRBPadding(javax.swing.JComponent,int,int)>(r1, i0, $i1);

        return $i2;
    }

    private int dluToPixels(int, int)
    {
        java.lang.AssertionError $r1;
        org.jdesktop.layout.WindowsLayoutStyle r0;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;

        r0 := @this: org.jdesktop.layout.WindowsLayoutStyle;

        i2 := @parameter0: int;

        i1 := @parameter1: int;

        $i0 = r0.<org.jdesktop.layout.WindowsLayoutStyle: int baseUnitX>;

        if $i0 != 0 goto label1;

        specialinvoke r0.<org.jdesktop.layout.WindowsLayoutStyle: void calculateBaseUnits()>();

     label1:
        if i1 == 3 goto label2;

        if i1 != 7 goto label3;

     label2:
        $i3 = r0.<org.jdesktop.layout.WindowsLayoutStyle: int baseUnitX>;

        $i4 = i2 * $i3;

        $i5 = $i4 / 4;

        return $i5;

     label3:
        $z0 = <org.jdesktop.layout.WindowsLayoutStyle: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        if i1 == 1 goto label4;

        if i1 == 5 goto label4;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label4:
        $i6 = r0.<org.jdesktop.layout.WindowsLayoutStyle: int baseUnitY>;

        $i7 = i2 * $i6;

        $i8 = $i7 / 8;

        return $i8;
    }

    private void calculateBaseUnits()
    {
        java.awt.Font $r1;
        org.jdesktop.layout.WindowsLayoutStyle r3;
        java.awt.FontMetrics $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.awt.Toolkit $r0;

        r3 := @this: org.jdesktop.layout.WindowsLayoutStyle;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = staticinvoke <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>("Button.font");

        $r2 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r1);

        $i0 = virtualinvoke $r2.<java.awt.FontMetrics: int stringWidth(java.lang.String)>("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");

        r3.<org.jdesktop.layout.WindowsLayoutStyle: int baseUnitX> = $i0;

        $i1 = r3.<org.jdesktop.layout.WindowsLayoutStyle: int baseUnitX>;

        $i2 = $i1 / 26;

        $i3 = $i2 + 1;

        $i4 = $i3 / 2;

        r3.<org.jdesktop.layout.WindowsLayoutStyle: int baseUnitX> = $i4;

        $i5 = virtualinvoke $r2.<java.awt.FontMetrics: int getAscent()>();

        $i6 = virtualinvoke $r2.<java.awt.FontMetrics: int getDescent()>();

        $i7 = $i5 + $i6;

        $i8 = $i7 - 1;

        r3.<org.jdesktop.layout.WindowsLayoutStyle: int baseUnitY> = $i8;

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.jdesktop.layout.WindowsLayoutStyle: java.lang.Class class$org$jdesktop$layout$WindowsLayoutStyle>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.jdesktop.layout.WindowsLayoutStyle: java.lang.Class class$(java.lang.String)>("org.jdesktop.layout.WindowsLayoutStyle");

        <org.jdesktop.layout.WindowsLayoutStyle: java.lang.Class class$org$jdesktop$layout$WindowsLayoutStyle> = $r1;

        goto label2;

     label1:
        $r1 = <org.jdesktop.layout.WindowsLayoutStyle: java.lang.Class class$org$jdesktop$layout$WindowsLayoutStyle>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.jdesktop.layout.WindowsLayoutStyle: boolean $assertionsDisabled> = $z1;

        return;
    }
}
