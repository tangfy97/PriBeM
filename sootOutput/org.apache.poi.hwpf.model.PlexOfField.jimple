public class org.apache.poi.hwpf.model.PlexOfField extends java.lang.Object
{
    private final org.apache.poi.hwpf.model.GenericPropertyNode propertyNode;
    private final org.apache.poi.hwpf.model.FieldDescriptor fld;

    public void <init>(int, int, byte[])
    {
        byte[] r2;
        org.apache.poi.hwpf.model.PlexOfField r0;
        org.apache.poi.hwpf.model.FieldDescriptor $r3;
        org.apache.poi.hwpf.model.GenericPropertyNode $r1;
        int i0, i1;

        r0 := @this: org.apache.poi.hwpf.model.PlexOfField;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.poi.hwpf.model.GenericPropertyNode;

        specialinvoke $r1.<org.apache.poi.hwpf.model.GenericPropertyNode: void <init>(int,int,byte[])>(i0, i1, r2);

        r0.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.GenericPropertyNode propertyNode> = $r1;

        $r3 = new org.apache.poi.hwpf.model.FieldDescriptor;

        specialinvoke $r3.<org.apache.poi.hwpf.model.FieldDescriptor: void <init>(byte[])>(r2);

        r0.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.FieldDescriptor fld> = $r3;

        return;
    }

    public void <init>(org.apache.poi.hwpf.model.GenericPropertyNode)
    {
        byte[] $r3;
        org.apache.poi.hwpf.model.PlexOfField r0;
        org.apache.poi.hwpf.model.FieldDescriptor $r2;
        org.apache.poi.hwpf.model.GenericPropertyNode r1;

        r0 := @this: org.apache.poi.hwpf.model.PlexOfField;

        r1 := @parameter0: org.apache.poi.hwpf.model.GenericPropertyNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.GenericPropertyNode propertyNode> = r1;

        $r2 = new org.apache.poi.hwpf.model.FieldDescriptor;

        $r3 = virtualinvoke r1.<org.apache.poi.hwpf.model.GenericPropertyNode: byte[] getBytes()>();

        specialinvoke $r2.<org.apache.poi.hwpf.model.FieldDescriptor: void <init>(byte[])>($r3);

        r0.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.FieldDescriptor fld> = $r2;

        return;
    }

    public int getFcStart()
    {
        int $i0;
        org.apache.poi.hwpf.model.PlexOfField r0;
        org.apache.poi.hwpf.model.GenericPropertyNode $r1;

        r0 := @this: org.apache.poi.hwpf.model.PlexOfField;

        $r1 = r0.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.GenericPropertyNode propertyNode>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.GenericPropertyNode: int getStart()>();

        return $i0;
    }

    public int getFcEnd()
    {
        int $i0;
        org.apache.poi.hwpf.model.PlexOfField r0;
        org.apache.poi.hwpf.model.GenericPropertyNode $r1;

        r0 := @this: org.apache.poi.hwpf.model.PlexOfField;

        $r1 = r0.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.GenericPropertyNode propertyNode>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.GenericPropertyNode: int getEnd()>();

        return $i0;
    }

    public org.apache.poi.hwpf.model.FieldDescriptor getFld()
    {
        org.apache.poi.hwpf.model.PlexOfField r0;
        org.apache.poi.hwpf.model.FieldDescriptor $r1;

        r0 := @this: org.apache.poi.hwpf.model.PlexOfField;

        $r1 = r0.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.FieldDescriptor fld>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        java.lang.Integer $r2, $r3;
        org.apache.poi.hwpf.model.PlexOfField r1;
        short $s5, $s6;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i7;
        java.lang.String $r5, $r7, $r8;
        org.apache.poi.hwpf.model.FieldDescriptor $r4, $r6;

        r1 := @this: org.apache.poi.hwpf.model.PlexOfField;

        $r0 = newarray (java.lang.Object)[4];

        $i0 = virtualinvoke r1.<org.apache.poi.hwpf.model.PlexOfField: int getFcStart()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $i1 = virtualinvoke r1.<org.apache.poi.hwpf.model.PlexOfField: int getFcEnd()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0[1] = $r3;

        $r4 = r1.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.FieldDescriptor fld>;

        $i2 = virtualinvoke $r4.<org.apache.poi.hwpf.model.FieldDescriptor: int getBoundaryType()>();

        $i3 = 255 & $i2;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        $r0[2] = $r5;

        $r6 = r1.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.FieldDescriptor fld>;

        $b4 = virtualinvoke $r6.<org.apache.poi.hwpf.model.FieldDescriptor: byte getFlt()>();

        $s6 = (short) $b4;

        $s5 = 255 & $s6;

        $i7 = (int) $s5;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        $r0[3] = $r7;

        $r8 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("[{0}, {1}) - FLD - 0x{2}; 0x{3}", $r0);

        return $r8;
    }
}
