public class org.eclipse.jdt.internal.compiler.codegen.CharArrayCache extends java.lang.Object
{
    public char[][] keyTable;
    public int[] valueTable;
    int elementSize;
    int threshold;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: void <init>(int)>(9);

        return;
    }

    public void <init>(int)
    {
        int[] $r2;
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;
        int i0, $i1, $i2;
        char[][] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int elementSize> = 0;

        $i1 = i0 * 2;

        $i2 = $i1 / 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int threshold> = $i2;

        $r1 = newarray (char[])[i0];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable> = $r1;

        $r2 = newarray (int)[i0];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable> = $r2;

        return;
    }

    public void clear()
    {
        int[] $r3;
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;
        int i0, $i2;
        char[][] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        i0 = lengthof $r1;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r2[i0] = null;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        $r3[i0] = 0;

     label2:
        $i2 = (int) -1;

        i0 = i0 + $i2;

        if i0 >= 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int elementSize> = 0;

        return;
    }

    public boolean containsKey(char[])
    {
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;
        char[][] $r1, $r3, $r5;
        int i0, $i1, i2;
        char[] r2, $r4, $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i2 = $i1 % i0;

        goto label3;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r4 = $r3[i2];

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        if i2 != i0 goto label3;

        i2 = 0;

     label3:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r6 = $r5[i2];

        if $r6 != null goto label1;

        return 0;
    }

    public int get(char[])
    {
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;
        char[][] $r1, $r3, $r6;
        int[] $r5;
        int i0, $i1, $i2, i3, $i5;
        char[] r2, $r4, $r7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i3 = $i1 % i0;

        goto label3;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r4 = $r3[i3];

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, r2);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        $i2 = $r5[i3];

        return $i2;

     label2:
        i3 = i3 + 1;

        if i3 != i0 goto label3;

        i3 = 0;

     label3:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r7 = $r6[i3];

        if $r7 != null goto label1;

        $i5 = (int) -1;

        return $i5;
    }

    public int putIfAbsent(char[], int)
    {
        char[][] $r1, $r3, $r6, $r8;
        int[] $r5, $r7;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, i8;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;
        char[] r2, $r4, $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        r2 := @parameter0: char[];

        i3 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i8 = $i1 % i0;

        goto label3;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r4 = $r3[i8];

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, r2);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        $i2 = $r5[i8];

        return $i2;

     label2:
        i8 = i8 + 1;

        if i8 != i0 goto label3;

        i8 = 0;

     label3:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r9 = $r8[i8];

        if $r9 != null goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r6[i8] = r2;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        $r7[i8] = i3;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int elementSize>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int elementSize> = $i5;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int threshold>;

        if $i5 <= $i6 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: void rehash()>();

     label4:
        $i7 = neg i3;

        return $i7;
    }

    private int put(char[], int)
    {
        char[][] $r1, $r3, $r6, $r8;
        int[] $r5, $r7;
        int i0, $i1, i2, $i3, $i4, $i5, i6;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;
        char[] r2, $r4, $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        r2 := @parameter0: char[];

        i2 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i6 = $i1 % i0;

        goto label3;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r4 = $r3[i6];

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, r2);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        $r5[i6] = i2;

        return i2;

     label2:
        i6 = i6 + 1;

        if i6 != i0 goto label3;

        i6 = 0;

     label3:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r9 = $r8[i6];

        if $r9 != null goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r6[i6] = r2;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        $r7[i6] = i2;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int elementSize>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int elementSize> = $i4;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int threshold>;

        if $i4 <= $i5 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: void rehash()>();

     label4:
        return i2;
    }

    private void rehash()
    {
        char[][] $r2, $r3, $r4, $r6, $r9;
        int[] $r7, $r10;
        int $i0, $i1, $i2, $i3, i4, $i6;
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r1, $r11;
        char[] $r5, $r8;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        $r11 = new org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $i0 = lengthof $r2;

        $i1 = $i0 * 2;

        specialinvoke $r11.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: void <init>(int)>($i1);

        $r3 = r1.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        i4 = lengthof $r3;

        goto label2;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r5 = $r4[i4];

        if $r5 == null goto label2;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r8 = $r6[i4];

        $r7 = r1.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        $i2 = $r7[i4];

        specialinvoke $r11.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int put(char[],int)>($r8, $i2);

     label2:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        if i4 >= 0 goto label1;

        $r9 = $r11.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable> = $r9;

        $r10 = $r11.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable> = $r10;

        $i3 = $r11.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int threshold>;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int threshold> = $i3;

        return;
    }

    public void remove(char[])
    {
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;
        char[][] $r1, $r3, $r6, $r7;
        int[] $r5;
        int i0, $i1, i2;
        char[] r2, $r4, $r8;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i2 = $i1 % i0;

        goto label3;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r4 = $r3[i2];

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, r2);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        $r5[i2] = 0;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r6[i2] = null;

        return;

     label2:
        i2 = i2 + 1;

        if i2 != i0 goto label3;

        i2 = 0;

     label3:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r8 = $r7[i2];

        if $r8 != null goto label1;

        return;
    }

    public char[] returnKeyFor(int)
    {
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;
        char[][] $r1, $r3;
        int[] $r2;
        int $i0, i1, $i2, i3, $i5;
        char[] $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        i1 := @parameter0: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        i3 = lengthof $r1;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        $i2 = $r2[i3];

        if $i2 != i1 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r4 = $r3[i3];

        return $r4;

     label2:
        $i0 = i3;

        $i5 = (int) -1;

        i3 = i3 + $i5;

        if $i0 > 0 goto label1;

        return null;
    }

    public int size()
    {
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int elementSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.codegen.CharArrayCache r0;
        char[][] $r2, $r4;
        int[] $r8;
        java.lang.StringBuffer $r1, $r6, $r7;
        int $i0, $i1, i2;
        char[] $r3, $r5;
        java.lang.String $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CharArrayCache;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int size()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        i2 = 0;

        goto label4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r3 = $r2[i2];

        if $r3 == null goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: char[][] keyTable>;

        $r5 = $r4[i2];

        $r6 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("->");

        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CharArrayCache: int[] valueTable>;

        $i1 = $r8[i2];

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

     label2:
        if i2 >= $i0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label3:
        i2 = i2 + 1;

     label4:
        if i2 < $i0 goto label1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r9 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
