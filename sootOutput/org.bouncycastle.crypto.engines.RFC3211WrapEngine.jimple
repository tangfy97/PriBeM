public class org.bouncycastle.crypto.engines.RFC3211WrapEngine extends java.lang.Object implements org.bouncycastle.crypto.Wrapper
{
    private org.bouncycastle.crypto.modes.CBCBlockCipher engine;
    private org.bouncycastle.crypto.params.ParametersWithIV param;
    private boolean forWrapping;
    private java.security.SecureRandom rand;

    public void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        org.bouncycastle.crypto.modes.CBCBlockCipher $r1;
        org.bouncycastle.crypto.engines.RFC3211WrapEngine r0;
        org.bouncycastle.crypto.BlockCipher r2;

        r0 := @this: org.bouncycastle.crypto.engines.RFC3211WrapEngine;

        r2 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.bouncycastle.crypto.modes.CBCBlockCipher;

        specialinvoke $r1.<org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>(r2);

        r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine> = $r1;

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.params.ParametersWithIV $r2, $r7;
        org.bouncycastle.crypto.engines.RFC3211WrapEngine r0;
        java.security.SecureRandom $r3, $r5;
        org.bouncycastle.crypto.params.ParametersWithRandom r4;
        boolean z0, $z1;
        org.bouncycastle.crypto.CipherParameters r1, $r6;

        r0 := @this: org.bouncycastle.crypto.engines.RFC3211WrapEngine;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: boolean forWrapping> = z0;

        $z1 = r1 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r4 = (org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r5 = virtualinvoke r4.<org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: java.security.SecureRandom rand> = $r5;

        $r6 = virtualinvoke r4.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r7 = (org.bouncycastle.crypto.params.ParametersWithIV) $r6;

        r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV param> = $r7;

        goto label3;

     label1:
        if z0 == 0 goto label2;

        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: java.security.SecureRandom rand> = $r3;

     label2:
        $r2 = (org.bouncycastle.crypto.params.ParametersWithIV) r1;

        r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV param> = $r2;

     label3:
        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.modes.CBCBlockCipher $r2;
        org.bouncycastle.crypto.engines.RFC3211WrapEngine r1;
        org.bouncycastle.crypto.BlockCipher $r3;
        java.lang.StringBuilder $r0, $r5, $r6;
        java.lang.String $r4, $r7;

        r1 := @this: org.bouncycastle.crypto.engines.RFC3211WrapEngine;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r4 = interfaceinvoke $r3.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/RFC3211Wrap");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public byte[] wrap(byte[], int, int)
    {
        byte[] r4, r9;
        java.lang.IllegalStateException $r8;
        org.bouncycastle.crypto.params.ParametersWithIV $r1;
        java.security.SecureRandom $r7;
        byte $b13, $b16, $b17, $b18, $b19, $b21, $b22, $b23, $b25, $b26, $b27;
        boolean $z0;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r2, $r3, $r5, $r6;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i14, $i15, $i20, $i24, i28, $i29, i30, i31;
        org.bouncycastle.crypto.engines.RFC3211WrapEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RFC3211WrapEngine;

        r4 := @parameter0: byte[];

        i9 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: boolean forWrapping>;

        if $z0 != 0 goto label01;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not set for wrapping");

        throw $r8;

     label01:
        $r2 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r1 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV param>;

        virtualinvoke $r2.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r1);

        $r3 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i0 = virtualinvoke $r3.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i3 = i1 + 4;

        $i2 = $i0 * 2;

        if $i3 >= $i2 goto label02;

        $i14 = $i0 * 2;

        r9 = newarray (byte)[$i14];

        goto label05;

     label02:
        $i4 = i1 + 4;

        $i5 = $i4 % $i0;

        if $i5 != 0 goto label03;

        $i15 = i1 + 4;

        goto label04;

     label03:
        $i6 = i1 + 4;

        $i7 = $i6 / $i0;

        $i8 = $i7 + 1;

        $i15 = $i8 * $i0;

     label04:
        r9 = newarray (byte)[$i15];

     label05:
        $b16 = (byte) i1;

        r9[0] = $b16;

        $b17 = r4[i9];

        $b18 = $b17 ^ -1;

        $b19 = (byte) $b18;

        r9[1] = $b19;

        $i20 = i9 + 1;

        $b21 = r4[$i20];

        $b22 = $b21 ^ -1;

        $b23 = (byte) $b22;

        r9[2] = $b23;

        $i24 = i9 + 2;

        $b25 = r4[$i24];

        $b26 = $b25 ^ -1;

        $b27 = (byte) $b26;

        r9[3] = $b27;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i9, r9, 4, i1);

        i28 = i1 + 4;

     label06:
        $i29 = lengthof r9;

        if i28 >= $i29 goto label07;

        $r7 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: java.security.SecureRandom rand>;

        $i12 = virtualinvoke $r7.<java.security.SecureRandom: int nextInt()>();

        $b13 = (byte) $i12;

        r9[i28] = $b13;

        i28 = i28 + 1;

        goto label06;

     label07:
        i30 = 0;

     label08:
        $i10 = lengthof r9;

        if i30 >= $i10 goto label09;

        $r6 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r9, i30, r9, i30);

        i30 = i30 + $i0;

        goto label08;

     label09:
        i31 = 0;

     label10:
        $i11 = lengthof r9;

        if i31 >= $i11 goto label11;

        $r5 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r5.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r9, i31, r9, i31);

        i31 = i31 + $i0;

        goto label10;

     label11:
        return r9;
    }

    public byte[] unwrap(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r2, r3, r4, r22;
        java.lang.IllegalStateException $r23;
        org.bouncycastle.crypto.params.ParametersWithIV $r6, $r10, $r14, $r25, $r26;
        byte $b11, $b15, $b17, $b19, $b20, b21, $b22, $b23, b26;
        boolean $z0;
        org.bouncycastle.crypto.CipherParameters $r8, $r12;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r1, $r7, $r11, $r13, $r15, $r18, $r19;
        org.bouncycastle.crypto.InvalidCipherTextException $r24, $r27, $r28;
        short $s14, $s16, $s28, $s30;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i18, i24, i25, i27, $i29, $i31, $i32;
        org.bouncycastle.crypto.engines.RFC3211WrapEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RFC3211WrapEngine;

        r4 := @parameter0: byte[];

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label01;

        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not set for unwrapping");

        throw $r23;

     label01:
        $r1 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i2 = 2 * $i0;

        if i1 >= $i2 goto label02;

        $r24 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r24.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("input too short");

        throw $r24;

     label02:
        r2 = newarray (byte)[i1];

        r3 = newarray (byte)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i3, r2, 0, i1);

        $i4 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i3, r3, 0, $i4);

        $r7 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r25 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r6 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV param>;

        $r8 = virtualinvoke $r6.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        specialinvoke $r25.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r8, r3);

        virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r25);

        i24 = $i0;

     label03:
        $i5 = lengthof r2;

        if i24 >= $i5 goto label04;

        $r19 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r19.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r2, i24, r2, i24);

        i24 = i24 + $i0;

        goto label03;

     label04:
        $i7 = lengthof r2;

        $i6 = lengthof r3;

        $i9 = $i7 - $i6;

        $i8 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i9, r3, 0, $i8);

        $r11 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r26 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r10 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV param>;

        $r12 = virtualinvoke $r10.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        specialinvoke $r26.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r12, r3);

        virtualinvoke $r11.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r26);

        $r13 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r13.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r2, 0, r2, 0);

        $r15 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r14 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV param>;

        virtualinvoke $r15.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r14);

        i25 = 0;

     label05:
        $i10 = lengthof r2;

        if i25 >= $i10 goto label06;

        $r18 = r0.<org.bouncycastle.crypto.engines.RFC3211WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r18.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r2, i25, r2, i25);

        i25 = i25 + $i0;

        goto label05;

     label06:
        $b11 = r2[0];

        $s28 = (short) $b11;

        $s14 = $s28 & 255;

        $i12 = lengthof r2;

        $i13 = $i12 - 4;

        $i29 = (int) $s14;

        if $i29 <= $i13 goto label07;

        $r27 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r27.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("wrapped key corrupted");

        throw $r27;

     label07:
        $b15 = r2[0];

        $s30 = (short) $b15;

        $s16 = $s30 & 255;

        $i31 = (int) $s16;

        r22 = newarray (byte)[$i31];

        $b17 = r2[0];

        $i32 = (int) $b17;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 4, r22, 0, $i32);

        b26 = 0;

        i27 = 0;

     label08:
        if i27 == 3 goto label09;

        $i18 = 1 + i27;

        $b19 = r2[$i18];

        $b20 = $b19 ^ -1;

        b21 = (byte) $b20;

        $b22 = r22[i27];

        $b23 = b21 ^ $b22;

        b26 = b26 | $b23;

        i27 = i27 + 1;

        goto label08;

     label09:
        if b26 == 0 goto label10;

        $r28 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r28.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("wrapped key fails checksum");

        throw $r28;

     label10:
        return r22;
    }
}
