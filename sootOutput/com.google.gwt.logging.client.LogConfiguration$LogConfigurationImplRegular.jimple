class com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular extends java.lang.Object implements com.google.gwt.logging.client.LogConfiguration$LogConfigurationImpl
{
    private java.util.logging.Logger root;

    private void <init>()
    {
        com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular r0;

        r0 := @this: com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void configureClientSideLogging()
    {
        com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular r0;
        java.util.logging.Logger $r1, $r2, $r3, $r4;

        r0 := @this: com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular;

        $r1 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("");

        r0.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: java.util.logging.Logger root> = $r1;

        $r2 = r0.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: java.util.logging.Logger root>;

        virtualinvoke $r2.<java.util.logging.Logger: void setUseParentHandlers(boolean)>(0);

        $r3 = r0.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: java.util.logging.Logger root>;

        specialinvoke r0.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: void setLevels(java.util.logging.Logger)>($r3);

        $r4 = r0.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: java.util.logging.Logger root>;

        specialinvoke r0.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: void setDefaultHandlers(java.util.logging.Logger)>($r4);

        return;
    }

    public boolean loggingIsEnabled()
    {
        com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular r0;

        r0 := @this: com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular;

        return 1;
    }

    private void addHandlerIfNotNull(java.util.logging.Logger, java.util.logging.Handler)
    {
        java.util.logging.Handler r0;
        java.util.logging.Logger r1;
        com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular r2;
        boolean $z0;

        r2 := @this: com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular;

        r1 := @parameter0: java.util.logging.Logger;

        r0 := @parameter1: java.util.logging.Handler;

        $z0 = r0 instanceof com.google.gwt.logging.client.NullLogHandler;

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.util.logging.Logger: void addHandler(java.util.logging.Handler)>(r0);

     label1:
        return;
    }

    private java.util.logging.Level parseLevel(java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular r28;
        java.util.logging.Level $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        java.lang.String r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;

        r28 := @this: com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return null;

     label01:
        $r1 = <java.util.logging.Level: java.util.logging.Level OFF>;

        $r2 = virtualinvoke $r1.<java.util.logging.Level: java.lang.String getName()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label02;

        $r27 = <java.util.logging.Level: java.util.logging.Level OFF>;

        return $r27;

     label02:
        $r3 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r4 = virtualinvoke $r3.<java.util.logging.Level: java.lang.String getName()>();

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label03;

        $r26 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        return $r26;

     label03:
        $r5 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r6 = virtualinvoke $r5.<java.util.logging.Level: java.lang.String getName()>();

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label04;

        $r25 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        return $r25;

     label04:
        $r7 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r8 = virtualinvoke $r7.<java.util.logging.Level: java.lang.String getName()>();

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label05;

        $r24 = <java.util.logging.Level: java.util.logging.Level INFO>;

        return $r24;

     label05:
        $r9 = <java.util.logging.Level: java.util.logging.Level CONFIG>;

        $r10 = virtualinvoke $r9.<java.util.logging.Level: java.lang.String getName()>();

        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z4 == 0 goto label06;

        $r23 = <java.util.logging.Level: java.util.logging.Level CONFIG>;

        return $r23;

     label06:
        $r11 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r12 = virtualinvoke $r11.<java.util.logging.Level: java.lang.String getName()>();

        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z5 == 0 goto label07;

        $r22 = <java.util.logging.Level: java.util.logging.Level FINE>;

        return $r22;

     label07:
        $r13 = <java.util.logging.Level: java.util.logging.Level FINER>;

        $r14 = virtualinvoke $r13.<java.util.logging.Level: java.lang.String getName()>();

        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z6 == 0 goto label08;

        $r21 = <java.util.logging.Level: java.util.logging.Level FINER>;

        return $r21;

     label08:
        $r15 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $r16 = virtualinvoke $r15.<java.util.logging.Level: java.lang.String getName()>();

        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z7 == 0 goto label09;

        $r20 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        return $r20;

     label09:
        $r17 = <java.util.logging.Level: java.util.logging.Level ALL>;

        $r18 = virtualinvoke $r17.<java.util.logging.Level: java.lang.String getName()>();

        $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z8 == 0 goto label10;

        $r19 = <java.util.logging.Level: java.util.logging.Level ALL>;

        return $r19;

     label10:
        return null;
    }

    private void setDefaultHandlers(java.util.logging.Logger)
    {
        com.google.gwt.user.client.ui.HasWidgets r13;
        com.google.gwt.logging.client.HasWidgetsLogHandler $r14;
        boolean $z0;
        java.util.logging.Logger r3;
        java.lang.Object $r0, $r4, $r6, $r8, $r10, $r12;
        java.util.logging.Handler r1, r5, r7, r9, r11;
        com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular r2;

        r2 := @this: com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular;

        r3 := @parameter0: java.util.logging.Logger;

        $r0 = staticinvoke <com.google.gwt.core.client.GWT: java.lang.Object create(java.lang.Class)>(class "Lcom/google/gwt/logging/client/ConsoleLogHandler;");

        r1 = (java.util.logging.Handler) $r0;

        specialinvoke r2.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: void addHandlerIfNotNull(java.util.logging.Logger,java.util.logging.Handler)>(r3, r1);

        $r4 = staticinvoke <com.google.gwt.core.client.GWT: java.lang.Object create(java.lang.Class)>(class "Lcom/google/gwt/logging/client/DevelopmentModeLogHandler;");

        r5 = (java.util.logging.Handler) $r4;

        specialinvoke r2.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: void addHandlerIfNotNull(java.util.logging.Logger,java.util.logging.Handler)>(r3, r5);

        $r6 = staticinvoke <com.google.gwt.core.client.GWT: java.lang.Object create(java.lang.Class)>(class "Lcom/google/gwt/logging/client/FirebugLogHandler;");

        r7 = (java.util.logging.Handler) $r6;

        specialinvoke r2.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: void addHandlerIfNotNull(java.util.logging.Logger,java.util.logging.Handler)>(r3, r7);

        $r8 = staticinvoke <com.google.gwt.core.client.GWT: java.lang.Object create(java.lang.Class)>(class "Lcom/google/gwt/logging/client/SystemLogHandler;");

        r9 = (java.util.logging.Handler) $r8;

        specialinvoke r2.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: void addHandlerIfNotNull(java.util.logging.Logger,java.util.logging.Handler)>(r3, r9);

        $r10 = staticinvoke <com.google.gwt.core.client.GWT: java.lang.Object create(java.lang.Class)>(class "Lcom/google/gwt/logging/client/SimpleRemoteLogHandler;");

        r11 = (java.util.logging.Handler) $r10;

        specialinvoke r2.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: void addHandlerIfNotNull(java.util.logging.Logger,java.util.logging.Handler)>(r3, r11);

        $r12 = staticinvoke <com.google.gwt.core.client.GWT: java.lang.Object create(java.lang.Class)>(class "Lcom/google/gwt/logging/client/LoggingPopup;");

        r13 = (com.google.gwt.user.client.ui.HasWidgets) $r12;

        $z0 = r13 instanceof com.google.gwt.logging.client.NullLoggingPopup;

        if $z0 != 0 goto label1;

        $r14 = new com.google.gwt.logging.client.HasWidgetsLogHandler;

        specialinvoke $r14.<com.google.gwt.logging.client.HasWidgetsLogHandler: void <init>(com.google.gwt.user.client.ui.HasWidgets)>(r13);

        specialinvoke r2.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: void addHandlerIfNotNull(java.util.logging.Logger,java.util.logging.Handler)>(r3, $r14);

     label1:
        return;
    }

    private void setLevels(java.util.logging.Logger)
    {
        com.google.gwt.logging.client.DefaultLevel r4;
        java.lang.Object $r3;
        java.lang.String $r1;
        com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular r0;
        java.util.logging.Logger r5;
        java.util.logging.Level $r2, $r6;

        r0 := @this: com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular;

        r5 := @parameter0: java.util.logging.Logger;

        $r1 = staticinvoke <com.google.gwt.user.client.Window$Location: java.lang.String getParameter(java.lang.String)>("logLevel");

        $r2 = specialinvoke r0.<com.google.gwt.logging.client.LogConfiguration$LogConfigurationImplRegular: java.util.logging.Level parseLevel(java.lang.String)>($r1);

        if $r2 == null goto label1;

        virtualinvoke r5.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r2);

        goto label2;

     label1:
        $r3 = staticinvoke <com.google.gwt.core.client.GWT: java.lang.Object create(java.lang.Class)>(class "Lcom/google/gwt/logging/client/DefaultLevel;");

        r4 = (com.google.gwt.logging.client.DefaultLevel) $r3;

        $r6 = interfaceinvoke r4.<com.google.gwt.logging.client.DefaultLevel: java.util.logging.Level getLevel()>();

        virtualinvoke r5.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r6);

     label2:
        return;
    }
}
