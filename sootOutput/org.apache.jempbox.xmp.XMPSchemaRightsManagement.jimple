public class org.apache.jempbox.xmp.XMPSchemaRightsManagement extends org.apache.jempbox.xmp.XMPSchema
{
    public static final java.lang.String NAMESPACE;

    public void <init>(org.apache.jempbox.xmp.XMPMetadata)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        org.apache.jempbox.xmp.XMPMetadata r1;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r1 := @parameter0: org.apache.jempbox.xmp.XMPMetadata;

        specialinvoke r0.<org.apache.jempbox.xmp.XMPSchema: void <init>(org.apache.jempbox.xmp.XMPMetadata,java.lang.String,java.lang.String)>(r1, "xmpRights", "http://ns.adobe.com/xap/1.0/rights/");

        return;
    }

    public void <init>(org.w3c.dom.Element, java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        org.w3c.dom.Element r1;
        java.lang.String r2;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.jempbox.xmp.XMPSchema: void <init>(org.w3c.dom.Element,java.lang.String)>(r1, r2);

        return;
    }

    public void setCertificateURL(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.String r1;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: void setTextProperty(java.lang.String,java.lang.String)>("xmpRights:Certificate", r1);

        return;
    }

    public java.lang.String getCertificateURL()
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Certificate");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setMarked(java.lang.Boolean)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.Boolean r6;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r6 := @parameter0: java.lang.Boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Marked");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: void setBooleanProperty(java.lang.String,java.lang.Boolean)>($r5, r6);

        return;
    }

    public java.lang.Boolean getMarked()
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.Boolean $r6, $r7;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Marked");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.Boolean getBooleanProperty(java.lang.String)>($r5);

        if $r6 == null goto label1;

        $r7 = $r6;

        goto label2;

     label1:
        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        return $r7;
    }

    public void removeOwner(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Owner");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: void removeBagValue(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public void addOwner(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Owner");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: void addBagValue(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.util.List getOwners()
    {
        java.util.List $r6;
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Owner");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.util.List getBagList(java.lang.String)>($r5);

        return $r6;
    }

    public void setUsageTerms(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":UsageTerms");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: void setLanguageProperty(java.lang.String,java.lang.String,java.lang.String)>($r5, null, r6);

        return;
    }

    public java.lang.String getUsageTerms()
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":UsageTerms");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String getLanguageProperty(java.lang.String,java.lang.String)>($r5, null);

        return $r6;
    }

    public void setDescription(java.lang.String, java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6, r7;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":UsageTerms");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: void setLanguageProperty(java.lang.String,java.lang.String,java.lang.String)>($r5, r6, r7);

        return;
    }

    public java.lang.String getUsageTerms(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6, $r7;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":UsageTerms");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String getLanguageProperty(java.lang.String,java.lang.String)>($r5, r6);

        return $r7;
    }

    public java.util.List getUsageTermsLanguages()
    {
        java.util.List $r6;
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":UsageTerms");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.util.List getLanguagePropertyLanguages(java.lang.String)>($r5);

        return $r6;
    }

    public void setWebStatement(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":WebStatement");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getWebStatement()
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":WebStatement");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setCopyright(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Copyright");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getCopyright()
    {
        org.apache.jempbox.xmp.XMPSchemaRightsManagement r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaRightsManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Copyright");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public static void <clinit>()
    {
        <org.apache.jempbox.xmp.XMPSchemaRightsManagement: java.lang.String NAMESPACE> = "http://ns.adobe.com/xap/1.0/rights/";

        return;
    }
}
