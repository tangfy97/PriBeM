public class org.waveprotocol.wave.model.operation.OperationException extends java.lang.Exception
{
    private org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations;

    public void <init>()
    {
        org.waveprotocol.wave.model.operation.OperationException r0;

        r0 := @this: org.waveprotocol.wave.model.operation.OperationException;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        r0.<org.waveprotocol.wave.model.operation.OperationException: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.operation.OperationException r0;

        r0 := @this: org.waveprotocol.wave.model.operation.OperationException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<org.waveprotocol.wave.model.operation.OperationException: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations> = null;

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        org.waveprotocol.wave.model.operation.OperationException r0;

        r0 := @this: org.waveprotocol.wave.model.operation.OperationException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.Throwable)>(r1);

        r0.<org.waveprotocol.wave.model.operation.OperationException: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.String r1;
        org.waveprotocol.wave.model.operation.OperationException r0;

        r0 := @this: org.waveprotocol.wave.model.operation.OperationException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        r0.<org.waveprotocol.wave.model.operation.OperationException: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations> = null;

        return;
    }

    public void <init>(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector r3;
        org.waveprotocol.wave.model.operation.OperationException r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r5;

        r0 := @this: org.waveprotocol.wave.model.operation.OperationException;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Validation failure: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        r0.<org.waveprotocol.wave.model.operation.OperationException: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations> = null;

        r0.<org.waveprotocol.wave.model.operation.OperationException: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations> = r3;

        return;
    }

    public boolean hasViolationsInformation()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r1;
        org.waveprotocol.wave.model.operation.OperationException r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.operation.OperationException;

        $r1 = r0.<org.waveprotocol.wave.model.operation.OperationException: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSchemaViolation()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r1, $r2;
        org.waveprotocol.wave.model.operation.OperationException r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r3, $r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.operation.OperationException;

        $r1 = r0.<org.waveprotocol.wave.model.operation.OperationException: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations>;

        if $r1 == null goto label1;

        $r2 = r0.<org.waveprotocol.wave.model.operation.OperationException: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult getValidationResult()>();

        $r4 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_SCHEMA>;

        if $r3 != $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector getViolations()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r1;
        org.waveprotocol.wave.model.operation.OperationException r0;

        r0 := @this: org.waveprotocol.wave.model.operation.OperationException;

        $r1 = r0.<org.waveprotocol.wave.model.operation.OperationException: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector violations>;

        return $r1;
    }
}
