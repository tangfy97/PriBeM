final class com.mycila.inject.internal.guava.collect.MapConstraints$2 extends com.mycila.inject.internal.guava.collect.ForwardingMapEntry
{
    final java.util.Map$Entry val$entry;
    final com.mycila.inject.internal.guava.collect.MapConstraint val$constraint;

    void <init>(java.util.Map$Entry, com.mycila.inject.internal.guava.collect.MapConstraint)
    {
        java.util.Map$Entry r1;
        com.mycila.inject.internal.guava.collect.MapConstraint r2;
        com.mycila.inject.internal.guava.collect.MapConstraints$2 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$2;

        r1 := @parameter0: java.util.Map$Entry;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.MapConstraint;

        r0.<com.mycila.inject.internal.guava.collect.MapConstraints$2: java.util.Map$Entry val$entry> = r1;

        r0.<com.mycila.inject.internal.guava.collect.MapConstraints$2: com.mycila.inject.internal.guava.collect.MapConstraint val$constraint> = r2;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMapEntry: void <init>()>();

        return;
    }

    protected java.util.Map$Entry delegate()
    {
        java.util.Map$Entry $r1;
        com.mycila.inject.internal.guava.collect.MapConstraints$2 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$2;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.MapConstraints$2: java.util.Map$Entry val$entry>;

        return $r1;
    }

    public java.util.Collection getValue()
    {
        java.util.Map$Entry $r1;
        java.util.Collection $r4, $r5;
        com.mycila.inject.internal.guava.collect.MapConstraints$2$1 $r3;
        java.lang.Object $r2;
        com.mycila.inject.internal.guava.collect.MapConstraints$2 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$2;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.MapConstraints$2: java.util.Map$Entry val$entry>;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.util.Collection) $r2;

        $r3 = new com.mycila.inject.internal.guava.collect.MapConstraints$2$1;

        specialinvoke $r3.<com.mycila.inject.internal.guava.collect.MapConstraints$2$1: void <init>(com.mycila.inject.internal.guava.collect.MapConstraints$2)>(r0);

        $r5 = staticinvoke <com.mycila.inject.internal.guava.collect.Constraints: java.util.Collection constrainedTypePreservingCollection(java.util.Collection,com.mycila.inject.internal.guava.collect.Constraint)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object getValue()
    {
        com.mycila.inject.internal.guava.collect.MapConstraints$2 r0;
        java.util.Collection $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$2;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.MapConstraints$2: java.util.Collection getValue()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.Map$Entry $r1;
        com.mycila.inject.internal.guava.collect.MapConstraints$2 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$2;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.MapConstraints$2: java.util.Map$Entry delegate()>();

        return $r1;
    }
}
