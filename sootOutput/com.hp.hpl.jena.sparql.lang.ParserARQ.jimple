public class com.hp.hpl.jena.sparql.lang.ParserARQ extends com.hp.hpl.jena.sparql.lang.SPARQLParser
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.lang.ParserARQ r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.ParserARQ;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.SPARQLParser: void <init>()>();

        return;
    }

    protected com.hp.hpl.jena.query.Query parse$(com.hp.hpl.jena.query.Query, java.lang.String)
    {
        com.hp.hpl.jena.sparql.lang.ParserARQ$1 $r2;
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.query.Syntax $r1;
        com.hp.hpl.jena.sparql.lang.ParserARQ r3;
        java.lang.String r4;

        r3 := @this: com.hp.hpl.jena.sparql.lang.ParserARQ;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r4 := @parameter1: java.lang.String;

        $r1 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        virtualinvoke r0.<com.hp.hpl.jena.query.Query: void setSyntax(com.hp.hpl.jena.query.Syntax)>($r1);

        $r2 = new com.hp.hpl.jena.sparql.lang.ParserARQ$1;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.lang.ParserARQ$1: void <init>(com.hp.hpl.jena.sparql.lang.ParserARQ)>(r3);

        staticinvoke <com.hp.hpl.jena.sparql.lang.ParserARQ: void perform(com.hp.hpl.jena.query.Query,java.lang.String,com.hp.hpl.jena.sparql.lang.ParserARQ$Action)>(r0, r4, $r2);

        virtualinvoke r3.<com.hp.hpl.jena.sparql.lang.ParserARQ: void validateParsedQuery(com.hp.hpl.jena.query.Query)>(r0);

        return r0;
    }

    public static com.hp.hpl.jena.sparql.syntax.Element parseElement(java.lang.String)
    {
        com.hp.hpl.jena.sparql.lang.ParserARQ$2 $r1;
        com.hp.hpl.jena.query.Query $r0;
        com.hp.hpl.jena.sparql.syntax.Element $r3;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

        $r0 = new com.hp.hpl.jena.query.Query;

        specialinvoke $r0.<com.hp.hpl.jena.query.Query: void <init>()>();

        $r1 = new com.hp.hpl.jena.sparql.lang.ParserARQ$2;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.lang.ParserARQ$2: void <init>(com.hp.hpl.jena.query.Query)>($r0);

        staticinvoke <com.hp.hpl.jena.sparql.lang.ParserARQ: void perform(com.hp.hpl.jena.query.Query,java.lang.String,com.hp.hpl.jena.sparql.lang.ParserARQ$Action)>($r0, r2, $r1);

        $r3 = virtualinvoke $r0.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.syntax.Element getQueryPattern()>();

        return $r3;
    }

    public static com.hp.hpl.jena.sparql.syntax.Template parseTemplate(java.lang.String)
    {
        com.hp.hpl.jena.query.Query $r0;
        com.hp.hpl.jena.sparql.syntax.Template $r3;
        java.lang.String r2;
        com.hp.hpl.jena.sparql.lang.ParserARQ$3 $r1;

        r2 := @parameter0: java.lang.String;

        $r0 = new com.hp.hpl.jena.query.Query;

        specialinvoke $r0.<com.hp.hpl.jena.query.Query: void <init>()>();

        $r1 = new com.hp.hpl.jena.sparql.lang.ParserARQ$3;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.lang.ParserARQ$3: void <init>(com.hp.hpl.jena.query.Query)>($r0);

        staticinvoke <com.hp.hpl.jena.sparql.lang.ParserARQ: void perform(com.hp.hpl.jena.query.Query,java.lang.String,com.hp.hpl.jena.sparql.lang.ParserARQ$Action)>($r0, r2, $r1);

        $r3 = virtualinvoke $r0.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.syntax.Template getConstructTemplate()>();

        return $r3;
    }

    private static void perform(com.hp.hpl.jena.query.Query, java.lang.String, com.hp.hpl.jena.sparql.lang.ParserARQ$Action)
    {
        java.lang.Throwable $r5;
        com.hp.hpl.jena.query.Query r3;
        com.hp.hpl.jena.shared.JenaException $r11;
        com.hp.hpl.jena.query.QueryException $r14, $r29, $r31;
        java.lang.Error $r8;
        com.hp.hpl.jena.sparql.lang.arq.ParseException $r20;
        com.hp.hpl.jena.sparql.lang.arq.TokenMgrError $r15;
        int i0, i1, $i2, $i3, $i5, $i7;
        com.hp.hpl.jena.sparql.lang.arq.Token $r16, $r17, $r23, $r24;
        java.lang.String r1, $r7, $r10, $r13, $r19, $r22;
        com.hp.hpl.jena.query.QueryParseException $r27, $r28, $r30;
        com.hp.hpl.jena.sparql.lang.ParserARQ$Action r4;
        com.hp.hpl.jena.sparql.lang.arq.ARQParser $r26;
        java.io.StringReader $r25;

        r3 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: com.hp.hpl.jena.sparql.lang.ParserARQ$Action;

        $r25 = new java.io.StringReader;

        specialinvoke $r25.<java.io.StringReader: void <init>(java.lang.String)>(r1);

        $r26 = new com.hp.hpl.jena.sparql.lang.arq.ARQParser;

        specialinvoke $r26.<com.hp.hpl.jena.sparql.lang.arq.ARQParser: void <init>(java.io.Reader)>($r25);

     label1:
        virtualinvoke r3.<com.hp.hpl.jena.query.Query: void setStrict(boolean)>(1);

        virtualinvoke $r26.<com.hp.hpl.jena.sparql.lang.arq.ARQParser: void setQuery(com.hp.hpl.jena.query.Query)>(r3);

        interfaceinvoke r4.<com.hp.hpl.jena.sparql.lang.ParserARQ$Action: void exec(com.hp.hpl.jena.sparql.lang.arq.ARQParser)>($r26);

     label2:
        goto label9;

     label3:
        $r20 := @caughtexception;

        $r27 = new com.hp.hpl.jena.query.QueryParseException;

        $r22 = virtualinvoke $r20.<com.hp.hpl.jena.sparql.lang.arq.ParseException: java.lang.String getMessage()>();

        $r23 = $r20.<com.hp.hpl.jena.sparql.lang.arq.ParseException: com.hp.hpl.jena.sparql.lang.arq.Token currentToken>;

        $i3 = $r23.<com.hp.hpl.jena.sparql.lang.arq.Token: int beginLine>;

        $r24 = $r20.<com.hp.hpl.jena.sparql.lang.arq.ParseException: com.hp.hpl.jena.sparql.lang.arq.Token currentToken>;

        $i2 = $r24.<com.hp.hpl.jena.sparql.lang.arq.Token: int beginColumn>;

        specialinvoke $r27.<com.hp.hpl.jena.query.QueryParseException: void <init>(java.lang.String,int,int)>($r22, $i3, $i2);

        throw $r27;

     label4:
        $r15 := @caughtexception;

        $r16 = $r26.<com.hp.hpl.jena.sparql.lang.arq.ARQParser: com.hp.hpl.jena.sparql.lang.arq.Token token>;

        i0 = $r16.<com.hp.hpl.jena.sparql.lang.arq.Token: int endColumn>;

        $r17 = $r26.<com.hp.hpl.jena.sparql.lang.arq.ARQParser: com.hp.hpl.jena.sparql.lang.arq.Token token>;

        i1 = $r17.<com.hp.hpl.jena.sparql.lang.arq.Token: int endLine>;

        $r28 = new com.hp.hpl.jena.query.QueryParseException;

        $r19 = virtualinvoke $r15.<com.hp.hpl.jena.sparql.lang.arq.TokenMgrError: java.lang.String getMessage()>();

        specialinvoke $r28.<com.hp.hpl.jena.query.QueryParseException: void <init>(java.lang.String,int,int)>($r19, i1, i0);

        throw $r28;

     label5:
        $r14 := @caughtexception;

        throw $r14;

     label6:
        $r11 := @caughtexception;

        $r29 = new com.hp.hpl.jena.query.QueryException;

        $r13 = virtualinvoke $r11.<com.hp.hpl.jena.shared.JenaException: java.lang.String getMessage()>();

        specialinvoke $r29.<com.hp.hpl.jena.query.QueryException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r11);

        throw $r29;

     label7:
        $r8 := @caughtexception;

        $r30 = new com.hp.hpl.jena.query.QueryParseException;

        $r10 = virtualinvoke $r8.<java.lang.Error: java.lang.String getMessage()>();

        $i5 = (int) -1;

        $i7 = (int) -1;

        specialinvoke $r30.<com.hp.hpl.jena.query.QueryParseException: void <init>(java.lang.String,java.lang.Throwable,int,int)>($r10, $r8, $i5, $i7);

        throw $r30;

     label8:
        $r5 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String,java.lang.Throwable)>(class "Lcom/hp/hpl/jena/sparql/lang/ParserSPARQL11;", "Unexpected throwable: ", $r5);

        $r31 = new com.hp.hpl.jena.query.QueryException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r31.<com.hp.hpl.jena.query.QueryException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r31;

     label9:
        return;

        catch com.hp.hpl.jena.sparql.lang.arq.ParseException from label1 to label2 with label3;
        catch com.hp.hpl.jena.sparql.lang.arq.TokenMgrError from label1 to label2 with label4;
        catch com.hp.hpl.jena.query.QueryException from label1 to label2 with label5;
        catch com.hp.hpl.jena.shared.JenaException from label1 to label2 with label6;
        catch java.lang.Error from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label8;
    }
}
