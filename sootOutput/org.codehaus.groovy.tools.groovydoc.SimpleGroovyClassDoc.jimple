public class org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc extends org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc implements org.codehaus.groovy.groovydoc.GroovyClassDoc
{
    private final java.util.List constructors;
    private final java.util.List fields;
    private final java.util.List methods;
    private java.lang.String fullPathName;
    private java.lang.String superClassName;
    private org.codehaus.groovy.groovydoc.GroovyClassDoc superClass;
    private java.util.List importedClassesAndPackages;

    public void <init>(java.util.List, java.lang.String, java.util.List)
    {
        java.util.List r2, r3;
        java.lang.String r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        java.util.ArrayList $r4, $r5, $r6;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        r3 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc: void <init>(java.lang.String,java.util.List)>(r1, r2);

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List importedClassesAndPackages> = r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List constructors> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List fields> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List methods> = $r6;

        return;
    }

    public void <init>(java.util.List, java.lang.String)
    {
        java.util.List r1;
        java.lang.String r2;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        java.util.ArrayList $r3;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: void <init>(java.util.List,java.lang.String,java.util.List)>(r1, r2, $r3);

        return;
    }

    public org.codehaus.groovy.groovydoc.GroovyConstructorDoc[] constructors()
    {
        java.lang.Object[] $r5;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        java.util.List $r1, $r2, $r3;
        org.codehaus.groovy.groovydoc.GroovyConstructorDoc[] $r4, $r6, $r7;
        int $i0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List constructors>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r1);

        $r3 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List constructors>;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List constructors>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = newarray (org.codehaus.groovy.groovydoc.GroovyConstructorDoc)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.codehaus.groovy.groovydoc.GroovyConstructorDoc[]) $r5;

        $r7 = (org.codehaus.groovy.groovydoc.GroovyConstructorDoc[]) $r6;

        return $r7;
    }

    public boolean add(org.codehaus.groovy.groovydoc.GroovyConstructorDoc)
    {
        java.util.List $r2;
        org.codehaus.groovy.groovydoc.GroovyConstructorDoc r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        r1 := @parameter0: org.codehaus.groovy.groovydoc.GroovyConstructorDoc;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List constructors>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public org.codehaus.groovy.groovydoc.GroovyFieldDoc[] fields()
    {
        java.lang.Object[] $r5;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        java.util.List $r1, $r2, $r3;
        org.codehaus.groovy.groovydoc.GroovyFieldDoc[] $r4, $r6, $r7;
        int $i0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List fields>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r1);

        $r3 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List fields>;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List fields>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = newarray (org.codehaus.groovy.groovydoc.GroovyFieldDoc)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.codehaus.groovy.groovydoc.GroovyFieldDoc[]) $r5;

        $r7 = (org.codehaus.groovy.groovydoc.GroovyFieldDoc[]) $r6;

        return $r7;
    }

    public boolean add(org.codehaus.groovy.groovydoc.GroovyFieldDoc)
    {
        java.util.List $r2;
        org.codehaus.groovy.groovydoc.GroovyFieldDoc r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        r1 := @parameter0: org.codehaus.groovy.groovydoc.GroovyFieldDoc;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List fields>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public org.codehaus.groovy.groovydoc.GroovyMethodDoc[] methods()
    {
        java.lang.Object[] $r5;
        org.codehaus.groovy.groovydoc.GroovyMethodDoc[] $r4, $r6, $r7;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        java.util.List $r1, $r2, $r3;
        int $i0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List methods>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r1);

        $r3 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List methods>;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List methods>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = newarray (org.codehaus.groovy.groovydoc.GroovyMethodDoc)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.codehaus.groovy.groovydoc.GroovyMethodDoc[]) $r5;

        $r7 = (org.codehaus.groovy.groovydoc.GroovyMethodDoc[]) $r6;

        return $r7;
    }

    public boolean add(org.codehaus.groovy.groovydoc.GroovyMethodDoc)
    {
        org.codehaus.groovy.groovydoc.GroovyMethodDoc r1;
        java.util.List $r2;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        r1 := @parameter0: org.codehaus.groovy.groovydoc.GroovyMethodDoc;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List methods>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.String getFullPathName()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String fullPathName>;

        return $r1;
    }

    public void setFullPathName(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String fullPathName> = r1;

        return;
    }

    public java.lang.String getRelativeRootPath()
    {
        java.util.StringTokenizer $r0;
        java.lang.StringBuffer $r3;
        java.lang.String $r2, $r4;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r1;
        boolean $z0, $z1;

        r1 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        $r0 = new java.util.StringTokenizer;

        $r2 = r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String fullPathName>;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, "/");

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label1:
        $z1 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("../");

        goto label1;

     label2:
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public void setSuperClassName(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String superClassName> = r1;

        return;
    }

    public org.codehaus.groovy.groovydoc.GroovyClassDoc superclass()
    {
        org.codehaus.groovy.groovydoc.GroovyClassDoc $r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: org.codehaus.groovy.groovydoc.GroovyClassDoc superClass>;

        return $r1;
    }

    void resolve(org.codehaus.groovy.groovydoc.GroovyRootDoc)
    {
        org.codehaus.groovy.groovydoc.GroovyType $r16, $r25, $r27, $r35;
        org.codehaus.groovy.groovydoc.GroovyRootDoc r0;
        java.util.Map $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.codehaus.groovy.groovydoc.GroovyParameter[] $r18, $r29;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r1, $r9, $r13;
        java.util.List $r2, $r4, $r6, $r19, $r30;
        org.codehaus.groovy.groovydoc.GroovyMethodDoc r38;
        java.lang.String $r8, $r10, $r14, $r17, $r23, $r33;
        java.util.Iterator $r5, $r7, $r20, $r31;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter r22, r37;
        org.codehaus.groovy.groovydoc.GroovyConstructorDoc r36;
        org.codehaus.groovy.groovydoc.GroovyClassDoc $r11, $r12;
        java.lang.Object $r15, $r21, $r24, $r26, $r28, $r32, $r34;

        r1 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        r0 := @parameter0: org.codehaus.groovy.groovydoc.GroovyRootDoc;

        $r2 = r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List importedClassesAndPackages>;

        $r3 = interfaceinvoke r0.<org.codehaus.groovy.groovydoc.GroovyRootDoc: java.util.Map getVisibleClasses(java.util.List)>($r2);

        $r4 = r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List constructors>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r28 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r36 = (org.codehaus.groovy.groovydoc.GroovyConstructorDoc) $r28;

        $r29 = interfaceinvoke r36.<org.codehaus.groovy.groovydoc.GroovyConstructorDoc: org.codehaus.groovy.groovydoc.GroovyParameter[] parameters()>();

        $r30 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r29);

        $r31 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z4 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label04;

        $r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r37 = (org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter) $r32;

        $r33 = virtualinvoke r37.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: java.lang.String typeName()>();

        $z5 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r33);

        if $z5 == 0 goto label03;

        $r34 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r33);

        $r35 = (org.codehaus.groovy.groovydoc.GroovyType) $r34;

        virtualinvoke r37.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: void setType(org.codehaus.groovy.groovydoc.GroovyType)>($r35);

     label03:
        goto label02;

     label04:
        goto label01;

     label05:
        $r6 = r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.util.List methods>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r15 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r38 = (org.codehaus.groovy.groovydoc.GroovyMethodDoc) $r15;

        $r16 = interfaceinvoke r38.<org.codehaus.groovy.groovydoc.GroovyMethodDoc: org.codehaus.groovy.groovydoc.GroovyType returnType()>();

        $r17 = interfaceinvoke $r16.<org.codehaus.groovy.groovydoc.GroovyType: java.lang.String typeName()>();

        $z2 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r17);

        if $z2 == 0 goto label07;

        $r26 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        $r27 = (org.codehaus.groovy.groovydoc.GroovyType) $r26;

        interfaceinvoke r38.<org.codehaus.groovy.groovydoc.GroovyMethodDoc: void setReturnType(org.codehaus.groovy.groovydoc.GroovyType)>($r27);

     label07:
        $r18 = interfaceinvoke r38.<org.codehaus.groovy.groovydoc.GroovyMethodDoc: org.codehaus.groovy.groovydoc.GroovyParameter[] parameters()>();

        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18);

        $r20 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z6 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label10;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter) $r21;

        $r23 = virtualinvoke r22.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: java.lang.String typeName()>();

        $z3 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r23);

        if $z3 == 0 goto label09;

        $r24 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23);

        $r25 = (org.codehaus.groovy.groovydoc.GroovyType) $r24;

        virtualinvoke r22.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: void setType(org.codehaus.groovy.groovydoc.GroovyType)>($r25);

     label09:
        goto label08;

     label10:
        goto label06;

     label11:
        $r8 = r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String superClassName>;

        if $r8 == null goto label12;

        $r10 = r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String superClassName>;

        $r11 = interfaceinvoke r0.<org.codehaus.groovy.groovydoc.GroovyRootDoc: org.codehaus.groovy.groovydoc.GroovyClassDoc classNamed(java.lang.String)>($r10);

        r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: org.codehaus.groovy.groovydoc.GroovyClassDoc superClass> = $r11;

        $r12 = r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: org.codehaus.groovy.groovydoc.GroovyClassDoc superClass>;

        if $r12 != null goto label13;

        $r13 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        $r14 = r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String superClassName>;

        specialinvoke $r13.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: void <init>(java.util.List,java.lang.String)>(null, $r14);

        r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: org.codehaus.groovy.groovydoc.GroovyClassDoc superClass> = $r13;

        goto label13;

     label12:
        $r9 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        specialinvoke $r9.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: void <init>(java.util.List,java.lang.String)>(null, "Object");

        r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: org.codehaus.groovy.groovydoc.GroovyClassDoc superClass> = $r9;

     label13:
        return;
    }

    public org.codehaus.groovy.groovydoc.GroovyConstructorDoc[] constructors(boolean)
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        z0 := @parameter0: boolean;

        return null;
    }

    public boolean definesSerializableFields()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return 0;
    }

    public org.codehaus.groovy.groovydoc.GroovyFieldDoc[] enumConstants()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyFieldDoc[] fields(boolean)
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        z0 := @parameter0: boolean;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyClassDoc findClass(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyClassDoc[] importedClasses()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyPackageDoc[] importedPackages()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyClassDoc[] innerClasses()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyClassDoc[] innerClasses(boolean)
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        z0 := @parameter0: boolean;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyClassDoc[] interfaces()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyType[] interfaceTypes()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public boolean isAbstract()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return 0;
    }

    public boolean isExternalizable()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return 0;
    }

    public boolean isSerializable()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return 0;
    }

    public org.codehaus.groovy.groovydoc.GroovyMethodDoc[] methods(boolean)
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        z0 := @parameter0: boolean;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyFieldDoc[] serializableFields()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyMethodDoc[] serializationMethods()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public boolean subclassOf(org.codehaus.groovy.groovydoc.GroovyClassDoc)
    {
        org.codehaus.groovy.groovydoc.GroovyClassDoc r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        r1 := @parameter0: org.codehaus.groovy.groovydoc.GroovyClassDoc;

        return 0;
    }

    public org.codehaus.groovy.groovydoc.GroovyType superclassType()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public org.codehaus.groovy.groovydoc.GroovyClassDoc asClassDoc()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public java.lang.String dimension()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public boolean isPrimitive()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return 0;
    }

    public java.lang.String qualifiedTypeName()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public java.lang.String simpleTypeName()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public java.lang.String typeName()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        return null;
    }

    public java.lang.String fullDottedName()
    {
        java.lang.String $r1, $r2;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String fullPathName>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("/", ".");

        return $r2;
    }
}
