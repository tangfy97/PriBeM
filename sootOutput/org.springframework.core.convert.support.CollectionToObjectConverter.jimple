final class org.springframework.core.convert.support.CollectionToObjectConverter extends java.lang.Object implements org.springframework.core.convert.converter.ConditionalGenericConverter
{
    private final org.springframework.core.convert.ConversionService conversionService;

    public void <init>(org.springframework.core.convert.ConversionService)
    {
        org.springframework.core.convert.support.CollectionToObjectConverter r0;
        org.springframework.core.convert.ConversionService r1;

        r0 := @this: org.springframework.core.convert.support.CollectionToObjectConverter;

        r1 := @parameter0: org.springframework.core.convert.ConversionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.core.convert.support.CollectionToObjectConverter: org.springframework.core.convert.ConversionService conversionService> = r1;

        return;
    }

    public java.util.Set getConvertibleTypes()
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair $r0;
        java.util.Set $r1;
        org.springframework.core.convert.support.CollectionToObjectConverter r2;

        r2 := @this: org.springframework.core.convert.support.CollectionToObjectConverter;

        $r0 = new org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        specialinvoke $r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>(class "Ljava/util/Collection;", class "Ljava/lang/Object;");

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        return $r1;
    }

    public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        org.springframework.core.convert.TypeDescriptor r0, $r1, r2;
        org.springframework.core.convert.support.CollectionToObjectConverter r3;
        org.springframework.core.convert.ConversionService $r4;
        boolean $z0;

        r3 := @this: org.springframework.core.convert.support.CollectionToObjectConverter;

        r0 := @parameter0: org.springframework.core.convert.TypeDescriptor;

        r2 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        $r1 = virtualinvoke r0.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor()>();

        $r4 = r3.<org.springframework.core.convert.support.CollectionToObjectConverter: org.springframework.core.convert.ConversionService conversionService>;

        $z0 = staticinvoke <org.springframework.core.convert.support.ConversionUtils: boolean canConvertElements(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.ConversionService)>($r1, r2, $r4);

        return $z0;
    }

    public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        java.util.Iterator $r4;
        java.util.Collection r3;
        org.springframework.core.convert.support.CollectionToObjectConverter r6;
        org.springframework.core.convert.TypeDescriptor r1, r2, $r8;
        int $i0;
        java.lang.Object r0, $r5, $r9;
        org.springframework.core.convert.ConversionService $r7;
        boolean $z0;

        r6 := @this: org.springframework.core.convert.support.CollectionToObjectConverter;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        r2 := @parameter2: org.springframework.core.convert.TypeDescriptor;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r1.<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>(r2);

        if $z0 == 0 goto label2;

        return r0;

     label2:
        r3 = (java.util.Collection) r0;

        $i0 = interfaceinvoke r3.<java.util.Collection: int size()>();

        if $i0 != 0 goto label3;

        return null;

     label3:
        $r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = r6.<org.springframework.core.convert.support.CollectionToObjectConverter: org.springframework.core.convert.ConversionService conversionService>;

        $r8 = virtualinvoke r1.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor(java.lang.Object)>($r5);

        $r9 = interfaceinvoke $r7.<org.springframework.core.convert.ConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>($r5, $r8, r2);

        return $r9;
    }
}
