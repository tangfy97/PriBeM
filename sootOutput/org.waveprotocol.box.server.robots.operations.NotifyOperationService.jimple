public class org.waveprotocol.box.server.robots.operations.NotifyOperationService extends java.lang.Object implements org.waveprotocol.box.server.robots.operations.OperationService
{
    private static final org.waveprotocol.wave.util.logging.Log LOG;
    private final org.waveprotocol.box.server.persistence.AccountStore accountStore;
    private final org.waveprotocol.box.server.robots.passive.RobotConnector connector;

    public void <init>(org.waveprotocol.box.server.persistence.AccountStore, org.waveprotocol.box.server.robots.passive.RobotConnector)
    {
        org.waveprotocol.box.server.robots.operations.NotifyOperationService r0;
        org.waveprotocol.box.server.robots.passive.RobotConnector r2;
        org.waveprotocol.box.server.persistence.AccountStore r1;

        r0 := @this: org.waveprotocol.box.server.robots.operations.NotifyOperationService;

        r1 := @parameter0: org.waveprotocol.box.server.persistence.AccountStore;

        r2 := @parameter1: org.waveprotocol.box.server.robots.passive.RobotConnector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.robots.operations.NotifyOperationService: org.waveprotocol.box.server.persistence.AccountStore accountStore> = r1;

        r0.<org.waveprotocol.box.server.robots.operations.NotifyOperationService: org.waveprotocol.box.server.robots.passive.RobotConnector connector> = r2;

        return;
    }

    public void execute(com.google.wave.api.OperationRequest, org.waveprotocol.box.server.robots.OperationContext, org.waveprotocol.wave.model.wave.ParticipantId) throws com.google.wave.api.InvalidRequestException
    {
        org.waveprotocol.box.server.account.RobotAccountData $r17, $r20;
        org.waveprotocol.wave.model.wave.ParticipantId r4, $r8, $r36;
        org.waveprotocol.wave.util.logging.Log $r28, $r34, $r41;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r1;
        boolean $z0, $z1;
        org.waveprotocol.box.server.robots.operations.NotifyOperationService r9;
        org.waveprotocol.box.server.robots.RobotCapabilities $r18;
        org.waveprotocol.box.server.robots.OperationContext r22;
        org.waveprotocol.box.server.robots.passive.RobotConnector $r19;
        com.google.wave.api.robot.RobotName $r6;
        java.lang.StringBuilder $r13, $r14, $r15, $r27, $r29, $r30, $r33, $r35, $r37, $r40, $r42, $r43;
        com.google.wave.api.OperationRequest r0;
        org.waveprotocol.box.server.account.AccountData $r11;
        java.util.HashMap $r23, $r25;
        org.waveprotocol.box.server.persistence.PersistenceException $r26, $r39;
        java.lang.String r3, $r5, $r7, $r16, $r24, $r31, $r38, $r44;
        com.google.wave.api.InvalidRequestException $r12;
        java.lang.Object $r2;
        org.waveprotocol.box.server.persistence.AccountStore $r10, $r21;
        com.google.wave.api.robot.CapabilityFetchException $r32;

        r9 := @this: org.waveprotocol.box.server.robots.operations.NotifyOperationService;

        r0 := @parameter0: com.google.wave.api.OperationRequest;

        r22 := @parameter1: org.waveprotocol.box.server.robots.OperationContext;

        r4 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        $r1 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty CAPABILITIES_HASH>;

        $r2 = staticinvoke <org.waveprotocol.box.server.robots.util.OperationUtil: java.lang.Object getRequiredParameter(com.google.wave.api.OperationRequest,com.google.wave.api.JsonRpcConstant$ParamsProperty)>(r0, $r1);

        r3 = (java.lang.String) $r2;

        $r5 = virtualinvoke r4.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r6 = staticinvoke <com.google.wave.api.robot.RobotName: com.google.wave.api.robot.RobotName fromAddress(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<com.google.wave.api.robot.RobotName: java.lang.String toEmailAddress()>();

        $r8 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId ofUnsafe(java.lang.String)>($r7);

     label01:
        $r10 = r9.<org.waveprotocol.box.server.robots.operations.NotifyOperationService: org.waveprotocol.box.server.persistence.AccountStore accountStore>;

        $r11 = interfaceinvoke $r10.<org.waveprotocol.box.server.persistence.AccountStore: org.waveprotocol.box.server.account.AccountData getAccount(org.waveprotocol.wave.model.wave.ParticipantId)>($r8);

     label02:
        goto label04;

     label03:
        $r39 := @caughtexception;

        $r41 = <org.waveprotocol.box.server.robots.operations.NotifyOperationService: org.waveprotocol.wave.util.logging.Log LOG>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retreive account data for ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r44, $r39);

        interfaceinvoke r22.<org.waveprotocol.box.server.robots.OperationContext: void constructErrorResponse(com.google.wave.api.OperationRequest,java.lang.String)>(r0, "Unable to retrieve account data");

        return;

     label04:
        if $r11 == null goto label05;

        $z0 = interfaceinvoke $r11.<org.waveprotocol.box.server.account.AccountData: boolean isRobot()>();

        if $z0 != 0 goto label06;

     label05:
        $r12 = new com.google.wave.api.InvalidRequestException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t exectute robot.notify for unknown robot ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.google.wave.api.InvalidRequestException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label06:
        $r17 = interfaceinvoke $r11.<org.waveprotocol.box.server.account.AccountData: org.waveprotocol.box.server.account.RobotAccountData asRobot()>();

        $r18 = interfaceinvoke $r17.<org.waveprotocol.box.server.account.RobotAccountData: org.waveprotocol.box.server.robots.RobotCapabilities getCapabilities()>();

        if $r18 == null goto label07;

        $r24 = virtualinvoke $r18.<org.waveprotocol.box.server.robots.RobotCapabilities: java.lang.String getCapabilitiesHash()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z1 == 0 goto label07;

        $r25 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        interfaceinvoke r22.<org.waveprotocol.box.server.robots.OperationContext: void constructResponse(com.google.wave.api.OperationRequest,java.util.Map)>(r0, $r25);

        return;

     label07:
        $r19 = r9.<org.waveprotocol.box.server.robots.operations.NotifyOperationService: org.waveprotocol.box.server.robots.passive.RobotConnector connector>;

        $r20 = virtualinvoke $r19.<org.waveprotocol.box.server.robots.passive.RobotConnector: org.waveprotocol.box.server.account.RobotAccountData fetchCapabilities(org.waveprotocol.box.server.account.RobotAccountData,java.lang.String)>($r17, "");

     label08:
        goto label10;

     label09:
        $r32 := @caughtexception;

        $r34 = <org.waveprotocol.box.server.robots.operations.NotifyOperationService: org.waveprotocol.wave.util.logging.Log LOG>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to retrieve capabilities for ");

        $r36 = interfaceinvoke $r11.<org.waveprotocol.box.server.account.AccountData: org.waveprotocol.wave.model.wave.ParticipantId getId()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<org.waveprotocol.wave.util.logging.Log: void fine(java.lang.String,java.lang.Throwable)>($r38, $r32);

        interfaceinvoke r22.<org.waveprotocol.box.server.robots.OperationContext: void constructErrorResponse(com.google.wave.api.OperationRequest,java.lang.String)>(r0, "Unable to retrieve new capabilities");

        return;

     label10:
        $r21 = r9.<org.waveprotocol.box.server.robots.operations.NotifyOperationService: org.waveprotocol.box.server.persistence.AccountStore accountStore>;

        interfaceinvoke $r21.<org.waveprotocol.box.server.persistence.AccountStore: void putAccount(org.waveprotocol.box.server.account.AccountData)>($r20);

     label11:
        goto label13;

     label12:
        $r26 := @caughtexception;

        $r28 = <org.waveprotocol.box.server.robots.operations.NotifyOperationService: org.waveprotocol.wave.util.logging.Log LOG>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to update account data for ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r31, $r26);

        interfaceinvoke r22.<org.waveprotocol.box.server.robots.OperationContext: void constructErrorResponse(com.google.wave.api.OperationRequest,java.lang.String)>(r0, "Unable to update account data");

        return;

     label13:
        $r23 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        interfaceinvoke r22.<org.waveprotocol.box.server.robots.OperationContext: void constructResponse(com.google.wave.api.OperationRequest,java.util.Map)>(r0, $r23);

        return;

        catch org.waveprotocol.box.server.persistence.PersistenceException from label01 to label02 with label03;
        catch com.google.wave.api.robot.CapabilityFetchException from label07 to label08 with label09;
        catch org.waveprotocol.box.server.persistence.PersistenceException from label10 to label11 with label12;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.util.logging.Log $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.util.logging.Log: org.waveprotocol.wave.util.logging.Log get(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/operations/NotifyOperationService;");

        <org.waveprotocol.box.server.robots.operations.NotifyOperationService: org.waveprotocol.wave.util.logging.Log LOG> = $r0;

        return;
    }
}
