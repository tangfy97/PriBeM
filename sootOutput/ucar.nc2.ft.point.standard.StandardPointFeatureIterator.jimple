public class ucar.nc2.ft.point.standard.StandardPointFeatureIterator extends ucar.nc2.ft.point.PointIteratorFromStructureData
{
    protected ucar.nc2.ft.point.standard.NestedTable ft;
    protected ucar.nc2.units.DateUnit timeUnit;
    protected ucar.nc2.ft.point.standard.Cursor cursor;

    void <init>(ucar.nc2.ft.point.standard.NestedTable, ucar.nc2.units.DateUnit, ucar.ma2.StructureDataIterator, ucar.nc2.ft.point.standard.Cursor) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator r0;
        ucar.ma2.StructureDataIterator r1;
        ucar.nc2.units.DateUnit r3;
        ucar.nc2.ft.point.standard.Cursor r4;
        ucar.nc2.ft.point.standard.NestedTable r2;

        r0 := @this: ucar.nc2.ft.point.standard.StandardPointFeatureIterator;

        r2 := @parameter0: ucar.nc2.ft.point.standard.NestedTable;

        r3 := @parameter1: ucar.nc2.units.DateUnit;

        r1 := @parameter2: ucar.ma2.StructureDataIterator;

        r4 := @parameter3: ucar.nc2.ft.point.standard.Cursor;

        specialinvoke r0.<ucar.nc2.ft.point.PointIteratorFromStructureData: void <init>(ucar.ma2.StructureDataIterator,ucar.nc2.ft.point.PointIteratorAbstract$Filter)>(r1, null);

        r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.NestedTable ft> = r2;

        r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.units.DateUnit timeUnit> = r3;

        r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.Cursor cursor> = r4;

        return;
    }

    protected ucar.nc2.ft.PointFeature makeFeature(int, ucar.ma2.StructureData) throws java.io.IOException
    {
        ucar.ma2.StructureData r4;
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature $r11;
        int[] $r2;
        int i0;
        boolean $z0;
        double $d0;
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator r0;
        ucar.ma2.StructureData[] $r5;
        ucar.nc2.units.DateUnit $r14;
        ucar.nc2.ft.point.standard.Cursor $r1, $r3, $r6, $r7, $r9, $r12, $r13;
        ucar.nc2.ft.point.standard.NestedTable $r8, $r10;

        r0 := @this: ucar.nc2.ft.point.standard.StandardPointFeatureIterator;

        i0 := @parameter0: int;

        r4 := @parameter1: ucar.ma2.StructureData;

        $r1 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.Cursor cursor>;

        $r2 = $r1.<ucar.nc2.ft.point.standard.Cursor: int[] recnum>;

        $r2[0] = i0;

        $r3 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.Cursor cursor>;

        $r5 = $r3.<ucar.nc2.ft.point.standard.Cursor: ucar.ma2.StructureData[] tableData>;

        $r5[0] = r4;

        $r6 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.Cursor cursor>;

        $r6.<ucar.nc2.ft.point.standard.Cursor: int currentIndex> = 0;

        $r8 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r7 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.Cursor cursor>;

        virtualinvoke $r8.<ucar.nc2.ft.point.standard.NestedTable: void addParentJoin(ucar.nc2.ft.point.standard.Cursor)>($r7);

        $z0 = virtualinvoke r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: boolean isMissing()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r10 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r9 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.Cursor cursor>;

        $d0 = virtualinvoke $r10.<ucar.nc2.ft.point.standard.NestedTable: double getObsTime(ucar.nc2.ft.point.standard.Cursor)>($r9);

        $r11 = new ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature;

        $r12 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.Cursor cursor>;

        $r13 = virtualinvoke $r12.<ucar.nc2.ft.point.standard.Cursor: ucar.nc2.ft.point.standard.Cursor copy()>();

        $r14 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.units.DateUnit timeUnit>;

        specialinvoke $r11.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: void <init>(ucar.nc2.ft.point.standard.StandardPointFeatureIterator,ucar.nc2.ft.point.standard.Cursor,ucar.nc2.units.DateUnit,double)>(r0, $r13, $r14, $d0);

        return $r11;
    }

    protected boolean isMissing() throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator r0;
        ucar.nc2.ft.point.standard.Cursor $r1, $r3;
        ucar.nc2.ft.point.standard.NestedTable $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ft.point.standard.StandardPointFeatureIterator;

        $r2 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r1 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.Cursor cursor>;

        $z0 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.NestedTable: boolean isTimeMissing(ucar.nc2.ft.point.standard.Cursor)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r3 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.Cursor cursor>;

        $z1 = virtualinvoke $r4.<ucar.nc2.ft.point.standard.NestedTable: boolean isMissing(ucar.nc2.ft.point.standard.Cursor)>($r3);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
}
