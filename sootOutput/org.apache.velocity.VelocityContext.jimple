public class org.apache.velocity.VelocityContext extends org.apache.velocity.context.AbstractContext implements java.lang.Cloneable
{
    private static final long serialVersionUID;
    private java.util.Map context;

    public void <init>()
    {
        org.apache.velocity.VelocityContext r0;

        r0 := @this: org.apache.velocity.VelocityContext;

        specialinvoke r0.<org.apache.velocity.VelocityContext: void <init>(java.util.Map,org.apache.velocity.context.Context)>(null, null);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.velocity.VelocityContext r0;
        java.util.Map r1;

        r0 := @this: org.apache.velocity.VelocityContext;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.velocity.VelocityContext: void <init>(java.util.Map,org.apache.velocity.context.Context)>(r1, null);

        return;
    }

    public void <init>(org.apache.velocity.context.Context)
    {
        org.apache.velocity.context.Context r1;
        org.apache.velocity.VelocityContext r0;

        r0 := @this: org.apache.velocity.VelocityContext;

        r1 := @parameter0: org.apache.velocity.context.Context;

        specialinvoke r0.<org.apache.velocity.VelocityContext: void <init>(java.util.Map,org.apache.velocity.context.Context)>(null, r1);

        return;
    }

    public void <init>(java.util.Map, org.apache.velocity.context.Context)
    {
        org.apache.velocity.context.Context r1;
        java.util.Map r2, $r3;
        java.util.HashMap $r4;
        org.apache.velocity.VelocityContext r0;

        r0 := @this: org.apache.velocity.VelocityContext;

        r2 := @parameter0: java.util.Map;

        r1 := @parameter1: org.apache.velocity.context.Context;

        specialinvoke r0.<org.apache.velocity.context.AbstractContext: void <init>(org.apache.velocity.context.Context)>(r1);

        r0.<org.apache.velocity.VelocityContext: java.util.Map context> = null;

        if r2 != null goto label1;

        $r4 = new java.util.HashMap;

        $r3 = $r4;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        goto label2;

     label1:
        $r3 = r2;

     label2:
        r0.<org.apache.velocity.VelocityContext: java.util.Map context> = $r3;

        return;
    }

    public java.lang.Object internalGet(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.velocity.VelocityContext r0;

        r0 := @this: org.apache.velocity.VelocityContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.VelocityContext: java.util.Map context>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object internalPut(java.lang.String, java.lang.Object)
    {
        java.util.Map $r3;
        java.lang.Object r2, $r4;
        java.lang.String r1;
        org.apache.velocity.VelocityContext r0;

        r0 := @this: org.apache.velocity.VelocityContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.velocity.VelocityContext: java.util.Map context>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public boolean internalContainsKey(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        org.apache.velocity.VelocityContext r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.VelocityContext;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.VelocityContext: java.util.Map context>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object[] internalGetKeys()
    {
        java.lang.Object[] $r3;
        java.util.Map $r1;
        java.util.Set $r2;
        org.apache.velocity.VelocityContext r0;

        r0 := @this: org.apache.velocity.VelocityContext;

        $r1 = r0.<org.apache.velocity.VelocityContext: java.util.Map context>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray()>();

        return $r3;
    }

    public java.lang.Object internalRemove(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        org.apache.velocity.VelocityContext r0;

        r0 := @this: org.apache.velocity.VelocityContext;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.VelocityContext: java.util.Map context>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object clone()
    {
        java.util.Map $r3;
        java.lang.Object $r1;
        java.util.HashMap $r2;
        org.apache.velocity.VelocityContext r0, r5;
        java.lang.CloneNotSupportedException $r4;

        r0 := @this: org.apache.velocity.VelocityContext;

        r5 = null;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r5 = (org.apache.velocity.VelocityContext) $r1;

        $r2 = new java.util.HashMap;

        $r3 = r0.<org.apache.velocity.VelocityContext: java.util.Map context>;

        specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r3);

        r5.<org.apache.velocity.VelocityContext: java.util.Map context> = $r2;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return r5;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.velocity.VelocityContext: long serialVersionUID> = 9033846851064645037L;

        return;
    }
}
