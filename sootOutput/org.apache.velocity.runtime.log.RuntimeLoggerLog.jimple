public class org.apache.velocity.runtime.log.RuntimeLoggerLog extends org.apache.velocity.runtime.log.Log
{
    private org.apache.velocity.runtime.RuntimeLogger rlog;

    public void <init>(org.apache.velocity.runtime.RuntimeLogger)
    {
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;
        java.lang.NullPointerException $r2;
        org.apache.velocity.runtime.RuntimeLogger r1;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeLogger;

        specialinvoke r0.<org.apache.velocity.runtime.log.Log: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("RuntimeLogger cannot be null!");

        throw $r2;

     label1:
        r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog> = r1;

        return;
    }

    protected void setLogChute(org.apache.velocity.runtime.log.LogChute)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r1;
        org.apache.velocity.runtime.log.LogChute r2;

        r1 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r2 := @parameter0: org.apache.velocity.runtime.log.LogChute;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RuntimeLoggerLog does not support this method.");

        throw $r0;
    }

    protected org.apache.velocity.runtime.log.LogChute getLogChute()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r1;

        r1 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RuntimeLoggerLog does not support this method.");

        throw $r0;
    }

    protected void setShowStackTraces(boolean)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r1;
        boolean z0;

        r1 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RuntimeLoggerLog does not support this method.");

        throw $r0;
    }

    public boolean getShowStackTraces()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r1;

        r1 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RuntimeLoggerLog does not support this method.");

        throw $r0;
    }

    public boolean isTraceEnabled()
    {
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        return 1;
    }

    public void trace(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: void debug(java.lang.Object)>(r1);

        return;
    }

    public void trace(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.Object r1;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        virtualinvoke r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: void debug(java.lang.Object,java.lang.Throwable)>(r1, r2);

        return;
    }

    public boolean isDebugEnabled()
    {
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        return 1;
    }

    public void debug(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;
        org.apache.velocity.runtime.RuntimeLogger $r2;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeLogger: void debug(java.lang.Object)>(r1);

        return;
    }

    public void debug(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;
        java.lang.Object r1;
        org.apache.velocity.runtime.RuntimeLogger $r2, $r4;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Throwable;

        $r2 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeLogger: void debug(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r4.<org.apache.velocity.runtime.RuntimeLogger: void debug(java.lang.Object)>(r3);

        return;
    }

    public boolean isInfoEnabled()
    {
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        return 1;
    }

    public void info(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;
        org.apache.velocity.runtime.RuntimeLogger $r2;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeLogger: void info(java.lang.Object)>(r1);

        return;
    }

    public void info(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;
        java.lang.Object r1;
        org.apache.velocity.runtime.RuntimeLogger $r2, $r4;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Throwable;

        $r2 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeLogger: void info(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r4.<org.apache.velocity.runtime.RuntimeLogger: void info(java.lang.Object)>(r3);

        return;
    }

    public boolean isWarnEnabled()
    {
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        return 1;
    }

    public void warn(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;
        org.apache.velocity.runtime.RuntimeLogger $r2;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeLogger: void warn(java.lang.Object)>(r1);

        return;
    }

    public void warn(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;
        java.lang.Object r1;
        org.apache.velocity.runtime.RuntimeLogger $r2, $r4;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Throwable;

        $r2 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeLogger: void warn(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r4.<org.apache.velocity.runtime.RuntimeLogger: void warn(java.lang.Object)>(r3);

        return;
    }

    public boolean isErrorEnabled()
    {
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        return 1;
    }

    public void error(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;
        org.apache.velocity.runtime.RuntimeLogger $r2;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeLogger: void error(java.lang.Object)>(r1);

        return;
    }

    public void error(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.velocity.runtime.log.RuntimeLoggerLog r0;
        java.lang.Object r1;
        org.apache.velocity.runtime.RuntimeLogger $r2, $r4;

        r0 := @this: org.apache.velocity.runtime.log.RuntimeLoggerLog;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Throwable;

        $r2 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeLogger: void error(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.velocity.runtime.log.RuntimeLoggerLog: org.apache.velocity.runtime.RuntimeLogger rlog>;

        interfaceinvoke $r4.<org.apache.velocity.runtime.RuntimeLogger: void error(java.lang.Object)>(r3);

        return;
    }
}
