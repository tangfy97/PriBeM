public class org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName extends java.lang.Object implements java.util.Comparator
{
    public static final java.util.Comparator INSTANCE;

    public void <init>()
    {
        org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName r0;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName r6;
        org.codehaus.groovy.reflection.CachedMethod $r1, $r4;
        int $i0;
        java.lang.Object r0, r3;
        java.lang.String $r2, $r5;

        r6 := @this: org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = (org.codehaus.groovy.reflection.CachedMethod) r0;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedMethod: java.lang.String getName()>();

        $r4 = (org.codehaus.groovy.reflection.CachedMethod) r3;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.reflection.CachedMethod: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r5);

        return $i0;
    }

    static void <clinit>()
    {
        org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName $r0;

        $r0 = new org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName;

        specialinvoke $r0.<org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName: void <init>()>();

        <org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName: java.util.Comparator INSTANCE> = $r0;

        return;
    }
}
