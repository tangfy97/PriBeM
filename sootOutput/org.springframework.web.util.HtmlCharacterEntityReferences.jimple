class org.springframework.web.util.HtmlCharacterEntityReferences extends java.lang.Object
{
    private static final java.lang.String PROPERTIES_FILE;
    static final char REFERENCE_START;
    static final java.lang.String DECIMAL_REFERENCE_START;
    static final java.lang.String HEX_REFERENCE_START;
    static final char REFERENCE_END;
    static final char CHAR_NULL;
    private final java.lang.String[] characterToEntityReferenceMap;
    private final java.util.Map entityReferenceToCharacterMap;

    public void <init>()
    {
        java.lang.IllegalStateException $r18, $r20;
        java.util.Enumeration $r6;
        java.lang.Character $r16;
        java.util.Map $r17;
        boolean $z0, $z1;
        java.lang.StringBuilder $r10, $r13, $r14, $r21, $r23, $r26, $r27;
        java.lang.Throwable $r25;
        java.lang.String[] $r1, $r11;
        java.util.HashMap $r2;
        int $i0, $i2;
        java.lang.String r8, $r9, $r12, $r15, $r22, $r24, $r28;
        java.util.Properties $r3;
        char $c1;
        java.io.IOException $r19;
        org.springframework.web.util.HtmlCharacterEntityReferences r0;
        java.lang.Class $r4;
        java.lang.Object $r7;
        java.io.InputStream $r5;

        r0 := @this: org.springframework.web.util.HtmlCharacterEntityReferences;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.String)[3000];

        r0.<org.springframework.web.util.HtmlCharacterEntityReferences: java.lang.String[] characterToEntityReferenceMap> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(252);

        r0.<org.springframework.web.util.HtmlCharacterEntityReferences: java.util.Map entityReferenceToCharacterMap> = $r2;

        $r3 = new java.util.Properties;

        specialinvoke $r3.<java.util.Properties: void <init>()>();

        $r4 = class "Lorg/springframework/web/util/HtmlCharacterEntityReferences;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("HtmlCharacterEntityReferences.properties");

        if $r5 != null goto label01;

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot find reference definition file [HtmlCharacterEntityReferences.properties] as class path resource");

        throw $r18;

     label01:
        virtualinvoke $r3.<java.util.Properties: void load(java.io.InputStream)>($r5);

        goto label03;

     label02:
        $r25 := @caughtexception;

        virtualinvoke $r5.<java.io.InputStream: void close()>();

        throw $r25;

     label03:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r19 := @caughtexception;

        $r20 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to parse reference definition file [HtmlCharacterEntityReferences.properties]: ");

        $r22 = virtualinvoke $r19.<java.io.IOException: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label06:
        $r6 = virtualinvoke $r3.<java.util.Properties: java.util.Enumeration propertyNames()>();

        goto label13;

     label07:
        $r7 = interfaceinvoke $r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        r8 = (java.lang.String) $r7;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r8);

        if $i0 < 1000 goto label09;

        if $i0 < 8000 goto label08;

        if $i0 < 10000 goto label09;

     label08:
        $z0 = 0;

        goto label10;

     label09:
        $z0 = 1;

     label10:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid reference to special HTML entity: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, $r28);

        if $i0 >= 1000 goto label11;

        $i2 = $i0;

        goto label12;

     label11:
        $i2 = $i0 - 7000;

     label12:
        $r9 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r8);

        $r11 = r0.<org.springframework.web.util.HtmlCharacterEntityReferences: java.lang.String[] characterToEntityReferenceMap>;

        $r10 = new java.lang.StringBuilder;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(38);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[$i2] = $r15;

        $r17 = r0.<org.springframework.web.util.HtmlCharacterEntityReferences: java.util.Map entityReferenceToCharacterMap>;

        $r16 = new java.lang.Character;

        $c1 = (char) $i0;

        specialinvoke $r16.<java.lang.Character: void <init>(char)>($c1);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r16);

     label13:
        $z1 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 != 0 goto label07;

        return;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.io.IOException from label01 to label04 with label05;
    }

    public int getSupportedReferenceCount()
    {
        int $i0;
        org.springframework.web.util.HtmlCharacterEntityReferences r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.web.util.HtmlCharacterEntityReferences;

        $r1 = r0.<org.springframework.web.util.HtmlCharacterEntityReferences: java.util.Map entityReferenceToCharacterMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public boolean isMappedToReference(char)
    {
        char c0;
        org.springframework.web.util.HtmlCharacterEntityReferences r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.web.util.HtmlCharacterEntityReferences;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<org.springframework.web.util.HtmlCharacterEntityReferences: java.lang.String convertToReference(char)>(c0);

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String convertToReference(char)
    {
        char c0;
        java.lang.String[] $r1;
        org.springframework.web.util.HtmlCharacterEntityReferences r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r2;

        r0 := @this: org.springframework.web.util.HtmlCharacterEntityReferences;

        c0 := @parameter0: char;

        $i2 = (int) c0;

        if $i2 < 1000 goto label1;

        $i3 = (int) c0;

        if $i3 < 8000 goto label4;

        $i4 = (int) c0;

        if $i4 >= 10000 goto label4;

     label1:
        $i5 = (int) c0;

        if $i5 >= 1000 goto label2;

        $i6 = (int) c0;

        $i1 = $i6;

        goto label3;

     label2:
        $i7 = (int) c0;

        $i1 = $i7 - 7000;

     label3:
        $r1 = r0.<org.springframework.web.util.HtmlCharacterEntityReferences: java.lang.String[] characterToEntityReferenceMap>;

        $r2 = $r1[$i1];

        if $r2 == null goto label4;

        return $r2;

     label4:
        return null;
    }

    public char convertToCharacter(java.lang.String)
    {
        org.springframework.web.util.HtmlCharacterEntityReferences r0;
        java.lang.Character r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        char $c0;
        java.lang.String r1;

        r0 := @this: org.springframework.web.util.HtmlCharacterEntityReferences;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.util.HtmlCharacterEntityReferences: java.util.Map entityReferenceToCharacterMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.Character) $r3;

        if r4 == null goto label1;

        $c0 = virtualinvoke r4.<java.lang.Character: char charValue()>();

        return $c0;

     label1:
        return 65535;
    }

    public static void <clinit>()
    {
        <org.springframework.web.util.HtmlCharacterEntityReferences: char CHAR_NULL> = 65535;

        <org.springframework.web.util.HtmlCharacterEntityReferences: char REFERENCE_END> = 59;

        <org.springframework.web.util.HtmlCharacterEntityReferences: java.lang.String HEX_REFERENCE_START> = "&#x";

        <org.springframework.web.util.HtmlCharacterEntityReferences: java.lang.String DECIMAL_REFERENCE_START> = "&#";

        <org.springframework.web.util.HtmlCharacterEntityReferences: char REFERENCE_START> = 38;

        <org.springframework.web.util.HtmlCharacterEntityReferences: java.lang.String PROPERTIES_FILE> = "HtmlCharacterEntityReferences.properties";

        return;
    }
}
