final class com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder$IDTransducerImpl extends com.sun.xml.bind.v2.runtime.FilterTransducer
{

    public void <init>(com.sun.xml.bind.v2.runtime.Transducer)
    {
        com.sun.xml.bind.v2.runtime.Transducer r1;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder$IDTransducerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder$IDTransducerImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.Transducer;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.FilterTransducer: void <init>(com.sun.xml.bind.v2.runtime.Transducer)>(r1);

        return;
    }

    public java.lang.Object parse(java.lang.CharSequence) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r3;
        java.lang.CharSequence r0, $r1;
        java.lang.Object $r6;
        java.lang.String $r2;
        com.sun.xml.bind.v2.runtime.Transducer $r5;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder$IDTransducerImpl r4;

        r4 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder$IDTransducerImpl;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = staticinvoke <com.sun.xml.bind.WhiteSpaceProcessor: java.lang.CharSequence trim(java.lang.CharSequence)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getInstance()>();

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String addToIdTable(java.lang.String)>($r2);

        $r5 = r4.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder$IDTransducerImpl: com.sun.xml.bind.v2.runtime.Transducer core>;

        $r6 = interfaceinvoke $r5.<com.sun.xml.bind.v2.runtime.Transducer: java.lang.Object parse(java.lang.CharSequence)>($r2);

        return $r6;
    }
}
