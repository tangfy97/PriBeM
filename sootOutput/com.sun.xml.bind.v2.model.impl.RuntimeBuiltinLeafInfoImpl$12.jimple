final class com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 extends com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$StringImpl
{

    transient void <init>(java.lang.Class, javax.xml.namespace.QName[])
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r0;
        java.lang.Class r1;
        javax.xml.namespace.QName[] r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: javax.xml.namespace.QName[];

        specialinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$StringImpl: void <init>(java.lang.Class,javax.xml.namespace.QName[])>(r1, r2);

        return;
    }

    public java.lang.String print(javax.xml.datatype.XMLGregorianCalendar)
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r6;
        javax.xml.bind.ValidationEventLocator $r11;
        javax.xml.datatype.XMLGregorianCalendar r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r0;
        javax.xml.bind.MarshalException $r8;
        java.util.Map $r4;
        java.lang.Object $r5;
        javax.xml.namespace.QName $r1;
        java.lang.String $r3, $r7, $r10, r12;
        javax.xml.bind.helpers.ValidationEventImpl $r9;

        r6 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r2 := @parameter0: javax.xml.datatype.XMLGregorianCalendar;

        $r0 = staticinvoke <com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.XMLSerializer getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.namespace.QName getSchemaType()>();

        if $r1 == null goto label5;

     label1:
        staticinvoke <com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl: void access$200(javax.xml.namespace.QName,javax.xml.datatype.XMLGregorianCalendar)>($r1, r2);

        $r4 = staticinvoke <com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl: java.util.Map access$300()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r12 = (java.lang.String) $r5;

        if r12 == null goto label3;

        $r7 = specialinvoke r6.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: java.lang.String format(java.lang.String,javax.xml.datatype.XMLGregorianCalendar)>(r12, r2);

     label2:
        return $r7;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = new javax.xml.bind.helpers.ValidationEventImpl;

        $r10 = virtualinvoke $r8.<javax.xml.bind.MarshalException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.ValidationEventLocator getCurrentLocation(java.lang.String)>(null);

        specialinvoke $r9.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator)>(0, $r10, $r11);

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean handleEvent(javax.xml.bind.ValidationEvent)>($r9);

        return "";

     label5:
        $r3 = virtualinvoke r2.<javax.xml.datatype.XMLGregorianCalendar: java.lang.String toXMLFormat()>();

        return $r3;

        catch javax.xml.bind.MarshalException from label1 to label2 with label4;
    }

    public javax.xml.datatype.XMLGregorianCalendar parse(java.lang.CharSequence) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r7;
        java.lang.CharSequence r1;
        javax.xml.datatype.DatatypeFactory $r0;
        javax.xml.datatype.XMLGregorianCalendar $r4;
        java.lang.Exception $r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r6;
        java.lang.String $r2, $r3;

        r7 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r1 := @parameter0: java.lang.CharSequence;

     label1:
        $r0 = staticinvoke <com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl: javax.xml.datatype.DatatypeFactory access$400()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke $r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.lang.String)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getInstance()>();

        virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void handleError(java.lang.Exception)>($r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.String format(java.lang.String, javax.xml.datatype.XMLGregorianCalendar)
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r4;
        java.math.BigDecimal $r5, $r6;
        int $i0, $i1, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, $i17, $i19;
        java.lang.InternalError $r12;
        java.math.BigInteger $r9;
        java.lang.String r1, $r2, $r7, $r8;
        char $c2, $c4;
        javax.xml.datatype.XMLGregorianCalendar r3;
        java.lang.StringBuilder $r11;

        r4 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.xml.datatype.XMLGregorianCalendar;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        i14 = 0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label01:
        if i14 >= $i0 goto label15;

        $i1 = i14;

        i14 = i14 + 1;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i1);

        $i16 = (int) $c2;

        if $i16 == 37 goto label02;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label01;

     label02:
        $i3 = i14;

        i14 = i14 + 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        $i17 = (int) $c4;

        lookupswitch($i17)
        {
            case 68: goto label05;
            case 77: goto label04;
            case 89: goto label03;
            case 104: goto label06;
            case 109: goto label07;
            case 115: goto label08;
            case 122: goto label09;
            default: goto label13;
        };

     label03:
        $r9 = virtualinvoke r3.<javax.xml.datatype.XMLGregorianCalendar: java.math.BigInteger getEonAndYear()>();

        specialinvoke r4.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: void printNumber(java.lang.StringBuilder,java.math.BigInteger,int)>($r11, $r9, 4);

        goto label14;

     label04:
        $i12 = virtualinvoke r3.<javax.xml.datatype.XMLGregorianCalendar: int getMonth()>();

        specialinvoke r4.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: void printNumber(java.lang.StringBuilder,int,int)>($r11, $i12, 2);

        goto label14;

     label05:
        $i13 = virtualinvoke r3.<javax.xml.datatype.XMLGregorianCalendar: int getDay()>();

        specialinvoke r4.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: void printNumber(java.lang.StringBuilder,int,int)>($r11, $i13, 2);

        goto label14;

     label06:
        $i11 = virtualinvoke r3.<javax.xml.datatype.XMLGregorianCalendar: int getHour()>();

        specialinvoke r4.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: void printNumber(java.lang.StringBuilder,int,int)>($r11, $i11, 2);

        goto label14;

     label07:
        $i10 = virtualinvoke r3.<javax.xml.datatype.XMLGregorianCalendar: int getMinute()>();

        specialinvoke r4.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: void printNumber(java.lang.StringBuilder,int,int)>($r11, $i10, 2);

        goto label14;

     label08:
        $i8 = virtualinvoke r3.<javax.xml.datatype.XMLGregorianCalendar: int getSecond()>();

        specialinvoke r4.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: void printNumber(java.lang.StringBuilder,int,int)>($r11, $i8, 2);

        $r5 = virtualinvoke r3.<javax.xml.datatype.XMLGregorianCalendar: java.math.BigDecimal getFractionalSecond()>();

        if $r5 == null goto label14;

        $r6 = virtualinvoke r3.<javax.xml.datatype.XMLGregorianCalendar: java.math.BigDecimal getFractionalSecond()>();

        $r7 = virtualinvoke $r6.<java.math.BigDecimal: java.lang.String toPlainString()>();

        $i9 = virtualinvoke $r7.<java.lang.String: int length()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(1, $i9);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label14;

     label09:
        $i5 = virtualinvoke r3.<javax.xml.datatype.XMLGregorianCalendar: int getTimezone()>();

        i15 = $i5;

        if $i5 != 0 goto label10;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);

        goto label14;

     label10:
        if $i5 == -2147483648 goto label14;

        if $i5 >= 0 goto label11;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $i19 = (int) -1;

        i15 = $i5 * $i19;

        goto label12;

     label11:
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label12:
        $i6 = i15 / 60;

        specialinvoke r4.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: void printNumber(java.lang.StringBuilder,int,int)>($r11, $i6, 2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i7 = i15 % 60;

        specialinvoke r4.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: void printNumber(java.lang.StringBuilder,int,int)>($r11, $i7, 2);

        goto label14;

     label13:
        $r12 = new java.lang.InternalError;

        specialinvoke $r12.<java.lang.InternalError: void <init>()>();

        throw $r12;

     label14:
        goto label01;

     label15:
        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private void printNumber(java.lang.StringBuilder, java.math.BigInteger, int)
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r3;
        int i0, i1;
        java.math.BigInteger r0;
        java.lang.StringBuilder r2;
        java.lang.String $r1;

        r3 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r2 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: java.math.BigInteger;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<java.math.BigInteger: java.lang.String toString()>();

        i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        return;
    }

    private void printNumber(java.lang.StringBuilder, int, int)
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r2;
        int i0, i1, i2;
        java.lang.StringBuilder r1;
        java.lang.String $r0;

        r2 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r1 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        i2 = virtualinvoke $r0.<java.lang.String: int length()>();

     label1:
        if i2 >= i1 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        return;
    }

    public javax.xml.namespace.QName getTypeName(javax.xml.datatype.XMLGregorianCalendar)
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r2;
        javax.xml.namespace.QName $r1;
        javax.xml.datatype.XMLGregorianCalendar r0;

        r2 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r0 := @parameter0: javax.xml.datatype.XMLGregorianCalendar;

        $r1 = virtualinvoke r0.<javax.xml.datatype.XMLGregorianCalendar: javax.xml.namespace.QName getXMLSchemaType()>();

        return $r1;
    }

    public volatile java.lang.String print(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r0;
        java.lang.Object r1;
        java.lang.String $r3;
        javax.xml.datatype.XMLGregorianCalendar $r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.xml.datatype.XMLGregorianCalendar) r1;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: java.lang.String print(javax.xml.datatype.XMLGregorianCalendar)>($r2);

        return $r3;
    }

    public volatile javax.xml.namespace.QName getTypeName(java.lang.Object)
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r0;
        java.lang.Object r1;
        javax.xml.namespace.QName $r3;
        javax.xml.datatype.XMLGregorianCalendar $r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.xml.datatype.XMLGregorianCalendar) r1;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: javax.xml.namespace.QName getTypeName(javax.xml.datatype.XMLGregorianCalendar)>($r2);

        return $r3;
    }

    public volatile java.lang.Object parse(java.lang.CharSequence) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r0;
        java.lang.CharSequence r1;
        javax.xml.datatype.XMLGregorianCalendar $r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: javax.xml.datatype.XMLGregorianCalendar parse(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.CharSequence print(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12 r0;
        java.lang.Object r1;
        java.lang.String $r3;
        javax.xml.datatype.XMLGregorianCalendar $r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.xml.datatype.XMLGregorianCalendar) r1;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12: java.lang.String print(javax.xml.datatype.XMLGregorianCalendar)>($r2);

        return $r3;
    }
}
