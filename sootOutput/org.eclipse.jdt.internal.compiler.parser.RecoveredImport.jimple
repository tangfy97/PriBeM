public class org.eclipse.jdt.internal.compiler.parser.RecoveredImport extends org.eclipse.jdt.internal.compiler.parser.RecoveredElement
{
    public org.eclipse.jdt.internal.compiler.ast.ImportReference importReference;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.ImportReference, org.eclipse.jdt.internal.compiler.parser.RecoveredElement, int)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference r2;
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredImport r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredImport;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void <init>(org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r1, i0);

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredImport: org.eclipse.jdt.internal.compiler.ast.ImportReference importReference> = r2;

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.ASTNode parseTree()
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredImport r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredImport;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredImport: org.eclipse.jdt.internal.compiler.ast.ImportReference importReference>;

        return $r1;
    }

    public int sourceEnd()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredImport r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredImport;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredImport: org.eclipse.jdt.internal.compiler.ast.ImportReference importReference>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int declarationSourceEnd>;

        return $i0;
    }

    public java.lang.String toString(int)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r5;
        org.eclipse.jdt.internal.compiler.parser.RecoveredImport r1;
        java.lang.StringBuffer $r0, $r4, $r7;
        int i0;
        java.lang.String $r2, $r3, $r6, $r8;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredImport;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredImport: java.lang.String tabString(int)>(i0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Recovered import: ");

        $r5 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredImport: org.eclipse.jdt.internal.compiler.ast.ImportReference importReference>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.ImportReference: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public org.eclipse.jdt.internal.compiler.ast.ImportReference updatedImportReference()
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredImport r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredImport;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredImport: org.eclipse.jdt.internal.compiler.ast.ImportReference importReference>;

        return $r1;
    }

    public void updateParseTree()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredImport r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredImport;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredImport: org.eclipse.jdt.internal.compiler.ast.ImportReference updatedImportReference()>();

        return;
    }

    public void updateSourceEndIfNecessary(int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r1, $r2, $r3;
        int $i0, i1, i2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredImport r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredImport;

        i2 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredImport: org.eclipse.jdt.internal.compiler.ast.ImportReference importReference>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int declarationSourceEnd>;

        if $i0 != 0 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredImport: org.eclipse.jdt.internal.compiler.ast.ImportReference importReference>;

        $r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int declarationSourceEnd> = i1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredImport: org.eclipse.jdt.internal.compiler.ast.ImportReference importReference>;

        $r3.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int declarationEnd> = i1;

     label1:
        return;
    }
}
