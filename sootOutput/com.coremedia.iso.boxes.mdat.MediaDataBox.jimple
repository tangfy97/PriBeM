public final class com.coremedia.iso.boxes.mdat.MediaDataBox extends java.lang.Object implements com.coremedia.iso.boxes.Box
{
    private static java.util.logging.Logger LOG;
    public static final java.lang.String TYPE;
    com.coremedia.iso.boxes.Container parent;
    boolean largeBox;
    private com.googlecode.mp4parser.DataSource dataSource;
    private long offset;
    private long size;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <com.coremedia.iso.boxes.mdat.MediaDataBox: java.lang.String TYPE> = "mdat";

        $r0 = class "Lcom/coremedia/iso/boxes/mdat/MediaDataBox;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.coremedia.iso.boxes.mdat.MediaDataBox: java.util.logging.Logger LOG> = $r2;

        return;
    }

    public void <init>()
    {
        com.coremedia.iso.boxes.mdat.MediaDataBox r0;

        r0 := @this: com.coremedia.iso.boxes.mdat.MediaDataBox;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: boolean largeBox> = 0;

        return;
    }

    public com.coremedia.iso.boxes.Container getParent()
    {
        com.coremedia.iso.boxes.Container $r1;
        com.coremedia.iso.boxes.mdat.MediaDataBox r0;

        r0 := @this: com.coremedia.iso.boxes.mdat.MediaDataBox;

        $r1 = r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: com.coremedia.iso.boxes.Container parent>;

        return $r1;
    }

    public void setParent(com.coremedia.iso.boxes.Container)
    {
        com.coremedia.iso.boxes.Container r1;
        com.coremedia.iso.boxes.mdat.MediaDataBox r0;

        r0 := @this: com.coremedia.iso.boxes.mdat.MediaDataBox;

        r1 := @parameter0: com.coremedia.iso.boxes.Container;

        r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: com.coremedia.iso.boxes.Container parent> = r1;

        return;
    }

    public java.lang.String getType()
    {
        com.coremedia.iso.boxes.mdat.MediaDataBox r0;

        r0 := @this: com.coremedia.iso.boxes.mdat.MediaDataBox;

        return "mdat";
    }

    private static void transfer(com.googlecode.mp4parser.DataSource, long, long, java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource r0;
        long l0, l2, $l3, $l4, $l5, $l6, l7;
        byte $b1;
        int $i8;
        java.nio.channels.WritableByteChannel r1;

        r0 := @parameter0: com.googlecode.mp4parser.DataSource;

        l2 := @parameter1: long;

        l0 := @parameter2: long;

        r1 := @parameter3: java.nio.channels.WritableByteChannel;

        l7 = 0L;

        goto label2;

     label1:
        $l4 = l2 + l7;

        $l3 = l0 - l7;

        $l5 = staticinvoke <java.lang.Math: long min(long,long)>(67076096L, $l3);

        $l6 = interfaceinvoke r0.<com.googlecode.mp4parser.DataSource: long transferTo(long,long,java.nio.channels.WritableByteChannel)>($l4, $l5, r1);

        l7 = l7 + $l6;

     label2:
        $b1 = l7 cmp l0;

        $i8 = (int) $b1;

        if $i8 < 0 goto label1;

        return;
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource $r2;
        com.coremedia.iso.boxes.mdat.MediaDataBox r0;
        java.nio.channels.WritableByteChannel r1;
        long $l0, $l1;

        r0 := @this: com.coremedia.iso.boxes.mdat.MediaDataBox;

        r1 := @parameter0: java.nio.channels.WritableByteChannel;

        $r2 = r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: com.googlecode.mp4parser.DataSource dataSource>;

        $l1 = r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: long offset>;

        $l0 = r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: long size>;

        staticinvoke <com.coremedia.iso.boxes.mdat.MediaDataBox: void transfer(com.googlecode.mp4parser.DataSource,long,long,java.nio.channels.WritableByteChannel)>($r2, $l1, $l0, r1);

        return;
    }

    public long getSize()
    {
        long $l0;
        com.coremedia.iso.boxes.mdat.MediaDataBox r0;

        r0 := @this: com.coremedia.iso.boxes.mdat.MediaDataBox;

        $l0 = r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: long size>;

        return $l0;
    }

    public long getOffset()
    {
        long $l0;
        com.coremedia.iso.boxes.mdat.MediaDataBox r0;

        r0 := @this: com.coremedia.iso.boxes.mdat.MediaDataBox;

        $l0 = r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: long offset>;

        return $l0;
    }

    public void parse(com.googlecode.mp4parser.DataSource, java.nio.ByteBuffer, long, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource r1;
        long $l0, $l2, $l3, l4, $l6, $l7, $l8, $l9;
        java.nio.ByteBuffer r2;
        com.coremedia.iso.BoxParser r3;
        com.coremedia.iso.boxes.mdat.MediaDataBox r0;
        int $i1, $i5;

        r0 := @this: com.coremedia.iso.boxes.mdat.MediaDataBox;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        r2 := @parameter1: java.nio.ByteBuffer;

        l4 := @parameter2: long;

        r3 := @parameter3: com.coremedia.iso.BoxParser;

        $l0 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        $i1 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        $l2 = (long) $i1;

        $l3 = $l0 - $l2;

        r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: long offset> = $l3;

        r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: com.googlecode.mp4parser.DataSource dataSource> = r1;

        $i5 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        $l6 = (long) $i5;

        $l7 = l4 + $l6;

        r0.<com.coremedia.iso.boxes.mdat.MediaDataBox: long size> = $l7;

        $l8 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        $l9 = $l8 + l4;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: void position(long)>($l9);

        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.mdat.MediaDataBox r1;
        java.lang.StringBuilder $r0, $r2, $r3;
        long $l0;
        java.lang.String $r4;

        r1 := @this: com.coremedia.iso.boxes.mdat.MediaDataBox;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("MediaDataBox{size=");

        $l0 = r1.<com.coremedia.iso.boxes.mdat.MediaDataBox: long size>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
