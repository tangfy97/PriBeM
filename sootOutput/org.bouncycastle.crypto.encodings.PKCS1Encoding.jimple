public class org.bouncycastle.crypto.encodings.PKCS1Encoding extends java.lang.Object implements org.bouncycastle.crypto.AsymmetricBlockCipher
{
    public static final java.lang.String STRICT_LENGTH_ENABLED_PROPERTY;
    private static final int HEADER_LENGTH;
    private java.security.SecureRandom random;
    private org.bouncycastle.crypto.AsymmetricBlockCipher engine;
    private boolean forEncryption;
    private boolean forPrivateKey;
    private boolean useStrictLength;

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)
    {
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;
        org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.encodings.PKCS1Encoding;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine> = r1;

        $z0 = specialinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean useStrict()>();

        r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean useStrictLength> = $z0;

        return;
    }

    private boolean useStrict()
    {
        org.bouncycastle.crypto.encodings.PKCS1Encoding r1;
        org.bouncycastle.crypto.encodings.PKCS1Encoding$1 $r0;
        java.lang.Object $r2;
        java.lang.String r3;
        boolean $z0, $z1;

        r1 := @this: org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r0 = new org.bouncycastle.crypto.encodings.PKCS1Encoding$1;

        specialinvoke $r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding$1: void <init>(org.bouncycastle.crypto.encodings.PKCS1Encoding)>(r1);

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        r3 = (java.lang.String) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public org.bouncycastle.crypto.AsymmetricBlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        org.bouncycastle.crypto.encodings.PKCS1Encoding r0;

        r0 := @this: org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r1 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        return $r1;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.encodings.PKCS1Encoding r1;
        org.bouncycastle.crypto.params.AsymmetricKeyParameter r7;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r3;
        java.security.SecureRandom $r2, $r5;
        org.bouncycastle.crypto.params.ParametersWithRandom r4;
        org.bouncycastle.crypto.CipherParameters r0, $r6;
        boolean $z0, z1, $z2;

        r1 := @this: org.bouncycastle.crypto.encodings.PKCS1Encoding;

        z1 := @parameter0: boolean;

        r0 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z0 == 0 goto label1;

        r4 = (org.bouncycastle.crypto.params.ParametersWithRandom) r0;

        $r5 = virtualinvoke r4.<org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r1.<org.bouncycastle.crypto.encodings.PKCS1Encoding: java.security.SecureRandom random> = $r5;

        $r6 = virtualinvoke r4.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        r7 = (org.bouncycastle.crypto.params.AsymmetricKeyParameter) $r6;

        goto label2;

     label1:
        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        r1.<org.bouncycastle.crypto.encodings.PKCS1Encoding: java.security.SecureRandom random> = $r2;

        r7 = (org.bouncycastle.crypto.params.AsymmetricKeyParameter) r0;

     label2:
        $r3 = r1.<org.bouncycastle.crypto.encodings.PKCS1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z1, r0);

        $z2 = virtualinvoke r7.<org.bouncycastle.crypto.params.AsymmetricKeyParameter: boolean isPrivate()>();

        r1.<org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forPrivateKey> = $z2;

        r1.<org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forEncryption> = z1;

        return;
    }

    public int getInputBlockSize()
    {
        org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        int $i0, $i1;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r1 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $z0 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i1 = $i0 - 10;

        return $i1;

     label1:
        return $i0;
    }

    public int getOutputBlockSize()
    {
        org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        int $i0, $i1;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r1 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>();

        $z0 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        return $i0;

     label1:
        $i1 = $i0 - 10;

        return $i1;
    }

    public byte[] processBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1, $r2, $r3;
        org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.encodings.PKCS1Encoding;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)>(r1, i0, i1);

        return $r3;

     label1:
        $r2 = specialinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] decodeBlock(byte[],int,int)>(r1, i0, i1);

        return $r2;
    }

    private byte[] encodeBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r2, r4, $r6;
        org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        java.security.SecureRandom $r3, $r7;
        byte $b13, $b15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i14, $i16, $i17, $i18, i19, i20;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1, $r5;

        r0 := @this: org.bouncycastle.crypto.encodings.PKCS1Encoding;

        r4 := @parameter0: byte[];

        i9 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>();

        if i0 <= $i1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("input data too large");

        throw $r8;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i2 = interfaceinvoke $r1.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        r2 = newarray (byte)[$i2];

        $z0 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forPrivateKey>;

        if $z0 == 0 goto label4;

        r2[0] = 1;

        i19 = 1;

     label2:
        $i16 = lengthof r2;

        $i17 = $i16 - i0;

        $i18 = $i17 - 1;

        if i19 == $i18 goto label3;

        r2[i19] = -1;

        i19 = i19 + 1;

        goto label2;

     label3:
        goto label8;

     label4:
        $r3 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: java.security.SecureRandom random>;

        virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>(r2);

        r2[0] = 2;

        i20 = 1;

     label5:
        $i3 = lengthof r2;

        $i4 = $i3 - i0;

        $i5 = $i4 - 1;

        if i20 == $i5 goto label8;

     label6:
        $b13 = r2[i20];

        if $b13 != 0 goto label7;

        $r7 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: java.security.SecureRandom random>;

        $i14 = virtualinvoke $r7.<java.security.SecureRandom: int nextInt()>();

        $b15 = (byte) $i14;

        r2[i20] = $b15;

        goto label6;

     label7:
        i20 = i20 + 1;

        goto label5;

     label8:
        $i6 = lengthof r2;

        $i7 = $i6 - i0;

        $i8 = $i7 - 1;

        r2[$i8] = 0;

        $i10 = lengthof r2;

        $i11 = $i10 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i9, r2, $i11, i0);

        $r5 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i12 = lengthof r2;

        $r6 = interfaceinvoke $r5.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r2, 0, $i12);

        return $r6;
    }

    private byte[] decodeBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1, $r3, r10;
        org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        org.bouncycastle.crypto.InvalidCipherTextException $r11, $r12, $r13, $r14, $r15;
        byte b4, b13;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, i14, $i15, $i16, $i18;
        boolean $z0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r2, $r6;

        r0 := @this: org.bouncycastle.crypto.encodings.PKCS1Encoding;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r1, i0, i1);

        $i2 = lengthof $r3;

        $i3 = virtualinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>();

        if $i2 >= $i3 goto label1;

        $r11 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r11.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("block truncated");

        throw $r11;

     label1:
        b4 = $r3[0];

        if b4 == 1 goto label2;

        $i15 = (int) b4;

        if $i15 == 2 goto label2;

        $r12 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r12.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("unknown block type");

        throw $r12;

     label2:
        $z0 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean useStrictLength>;

        if $z0 == 0 goto label3;

        $i9 = lengthof $r3;

        $r6 = r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i10 = interfaceinvoke $r6.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>();

        if $i9 == $i10 goto label3;

        $r13 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r13.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("block incorrect size");

        throw $r13;

     label3:
        i11 = 1;

     label4:
        $i12 = lengthof $r3;

        if i11 == $i12 goto label7;

        b13 = $r3[i11];

        if b13 != 0 goto label5;

        goto label7;

     label5:
        if b4 != 1 goto label6;

        $i16 = (int) b13;

        $i18 = (int) -1;

        if $i16 == $i18 goto label6;

        $r14 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r14.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("block padding incorrect");

        throw $r14;

     label6:
        i11 = i11 + 1;

        goto label4;

     label7:
        i14 = i11 + 1;

        $i5 = lengthof $r3;

        if i14 > $i5 goto label8;

        if i14 >= 10 goto label9;

     label8:
        $r15 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r15.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("no data in block");

        throw $r15;

     label9:
        $i6 = lengthof $r3;

        $i7 = $i6 - i14;

        r10 = newarray (byte)[$i7];

        $i8 = lengthof r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, i14, r10, 0, $i8);

        return r10;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.encodings.PKCS1Encoding: int HEADER_LENGTH> = 10;

        <org.bouncycastle.crypto.encodings.PKCS1Encoding: java.lang.String STRICT_LENGTH_ENABLED_PROPERTY> = "org.bouncycastle.pkcs1.strict";

        return;
    }
}
