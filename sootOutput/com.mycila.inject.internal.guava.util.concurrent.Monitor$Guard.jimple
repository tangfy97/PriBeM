public abstract class com.mycila.inject.internal.guava.util.concurrent.Monitor$Guard extends java.lang.Object
{
    final com.mycila.inject.internal.guava.util.concurrent.Monitor monitor;
    final java.util.concurrent.locks.Condition condition;
    int waiterCount;

    protected void <init>(com.mycila.inject.internal.guava.util.concurrent.Monitor)
    {
        java.util.concurrent.locks.Condition $r5;
        java.util.concurrent.locks.ReentrantLock $r4;
        com.mycila.inject.internal.guava.util.concurrent.Monitor r1, $r3;
        com.mycila.inject.internal.guava.util.concurrent.Monitor$Guard r0;
        java.lang.Object $r2;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.Monitor$Guard;

        r1 := @parameter0: com.mycila.inject.internal.guava.util.concurrent.Monitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.guava.util.concurrent.Monitor$Guard: int waiterCount> = 0;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "monitor");

        $r3 = (com.mycila.inject.internal.guava.util.concurrent.Monitor) $r2;

        r0.<com.mycila.inject.internal.guava.util.concurrent.Monitor$Guard: com.mycila.inject.internal.guava.util.concurrent.Monitor monitor> = $r3;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.util.concurrent.Monitor: java.util.concurrent.locks.ReentrantLock access$000(com.mycila.inject.internal.guava.util.concurrent.Monitor)>(r1);

        $r5 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<com.mycila.inject.internal.guava.util.concurrent.Monitor$Guard: java.util.concurrent.locks.Condition condition> = $r5;

        return;
    }

    public abstract boolean isSatisfied();

    public final boolean equals(java.lang.Object)
    {
        com.mycila.inject.internal.guava.util.concurrent.Monitor$Guard r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.Monitor$Guard;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int hashCode()
    {
        int $i0;
        com.mycila.inject.internal.guava.util.concurrent.Monitor$Guard r0;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.Monitor$Guard;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
