public class org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator extends java.lang.Object implements javax.validation.MessageInterpolator
{
    private final javax.validation.MessageInterpolator targetInterpolator;

    public void <init>(javax.validation.MessageInterpolator)
    {
        javax.validation.MessageInterpolator r1;
        org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator r0;

        r0 := @this: org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator;

        r1 := @parameter0: javax.validation.MessageInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Target MessageInterpolator must not be null");

        r0.<org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator: javax.validation.MessageInterpolator targetInterpolator> = r1;

        return;
    }

    public java.lang.String interpolate(java.lang.String, javax.validation.MessageInterpolator$Context)
    {
        javax.validation.MessageInterpolator $r3;
        java.util.Locale $r4;
        org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator r0;
        javax.validation.MessageInterpolator$Context r2;
        java.lang.String r1, $r5;

        r0 := @this: org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.validation.MessageInterpolator$Context;

        $r3 = r0.<org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator: javax.validation.MessageInterpolator targetInterpolator>;

        $r4 = staticinvoke <org.springframework.context.i18n.LocaleContextHolder: java.util.Locale getLocale()>();

        $r5 = interfaceinvoke $r3.<javax.validation.MessageInterpolator: java.lang.String interpolate(java.lang.String,javax.validation.MessageInterpolator$Context,java.util.Locale)>(r1, r2, $r4);

        return $r5;
    }

    public java.lang.String interpolate(java.lang.String, javax.validation.MessageInterpolator$Context, java.util.Locale)
    {
        java.util.Locale r3;
        javax.validation.MessageInterpolator $r4;
        org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator r0;
        javax.validation.MessageInterpolator$Context r2;
        java.lang.String r1, $r5;

        r0 := @this: org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.validation.MessageInterpolator$Context;

        r3 := @parameter2: java.util.Locale;

        $r4 = r0.<org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator: javax.validation.MessageInterpolator targetInterpolator>;

        $r5 = interfaceinvoke $r4.<javax.validation.MessageInterpolator: java.lang.String interpolate(java.lang.String,javax.validation.MessageInterpolator$Context,java.util.Locale)>(r1, r2, r3);

        return $r5;
    }
}
