class groovyjarjarantlr.StringLiteralElement extends groovyjarjarantlr.GrammarAtom
{
    protected java.lang.String processedAtomText;

    public void <init>(groovyjarjarantlr.Grammar, groovyjarjarantlr.Token, int)
    {
        groovyjarjarantlr.Grammar r1, $r13, $r23;
        groovyjarjarantlr.TokenManager $r15;
        groovyjarjarantlr.Token r2;
        boolean $z0, $z1;
        groovyjarjarantlr.TokenSymbol $r16;
        groovyjarjarantlr.collections.impl.BitSet $r10;
        groovyjarjarantlr.StringLiteralElement r0;
        groovyjarjarantlr.LexerGrammar $r9;
        groovyjarjarantlr.Tool $r18;
        java.lang.StringBuffer $r6, $r7, $r19, $r21, $r27, $r29;
        int i0, $i2, $i3, $i4, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i14, $i15;
        java.lang.String $r3, $r5, $r8, $r11, $r12, $r14, $r20, $r22, $r24, $r26, $r28;
        char $c1, $c5, c13;

        r0 := @this: groovyjarjarantlr.StringLiteralElement;

        r1 := @parameter0: groovyjarjarantlr.Grammar;

        r2 := @parameter1: groovyjarjarantlr.Token;

        i0 := @parameter2: int;

        specialinvoke r0.<groovyjarjarantlr.GrammarAtom: void <init>(groovyjarjarantlr.Grammar,groovyjarjarantlr.Token,int)>(r1, r2, i0);

        $z0 = r1 instanceof groovyjarjarantlr.LexerGrammar;

        if $z0 != 0 goto label2;

        $r13 = r0.<groovyjarjarantlr.StringLiteralElement: groovyjarjarantlr.Grammar grammar>;

        $r15 = $r13.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r14 = r0.<groovyjarjarantlr.StringLiteralElement: java.lang.String atomText>;

        $r16 = interfaceinvoke $r15.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.TokenSymbol getTokenSymbol(java.lang.String)>($r14);

        if $r16 != null goto label1;

        $r18 = r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Tool antlrTool>;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Undefined literal: ");

        $r20 = r0.<groovyjarjarantlr.StringLiteralElement: java.lang.String atomText>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        $r23 = r0.<groovyjarjarantlr.StringLiteralElement: groovyjarjarantlr.Grammar grammar>;

        $r24 = virtualinvoke $r23.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i7 = virtualinvoke r2.<groovyjarjarantlr.Token: int getLine()>();

        $i8 = virtualinvoke r2.<groovyjarjarantlr.Token: int getColumn()>();

        virtualinvoke $r18.<groovyjarjarantlr.Tool: void error(java.lang.String,java.lang.String,int,int)>($r22, $r24, $i7, $i8);

        goto label2;

     label1:
        $i6 = virtualinvoke $r16.<groovyjarjarantlr.TokenSymbol: int getTokenType()>();

        r0.<groovyjarjarantlr.StringLiteralElement: int tokenType> = $i6;

     label2:
        $i9 = virtualinvoke r2.<groovyjarjarantlr.Token: int getLine()>();

        r0.<groovyjarjarantlr.StringLiteralElement: int line> = $i9;

        $r28 = new java.lang.String;

        specialinvoke $r28.<java.lang.String: void <init>()>();

        r0.<groovyjarjarantlr.StringLiteralElement: java.lang.String processedAtomText> = $r28;

        i10 = 1;

     label3:
        $r26 = r0.<groovyjarjarantlr.StringLiteralElement: java.lang.String atomText>;

        $i11 = virtualinvoke $r26.<java.lang.String: int length()>();

        $i12 = $i11 - 1;

        if i10 >= $i12 goto label9;

        $r3 = r0.<groovyjarjarantlr.StringLiteralElement: java.lang.String atomText>;

        $c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i10);

        c13 = $c1;

        $i14 = (int) $c1;

        if $i14 != 92 goto label7;

        $i2 = i10 + 1;

        $r11 = r0.<groovyjarjarantlr.StringLiteralElement: java.lang.String atomText>;

        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        if $i2 >= $i4 goto label7;

        i10 = i10 + 1;

        $r12 = r0.<groovyjarjarantlr.StringLiteralElement: java.lang.String atomText>;

        $c5 = virtualinvoke $r12.<java.lang.String: char charAt(int)>(i10);

        c13 = $c5;

        $i15 = (int) $c5;

        lookupswitch($i15)
        {
            case 110: goto label4;
            case 114: goto label5;
            case 116: goto label6;
            default: goto label7;
        };

     label4:
        c13 = 10;

        goto label7;

     label5:
        c13 = 13;

        goto label7;

     label6:
        c13 = 9;

     label7:
        $z1 = r1 instanceof groovyjarjarantlr.LexerGrammar;

        if $z1 == 0 goto label8;

        $r9 = (groovyjarjarantlr.LexerGrammar) r1;

        $r10 = $r9.<groovyjarjarantlr.LexerGrammar: groovyjarjarantlr.collections.impl.BitSet charVocabulary>;

        virtualinvoke $r10.<groovyjarjarantlr.collections.impl.BitSet: void add(int)>(c13);

     label8:
        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<groovyjarjarantlr.StringLiteralElement: java.lang.String processedAtomText>;

        $r6 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c13);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovyjarjarantlr.StringLiteralElement: java.lang.String processedAtomText> = $r8;

        i10 = i10 + 1;

        goto label3;

     label9:
        return;
    }

    public void generate()
    {
        groovyjarjarantlr.StringLiteralElement r0;
        groovyjarjarantlr.Grammar $r1;
        groovyjarjarantlr.CodeGenerator $r2;

        r0 := @this: groovyjarjarantlr.StringLiteralElement;

        $r1 = r0.<groovyjarjarantlr.StringLiteralElement: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.CodeGenerator generator>;

        virtualinvoke $r2.<groovyjarjarantlr.CodeGenerator: void gen(groovyjarjarantlr.StringLiteralElement)>(r0);

        return;
    }

    public groovyjarjarantlr.Lookahead look(int)
    {
        groovyjarjarantlr.Lookahead $r3;
        int i0;
        groovyjarjarantlr.LLkGrammarAnalyzer $r2;
        groovyjarjarantlr.StringLiteralElement r0;
        groovyjarjarantlr.Grammar $r1;

        r0 := @this: groovyjarjarantlr.StringLiteralElement;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.StringLiteralElement: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        $r3 = interfaceinvoke $r2.<groovyjarjarantlr.LLkGrammarAnalyzer: groovyjarjarantlr.Lookahead look(int,groovyjarjarantlr.StringLiteralElement)>(i0, r0);

        return $r3;
    }
}
