abstract class com.google.inject.internal.AbstractBindingProcessor$Processor extends com.google.inject.spi.DefaultBindingTargetVisitor
{
    final java.lang.Object source;
    final com.google.inject.Key key;
    final java.lang.Class rawType;
    com.google.inject.internal.Scoping scoping;
    final com.google.inject.internal.AbstractBindingProcessor this$0;

    void <init>(com.google.inject.internal.AbstractBindingProcessor, com.google.inject.internal.BindingImpl)
    {
        com.google.inject.internal.Scoping $r8;
        com.google.inject.Key $r4, $r5;
        com.google.inject.internal.BindingImpl r2;
        com.google.inject.internal.AbstractBindingProcessor r1;
        com.google.inject.internal.AbstractBindingProcessor$Processor r0;
        java.lang.Object $r3;
        java.lang.Class $r7;
        com.google.inject.TypeLiteral $r6;

        r0 := @this: com.google.inject.internal.AbstractBindingProcessor$Processor;

        r1 := @parameter0: com.google.inject.internal.AbstractBindingProcessor;

        r2 := @parameter1: com.google.inject.internal.BindingImpl;

        r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.internal.AbstractBindingProcessor this$0> = r1;

        specialinvoke r0.<com.google.inject.spi.DefaultBindingTargetVisitor: void <init>()>();

        $r3 = virtualinvoke r2.<com.google.inject.internal.BindingImpl: java.lang.Object getSource()>();

        r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: java.lang.Object source> = $r3;

        $r4 = virtualinvoke r2.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.Key key> = $r4;

        $r5 = r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.Key key>;

        $r6 = virtualinvoke $r5.<com.google.inject.Key: com.google.inject.TypeLiteral getTypeLiteral()>();

        $r7 = virtualinvoke $r6.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: java.lang.Class rawType> = $r7;

        $r8 = virtualinvoke r2.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping getScoping()>();

        r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.internal.Scoping scoping> = $r8;

        return;
    }

    protected void prepareBinding()
    {
        com.google.inject.internal.Scoping $r8, $r9;
        com.google.inject.Key $r1;
        com.google.inject.internal.Errors $r6;
        com.google.inject.internal.InjectorImpl $r7;
        com.google.inject.internal.AbstractBindingProcessor $r3, $r4, $r5;
        com.google.inject.internal.AbstractBindingProcessor$Processor r0;
        java.lang.Object $r2;

        r0 := @this: com.google.inject.internal.AbstractBindingProcessor$Processor;

        $r3 = r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.internal.AbstractBindingProcessor this$0>;

        $r2 = r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: java.lang.Object source>;

        $r1 = r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.Key key>;

        staticinvoke <com.google.inject.internal.AbstractBindingProcessor: void access$000(com.google.inject.internal.AbstractBindingProcessor,java.lang.Object,com.google.inject.Key)>($r3, $r2, $r1);

        $r8 = r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.internal.Scoping scoping>;

        $r4 = r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.internal.AbstractBindingProcessor this$0>;

        $r7 = $r4.<com.google.inject.internal.AbstractBindingProcessor: com.google.inject.internal.InjectorImpl injector>;

        $r5 = r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.internal.AbstractBindingProcessor this$0>;

        $r6 = $r5.<com.google.inject.internal.AbstractBindingProcessor: com.google.inject.internal.Errors errors>;

        $r9 = staticinvoke <com.google.inject.internal.Scoping: com.google.inject.internal.Scoping makeInjectable(com.google.inject.internal.Scoping,com.google.inject.internal.InjectorImpl,com.google.inject.internal.Errors)>($r8, $r7, $r6);

        r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.internal.Scoping scoping> = $r9;

        return;
    }

    protected void scheduleInitialization(com.google.inject.internal.BindingImpl)
    {
        com.google.inject.internal.AbstractBindingProcessor$Processor$1 $r2;
        com.google.inject.internal.BindingImpl r3;
        com.google.inject.internal.AbstractBindingProcessor $r1;
        com.google.inject.internal.AbstractBindingProcessor$Processor r0;
        com.google.inject.internal.ProcessedBindingData $r4;

        r0 := @this: com.google.inject.internal.AbstractBindingProcessor$Processor;

        r3 := @parameter0: com.google.inject.internal.BindingImpl;

        $r1 = r0.<com.google.inject.internal.AbstractBindingProcessor$Processor: com.google.inject.internal.AbstractBindingProcessor this$0>;

        $r4 = $r1.<com.google.inject.internal.AbstractBindingProcessor: com.google.inject.internal.ProcessedBindingData bindingData>;

        $r2 = new com.google.inject.internal.AbstractBindingProcessor$Processor$1;

        specialinvoke $r2.<com.google.inject.internal.AbstractBindingProcessor$Processor$1: void <init>(com.google.inject.internal.AbstractBindingProcessor$Processor,com.google.inject.internal.BindingImpl)>(r0, r3);

        virtualinvoke $r4.<com.google.inject.internal.ProcessedBindingData: void addUninitializedBinding(java.lang.Runnable)>($r2);

        return;
    }
}
