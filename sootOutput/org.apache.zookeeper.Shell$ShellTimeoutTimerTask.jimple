class org.apache.zookeeper.Shell$ShellTimeoutTimerTask extends java.util.TimerTask
{
    private org.apache.zookeeper.Shell shell;

    public void <init>(org.apache.zookeeper.Shell)
    {
        org.apache.zookeeper.Shell$ShellTimeoutTimerTask r0;
        org.apache.zookeeper.Shell r1;

        r0 := @this: org.apache.zookeeper.Shell$ShellTimeoutTimerTask;

        r1 := @parameter0: org.apache.zookeeper.Shell;

        specialinvoke r0.<java.util.TimerTask: void <init>()>();

        r0.<org.apache.zookeeper.Shell$ShellTimeoutTimerTask: org.apache.zookeeper.Shell shell> = r1;

        return;
    }

    public void run()
    {
        java.lang.Process $r2;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        java.lang.Exception $r3;
        org.apache.zookeeper.Shell$ShellTimeoutTimerTask r0;
        org.apache.zookeeper.Shell $r1, $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.Shell$ShellTimeoutTimerTask;

        $r1 = r0.<org.apache.zookeeper.Shell$ShellTimeoutTimerTask: org.apache.zookeeper.Shell shell>;

        $r2 = virtualinvoke $r1.<org.apache.zookeeper.Shell: java.lang.Process getProcess()>();

     label1:
        virtualinvoke $r2.<java.lang.Process: int exitValue()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        if $r2 == null goto label4;

        $r4 = r0.<org.apache.zookeeper.Shell$ShellTimeoutTimerTask: org.apache.zookeeper.Shell shell>;

        $r5 = staticinvoke <org.apache.zookeeper.Shell: java.util.concurrent.atomic.AtomicBoolean access$000(org.apache.zookeeper.Shell)>($r4);

        $z0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label4;

        $r6 = r0.<org.apache.zookeeper.Shell$ShellTimeoutTimerTask: org.apache.zookeeper.Shell shell>;

        staticinvoke <org.apache.zookeeper.Shell: void access$100(org.apache.zookeeper.Shell)>($r6);

        virtualinvoke $r2.<java.lang.Process: void destroy()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
