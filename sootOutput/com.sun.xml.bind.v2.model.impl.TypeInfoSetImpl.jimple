class com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl extends java.lang.Object implements com.sun.xml.bind.v2.model.core.TypeInfoSet
{
    public final com.sun.xml.bind.v2.model.nav.Navigator nav;
    public final com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader;
    private final java.util.Map builtins;
    private final java.util.Map enums;
    private final java.util.Map arrays;
    private final java.util.Map beans;
    private final java.util.Map beansView;
    private final java.util.Map elementMappings;
    private final java.lang.Iterable allElements;
    private final com.sun.xml.bind.v2.model.core.NonElement anyType;
    private java.util.Map xmlNsCache;
    static final boolean $assertionsDisabled;

    public void <init>(com.sun.xml.bind.v2.model.nav.Navigator, com.sun.xml.bind.v2.model.'annotation'.AnnotationReader, java.util.Map)
    {
        java.util.LinkedHashMap $r1, $r2, $r3, $r4, $r7, $r17;
        com.sun.xml.bind.v2.model.'annotation'.AnnotationReader r10;
        java.util.Map $r5, $r6, r11, $r12, $r14, $r18, $r21;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        boolean $z0;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl$1 $r8;
        java.util.Map$Entry r20;
        java.util.Iterator $r16;
        com.sun.xml.bind.v2.model.core.NonElement $r13;
        java.util.Set $r15;
        java.lang.Object $r19, $r22, $r24, $r25, $r27, $r28;
        java.lang.Class $r23, $r26;
        com.sun.xml.bind.v2.model.nav.Navigator r9;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r9 := @parameter0: com.sun.xml.bind.v2.model.nav.Navigator;

        r10 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader;

        r11 := @parameter2: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map builtins> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map enums> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map arrays> = $r3;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map beans> = $r4;

        $r5 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map beans>;

        $r6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r5);

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map beansView> = $r6;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map elementMappings> = $r7;

        $r8 = new com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl$1;

        specialinvoke $r8.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl$1: void <init>(com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl)>(r0);

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.lang.Iterable allElements> = $r8;

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav> = r9;

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader> = r10;

        $r12 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map builtins>;

        interfaceinvoke $r12.<java.util.Map: void putAll(java.util.Map)>(r11);

        $r13 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.core.NonElement createAnyType()>();

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.core.NonElement anyType> = $r13;

        $r14 = <com.sun.xml.bind.v2.runtime.RuntimeUtil: java.util.Map primitiveToBox>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>();

        $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r19 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r19;

        $r21 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map builtins>;

        $r22 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = (java.lang.Class) $r22;

        $r24 = interfaceinvoke r9.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getPrimitive(java.lang.Class)>($r23);

        $r25 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = (java.lang.Class) $r25;

        $r27 = interfaceinvoke r9.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object ref(java.lang.Class)>($r26);

        $r28 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r27);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r28);

        goto label1;

     label2:
        $r18 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map elementMappings>;

        $r17 = new java.util.LinkedHashMap;

        specialinvoke $r17.<java.util.LinkedHashMap: void <init>()>();

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r17);

        return;
    }

    protected com.sun.xml.bind.v2.model.core.NonElement createAnyType()
    {
        com.sun.xml.bind.v2.model.impl.AnyTypeImpl $r0;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r1;
        com.sun.xml.bind.v2.model.nav.Navigator $r2;

        r1 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        $r0 = new com.sun.xml.bind.v2.model.impl.AnyTypeImpl;

        $r2 = r1.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        specialinvoke $r0.<com.sun.xml.bind.v2.model.impl.AnyTypeImpl: void <init>(com.sun.xml.bind.v2.model.nav.Navigator)>($r2);

        return $r0;
    }

    public com.sun.xml.bind.v2.model.nav.Navigator getNavigator()
    {
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        com.sun.xml.bind.v2.model.nav.Navigator $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        return $r1;
    }

    public void add(com.sun.xml.bind.v2.model.impl.ClassInfoImpl)
    {
        java.util.Map $r2;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl r1;
        java.lang.Object $r3;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.ClassInfoImpl;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map beans>;

        $r3 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: java.lang.Object getClazz()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    public void add(com.sun.xml.bind.v2.model.impl.EnumLeafInfoImpl)
    {
        java.util.Map $r3;
        com.sun.xml.bind.v2.model.impl.EnumLeafInfoImpl r1;
        java.lang.Object $r2;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.EnumLeafInfoImpl;

        $r3 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map enums>;

        $r2 = r1.<com.sun.xml.bind.v2.model.impl.EnumLeafInfoImpl: java.lang.Object clazz>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r1);

        return;
    }

    public void add(com.sun.xml.bind.v2.model.impl.ArrayInfoImpl)
    {
        com.sun.xml.bind.v2.model.impl.ArrayInfoImpl r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.ArrayInfoImpl;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map arrays>;

        $r3 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.ArrayInfoImpl: java.lang.Object getType()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    public com.sun.xml.bind.v2.model.core.NonElement getTypeInfo(java.lang.Object)
    {
        com.sun.xml.bind.v2.model.core.NonElement $r9, $r12;
        java.util.Map $r3, $r10;
        com.sun.xml.bind.v2.model.core.LeafInfo r5;
        java.lang.Object $r2, $r4, $r8, $r11, r13;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        com.sun.xml.bind.v2.model.nav.Navigator $r1, $r6, $r7;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r13 := @parameter0: java.lang.Object;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        $r2 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object erasure(java.lang.Object)>(r13);

        $r3 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map builtins>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (com.sun.xml.bind.v2.model.core.LeafInfo) $r4;

        if r5 == null goto label1;

        return r5;

     label1:
        $r6 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        $z0 = interfaceinvoke $r6.<com.sun.xml.bind.v2.model.nav.Navigator: boolean isArray(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r10 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map arrays>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r12 = (com.sun.xml.bind.v2.model.core.NonElement) $r11;

        return $r12;

     label2:
        $r7 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        $r8 = interfaceinvoke $r7.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object asDecl(java.lang.Object)>($r2);

        if $r8 != null goto label3;

        return null;

     label3:
        $r9 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.core.NonElement getClassInfo(java.lang.Object)>($r8);

        return $r9;
    }

    public com.sun.xml.bind.v2.model.core.NonElement getAnyTypeInfo()
    {
        com.sun.xml.bind.v2.model.core.NonElement $r1;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.core.NonElement anyType>;

        return $r1;
    }

    public com.sun.xml.bind.v2.model.core.NonElement getTypeInfo(com.sun.xml.bind.v2.model.core.Ref)
    {
        com.sun.xml.bind.v2.model.core.NonElement $r6;
        com.sun.xml.bind.v2.model.core.Ref r1;
        java.lang.AssertionError $r9;
        com.sun.xml.bind.v2.model.'annotation'.AnnotationReader $r7;
        java.lang.'annotation'.Annotation $r8;
        java.lang.Object $r2, $r4, $r5;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        com.sun.xml.bind.v2.model.nav.Navigator $r3;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.core.Ref;

        $z0 = <com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r1.<com.sun.xml.bind.v2.model.core.Ref: boolean valueList>;

        if $z1 == 0 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r3 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        $r2 = r1.<com.sun.xml.bind.v2.model.core.Ref: java.lang.Object type>;

        $r4 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object asDecl(java.lang.Object)>($r2);

        if $r4 == null goto label2;

        $r7 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader>;

        $r8 = interfaceinvoke $r7.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: java.lang.'annotation'.Annotation getClassAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(class "Ljavax/xml/bind/annotation/XmlRegistry;", $r4, null);

        if $r8 == null goto label2;

        return null;

     label2:
        $r5 = r1.<com.sun.xml.bind.v2.model.core.Ref: java.lang.Object type>;

        $r6 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.core.NonElement getTypeInfo(java.lang.Object)>($r5);

        return $r6;
    }

    public java.util.Map beans()
    {
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        java.util.Map $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map beansView>;

        return $r1;
    }

    public java.util.Map builtins()
    {
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        java.util.Map $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map builtins>;

        return $r1;
    }

    public java.util.Map enums()
    {
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        java.util.Map $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map enums>;

        return $r1;
    }

    public java.util.Map arrays()
    {
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        java.util.Map $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map arrays>;

        return $r1;
    }

    public com.sun.xml.bind.v2.model.core.NonElement getClassInfo(java.lang.Object)
    {
        java.util.Map $r3, $r6, $r10;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        boolean $z0;
        com.sun.xml.bind.v2.model.core.NonElement $r12, $r13;
        com.sun.xml.bind.v2.model.core.LeafInfo r14, r15;
        java.lang.Object r1, $r4, $r5, $r7, $r9, $r11;
        com.sun.xml.bind.v2.model.nav.Navigator $r2, $r8;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map builtins>;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        $r4 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object use(java.lang.Object)>(r1);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r14 = (com.sun.xml.bind.v2.model.core.LeafInfo) $r5;

        if r14 == null goto label1;

        return r14;

     label1:
        $r6 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map enums>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r15 = (com.sun.xml.bind.v2.model.core.LeafInfo) $r7;

        if r15 == null goto label2;

        return r15;

     label2:
        $r8 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        $r9 = interfaceinvoke $r8.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object asDecl(java.lang.Class)>(class "Ljava/lang/Object;");

        $z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r13 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.core.NonElement anyType>;

        return $r13;

     label3:
        $r10 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map beans>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r12 = (com.sun.xml.bind.v2.model.core.NonElement) $r11;

        return $r12;
    }

    public com.sun.xml.bind.v2.model.impl.ElementInfoImpl getElementInfo(java.lang.Object, javax.xml.namespace.QName)
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl $r6, r12;
        java.util.Map $r1, $r4, $r7, r9;
        java.lang.Object $r2, $r5, $r8, $r11, r13;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        javax.xml.namespace.QName r3;
        com.sun.xml.bind.v2.model.nav.Navigator $r10;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r13 := @parameter0: java.lang.Object;

        r3 := @parameter1: javax.xml.namespace.QName;

     label1:
        if r13 == null goto label3;

        $r7 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map elementMappings>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        r9 = (java.util.Map) $r8;

        if r9 == null goto label2;

        $r11 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r12 = (com.sun.xml.bind.v2.model.impl.ElementInfoImpl) $r11;

        if r12 == null goto label2;

        return r12;

     label2:
        $r10 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        r13 = interfaceinvoke $r10.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getSuperClass(java.lang.Object)>(r13);

        goto label1;

     label3:
        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map elementMappings>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(null);

        $r4 = (java.util.Map) $r2;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r6 = (com.sun.xml.bind.v2.model.impl.ElementInfoImpl) $r5;

        return $r6;
    }

    public final void add(com.sun.xml.bind.v2.model.impl.ElementInfoImpl, com.sun.xml.bind.v2.model.impl.ModelBuilder)
    {
        java.lang.Object[] $r10;
        java.util.LinkedHashMap $r15;
        java.util.Map $r3, $r16, $r19, r21;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r2;
        java.lang.String $r12, $r13, $r14;
        com.sun.xml.bind.v2.model.impl.ModelBuilder r8;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0, $r17;
        com.sun.xml.bind.v2.model.impl.Messages $r11;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationException $r9;
        java.lang.Object $r4, $r6, r20;
        javax.xml.namespace.QName $r5, $r7;
        com.sun.xml.bind.v2.model.core.ClassInfo $r1, $r18;

        r2 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        r8 := @parameter1: com.sun.xml.bind.v2.model.impl.ModelBuilder;

        r20 = null;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.ClassInfo getScope()>();

        if $r1 == null goto label1;

        $r18 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.ClassInfo getScope()>();

        r20 = interfaceinvoke $r18.<com.sun.xml.bind.v2.model.core.ClassInfo: java.lang.Object getClazz()>();

     label1:
        $r3 = r2.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map elementMappings>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20);

        $r19 = (java.util.Map) $r4;

        r21 = $r19;

        if $r19 != null goto label2;

        $r16 = r2.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map elementMappings>;

        $r15 = new java.util.LinkedHashMap;

        specialinvoke $r15.<java.util.LinkedHashMap: void <init>()>();

        r21 = $r15;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, $r15);

     label2:
        $r5 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.namespace.QName getElementName()>();

        $r6 = interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r0);

        $r17 = (com.sun.xml.bind.v2.model.impl.ElementInfoImpl) $r6;

        if $r17 == null goto label3;

        $r7 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.namespace.QName getElementName()>();

        $r9 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationException;

        $r11 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages CONFLICTING_XML_ELEMENT_MAPPING>;

        $r10 = newarray (java.lang.Object)[2];

        $r12 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r10[0] = $r12;

        $r13 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r10[1] = $r13;

        $r14 = virtualinvoke $r11.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r10);

        specialinvoke $r9.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: void <init>(java.lang.String,com.sun.xml.bind.v2.model.'annotation'.Locatable,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r14, r0, $r17);

        virtualinvoke r8.<com.sun.xml.bind.v2.model.impl.ModelBuilder: void reportError(com.sun.xml.bind.v2.runtime.IllegalAnnotationException)>($r9);

     label3:
        return;
    }

    public java.util.Map getElementMappings(java.lang.Object)
    {
        java.util.Map $r2, $r4;
        java.lang.Object r1, $r3;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map elementMappings>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Map) $r3;

        return $r4;
    }

    public java.lang.Iterable getAllElements()
    {
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        java.lang.Iterable $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.lang.Iterable allElements>;

        return $r1;
    }

    public java.util.Map getXmlNs(java.lang.String)
    {
        java.util.HashMap $r6, $r24;
        com.sun.xml.bind.v2.model.'annotation'.AnnotationReader $r13;
        java.util.Map $r1, $r3, $r5, $r7, $r10, $r18, $r25, r26;
        int $i0, i1;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        java.lang.String r2, $r17, $r22, $r23;
        boolean $z0;
        java.util.Iterator $r9;
        java.util.Collection $r8;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl r12;
        javax.xml.bind.'annotation'.XmlNs r21;
        java.lang.'annotation'.Annotation $r15;
        java.lang.Object $r4, $r11, $r14, $r19;
        javax.xml.bind.'annotation'.XmlSchema r16;
        javax.xml.bind.'annotation'.XmlNs[] $r20;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map xmlNsCache>;

        if $r1 != null goto label6;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map xmlNsCache> = $r6;

        $r7 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map beans()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.sun.xml.bind.v2.model.impl.ClassInfoImpl) $r11;

        $r13 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader>;

        $r14 = virtualinvoke r12.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: java.lang.Object getClazz()>();

        $r15 = interfaceinvoke $r13.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: java.lang.'annotation'.Annotation getPackageAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(class "Ljavax/xml/bind/annotation/XmlSchema;", $r14, null);

        r16 = (javax.xml.bind.'annotation'.XmlSchema) $r15;

        if r16 != null goto label2;

        goto label1;

     label2:
        $r17 = interfaceinvoke r16.<javax.xml.bind.'annotation'.XmlSchema: java.lang.String namespace()>();

        $r18 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map xmlNsCache>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        r26 = (java.util.Map) $r19;

        if r26 != null goto label3;

        $r25 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map xmlNsCache>;

        $r24 = new java.util.HashMap;

        specialinvoke $r24.<java.util.HashMap: void <init>()>();

        r26 = $r24;

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r24);

     label3:
        $r20 = interfaceinvoke r16.<javax.xml.bind.'annotation'.XmlSchema: javax.xml.bind.'annotation'.XmlNs[] xmlns()>();

        $i0 = lengthof $r20;

        i1 = 0;

     label4:
        if i1 >= $i0 goto label5;

        r21 = $r20[i1];

        $r22 = interfaceinvoke r21.<javax.xml.bind.'annotation'.XmlNs: java.lang.String prefix()>();

        $r23 = interfaceinvoke r21.<javax.xml.bind.'annotation'.XmlNs: java.lang.String namespaceURI()>();

        interfaceinvoke r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23);

        i1 = i1 + 1;

        goto label4;

     label5:
        goto label1;

     label6:
        $r3 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map xmlNsCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r10 = (java.util.Map) $r4;

        if $r10 == null goto label7;

        return $r10;

     label7:
        $r5 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r5;
    }

    public java.util.Map getSchemaLocations()
    {
        java.util.Iterator $r4;
        java.util.Collection $r3;
        java.util.HashMap $r0;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl r6;
        com.sun.xml.bind.v2.model.'annotation'.AnnotationReader $r7;
        java.util.Map $r2;
        java.lang.'annotation'.Annotation $r9;
        java.lang.Object $r5, $r8;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r1;
        java.lang.String $r11, $r12;
        javax.xml.bind.'annotation'.XmlSchema r10;
        boolean $z0, $z1;

        r1 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map beans()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.sun.xml.bind.v2.model.impl.ClassInfoImpl) $r5;

        $r7 = r1.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader>;

        $r8 = virtualinvoke r6.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: java.lang.Object getClazz()>();

        $r9 = interfaceinvoke $r7.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: java.lang.'annotation'.Annotation getPackageAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(class "Ljavax/xml/bind/annotation/XmlSchema;", $r8, null);

        r10 = (javax.xml.bind.'annotation'.XmlSchema) $r9;

        if r10 != null goto label2;

        goto label1;

     label2:
        $r11 = interfaceinvoke r10.<javax.xml.bind.'annotation'.XmlSchema: java.lang.String location()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("##generate");

        if $z0 == 0 goto label3;

        goto label1;

     label3:
        $r12 = interfaceinvoke r10.<javax.xml.bind.'annotation'.XmlSchema: java.lang.String namespace()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r11);

        goto label1;

     label4:
        return $r0;
    }

    public final javax.xml.bind.'annotation'.XmlNsForm getElementFormDefault(java.lang.String)
    {
        com.sun.xml.bind.v2.model.'annotation'.AnnotationReader $r7;
        javax.xml.bind.'annotation'.XmlNsForm $r4, $r13, $r14;
        java.util.Map $r1;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        java.lang.String $r11, r12;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl r6;
        java.lang.'annotation'.Annotation $r9;
        java.lang.Object $r5, $r8;
        javax.xml.bind.'annotation'.XmlSchema r10;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r12 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map beans()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.sun.xml.bind.v2.model.impl.ClassInfoImpl) $r5;

        $r7 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader>;

        $r8 = virtualinvoke r6.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: java.lang.Object getClazz()>();

        $r9 = interfaceinvoke $r7.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: java.lang.'annotation'.Annotation getPackageAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(class "Ljavax/xml/bind/annotation/XmlSchema;", $r8, null);

        r10 = (javax.xml.bind.'annotation'.XmlSchema) $r9;

        if r10 != null goto label2;

        goto label1;

     label2:
        $r11 = interfaceinvoke r10.<javax.xml.bind.'annotation'.XmlSchema: java.lang.String namespace()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z0 != 0 goto label3;

        goto label1;

     label3:
        $r13 = interfaceinvoke r10.<javax.xml.bind.'annotation'.XmlSchema: javax.xml.bind.'annotation'.XmlNsForm elementFormDefault()>();

        $r14 = <javax.xml.bind.'annotation'.XmlNsForm: javax.xml.bind.'annotation'.XmlNsForm UNSET>;

        if $r13 == $r14 goto label4;

        return $r13;

     label4:
        goto label1;

     label5:
        $r4 = <javax.xml.bind.'annotation'.XmlNsForm: javax.xml.bind.'annotation'.XmlNsForm UNSET>;

        return $r4;
    }

    public final javax.xml.bind.'annotation'.XmlNsForm getAttributeFormDefault(java.lang.String)
    {
        com.sun.xml.bind.v2.model.'annotation'.AnnotationReader $r7;
        javax.xml.bind.'annotation'.XmlNsForm $r4, $r13, $r14;
        java.util.Map $r1;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        java.lang.String $r11, r12;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl r6;
        java.lang.'annotation'.Annotation $r9;
        java.lang.Object $r5, $r8;
        javax.xml.bind.'annotation'.XmlSchema r10;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r12 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map beans()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.sun.xml.bind.v2.model.impl.ClassInfoImpl) $r5;

        $r7 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader>;

        $r8 = virtualinvoke r6.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: java.lang.Object getClazz()>();

        $r9 = interfaceinvoke $r7.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: java.lang.'annotation'.Annotation getPackageAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(class "Ljavax/xml/bind/annotation/XmlSchema;", $r8, null);

        r10 = (javax.xml.bind.'annotation'.XmlSchema) $r9;

        if r10 != null goto label2;

        goto label1;

     label2:
        $r11 = interfaceinvoke r10.<javax.xml.bind.'annotation'.XmlSchema: java.lang.String namespace()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z0 != 0 goto label3;

        goto label1;

     label3:
        $r13 = interfaceinvoke r10.<javax.xml.bind.'annotation'.XmlSchema: javax.xml.bind.'annotation'.XmlNsForm attributeFormDefault()>();

        $r14 = <javax.xml.bind.'annotation'.XmlNsForm: javax.xml.bind.'annotation'.XmlNsForm UNSET>;

        if $r13 == $r14 goto label4;

        return $r13;

     label4:
        goto label1;

     label5:
        $r4 = <javax.xml.bind.'annotation'.XmlNsForm: javax.xml.bind.'annotation'.XmlNsForm UNSET>;

        return $r4;
    }

    public void dump(javax.xml.transform.Result) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.Marshaller $r4;
        java.lang.Class[] $r0;
        java.lang.Class $r2;
        javax.xml.transform.Result r5;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r1;
        javax.xml.bind.JAXBContext $r3;

        r1 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r5 := @parameter0: javax.xml.transform.Result;

        $r0 = newarray (java.lang.Class)[1];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r0[0] = $r2;

        $r3 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r0);

        $r4 = virtualinvoke $r3.<javax.xml.bind.JAXBContext: javax.xml.bind.Marshaller createMarshaller()>();

        interfaceinvoke $r4.<javax.xml.bind.Marshaller: void marshal(java.lang.Object,javax.xml.transform.Result)>(r1, r5);

        return;
    }

    public volatile com.sun.xml.bind.v2.model.core.ElementInfo getElementInfo(java.lang.Object, javax.xml.namespace.QName)
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl $r3;
        java.lang.Object r1;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        javax.xml.namespace.QName r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: javax.xml.namespace.QName;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl getElementInfo(java.lang.Object,javax.xml.namespace.QName)>(r1, r2);

        return $r3;
    }

    static java.util.Map access$000(com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl)
    {
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl r0;
        java.util.Map $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: java.util.Map elementMappings>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/model/impl/TypeInfoSetImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
