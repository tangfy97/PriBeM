public class com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements extends java.lang.Object
{
    public static final com.hp.hpl.jena.sparql.sse.Item ANY;
    public static final com.hp.hpl.jena.sparql.sse.Item VAR;
    public static final com.hp.hpl.jena.sparql.sse.Item TERM;
    public static final com.hp.hpl.jena.sparql.sse.Item URI;
    public static final com.hp.hpl.jena.sparql.sse.Item BNODE;
    public static final com.hp.hpl.jena.sparql.sse.Item LITERAL;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isSet(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0, $r1, $r2, $r3, $r4;
        com.hp.hpl.jena.graph.Node $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isNode()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.graph.Node getNode()>();

        $z5 = virtualinvoke $r5.<com.hp.hpl.jena.graph.Node: boolean isConcrete()>();

        if $z5 == 0 goto label1;

        return 1;

     label1:
        $r1 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item TERM>;

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r2 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item URI>;

        $z2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $r3 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item BNODE>;

        $z3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean equals(java.lang.Object)>($r3);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $r4 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item LITERAL>;

        $z4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean equals(java.lang.Object)>($r4);

        if $z4 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    public static boolean isAny(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item ANY>;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static boolean isAnyTerm(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item TERM>;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static boolean isAnyURI(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item URI>;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static boolean isAnyLiteral(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item LITERAL>;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static boolean isAnyBNode(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item BNODE>;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static boolean isAnyVar(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item VAR>;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static boolean isVar(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0;
        com.hp.hpl.jena.graph.Node $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.graph.Node getNode()>();

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: boolean isVar(com.hp.hpl.jena.graph.Node)>($r1);

        return $z0;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.sparql.sse.Item $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createSymbol(java.lang.String)>("ANY");

        <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item ANY> = $r0;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createSymbol(java.lang.String)>("VAR");

        <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item VAR> = $r1;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createSymbol(java.lang.String)>("TERM");

        <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item TERM> = $r2;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createSymbol(java.lang.String)>("URI");

        <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item URI> = $r3;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createSymbol(java.lang.String)>("BNODE");

        <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item BNODE> = $r4;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createSymbol(java.lang.String)>("LITERAL");

        <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item LITERAL> = $r5;

        return;
    }
}
