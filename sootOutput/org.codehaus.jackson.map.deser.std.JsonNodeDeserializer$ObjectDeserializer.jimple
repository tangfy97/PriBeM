final class org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer extends org.codehaus.jackson.map.deser.std.BaseNodeDeserializer
{
    protected static final org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance;

    protected void <init>()
    {
        org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.BaseNodeDeserializer: void <init>(java.lang.Class)>(class "Lorg/codehaus/jackson/node/ObjectNode;");

        return;
    }

    public static org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance()
    {
        org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer $r0;

        $r0 = <org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer: org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance>;

        return $r0;
    }

    public org.codehaus.jackson.node.ObjectNode deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, $r3, $r4;
        org.codehaus.jackson.map.DeserializationContext r5;
        org.codehaus.jackson.map.JsonMappingException $r6;
        org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer r7;
        org.codehaus.jackson.node.JsonNodeFactory $r8, $r10;
        org.codehaus.jackson.JsonParser r0;
        org.codehaus.jackson.node.ObjectNode $r9, $r11;

        r7 := @this: org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r5 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r1 != $r2 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r10 = virtualinvoke r5.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        $r11 = virtualinvoke r7.<org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer: org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory)>(r0, r5, $r10);

        return $r11;

     label1:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r3 != $r4 goto label2;

        $r8 = virtualinvoke r5.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        $r9 = virtualinvoke r7.<org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer: org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory)>(r0, r5, $r8);

        return $r9;

     label2:
        $r6 = virtualinvoke r5.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>(class "Lorg/codehaus/jackson/node/ObjectNode;");

        throw $r6;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer r0;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;
        org.codehaus.jackson.node.ObjectNode $r3;

        r0 := @this: org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer: org.codehaus.jackson.node.ObjectNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer $r0;

        $r0 = new org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer: void <init>()>();

        <org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer: org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance> = $r0;

        return;
    }
}
