public class ucar.nc2.iosp.hdf5.H5header extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private static java.lang.String utf8CharsetName;
    private static java.nio.charset.Charset utf8Charset;
    private static boolean debugEnum;
    private static boolean debugVlen;
    private static boolean debug1;
    private static boolean debugDetail;
    private static boolean debugPos;
    private static boolean debugHeap;
    private static boolean debugV;
    private static boolean debugGroupBtree;
    private static boolean debugDataBtree;
    private static boolean debugDataChunk;
    private static boolean debugBtree2;
    private static boolean debugContinueMessage;
    private static boolean debugTracker;
    private static boolean debugSoftLink;
    private static boolean debugSymbolTable;
    private static boolean warnings;
    private static boolean debugReference;
    private static boolean debugRegionReference;
    private static boolean debugCreationOrder;
    private static boolean debugFractalHeap;
    private static boolean debugDimensionScales;
    private static final byte[] head;
    private static final java.lang.String hdf5magic;
    private static final long maxHeaderPos;
    private static boolean transformReference;
    private ucar.unidata.io.RandomAccessFile raf;
    private ucar.nc2.NetcdfFile ncfile;
    private ucar.nc2.iosp.hdf5.H5iosp h5iosp;
    private long baseAddress;
    private byte sizeOffsets;
    private byte sizeLengths;
    private boolean isOffsetLong;
    private boolean isLengthLong;
    private ucar.nc2.iosp.hdf5.H5header$H5Group rootGroup;
    private java.util.Map symlinkMap;
    private java.util.Map addressMap;
    private java.util.Map heapMap;
    ucar.nc2.units.DateFormatter formatter;
    private java.text.SimpleDateFormat hdfDateParser;
    private java.io.PrintStream debugOut;
    private ucar.nc2.iosp.hdf5.H5header$MemTracker memTracker;
    private java.lang.String[] filterName;

    public static void setDebugFlags(ucar.nc2.util.DebugFlags)
    {
        ucar.nc2.util.DebugFlags r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;

        r0 := @parameter0: ucar.nc2.util.DebugFlags;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/header");

        <ucar.nc2.iosp.hdf5.H5header: boolean debug1> = $z0;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/btree2");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugBtree2> = $z1;

        $z2 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/continueMessage");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugContinueMessage> = $z2;

        $z3 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/headerDetails");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail> = $z3;

        $z4 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/dataBtree");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugDataBtree> = $z4;

        $z5 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/dataChunk");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugDataChunk> = $z5;

        $z6 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/groupBtree");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugGroupBtree> = $z6;

        $z7 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/fractalHeap");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugFractalHeap> = $z7;

        $z8 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/Heap");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugHeap> = $z8;

        $z9 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/filePos");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugPos> = $z9;

        $z10 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/reference");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugReference> = $z10;

        $z11 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/softLink");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugSoftLink> = $z11;

        $z12 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/symbolTable");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugSymbolTable> = $z12;

        $z13 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/memTracker");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugTracker> = $z13;

        $z14 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("H5header/Variable");

        <ucar.nc2.iosp.hdf5.H5header: boolean debugV> = $z14;

        return;
    }

    static boolean isValidFile(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        byte[] r1;
        ucar.unidata.io.RandomAccessFile r0;
        long $l0, l4, $l5;
        byte $b1, $b2, $b3;
        int $i6, $i7;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        l4 = 0L;

        $l0 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: long length()>();

        r1 = newarray (byte)[8];

     label1:
        $b1 = l4 cmp $l0;

        $i6 = (int) $b1;

        if $i6 >= 0 goto label5;

        $b2 = l4 cmp 500000L;

        $i7 = (int) $b2;

        if $i7 >= 0 goto label5;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>(l4);

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r1);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[])>(r1);

        $r3 = <ucar.nc2.iosp.hdf5.H5header: java.lang.String hdf5magic>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $b3 = l4 cmp 0L;

        if $b3 != 0 goto label3;

        $l5 = 512L;

        goto label4;

     label3:
        $l5 = 2L * l4;

     label4:
        l4 = $l5;

        goto label1;

     label5:
        return 0;
    }

    void <init>(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.iosp.hdf5.H5iosp)
    {
        java.io.PrintStream $r5;
        ucar.unidata.io.RandomAccessFile r8;
        java.util.HashMap $r1, $r2, $r3;
        java.lang.String[] $r6;
        ucar.nc2.iosp.hdf5.H5iosp r9;
        ucar.nc2.iosp.hdf5.H5header r0;
        ucar.nc2.NetcdfFile r7;
        ucar.nc2.units.DateFormatter $r4;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        r8 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r7 := @parameter1: ucar.nc2.NetcdfFile;

        r9 := @parameter2: ucar.nc2.iosp.hdf5.H5iosp;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(200);

        r0.<ucar.nc2.iosp.hdf5.H5header: java.util.Map symlinkMap> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(200);

        r0.<ucar.nc2.iosp.hdf5.H5header: java.util.Map addressMap> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header: java.util.Map heapMap> = $r3;

        $r4 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r4.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.units.DateFormatter formatter> = $r4;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut> = $r5;

        $r6 = newarray (java.lang.String)[7];

        $r6[0] = "";

        $r6[1] = "deflate";

        $r6[2] = "shuffle";

        $r6[3] = "fletcher32";

        $r6[4] = "szip";

        $r6[5] = "nbit";

        $r6[6] = "scaleoffset";

        r0.<ucar.nc2.iosp.hdf5.H5header: java.lang.String[] filterName> = $r6;

        r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile> = r7;

        r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf> = r8;

        r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5iosp h5iosp> = r9;

        return;
    }

    public void read(java.io.PrintStream) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r2, $r4, $r5, $r6, $r8, $r22;
        byte $b2;
        boolean $z0, $z1, $z2;
        ucar.nc2.Group $r16;
        ucar.nc2.iosp.hdf5.H5header$H5Group $r14, $r17;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r11, $r12, $r21, $r24, $r25, $r26, $r31, $r32;
        ucar.nc2.NetcdfFile $r15;
        long $l0, $l1, $l3;
        int $i4, $i5, $i6;
        java.lang.String $r13, $r23, $r27;
        ucar.nc2.iosp.hdf5.H5header$MemTracker $r7, $r18, $r29;
        java.io.PrintStream r0, $r20;
        java.io.IOException $r30, $r33;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        r0 := @parameter0: java.io.PrintStream;

        if r0 == null goto label1;

        r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut> = r0;

     label1:
        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l0 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: long length()>();

        $r29 = new ucar.nc2.iosp.hdf5.H5header$MemTracker;

        specialinvoke $r29.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void <init>(ucar.nc2.iosp.hdf5.H5header,long)>(r1, $l0);

        r1.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker memTracker> = $r29;

        $r4 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean isValidFile(ucar.unidata.io.RandomAccessFile)>($r4);

        if $z0 != 0 goto label2;

        $r30 = new java.io.IOException;

        specialinvoke $r30.<java.io.IOException: void <init>(java.lang.String)>("Not a netCDF4/HDF5 file ");

        throw $r30;

     label2:
        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        if $z1 == 0 goto label3;

        $r20 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H5header 0pened file to read:\'");

        $r22 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $r23 = virtualinvoke $r22.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' size= ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label3:
        $r5 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: void order(int)>(1);

        $r6 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l1 = virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $l3 = $l1 - 8L;

        $r7 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker memTracker>;

        virtualinvoke $r7.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void add(java.lang.String,long,long)>("header", 0L, $l3);

        $r8 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b2 = virtualinvoke $r8.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $i4 = (int) $b2;

        if $i4 >= 2 goto label4;

        specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: void readSuperBlock1(long,byte)>($l3, $b2);

        goto label6;

     label4:
        $i5 = (int) $b2;

        if $i5 != 2 goto label5;

        specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: void readSuperBlock2(long)>($l3);

        goto label6;

     label5:
        $r33 = new java.io.IOException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown superblock version= ");

        $i6 = (int) $b2;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r33;

     label6:
        $r14 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$H5Group rootGroup>;

        specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: void replaceSymbolicLinks(ucar.nc2.iosp.hdf5.H5header$H5Group)>($r14);

        $r15 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        $r16 = virtualinvoke $r15.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

        $r17 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$H5Group rootGroup>;

        specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: void makeNetcdfGroup(ucar.nc2.Group,ucar.nc2.iosp.hdf5.H5header$H5Group)>($r16, $r17);

        $z2 = <ucar.nc2.iosp.hdf5.H5header: boolean debugTracker>;

        if $z2 == 0 goto label7;

        $r18 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker memTracker>;

        virtualinvoke $r18.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void report()>();

     label7:
        return;
    }

    private void readSuperBlock1(long, byte) throws java.io.IOException
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, b10, $b17, $b20, $b25, $b26;
        ucar.nc2.iosp.hdf5.H5header r0;
        java.lang.StringBuilder $r20, $r21, $r22, $r23, $r24, $r27, $r31, $r33, $r37, $r39, $r43, $r44, $r48, $r50, $r54, $r56, $r64, $r66, $r70, $r71, $r72, $r73, $r77, $r78, $r79, $r80, $r84, $r85, $r86, $r87, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110;
        long $l11, $l12, $l13, $l14, l15, $l16, $l18, $l19, $l21, $l22, $l23, $l24, l27;
        short $s7, $s8;
        java.io.IOException $r111;
        ucar.nc2.iosp.hdf5.H5header$H5Group $r114;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade $r113;
        int $i9, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        java.io.PrintStream $r30, $r36, $r42, $r47, $r53, $r58, $r59, $r63, $r69, $r76, $r83, $r90;
        java.lang.String $r26, $r28, $r32, $r34, $r38, $r40, $r45, $r51, $r55, $r57, $r65, $r67, $r74, $r81, $r88, $r99;
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r25, $r49, $r60, $r61;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry $r112;
        ucar.nc2.iosp.hdf5.H5header$MemTracker $r12;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        l15 := @parameter0: long;

        b10 := @parameter1: byte;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b0 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b1 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r3 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b2 = virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z0 == 0 goto label01;

        $r90 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" versionSB= ");

        $i28 = (int) b10;

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" versionFSS= ");

        $i29 = (int) $b0;

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" versionGroup= ");

        $i30 = (int) $b1;

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" versionSHMF= ");

        $i31 = (int) $b2;

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r90.<java.io.PrintStream: void println(java.lang.String)>($r99);

     label01:
        $r5 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b3 = virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeOffsets> = $b3;

        $b4 = r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeOffsets>;

        $i32 = (int) $b4;

        if $i32 != 8 goto label02;

        $z8 = 1;

        goto label03;

     label02:
        $z8 = 0;

     label03:
        r0.<ucar.nc2.iosp.hdf5.H5header: boolean isOffsetLong> = $z8;

        $r6 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b5 = virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeLengths> = $b5;

        $b6 = r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeLengths>;

        $i33 = (int) $b6;

        if $i33 != 8 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        r0.<ucar.nc2.iosp.hdf5.H5header: boolean isLengthLong> = $z9;

        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z1 == 0 goto label06;

        $r83 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sizeOffsets= ");

        $b25 = r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeOffsets>;

        $i34 = (int) $b25;

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sizeLengths= ");

        $b26 = r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeLengths>;

        $i35 = (int) $b26;

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i35);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>($r88);

     label06:
        $z2 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z2 == 0 goto label07;

        $r76 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isLengthLong= ");

        $z6 = r0.<ucar.nc2.iosp.hdf5.H5header: boolean isLengthLong>;

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isOffsetLong= ");

        $z7 = r0.<ucar.nc2.iosp.hdf5.H5header: boolean isOffsetLong>;

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r76.<java.io.PrintStream: void println(java.lang.String)>($r81);

     label07:
        $r7 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r7.<ucar.unidata.io.RandomAccessFile: int read()>();

        $r8 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $s7 = virtualinvoke $r8.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $r9 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $s8 = virtualinvoke $r9.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $z3 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z3 == 0 goto label08;

        $r69 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" btreeLeafNodeSize= ");

        $i36 = (int) $s7;

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i36);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" btreeInternalNodeSize= ");

        $i37 = (int) $s8;

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r74);

     label08:
        $r10 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i9 = virtualinvoke $r10.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $z4 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z4 == 0 goto label09;

        $r63 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fileFlags= 0x");

        $r65 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i9);

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r67);

     label09:
        if b10 != 1 goto label10;

        $r60 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r60.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $r61 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r61.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(2);

     label10:
        $l11 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readOffset()>();

        r0.<ucar.nc2.iosp.hdf5.H5header: long baseAddress> = $l11;

        $l12 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readOffset()>();

        $l13 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readOffset()>();

        l27 = $l13;

        $l14 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readOffset()>();

        $l16 = r0.<ucar.nc2.iosp.hdf5.H5header: long baseAddress>;

        $b17 = $l16 cmp l15;

        if $b17 == 0 goto label11;

        r0.<ucar.nc2.iosp.hdf5.H5header: long baseAddress> = l15;

        l27 = $l13 + l15;

        $z5 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z5 == 0 goto label11;

        $r59 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>(" baseAddress set to superblockStart");

     label11:
        $z10 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z10 == 0 goto label12;

        $r30 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" baseAddress= 0x");

        $l23 = r0.<ucar.nc2.iosp.hdf5.H5header: long baseAddress>;

        $r32 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l23);

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r34);

        $r36 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" global free space heap Address= 0x");

        $r38 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l12);

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r40);

        $r42 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" eof Address=");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l27);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r45);

        $r47 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" raf length= ");

        $r49 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l24 = virtualinvoke $r49.<ucar.unidata.io.RandomAccessFile: long length()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l24);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r51);

        $r53 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" driver BlockAddress= 0x");

        $r55 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l14);

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r57);

        $r58 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        virtualinvoke $r58.<java.io.PrintStream: void println()>();

     label12:
        $r12 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker memTracker>;

        $r11 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l18 = virtualinvoke $r11.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        virtualinvoke $r12.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void add(java.lang.String,long,long)>("superblock", l15, $l18);

        $r13 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l19 = virtualinvoke $r13.<ucar.unidata.io.RandomAccessFile: long length()>();

        $b20 = $l19 cmp l27;

        $i38 = (int) $b20;

        if $i38 >= 0 goto label13;

        $r111 = new java.io.IOException;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is truncated should be= ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l27);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actual = ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l19);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%nlocation= ");

        $r25 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $r26 = virtualinvoke $r25.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r111.<java.io.IOException: void <init>(java.lang.String)>($r28);

        throw $r111;

     label13:
        $r112 = new ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry;

        $r15 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l21 = virtualinvoke $r15.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        specialinvoke $r112.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: void <init>(ucar.nc2.iosp.hdf5.H5header,long)>(r0, $l21);

        $l22 = virtualinvoke $r112.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long getObjectAddress()>();

        $r113 = new ucar.nc2.iosp.hdf5.H5header$DataObjectFacade;

        specialinvoke $r113.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$H5Group,java.lang.String,long)>(r0, null, "", $l22);

        $r114 = new ucar.nc2.iosp.hdf5.H5header$H5Group;

        specialinvoke $r114.<ucar.nc2.iosp.hdf5.H5header$H5Group: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$DataObjectFacade,ucar.nc2.iosp.hdf5.H5header$1)>(r0, $r113, null);

        r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$H5Group rootGroup> = $r114;

        return;
    }

    private void readSuperBlock2(long) throws java.io.IOException
    {
        byte $b0, $b1, $b2, $b3, $b4, $b12, $b14, $b15, $b18;
        ucar.nc2.iosp.hdf5.H5header r0;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r19, $r21, $r25, $r27, $r31, $r32, $r36, $r38, $r43, $r45, $r49, $r50, $r51, $r52, $r56, $r57, $r58, $r59, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69;
        long $l5, $l6, $l7, $l8, l9, $l10, $l11, $l13, l16, $l17;
        java.lang.String $r15, $r20, $r22, $r26, $r28, $r33, $r37, $r39, $r44, $r46, $r53, $r60;
        java.io.IOException $r70;
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r3, $r4, $r5, $r61;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        ucar.nc2.iosp.hdf5.H5header$H5Group $r72;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade $r71;
        int $i19, $i20, $i21, $i22, $i23, $i24;
        ucar.nc2.iosp.hdf5.H5header$MemTracker $r6;
        java.io.PrintStream $r16, $r18, $r24, $r30, $r35, $r40, $r42, $r48, $r55;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        l9 := @parameter0: long;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b0 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeOffsets> = $b0;

        $b1 = r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeOffsets>;

        $i19 = (int) $b1;

        if $i19 != 8 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        r0.<ucar.nc2.iosp.hdf5.H5header: boolean isOffsetLong> = $z7;

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b2 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeLengths> = $b2;

        $b3 = r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeLengths>;

        $i20 = (int) $b3;

        if $i20 != 8 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        r0.<ucar.nc2.iosp.hdf5.H5header: boolean isLengthLong> = $z8;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z0 == 0 goto label05;

        $r55 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sizeOffsets= ");

        $b14 = r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeOffsets>;

        $i21 = (int) $b14;

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sizeLengths= ");

        $b15 = r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeLengths>;

        $i22 = (int) $b15;

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r60);

     label05:
        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z1 == 0 goto label06;

        $r48 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isLengthLong= ");

        $z5 = r0.<ucar.nc2.iosp.hdf5.H5header: boolean isLengthLong>;

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isOffsetLong= ");

        $z6 = r0.<ucar.nc2.iosp.hdf5.H5header: boolean isOffsetLong>;

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r53);

     label06:
        $r3 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b4 = virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $z2 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z2 == 0 goto label07;

        $r42 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fileFlags= 0x");

        $i23 = (int) $b4;

        $r44 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i23);

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r46);

     label07:
        $l5 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readOffset()>();

        r0.<ucar.nc2.iosp.hdf5.H5header: long baseAddress> = $l5;

        $l6 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readOffset()>();

        $l7 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readOffset()>();

        l16 = $l7;

        $l8 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readOffset()>();

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $z3 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z3 == 0 goto label08;

        $r18 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" baseAddress= 0x");

        $l13 = r0.<ucar.nc2.iosp.hdf5.H5header: long baseAddress>;

        $r20 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l13);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r24 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" extensionAddress= 0x");

        $r26 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l6);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $r30 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" eof Address=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r35 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rootObjectAddress= 0x");

        $r37 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l8);

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r39);

        $r40 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        virtualinvoke $r40.<java.io.PrintStream: void println()>();

     label08:
        $r6 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker memTracker>;

        $r5 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l10 = virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        virtualinvoke $r6.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void add(java.lang.String,long,long)>("superblock", l9, $l10);

        $l11 = r0.<ucar.nc2.iosp.hdf5.H5header: long baseAddress>;

        $b12 = $l11 cmp l9;

        if $b12 == 0 goto label09;

        r0.<ucar.nc2.iosp.hdf5.H5header: long baseAddress> = l9;

        l16 = $l7 + l9;

        $z4 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        if $z4 == 0 goto label09;

        $r16 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(" baseAddress set to superblockStart");

     label09:
        $r61 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l17 = virtualinvoke $r61.<ucar.unidata.io.RandomAccessFile: long length()>();

        $b18 = $l17 cmp l16;

        $i24 = (int) $b18;

        if $i24 >= 0 goto label10;

        $r70 = new java.io.IOException;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is truncated should be= ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l16);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actual = ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r70.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r70;

     label10:
        $r71 = new ucar.nc2.iosp.hdf5.H5header$DataObjectFacade;

        specialinvoke $r71.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$H5Group,java.lang.String,long)>(r0, null, "", $l8);

        $r72 = new ucar.nc2.iosp.hdf5.H5header$H5Group;

        specialinvoke $r72.<ucar.nc2.iosp.hdf5.H5header$H5Group: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$DataObjectFacade,ucar.nc2.iosp.hdf5.H5header$1)>(r0, $r71, null);

        r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$H5Group rootGroup> = $r72;

        return;
    }

    private void replaceSymbolicLinks(ucar.nc2.iosp.hdf5.H5header$H5Group)
    {
        java.util.Map $r8;
        boolean $z0, $z1;
        ucar.nc2.iosp.hdf5.H5header$H5Group r0, $r4, $r11, $r18, $r34;
        java.util.List r1;
        ucar.nc2.iosp.hdf5.H5header r6;
        java.lang.StringBuilder $r12, $r14, $r16, $r19, $r21, $r23, $r25, $r27, $r29, $r30, $r32;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade r3, r10;
        int i0, $i1;
        java.lang.String $r5, $r7, $r15, $r17, $r22, $r24, $r28, $r31, $r33;
        java.io.PrintStream $r13;
        org.slf4j.Logger $r20, $r26;
        java.lang.Object $r2, $r9;

        r6 := @this: ucar.nc2.iosp.hdf5.H5header;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header$H5Group;

        if r0 != null goto label1;

        return;

     label1:
        r1 = r0.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.List nestedObjects>;

        i0 = 0;

     label2:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label7;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (ucar.nc2.iosp.hdf5.H5header$DataObjectFacade) $r2;

        $r4 = r3.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$H5Group group>;

        if $r4 == null goto label3;

        $r34 = r3.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$H5Group group>;

        specialinvoke r6.<ucar.nc2.iosp.hdf5.H5header: void replaceSymbolicLinks(ucar.nc2.iosp.hdf5.H5header$H5Group)>($r34);

        goto label6;

     label3:
        $r5 = r3.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String linkName>;

        if $r5 == null goto label6;

        $r8 = r6.<ucar.nc2.iosp.hdf5.H5header: java.util.Map symlinkMap>;

        $r7 = r3.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String linkName>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r10 = (ucar.nc2.iosp.hdf5.H5header$DataObjectFacade) $r9;

        if r10 != null goto label4;

        $r26 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WARNING Didnt find symbolic link=");

        $r28 = r3.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String linkName>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r31 = r3.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>($r33);

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i0);

        goto label2;

     label4:
        $r11 = r10.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$H5Group group>;

        if $r11 == null goto label5;

        $r18 = r10.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$H5Group group>;

        $z1 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$H5Group: boolean isChildOf(ucar.nc2.iosp.hdf5.H5header$H5Group)>($r18);

        if $z1 == 0 goto label5;

        $r20 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ERROR Symbolic Link loop found =");

        $r22 = r3.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String linkName>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r24);

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i0);

        goto label2;

     label5:
        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r10);

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugSoftLink>;

        if $z0 == 0 goto label6;

        $r13 = r6.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Found symbolic link=");

        $r15 = r3.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String linkName>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label6:
        i0 = i0 + 1;

        goto label2;

     label7:
        return;
    }

    private void makeNetcdfGroup(ucar.nc2.Group, ucar.nc2.iosp.hdf5.H5header$H5Group) throws java.io.IOException
    {
        java.util.Map $r40, $r62, $r94;
        ucar.nc2.iosp.hdf5.H5header$Vinfo $r91;
        ucar.nc2.Group r6, $r67;
        ucar.nc2.iosp.hdf5.H5header r5;
        java.lang.StringBuilder $r23, $r25, $r26, $r27, $r29, $r31, $r33, $r47, $r49, $r51, $r52, $r53, $r54, $r55, $r71, $r73, $r75, $r76, $r78;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype $r39, $r43, $r61, $r65, $r93;
        java.lang.String $r28, $r32, $r34, $r35, $r41, $r50, $r56, $r57, $r63, $r68, $r74, $r77, $r79, $r84;
        java.io.IOException $r83;
        ucar.nc2.EnumTypedef $r36, $r37, $r58, $r59, r89;
        ucar.ma2.InvalidRangeException $r82;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        ucar.nc2.iosp.hdf5.H5header$DataObject $r10, $r13, $r17, $r38, $r42, $r60, $r64, $r92;
        ucar.ma2.DataType $r45, $r46;
        ucar.nc2.iosp.hdf5.H5header$MessageAttribute r95;
        ucar.nc2.iosp.hdf5.H5header$H5Group r0, $r70;
        java.util.List $r1, $r3, $r7, $r11, $r14, $r18, $r19, $r21;
        ucar.nc2.NetcdfFile $r69;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade $r9, $r12, $r16, r85, r86, r87;
        int $i0, $i1;
        ucar.nc2.Variable $r88;
        java.io.PrintStream $r24, $r30, $r44, $r48, $r66, $r72;
        java.util.Iterator $r2, $r4, $r8, $r15;
        java.lang.Object $r20, $r22, $r80, $r81, $r90;

        r5 := @this: ucar.nc2.iosp.hdf5.H5header;

        r6 := @parameter0: ucar.nc2.Group;

        r0 := @parameter1: ucar.nc2.iosp.hdf5.H5header$H5Group;

        if r0 != null goto label01;

        return;

     label01:
        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.List nestedObjects>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r81 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r85 = (ucar.nc2.iosp.hdf5.H5header$DataObjectFacade) $r81;

        $z14 = r85.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: boolean isVariable>;

        if $z14 == 0 goto label03;

        specialinvoke r5.<ucar.nc2.iosp.hdf5.H5header: void findDimensionScales(ucar.nc2.Group,ucar.nc2.iosp.hdf5.H5header$H5Group,ucar.nc2.iosp.hdf5.H5header$DataObjectFacade)>(r6, r0, r85);

     label03:
        goto label02;

     label04:
        $r3 = r0.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.List nestedObjects>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r80 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r86 = (ucar.nc2.iosp.hdf5.H5header$DataObjectFacade) $r80;

        $z13 = r86.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: boolean isVariable>;

        if $z13 == 0 goto label06;

        specialinvoke r5.<ucar.nc2.iosp.hdf5.H5header: void findDimensionLists(ucar.nc2.Group,ucar.nc2.iosp.hdf5.H5header$H5Group,ucar.nc2.iosp.hdf5.H5header$DataObjectFacade)>(r6, r0, r86);

     label06:
        goto label05;

     label07:
        specialinvoke r5.<ucar.nc2.iosp.hdf5.H5header: void createDimensions(ucar.nc2.Group,ucar.nc2.iosp.hdf5.H5header$H5Group)>(r6, r0);

        $r7 = r0.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.List nestedObjects>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label20;

        $r22 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r87 = (ucar.nc2.iosp.hdf5.H5header$DataObjectFacade) $r22;

        $z4 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: boolean isGroup>;

        if $z4 == 0 goto label10;

        $r67 = new ucar.nc2.Group;

        $r69 = r5.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        $r68 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        specialinvoke $r67.<ucar.nc2.Group: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.lang.String)>($r69, r6, $r68);

        virtualinvoke r6.<ucar.nc2.Group: void addGroup(ucar.nc2.Group)>($r67);

        $z12 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        if $z12 == 0 goto label09;

        $r72 = r5.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--made Group ");

        $r74 = virtualinvoke $r67.<ucar.nc2.Group: java.lang.String getName()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" add to ");

        $r77 = virtualinvoke r6.<ucar.nc2.Group: java.lang.String getName()>();

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>($r79);

     label09:
        $r70 = new ucar.nc2.iosp.hdf5.H5header$H5Group;

        specialinvoke $r70.<ucar.nc2.iosp.hdf5.H5header$H5Group: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$DataObjectFacade,ucar.nc2.iosp.hdf5.H5header$1)>(r5, r87, null);

        specialinvoke r5.<ucar.nc2.iosp.hdf5.H5header: void makeNetcdfGroup(ucar.nc2.Group,ucar.nc2.iosp.hdf5.H5header$H5Group)>($r67, $r70);

        goto label19;

     label10:
        $z5 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: boolean isVariable>;

        if $z5 == 0 goto label15;

        $z10 = <ucar.nc2.iosp.hdf5.H5header: boolean debugReference>;

        if $z10 == 0 goto label11;

        $r64 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r65 = $r64.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i1 = $r65.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i1 != 7 goto label11;

        $r66 = r5.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.Object)>(r87);

     label11:
        $r88 = specialinvoke r5.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.Variable makeVariable(ucar.nc2.Group,ucar.nc2.iosp.hdf5.H5header$DataObjectFacade)>(r6, r87);

        if $r88 == null goto label14;

        $r45 = virtualinvoke $r88.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        if $r45 == null goto label14;

        virtualinvoke $r88.<ucar.nc2.Variable: void setParentGroup(ucar.nc2.Group)>(r6);

        virtualinvoke r6.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r88);

        $r46 = virtualinvoke $r88.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $z11 = virtualinvoke $r46.<ucar.ma2.DataType: boolean isEnum()>();

        if $z11 == 0 goto label13;

        $r57 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r58 = virtualinvoke r6.<ucar.nc2.Group: ucar.nc2.EnumTypedef findEnumeration(java.lang.String)>($r57);

        r89 = $r58;

        if $r58 != null goto label12;

        $r59 = new ucar.nc2.EnumTypedef;

        $r63 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r60 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r61 = $r60.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r62 = $r61.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.util.Map map>;

        specialinvoke $r59.<ucar.nc2.EnumTypedef: void <init>(java.lang.String,java.util.Map)>($r63, $r62);

        r89 = $r59;

        virtualinvoke r6.<ucar.nc2.Group: void addEnumeration(ucar.nc2.EnumTypedef)>($r59);

     label12:
        virtualinvoke $r88.<ucar.nc2.Variable: void setEnumTypedef(ucar.nc2.EnumTypedef)>(r89);

     label13:
        $r90 = virtualinvoke $r88.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        $r91 = (ucar.nc2.iosp.hdf5.H5header$Vinfo) $r90;

        $z15 = <ucar.nc2.iosp.hdf5.H5header: boolean debugV>;

        if $z15 == 0 goto label14;

        $r48 = r5.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  made Variable ");

        $r50 = virtualinvoke $r88.<ucar.nc2.Variable: java.lang.String getName()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  vinfo= ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r91);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r88);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r56);

     label14:
        goto label19;

     label15:
        $z6 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: boolean isTypedef>;

        if $z6 == 0 goto label18;

        $z9 = <ucar.nc2.iosp.hdf5.H5header: boolean debugReference>;

        if $z9 == 0 goto label16;

        $r42 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r43 = $r42.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i0 = $r43.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i0 != 7 goto label16;

        $r44 = r5.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.Object)>(r87);

     label16:
        $r92 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r93 = $r92.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r94 = $r93.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.util.Map map>;

        if $r94 == null goto label17;

        $r35 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r36 = virtualinvoke r6.<ucar.nc2.Group: ucar.nc2.EnumTypedef findEnumeration(java.lang.String)>($r35);

        if $r36 != null goto label17;

        $r37 = new ucar.nc2.EnumTypedef;

        $r41 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r38 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r39 = $r38.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r40 = $r39.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.util.Map map>;

        specialinvoke $r37.<ucar.nc2.EnumTypedef: void <init>(java.lang.String,java.util.Map)>($r41, $r40);

        virtualinvoke r6.<ucar.nc2.Group: void addEnumeration(ucar.nc2.EnumTypedef)>($r37);

     label17:
        $z16 = <ucar.nc2.iosp.hdf5.H5header: boolean debugV>;

        if $z16 == 0 goto label19;

        $r30 = r5.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  made enumeration ");

        $r32 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r34);

        goto label19;

     label18:
        $z7 = r87.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: boolean isDimensionNotVariable>;

        if $z7 != 0 goto label19;

        $z8 = <ucar.nc2.iosp.hdf5.H5header: boolean warnings>;

        if $z8 == 0 goto label19;

        $r24 = r5.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARN:  DataObject ndo ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r87);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a Group or a Variable");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label19:
        goto label08;

     label20:
        $r9 = r0.<ucar.nc2.iosp.hdf5.H5header$H5Group: ucar.nc2.iosp.hdf5.H5header$DataObjectFacade facade>;

        $r10 = $r9.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r11 = $r10.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.util.List attributes>;

        specialinvoke r5.<ucar.nc2.iosp.hdf5.H5header: void filterAttributes(java.util.List)>($r11);

        $r12 = r0.<ucar.nc2.iosp.hdf5.H5header$H5Group: ucar.nc2.iosp.hdf5.H5header$DataObjectFacade facade>;

        $r13 = $r12.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r14 = $r13.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.util.List attributes>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z3 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label26;

        $r20 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r95 = (ucar.nc2.iosp.hdf5.H5header$MessageAttribute) $r20;

     label22:
        $r21 = virtualinvoke r6.<ucar.nc2.Group: java.util.List getAttributes()>();

        specialinvoke r5.<ucar.nc2.iosp.hdf5.H5header: void makeAttributes(ucar.nc2.Structure,ucar.nc2.iosp.hdf5.H5header$MessageAttribute,java.util.List)>(null, r95, $r21);

     label23:
        goto label25;

     label24:
        $r82 := @caughtexception;

        $r83 = new java.io.IOException;

        $r84 = virtualinvoke $r82.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r83.<java.io.IOException: void <init>(java.lang.String)>($r84);

        throw $r83;

     label25:
        goto label21;

     label26:
        $r16 = r0.<ucar.nc2.iosp.hdf5.H5header$H5Group: ucar.nc2.iosp.hdf5.H5header$DataObjectFacade facade>;

        $r17 = $r16.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r18 = $r17.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.util.List messages>;

        $r19 = virtualinvoke r6.<ucar.nc2.Group: java.util.List getAttributes()>();

        specialinvoke r5.<ucar.nc2.iosp.hdf5.H5header: void processSystemAttributes(java.util.List,java.util.List)>($r18, $r19);

        return;

        catch ucar.ma2.InvalidRangeException from label22 to label23 with label24;
    }

    private void findDimensionScales(ucar.nc2.Group, ucar.nc2.iosp.hdf5.H5header$H5Group, ucar.nc2.iosp.hdf5.H5header$DataObjectFacade) throws java.io.IOException
    {
        int[] $r14, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.iosp.hdf5.H5header$DataObject $r1, $r12, $r15;
        ucar.nc2.iosp.hdf5.H5header$MessageAttribute r5;
        ucar.nc2.Group r10;
        ucar.nc2.iosp.hdf5.H5header$H5Group r11;
        java.util.List $r2;
        ucar.nc2.Attribute $r8;
        ucar.nc2.iosp.hdf5.H5header r7;
        java.lang.Object[] $r20;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade r0;
        ucar.nc2.iosp.hdf5.H5header$MessageDataspace $r13, $r16;
        int $i0, $i1, $i3;
        java.lang.String $r6, $r9, $r18, $r19, $r21, $r23;
        java.io.PrintStream $r22;
        java.util.Iterator $r3;
        java.lang.Object $r4;

        r7 := @this: ucar.nc2.iosp.hdf5.H5header;

        r10 := @parameter0: ucar.nc2.Group;

        r11 := @parameter1: ucar.nc2.iosp.hdf5.H5header$H5Group;

        r0 := @parameter2: ucar.nc2.iosp.hdf5.H5header$DataObjectFacade;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r2 = $r1.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.util.List attributes>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.iosp.hdf5.H5header$MessageAttribute) $r4;

        $r6 = r5.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("CLASS");

        if $z1 == 0 goto label4;

        $r8 = specialinvoke r7.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.Attribute makeAttribute(ucar.nc2.iosp.hdf5.H5header$MessageAttribute)>(r5);

        $r9 = virtualinvoke $r8.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("DIMENSION_SCALE");

        if $z2 == 0 goto label4;

        $r18 = r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r12 = r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r13 = $r12.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        $r14 = $r13.<ucar.nc2.iosp.hdf5.H5header$MessageDataspace: int[] dimLength>;

        $i1 = $r14[0];

        $r15 = r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r16 = $r15.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        $r17 = $r16.<ucar.nc2.iosp.hdf5.H5header$MessageDataspace: int[] maxLength>;

        $i0 = $r17[0];

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        $r19 = specialinvoke r7.<ucar.nc2.iosp.hdf5.H5header: java.lang.String addDimension(ucar.nc2.Group,ucar.nc2.iosp.hdf5.H5header$H5Group,java.lang.String,int,boolean)>(r10, r11, $r18, $i1, $z4);

        r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String dimList> = $r19;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        $z3 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDimensionScales>;

        if $z3 == 0 goto label4;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r20 = newarray (java.lang.Object)[3];

        $r21 = r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String dimList>;

        $r20[0] = $r21;

        $r23 = virtualinvoke r10.<ucar.nc2.Group: java.lang.String getName()>();

        $r20[1] = $r23;

        $r20[2] = r5;

        virtualinvoke $r22.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Found dimScale %s for group \'%s\' matt=%s %n", $r20);

     label4:
        goto label1;

     label5:
        return;
    }

    private void findDimensionLists(ucar.nc2.Group, ucar.nc2.iosp.hdf5.H5header$H5Group, ucar.nc2.iosp.hdf5.H5header$DataObjectFacade) throws java.io.IOException
    {
        int[] $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        ucar.nc2.iosp.hdf5.H5header$DataObject $r1, $r24;
        ucar.nc2.iosp.hdf5.H5header$MessageAttribute r5;
        ucar.nc2.Group r19;
        ucar.nc2.iosp.hdf5.H5header$H5Group r23;
        java.util.List $r2;
        ucar.nc2.Attribute $r10, $r14;
        ucar.nc2.iosp.hdf5.H5header r9;
        java.lang.StringBuilder $r15, $r28;
        java.lang.Object[] $r12, $r17;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade r0;
        ucar.nc2.iosp.hdf5.H5header$MessageDataspace $r25;
        int $i0, $i1, i2;
        java.lang.String $r6, $r7, $r8, $r11, $r16, $r18, $r21, $r22, $r27;
        java.io.PrintStream $r13, $r20;
        java.util.Iterator $r3;
        java.lang.Object $r4;

        r9 := @this: ucar.nc2.iosp.hdf5.H5header;

        r19 := @parameter0: ucar.nc2.Group;

        r23 := @parameter1: ucar.nc2.iosp.hdf5.H5header$H5Group;

        r0 := @parameter2: ucar.nc2.iosp.hdf5.H5header$DataObjectFacade;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r2 = $r1.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.util.List attributes>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.iosp.hdf5.H5header$MessageAttribute) $r4;

        $r6 = r5.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("DIMENSION_LIST");

        if $z1 == 0 goto label05;

        $r14 = specialinvoke r9.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.Attribute makeAttribute(ucar.nc2.iosp.hdf5.H5header$MessageAttribute)>(r5);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label02:
        $i0 = virtualinvoke $r14.<ucar.nc2.Attribute: int getLength()>();

        if i2 >= $i0 goto label03;

        $r22 = virtualinvoke $r14.<ucar.nc2.Attribute: java.lang.String getStringValue(int)>(i2);

        $r24 = r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r25 = $r24.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        $r26 = $r25.<ucar.nc2.iosp.hdf5.H5header$MessageDataspace: int[] dimLength>;

        $i1 = $r26[i2];

        $r27 = specialinvoke r9.<ucar.nc2.iosp.hdf5.H5header: java.lang.String extendDimension(ucar.nc2.Group,ucar.nc2.iosp.hdf5.H5header$H5Group,java.lang.String,int)>(r19, r23, $r22, $i1);

        $r28 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i2 = i2 + 1;

        goto label02;

     label03:
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String dimList> = $r16;

        $z6 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDimensionScales>;

        if $z6 == 0 goto label04;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r17 = newarray (java.lang.Object)[3];

        $r18 = r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String dimList>;

        $r17[0] = $r18;

        $r21 = virtualinvoke r19.<ucar.nc2.Group: java.lang.String getName()>();

        $r17[1] = $r21;

        $r17[2] = r5;

        virtualinvoke $r20.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Found dimList \'%s\' for group \'%s\' matt=%s %n", $r17);

     label04:
        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        goto label09;

     label05:
        $r7 = r5.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("NAME");

        if $z2 == 0 goto label08;

        $r10 = specialinvoke r9.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.Attribute makeAttribute(ucar.nc2.iosp.hdf5.H5header$MessageAttribute)>(r5);

        $r11 = virtualinvoke $r10.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z4 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("This is a netCDF dimension but not a netCDF variable");

        if $z4 == 0 goto label06;

        r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: boolean isVariable> = 0;

        r0.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: boolean isDimensionNotVariable> = 1;

     label06:
        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        $z5 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDimensionScales>;

        if $z5 == 0 goto label07;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r11;

        virtualinvoke $r13.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Found %s %n", $r12);

     label07:
        goto label09;

     label08:
        $r8 = r5.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("REFERENCE_LIST");

        if $z3 == 0 goto label09;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

     label09:
        goto label01;

     label10:
        return;
    }

    private java.lang.String addDimension(ucar.nc2.Group, ucar.nc2.iosp.hdf5.H5header$H5Group, java.lang.String, int, boolean)
    {
        java.util.Map $r2, $r6;
        int $i0, i1, $i2;
        java.lang.String r0, $r17, $r19, $r21;
        boolean z0, $z1;
        java.io.PrintStream $r10;
        ucar.nc2.Group r5;
        ucar.nc2.iosp.hdf5.H5header$H5Group r1;
        java.util.List $r7;
        ucar.nc2.iosp.hdf5.H5header r8;
        java.lang.Object $r3;
        ucar.nc2.Dimension $r4, $r18, r20;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r16;

        r8 := @this: ucar.nc2.iosp.hdf5.H5header;

        r5 := @parameter0: ucar.nc2.Group;

        r1 := @parameter1: ucar.nc2.iosp.hdf5.H5header$H5Group;

        r0 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        if $i0 <= 0 goto label1;

        $i2 = $i0 + 1;

        $r19 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label2;

     label1:
        $r19 = r0;

     label2:
        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.Map dimMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        $r18 = (ucar.nc2.Dimension) $r3;

        r20 = $r18;

        if $r18 != null goto label3;

        $r4 = new ucar.nc2.Dimension;

        specialinvoke $r4.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>($r19, i1, 1, z0, 0);

        r20 = $r4;

        virtualinvoke $r4.<ucar.nc2.Dimension: void setGroup(ucar.nc2.Group)>(r5);

        $r6 = r1.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.Map dimMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r4);

        $r7 = r1.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.List dimList>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDimensionScales>;

        if $z1 == 0 goto label3;

        $r10 = r8.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addDimension name=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dim= ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to group ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label3:
        $r21 = virtualinvoke r20.<ucar.nc2.Dimension: java.lang.String getName()>();

        return $r21;
    }

    private java.lang.String extendDimension(ucar.nc2.Group, ucar.nc2.iosp.hdf5.H5header$H5Group, java.lang.String, int)
    {
        ucar.nc2.Group r5;
        ucar.nc2.iosp.hdf5.H5header$H5Group r1;
        java.util.Map $r2;
        ucar.nc2.iosp.hdf5.H5header r7;
        int $i0, i1, $i2, $i3;
        java.lang.Object $r3;
        ucar.nc2.Dimension $r6, r9;
        java.lang.String r0, $r4, $r8;

        r7 := @this: ucar.nc2.iosp.hdf5.H5header;

        r5 := @parameter0: ucar.nc2.Group;

        r1 := @parameter1: ucar.nc2.iosp.hdf5.H5header$H5Group;

        r0 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        if $i0 <= 0 goto label1;

        $i3 = $i0 + 1;

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

        goto label2;

     label1:
        $r8 = r0;

     label2:
        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.Map dimMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r6 = (ucar.nc2.Dimension) $r3;

        r9 = $r6;

        if $r6 != null goto label3;

        r9 = virtualinvoke r5.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>($r8);

     label3:
        if r9 == null goto label5;

        $i2 = virtualinvoke r9.<ucar.nc2.Dimension: int getLength()>();

        if i1 <= $i2 goto label4;

        virtualinvoke r9.<ucar.nc2.Dimension: void setLength(int)>(i1);

     label4:
        $r4 = virtualinvoke r9.<ucar.nc2.Dimension: java.lang.String getName()>();

        return $r4;

     label5:
        return null;
    }

    private void createDimensions(ucar.nc2.Group, ucar.nc2.iosp.hdf5.H5header$H5Group) throws java.io.IOException
    {
        java.util.Iterator $r2;
        ucar.nc2.Group r5;
        ucar.nc2.iosp.hdf5.H5header$H5Group r0;
        java.util.List $r1;
        ucar.nc2.iosp.hdf5.H5header r6;
        java.lang.Object $r3;
        ucar.nc2.Dimension r4;
        boolean $z0;

        r6 := @this: ucar.nc2.iosp.hdf5.H5header;

        r5 := @parameter0: ucar.nc2.Group;

        r0 := @parameter1: ucar.nc2.iosp.hdf5.H5header$H5Group;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.List dimList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.Dimension) $r3;

        virtualinvoke r5.<ucar.nc2.Group: void addDimension(ucar.nc2.Dimension)>(r4);

        goto label1;

     label2:
        return;
    }

    private void filterAttributes(java.util.List)
    {
        java.util.Iterator $r1;
        ucar.nc2.iosp.hdf5.H5header$MessageAttribute r3;
        java.util.List r0;
        ucar.nc2.iosp.hdf5.H5header r5;
        java.lang.Object $r2;
        java.lang.String $r4;
        boolean $z0, $z1;

        r5 := @this: ucar.nc2.iosp.hdf5.H5header;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (ucar.nc2.iosp.hdf5.H5header$MessageAttribute) $r2;

        $r4 = r3.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("_nc3_strict");

        if $z1 == 0 goto label2;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    private void makeAttributes(ucar.nc2.Structure, ucar.nc2.iosp.hdf5.H5header$MessageAttribute, java.util.List) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.unidata.io.RandomAccessFile $r5;
        ucar.ma2.ArrayStructure r11;
        ucar.ma2.StructureMembers$Member $r33, r50, r52;
        ucar.nc2.iosp.hdf5.H5header$Vinfo $r6;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r9;
        ucar.nc2.iosp.hdf5.H5header$MessageAttribute r0;
        java.util.List r2, $r14, $r17, $r38;
        ucar.ma2.StructureMembers $r13, $r16, $r37;
        ucar.nc2.Attribute $r4, $r23, $r35, $r42;
        ucar.nc2.iosp.hdf5.H5header r3;
        java.lang.StringBuilder $r24, $r26, $r27, $r29, $r43, $r45, $r46, $r48;
        long $l1;
        ucar.nc2.Structure r12;
        ucar.nc2.iosp.hdf5.H5header$MessageDataspace $r7;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype r1, $r8;
        int $i0;
        ucar.nc2.Variable $r21, r51;
        java.lang.String $r20, $r25, $r28, $r30, $r32, $r36, $r44, $r47, $r49;
        java.util.Iterator $r15, $r18, $r39;
        ucar.ma2.Array $r10, $r22, $r34, $r41;
        java.lang.Object $r19, $r31, $r40;

        r3 := @this: ucar.nc2.iosp.hdf5.H5header;

        r12 := @parameter0: ucar.nc2.Structure;

        r0 := @parameter1: ucar.nc2.iosp.hdf5.H5header$MessageAttribute;

        r2 := @parameter2: java.util.List;

        r1 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i0 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i0 != 6 goto label10;

        $r6 = new ucar.nc2.iosp.hdf5.H5header$Vinfo;

        $r8 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r7 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        $l1 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: long dataPos>;

        specialinvoke $r6.<ucar.nc2.iosp.hdf5.H5header$Vinfo: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$MessageDatatype,ucar.nc2.iosp.hdf5.H5header$MessageDataspace,long)>(r3, $r8, $r7, $l1);

        $r9 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        $r10 = specialinvoke r3.<ucar.nc2.iosp.hdf5.H5header: ucar.ma2.Array readAttributeData(ucar.nc2.iosp.hdf5.H5header$MessageAttribute,ucar.nc2.iosp.hdf5.H5header$Vinfo,ucar.ma2.DataType)>(r0, $r6, $r9);

        r11 = (ucar.ma2.ArrayStructure) $r10;

        if null != r12 goto label03;

        $r37 = virtualinvoke r11.<ucar.ma2.ArrayStructure: ucar.ma2.StructureMembers getStructureMembers()>();

        $r38 = virtualinvoke $r37.<ucar.ma2.StructureMembers: java.util.List getMembers()>();

        $r39 = interfaceinvoke $r38.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r39.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label02;

        $r40 = interfaceinvoke $r39.<java.util.Iterator: java.lang.Object next()>();

        r50 = (ucar.ma2.StructureMembers$Member) $r40;

        $r41 = virtualinvoke r11.<ucar.ma2.ArrayStructure: ucar.ma2.Array extractMemberArray(ucar.ma2.StructureMembers$Member)>(r50);

        $r42 = new ucar.nc2.Attribute;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r47 = virtualinvoke r50.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>($r49, $r41);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r42);

        goto label01;

     label02:
        goto label09;

     label03:
        $r13 = virtualinvoke r11.<ucar.ma2.ArrayStructure: ucar.ma2.StructureMembers getStructureMembers()>();

        $r14 = virtualinvoke r12.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r31 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r51 = (ucar.nc2.Variable) $r31;

        $r32 = virtualinvoke r51.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r33 = virtualinvoke $r13.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r32);

        if null == $r33 goto label05;

        $r34 = virtualinvoke r11.<ucar.ma2.ArrayStructure: ucar.ma2.Array extractMemberArray(ucar.ma2.StructureMembers$Member)>($r33);

        $r35 = new ucar.nc2.Attribute;

        $r36 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        specialinvoke $r35.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>($r36, $r34);

        virtualinvoke r51.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r35);

     label05:
        goto label04;

     label06:
        $r16 = virtualinvoke r11.<ucar.ma2.ArrayStructure: ucar.ma2.StructureMembers getStructureMembers()>();

        $r17 = virtualinvoke $r16.<ucar.ma2.StructureMembers: java.util.List getMembers()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r52 = (ucar.ma2.StructureMembers$Member) $r19;

        $r20 = virtualinvoke r52.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r21 = virtualinvoke r12.<ucar.nc2.Structure: ucar.nc2.Variable findVariable(java.lang.String)>($r20);

        if $r21 != null goto label08;

        $r22 = virtualinvoke r11.<ucar.ma2.ArrayStructure: ucar.ma2.Array extractMemberArray(ucar.ma2.StructureMembers$Member)>(r52);

        $r23 = new ucar.nc2.Attribute;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r28 = virtualinvoke r52.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>($r30, $r22);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r23);

     label08:
        goto label07;

     label09:
        goto label11;

     label10:
        $r4 = specialinvoke r3.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.Attribute makeAttribute(ucar.nc2.iosp.hdf5.H5header$MessageAttribute)>(r0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

     label11:
        $r5 = r3.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: void order(int)>(1);

        return;
    }

    private ucar.nc2.Attribute makeAttribute(ucar.nc2.iosp.hdf5.H5header$MessageAttribute) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r12;
        byte $b1;
        ucar.nc2.iosp.hdf5.H5header$Vinfo $r29;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r5;
        ucar.nc2.iosp.hdf5.H5header$MessageAttribute r2;
        ucar.nc2.Attribute r28, $r30, $r33, $r34;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r24, $r26, $r31;
        long $l0;
        java.util.ArrayList $r32;
        ucar.nc2.iosp.hdf5.H5header$MessageDataspace $r3, $r6;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype $r4, $r8;
        int $i2;
        java.lang.String $r11, $r15, $r20, $r25, $r27;
        org.slf4j.Logger $r23;
        ucar.ma2.Array $r7, r17;
        ucar.ma2.InvalidRangeException $r21;
        java.lang.Class $r9;
        java.lang.Object $r16, $r18;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        r2 := @parameter0: ucar.nc2.iosp.hdf5.H5header$MessageAttribute;

        $r29 = new ucar.nc2.iosp.hdf5.H5header$Vinfo;

        $r4 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r3 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        $l0 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: long dataPos>;

        specialinvoke $r29.<ucar.nc2.iosp.hdf5.H5header$Vinfo: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$MessageDatatype,ucar.nc2.iosp.hdf5.H5header$MessageDataspace,long)>(r1, $r4, $r3, $l0);

        $r5 = virtualinvoke $r29.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.ma2.DataType getNCDataType()>();

        $r6 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        $b1 = $r6.<ucar.nc2.iosp.hdf5.H5header$MessageDataspace: byte type>;

        $i2 = (int) $b1;

        if $i2 != 2 goto label01;

        $r30 = new ucar.nc2.Attribute;

        $r20 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        specialinvoke $r30.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.DataType)>($r20, $r5);

        return $r30;

     label01:
        $r7 = specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: ucar.ma2.Array readAttributeData(ucar.nc2.iosp.hdf5.H5header$MessageAttribute,ucar.nc2.iosp.hdf5.H5header$Vinfo,ucar.ma2.DataType)>(r2, $r29, $r5);

        $r8 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $z0 = $r8.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: boolean unsigned>;

        virtualinvoke $r7.<ucar.ma2.Array: void setUnsigned(boolean)>($z0);

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

        $r23 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to read Attribute ");

        $r25 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r27, $r21);

        return null;

     label04:
        $r9 = virtualinvoke $r7.<ucar.ma2.Array: java.lang.Class getElementType()>();

        if $r9 != class "Lucar/ma2/Array;" goto label09;

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

     label05:
        $z1 = virtualinvoke $r7.<ucar.ma2.Array: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r16 = virtualinvoke $r7.<ucar.ma2.Array: java.lang.Object next()>();

        r17 = (ucar.ma2.Array) $r16;

     label06:
        $z2 = virtualinvoke r17.<ucar.ma2.Array: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r18 = virtualinvoke r17.<ucar.ma2.Array: java.lang.Object next()>();

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label06;

     label07:
        goto label05;

     label08:
        $r33 = new ucar.nc2.Attribute;

        $r15 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        specialinvoke $r33.<ucar.nc2.Attribute: void <init>(java.lang.String,java.util.List)>($r15, $r32);

        r28 = $r33;

        goto label10;

     label09:
        $r34 = new ucar.nc2.Attribute;

        $r11 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        specialinvoke $r34.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>($r11, $r7);

        r28 = $r34;

     label10:
        $r12 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r12.<ucar.unidata.io.RandomAccessFile: void order(int)>(1);

        return r28;

        catch ucar.ma2.InvalidRangeException from label01 to label02 with label03;
    }

    private ucar.ma2.Array readAttributeData(ucar.nc2.iosp.hdf5.H5header$MessageAttribute, ucar.nc2.iosp.hdf5.H5header$Vinfo, ucar.ma2.DataType) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte[] $r18, $r19, $r22, $r61, r107;
        byte $b19, $b43;
        java.util.Map $r14, $r16;
        java.nio.ByteOrder $r95;
        ucar.ma2.StructureMembers $r111;
        ucar.nc2.iosp.hdf5.H5header r12;
        java.lang.StringBuilder $r68, $r70, $r71, $r72, $r73, $r74, $r115;
        long $l16, $l18, $l20, $l23, $l26, $l30, $l32, $l35, $l38, $l40, $l41, $l42, $l45, $l46, l65, l69, $l72;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype $r13, $r15, $r17, $r23, $r27, $r28, $r29, $r30, $r35, $r46, $r53, $r56, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r85, $r86, $r94;
        ucar.nc2.iosp.LayoutRegular $r113, $r117, $r120, $r122;
        ucar.ma2.Array $r38, $r42, $r98, r108, $r109;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r26, $r31, $r32, $r33, $r39, $r40, $r44, r101, $r110;
        ucar.ma2.ArrayStructureBB $r114;
        int[] $r84, $r87, r88, r91, r100;
        ucar.ma2.DataType r2, $r3, r90, $r96, r97, r99, $r106;
        ucar.nc2.iosp.hdf5.H5header$StructureMember r89;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i21, $i22, $i24, $i25, $i27, $i28, $i29, $i31, $i33, $i34, $i36, $i37, $i39, $i44, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, i60, i61, i62, i63, i64, i66, i67, i68, i70, i71, i73, i74, i75, $i76, $i77;
        java.io.PrintStream $r67;
        java.lang.Object $r76, $r105;
        ucar.ma2.Array[] $r43;
        ucar.ma2.StructureMembers$Member $r93;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r4;
        ucar.ma2.Section $r112, $r116, $r119, $r121;
        ucar.nc2.iosp.hdf5.H5iosp $r41, $r62, $r104;
        java.lang.String $r20, $r25, $r50, $r52, $r69, $r75, $r92;
        ucar.unidata.io.RandomAccessFile $r64, $r65;
        java.nio.ByteBuffer $r60;
        ucar.nc2.iosp.Layout$Chunk $r37, $r49, $r63;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, z7, $z8;
        ucar.nc2.iosp.hdf5.H5header$MessageAttribute r0;
        ucar.ma2.ArrayObject$D1 $r118, $r123, $r124;
        java.util.List $r54;
        ucar.nc2.iosp.hdf5.H5header$MessageDataspace $r1;
        java.util.Iterator $r55;

        r12 := @this: ucar.nc2.iosp.hdf5.H5header;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header$MessageAttribute;

        r4 := @parameter1: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        r2 := @parameter2: ucar.ma2.DataType;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        r88 = $r1.<ucar.nc2.iosp.hdf5.H5header$MessageDataspace: int[] dimLength>;

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if r2 != $r3 goto label17;

        z3 = 0;

        $r111 = new ucar.ma2.StructureMembers;

        $r52 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        specialinvoke $r111.<ucar.ma2.StructureMembers: void <init>(java.lang.String)>($r52);

        $r53 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r54 = $r53.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.util.List members>;

        $r55 = interfaceinvoke $r54.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r55.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r76 = interfaceinvoke $r55.<java.util.Iterator: java.lang.Object next()>();

        r89 = (ucar.nc2.iosp.hdf5.H5header$StructureMember) $r76;

        $r77 = r89.<ucar.nc2.iosp.hdf5.H5header$StructureMember: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i52 = $r77.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        lookupswitch($i52)
        {
            case 9: goto label02;
            case 10: goto label03;
            default: goto label04;
        };

     label02:
        r90 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        $r84 = newarray (int)[1];

        $r84[0] = 1;

        r91 = $r84;

        goto label05;

     label03:
        $r78 = r89.<ucar.nc2.iosp.hdf5.H5header$StructureMember: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r79 = $r78.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: ucar.nc2.iosp.hdf5.H5header$MessageDatatype base>;

        $i54 = $r79.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        $r80 = r89.<ucar.nc2.iosp.hdf5.H5header$StructureMember: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r81 = $r80.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: ucar.nc2.iosp.hdf5.H5header$MessageDatatype base>;

        $i53 = $r81.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        r90 = specialinvoke r12.<ucar.nc2.iosp.hdf5.H5header: ucar.ma2.DataType getNCtype(int,int)>($i54, $i53);

        $r82 = r89.<ucar.nc2.iosp.hdf5.H5header$StructureMember: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        r91 = $r82.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int[] dim>;

        goto label05;

     label04:
        $r85 = r89.<ucar.nc2.iosp.hdf5.H5header$StructureMember: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i57 = $r85.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        $r86 = r89.<ucar.nc2.iosp.hdf5.H5header$StructureMember: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i56 = $r86.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        r90 = specialinvoke r12.<ucar.nc2.iosp.hdf5.H5header: ucar.ma2.DataType getNCtype(int,int)>($i57, $i56);

        $r87 = newarray (int)[1];

        $r87[0] = 1;

        r91 = $r87;

     label05:
        $r92 = r89.<ucar.nc2.iosp.hdf5.H5header$StructureMember: java.lang.String name>;

        $r93 = virtualinvoke $r111.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member addMember(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int[])>($r92, null, null, r90, r91);

        $r94 = r89.<ucar.nc2.iosp.hdf5.H5header$StructureMember: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i58 = $r94.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int endian>;

        if $i58 < 0 goto label08;

        $r83 = r89.<ucar.nc2.iosp.hdf5.H5header$StructureMember: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i55 = $r83.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int endian>;

        if $i55 != 1 goto label06;

        $r95 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        goto label07;

     label06:
        $r95 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

     label07:
        virtualinvoke $r93.<ucar.ma2.StructureMembers$Member: void setDataObject(java.lang.Object)>($r95);

     label08:
        $i59 = r89.<ucar.nc2.iosp.hdf5.H5header$StructureMember: int offset>;

        virtualinvoke $r93.<ucar.ma2.StructureMembers$Member: void setDataParam(int)>($i59);

        $r96 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if r90 != $r96 goto label09;

        z3 = 1;

     label09:
        goto label01;

     label10:
        $r56 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        i60 = $r56.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        $r113 = new ucar.nc2.iosp.LayoutRegular;

        $l40 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: long dataPos>;

        $r112 = new ucar.ma2.Section;

        specialinvoke $r112.<ucar.ma2.Section: void <init>(int[])>(r88);

        specialinvoke $r113.<ucar.nc2.iosp.LayoutRegular: void <init>(long,int,int[],ucar.ma2.Section)>($l40, i60, r88, $r112);

        virtualinvoke $r111.<ucar.ma2.StructureMembers: void setStructureSize(int)>(i60);

        $r114 = new ucar.ma2.ArrayStructureBB;

        specialinvoke $r114.<ucar.ma2.ArrayStructureBB: void <init>(ucar.ma2.StructureMembers,int[])>($r111, r88);

        $r60 = virtualinvoke $r114.<ucar.ma2.ArrayStructureBB: java.nio.ByteBuffer getByteBuffer()>();

        $r61 = virtualinvoke $r60.<java.nio.ByteBuffer: byte[] array()>();

     label11:
        $z4 = interfaceinvoke $r113.<ucar.nc2.iosp.Layout: boolean hasNext()>();

        if $z4 == 0 goto label14;

        $r63 = interfaceinvoke $r113.<ucar.nc2.iosp.Layout: ucar.nc2.iosp.Layout$Chunk next()>();

        if $r63 != null goto label12;

        goto label11;

     label12:
        if 0 == 0 goto label13;

        $r67 = <java.lang.System: java.io.PrintStream out>;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" readStructure ");

        $r69 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: java.lang.String name>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chunk= ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" index.getElemSize= ");

        $i51 = interfaceinvoke $r113.<ucar.nc2.iosp.Layout: int getElemSize()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r75);

     label13:
        $r64 = r12.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l45 = interfaceinvoke $r63.<ucar.nc2.iosp.Layout$Chunk: long getSrcPos()>();

        virtualinvoke $r64.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l45);

        $r65 = r12.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l46 = interfaceinvoke $r63.<ucar.nc2.iosp.Layout$Chunk: long getDestElem()>();

        $i47 = (int) $l46;

        $i48 = $i47 * i60;

        $i49 = interfaceinvoke $r63.<ucar.nc2.iosp.Layout$Chunk: int getNelems()>();

        $i50 = $i49 * i60;

        virtualinvoke $r65.<ucar.unidata.io.RandomAccessFile: int read(byte[],int,int)>($r61, $i48, $i50);

        goto label11;

     label14:
        if z3 == 0 goto label16;

        i61 = 0;

        i62 = 0;

     label15:
        $l41 = (long) i62;

        $l42 = interfaceinvoke $r113.<ucar.nc2.iosp.Layout: long getTotalNelems()>();

        $b43 = $l41 cmp $l42;

        $i77 = (int) $b43;

        if $i77 >= 0 goto label16;

        $r62 = r12.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5iosp h5iosp>;

        virtualinvoke $r62.<ucar.nc2.iosp.hdf5.H5iosp: void convertStrings(ucar.ma2.ArrayStructureBB,int,ucar.ma2.StructureMembers)>($r114, i61, $r111);

        $i44 = interfaceinvoke $r113.<ucar.nc2.iosp.Layout: int getElemSize()>();

        i61 = i61 + $i44;

        i62 = i62 + 1;

        goto label15;

     label16:
        return $r114;

     label17:
        $r5 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i0 = $r5.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        if $i0 != 9 goto label23;

        $r44 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $z1 = $r44.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: boolean isVString>;

        if $z1 == 0 goto label23;

        $r117 = new ucar.nc2.iosp.LayoutRegular;

        $l30 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: long dataPos>;

        $r46 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i31 = $r46.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        $r116 = new ucar.ma2.Section;

        specialinvoke $r116.<ucar.ma2.Section: void <init>(int[])>(r88);

        specialinvoke $r117.<ucar.nc2.iosp.LayoutRegular: void <init>(long,int,int[],ucar.ma2.Section)>($l30, $i31, r88, $r116);

        $r118 = new ucar.ma2.ArrayObject$D1;

        $l32 = interfaceinvoke $r117.<ucar.nc2.iosp.Layout: long getTotalNelems()>();

        $i33 = (int) $l32;

        specialinvoke $r118.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", $i33);

        i63 = 0;

     label18:
        $z5 = interfaceinvoke $r117.<ucar.nc2.iosp.Layout: boolean hasNext()>();

        if $z5 == 0 goto label22;

        $r49 = interfaceinvoke $r117.<ucar.nc2.iosp.Layout: ucar.nc2.iosp.Layout$Chunk next()>();

        if $r49 != null goto label19;

        goto label18;

     label19:
        i64 = 0;

     label20:
        $i34 = interfaceinvoke $r49.<ucar.nc2.iosp.Layout$Chunk: int getNelems()>();

        if i64 >= $i34 goto label21;

        $l35 = interfaceinvoke $r49.<ucar.nc2.iosp.Layout$Chunk: long getSrcPos()>();

        $i36 = interfaceinvoke $r117.<ucar.nc2.iosp.Layout: int getElemSize()>();

        $i37 = $i36 * i64;

        $l38 = (long) $i37;

        l65 = $l35 + $l38;

        $r50 = virtualinvoke r12.<ucar.nc2.iosp.hdf5.H5header: java.lang.String readHeapString(long)>(l65);

        $i39 = i63;

        i63 = i63 + 1;

        virtualinvoke $r118.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>($i39, $r50);

        i64 = i64 + 1;

        goto label20;

     label21:
        goto label18;

     label22:
        return $r118;

     label23:
        $r6 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i1 = $r6.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        if $i1 != 9 goto label36;

        $r31 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        i66 = $r31.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian>;

        r97 = r2;

        $r32 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r33 = $r32.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo base>;

        $i15 = $r33.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        if $i15 != 7 goto label24;

        r97 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        i66 = 1;

     label24:
        $r120 = new ucar.nc2.iosp.LayoutRegular;

        $l16 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: long dataPos>;

        $r35 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i17 = $r35.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        $r119 = new ucar.ma2.Section;

        specialinvoke $r119.<ucar.ma2.Section: void <init>(int[])>(r88);

        specialinvoke $r120.<ucar.nc2.iosp.LayoutRegular: void <init>(long,int,int[],ucar.ma2.Section)>($l16, $i17, r88, $r119);

        $l18 = interfaceinvoke $r120.<ucar.nc2.iosp.Layout: long getTotalNelems()>();

        $b19 = $l18 cmp 1L;

        if $b19 != 0 goto label25;

        $z6 = 1;

        goto label26;

     label25:
        $z6 = 0;

     label26:
        z7 = $z6;

        $l20 = interfaceinvoke $r120.<ucar.nc2.iosp.Layout: long getTotalNelems()>();

        $i21 = (int) $l20;

        $r43 = newarray (ucar.ma2.Array)[$i21];

        i67 = 0;

     label27:
        $z8 = interfaceinvoke $r120.<ucar.nc2.iosp.Layout: boolean hasNext()>();

        if $z8 == 0 goto label33;

        $r37 = interfaceinvoke $r120.<ucar.nc2.iosp.Layout: ucar.nc2.iosp.Layout$Chunk next()>();

        if $r37 != null goto label28;

        goto label27;

     label28:
        i68 = 0;

     label29:
        $i22 = interfaceinvoke $r37.<ucar.nc2.iosp.Layout$Chunk: int getNelems()>();

        if i68 >= $i22 goto label32;

        $l23 = interfaceinvoke $r37.<ucar.nc2.iosp.Layout$Chunk: long getSrcPos()>();

        $i24 = interfaceinvoke $r120.<ucar.nc2.iosp.Layout: int getElemSize()>();

        $i25 = $i24 * i68;

        $l26 = (long) $i25;

        l69 = $l23 + $l26;

        $r38 = virtualinvoke r12.<ucar.nc2.iosp.hdf5.H5header: ucar.ma2.Array getHeapDataArray(long,ucar.ma2.DataType,int)>(l69, r97, i66);

        $r39 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r40 = $r39.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo base>;

        $i27 = $r40.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        if $i27 != 7 goto label30;

        $i29 = i67;

        i67 = i67 + 1;

        $r41 = r12.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5iosp h5iosp>;

        $r42 = virtualinvoke $r41.<ucar.nc2.iosp.hdf5.H5iosp: ucar.ma2.Array convertReference(ucar.ma2.Array)>($r38);

        $r43[$i29] = $r42;

        goto label31;

     label30:
        $i28 = i67;

        i67 = i67 + 1;

        $r43[$i28] = $r38;

     label31:
        i68 = i68 + 1;

        goto label29;

     label32:
        goto label27;

     label33:
        if z7 == 0 goto label34;

        $r98 = $r43[0];

        goto label35;

     label34:
        $r98 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>(class "Lucar/ma2/Array;", r88, $r43);

     label35:
        return $r98;

     label36:
        r99 = r2;

        i70 = virtualinvoke r2.<ucar.ma2.DataType: int getSize()>();

        $r7 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        i71 = $r7.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian>;

        $r8 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i2 = $r8.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        if $i2 != 2 goto label37;

        $r30 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        r99 = $r30.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: ucar.ma2.DataType timeType>;

        i70 = virtualinvoke r99.<ucar.ma2.DataType: int getSize()>();

        goto label40;

     label37:
        $r9 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i3 = $r9.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        if $i3 != 3 goto label38;

        $r28 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i9 = $r28.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        if $i9 <= 1 goto label40;

        $i10 = lengthof r88;

        $i11 = $i10 + 1;

        r100 = newarray (int)[$i11];

        $i12 = lengthof r88;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r88, 0, r100, 0, $i12);

        $i14 = lengthof r88;

        $r29 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i13 = $r29.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        r100[$i14] = $i13;

        r88 = r100;

        goto label40;

     label38:
        $r10 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i4 = $r10.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        if $i4 != 5 goto label39;

        $r27 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        i70 = $r27.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        goto label40;

     label39:
        $r11 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i5 = $r11.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        if $i5 != 8 goto label40;

        $r26 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        r101 = $r26.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo base>;

        r99 = r101.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        i70 = virtualinvoke r99.<ucar.ma2.DataType: int getSize()>();

        i71 = r101.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian>;

     label40:
        $r122 = new ucar.nc2.iosp.LayoutRegular;

        $l72 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: long dataPos>;

        $r121 = new ucar.ma2.Section;

        specialinvoke $r121.<ucar.ma2.Section: void <init>(int[])>(r88);

        specialinvoke $r122.<ucar.nc2.iosp.LayoutRegular: void <init>(long,int,int[],ucar.ma2.Section)>($l72, i70, r88, $r121);

        $r104 = r12.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5iosp h5iosp>;

        $r105 = virtualinvoke $r104.<ucar.nc2.iosp.hdf5.H5iosp: java.lang.Object readDataPrimitive(ucar.nc2.iosp.Layout,ucar.ma2.DataType,int[],java.lang.Object,int,boolean)>($r122, r2, r88, null, i71, 0);

        $r106 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if r2 != $r106 goto label44;

        $r17 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i6 = $r17.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        if $i6 <= 1 goto label43;

        $r22 = (byte[]) $r105;

        r107 = (byte[]) $r22;

        $r23 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        i73 = $r23.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        $i7 = lengthof r107;

        i74 = $i7 / i73;

        $r123 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r123.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", i74);

        i75 = 0;

     label41:
        if i75 >= i74 goto label42;

        $i8 = i75 * i73;

        $r25 = specialinvoke r12.<ucar.nc2.iosp.hdf5.H5header: java.lang.String convertString(byte[],int,int)>(r107, $i8, i73);

        virtualinvoke $r123.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i75, $r25);

        i75 = i75 + 1;

        goto label41;

     label42:
        r108 = $r123;

        goto label47;

     label43:
        $r18 = (byte[]) $r105;

        $r19 = (byte[]) $r18;

        $r20 = specialinvoke r12.<ucar.nc2.iosp.hdf5.H5header: java.lang.String convertString(byte[])>($r19);

        $r124 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r124.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", 1);

        virtualinvoke $r124.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(0, $r20);

        r108 = $r124;

        goto label47;

     label44:
        $z0 = $r105 instanceof ucar.ma2.Array;

        if $z0 == 0 goto label45;

        $r109 = (ucar.ma2.Array) $r105;

        goto label46;

     label45:
        $r109 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>(r99, r88, $r105);

     label46:
        r108 = $r109;

     label47:
        $r110 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i76 = $r110.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        if $i76 != 8 goto label48;

        $r13 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r14 = $r13.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.util.Map map>;

        if $r14 == null goto label48;

        $r15 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageAttribute: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r16 = $r15.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.util.Map map>;

        r108 = virtualinvoke r12.<ucar.nc2.iosp.hdf5.H5header: ucar.ma2.Array convertEnums(java.util.Map,ucar.ma2.Array)>($r16, r108);

     label48:
        return r108;
    }

    private java.lang.String convertString(byte[]) throws java.io.UnsupportedEncodingException
    {
        byte[] r0;
        byte $b1;
        ucar.nc2.iosp.hdf5.H5header r2;
        int $i0, i2;
        java.lang.String $r1;

        r2 := @this: ucar.nc2.iosp.hdf5.H5header;

        r0 := @parameter0: byte[];

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label3;

        $b1 = r0[i2];

        if $b1 != 0 goto label2;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, 0, i2, "UTF-8");

        return $r1;
    }

    private java.lang.String convertString(byte[], int, int) throws java.io.UnsupportedEncodingException
    {
        byte[] r1;
        byte $b4;
        ucar.nc2.iosp.hdf5.H5header r2;
        int i0, i1, $i2, $i3, i5;
        java.lang.String $r0;

        r2 := @this: ucar.nc2.iosp.hdf5.H5header;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i5 = i0;

     label1:
        $i2 = i0 + i1;

        if i5 >= $i2 goto label3;

        $b4 = r1[i5];

        if $b4 != 0 goto label2;

        goto label3;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $r0 = new java.lang.String;

        $i3 = i5 - i0;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i0, $i3, "UTF-8");

        return $r0;
    }

    protected ucar.ma2.Array convertEnums(java.util.Map, ucar.ma2.Array)
    {
        ucar.ma2.IndexIterator $r4;
        ucar.ma2.DataType $r1;
        ucar.ma2.Array r0, $r3;
        java.lang.Integer $r6;
        int[] $r2;
        java.util.Map r5;
        ucar.nc2.iosp.hdf5.H5header r9;
        int $i0;
        java.lang.Object $r7;
        java.lang.String r8, $r10;
        boolean $z0;

        r9 := @this: ucar.nc2.iosp.hdf5.H5header;

        r5 := @parameter0: java.util.Map;

        r0 := @parameter1: ucar.ma2.Array;

        $r1 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        $r2 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        $r3 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r1, $r2);

        $r4 = virtualinvoke $r3.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        virtualinvoke r0.<ucar.ma2.Array: void resetLocalIterator()>();

     label1:
        $z0 = virtualinvoke r0.<ucar.ma2.Array: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke r0.<ucar.ma2.Array: int nextInt()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.lang.String) $r7;

        if r8 != null goto label2;

        $r10 = "Unknown";

        goto label3;

     label2:
        $r10 = r8;

     label3:
        interfaceinvoke $r4.<ucar.ma2.IndexIterator: void setObjectNext(java.lang.Object)>($r10);

        goto label1;

     label4:
        return $r3;
    }

    private ucar.nc2.Variable makeVariable(ucar.nc2.Group, ucar.nc2.iosp.hdf5.H5header$DataObjectFacade) throws java.io.IOException
    {
        byte[] $r103, $r106, $r118, $r120;
        byte $b0;
        ucar.nc2.iosp.hdf5.H5header$MessageFillValueOld r150;
        ucar.nc2.Attribute $r89, r147, $r166, $r170, $r171, $r173, $r175;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r31, $r33, $r34, $r35, $r42, $r44, $r45, $r47, $r51, $r53, $r54, $r62, $r64, $r65, $r67, $r125, $r128, $r129, $r131, $r135, $r137, $r138, $r140, $r164, $r165, $r174, $r176, $r177, $r178;
        ucar.nc2.iosp.hdf5.H5header$MessageFillValue r149;
        long l15;
        short $s2, $s11;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype $r18, $r28, $r57, $r59, $r75, $r77, $r86, $r98, $r100, $r102, $r154;
        java.io.IOException $r169;
        ucar.ma2.Array $r72, $r78, $r79;
        ucar.ma2.InvalidRangeException $r142;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r104, $r112, $r136, $r159, $r161;
        ucar.nc2.iosp.hdf5.H5header$MessageLayout $r10;
        int[] $r71, $r83, $r84;
        ucar.nc2.iosp.hdf5.H5header$HeaderMessage r148;
        ucar.ma2.DataType $r3, $r19, $r20, $r69, $r70, $r80, $r105, $r113;
        ucar.nc2.iosp.hdf5.H5header$DataObject $r4, $r6, $r9, $r14, $r15, $r21, $r24, $r27, $r56, $r58, $r74, $r76, $r85, $r94, $r95, $r99, $r101, $r121, $r126, $r153;
        ucar.nc2.iosp.hdf5.H5header$Filter[] $r38, r145;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade r2;
        int $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, i13, i14, $i16, $i17, $i18;
        ucar.nc2.Variable r156, $r168;
        java.io.PrintStream $r30, $r41, $r50, $r124, $r134;
        org.slf4j.Logger $r61;
        java.lang.Object $r90, $r107, $r114, $r151;
        ucar.nc2.iosp.hdf5.H5header$Vinfo $r163;
        ucar.nc2.Group r12;
        ucar.nc2.Structure r152, $r167;
        ucar.nc2.iosp.hdf5.H5header$MessageFilter $r5, $r37, $r46, $r122, $r127, $r162;
        java.lang.String $r16, $r32, $r36, $r43, $r48, $r52, $r55, $r63, $r66, $r68, $r96, $r130, $r132, $r139, $r141, $r144, r155, r157, r160;
        java.lang.Number $r116;
        ucar.nc2.iosp.hdf5.H5header$DataBTree $r172;
        ucar.nc2.iosp.hdf5.H5header$Named $r117, $r119;
        ucar.nc2.iosp.hdf5.H5header$Filter $r39, r146;
        ucar.nc2.iosp.hdf5.H5header$MessageType $r108, $r109, $r110, $r111;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        ucar.nc2.iosp.hdf5.H5header$MessageAttribute r158;
        java.util.List $r7, $r22, $r25, $r26, $r91;
        ucar.nc2.NetcdfFile $r13, $r93;
        ucar.nc2.iosp.hdf5.H5header$MessageDataspace $r17, $r97;
        java.util.Iterator $r8, $r23;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        r12 := @parameter0: ucar.nc2.Group;

        r2 := @parameter1: ucar.nc2.iosp.hdf5.H5header$DataObjectFacade;

        $r163 = new ucar.nc2.iosp.hdf5.H5header$Vinfo;

        specialinvoke $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$DataObjectFacade)>(r1, r2);

        $r3 = virtualinvoke $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.ma2.DataType getNCDataType()>();

        if $r3 != null goto label01;

        $r134 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r164 = new java.lang.StringBuilder;

        specialinvoke $r164.<java.lang.StringBuilder: void <init>()>();

        $r135 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SKIPPING DataType= ");

        $r136 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i12 = $r136.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        $r137 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for variable ");

        $r139 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r140 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r139);

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r134.<java.io.PrintStream: void println(java.lang.String)>($r141);

        return null;

     label01:
        $r4 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r5 = $r4.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageFilter mfp>;

        if $r5 == null goto label04;

        $r121 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r122 = $r121.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageFilter mfp>;

        r145 = $r122.<ucar.nc2.iosp.hdf5.H5header$MessageFilter: ucar.nc2.iosp.hdf5.H5header$Filter[] filters>;

        i13 = lengthof r145;

        i14 = 0;

     label02:
        if i14 >= i13 goto label04;

        r146 = r145[i14];

        $s11 = r146.<ucar.nc2.iosp.hdf5.H5header$Filter: short id>;

        $i18 = (int) $s11;

        if $i18 != 4 goto label03;

        $r124 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r165 = new java.lang.StringBuilder;

        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();

        $r125 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SKIPPING variable with SZIP Filter= ");

        $r126 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r127 = $r126.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageFilter mfp>;

        $r128 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r127);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for variable ");

        $r130 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r131 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r130);

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r124.<java.io.PrintStream: void println(java.lang.String)>($r132);

        return null;

     label03:
        i14 = i14 + 1;

        goto label02;

     label04:
        r147 = null;

        $r6 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r7 = $r6.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.util.List messages>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z7 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label10;

        $r107 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r148 = (ucar.nc2.iosp.hdf5.H5header$HeaderMessage) $r107;

        $r109 = r148.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$MessageType mtype>;

        $r108 = <ucar.nc2.iosp.hdf5.H5header$MessageType: ucar.nc2.iosp.hdf5.H5header$MessageType FillValue>;

        if $r109 != $r108 goto label07;

        $r119 = r148.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$Named messData>;

        r149 = (ucar.nc2.iosp.hdf5.H5header$MessageFillValue) $r119;

        $z6 = r149.<ucar.nc2.iosp.hdf5.H5header$MessageFillValue: boolean hasFillValue>;

        if $z6 == 0 goto label06;

        $r120 = r149.<ucar.nc2.iosp.hdf5.H5header$MessageFillValue: byte[] value>;

        $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: byte[] fillValue> = $r120;

     label06:
        goto label08;

     label07:
        $r111 = r148.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$MessageType mtype>;

        $r110 = <ucar.nc2.iosp.hdf5.H5header$MessageType: ucar.nc2.iosp.hdf5.H5header$MessageType FillValueOld>;

        if $r111 != $r110 goto label08;

        $r117 = r148.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$Named messData>;

        r150 = (ucar.nc2.iosp.hdf5.H5header$MessageFillValueOld) $r117;

        $i10 = r150.<ucar.nc2.iosp.hdf5.H5header$MessageFillValueOld: int size>;

        if $i10 <= 0 goto label08;

        $r118 = r150.<ucar.nc2.iosp.hdf5.H5header$MessageFillValueOld: byte[] value>;

        $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: byte[] fillValue> = $r118;

     label08:
        $r151 = virtualinvoke $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: java.lang.Object getFillValueNonDefault()>();

        if $r151 == null goto label09;

        $r112 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r113 = $r112.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r114 = virtualinvoke $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: java.lang.Object getFillValueDefault(ucar.ma2.DataType)>($r113);

        $z5 = virtualinvoke $r151.<java.lang.Object: boolean equals(java.lang.Object)>($r114);

        if $z5 != 0 goto label09;

        $r166 = new ucar.nc2.Attribute;

        $r116 = (java.lang.Number) $r151;

        specialinvoke $r166.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("_FillValue", $r116);

        r147 = $r166;

     label09:
        goto label05;

     label10:
        $r9 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r10 = $r9.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageLayout msl>;

        l15 = $r10.<ucar.nc2.iosp.hdf5.H5header$MessageLayout: long dataAddress>;

        $b0 = l15 cmp -1L;

        if $b0 != 0 goto label11;

        $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean useFillValue> = 1;

        $r103 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: byte[] fillValue>;

        if $r103 != null goto label11;

        $r104 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r105 = $r104.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $i9 = virtualinvoke $r105.<ucar.ma2.DataType: int getSize()>();

        $r106 = newarray (byte)[$i9];

        $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: byte[] fillValue> = $r106;

     label11:
        r152 = null;

        $r153 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r154 = $r153.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i16 = $r154.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i16 != 6 goto label13;

        r155 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r167 = new ucar.nc2.Structure;

        $r93 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r167.<ucar.nc2.Structure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r93, r12, null, r155);

        r152 = $r167;

        r156 = $r167;

        $r94 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r98 = $r94.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r95 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r97 = $r95.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        $r96 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String dimList>;

        $z4 = specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: boolean makeVariableShapeAndType(ucar.nc2.Variable,ucar.nc2.iosp.hdf5.H5header$MessageDatatype,ucar.nc2.iosp.hdf5.H5header$MessageDataspace,ucar.nc2.iosp.hdf5.H5header$Vinfo,java.lang.String)>($r167, $r98, $r97, $r163, $r96);

        if $z4 != 0 goto label12;

        return null;

     label12:
        $r99 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r100 = $r99.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: void addMembersToStructure(ucar.nc2.Group,ucar.nc2.Structure,ucar.nc2.iosp.hdf5.H5header$Vinfo,ucar.nc2.iosp.hdf5.H5header$MessageDatatype)>(r12, $r167, $r163, $r100);

        $r101 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r102 = $r101.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i8 = $r102.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        virtualinvoke $r167.<ucar.nc2.Variable: void setElementSize(int)>($i8);

        goto label14;

     label13:
        r157 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r168 = new ucar.nc2.Variable;

        $r13 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r168.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r13, r12, null, r157);

        r156 = $r168;

        $r14 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r18 = $r14.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r15 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r17 = $r15.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        $r16 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String dimList>;

        $z0 = specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: boolean makeVariableShapeAndType(ucar.nc2.Variable,ucar.nc2.iosp.hdf5.H5header$MessageDatatype,ucar.nc2.iosp.hdf5.H5header$MessageDataspace,ucar.nc2.iosp.hdf5.H5header$Vinfo,java.lang.String)>($r168, $r18, $r17, $r163, $r16);

        if $z0 != 0 goto label14;

        return null;

     label14:
        $r19 = virtualinvoke r156.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r20 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r19 != $r20 goto label15;

        virtualinvoke r156.<ucar.nc2.Variable: void setElementSize(int)>(16);

     label15:
        virtualinvoke r156.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r163);

        $r21 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r22 = $r21.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.util.List attributes>;

        $r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z8 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label21;

        $r90 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r158 = (ucar.nc2.iosp.hdf5.H5header$MessageAttribute) $r90;

     label17:
        $r91 = virtualinvoke r156.<ucar.nc2.Variable: java.util.List getAttributes()>();

        specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: void makeAttributes(ucar.nc2.Structure,ucar.nc2.iosp.hdf5.H5header$MessageAttribute,java.util.List)>(r152, r158, $r91);

     label18:
        goto label20;

     label19:
        $r142 := @caughtexception;

        $r169 = new java.io.IOException;

        $r144 = virtualinvoke $r142.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r169.<java.io.IOException: void <init>(java.lang.String)>($r144);

        throw $r169;

     label20:
        goto label16;

     label21:
        $r24 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r25 = $r24.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.util.List messages>;

        $r26 = virtualinvoke r156.<ucar.nc2.Variable: java.util.List getAttributes()>();

        specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: void processSystemAttributes(java.util.List,java.util.List)>($r25, $r26);

        if r147 == null goto label22;

        $r89 = virtualinvoke r156.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("_FillValue");

        if $r89 != null goto label22;

        virtualinvoke r156.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>(r147);

     label22:
        $r159 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $z9 = $r159.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: boolean unsigned>;

        if $z9 == 0 goto label23;

        $r170 = new ucar.nc2.Attribute;

        specialinvoke $r170.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_Unsigned", "true");

        virtualinvoke r156.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r170);

     label23:
        $r27 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r28 = $r27.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i1 = $r28.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i1 != 5 goto label24;

        $r85 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r86 = $r85.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        r160 = $r86.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.lang.String opaque_desc>;

        if r160 == null goto label24;

        $i7 = virtualinvoke r160.<java.lang.String: int length()>();

        if $i7 <= 0 goto label24;

        $r171 = new ucar.nc2.Attribute;

        specialinvoke $r171.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_opaqueDesc", r160);

        virtualinvoke r156.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r171);

     label24:
        $z10 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean isChunked>;

        if $z10 == 0 goto label25;

        $r172 = new ucar.nc2.iosp.hdf5.H5header$DataBTree;

        $r83 = virtualinvoke r156.<ucar.nc2.Variable: int[] getShape()>();

        $r84 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        specialinvoke $r172.<ucar.nc2.iosp.hdf5.H5header$DataBTree: void <init>(ucar.nc2.iosp.hdf5.H5header,long,int[],int[])>(r1, l15, $r83, $r84);

        $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataBTree btree> = $r172;

     label25:
        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean transformReference>;

        if $z1 == 0 goto label26;

        $r74 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r75 = $r74.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i5 = $r75.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i5 != 7 goto label26;

        $r76 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r77 = $r76.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i6 = $r77.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int referenceType>;

        if $i6 != 0 goto label26;

        $r78 = virtualinvoke r156.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r79 = specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: ucar.ma2.Array findReferenceObjectNames(ucar.ma2.Array)>($r78);

        $r80 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        virtualinvoke r156.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r80);

        virtualinvoke r156.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r79, 1);

        $r173 = new ucar.nc2.Attribute;

        specialinvoke $r173.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_HDF5ReferenceType", "values are names of referenced Variables");

        virtualinvoke r156.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r173);

     label26:
        $z11 = <ucar.nc2.iosp.hdf5.H5header: boolean transformReference>;

        if $z11 == 0 goto label27;

        $r56 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r57 = $r56.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i3 = $r57.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i3 != 7 goto label27;

        $r58 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r59 = $r58.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $i4 = $r59.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int referenceType>;

        if $i4 != 1 goto label27;

        $r61 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        $r174 = new java.lang.StringBuilder;

        specialinvoke $r174.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transform region Reference: facade=");

        $r63 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" variable name=");

        $r66 = virtualinvoke r156.<ucar.nc2.Variable: java.lang.String getName()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r61.<org.slf4j.Logger: void warn(java.lang.String)>($r68);

        virtualinvoke r156.<ucar.nc2.Variable: long getSize()>();

        $r69 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        virtualinvoke r156.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r69);

        $r70 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        $r71 = virtualinvoke r156.<ucar.nc2.Variable: int[] getShape()>();

        $r72 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r70, $r71);

        virtualinvoke r156.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r72, 1);

        $r175 = new ucar.nc2.Attribute;

        specialinvoke $r175.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_HDF5ReferenceType", "values are regions of referenced Variables");

        virtualinvoke r156.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r175);

     label27:
        virtualinvoke $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: void setOwner(ucar.nc2.Variable)>(r156);

        $r161 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i17 = $r161.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        if $i17 != 7 goto label28;

        $z3 = <ucar.nc2.iosp.hdf5.H5header: boolean warnings>;

        if $z3 == 0 goto label28;

        $r50 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r176 = new java.lang.StringBuilder;

        specialinvoke $r176.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARN:  Variable ");

        $r52 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is a Reference type");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>($r55);

     label28:
        $r162 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageFilter mfp>;

        if $r162 == null goto label29;

        $r37 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageFilter mfp>;

        $r38 = $r37.<ucar.nc2.iosp.hdf5.H5header$MessageFilter: ucar.nc2.iosp.hdf5.H5header$Filter[] filters>;

        $r39 = $r38[0];

        $s2 = $r39.<ucar.nc2.iosp.hdf5.H5header$Filter: short id>;

        if $s2 == 1 goto label29;

        $z2 = <ucar.nc2.iosp.hdf5.H5header: boolean warnings>;

        if $z2 == 0 goto label29;

        $r41 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r177 = new java.lang.StringBuilder;

        specialinvoke $r177.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARN:  Variable ");

        $r43 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: java.lang.String name>;

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has a Filter = ");

        $r46 = $r163.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageFilter mfp>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r48);

     label29:
        $z12 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        if $z12 == 0 goto label30;

        $r30 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r178 = new java.lang.StringBuilder;

        specialinvoke $r178.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeVariable ");

        $r32 = virtualinvoke r156.<ucar.nc2.Variable: java.lang.String getName()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; vinfo= ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r163);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r36);

     label30:
        return r156;

        catch ucar.ma2.InvalidRangeException from label17 to label18 with label19;
    }

    private ucar.ma2.Array findReferenceObjectNames(ucar.ma2.Array) throws java.io.IOException
    {
        long $l0;
        int[] $r3;
        java.lang.String $r8, $r12, $r14, $r19;
        boolean $z0, $z1;
        java.io.PrintStream $r10;
        org.slf4j.Logger $r16;
        ucar.ma2.IndexIterator $r1, $r5;
        ucar.ma2.DataType $r2;
        ucar.nc2.iosp.hdf5.H5header$DataObject $r7;
        ucar.ma2.Array r0, $r4;
        ucar.nc2.iosp.hdf5.H5header r6;
        java.lang.StringBuilder $r9, $r11, $r13, $r15, $r17, $r18;

        r6 := @this: ucar.nc2.iosp.hdf5.H5header;

        r0 := @parameter0: ucar.ma2.Array;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        $r3 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        $r4 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r2, $r3);

        $r5 = virtualinvoke $r4.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $l0 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: long getLongNext()>();

        $r7 = specialinvoke r6.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$DataObject getDataObject(long,java.lang.String)>($l0, null);

        if $r7 != null goto label2;

        $r16 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readReferenceObjectNames cant find obj= ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String)>($r19);

        goto label4;

     label2:
        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean debugReference>;

        if $z1 == 0 goto label3;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Referenced object= ");

        $r12 = $r7.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.lang.String who>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label3:
        $r8 = $r7.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.lang.String who>;

        interfaceinvoke $r5.<ucar.ma2.IndexIterator: void setObjectNext(java.lang.Object)>($r8);

     label4:
        goto label1;

     label5:
        return $r4;
    }

    private void addMembersToStructure(ucar.nc2.Group, ucar.nc2.Structure, ucar.nc2.iosp.hdf5.H5header$Vinfo, ucar.nc2.iosp.hdf5.H5header$MessageDatatype) throws java.io.IOException
    {
        long $l1;
        ucar.nc2.Structure r7;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype r0, $r8;
        int $i0;
        ucar.nc2.Variable $r10;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r19;
        java.lang.String $r9, $r14, $r18;
        boolean $z0, $z1;
        java.io.PrintStream $r12;
        java.util.Iterator $r2;
        ucar.nc2.Group r6;
        java.util.List $r1;
        ucar.nc2.iosp.hdf5.H5header r5;
        java.lang.Object $r3;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r17;
        ucar.nc2.iosp.hdf5.H5header$StructureMember r4;

        r5 := @this: ucar.nc2.iosp.hdf5.H5header;

        r6 := @parameter0: ucar.nc2.Group;

        r7 := @parameter1: ucar.nc2.Structure;

        r19 := @parameter2: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        r0 := @parameter3: ucar.nc2.iosp.hdf5.H5header$MessageDatatype;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.util.List members>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.iosp.hdf5.H5header$StructureMember) $r3;

        $r9 = r4.<ucar.nc2.iosp.hdf5.H5header$StructureMember: java.lang.String name>;

        $i0 = r4.<ucar.nc2.iosp.hdf5.H5header$StructureMember: int offset>;

        $l1 = (long) $i0;

        $r8 = r4.<ucar.nc2.iosp.hdf5.H5header$StructureMember: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r10 = specialinvoke r5.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.Variable makeVariableMember(ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,long,ucar.nc2.iosp.hdf5.H5header$MessageDatatype)>(r6, r7, $r9, $l1, $r8);

        if $r10 == null goto label2;

        virtualinvoke r7.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r10);

        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        if $z1 == 0 goto label2;

        $r12 = r5.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  made Member Variable ");

        $r14 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label2:
        goto label1;

     label3:
        return;
    }

    private ucar.nc2.Variable makeVariableMember(ucar.nc2.Group, ucar.nc2.Structure, java.lang.String, long, ucar.nc2.iosp.hdf5.H5header$MessageDatatype) throws java.io.IOException
    {
        long l0;
        ucar.nc2.Structure r6, $r13, $r15;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype r2;
        int $i1, $i2, $i3;
        ucar.nc2.iosp.hdf5.H5header$Vinfo $r0;
        ucar.nc2.Variable $r4, r24;
        java.lang.String r7, $r23;
        boolean $z0;
        java.io.PrintStream $r17;
        ucar.ma2.DataType $r3, $r9, $r10;
        ucar.nc2.Group r5;
        ucar.nc2.Attribute $r12;
        ucar.nc2.iosp.hdf5.H5header r1;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r11, $r19;
        java.lang.StringBuilder $r16, $r18, $r20, $r21, $r22;
        ucar.nc2.NetcdfFile $r8, $r14;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        r5 := @parameter0: ucar.nc2.Group;

        r6 := @parameter1: ucar.nc2.Structure;

        r7 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        r2 := @parameter4: ucar.nc2.iosp.hdf5.H5header$MessageDatatype;

        $r0 = new ucar.nc2.iosp.hdf5.H5header$Vinfo;

        specialinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$MessageDatatype,ucar.nc2.iosp.hdf5.H5header$MessageDataspace,long)>(r1, r2, null, l0);

        $r3 = virtualinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.ma2.DataType getNCDataType()>();

        if $r3 != null goto label1;

        $r17 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SKIPPING DataType= ");

        $r19 = $r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i3 = $r19.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int hdfType>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for variable ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r23);

        return null;

     label1:
        $i1 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i1 != 6 goto label2;

        $r13 = new ucar.nc2.Structure;

        $r14 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r13.<ucar.nc2.Structure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r14, r5, r6, r7);

        r24 = $r13;

        specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: boolean makeVariableShapeAndType(ucar.nc2.Variable,ucar.nc2.iosp.hdf5.H5header$MessageDatatype,ucar.nc2.iosp.hdf5.H5header$MessageDataspace,ucar.nc2.iosp.hdf5.H5header$Vinfo,java.lang.String)>($r13, r2, null, $r0, null);

        $r15 = (ucar.nc2.Structure) $r13;

        specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: void addMembersToStructure(ucar.nc2.Group,ucar.nc2.Structure,ucar.nc2.iosp.hdf5.H5header$Vinfo,ucar.nc2.iosp.hdf5.H5header$MessageDatatype)>(r5, $r15, $r0, r2);

        $i2 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        virtualinvoke $r13.<ucar.nc2.Variable: void setElementSize(int)>($i2);

        goto label3;

     label2:
        $r4 = new ucar.nc2.Variable;

        $r8 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r4.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r8, r5, r6, r7);

        r24 = $r4;

        specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: boolean makeVariableShapeAndType(ucar.nc2.Variable,ucar.nc2.iosp.hdf5.H5header$MessageDatatype,ucar.nc2.iosp.hdf5.H5header$MessageDataspace,ucar.nc2.iosp.hdf5.H5header$Vinfo,java.lang.String)>($r4, r2, null, $r0, null);

     label3:
        $r9 = virtualinvoke r24.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r9 != $r10 goto label4;

        virtualinvoke r24.<ucar.nc2.Variable: void setElementSize(int)>(16);

     label4:
        virtualinvoke r24.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r0);

        virtualinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: void setOwner(ucar.nc2.Variable)>(r24);

        $r11 = $r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $z0 = $r11.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: boolean unsigned>;

        if $z0 == 0 goto label5;

        $r12 = new ucar.nc2.Attribute;

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_Unsigned", "true");

        virtualinvoke r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

     label5:
        return r24;
    }

    private void processSystemAttributes(java.util.List, java.util.List)
    {
        java.util.Date $r18, $r23;
        ucar.nc2.iosp.hdf5.H5header$MessageComment r36;
        ucar.nc2.iosp.hdf5.H5header$MessageType $r4, $r5, $r6, $r7, $r8, $r9;
        java.text.ParseException $r27;
        boolean $z0;
        ucar.nc2.iosp.hdf5.H5header$HeaderMessage r3;
        java.util.List r0, r11;
        ucar.nc2.Attribute $r12, $r19, $r24;
        ucar.nc2.iosp.hdf5.H5header r15;
        java.lang.StringBuilder $r28, $r30, $r32;
        ucar.nc2.units.DateFormatter $r20, $r25;
        java.text.SimpleDateFormat $r16;
        long $l1, $l2;
        int $i0;
        java.lang.String $r13, $r17, $r21, $r26, $r31, $r33;
        ucar.nc2.iosp.hdf5.H5header$MessageLastModified r34;
        java.io.PrintStream $r29;
        java.util.Iterator $r1;
        ucar.nc2.iosp.hdf5.H5header$MessageLastModifiedOld r35;
        ucar.nc2.iosp.hdf5.H5header$Named $r10, $r14, $r22;
        java.lang.Object $r2;

        r15 := @this: ucar.nc2.iosp.hdf5.H5header;

        r0 := @parameter0: java.util.List;

        r11 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (ucar.nc2.iosp.hdf5.H5header$HeaderMessage) $r2;

        $r5 = r3.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$MessageType mtype>;

        $r4 = <ucar.nc2.iosp.hdf5.H5header$MessageType: ucar.nc2.iosp.hdf5.H5header$MessageType LastModified>;

        if $r5 != $r4 goto label2;

        $r22 = r3.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$Named messData>;

        r34 = (ucar.nc2.iosp.hdf5.H5header$MessageLastModified) $r22;

        $r23 = new java.util.Date;

        $i0 = r34.<ucar.nc2.iosp.hdf5.H5header$MessageLastModified: int secs>;

        $l1 = (long) $i0;

        $l2 = $l1 * 1000L;

        specialinvoke $r23.<java.util.Date: void <init>(long)>($l2);

        $r24 = new ucar.nc2.Attribute;

        $r25 = r15.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.units.DateFormatter formatter>;

        $r26 = virtualinvoke $r25.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r23);

        specialinvoke $r24.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_lastModified", $r26);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r24);

        goto label8;

     label2:
        $r7 = r3.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$MessageType mtype>;

        $r6 = <ucar.nc2.iosp.hdf5.H5header$MessageType: ucar.nc2.iosp.hdf5.H5header$MessageType LastModifiedOld>;

        if $r7 != $r6 goto label7;

        $r14 = r3.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$Named messData>;

        r35 = (ucar.nc2.iosp.hdf5.H5header$MessageLastModifiedOld) $r14;

     label3:
        $r16 = specialinvoke r15.<ucar.nc2.iosp.hdf5.H5header: java.text.SimpleDateFormat getHdfDateFormatter()>();

        $r17 = r35.<ucar.nc2.iosp.hdf5.H5header$MessageLastModifiedOld: java.lang.String datemod>;

        $r18 = virtualinvoke $r16.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r17);

        $r19 = new ucar.nc2.Attribute;

        $r20 = r15.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.units.DateFormatter formatter>;

        $r21 = virtualinvoke $r20.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r18);

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_lastModified", $r21);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r19);

     label4:
        goto label6;

     label5:
        $r27 := @caughtexception;

        $r29 = r15.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR parsing date from MessageLastModifiedOld = ");

        $r31 = r35.<ucar.nc2.iosp.hdf5.H5header$MessageLastModifiedOld: java.lang.String datemod>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33);

     label6:
        goto label8;

     label7:
        $r9 = r3.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$MessageType mtype>;

        $r8 = <ucar.nc2.iosp.hdf5.H5header$MessageType: ucar.nc2.iosp.hdf5.H5header$MessageType Comment>;

        if $r9 != $r8 goto label8;

        $r10 = r3.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$Named messData>;

        r36 = (ucar.nc2.iosp.hdf5.H5header$MessageComment) $r10;

        $r12 = new ucar.nc2.Attribute;

        $r13 = r36.<ucar.nc2.iosp.hdf5.H5header$MessageComment: java.lang.String comment>;

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_comment", $r13);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r12);

     label8:
        goto label1;

     label9:
        return;

        catch java.text.ParseException from label3 to label4 with label5;
    }

    private java.text.SimpleDateFormat getHdfDateFormatter()
    {
        java.util.TimeZone $r5;
        ucar.nc2.iosp.hdf5.H5header r0;
        java.text.SimpleDateFormat $r1, $r2, $r3, $r4;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: java.text.SimpleDateFormat hdfDateParser>;

        if $r1 != null goto label1;

        $r3 = new java.text.SimpleDateFormat;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss");

        r0.<ucar.nc2.iosp.hdf5.H5header: java.text.SimpleDateFormat hdfDateParser> = $r3;

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header: java.text.SimpleDateFormat hdfDateParser>;

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r4.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);

     label1:
        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header: java.text.SimpleDateFormat hdfDateParser>;

        return $r2;
    }

    private boolean makeVariableShapeAndType(ucar.nc2.Variable, ucar.nc2.iosp.hdf5.H5header$MessageDatatype, ucar.nc2.iosp.hdf5.H5header$MessageDataspace, ucar.nc2.iosp.hdf5.H5header$Vinfo, java.lang.String)
    {
        java.util.Map $r10;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r4;
        ucar.nc2.Group $r6;
        ucar.nc2.iosp.hdf5.H5header r24;
        java.lang.StringBuilder $r15, $r16, $r27, $r29, $r36, $r37;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype r1;
        java.lang.String r2, $r7, $r11, $r17, $r23, $r28, $r30;
        ucar.nc2.EnumTypedef $r8, r35, $r38;
        ucar.ma2.InvalidRangeException $r21;
        int[] $r12, $r13, $r18, $r19, $r20, $r31, r32, r33, r34;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r5;
        ucar.nc2.iosp.hdf5.H5header$MessageDataspace r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, $i28, $i30;
        ucar.nc2.Variable r3;
        java.io.PrintStream $r26;
        org.slf4j.Logger $r22;

        r24 := @this: ucar.nc2.iosp.hdf5.H5header;

        r3 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: ucar.nc2.iosp.hdf5.H5header$MessageDatatype;

        r0 := @parameter2: ucar.nc2.iosp.hdf5.H5header$MessageDataspace;

        r4 := @parameter3: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        r2 := @parameter4: java.lang.String;

        if r0 == null goto label01;

        $r31 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDataspace: int[] dimLength>;

        goto label02;

     label01:
        $r31 = newarray (int)[0];

     label02:
        r32 = $r31;

        if $r31 != null goto label03;

        r32 = newarray (int)[0];

     label03:
        $i0 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i0 != 10 goto label08;

        $i17 = lengthof r32;

        $r18 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int[] dim>;

        $i16 = lengthof $r18;

        i24 = $i17 + $i16;

        r33 = newarray (int)[i24];

        i25 = 0;

     label04:
        $i18 = lengthof r32;

        if i25 >= $i18 goto label05;

        $i23 = r32[i25];

        r33[i25] = $i23;

        i25 = i25 + 1;

        goto label04;

     label05:
        i26 = 0;

     label06:
        $r19 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int[] dim>;

        $i19 = lengthof $r19;

        if i26 >= $i19 goto label07;

        $i20 = lengthof r32;

        $i22 = $i20 + i26;

        $r20 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int[] dim>;

        $i21 = $r20[i26];

        r33[$i22] = $i21;

        i26 = i26 + 1;

        goto label06;

     label07:
        r32 = r33;

     label08:
        if r2 == null goto label10;

        $i15 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i15 != 9 goto label09;

        $z2 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: boolean isVString>;

        if $z2 != 0 goto label09;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r17);

        goto label15;

     label09:
        virtualinvoke r3.<ucar.nc2.Variable: void setDimensions(java.lang.String)>(r2);

        goto label15;

     label10:
        $i1 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i1 != 3 goto label12;

        $i9 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        if $i9 != 1 goto label11;

        virtualinvoke r3.<ucar.nc2.Variable: void setDimensionsAnonymous(int[])>(r32);

        goto label15;

     label11:
        $i10 = lengthof r32;

        $i11 = $i10 + 1;

        r34 = newarray (int)[$i11];

        $i12 = lengthof r32;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r32, 0, r34, 0, $i12);

        $i14 = lengthof r32;

        $i13 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        r34[$i14] = $i13;

        virtualinvoke r3.<ucar.nc2.Variable: void setDimensionsAnonymous(int[])>(r34);

        goto label15;

     label12:
        $i2 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i2 != 9 goto label14;

        $z1 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: boolean isVString>;

        if $z1 != 0 goto label14;

        $i3 = lengthof r32;

        if $i3 != 1 goto label13;

        $i8 = r32[0];

        if $i8 != 1 goto label13;

        $r13 = newarray (int)[1];

        $i28 = (int) -1;

        $r13[0] = $i28;

        virtualinvoke r3.<ucar.nc2.Variable: void setDimensionsAnonymous(int[])>($r13);

        goto label15;

     label13:
        $i4 = lengthof r32;

        $i5 = $i4 + 1;

        $r12 = newarray (int)[$i5];

        $i6 = lengthof r32;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r32, 0, $r12, 0, $i6);

        $i7 = lengthof r32;

        $i30 = (int) -1;

        $r12[$i7] = $i30;

        virtualinvoke r3.<ucar.nc2.Variable: void setDimensionsAnonymous(int[])>($r12);

        goto label15;

     label14:
        virtualinvoke r3.<ucar.nc2.Variable: void setDimensionsAnonymous(int[])>(r32);

     label15:
        goto label17;

     label16:
        $r21 := @caughtexception;

        $r22 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        $r23 = virtualinvoke $r21.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String)>($r23);

        $r26 = r24.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: makeVariableShapeAndType ");

        $r28 = virtualinvoke $r21.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r30);

        return 0;

     label17:
        $r5 = virtualinvoke r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.ma2.DataType getNCDataType()>();

        if $r5 != null goto label18;

        return 0;

     label18:
        virtualinvoke r3.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r5);

        $z0 = virtualinvoke $r5.<ucar.ma2.DataType: boolean isEnum()>();

        if $z0 == 0 goto label20;

        $r6 = virtualinvoke r3.<ucar.nc2.Variable: ucar.nc2.Group getParentGroup()>();

        $r7 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.lang.String enumTypeName>;

        $r8 = virtualinvoke $r6.<ucar.nc2.Group: ucar.nc2.EnumTypedef findEnumeration(java.lang.String)>($r7);

        r35 = $r8;

        if $r8 != null goto label19;

        $r38 = new ucar.nc2.EnumTypedef;

        $r11 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.lang.String enumTypeName>;

        $r10 = r1.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: java.util.Map map>;

        specialinvoke $r38.<ucar.nc2.EnumTypedef: void <init>(java.lang.String,java.util.Map)>($r11, $r10);

        r35 = $r38;

     label19:
        virtualinvoke r3.<ucar.nc2.Variable: void setEnumTypedef(ucar.nc2.EnumTypedef)>(r35);

     label20:
        return 1;

        catch ucar.ma2.InvalidRangeException from label08 to label15 with label16;
    }

    private ucar.ma2.DataType getNCtype(int, int)
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        java.lang.StringBuilder $r1, $r3, $r6, $r7, $r8, $r9, $r10, $r12, $r14, $r17, $r18, $r19, $r20, $r21, $r27, $r29, $r30, $r31, $r32, $r34, $r36, $r39, $r40, $r41, $r42, $r43, $r47, $r49, $r52, $r53, $r54, $r56, $r58, $r61, $r62, $r63;
        java.lang.String $r5, $r11, $r16, $r22, $r33, $r38, $r44, $r51, $r55, $r60, $r64;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r23, $r24, $r25, $r26, $r45, $r46, $r65, $r66;
        ucar.nc2.NetcdfFile $r4, $r15, $r37, $r50, $r59;
        int i0, i1;
        java.io.PrintStream $r2, $r28, $r48;
        org.slf4j.Logger $r13, $r35, $r57;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 0 goto label01;

        if i0 != 4 goto label06;

     label01:
        if i1 != 1 goto label02;

        $r26 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        return $r26;

     label02:
        if i1 != 2 goto label03;

        $r25 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        return $r25;

     label03:
        if i1 != 4 goto label04;

        $r24 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        return $r24;

     label04:
        if i1 != 8 goto label05;

        $r23 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        return $r23;

     label05:
        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean warnings>;

        if $z0 == 0 goto label12;

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING HDF5 file ");

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        $r5 = virtualinvoke $r4.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handling hdf integer type (");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with size= ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r13 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HDF5 file ");

        $r15 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        $r16 = virtualinvoke $r15.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handling hdf integer type (");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with size= ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String)>($r22);

        return null;

     label06:
        if i0 != 1 goto label09;

        if i1 != 4 goto label07;

        $r66 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        return $r66;

     label07:
        if i1 != 8 goto label08;

        $r65 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        return $r65;

     label08:
        $z2 = <ucar.nc2.iosp.hdf5.H5header: boolean warnings>;

        if $z2 == 0 goto label12;

        $r48 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING HDF5 file ");

        $r50 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        $r51 = virtualinvoke $r50.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handling hdf float type with size= ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r55);

        $r57 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HDF5 file ");

        $r59 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        $r60 = virtualinvoke $r59.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handling hdf float type with size= ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r57.<org.slf4j.Logger: void warn(java.lang.String)>($r64);

        return null;

     label09:
        if i0 != 3 goto label10;

        $r46 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        return $r46;

     label10:
        if i0 != 7 goto label11;

        $r45 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        return $r45;

     label11:
        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean warnings>;

        if $z1 == 0 goto label12;

        $r28 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING not handling hdf type = ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size= ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r35 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HDF5 file ");

        $r37 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        $r38 = virtualinvoke $r37.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handling hdf type = ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size= ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r35.<org.slf4j.Logger: void warn(java.lang.String)>($r44);

     label12:
        return null;
    }

    private ucar.nc2.iosp.hdf5.H5header$DataObject getDataObject(long, java.lang.String) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$DataObject $r4, r9;
        long l0;
        java.lang.Long $r2, $r7;
        ucar.nc2.iosp.hdf5.H5header r0;
        java.util.Map $r1, $r6;
        java.lang.Object $r3;
        java.lang.String r5, $r8;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        l0 := @parameter0: long;

        r5 := @parameter1: java.lang.String;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: java.util.Map addressMap>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r9 = (ucar.nc2.iosp.hdf5.H5header$DataObject) $r3;

        if r9 == null goto label2;

        $r8 = r9.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.lang.String who>;

        if $r8 != null goto label1;

        if r5 == null goto label1;

        r9.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.lang.String who> = r5;

     label1:
        return r9;

     label2:
        $r4 = new ucar.nc2.iosp.hdf5.H5header$DataObject;

        specialinvoke $r4.<ucar.nc2.iosp.hdf5.H5header$DataObject: void <init>(ucar.nc2.iosp.hdf5.H5header,long,java.lang.String,ucar.nc2.iosp.hdf5.H5header$1)>(r0, l0, r5, null);

        $r6 = r0.<ucar.nc2.iosp.hdf5.H5header: java.util.Map addressMap>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r4);

        return $r4;
    }

    private ucar.nc2.iosp.hdf5.H5header$DataObject getSharedDataObject(ucar.nc2.iosp.hdf5.H5header$MessageType) throws java.io.IOException
    {
        java.lang.IllegalStateException $r55;
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r25, $r36, $r48;
        byte $b0, $b1;
        ucar.nc2.iosp.hdf5.H5header$MessageType r4, $r5;
        boolean $z0, $z1, $z2;
        ucar.nc2.iosp.hdf5.H5header$DataObject $r3;
        ucar.nc2.iosp.hdf5.H5header r0;
        java.lang.StringBuilder $r8, $r9, $r13, $r14, $r18, $r19, $r20, $r21, $r22, $r23, $r28, $r29, $r30, $r31, $r35, $r37, $r41, $r42, $r43, $r44, $r45, $r46, $r49, $r50, $r51, $r53, $r54, $r56;
        long $l2, $l3, $l4;
        int $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r10, $r15, $r24, $r32, $r38, $r47;
        java.io.PrintStream $r17, $r34, $r40;
        java.lang.UnsupportedOperationException $r52, $r57;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        r4 := @parameter0: ucar.nc2.iosp.hdf5.H5header$MessageType;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b0 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b1 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        if $b0 != 1 goto label1;

        $r48 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r48.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(6);

     label1:
        $i5 = (int) $b0;

        if $i5 != 3 goto label4;

        if $b1 != 1 goto label4;

        $r25 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l3 = virtualinvoke $r25.<ucar.unidata.io.RandomAccessFile: long readLong()>();

        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        if $z1 == 0 goto label2;

        $r40 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     Shared Message ");

        $i6 = (int) $b0;

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=");

        $i7 = (int) $b1;

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heapId = ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r47);

     label2:
        $z2 = <ucar.nc2.iosp.hdf5.H5header: boolean debugPos>;

        if $z2 == 0 goto label3;

        $r34 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  --> Shared Message reposition to =");

        $r36 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l4 = virtualinvoke $r36.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label3:
        $r52 = new java.lang.UnsupportedOperationException;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("****SHARED MESSAGE type = ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heapId = ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r32);

        throw $r52;

     label4:
        $l2 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readOffset()>();

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        if $z0 == 0 goto label5;

        $r17 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     Shared Message ");

        $i8 = (int) $b0;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=");

        $i9 = (int) $b1;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" address = ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label5:
        $r3 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$DataObject getDataObject(long,java.lang.String)>($l2, null);

        if null != $r3 goto label6;

        $r55 = new java.lang.IllegalStateException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant find data object at");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r55;

     label6:
        $r5 = <ucar.nc2.iosp.hdf5.H5header$MessageType: ucar.nc2.iosp.hdf5.H5header$MessageType Datatype>;

        if r4 != $r5 goto label7;

        return $r3;

     label7:
        $r57 = new java.lang.UnsupportedOperationException;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("****SHARED MESSAGE type = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r57.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10);

        throw $r57;
    }

    private void readGroupNew(ucar.nc2.iosp.hdf5.H5header$H5Group, ucar.nc2.iosp.hdf5.H5header$MessageGroupNew, ucar.nc2.iosp.hdf5.H5header$DataObject) throws java.io.IOException
    {
        byte[] r52;
        byte $b1, $b2, $b6, $b7, $b8, $b10;
        ucar.nc2.iosp.hdf5.H5header r4;
        java.lang.StringBuilder $r7, $r10, $r11, $r39, $r40, $r47, $r49, $r50, $r54, $r59, $r62;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Record5 $r43;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Record6 $r30;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap $r55;
        long $l0, $l3, $l4, $l5, $l9, $l11, $l12;
        java.lang.String $r9, $r12, $r19, $r22, $r24, $r35, $r41, $r48, $r51;
        ucar.nc2.iosp.hdf5.H5header$MessageLink r17, $r58;
        ucar.nc2.iosp.hdf5.H5header$MessageGroupNew r0;
        ucar.nc2.iosp.hdf5.H5header$Named $r16;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2 r28;
        java.lang.IllegalStateException $r56;
        ucar.unidata.io.RandomAccessFile $r32;
        ucar.nc2.iosp.hdf5.H5header$MessageType $r14, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.iosp.hdf5.H5header$HeaderMessage r53;
        ucar.nc2.iosp.hdf5.H5header$DataObject r1;
        ucar.nc2.iosp.hdf5.H5header$H5Group r8;
        java.util.List $r2, $r20, $r25, $r36;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade $r60, $r61;
        int $i13, $i14, $i15, $i16, $i17;
        java.io.PrintStream $r6, $r38, $r46;
        java.util.Iterator $r3, $r26;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$DHeapId $r31;
        ucar.nc2.iosp.hdf5.H5header$BTree2 $r57;
        java.lang.Object $r13, $r27, $r29, $r42;

        r4 := @this: ucar.nc2.iosp.hdf5.H5header;

        r8 := @parameter0: ucar.nc2.iosp.hdf5.H5header$H5Group;

        r0 := @parameter1: ucar.nc2.iosp.hdf5.H5header$MessageGroupNew;

        r1 := @parameter2: ucar.nc2.iosp.hdf5.H5header$DataObject;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        if $z0 == 0 goto label01;

        $r46 = r4.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n--> GroupNew read <");

        $r48 = r8.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.lang.String displayName>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r51);

     label01:
        $l0 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageGroupNew: long fractalHeapAddress>;

        $b1 = $l0 cmp 0L;

        $i13 = (int) $b1;

        if $i13 < 0 goto label13;

        $r55 = new ucar.nc2.iosp.hdf5.H5header$FractalHeap;

        $r22 = r8.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.lang.String displayName>;

        $l4 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageGroupNew: long fractalHeapAddress>;

        specialinvoke $r55.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: void <init>(ucar.nc2.iosp.hdf5.H5header,java.lang.String,long)>(r4, $r22, $l4);

        $l5 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageGroupNew: long v2BtreeAddressCreationOrder>;

        $b6 = $l5 cmp 0L;

        $i14 = (int) $b6;

        if $i14 < 0 goto label02;

        $l12 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageGroupNew: long v2BtreeAddressCreationOrder>;

        goto label03;

     label02:
        $l12 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageGroupNew: long v2BtreeAddress>;

     label03:
        $b7 = $l12 cmp 0L;

        $i15 = (int) $b7;

        if $i15 >= 0 goto label04;

        $r56 = new java.lang.IllegalStateException;

        specialinvoke $r56.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no valid btree for GroupNew with Fractal Heap");

        throw $r56;

     label04:
        $r57 = new ucar.nc2.iosp.hdf5.H5header$BTree2;

        $r24 = r8.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.lang.String displayName>;

        specialinvoke $r57.<ucar.nc2.iosp.hdf5.H5header$BTree2: void <init>(ucar.nc2.iosp.hdf5.H5header,java.lang.String,long)>(r4, $r24, $l12);

        $r25 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: java.util.List access$2000(ucar.nc2.iosp.hdf5.H5header$BTree2)>($r57);

        $r26 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r28 = (ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2) $r27;

        $b8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: byte access$2100(ucar.nc2.iosp.hdf5.H5header$BTree2)>($r57);

        $i16 = (int) $b8;

        lookupswitch($i16)
        {
            case 5: goto label06;
            case 6: goto label07;
            default: goto label08;
        };

     label06:
        $r42 = r28.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: java.lang.Object record>;

        $r43 = (ucar.nc2.iosp.hdf5.H5header$BTree2$Record5) $r42;

        r52 = $r43.<ucar.nc2.iosp.hdf5.H5header$BTree2$Record5: byte[] heapId>;

        goto label09;

     label07:
        $r29 = r28.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: java.lang.Object record>;

        $r30 = (ucar.nc2.iosp.hdf5.H5header$BTree2$Record6) $r29;

        r52 = $r30.<ucar.nc2.iosp.hdf5.H5header$BTree2$Record6: byte[] heapId>;

        goto label09;

     label08:
        goto label05;

     label09:
        $r31 = virtualinvoke $r55.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$DHeapId getHeapId(byte[])>(r52);

        $l9 = virtualinvoke $r31.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DHeapId: long getPos()>();

        $b10 = $l9 cmp 0L;

        $i17 = (int) $b10;

        if $i17 >= 0 goto label10;

        goto label05;

     label10:
        $r32 = r4.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r32.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l9);

        $r58 = new ucar.nc2.iosp.hdf5.H5header$MessageLink;

        specialinvoke $r58.<ucar.nc2.iosp.hdf5.H5header$MessageLink: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$1)>(r4, null);

        virtualinvoke $r58.<ucar.nc2.iosp.hdf5.H5header$MessageLink: void read()>();

        $z3 = <ucar.nc2.iosp.hdf5.H5header: boolean debugBtree2>;

        if $z3 == 0 goto label11;

        $r38 = <java.lang.System: java.io.PrintStream out>;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    linkMessage=");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r41);

     label11:
        $r36 = r8.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.List nestedObjects>;

        $r60 = new ucar.nc2.iosp.hdf5.H5header$DataObjectFacade;

        $r35 = $r58.<ucar.nc2.iosp.hdf5.H5header$MessageLink: java.lang.String linkName>;

        $l11 = $r58.<ucar.nc2.iosp.hdf5.H5header$MessageLink: long linkAddress>;

        specialinvoke $r60.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$H5Group,java.lang.String,long)>(r4, r8, $r35, $l11);

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r60);

        goto label05;

     label12:
        goto label16;

     label13:
        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.util.List messages>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r13 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r53 = (ucar.nc2.iosp.hdf5.H5header$HeaderMessage) $r13;

        $r15 = r53.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$MessageType mtype>;

        $r14 = <ucar.nc2.iosp.hdf5.H5header$MessageType: ucar.nc2.iosp.hdf5.H5header$MessageType Link>;

        if $r15 != $r14 goto label15;

        $r16 = r53.<ucar.nc2.iosp.hdf5.H5header$HeaderMessage: ucar.nc2.iosp.hdf5.H5header$Named messData>;

        r17 = (ucar.nc2.iosp.hdf5.H5header$MessageLink) $r16;

        $b2 = r17.<ucar.nc2.iosp.hdf5.H5header$MessageLink: byte linkType>;

        if $b2 != 0 goto label15;

        $r20 = r8.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.List nestedObjects>;

        $r61 = new ucar.nc2.iosp.hdf5.H5header$DataObjectFacade;

        $r19 = r17.<ucar.nc2.iosp.hdf5.H5header$MessageLink: java.lang.String linkName>;

        $l3 = r17.<ucar.nc2.iosp.hdf5.H5header$MessageLink: long linkAddress>;

        specialinvoke $r61.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$H5Group,java.lang.String,long)>(r4, r8, $r19, $l3);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r61);

     label15:
        goto label14;

     label16:
        $z2 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        if $z2 == 0 goto label17;

        $r6 = r4.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<-- end GroupNew read <");

        $r9 = r8.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.lang.String displayName>;

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label17:
        return;
    }

    private void readGroupOld(ucar.nc2.iosp.hdf5.H5header$H5Group, long, long) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$GroupBTree $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry r15;
        ucar.nc2.iosp.hdf5.H5header$H5Group r2;
        java.util.List $r5, $r18, $r21;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r22, $r24, $r25, $r27, $r29, $r30, $r32, $r34, $r36, $r37;
        ucar.nc2.iosp.hdf5.H5header$LocalHeap $r0;
        long l0, l1, $l2, $l5;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade $r17, $r20;
        int $i3, $i4, $i6;
        java.lang.String $r4, $r10, $r13, $r16, $r19, $r26, $r31, $r35, $r38;
        java.io.PrintStream $r8, $r23, $r28, $r33;
        java.util.Iterator $r6;
        java.lang.Object $r14;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        r2 := @parameter0: ucar.nc2.iosp.hdf5.H5header$H5Group;

        l1 := @parameter1: long;

        l0 := @parameter2: long;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        if $z0 == 0 goto label1;

        $r33 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n--> GroupOld read <");

        $r35 = r2.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.lang.String displayName>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label1:
        $r0 = new ucar.nc2.iosp.hdf5.H5header$LocalHeap;

        specialinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$H5Group,long)>(r1, r2, l0);

        $r3 = new ucar.nc2.iosp.hdf5.H5header$GroupBTree;

        $r4 = r2.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.lang.String displayName>;

        specialinvoke $r3.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: void <init>(ucar.nc2.iosp.hdf5.H5header,java.lang.String,long)>(r1, $r4, l1);

        $r5 = virtualinvoke $r3.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: java.util.List getSymbolTableEntries()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label7;

        $r14 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r15 = (ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry) $r14;

        $l2 = virtualinvoke r15.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long getNameOffset()>();

        $i3 = (int) $l2;

        $r16 = virtualinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: java.lang.String getString(int)>($i3);

        $z2 = <ucar.nc2.iosp.hdf5.H5header: boolean debugSoftLink>;

        if $z2 == 0 goto label3;

        $r28 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n   Symbol name=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);

     label3:
        $i4 = r15.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int cacheType>;

        if $i4 != 2 goto label5;

        $i6 = r15.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int linkOffset>;

        $r19 = virtualinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: java.lang.String getString(int)>($i6);

        $z3 = <ucar.nc2.iosp.hdf5.H5header: boolean debugSoftLink>;

        if $z3 == 0 goto label4;

        $r23 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   Symbolic link name=");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label4:
        $r21 = r2.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.List nestedObjects>;

        $r20 = new ucar.nc2.iosp.hdf5.H5header$DataObjectFacade;

        specialinvoke $r20.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$H5Group,java.lang.String,java.lang.String)>(r1, r2, $r16, $r19);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label6;

     label5:
        $r18 = r2.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.util.List nestedObjects>;

        $r17 = new ucar.nc2.iosp.hdf5.H5header$DataObjectFacade;

        $l5 = virtualinvoke r15.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long getObjectAddress()>();

        specialinvoke $r17.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: void <init>(ucar.nc2.iosp.hdf5.H5header,ucar.nc2.iosp.hdf5.H5header$H5Group,java.lang.String,long)>(r1, r2, $r16, $l5);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r17);

     label6:
        goto label2;

     label7:
        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        if $z1 == 0 goto label8;

        $r8 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<-- end GroupOld read <");

        $r10 = r2.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.lang.String displayName>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label8:
        return;
    }

    ucar.ma2.Array getHeapDataArray(long, ucar.ma2.DataType, int) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject $r2;
        byte[] r58;
        ucar.nc2.iosp.hdf5.H5header$HeapIdentifier $r0;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r11, $r12, $r13, $r46, $r48, $r49, $r51, $r53, $r54;
        double[] r57;
        long l0, $l3, $l7, $l11, $l15, $l19, $l23;
        float[] r56;
        java.lang.String $r14, $r50, $r55;
        java.lang.UnsupportedOperationException $r10;
        ucar.ma2.Array $r19, $r24, $r29, $r34, $r39, $r44;
        ucar.unidata.io.RandomAccessFile $r15, $r16, $r20, $r21, $r25, $r26, $r30, $r31, $r35, $r36, $r40, $r41, $r45;
        int[] $r18, $r23, $r28, $r33, $r38, $r43, r60;
        boolean $z0, $z1;
        ucar.ma2.DataType r3, $r4, $r5, $r6, $r7, $r8, $r9;
        short[] r59;
        long[] r61;
        int i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i18, $i20, $i21, $i22, $i24, $i25;
        java.io.PrintStream $r47, $r52;
        java.lang.Class $r17, $r22, $r27, $r32, $r37, $r42;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        l0 := @parameter0: long;

        r3 := @parameter1: ucar.ma2.DataType;

        i1 := @parameter2: int;

        $r0 = new ucar.nc2.iosp.hdf5.H5header$HeapIdentifier;

        specialinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: void <init>(ucar.nc2.iosp.hdf5.H5header,long)>(r1, l0);

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugHeap>;

        if $z0 == 0 goto label1;

        $r52 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heapId= ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r55);

     label1:
        $r2 = virtualinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject getHeapObject()>();

        $z1 = <ucar.nc2.iosp.hdf5.H5header: boolean debugHeap>;

        if $z1 == 0 goto label2;

        $r47 = r1.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" HeapObject= ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r50);

     label2:
        if i1 < 0 goto label3;

        $r45 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r45.<ucar.unidata.io.RandomAccessFile: void order(int)>(i1);

     label3:
        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if $r4 != r3 goto label4;

        $i22 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int access$6500(ucar.nc2.iosp.hdf5.H5header$HeapIdentifier)>($r0);

        r56 = newarray (float)[$i22];

        $r40 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l23 = $r2.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: long dataPos>;

        virtualinvoke $r40.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l23);

        $r41 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i24 = lengthof r56;

        virtualinvoke $r41.<ucar.unidata.io.RandomAccessFile: void readFloat(float[],int,int)>(r56, 0, $i24);

        $r42 = virtualinvoke r3.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r43 = newarray (int)[1];

        $i25 = lengthof r56;

        $r43[0] = $i25;

        $r44 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r42, $r43, r56);

        return $r44;

     label4:
        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if $r5 != r3 goto label5;

        $i18 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int access$6500(ucar.nc2.iosp.hdf5.H5header$HeapIdentifier)>($r0);

        r57 = newarray (double)[$i18];

        $r35 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l19 = $r2.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: long dataPos>;

        virtualinvoke $r35.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l19);

        $r36 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i20 = lengthof r57;

        virtualinvoke $r36.<ucar.unidata.io.RandomAccessFile: void readDouble(double[],int,int)>(r57, 0, $i20);

        $r37 = virtualinvoke r3.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r38 = newarray (int)[1];

        $i21 = lengthof r57;

        $r38[0] = $i21;

        $r39 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r37, $r38, r57);

        return $r39;

     label5:
        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if $r6 != r3 goto label6;

        $i14 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int access$6500(ucar.nc2.iosp.hdf5.H5header$HeapIdentifier)>($r0);

        r58 = newarray (byte)[$i14];

        $r30 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l15 = $r2.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: long dataPos>;

        virtualinvoke $r30.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l15);

        $r31 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i16 = lengthof r58;

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int read(byte[],int,int)>(r58, 0, $i16);

        $r32 = virtualinvoke r3.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r33 = newarray (int)[1];

        $i17 = lengthof r58;

        $r33[0] = $i17;

        $r34 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r32, $r33, r58);

        return $r34;

     label6:
        $r7 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        if $r7 != r3 goto label7;

        $i10 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int access$6500(ucar.nc2.iosp.hdf5.H5header$HeapIdentifier)>($r0);

        r59 = newarray (short)[$i10];

        $r25 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l11 = $r2.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: long dataPos>;

        virtualinvoke $r25.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l11);

        $r26 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i12 = lengthof r59;

        virtualinvoke $r26.<ucar.unidata.io.RandomAccessFile: void readShort(short[],int,int)>(r59, 0, $i12);

        $r27 = virtualinvoke r3.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r28 = newarray (int)[1];

        $i13 = lengthof r59;

        $r28[0] = $i13;

        $r29 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r27, $r28, r59);

        return $r29;

     label7:
        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r8 != r3 goto label8;

        $i6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int access$6500(ucar.nc2.iosp.hdf5.H5header$HeapIdentifier)>($r0);

        r60 = newarray (int)[$i6];

        $r20 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l7 = $r2.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: long dataPos>;

        virtualinvoke $r20.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l7);

        $r21 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i8 = lengthof r60;

        virtualinvoke $r21.<ucar.unidata.io.RandomAccessFile: void readInt(int[],int,int)>(r60, 0, $i8);

        $r22 = virtualinvoke r3.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r23 = newarray (int)[1];

        $i9 = lengthof r60;

        $r23[0] = $i9;

        $r24 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r22, $r23, r60);

        return $r24;

     label8:
        $r9 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        if $r9 != r3 goto label9;

        $i2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int access$6500(ucar.nc2.iosp.hdf5.H5header$HeapIdentifier)>($r0);

        r61 = newarray (long)[$i2];

        $r15 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l3 = $r2.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: long dataPos>;

        virtualinvoke $r15.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l3);

        $r16 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i4 = lengthof r61;

        virtualinvoke $r16.<ucar.unidata.io.RandomAccessFile: void readLong(long[],int,int)>(r61, 0, $i4);

        $r17 = virtualinvoke r3.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r18 = newarray (int)[1];

        $i5 = lengthof r61;

        $r18[0] = $i5;

        $r19 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r17, $r18, r61);

        return $r19;

     label9:
        $r10 = new java.lang.UnsupportedOperationException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getHeapDataAsArray dataType=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r10;
    }

    java.lang.String readHeapString(long) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject $r2;
        ucar.unidata.io.RandomAccessFile $r3;
        long l0, $l1, $l2;
        ucar.nc2.iosp.hdf5.H5header$HeapIdentifier $r0;
        ucar.nc2.iosp.hdf5.H5header r1;
        int $i3;
        java.lang.String $r4;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        l0 := @parameter0: long;

        $r0 = new ucar.nc2.iosp.hdf5.H5header$HeapIdentifier;

        specialinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: void <init>(ucar.nc2.iosp.hdf5.H5header,long)>(r1, l0);

        $r2 = virtualinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject getHeapObject()>();

        $r3 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l1 = $r2.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: long dataPos>;

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $l2 = $r2.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: long dataSize>;

        $i3 = (int) $l2;

        $r4 = specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: java.lang.String readStringFixedLength(int)>($i3);

        return $r4;
    }

    java.lang.String readHeapString(java.nio.ByteBuffer, int) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject $r3;
        ucar.unidata.io.RandomAccessFile $r4;
        long $l1, $l2;
        ucar.nc2.iosp.hdf5.H5header$HeapIdentifier $r0;
        java.nio.ByteBuffer r2;
        ucar.nc2.iosp.hdf5.H5header r1;
        int i0, $i3;
        java.lang.String $r5;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        r2 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $r0 = new ucar.nc2.iosp.hdf5.H5header$HeapIdentifier;

        specialinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: void <init>(ucar.nc2.iosp.hdf5.H5header,java.nio.ByteBuffer,int)>(r1, r2, i0);

        $r3 = virtualinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject getHeapObject()>();

        $r4 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l1 = $r3.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: long dataPos>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $l2 = $r3.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: long dataSize>;

        $i3 = (int) $l2;

        $r5 = specialinvoke r1.<ucar.nc2.iosp.hdf5.H5header: java.lang.String readStringFixedLength(int)>($i3);

        return $r5;
    }

    public java.util.List getDataObjects()
    {
        ucar.nc2.iosp.hdf5.H5header$1 $r4;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.util.ArrayList $r0;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header: java.util.Map addressMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = new ucar.nc2.iosp.hdf5.H5header$1;

        specialinvoke $r4.<ucar.nc2.iosp.hdf5.H5header$1: void <init>(ucar.nc2.iosp.hdf5.H5header)>(r1);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r0, $r4);

        return $r0;
    }

    java.lang.String getDataObjectName(long) throws java.io.IOException
    {
        long l0;
        java.lang.String $r2, $r6, $r8, $r13;
        boolean $z0;
        java.io.PrintStream $r4;
        org.slf4j.Logger $r10;
        ucar.nc2.iosp.hdf5.H5header$DataObject $r1;
        ucar.nc2.iosp.hdf5.H5header r0;
        java.lang.StringBuilder $r3, $r5, $r7, $r9, $r11, $r12;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        l0 := @parameter0: long;

        $r1 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$DataObject getDataObject(long,java.lang.String)>(l0, null);

        if $r1 != null goto label1;

        $r10 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H5iosp.readVlenData cant find dataObject id= ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String)>($r13);

        return null;

     label1:
        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugVlen>;

        if $z0 == 0 goto label2;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Referenced object= ");

        $r6 = $r1.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.lang.String who>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label2:
        $r2 = $r1.<ucar.nc2.iosp.hdf5.H5header$DataObject: java.lang.String who>;

        return $r2;
    }

    private int makeIntFromBytes(byte[], int, int)
    {
        byte[] r0;
        byte b3;
        ucar.nc2.iosp.hdf5.H5header r1;
        int i0, i1, $i2, i4, i5, i6, $i7, $i8, $i9, $i10, $i12;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i4 = 0;

        $i2 = i0 + i1;

        i5 = $i2 - 1;

     label1:
        if i5 < i0 goto label4;

        i6 = i4 << 8;

        b3 = r0[i5];

        $i8 = (int) b3;

        if $i8 >= 0 goto label2;

        $i9 = (int) b3;

        $i7 = $i9 + 256;

        goto label3;

     label2:
        $i10 = (int) b3;

        $i7 = $i10;

     label3:
        i4 = i6 + $i7;

        $i12 = (int) -1;

        i5 = i5 + $i12;

        goto label1;

     label4:
        return i4;
    }

    private java.lang.String readString(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        byte[] r1;
        ucar.unidata.io.RandomAccessFile r0;
        long $l0;
        byte $b1;
        ucar.nc2.iosp.hdf5.H5header r4;
        int i2;
        java.lang.String $r2, $r3;

        r4 := @this: ucar.nc2.iosp.hdf5.H5header;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $l0 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        i2 = 0;

     label1:
        $b1 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        if $b1 == 0 goto label2;

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l0);

        r1 = newarray (byte)[i2];

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r1);

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r2 = new java.lang.String;

        $r3 = <ucar.nc2.iosp.hdf5.H5header: java.lang.String utf8CharsetName>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, $r3);

        return $r2;
    }

    private java.lang.String readString8(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        byte[] r1;
        java.lang.IllegalStateException $r6;
        ucar.unidata.io.RandomAccessFile r0;
        long $l0, $l3, $l4;
        byte $b1;
        int $i2, i5, i6, i7;
        java.lang.String $r3, $r4, $r7;
        ucar.nc2.iosp.hdf5.H5header r2;
        java.io.UnsupportedEncodingException $r5;

        r2 := @this: ucar.nc2.iosp.hdf5.H5header;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $l0 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        i5 = 0;

     label1:
        $b1 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        if $b1 == 0 goto label2;

        i5 = i5 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l0);

        r1 = newarray (byte)[i5];

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r1);

        i6 = i5 + 1;

        $i2 = specialinvoke r2.<ucar.nc2.iosp.hdf5.H5header: int padding(int,int)>(i6, 8);

        i7 = i6 + $i2;

        $l3 = (long) i7;

        $l4 = $l0 + $l3;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l4);

     label3:
        $r3 = new java.lang.String;

        $r4 = <ucar.nc2.iosp.hdf5.H5header: java.lang.String utf8CharsetName>;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, $r4);

     label4:
        return $r3;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r5.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    private java.lang.String readStringFixedLength(int) throws java.io.IOException
    {
        byte[] r0;
        ucar.unidata.io.RandomAccessFile $r2;
        ucar.nc2.iosp.hdf5.H5header r1;
        int i0;
        java.lang.String $r3, $r4;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter0: int;

        r0 = newarray (byte)[i0];

        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r0);

        $r3 = new java.lang.String;

        $r4 = <ucar.nc2.iosp.hdf5.H5header: java.lang.String utf8CharsetName>;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>(r0, $r4);

        return $r3;
    }

    private long readLength() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1, $r2;
        ucar.nc2.iosp.hdf5.H5header r0;
        int $i0;
        long $l1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        $z0 = r0.<ucar.nc2.iosp.hdf5.H5header: boolean isLengthLong>;

        if $z0 == 0 goto label1;

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l1 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: long readLong()>();

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i0 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $l1 = (long) $i0;

     label2:
        return $l1;
    }

    private long readOffset() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1, $r2;
        ucar.nc2.iosp.hdf5.H5header r0;
        int $i0;
        long $l1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        $z0 = r0.<ucar.nc2.iosp.hdf5.H5header: boolean isOffsetLong>;

        if $z0 == 0 goto label1;

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l1 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: long readLong()>();

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i0 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $l1 = (long) $i0;

     label2:
        return $l1;
    }

    private int getNumBytesFromMax(long)
    {
        byte $b0;
        ucar.nc2.iosp.hdf5.H5header r0;
        int i2;
        long l1;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        l1 := @parameter0: long;

        i2 = 0;

     label1:
        $b0 = l1 cmp 0L;

        if $b0 == 0 goto label2;

        i2 = i2 + 1;

        l1 = l1 >>> 8;

        goto label1;

     label2:
        return i2;
    }

    private long readVariableSizeMax(int) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        int i0, $i2;
        long $l1, $l3;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $i2 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: int getNumBytesFromMax(long)>($l1);

        $l3 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readVariableSizeUnsigned(int)>($i2);

        return $l3;
    }

    private long readVariableSizeFactor(int) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        int i0, i1;
        long $l2;
        double $d0, $d1;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);

        i1 = (int) $d1;

        $l2 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readVariableSizeUnsigned(int)>(i1);

        return $l2;
    }

    private long readVariableSizeUnsigned(int) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r3, $r7, $r10;
        long $l4, l7;
        short $s2, $s6;
        byte $b5;
        int i0, $i1, $i3;
        java.lang.String $r9;
        boolean $z0;
        java.io.PrintStream $r5;
        ucar.nc2.iosp.hdf5.H5header r0;
        java.lang.StringBuilder $r4, $r6, $r8;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r10 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b5 = virtualinvoke $r10.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $s6 = staticinvoke <ucar.ma2.DataType: short unsignedByteToShort(byte)>($b5);

        l7 = (long) $s6;

        goto label6;

     label1:
        if i0 != 2 goto label3;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugPos>;

        if $z0 == 0 goto label2;

        $r5 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position=");

        $r7 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l4 = virtualinvoke $r7.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label2:
        $r3 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $s2 = virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $i3 = staticinvoke <ucar.ma2.DataType: int unsignedShortToInt(short)>($s2);

        l7 = (long) $i3;

        goto label6;

     label3:
        if i0 != 4 goto label4;

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i1 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        l7 = staticinvoke <ucar.ma2.DataType: long unsignedIntToLong(int)>($i1);

        goto label6;

     label4:
        if i0 != 8 goto label5;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        l7 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: long readLong()>();

        goto label6;

     label5:
        l7 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readVariableSizeN(int)>(i0);

     label6:
        return l7;
    }

    private int readVariableSize(int) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r6, $r7, $r8;
        java.lang.IllegalArgumentException $r10;
        short $s2;
        byte $b3;
        ucar.nc2.iosp.hdf5.H5header r5;
        int i0, $i1, $i4, $i5;
        java.lang.StringBuilder $r2, $r3, $r9;
        java.lang.String $r4;

        r5 := @this: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r8 = r5.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $b3 = virtualinvoke $r8.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $i4 = (int) $b3;

        return $i4;

     label1:
        if i0 != 2 goto label2;

        $r7 = r5.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $s2 = virtualinvoke $r7.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $i5 = (int) $s2;

        return $i5;

     label2:
        if i0 != 4 goto label3;

        $r6 = r5.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i1 = virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        return $i1;

     label3:
        $r10 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dont support int size == ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r10;
    }

    private long readVariableSizeN(int) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r2;
        long $l4, l7, l9;
        int[] r0;
        ucar.nc2.iosp.hdf5.H5header r1;
        int i0, $i1, $i2, $i3, $i5, i6, i8, $i11;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter0: int;

        r0 = newarray (int)[i0];

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $i5 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: int read()>();

        r0[i6] = $i5;

        i6 = i6 + 1;

        goto label1;

     label2:
        $i1 = i0 - 1;

        $i2 = r0[$i1];

        l7 = (long) $i2;

        i8 = i0 - 2;

     label3:
        if i8 < 0 goto label4;

        l9 = l7 << 8;

        $i3 = r0[i8];

        $l4 = (long) $i3;

        l7 = l9 + $l4;

        $i11 = (int) -1;

        i8 = i8 + $i11;

        goto label3;

     label4:
        return l7;
    }

    private long getFileOffset(long) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        long l0, $l1, $l2;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        l0 := @parameter0: long;

        $l1 = r0.<ucar.nc2.iosp.hdf5.H5header: long baseAddress>;

        $l2 = $l1 + l0;

        return $l2;
    }

    private int makeUnsignedIntFromBytes(byte, byte)
    {
        short $s1, $s4;
        byte b0, b2;
        ucar.nc2.iosp.hdf5.H5header r0;
        int $i3, $i5, $i6, $i7;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        b0 := @parameter0: byte;

        b2 := @parameter1: byte;

        $s1 = staticinvoke <ucar.ma2.DataType: short unsignedByteToShort(byte)>(b0);

        $i6 = (int) $s1;

        $i3 = $i6 * 256;

        $s4 = staticinvoke <ucar.ma2.DataType: short unsignedByteToShort(byte)>(b2);

        $i7 = (int) $s4;

        $i5 = $i3 + $i7;

        return $i5;
    }

    private int padding(int, int)
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        int i0, i1, i2;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 % i1;

        if i2 == 0 goto label1;

        i2 = i1 - i2;

     label1:
        return i2;
    }

    void dump(java.lang.String, long, int, boolean) throws java.io.IOException
    {
        java.io.PrintStream $r4;
        byte[] $r7;
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r5, $r6;
        long $l0, l1;
        byte $b2;
        ucar.nc2.iosp.hdf5.H5header r0;
        int i3, $i4;
        java.lang.String r3;
        boolean z0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        r3 := @parameter0: java.lang.String;

        l1 := @parameter1: long;

        i3 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        $l0 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $b2 = l1 cmp 0L;

        $i4 = (int) $b2;

        if $i4 < 0 goto label1;

        $r6 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: void seek(long)>(l1);

     label1:
        $r7 = newarray (byte)[i3];

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r7);

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        staticinvoke <ucar.nc2.iosp.hdf5.H5header: void printBytes(java.lang.String,byte[],int,boolean,java.io.PrintStream)>(r3, $r7, i3, 0, $r4);

        $r5 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l0);

        return;
    }

    static void printBytes(java.lang.String, byte[], int, boolean, java.io.PrintStream)
    {
        byte[] r6;
        byte b1;
        int i0, i2, i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r2, $r5, $r10;
        boolean z0;
        java.io.PrintStream r0;
        java.lang.StringBuilder $r3, $r4, $r8, $r9, $r11, $r12;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: byte[];

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r0 := @parameter4: java.io.PrintStream;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r5);

        i3 = 0;

     label1:
        if i3 >= i0 goto label6;

        b1 = r6[i3];

        $i5 = (int) b1;

        if $i5 >= 0 goto label2;

        $i6 = (int) b1;

        $i4 = $i6 + 256;

        goto label3;

     label2:
        $i7 = (int) b1;

        $i4 = $i7;

     label3:
        i2 = $i4;

        if z0 == 0 goto label4;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r10);

     label4:
        virtualinvoke r0.<java.io.PrintStream: void print(int)>(i2);

        if z0 != 0 goto label5;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("(");

        $i8 = (int) b1;

        virtualinvoke r0.<java.io.PrintStream: void print(int)>($i8);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(")");

     label5:
        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" ");

        i3 = i3 + 1;

        goto label1;

     label6:
        virtualinvoke r0.<java.io.PrintStream: void println()>();

        return;
    }

    static void printBytes(java.lang.String, byte[], int, int, java.io.PrintStream)
    {
        byte[] r6;
        byte b3;
        int i0, i1, $i2, i4, $i5, $i6, $i7, $i8;
        java.lang.String r2, $r5;
        java.io.PrintStream r0;
        java.lang.StringBuilder $r3, $r4, $r7;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: byte[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        r0 := @parameter4: java.io.PrintStream;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r5);

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        $i2 = i1 + i4;

        b3 = r6[$i2];

        $i6 = (int) b3;

        if $i6 >= 0 goto label2;

        $i7 = (int) b3;

        $i5 = $i7 + 256;

        goto label3;

     label2:
        $i8 = (int) b3;

        $i5 = $i8;

     label3:
        virtualinvoke r0.<java.io.PrintStream: void print(int)>($i5);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" ");

        i4 = i4 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<java.io.PrintStream: void println()>();

        return;
    }

    public void close()
    {
        ucar.nc2.iosp.hdf5.H5header$MemTracker $r1;
        boolean $z0;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugTracker>;

        if $z0 == 0 goto label1;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker memTracker>;

        virtualinvoke $r1.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void report()>();

     label1:
        return;
    }

    static long access$100(ucar.nc2.iosp.hdf5.H5header, long) throws java.io.IOException
    {
        long l0, $l1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        l0 := @parameter1: long;

        $l1 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long getFileOffset(long)>(l0);

        return $l1;
    }

    static boolean access$200()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean warnings>;

        return $z0;
    }

    static ucar.nc2.NetcdfFile access$300(ucar.nc2.iosp.hdf5.H5header)
    {
        ucar.nc2.NetcdfFile $r1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile ncfile>;

        return $r1;
    }

    static java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)
    {
        java.io.PrintStream $r1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream debugOut>;

        return $r1;
    }

    static ucar.ma2.DataType access$500(ucar.nc2.iosp.hdf5.H5header, int, int)
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        int i0, i1;
        ucar.ma2.DataType $r1;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: ucar.ma2.DataType getNCtype(int,int)>(i0, i1);

        return $r1;
    }

    static org.slf4j.Logger access$600()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log>;

        return $r0;
    }

    static ucar.nc2.iosp.hdf5.H5header$DataObject access$800(ucar.nc2.iosp.hdf5.H5header, long, java.lang.String) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        ucar.nc2.iosp.hdf5.H5header$DataObject $r2;
        long l0;
        java.lang.String r1;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$DataObject getDataObject(long,java.lang.String)>(l0, r1);

        return $r2;
    }

    static java.util.Map access$900(ucar.nc2.iosp.hdf5.H5header)
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        java.util.Map $r1;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: java.util.Map symlinkMap>;

        return $r1;
    }

    static void access$1000(ucar.nc2.iosp.hdf5.H5header, ucar.nc2.iosp.hdf5.H5header$H5Group, long, long) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        long l0, l1;
        ucar.nc2.iosp.hdf5.H5header$H5Group r1;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r1 := @parameter1: ucar.nc2.iosp.hdf5.H5header$H5Group;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: void readGroupOld(ucar.nc2.iosp.hdf5.H5header$H5Group,long,long)>(r1, l0, l1);

        return;
    }

    static void access$1100(ucar.nc2.iosp.hdf5.H5header, ucar.nc2.iosp.hdf5.H5header$H5Group, ucar.nc2.iosp.hdf5.H5header$MessageGroupNew, ucar.nc2.iosp.hdf5.H5header$DataObject) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        ucar.nc2.iosp.hdf5.H5header$DataObject r3;
        ucar.nc2.iosp.hdf5.H5header$MessageGroupNew r2;
        ucar.nc2.iosp.hdf5.H5header$H5Group r1;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r1 := @parameter1: ucar.nc2.iosp.hdf5.H5header$H5Group;

        r2 := @parameter2: ucar.nc2.iosp.hdf5.H5header$MessageGroupNew;

        r3 := @parameter3: ucar.nc2.iosp.hdf5.H5header$DataObject;

        specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: void readGroupNew(ucar.nc2.iosp.hdf5.H5header$H5Group,ucar.nc2.iosp.hdf5.H5header$MessageGroupNew,ucar.nc2.iosp.hdf5.H5header$DataObject)>(r1, r2, r3);

        return;
    }

    static boolean access$1200()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debug1>;

        return $z0;
    }

    static boolean access$1300()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugPos>;

        return $z0;
    }

    static ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile raf>;

        return $r1;
    }

    static boolean access$1500()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail>;

        return $z0;
    }

    static boolean access$1600()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugContinueMessage>;

        return $z0;
    }

    static boolean access$1700()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugTracker>;

        return $z0;
    }

    static ucar.nc2.iosp.hdf5.H5header$MemTracker access$1800(ucar.nc2.iosp.hdf5.H5header)
    {
        ucar.nc2.iosp.hdf5.H5header$MemTracker $r1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker memTracker>;

        return $r1;
    }

    static long access$1900(ucar.nc2.iosp.hdf5.H5header, int) throws java.io.IOException
    {
        int i0;
        long $l1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter1: int;

        $l1 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readVariableSizeFactor(int)>(i0);

        return $l1;
    }

    static boolean access$2200()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugBtree2>;

        return $z0;
    }

    static java.lang.String access$2300(ucar.nc2.iosp.hdf5.H5header, int) throws java.io.IOException
    {
        int i0;
        java.lang.String $r1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: java.lang.String readStringFixedLength(int)>(i0);

        return $r1;
    }

    static boolean access$2400()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugCreationOrder>;

        return $z0;
    }

    static ucar.nc2.iosp.hdf5.H5header$DataObject access$2500(ucar.nc2.iosp.hdf5.H5header, ucar.nc2.iosp.hdf5.H5header$MessageType) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$DataObject $r2;
        ucar.nc2.iosp.hdf5.H5header$MessageType r1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r1 := @parameter1: ucar.nc2.iosp.hdf5.H5header$MessageType;

        $r2 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$DataObject getSharedDataObject(ucar.nc2.iosp.hdf5.H5header$MessageType)>(r1);

        return $r2;
    }

    static long access$3900(ucar.nc2.iosp.hdf5.H5header) throws java.io.IOException
    {
        long $l0;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $l0 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readLength()>();

        return $l0;
    }

    static long access$4000(ucar.nc2.iosp.hdf5.H5header) throws java.io.IOException
    {
        long $l0;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $l0 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readOffset()>();

        return $l0;
    }

    static java.lang.String access$4100(ucar.nc2.iosp.hdf5.H5header, ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        java.lang.String $r2;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r1 := @parameter1: ucar.unidata.io.RandomAccessFile;

        $r2 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: java.lang.String readString(ucar.unidata.io.RandomAccessFile)>(r1);

        return $r2;
    }

    static int access$4200(ucar.nc2.iosp.hdf5.H5header, byte, byte)
    {
        byte b0, b1;
        ucar.nc2.iosp.hdf5.H5header r0;
        int $i2;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        b0 := @parameter1: byte;

        b1 := @parameter2: byte;

        $i2 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: int makeUnsignedIntFromBytes(byte,byte)>(b0, b1);

        return $i2;
    }

    static boolean access$4300()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugReference>;

        return $z0;
    }

    static boolean access$4400()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugEnum>;

        return $z0;
    }

    static boolean access$1502(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail> = z0;

        return z0;
    }

    static java.lang.String access$4500(ucar.nc2.iosp.hdf5.H5header, ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        java.lang.String $r2;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r1 := @parameter1: ucar.unidata.io.RandomAccessFile;

        $r2 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: java.lang.String readString8(ucar.unidata.io.RandomAccessFile)>(r1);

        return $r2;
    }

    static int access$4600(ucar.nc2.iosp.hdf5.H5header, int) throws java.io.IOException
    {
        int i0, $i1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: int readVariableSize(int)>(i0);

        return $i1;
    }

    static int access$4700(ucar.nc2.iosp.hdf5.H5header, int, int)
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        int i0, i1, $i2;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: int padding(int,int)>(i0, i1);

        return $i2;
    }

    static long access$4800(ucar.nc2.iosp.hdf5.H5header, int) throws java.io.IOException
    {
        int i0;
        long $l1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter1: int;

        $l1 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readVariableSizeMax(int)>(i0);

        return $l1;
    }

    static java.lang.String[] access$4900(ucar.nc2.iosp.hdf5.H5header)
    {
        java.lang.String[] $r1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: java.lang.String[] filterName>;

        return $r1;
    }

    static boolean access$5000()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugGroupBtree>;

        return $z0;
    }

    static byte access$5100(ucar.nc2.iosp.hdf5.H5header)
    {
        byte $b0;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $b0 = r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeOffsets>;

        return $b0;
    }

    static byte access$5200(ucar.nc2.iosp.hdf5.H5header)
    {
        byte $b0;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $b0 = r0.<ucar.nc2.iosp.hdf5.H5header: byte sizeLengths>;

        return $b0;
    }

    static boolean access$5300()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDataBtree>;

        return $z0;
    }

    static boolean access$5400()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugSymbolTable>;

        return $z0;
    }

    static boolean access$5500(ucar.nc2.iosp.hdf5.H5header)
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $z0 = r0.<ucar.nc2.iosp.hdf5.H5header: boolean isOffsetLong>;

        return $z0;
    }

    static long access$5700(ucar.nc2.iosp.hdf5.H5header, int) throws java.io.IOException
    {
        int i0;
        long $l1;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        i0 := @parameter1: int;

        $l1 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: long readVariableSizeUnsigned(int)>(i0);

        return $l1;
    }

    static boolean access$6300()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugDataChunk>;

        return $z0;
    }

    static boolean access$6600()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugHeap>;

        return $z0;
    }

    static java.util.Map access$6700(ucar.nc2.iosp.hdf5.H5header)
    {
        ucar.nc2.iosp.hdf5.H5header r0;
        java.util.Map $r1;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header: java.util.Map heapMap>;

        return $r1;
    }

    static boolean access$6800()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugRegionReference>;

        return $z0;
    }

    static java.lang.String access$6900()
    {
        java.lang.String $r0;

        $r0 = <ucar.nc2.iosp.hdf5.H5header: java.lang.String utf8CharsetName>;

        return $r0;
    }

    static boolean access$7000()
    {
        boolean $z0;

        $z0 = <ucar.nc2.iosp.hdf5.H5header: boolean debugFractalHeap>;

        return $z0;
    }

    static int access$7200(ucar.nc2.iosp.hdf5.H5header, long)
    {
        int $i1;
        long l0;
        ucar.nc2.iosp.hdf5.H5header r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        l0 := @parameter1: long;

        $i1 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: int getNumBytesFromMax(long)>(l0);

        return $i1;
    }

    static int access$7300(ucar.nc2.iosp.hdf5.H5header, byte[], int, int)
    {
        byte[] r1;
        ucar.nc2.iosp.hdf5.H5header r0;
        int i0, i1, $i2;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header: int makeIntFromBytes(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    static void <clinit>()
    {
        byte[] $r3, $r5;
        org.slf4j.Logger $r0;
        java.nio.charset.Charset $r2;
        java.lang.String $r1, $r4;

        <ucar.nc2.iosp.hdf5.H5header: long maxHeaderPos> = 500000L;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/hdf5/H5header;");

        <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger log> = $r0;

        <ucar.nc2.iosp.hdf5.H5header: java.lang.String utf8CharsetName> = "UTF-8";

        $r1 = <ucar.nc2.iosp.hdf5.H5header: java.lang.String utf8CharsetName>;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r1);

        <ucar.nc2.iosp.hdf5.H5header: java.nio.charset.Charset utf8Charset> = $r2;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugEnum> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugVlen> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debug1> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugDetail> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugPos> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugHeap> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugV> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugGroupBtree> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugDataBtree> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugDataChunk> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugBtree2> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugContinueMessage> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugTracker> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugSoftLink> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugSymbolTable> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean warnings> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugReference> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugRegionReference> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugCreationOrder> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugFractalHeap> = 0;

        <ucar.nc2.iosp.hdf5.H5header: boolean debugDimensionScales> = 0;

        $r3 = newarray (byte)[8];

        $r3[0] = -119;

        $r3[1] = 72;

        $r3[2] = 68;

        $r3[3] = 70;

        $r3[4] = 13;

        $r3[5] = 10;

        $r3[6] = 26;

        $r3[7] = 10;

        <ucar.nc2.iosp.hdf5.H5header: byte[] head> = $r3;

        $r4 = new java.lang.String;

        $r5 = <ucar.nc2.iosp.hdf5.H5header: byte[] head>;

        specialinvoke $r4.<java.lang.String: void <init>(byte[])>($r5);

        <ucar.nc2.iosp.hdf5.H5header: java.lang.String hdf5magic> = $r4;

        <ucar.nc2.iosp.hdf5.H5header: boolean transformReference> = 1;

        return;
    }
}
