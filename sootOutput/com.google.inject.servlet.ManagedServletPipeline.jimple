class com.google.inject.servlet.ManagedServletPipeline extends java.lang.Object
{
    private final com.google.inject.servlet.ServletDefinition[] servletDefinitions;
    private static final com.google.inject.TypeLiteral SERVLET_DEFS;
    public static final java.lang.String REQUEST_DISPATCHER_REQUEST;

    public void <init>(com.google.inject.Injector)
    {
        com.google.inject.Injector r1;
        com.google.inject.servlet.ServletDefinition[] $r2;
        com.google.inject.servlet.ManagedServletPipeline r0;

        r0 := @this: com.google.inject.servlet.ManagedServletPipeline;

        r1 := @parameter0: com.google.inject.Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = specialinvoke r0.<com.google.inject.servlet.ManagedServletPipeline: com.google.inject.servlet.ServletDefinition[] collectServletDefinitions(com.google.inject.Injector)>(r1);

        r0.<com.google.inject.servlet.ManagedServletPipeline: com.google.inject.servlet.ServletDefinition[] servletDefinitions> = $r2;

        return;
    }

    boolean hasServletsMapped()
    {
        com.google.inject.servlet.ServletDefinition[] $r1;
        com.google.inject.servlet.ManagedServletPipeline r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.inject.servlet.ManagedServletPipeline;

        $r1 = r0.<com.google.inject.servlet.ManagedServletPipeline: com.google.inject.servlet.ServletDefinition[] servletDefinitions>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private com.google.inject.servlet.ServletDefinition[] collectServletDefinitions(com.google.inject.Injector)
    {
        java.lang.Object[] $r6;
        java.util.Iterator $r4;
        com.google.inject.Binding r9;
        java.util.ArrayList $r0;
        com.google.inject.Injector r1;
        com.google.inject.servlet.ServletDefinition[] $r5, $r7;
        java.util.List $r3;
        com.google.inject.Provider $r10;
        com.google.inject.servlet.ManagedServletPipeline r12;
        int $i0;
        java.lang.Object $r8, $r11;
        com.google.inject.TypeLiteral $r2;
        boolean $z0;

        r12 := @this: com.google.inject.servlet.ManagedServletPipeline;

        r1 := @parameter0: com.google.inject.Injector;

        $r0 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        $r2 = <com.google.inject.servlet.ManagedServletPipeline: com.google.inject.TypeLiteral SERVLET_DEFS>;

        $r3 = interfaceinvoke r1.<com.google.inject.Injector: java.util.List findBindingsByType(com.google.inject.TypeLiteral)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.google.inject.Binding) $r8;

        $r10 = interfaceinvoke r9.<com.google.inject.Binding: com.google.inject.Provider getProvider()>();

        $r11 = interfaceinvoke $r10.<com.google.inject.Provider: java.lang.Object get()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r5 = newarray (com.google.inject.servlet.ServletDefinition)[$i0];

        $r6 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (com.google.inject.servlet.ServletDefinition[]) $r6;

        return $r7;
    }

    public void init(javax.servlet.ServletContext, com.google.inject.Injector) throws javax.servlet.ServletException
    {
        java.util.IdentityHashMap $r0;
        com.google.inject.servlet.ServletDefinition r4;
        java.util.Set $r1;
        com.google.inject.Injector r6;
        com.google.inject.servlet.ServletDefinition[] r3;
        com.google.inject.servlet.ManagedServletPipeline r2;
        int i0, i1;
        javax.servlet.ServletContext r5;

        r2 := @this: com.google.inject.servlet.ManagedServletPipeline;

        r5 := @parameter0: javax.servlet.ServletContext;

        r6 := @parameter1: com.google.inject.Injector;

        $r0 = staticinvoke <com.google.inject.internal.util.$Maps: java.util.IdentityHashMap newIdentityHashMap()>();

        $r1 = staticinvoke <com.google.inject.internal.util.$Sets: java.util.Set newSetFromMap(java.util.Map)>($r0);

        r3 = r2.<com.google.inject.servlet.ManagedServletPipeline: com.google.inject.servlet.ServletDefinition[] servletDefinitions>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        virtualinvoke r4.<com.google.inject.servlet.ServletDefinition: void init(javax.servlet.ServletContext,com.google.inject.Injector,java.util.Set)>(r5, r6, $r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean service(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.ServletRequest r3;
        com.google.inject.servlet.ServletDefinition r2;
        com.google.inject.servlet.ServletDefinition[] r1;
        javax.servlet.ServletResponse r4;
        com.google.inject.servlet.ManagedServletPipeline r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.google.inject.servlet.ManagedServletPipeline;

        r3 := @parameter0: javax.servlet.ServletRequest;

        r4 := @parameter1: javax.servlet.ServletResponse;

        r1 = r0.<com.google.inject.servlet.ManagedServletPipeline: com.google.inject.servlet.ServletDefinition[] servletDefinitions>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $z0 = virtualinvoke r2.<com.google.inject.servlet.ServletDefinition: boolean service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r3, r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public void destroy()
    {
        com.google.inject.servlet.ServletDefinition[] r3;
        java.util.IdentityHashMap $r0;
        com.google.inject.servlet.ManagedServletPipeline r2;
        com.google.inject.servlet.ServletDefinition r4;
        int i0, i1;
        java.util.Set $r1;

        r2 := @this: com.google.inject.servlet.ManagedServletPipeline;

        $r0 = staticinvoke <com.google.inject.internal.util.$Maps: java.util.IdentityHashMap newIdentityHashMap()>();

        $r1 = staticinvoke <com.google.inject.internal.util.$Sets: java.util.Set newSetFromMap(java.util.Map)>($r0);

        r3 = r2.<com.google.inject.servlet.ManagedServletPipeline: com.google.inject.servlet.ServletDefinition[] servletDefinitions>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        virtualinvoke r4.<com.google.inject.servlet.ServletDefinition: void destroy(java.util.Set)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)
    {
        com.google.inject.servlet.ServletDefinition r3;
        com.google.inject.servlet.ManagedServletPipeline$1 $r4;
        com.google.inject.servlet.ServletDefinition[] r2;
        com.google.inject.servlet.ManagedServletPipeline r1;
        int i0, i1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: com.google.inject.servlet.ManagedServletPipeline;

        r0 := @parameter0: java.lang.String;

        r2 = r1.<com.google.inject.servlet.ManagedServletPipeline: com.google.inject.servlet.ServletDefinition[] servletDefinitions>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke r3.<com.google.inject.servlet.ServletDefinition: boolean shouldServe(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        $r4 = new com.google.inject.servlet.ManagedServletPipeline$1;

        specialinvoke $r4.<com.google.inject.servlet.ManagedServletPipeline$1: void <init>(com.google.inject.servlet.ManagedServletPipeline,java.lang.String,com.google.inject.servlet.ServletDefinition)>(r1, r0, r3);

        return $r4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        com.google.inject.TypeLiteral $r0;

        <com.google.inject.servlet.ManagedServletPipeline: java.lang.String REQUEST_DISPATCHER_REQUEST> = "javax.servlet.forward.servlet_path";

        $r0 = staticinvoke <com.google.inject.TypeLiteral: com.google.inject.TypeLiteral get(java.lang.Class)>(class "Lcom/google/inject/servlet/ServletDefinition;");

        <com.google.inject.servlet.ManagedServletPipeline: com.google.inject.TypeLiteral SERVLET_DEFS> = $r0;

        return;
    }
}
