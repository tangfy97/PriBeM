public class com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl extends com.hp.hpl.jena.util.iterator.NiceIterator implements com.hp.hpl.jena.rdf.model.NodeIterator
{
    protected com.hp.hpl.jena.rdf.model.Statement recent;
    protected final com.hp.hpl.jena.rdf.model.Container cont;
    protected int size;
    protected int index;
    protected int numDeleted;
    protected final java.util.List moved;
    protected final java.util.Iterator iterator;

    public void <init>(java.util.Iterator, java.lang.Object, com.hp.hpl.jena.rdf.model.Container)
    {
        com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl r0;
        java.util.Iterator r2;
        int $i0;
        java.lang.Object r4;
        com.hp.hpl.jena.rdf.model.Container r3;
        java.util.ArrayList $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl;

        r2 := @parameter0: java.util.Iterator;

        r4 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.hp.hpl.jena.rdf.model.Container;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: void <init>()>();

        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.Statement recent> = null;

        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int index> = 0;

        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int numDeleted> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: java.util.List moved> = $r1;

        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: java.util.Iterator iterator> = r2;

        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.Container cont> = r3;

        $i0 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.model.Container: int size()>();

        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int size> = $i0;

        return;
    }

    public com.hp.hpl.jena.rdf.model.RDFNode next() throws java.util.NoSuchElementException
    {
        com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl r0;
        java.util.Iterator $r1;
        com.hp.hpl.jena.rdf.model.RDFNode $r5;
        com.hp.hpl.jena.rdf.model.Statement $r3, $r4;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: java.util.Iterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.hp.hpl.jena.rdf.model.Statement) $r2;

        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.Statement recent> = $r3;

        $i0 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int index>;

        $i1 = $i0 + 1;

        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int index> = $i1;

        $r4 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.Statement recent>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        return $r5;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public com.hp.hpl.jena.rdf.model.RDFNode nextNode() throws java.util.NoSuchElementException
    {
        com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.RDFNode next()>();

        return $r1;
    }

    public void remove() throws java.util.NoSuchElementException
    {
        com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl r0;
        java.lang.Integer $r5, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.util.NoSuchElementException $r14;
        java.util.Iterator $r2;
        com.hp.hpl.jena.rdf.model.impl.ContainerI $r9;
        com.hp.hpl.jena.rdf.model.RDFNode $r13;
        com.hp.hpl.jena.rdf.model.Statement $r1, $r3, $r12;
        com.hp.hpl.jena.rdf.model.Container $r4, $r7;
        java.util.List $r6, $r8;
        java.lang.Object $r10;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.Statement recent>;

        if $r1 != null goto label1;

        $r14 = new java.util.NoSuchElementException;

        specialinvoke $r14.<java.util.NoSuchElementException: void <init>()>();

        throw $r14;

     label1:
        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: java.util.Iterator iterator>;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        $i3 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int index>;

        $i1 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int size>;

        $i0 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int numDeleted>;

        $i2 = $i1 - $i0;

        if $i3 <= $i2 goto label2;

        $r7 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.Container cont>;

        $r9 = (com.hp.hpl.jena.rdf.model.impl.ContainerI) $r7;

        $r8 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: java.util.List moved>;

        $i8 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int size>;

        $i7 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int index>;

        $i9 = $i8 - $i7;

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i9);

        $r11 = (java.lang.Integer) $r10;

        $i10 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $r12 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.Statement recent>;

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        interfaceinvoke $r9.<com.hp.hpl.jena.rdf.model.impl.ContainerI: com.hp.hpl.jena.rdf.model.Container remove(int,com.hp.hpl.jena.rdf.model.RDFNode)>($i10, $r13);

        goto label3;

     label2:
        $r4 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.Container cont>;

        $r3 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.Statement recent>;

        interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Container: com.hp.hpl.jena.rdf.model.Container remove(com.hp.hpl.jena.rdf.model.Statement)>($r3);

        $r6 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: java.util.List moved>;

        $r5 = new java.lang.Integer;

        $i4 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int index>;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i4);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

     label3:
        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.Statement recent> = null;

        $i5 = r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int numDeleted>;

        $i6 = $i5 + 1;

        r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: int numDeleted> = $i6;

        return;
    }

    public volatile java.lang.Object next()
    {
        com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl: com.hp.hpl.jena.rdf.model.RDFNode next()>();

        return $r1;
    }
}
