public class com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker extends java.lang.Object implements com.hp.hpl.jena.sparql.syntax.ElementVisitor
{
    protected final com.hp.hpl.jena.sparql.syntax.ElementVisitor proc;
    protected final com.hp.hpl.jena.sparql.syntax.ElementVisitor beforeVisitor;
    protected final com.hp.hpl.jena.sparql.syntax.ElementVisitor afterVisitor;

    protected void <init>(com.hp.hpl.jena.sparql.syntax.ElementVisitor, com.hp.hpl.jena.sparql.syntax.ElementVisitor, com.hp.hpl.jena.sparql.syntax.ElementVisitor)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor r1, r2, r3;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementVisitor;

        r2 := @parameter1: com.hp.hpl.jena.sparql.syntax.ElementVisitor;

        r3 := @parameter2: com.hp.hpl.jena.sparql.syntax.ElementVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc> = r1;

        r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor beforeVisitor> = r2;

        r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor afterVisitor> = r3;

        return;
    }

    private void before(com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r1, $r3;
        com.hp.hpl.jena.sparql.syntax.Element r2;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r2 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor beforeVisitor>;

        if $r1 == null goto label1;

        $r3 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor beforeVisitor>;

        virtualinvoke r2.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>($r3);

     label1:
        return;
    }

    private void after(com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r1, $r3;
        com.hp.hpl.jena.sparql.syntax.Element r2;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r2 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor afterVisitor>;

        if $r1 == null goto label1;

        $r3 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor afterVisitor>;

        virtualinvoke r2.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>($r3);

     label1:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementTriplesBlock)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r2;
        com.hp.hpl.jena.sparql.syntax.ElementTriplesBlock r1;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementTriplesBlock;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementTriplesBlock)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementFilter)
    {
        com.hp.hpl.jena.sparql.syntax.ElementFilter r1;
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r2;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementFilter;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementFilter)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementAssign)
    {
        com.hp.hpl.jena.sparql.syntax.ElementAssign r1;
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r2;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementAssign;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementAssign)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementBind)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r2;
        com.hp.hpl.jena.sparql.syntax.ElementBind r1;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementBind;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementBind)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementData)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r2;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;
        com.hp.hpl.jena.sparql.syntax.ElementData r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementData;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementData)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementUnion)
    {
        com.hp.hpl.jena.sparql.syntax.ElementUnion r1;
        java.util.Iterator $r3;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r4;
        com.hp.hpl.jena.sparql.syntax.Element r6;
        java.lang.Object $r5;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementUnion;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementUnion: java.util.List getElements()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.sparql.syntax.Element) $r5;

        virtualinvoke r6.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>(r0);

        goto label1;

     label2:
        $r4 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r4.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementUnion)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementGroup)
    {
        java.util.Iterator $r3;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r4;
        com.hp.hpl.jena.sparql.syntax.ElementGroup r1;
        com.hp.hpl.jena.sparql.syntax.Element r6;
        java.lang.Object $r5;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementGroup;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementGroup: java.util.List getElements()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.sparql.syntax.Element) $r5;

        virtualinvoke r6.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>(r0);

        goto label1;

     label2:
        $r4 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r4.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementGroup)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementOptional)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r3;
        com.hp.hpl.jena.sparql.syntax.ElementOptional r1;
        com.hp.hpl.jena.sparql.syntax.Element $r2, $r4;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementOptional;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementOptional: com.hp.hpl.jena.sparql.syntax.Element getOptionalElement()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementOptional: com.hp.hpl.jena.sparql.syntax.Element getOptionalElement()>();

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>(r0);

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementOptional)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementDataset)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r3;
        com.hp.hpl.jena.sparql.syntax.ElementDataset r1;
        com.hp.hpl.jena.sparql.syntax.Element $r2, $r4;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementDataset;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementDataset: com.hp.hpl.jena.sparql.syntax.Element getPatternElement()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementDataset: com.hp.hpl.jena.sparql.syntax.Element getPatternElement()>();

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>(r0);

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementDataset)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementNamedGraph)
    {
        com.hp.hpl.jena.sparql.syntax.ElementNamedGraph r1;
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r3;
        com.hp.hpl.jena.sparql.syntax.Element $r2, $r4;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementNamedGraph;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementNamedGraph: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementNamedGraph: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>(r0);

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementNamedGraph)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementService)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r3;
        com.hp.hpl.jena.sparql.syntax.Element $r2, $r4;
        com.hp.hpl.jena.sparql.syntax.ElementService r1;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementService;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>(r0);

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementService)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementExists)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r2;
        com.hp.hpl.jena.sparql.syntax.ElementExists r1;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementExists;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementExists)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementNotExists)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r2;
        com.hp.hpl.jena.sparql.syntax.ElementNotExists r1;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementNotExists;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementNotExists)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementMinus)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r3;
        com.hp.hpl.jena.sparql.syntax.ElementMinus r1;
        com.hp.hpl.jena.sparql.syntax.Element $r2, $r4;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementMinus;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementMinus: com.hp.hpl.jena.sparql.syntax.Element getMinusElement()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementMinus: com.hp.hpl.jena.sparql.syntax.Element getMinusElement()>();

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>(r0);

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementMinus)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementSubQuery)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r2;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;
        com.hp.hpl.jena.sparql.syntax.ElementSubQuery r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementSubQuery;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementSubQuery)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementPathBlock)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor $r2;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r1;
        com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void before(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: com.hp.hpl.jena.sparql.syntax.ElementVisitor proc>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementPathBlock)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementWalker$Walker: void after(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }
}
