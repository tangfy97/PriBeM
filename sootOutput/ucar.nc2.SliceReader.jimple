class ucar.nc2.SliceReader extends java.lang.Object implements ucar.nc2.ProxyReader
{
    private static org.slf4j.Logger log;
    private ucar.nc2.Variable orgClient;
    private int sliceDim;
    private ucar.ma2.Section slice;

    void <init>(ucar.nc2.Variable, int, ucar.ma2.Section) throws ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r2;
        ucar.nc2.SliceReader r0;
        int i0;
        ucar.nc2.Variable r1;

        r0 := @this: ucar.nc2.SliceReader;

        r1 := @parameter0: ucar.nc2.Variable;

        i0 := @parameter1: int;

        r2 := @parameter2: ucar.ma2.Section;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.SliceReader: ucar.nc2.Variable orgClient> = r1;

        r0.<ucar.nc2.SliceReader: int sliceDim> = i0;

        r0.<ucar.nc2.SliceReader: ucar.ma2.Section slice> = r2;

        return;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.IllegalStateException $r12;
        ucar.ma2.Section $r1;
        ucar.nc2.SliceReader r0;
        ucar.nc2.util.CancelTask r14;
        int $i0;
        ucar.nc2.Variable $r2, r9;
        java.lang.String $r11, $r13;
        org.slf4j.Logger $r7;
        ucar.ma2.Array $r3, $r4;
        ucar.ma2.InvalidRangeException $r5;
        java.lang.StringBuilder $r6, $r8, $r10;

        r0 := @this: ucar.nc2.SliceReader;

        r9 := @parameter0: ucar.nc2.Variable;

        r14 := @parameter1: ucar.nc2.util.CancelTask;

     label1:
        $r2 = r0.<ucar.nc2.SliceReader: ucar.nc2.Variable orgClient>;

        $r1 = r0.<ucar.nc2.SliceReader: ucar.ma2.Section slice>;

        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.ma2.Array _read(ucar.ma2.Section)>($r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r7 = <ucar.nc2.SliceReader: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InvalidRangeException in slice, var=");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>($r11);

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke $r5.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label4:
        $i0 = r0.<ucar.nc2.SliceReader: int sliceDim>;

        $r4 = virtualinvoke $r3.<ucar.ma2.Array: ucar.ma2.Array reduce(int)>($i0);

        return $r4;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.ma2.Section, ucar.nc2.util.CancelTask) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Range $r5;
        ucar.ma2.Section $r0, r1, $r4;
        ucar.nc2.SliceReader r3;
        ucar.ma2.Array $r7;
        java.util.List $r2;
        ucar.nc2.util.CancelTask r9;
        int $i0, $i1, $i2;
        ucar.nc2.Variable $r6, r8;

        r3 := @this: ucar.nc2.SliceReader;

        r8 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: ucar.ma2.Section;

        r9 := @parameter2: ucar.nc2.util.CancelTask;

        $r0 = new ucar.ma2.Section;

        $r2 = virtualinvoke r1.<ucar.ma2.Section: java.util.List getRanges()>();

        specialinvoke $r0.<ucar.ma2.Section: void <init>(java.util.List)>($r2);

        $i1 = r3.<ucar.nc2.SliceReader: int sliceDim>;

        $r4 = r3.<ucar.nc2.SliceReader: ucar.ma2.Section slice>;

        $i0 = r3.<ucar.nc2.SliceReader: int sliceDim>;

        $r5 = virtualinvoke $r4.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>($i0);

        virtualinvoke $r0.<ucar.ma2.Section: ucar.ma2.Section insertRange(int,ucar.ma2.Range)>($i1, $r5);

        $r6 = r3.<ucar.nc2.SliceReader: ucar.nc2.Variable orgClient>;

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.Array _read(ucar.ma2.Section)>($r0);

        $i2 = r3.<ucar.nc2.SliceReader: int sliceDim>;

        virtualinvoke $r7.<ucar.ma2.Array: ucar.ma2.Array reduce(int)>($i2);

        return $r7;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/SliceReader;");

        <ucar.nc2.SliceReader: org.slf4j.Logger log> = $r0;

        return;
    }
}
