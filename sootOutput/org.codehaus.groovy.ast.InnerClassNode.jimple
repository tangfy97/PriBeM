public class org.codehaus.groovy.ast.InnerClassNode extends org.codehaus.groovy.ast.ClassNode
{
    private org.codehaus.groovy.ast.ClassNode outerClass;

    public void <init>(org.codehaus.groovy.ast.ClassNode, java.lang.String, int, org.codehaus.groovy.ast.ClassNode)
    {
        org.codehaus.groovy.ast.MixinNode[] $r4;
        org.codehaus.groovy.ast.ClassNode r1, r3;
        int i0;
        org.codehaus.groovy.ast.ClassNode[] $r5;
        java.lang.String r2;
        org.codehaus.groovy.ast.InnerClassNode r0;

        r0 := @this: org.codehaus.groovy.ast.InnerClassNode;

        r1 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: org.codehaus.groovy.ast.ClassNode;

        $r5 = <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode[] EMPTY_TYPE_ARRAY>;

        $r4 = <org.codehaus.groovy.ast.MixinNode: org.codehaus.groovy.ast.MixinNode[] EMPTY_ARRAY>;

        specialinvoke r0.<org.codehaus.groovy.ast.InnerClassNode: void <init>(org.codehaus.groovy.ast.ClassNode,java.lang.String,int,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode[],org.codehaus.groovy.ast.MixinNode[])>(r1, r2, i0, r3, $r5, $r4);

        return;
    }

    public void <init>(org.codehaus.groovy.ast.ClassNode, java.lang.String, int, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.ClassNode[], org.codehaus.groovy.ast.MixinNode[])
    {
        org.codehaus.groovy.ast.MixinNode[] r4;
        org.codehaus.groovy.ast.ClassNode r2, r5;
        int i0;
        org.codehaus.groovy.ast.ClassNode[] r3;
        java.lang.String r1;
        org.codehaus.groovy.ast.InnerClassNode r0;

        r0 := @this: org.codehaus.groovy.ast.InnerClassNode;

        r5 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: org.codehaus.groovy.ast.ClassNode;

        r3 := @parameter4: org.codehaus.groovy.ast.ClassNode[];

        r4 := @parameter5: org.codehaus.groovy.ast.MixinNode[];

        specialinvoke r0.<org.codehaus.groovy.ast.ClassNode: void <init>(java.lang.String,int,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode[],org.codehaus.groovy.ast.MixinNode[])>(r1, i0, r2, r3, r4);

        r0.<org.codehaus.groovy.ast.InnerClassNode: org.codehaus.groovy.ast.ClassNode outerClass> = r5;

        return;
    }

    public org.codehaus.groovy.ast.ClassNode getOuterClass()
    {
        org.codehaus.groovy.ast.ClassNode $r1;
        org.codehaus.groovy.ast.InnerClassNode r0;

        r0 := @this: org.codehaus.groovy.ast.InnerClassNode;

        $r1 = r0.<org.codehaus.groovy.ast.InnerClassNode: org.codehaus.groovy.ast.ClassNode outerClass>;

        return $r1;
    }

    public org.codehaus.groovy.ast.FieldNode getOuterField(java.lang.String)
    {
        org.codehaus.groovy.ast.ClassNode $r2;
        org.codehaus.groovy.ast.FieldNode $r3;
        java.lang.String r1;
        org.codehaus.groovy.ast.InnerClassNode r0;

        r0 := @this: org.codehaus.groovy.ast.InnerClassNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.ast.InnerClassNode: org.codehaus.groovy.ast.ClassNode outerClass>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.FieldNode getDeclaredField(java.lang.String)>(r1);

        return $r3;
    }
}
