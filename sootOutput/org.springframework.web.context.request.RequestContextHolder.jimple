public abstract class org.springframework.web.context.request.RequestContextHolder extends java.lang.Object
{
    private static final boolean jsfPresent;
    private static final java.lang.ThreadLocal requestAttributesHolder;
    private static final java.lang.ThreadLocal inheritableRequestAttributesHolder;

    static void <clinit>()
    {
        org.springframework.core.NamedInheritableThreadLocal $r3;
        java.lang.Class $r0;
        java.lang.ClassLoader $r1;
        boolean $z0;
        org.springframework.core.NamedThreadLocal $r2;

        $r0 = class "Lorg/springframework/web/context/request/RequestContextHolder;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>("javax.faces.context.FacesContext", $r1);

        <org.springframework.web.context.request.RequestContextHolder: boolean jsfPresent> = $z0;

        $r2 = new org.springframework.core.NamedThreadLocal;

        specialinvoke $r2.<org.springframework.core.NamedThreadLocal: void <init>(java.lang.String)>("Request attributes");

        <org.springframework.web.context.request.RequestContextHolder: java.lang.ThreadLocal requestAttributesHolder> = $r2;

        $r3 = new org.springframework.core.NamedInheritableThreadLocal;

        specialinvoke $r3.<org.springframework.core.NamedInheritableThreadLocal: void <init>(java.lang.String)>("Request context");

        <org.springframework.web.context.request.RequestContextHolder: java.lang.ThreadLocal inheritableRequestAttributesHolder> = $r3;

        return;
    }

    public void <init>()
    {
        org.springframework.web.context.request.RequestContextHolder r0;

        r0 := @this: org.springframework.web.context.request.RequestContextHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void resetRequestAttributes()
    {
        java.lang.ThreadLocal $r0, $r1;

        $r0 = <org.springframework.web.context.request.RequestContextHolder: java.lang.ThreadLocal requestAttributesHolder>;

        virtualinvoke $r0.<java.lang.ThreadLocal: void remove()>();

        $r1 = <org.springframework.web.context.request.RequestContextHolder: java.lang.ThreadLocal inheritableRequestAttributesHolder>;

        virtualinvoke $r1.<java.lang.ThreadLocal: void remove()>();

        return;
    }

    public static void setRequestAttributes(org.springframework.web.context.request.RequestAttributes)
    {
        org.springframework.web.context.request.RequestAttributes r0;

        r0 := @parameter0: org.springframework.web.context.request.RequestAttributes;

        staticinvoke <org.springframework.web.context.request.RequestContextHolder: void setRequestAttributes(org.springframework.web.context.request.RequestAttributes,boolean)>(r0, 0);

        return;
    }

    public static void setRequestAttributes(org.springframework.web.context.request.RequestAttributes, boolean)
    {
        java.lang.ThreadLocal $r1, $r2, $r3, $r4;
        org.springframework.web.context.request.RequestAttributes r0;
        boolean z0;

        r0 := @parameter0: org.springframework.web.context.request.RequestAttributes;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        staticinvoke <org.springframework.web.context.request.RequestContextHolder: void resetRequestAttributes()>();

        goto label3;

     label1:
        if z0 == 0 goto label2;

        $r3 = <org.springframework.web.context.request.RequestContextHolder: java.lang.ThreadLocal inheritableRequestAttributesHolder>;

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>(r0);

        $r4 = <org.springframework.web.context.request.RequestContextHolder: java.lang.ThreadLocal requestAttributesHolder>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void remove()>();

        goto label3;

     label2:
        $r1 = <org.springframework.web.context.request.RequestContextHolder: java.lang.ThreadLocal requestAttributesHolder>;

        virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>(r0);

        $r2 = <org.springframework.web.context.request.RequestContextHolder: java.lang.ThreadLocal inheritableRequestAttributesHolder>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void remove()>();

     label3:
        return;
    }

    public static org.springframework.web.context.request.RequestAttributes getRequestAttributes()
    {
        java.lang.ThreadLocal $r0, $r2;
        org.springframework.web.context.request.RequestAttributes r4;
        java.lang.Object $r1, $r3;

        $r0 = <org.springframework.web.context.request.RequestContextHolder: java.lang.ThreadLocal requestAttributesHolder>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r4 = (org.springframework.web.context.request.RequestAttributes) $r1;

        if r4 != null goto label1;

        $r2 = <org.springframework.web.context.request.RequestContextHolder: java.lang.ThreadLocal inheritableRequestAttributesHolder>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        r4 = (org.springframework.web.context.request.RequestAttributes) $r3;

     label1:
        return r4;
    }

    public static org.springframework.web.context.request.RequestAttributes currentRequestAttributes() throws java.lang.IllegalStateException
    {
        java.lang.IllegalStateException $r1;
        org.springframework.web.context.request.RequestAttributes $r0, r2;
        boolean $z0;

        $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>();

        r2 = $r0;

        if $r0 != null goto label2;

        $z0 = <org.springframework.web.context.request.RequestContextHolder: boolean jsfPresent>;

        if $z0 == 0 goto label1;

        r2 = staticinvoke <org.springframework.web.context.request.RequestContextHolder$FacesRequestAttributesFactory: org.springframework.web.context.request.RequestAttributes getFacesRequestAttributes()>();

     label1:
        if r2 != null goto label2;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet/DispatcherPortlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.");

        throw $r1;

     label2:
        return r2;
    }
}
