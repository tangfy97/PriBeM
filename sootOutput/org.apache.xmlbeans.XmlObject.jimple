public interface  org.apache.xmlbeans.XmlObject extends java.lang.Object implements org.apache.xmlbeans.XmlTokenSource
{
    public static final org.apache.xmlbeans.SchemaType type;
    public static final int LESS_THAN;
    public static final int EQUAL;
    public static final int GREATER_THAN;
    public static final int NOT_EQUAL;

    public abstract org.apache.xmlbeans.SchemaType schemaType();

    public abstract boolean validate();

    public abstract boolean validate(org.apache.xmlbeans.XmlOptions);

    public abstract org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String);

    public abstract org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String, org.apache.xmlbeans.XmlOptions);

    public abstract org.apache.xmlbeans.XmlObject[] execQuery(java.lang.String);

    public abstract org.apache.xmlbeans.XmlObject[] execQuery(java.lang.String, org.apache.xmlbeans.XmlOptions);

    public abstract org.apache.xmlbeans.XmlObject changeType(org.apache.xmlbeans.SchemaType);

    public abstract org.apache.xmlbeans.XmlObject substitute(javax.xml.namespace.QName, org.apache.xmlbeans.SchemaType);

    public abstract boolean isNil();

    public abstract void setNil();

    public abstract java.lang.String toString();

    public abstract boolean isImmutable();

    public abstract org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject);

    public abstract org.apache.xmlbeans.XmlObject copy();

    public abstract org.apache.xmlbeans.XmlObject copy(org.apache.xmlbeans.XmlOptions);

    public abstract boolean valueEquals(org.apache.xmlbeans.XmlObject);

    public abstract int valueHashCode();

    public abstract int compareTo(java.lang.Object);

    public abstract int compareValue(org.apache.xmlbeans.XmlObject);

    public abstract org.apache.xmlbeans.XmlObject[] selectChildren(javax.xml.namespace.QName);

    public abstract org.apache.xmlbeans.XmlObject[] selectChildren(java.lang.String, java.lang.String);

    public abstract org.apache.xmlbeans.XmlObject[] selectChildren(org.apache.xmlbeans.QNameSet);

    public abstract org.apache.xmlbeans.XmlObject selectAttribute(javax.xml.namespace.QName);

    public abstract org.apache.xmlbeans.XmlObject selectAttribute(java.lang.String, java.lang.String);

    public abstract org.apache.xmlbeans.XmlObject[] selectAttributes(org.apache.xmlbeans.QNameSet);

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaType $r1;
        org.apache.xmlbeans.SchemaTypeSystem $r0;

        <org.apache.xmlbeans.XmlObject: int NOT_EQUAL> = 2;

        <org.apache.xmlbeans.XmlObject: int GREATER_THAN> = 1;

        <org.apache.xmlbeans.XmlObject: int EQUAL> = 0;

        <org.apache.xmlbeans.XmlObject: int LESS_THAN> = -1;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem getBuiltinTypeSystem()>();

        $r1 = interfaceinvoke $r0.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaType typeForHandle(java.lang.String)>("_BI_anyType");

        <org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType type> = $r1;

        return;
    }
}
