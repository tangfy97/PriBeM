final class org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool extends java.lang.Object implements org.apache.xerces.xni.grammars.XMLGrammarPool
{
    private final org.apache.xerces.xni.grammars.XMLGrammarPool core;

    public void <init>(org.apache.xerces.xni.grammars.XMLGrammarPool)
    {
        org.apache.xerces.xni.grammars.XMLGrammarPool r1;
        org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool r0;

        r0 := @this: org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool;

        r1 := @parameter0: org.apache.xerces.xni.grammars.XMLGrammarPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool: org.apache.xerces.xni.grammars.XMLGrammarPool core> = r1;

        return;
    }

    public void cacheGrammars(java.lang.String, org.apache.xerces.xni.grammars.Grammar[])
    {
        java.lang.String r1;
        org.apache.xerces.xni.grammars.Grammar[] r2;
        org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool r0;

        r0 := @this: org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xerces.xni.grammars.Grammar[];

        return;
    }

    public void clear()
    {
        org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool r0;

        r0 := @this: org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool;

        return;
    }

    public void lockPool()
    {
        org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool r0;

        r0 := @this: org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool;

        return;
    }

    public org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)
    {
        org.apache.xerces.xni.grammars.XMLGrammarPool $r2;
        org.apache.xerces.xni.grammars.Grammar $r3;
        org.apache.xerces.xni.grammars.XMLGrammarDescription r1;
        org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool r0;

        r0 := @this: org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool;

        r1 := @parameter0: org.apache.xerces.xni.grammars.XMLGrammarDescription;

        $r2 = r0.<org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool: org.apache.xerces.xni.grammars.XMLGrammarPool core>;

        $r3 = interfaceinvoke $r2.<org.apache.xerces.xni.grammars.XMLGrammarPool: org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)>(r1);

        return $r3;
    }

    public org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)
    {
        org.apache.xerces.xni.grammars.XMLGrammarPool $r2;
        java.lang.String r1;
        org.apache.xerces.xni.grammars.Grammar[] $r3;
        org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool r0;

        r0 := @this: org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool: org.apache.xerces.xni.grammars.XMLGrammarPool core>;

        $r3 = interfaceinvoke $r2.<org.apache.xerces.xni.grammars.XMLGrammarPool: org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)>(r1);

        return $r3;
    }

    public void unlockPool()
    {
        org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool r0;

        r0 := @this: org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool;

        return;
    }
}
