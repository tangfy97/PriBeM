public class org.apache.poi.xslf.util.PPTX2PNG extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.xslf.util.PPTX2PNG r0;

        r0 := @this: org.apache.poi.xslf.util.PPTX2PNG;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void usage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Usage: PPTX2PNG [options] <pptx file>");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Options:");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("    -scale <float>   scale factor");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("    -slide <integer> 1-based index of a slide to render");

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.awt.Color $r32;
        org.apache.poi.xslf.usermodel.XSLFSlide[] $r9;
        java.lang.StringBuilder $r3, $r4, $r15, $r16, $r18, $r19, $r20, $r36, $r37, $r38, $r39, $r52, $r54, $r55, $r57;
        org.apache.poi.xslf.usermodel.XSLFSlide $r11, $r33;
        java.lang.String $r5, $r12, $r21, $r35, $r40, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, r50, $r51;
        java.io.FileOutputStream $r58;
        java.awt.RenderingHints$Key $r25, $r27, $r29, $r31;
        boolean $z0, $z1, $z2;
        java.awt.image.BufferedImage $r56;
        java.awt.Dimension $r8;
        org.apache.poi.openxml4j.opc.OPCPackage $r7;
        float $f0, $f1, $f2, $f3, f4;
        java.lang.String[] r0;
        java.awt.Graphics2D $r23;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, $i14, $i16, $i18, $i20;
        double $d0, $d1;
        java.io.PrintStream $r2, $r10, $r14;
        org.apache.poi.xslf.usermodel.XMLSlideShow $r53;
        java.lang.Object $r24, $r26, $r28, $r30;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label01;

        staticinvoke <org.apache.poi.xslf.util.PPTX2PNG: void usage()>();

        return;

     label01:
        $i16 = (int) -1;

        i11 = $i16;

        f4 = 1.0F;

        r50 = null;

        i12 = 0;

     label02:
        $i1 = lengthof r0;

        if i12 >= $i1 goto label06;

        $r43 = r0[i12];

        $z0 = virtualinvoke $r43.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 == 0 goto label04;

        $r45 = "-scale";

        $r44 = r0[i12];

        $z1 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r44);

        if $z1 == 0 goto label03;

        i12 = i12 + 1;

        $r49 = r0[i12];

        f4 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r49);

        goto label05;

     label03:
        $r47 = "-slide";

        $r46 = r0[i12];

        $z2 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>($r46);

        if $z2 == 0 goto label05;

        i12 = i12 + 1;

        $r48 = r0[i12];

        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r48);

        goto label05;

     label04:
        r50 = r0[i12];

     label05:
        i12 = i12 + 1;

        goto label02;

     label06:
        if r50 != null goto label07;

        staticinvoke <org.apache.poi.xslf.util.PPTX2PNG: void usage()>();

        return;

     label07:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r53 = new org.apache.poi.xslf.usermodel.XMLSlideShow;

        $r7 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.lang.String)>(r50);

        specialinvoke $r53.<org.apache.poi.xslf.usermodel.XMLSlideShow: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>($r7);

        $r8 = virtualinvoke $r53.<org.apache.poi.xslf.usermodel.XMLSlideShow: java.awt.Dimension getPageSize()>();

        $i2 = $r8.<java.awt.Dimension: int width>;

        $f0 = (float) $i2;

        $f1 = $f0 * f4;

        i3 = (int) $f1;

        $i4 = $r8.<java.awt.Dimension: int height>;

        $f2 = (float) $i4;

        $f3 = $f2 * f4;

        i5 = (int) $f3;

        $r9 = virtualinvoke $r53.<org.apache.poi.xslf.usermodel.XMLSlideShow: org.apache.poi.xslf.usermodel.XSLFSlide[] getSlides()>();

        i13 = 0;

     label08:
        $i6 = lengthof $r9;

        if i13 >= $i6 goto label15;

        $i18 = (int) -1;

        if i11 == $i18 goto label09;

        $i10 = i13 + 1;

        if i11 == $i10 goto label09;

        goto label14;

     label09:
        $r11 = $r9[i13];

        $r12 = virtualinvoke $r11.<org.apache.poi.xslf.usermodel.XSLFSlide: java.lang.String getTitle()>();

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rendering slide ");

        $i7 = i13 + 1;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        if $r12 != null goto label10;

        $r51 = "";

        goto label11;

     label10:
        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r51 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r21);

        $r56 = new java.awt.image.BufferedImage;

        specialinvoke $r56.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i3, i5, 1);

        $r23 = virtualinvoke $r56.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $r25 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r24 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r23.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r25, $r24);

        $r27 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_RENDERING>;

        $r26 = <java.awt.RenderingHints: java.lang.Object VALUE_RENDER_QUALITY>;

        virtualinvoke $r23.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r27, $r26);

        $r29 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_INTERPOLATION>;

        $r28 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BICUBIC>;

        virtualinvoke $r23.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r29, $r28);

        $r31 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_FRACTIONALMETRICS>;

        $r30 = <java.awt.RenderingHints: java.lang.Object VALUE_FRACTIONALMETRICS_ON>;

        virtualinvoke $r23.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r31, $r30);

        $r32 = <java.awt.Color: java.awt.Color white>;

        virtualinvoke $r23.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r32);

        virtualinvoke $r23.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(0, 0, i3, i5);

        $d1 = (double) f4;

        $d0 = (double) f4;

        virtualinvoke $r23.<java.awt.Graphics2D: void scale(double,double)>($d1, $d0);

        $r33 = $r9[i13];

        virtualinvoke $r33.<org.apache.poi.xslf.usermodel.XSLFSlide: void draw(java.awt.Graphics2D)>($r23);

        $i8 = virtualinvoke r50.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r42 = r50;

        $i20 = (int) -1;

        if $i8 != $i20 goto label12;

        $i14 = virtualinvoke r50.<java.lang.String: int length()>();

        goto label13;

     label12:
        $i14 = $i8;

     label13:
        $r35 = virtualinvoke $r42.<java.lang.String: java.lang.String substring(int,int)>(0, $i14);

        $r36 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i9 = i13 + 1;

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = new java.io.FileOutputStream;

        specialinvoke $r58.<java.io.FileOutputStream: void <init>(java.lang.String)>($r40);

        staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>($r56, "png", $r58);

        virtualinvoke $r58.<java.io.FileOutputStream: void close()>();

     label14:
        i13 = i13 + 1;

        goto label08;

     label15:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Done");

        return;
    }
}
