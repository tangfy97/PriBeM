public class org.eclipse.jetty.servlet.NoJspServlet extends javax.servlet.http.HttpServlet
{
    private boolean _warned;

    public void <init>()
    {
        org.eclipse.jetty.servlet.NoJspServlet r0;

        r0 := @this: org.eclipse.jetty.servlet.NoJspServlet;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        return;
    }

    protected void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r3;
        javax.servlet.http.HttpServletResponse r1;
        org.eclipse.jetty.servlet.NoJspServlet r0;
        javax.servlet.ServletContext $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.NoJspServlet;

        r3 := @parameter0: javax.servlet.http.HttpServletRequest;

        r1 := @parameter1: javax.servlet.http.HttpServletResponse;

        $z0 = r0.<org.eclipse.jetty.servlet.NoJspServlet: boolean _warned>;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.servlet.NoJspServlet: javax.servlet.ServletContext getServletContext()>();

        interfaceinvoke $r2.<javax.servlet.ServletContext: void log(java.lang.String)>("No JSP support.  Check that JSP jars are in lib/jsp and that the JSP option has been specified to start.jar");

     label1:
        r0.<org.eclipse.jetty.servlet.NoJspServlet: boolean _warned> = 1;

        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(500, "JSP support not configured");

        return;
    }
}
