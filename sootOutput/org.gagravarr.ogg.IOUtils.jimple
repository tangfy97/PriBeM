public class org.gagravarr.ogg.IOUtils extends java.lang.Object
{

    public void <init>()
    {
        org.gagravarr.ogg.IOUtils r0;

        r0 := @this: org.gagravarr.ogg.IOUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void readFully(java.io.InputStream, byte[]) throws java.io.IOException
    {
        int $i0;
        byte[] r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: byte[];

        $i0 = lengthof r1;

        staticinvoke <org.gagravarr.ogg.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>(r0, r1, 0, $i0);

        return;
    }

    public static void readFully(java.io.InputStream, byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        int i0, i1, $i2, $i3, $i4, i5, $i7;
        java.lang.String $r10;
        java.io.IOException $r12;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r11;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        i5 = 0;

     label1:
        if i5 >= i0 goto label3;

        $i3 = i1 + i5;

        $i2 = i0 - i5;

        $i4 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, $i3, $i2);

        $i7 = (int) -1;

        if $i4 != $i7 goto label2;

        $r12 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asked to read ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes from ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but hit EoF at ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r12;

     label2:
        i5 = i5 + $i4;

        goto label1;

     label3:
        return;
    }

    public static int toInt(byte)
    {
        short $s1, $s3;
        byte b0;
        int $i2, $i4, $i5;

        b0 := @parameter0: byte;

        $i2 = (int) b0;

        if $i2 >= 0 goto label1;

        $s3 = (short) b0;

        $s1 = $s3 & 255;

        $i4 = (int) $s1;

        return $i4;

     label1:
        $i5 = (int) b0;

        return $i5;
    }

    public static byte fromInt(int)
    {
        java.lang.IllegalArgumentException $r0;
        byte $b1, $b3;
        int i0, $i2;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 <= 256 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" too big");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label1:
        if i0 <= 127 goto label2;

        $i2 = i0 - 256;

        $b3 = (byte) $i2;

        return $b3;

     label2:
        $b1 = (byte) i0;

        return $b1;
    }

    public static int getInt2(byte[])
    {
        int $i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.gagravarr.ogg.IOUtils: int getInt2(byte[],int)>(r0, 0);

        return $i0;
    }

    public static int getInt2(byte[], int)
    {
        byte[] r0;
        short s2, s4, $s7, $s8;
        byte $b1, $b3;
        int i0, $i5, i6, $i9, $i10;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i6 = i0 + 1;

        $b1 = r0[i0];

        $s7 = (short) $b1;

        s2 = $s7 & 255;

        $b3 = r0[i6];

        $s8 = (short) $b3;

        s4 = $s8 & 255;

        $i9 = (int) s2;

        $i10 = (int) s4;

        $i5 = staticinvoke <org.gagravarr.ogg.IOUtils: int getInt(int,int)>($i9, $i10);

        return $i5;
    }

    public static long getInt3(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt3(byte[],int)>(r0, 0);

        return $l0;
    }

    public static long getInt3(byte[], int)
    {
        byte[] r0;
        long $l7;
        short s2, s4, s6, $s10, $s11, $s12;
        byte $b1, $b3, $b5;
        int i0, i8, i9, $i13, $i14, $i15;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i8 = i0 + 1;

        $b1 = r0[i0];

        $s10 = (short) $b1;

        s2 = $s10 & 255;

        i9 = i8 + 1;

        $b3 = r0[i8];

        $s11 = (short) $b3;

        s4 = $s11 & 255;

        $b5 = r0[i9];

        $s12 = (short) $b5;

        s6 = $s12 & 255;

        $i13 = (int) s2;

        $i14 = (int) s4;

        $i15 = (int) s6;

        $l7 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt(int,int,int)>($i13, $i14, $i15);

        return $l7;
    }

    public static long getInt4(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt4(byte[],int)>(r0, 0);

        return $l0;
    }

    public static long getInt4(byte[], int)
    {
        byte[] r0;
        long $l9;
        short s2, s4, s6, s8, $s13, $s14, $s15, $s16;
        byte $b1, $b3, $b5, $b7;
        int i0, i10, i11, i12, $i17, $i18, $i19, $i20;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i10 = i0 + 1;

        $b1 = r0[i0];

        $s13 = (short) $b1;

        s2 = $s13 & 255;

        i11 = i10 + 1;

        $b3 = r0[i10];

        $s14 = (short) $b3;

        s4 = $s14 & 255;

        i12 = i11 + 1;

        $b5 = r0[i11];

        $s15 = (short) $b5;

        s6 = $s15 & 255;

        $b7 = r0[i12];

        $s16 = (short) $b7;

        s8 = $s16 & 255;

        $i17 = (int) s2;

        $i18 = (int) s4;

        $i19 = (int) s6;

        $i20 = (int) s8;

        $l9 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt(int,int,int,int)>($i17, $i18, $i19, $i20);

        return $l9;
    }

    public static long getInt8(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt8(byte[],int)>(r0, 0);

        return $l0;
    }

    public static long getInt8(byte[], int)
    {
        byte[] r0;
        byte $b1, $b3, $b5, $b7, $b9, $b11, $b13, $b15;
        long $l17;
        short s2, s4, s6, s8, s10, s12, s14, s16, $s25, $s26, $s27, $s28, $s29, $s30, $s31, $s32;
        int i0, i18, i19, i20, i21, i22, i23, i24, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i18 = i0 + 1;

        $b1 = r0[i0];

        $s25 = (short) $b1;

        s2 = $s25 & 255;

        i19 = i18 + 1;

        $b3 = r0[i18];

        $s26 = (short) $b3;

        s4 = $s26 & 255;

        i20 = i19 + 1;

        $b5 = r0[i19];

        $s27 = (short) $b5;

        s6 = $s27 & 255;

        i21 = i20 + 1;

        $b7 = r0[i20];

        $s28 = (short) $b7;

        s8 = $s28 & 255;

        i22 = i21 + 1;

        $b9 = r0[i21];

        $s29 = (short) $b9;

        s10 = $s29 & 255;

        i23 = i22 + 1;

        $b11 = r0[i22];

        $s30 = (short) $b11;

        s12 = $s30 & 255;

        i24 = i23 + 1;

        $b13 = r0[i23];

        $s31 = (short) $b13;

        s14 = $s31 & 255;

        $b15 = r0[i24];

        $s32 = (short) $b15;

        s16 = $s32 & 255;

        $i33 = (int) s2;

        $i34 = (int) s4;

        $i35 = (int) s6;

        $i36 = (int) s8;

        $i37 = (int) s10;

        $i38 = (int) s12;

        $i39 = (int) s14;

        $i40 = (int) s16;

        $l17 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt(int,int,int,int,int,int,int,int)>($i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40);

        return $l17;
    }

    public static int getInt(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $i3 = i0 << 8;

        $i2 = i1 << 0;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public static long getInt(int, int, int)
    {
        long $l8;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7;

        i4 := @parameter0: int;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $i3 = i0 << 16;

        $i2 = i1 << 8;

        $i6 = $i3 + $i2;

        $i5 = i4 << 0;

        $i7 = $i6 + $i5;

        $l8 = (long) $i7;

        return $l8;
    }

    public static long getInt(int, int, int, int)
    {
        long $l11;
        int i0, i1, $i2, $i3, i4, $i5, $i6, i7, $i8, $i9, $i10;

        i7 := @parameter0: int;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        $i3 = i0 << 24;

        $i2 = i1 << 16;

        $i6 = $i3 + $i2;

        $i5 = i4 << 8;

        $i9 = $i6 + $i5;

        $i8 = i7 << 0;

        $i10 = $i9 + $i8;

        $l11 = (long) $i10;

        return $l11;
    }

    public static long getInt(int, int, int, int, int, int, int, int)
    {
        long $l9, $l11, $l12, $l14, $l15, $l17, $l18, $l20, $l21, $l23, $l24, $l26, $l27, $l29, $l30;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i10, $i13, $i16, $i19, $i22, $i25, $i28;

        i0 := @parameter0: int;

        i7 := @parameter1: int;

        i6 := @parameter2: int;

        i5 := @parameter3: int;

        i4 := @parameter4: int;

        i3 := @parameter5: int;

        i2 := @parameter6: int;

        i1 := @parameter7: int;

        if i0 != 255 goto label1;

        if i7 != 255 goto label1;

        if i5 != 255 goto label1;

        if i4 != 255 goto label1;

        if i3 != 255 goto label1;

        if i2 != 255 goto label1;

        if i1 != 255 goto label1;

        return -1L;

     label1:
        $i8 = i1 << 56;

        $l9 = (long) $i8;

        $i10 = i2 << 48;

        $l11 = (long) $i10;

        $l12 = $l9 + $l11;

        $i13 = i3 << 40;

        $l14 = (long) $i13;

        $l15 = $l12 + $l14;

        $i16 = i4 << 32;

        $l17 = (long) $i16;

        $l18 = $l15 + $l17;

        $i19 = i5 << 24;

        $l20 = (long) $i19;

        $l21 = $l18 + $l20;

        $i22 = i6 << 16;

        $l23 = (long) $i22;

        $l24 = $l21 + $l23;

        $i25 = i7 << 8;

        $l26 = (long) $i25;

        $l27 = $l24 + $l26;

        $i28 = i0 << 0;

        $l29 = (long) $i28;

        $l30 = $l27 + $l29;

        return $l30;
    }

    public static int getInt2BE(byte[])
    {
        int $i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.gagravarr.ogg.IOUtils: int getInt2BE(byte[],int)>(r0, 0);

        return $i0;
    }

    public static int getInt2BE(byte[], int)
    {
        byte[] r0;
        short s2, s4, $s7, $s8;
        byte $b1, $b3;
        int i0, $i5, i6, $i9, $i10;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i6 = i0 + 1;

        $b1 = r0[i0];

        $s7 = (short) $b1;

        s2 = $s7 & 255;

        $b3 = r0[i6];

        $s8 = (short) $b3;

        s4 = $s8 & 255;

        $i9 = (int) s2;

        $i10 = (int) s4;

        $i5 = staticinvoke <org.gagravarr.ogg.IOUtils: int getIntBE(int,int)>($i9, $i10);

        return $i5;
    }

    public static long getInt3BE(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt3BE(byte[],int)>(r0, 0);

        return $l0;
    }

    public static long getInt3BE(byte[], int)
    {
        byte[] r0;
        long $l7;
        short s2, s4, s6, $s10, $s11, $s12;
        byte $b1, $b3, $b5;
        int i0, i8, i9, $i13, $i14, $i15;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i8 = i0 + 1;

        $b1 = r0[i0];

        $s10 = (short) $b1;

        s2 = $s10 & 255;

        i9 = i8 + 1;

        $b3 = r0[i8];

        $s11 = (short) $b3;

        s4 = $s11 & 255;

        $b5 = r0[i9];

        $s12 = (short) $b5;

        s6 = $s12 & 255;

        $i13 = (int) s2;

        $i14 = (int) s4;

        $i15 = (int) s6;

        $l7 = staticinvoke <org.gagravarr.ogg.IOUtils: long getIntBE(int,int,int)>($i13, $i14, $i15);

        return $l7;
    }

    public static long getInt4BE(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt4BE(byte[],int)>(r0, 0);

        return $l0;
    }

    public static long getInt4BE(byte[], int)
    {
        byte[] r0;
        long $l9;
        short s2, s4, s6, s8, $s13, $s14, $s15, $s16;
        byte $b1, $b3, $b5, $b7;
        int i0, i10, i11, i12, $i17, $i18, $i19, $i20;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i10 = i0 + 1;

        $b1 = r0[i0];

        $s13 = (short) $b1;

        s2 = $s13 & 255;

        i11 = i10 + 1;

        $b3 = r0[i10];

        $s14 = (short) $b3;

        s4 = $s14 & 255;

        i12 = i11 + 1;

        $b5 = r0[i11];

        $s15 = (short) $b5;

        s6 = $s15 & 255;

        $b7 = r0[i12];

        $s16 = (short) $b7;

        s8 = $s16 & 255;

        $i17 = (int) s2;

        $i18 = (int) s4;

        $i19 = (int) s6;

        $i20 = (int) s8;

        $l9 = staticinvoke <org.gagravarr.ogg.IOUtils: long getIntBE(int,int,int,int)>($i17, $i18, $i19, $i20);

        return $l9;
    }

    public static int getIntBE(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = i0 << 8;

        $i2 = i1 << 0;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public static long getIntBE(int, int, int)
    {
        long $l8;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        $i3 = i0 << 16;

        $i2 = i1 << 8;

        $i6 = $i3 + $i2;

        $i5 = i4 << 0;

        $i7 = $i6 + $i5;

        $l8 = (long) $i7;

        return $l8;
    }

    public static long getIntBE(int, int, int, int)
    {
        long $l11;
        int i0, i1, $i2, $i3, i4, $i5, $i6, i7, $i8, $i9, $i10;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        i7 := @parameter3: int;

        $i3 = i0 << 24;

        $i2 = i1 << 16;

        $i6 = $i3 + $i2;

        $i5 = i4 << 8;

        $i9 = $i6 + $i5;

        $i8 = i7 << 0;

        $i10 = $i9 + $i8;

        $l11 = (long) $i10;

        return $l11;
    }

    public static void writeInt2(java.io.OutputStream, int) throws java.io.IOException
    {
        int i0;
        java.io.OutputStream r1;
        byte[] r0;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r0 = newarray (byte)[2];

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt2(byte[],int,int)>(r0, 0, i0);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r0);

        return;
    }

    public static void putInt2(byte[], int, int)
    {
        byte[] r0;
        byte $b4, $b7;
        int i0, i1, $i2, $i3, $i5, $i6, i8;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i8 = i0 + 1;

        $i2 = i1 >>> 0;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        r0[i0] = $b4;

        $i5 = i1 >>> 8;

        $i6 = $i5 & 255;

        $b7 = (byte) $i6;

        r0[i8] = $b7;

        return;
    }

    public static void writeInt3(java.io.OutputStream, long) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] r0;
        long l0;

        r1 := @parameter0: java.io.OutputStream;

        l0 := @parameter1: long;

        r0 = newarray (byte)[3];

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt3(byte[],int,long)>(r0, 0, l0);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r0);

        return;
    }

    public static void putInt3(byte[], int, long)
    {
        byte[] r0;
        long l1, $l2, $l3, $l6, $l7, $l10, $l11;
        byte $b5, $b9, $b13;
        int i0, $i4, $i8, $i12, i14, i15;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        i14 = i0 + 1;

        $l2 = l1 >>> 0;

        $l3 = $l2 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        r0[i0] = $b5;

        i15 = i14 + 1;

        $l6 = l1 >>> 8;

        $l7 = $l6 & 255L;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        r0[i14] = $b9;

        $l10 = l1 >>> 16;

        $l11 = $l10 & 255L;

        $i12 = (int) $l11;

        $b13 = (byte) $i12;

        r0[i15] = $b13;

        return;
    }

    public static void writeInt4(java.io.OutputStream, long) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] r0;
        long l0;

        r1 := @parameter0: java.io.OutputStream;

        l0 := @parameter1: long;

        r0 = newarray (byte)[4];

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4(byte[],int,long)>(r0, 0, l0);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r0);

        return;
    }

    public static void putInt4(byte[], int, long)
    {
        byte[] r0;
        long l1, $l2, $l3, $l6, $l7, $l10, $l11, $l14, $l15;
        byte $b5, $b9, $b13, $b17;
        int i0, $i4, $i8, $i12, $i16, i18, i19, i20;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        i18 = i0 + 1;

        $l2 = l1 >>> 0;

        $l3 = $l2 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        r0[i0] = $b5;

        i19 = i18 + 1;

        $l6 = l1 >>> 8;

        $l7 = $l6 & 255L;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        r0[i18] = $b9;

        i20 = i19 + 1;

        $l10 = l1 >>> 16;

        $l11 = $l10 & 255L;

        $i12 = (int) $l11;

        $b13 = (byte) $i12;

        r0[i19] = $b13;

        $l14 = l1 >>> 24;

        $l15 = $l14 & 255L;

        $i16 = (int) $l15;

        $b17 = (byte) $i16;

        r0[i20] = $b17;

        return;
    }

    public static void writeInt8(java.io.OutputStream, long) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] r0;
        long l0;

        r1 := @parameter0: java.io.OutputStream;

        l0 := @parameter1: long;

        r0 = newarray (byte)[8];

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt8(byte[],int,long)>(r0, 0, l0);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r0);

        return;
    }

    public static void putInt8(byte[], int, long)
    {
        byte[] r0;
        byte $b5, $b9, $b13, $b17, $b21, $b25, $b29, $b33;
        long l1, $l2, $l3, $l6, $l7, $l10, $l11, $l14, $l15, $l18, $l19, $l22, $l23, $l26, $l27, $l30, $l31;
        int i0, $i4, $i8, $i12, $i16, $i20, $i24, $i28, $i32, i34, i35, i36, i37, i38, i39, i40;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        i34 = i0 + 1;

        $l2 = l1 >>> 0;

        $l3 = $l2 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        r0[i0] = $b5;

        i35 = i34 + 1;

        $l6 = l1 >>> 8;

        $l7 = $l6 & 255L;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        r0[i34] = $b9;

        i36 = i35 + 1;

        $l10 = l1 >>> 16;

        $l11 = $l10 & 255L;

        $i12 = (int) $l11;

        $b13 = (byte) $i12;

        r0[i35] = $b13;

        i37 = i36 + 1;

        $l14 = l1 >>> 24;

        $l15 = $l14 & 255L;

        $i16 = (int) $l15;

        $b17 = (byte) $i16;

        r0[i36] = $b17;

        i38 = i37 + 1;

        $l18 = l1 >>> 32;

        $l19 = $l18 & 255L;

        $i20 = (int) $l19;

        $b21 = (byte) $i20;

        r0[i37] = $b21;

        i39 = i38 + 1;

        $l22 = l1 >>> 40;

        $l23 = $l22 & 255L;

        $i24 = (int) $l23;

        $b25 = (byte) $i24;

        r0[i38] = $b25;

        i40 = i39 + 1;

        $l26 = l1 >>> 48;

        $l27 = $l26 & 255L;

        $i28 = (int) $l27;

        $b29 = (byte) $i28;

        r0[i39] = $b29;

        $l30 = l1 >>> 56;

        $l31 = $l30 & 255L;

        $i32 = (int) $l31;

        $b33 = (byte) $i32;

        r0[i40] = $b33;

        return;
    }

    public static void writeInt2BE(java.io.OutputStream, int) throws java.io.IOException
    {
        int i0;
        java.io.OutputStream r1;
        byte[] r0;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r0 = newarray (byte)[2];

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt2BE(byte[],int,int)>(r0, 0, i0);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r0);

        return;
    }

    public static void putInt2BE(byte[], int, int)
    {
        byte[] r0;
        byte $b4, $b8;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i9;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i5 = i0 + 1;

        $i2 = i1 >>> 0;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        r0[$i5] = $b4;

        $i9 = i0 + 0;

        $i6 = i1 >>> 8;

        $i7 = $i6 & 255;

        $b8 = (byte) $i7;

        r0[$i9] = $b8;

        return;
    }

    public static void writeInt3BE(java.io.OutputStream, long) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] r0;
        long l0;

        r1 := @parameter0: java.io.OutputStream;

        l0 := @parameter1: long;

        r0 = newarray (byte)[3];

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt3BE(byte[],int,long)>(r0, 0, l0);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r0);

        return;
    }

    public static void putInt3BE(byte[], int, long)
    {
        byte[] r0;
        long l1, $l2, $l3, $l7, $l8, $l12, $l13;
        byte $b5, $b10, $b15;
        int i0, $i4, $i6, $i9, $i11, $i14, $i16;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $i6 = i0 + 2;

        $l2 = l1 >>> 0;

        $l3 = $l2 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        r0[$i6] = $b5;

        $i11 = i0 + 1;

        $l7 = l1 >>> 8;

        $l8 = $l7 & 255L;

        $i9 = (int) $l8;

        $b10 = (byte) $i9;

        r0[$i11] = $b10;

        $i16 = i0 + 0;

        $l12 = l1 >>> 16;

        $l13 = $l12 & 255L;

        $i14 = (int) $l13;

        $b15 = (byte) $i14;

        r0[$i16] = $b15;

        return;
    }

    public static void writeInt4BE(java.io.OutputStream, long) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] r0;
        long l0;

        r1 := @parameter0: java.io.OutputStream;

        l0 := @parameter1: long;

        r0 = newarray (byte)[4];

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4BE(byte[],int,long)>(r0, 0, l0);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r0);

        return;
    }

    public static void putInt4BE(byte[], int, long)
    {
        byte[] r0;
        long l1, $l2, $l3, $l7, $l8, $l12, $l13, $l17, $l18;
        byte $b5, $b10, $b15, $b20;
        int i0, $i4, $i6, $i9, $i11, $i14, $i16, $i19, $i21;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $i6 = i0 + 3;

        $l2 = l1 >>> 0;

        $l3 = $l2 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        r0[$i6] = $b5;

        $i11 = i0 + 2;

        $l7 = l1 >>> 8;

        $l8 = $l7 & 255L;

        $i9 = (int) $l8;

        $b10 = (byte) $i9;

        r0[$i11] = $b10;

        $i16 = i0 + 1;

        $l12 = l1 >>> 16;

        $l13 = $l12 & 255L;

        $i14 = (int) $l13;

        $b15 = (byte) $i14;

        r0[$i16] = $b15;

        $i21 = i0 + 0;

        $l17 = l1 >>> 24;

        $l18 = $l17 & 255L;

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        r0[$i21] = $b20;

        return;
    }

    public static java.lang.String getUTF8(byte[], int, int)
    {
        byte[] r1;
        int i0, i1;
        java.lang.String $r0;
        java.lang.RuntimeException $r3;
        java.io.UnsupportedEncodingException $r2;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i0, i1, "UTF-8");

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Broken JVM, UTF-8 not found", $r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String removeNullPadding(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(0);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r1;
    }

    public static int putUTF8(byte[], int, java.lang.String)
    {
        byte[] $r1, r2;
        int i0, $i1, $i2;
        java.lang.String r0;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $r1 = staticinvoke <org.gagravarr.ogg.IOUtils: byte[] toUTF8Bytes(java.lang.String)>(r0);

        $i1 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r2, i0, $i1);

        $i2 = lengthof $r1;

        return $i2;
    }

    public static byte[] toUTF8Bytes(java.lang.String)
    {
        byte[] $r1;
        java.lang.String r0;
        java.lang.RuntimeException $r3;
        java.io.UnsupportedEncodingException $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Broken JVM, UTF-8 not found", $r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static void writeUTF8(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r1;
        java.lang.String r0;
        java.lang.RuntimeException $r4;
        java.io.UnsupportedEncodingException $r3;

        r2 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Broken JVM, UTF-8 not found", $r3);

        throw $r4;

     label4:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static void writeUTF8WithLength(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r1;
        int $i0;
        long $l1;
        java.lang.String r0;
        java.lang.RuntimeException $r4;
        java.io.UnsupportedEncodingException $r3;

        r2 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        staticinvoke <org.gagravarr.ogg.IOUtils: void writeInt4(java.io.OutputStream,long)>(r2, $l1);

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Broken JVM, UTF-8 not found", $r3);

        throw $r4;

     label4:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static boolean byteRangeMatches(byte[], byte[], int)
    {
        byte[] r0, r1;
        byte $b3, $b4;
        int $i0, i1, $i2, i5, $i6, $i7;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i5 = 0;

     label1:
        $i0 = lengthof r0;

        if i5 >= $i0 goto label3;

        $b4 = r0[i5];

        $i2 = i5 + i1;

        $b3 = r1[$i2];

        $i6 = (int) $b4;

        $i7 = (int) $b3;

        if $i6 == $i7 goto label2;

        return 0;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return 1;
    }
}
