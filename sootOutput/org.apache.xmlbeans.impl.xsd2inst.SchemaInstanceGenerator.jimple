public class org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator r0;

        r0 := @this: org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void printUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Generates a document based on the given Schema file");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("having the given element as root.");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("The tool makes reasonable attempts to create a valid document,");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("but this is not always possible since, for example, ");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("there are schemas for which no valid instance document ");

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("can be produced.");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Usage: xsd2inst [flags] schema.xsd -name element_name");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Flags:");

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("    -name    the name of the root element");

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("    -dl      enable network downloads for imports and includes");

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("    -nopvr   disable particle valid (restriction) rule");

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("    -noupa   disable unique particle attribution rule");

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("    -license prints license information");

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("    -version prints version information");

        return;
    }

    public static void main(java.lang.String[])
    {
        boolean z0, z1, $z2, z3, $z4, $z5;
        org.apache.xmlbeans.impl.tool.CommandLine $r2;
        java.lang.Exception $r34;
        org.apache.xmlbeans.XmlObject[] $r16, $r18, r42;
        java.lang.Object[] $r17;
        java.lang.String[] r3, $r7;
        java.util.ArrayList $r15;
        java.util.HashSet $r0, $r1;
        java.lang.StringBuffer $r28, $r30, $r32, $r35, $r37, $r39, $r40;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r14, $r20, $r31, $r33, $r41;
        org.apache.xmlbeans.XmlObject $r26;
        java.io.PrintStream $r21, $r27, $r29, $r36;
        java.io.File $r23, $r38;
        org.apache.xmlbeans.XmlOptions $r22, $r24, $r25;
        java.io.File[] $r13;
        org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions $r19;

        r3 := @parameter0: java.lang.String[];

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("h");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("help");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("usage");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("license");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("version");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("dl");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("noupa");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("nopvr");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("partial");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("name");

        $r2 = new org.apache.xmlbeans.impl.tool.CommandLine;

        specialinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: void <init>(java.lang.String[],java.util.Collection,java.util.Collection)>(r3, $r0, $r1);

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("h");

        if $r4 != null goto label01;

        $r5 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("help");

        if $r5 != null goto label01;

        $r6 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("usage");

        if $r6 == null goto label02;

     label01:
        staticinvoke <org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator: void printUsage()>();

        return;

     label02:
        $r7 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String[] getBadOpts()>();

        $i0 = lengthof $r7;

        if $i0 <= 0 goto label05;

        i4 = 0;

     label03:
        $i3 = lengthof $r7;

        if i4 >= $i3 goto label04;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized option: ");

        $r31 = $r7[i4];

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33);

        i4 = i4 + 1;

        goto label03;

     label04:
        staticinvoke <org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator: void printUsage()>();

        return;

     label05:
        $r8 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("license");

        if $r8 == null goto label06;

        staticinvoke <org.apache.xmlbeans.impl.tool.CommandLine: void printLicense()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label06:
        $r9 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("version");

        if $r9 == null goto label07;

        staticinvoke <org.apache.xmlbeans.impl.tool.CommandLine: void printVersion()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label07:
        $r10 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("dl");

        if $r10 == null goto label08;

        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        z3 = $z2;

        $r11 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("nopvr");

        if $r11 == null goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        z0 = $z4;

        $r12 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("noupa");

        if $r12 == null goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        z1 = $z5;

        $r13 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] filesEndingWith(java.lang.String)>(".xsd");

        $r14 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("name");

        if $r14 != null goto label14;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("Required option \"-name\" must be present");

        return;

     label14:
        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        i5 = 0;

     label15:
        $i1 = lengthof $r13;

        if i5 >= $i1 goto label20;

     label16:
        $r23 = $r13[i5];

        $r22 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r22.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r24 = virtualinvoke $r22.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadLineNumbers()>();

        $r25 = virtualinvoke $r24.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadMessageDigest()>();

        $r26 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject parse(java.io.File,org.apache.xmlbeans.XmlOptions)>($r23, $r25);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r26);

     label17:
        goto label19;

     label18:
        $r34 := @caughtexception;

        $r36 = <java.lang.System: java.io.PrintStream err>;

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not load schema file: ");

        $r38 = $r13[i5];

        $r39 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r41);

        virtualinvoke $r34.<java.lang.Exception: void printStackTrace()>();

     label19:
        i5 = i5 + 1;

        goto label15;

     label20:
        $i2 = interfaceinvoke $r15.<java.util.List: int size()>();

        $r16 = newarray (org.apache.xmlbeans.XmlObject)[$i2];

        $r17 = interfaceinvoke $r15.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r18 = (org.apache.xmlbeans.XmlObject[]) $r17;

        r42 = (org.apache.xmlbeans.XmlObject[]) $r18;

        $r19 = new org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions;

        specialinvoke $r19.<org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions: void <init>()>();

        virtualinvoke $r19.<org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions: void setNetworkDownloads(boolean)>(z3);

        virtualinvoke $r19.<org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions: void setNopvr(boolean)>(z0);

        virtualinvoke $r19.<org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions: void setNoupa(boolean)>(z1);

        $r20 = staticinvoke <org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator: java.lang.String xsd2inst(org.apache.xmlbeans.XmlObject[],java.lang.String,org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions)>(r42, $r14, $r19);

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r20);

        return;

        catch java.lang.Exception from label16 to label17 with label18;
    }

    public static java.lang.String xsd2inst(java.lang.String[], java.lang.String, org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        java.io.Reader[] r1;
        java.lang.String[] r0;
        java.io.StringReader $r5;
        int $i0, $i1, i2;
        java.lang.String r2, $r4, $r6;
        org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions r3;

        r0 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions;

        $i0 = lengthof r0;

        r1 = newarray (java.io.Reader)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r5 = new java.io.StringReader;

        $r6 = r0[i2];

        specialinvoke $r5.<java.io.StringReader: void <init>(java.lang.String)>($r6);

        r1[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = staticinvoke <org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator: java.lang.String xsd2inst(java.io.Reader[],java.lang.String,org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions)>(r1, r2, r3);

        return $r4;
    }

    public static java.lang.String xsd2inst(java.io.Reader[], java.lang.String, org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions)
    {
        java.io.Reader[] r1;
        java.lang.Object[] $r3;
        java.util.ArrayList $r0;
        java.lang.StringBuffer $r14, $r16, $r17, $r18, $r20, $r21;
        int $i0, $i1, i2;
        java.lang.String r5, $r7, $r22;
        org.apache.xmlbeans.XmlObject $r12;
        java.io.PrintStream $r15;
        java.io.Reader $r9, $r19;
        java.lang.Exception $r13;
        org.apache.xmlbeans.XmlObject[] $r2, $r4, r23;
        org.apache.xmlbeans.XmlOptions $r8, $r10, $r11;
        org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions r6;

        r1 := @parameter0: java.io.Reader[];

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label6;

     label2:
        $r9 = r1[i2];

        $r8 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r8.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r10 = virtualinvoke $r8.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadLineNumbers()>();

        $r11 = virtualinvoke $r10.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadMessageDigest()>();

        $r12 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject parse(java.io.Reader,org.apache.xmlbeans.XmlOptions)>($r9, $r11);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not load schema reader: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        $r19 = r1[i2];

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r22);

        virtualinvoke $r13.<java.lang.Exception: void printStackTrace()>();

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r2 = newarray (org.apache.xmlbeans.XmlObject)[$i1];

        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (org.apache.xmlbeans.XmlObject[]) $r3;

        r23 = (org.apache.xmlbeans.XmlObject[]) $r4;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator: java.lang.String xsd2inst(org.apache.xmlbeans.XmlObject[],java.lang.String,org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions)>(r23, r5, r6);

        return $r7;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static java.lang.String xsd2inst(org.apache.xmlbeans.XmlObject[], java.lang.String, org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions)
    {
        org.apache.xmlbeans.SchemaType[] $r1;
        org.apache.xmlbeans.SchemaType $r10, r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Exception $r18;
        org.apache.xmlbeans.XmlObject[] r0;
        org.apache.xmlbeans.SchemaTypeSystem $r17, r21;
        javax.xml.namespace.QName $r11;
        java.util.ArrayList $r14;
        java.lang.StringBuffer $r4, $r5, $r7, $r8;
        int $i0, $i1, i2;
        java.lang.String $r2, r6, $r9, $r12;
        java.io.PrintStream $r19, $r22;
        java.util.Iterator $r23;
        java.lang.RuntimeException $r3, $r13;
        org.apache.xmlbeans.XmlOptions $r15;
        java.lang.Object $r20;
        org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions r16;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject[];

        r6 := @parameter1: java.lang.String;

        r16 := @parameter2: org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions;

        r21 = null;

        $i0 = lengthof r0;

        if $i0 <= 0 goto label09;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r15 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r15.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $z1 = virtualinvoke r16.<org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions: boolean isNetworkDownloads()>();

        if $z1 == 0 goto label01;

        virtualinvoke $r15.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileDownloadUrls()>();

     label01:
        $z2 = virtualinvoke r16.<org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions: boolean isNopvr()>();

        if $z2 == 0 goto label02;

        virtualinvoke $r15.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileNoPvrRule()>();

     label02:
        $z3 = virtualinvoke r16.<org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator$Xsd2InstOptions: boolean isNoupa()>();

        if $z3 == 0 goto label03;

        virtualinvoke $r15.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileNoUpaRule()>();

     label03:
        $r17 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem getBuiltinTypeSystem()>();

        r21 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem compileXsd(org.apache.xmlbeans.XmlObject[],org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r0, $r17, $r15);

     label04:
        goto label09;

     label05:
        $r18 := @caughtexception;

        $z4 = interfaceinvoke $r14.<java.util.Collection: boolean isEmpty()>();

        if $z4 != 0 goto label06;

        $z5 = $r18 instanceof org.apache.xmlbeans.XmlException;

        if $z5 != 0 goto label07;

     label06:
        virtualinvoke $r18.<java.lang.Exception: void printStackTrace()>();

     label07:
        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Schema compilation errors: ");

        $r23 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z6 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label09;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r20 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.Object)>($r20);

        goto label08;

     label09:
        if r21 != null goto label10;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("No Schemas to process.");

        throw $r13;

     label10:
        $r1 = interfaceinvoke r21.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaType[] documentTypes()>();

        r24 = null;

        i2 = 0;

     label11:
        $i1 = lengthof $r1;

        if i2 >= $i1 goto label13;

        $r10 = $r1[i2];

        $r11 = interfaceinvoke $r10.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getDocumentElementName()>();

        $r12 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label12;

        r24 = $r1[i2];

        goto label13;

     label12:
        i2 = i2 + 1;

        goto label11;

     label13:
        if r24 != null goto label14;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not find a global element with name \"");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label14:
        $r2 = staticinvoke <org.apache.xmlbeans.impl.xsd2inst.SampleXmlUtil: java.lang.String createSampleForType(org.apache.xmlbeans.SchemaType)>(r24);

        return $r2;

        catch java.lang.Exception from label03 to label04 with label05;
    }
}
