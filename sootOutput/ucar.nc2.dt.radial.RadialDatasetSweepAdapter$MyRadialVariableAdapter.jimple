public class ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter extends java.lang.Object implements ucar.nc2.VariableSimpleIF
{
    private int rank;
    private int[] shape;
    private java.lang.String name;
    private java.lang.String desp;
    private java.util.List attributes;
    final ucar.nc2.dt.radial.RadialDatasetSweepAdapter this$0;

    public void <init>(ucar.nc2.dt.radial.RadialDatasetSweepAdapter, java.lang.String, java.util.List)
    {
        java.util.List r4;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;
        int[] $r2;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter r1;
        java.lang.String r3;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        r1 := @parameter0: ucar.nc2.dt.radial.RadialDatasetSweepAdapter;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.util.List;

        r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: ucar.nc2.dt.radial.RadialDatasetSweepAdapter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: int rank> = 1;

        $r2 = newarray (int)[1];

        $r2[0] = 1;

        r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: int[] shape> = $r2;

        r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.lang.String name> = r3;

        r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.lang.String desp> = "A radial variable holding a list of radial sweeps";

        r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.util.List attributes> = r4;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        $r1 = r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.lang.String name>;

        return $r1;
    }

    public int compareTo(ucar.nc2.VariableSimpleIF)
    {
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;
        ucar.nc2.VariableSimpleIF r2;
        int $i0;
        java.lang.String $r1, $r3;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        r2 := @parameter0: ucar.nc2.VariableSimpleIF;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.lang.String getName()>();

        $r3 = interfaceinvoke r2.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        $r1 = r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getShortName()
    {
        java.lang.String $r1;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        $r1 = r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.lang.String name>;

        return $r1;
    }

    public ucar.ma2.DataType getDataType()
    {
        ucar.ma2.DataType $r0;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r1;

        r1 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        $r0 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        return $r0;
    }

    public java.lang.String getDescription()
    {
        java.lang.String $r1;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        $r1 = r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.lang.String desp>;

        return $r1;
    }

    public java.lang.String getInfo()
    {
        java.lang.String $r1;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        $r1 = r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.lang.String desp>;

        return $r1;
    }

    public java.lang.String getUnitsString()
    {
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        return "N/A";
    }

    public int getRank()
    {
        int $i0;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        $i0 = r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: int rank>;

        return $i0;
    }

    public int[] getShape()
    {
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;
        int[] $r1;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        $r1 = r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: int[] shape>;

        return $r1;
    }

    public java.util.List getDimensions()
    {
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        return null;
    }

    public java.util.List getAttributes()
    {
        java.util.List $r1;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        $r1 = r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.util.List attributes>;

        return $r1;
    }

    public ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)
    {
        java.util.Iterator $r2;
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;
        java.util.List $r1;
        ucar.nc2.Attribute r6;
        java.lang.Object $r3;
        java.lang.String r4, $r5;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: java.util.List attributes>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        r6 = null;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (ucar.nc2.Attribute) $r3;

        $r5 = virtualinvoke r6.<ucar.nc2.Attribute: java.lang.String getName()>();

        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z1 == 0 goto label1;

        goto label2;

     label2:
        return r6;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter r0;
        ucar.nc2.VariableSimpleIF $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.VariableSimpleIF) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: int compareTo(ucar.nc2.VariableSimpleIF)>($r2);

        return $i0;
    }
}
