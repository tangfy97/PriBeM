public class org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode extends org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode
{

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r1, r2;
        org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode r0;
        int i0, i1;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode: void <init>(java.lang.CharSequence,java.lang.CharSequence,int,int)>(r1, r2, i0, i1);

        return;
    }

    public void <init>(org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode)
    {
        java.lang.CharSequence $r2, $r3;
        org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode r0;
        int $i0, $i1;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $r2 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence getField()>();

        $r3 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence getText()>();

        $i0 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int getBegin()>();

        $i1 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int getEnd()>();

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode: void <init>(java.lang.CharSequence,java.lang.CharSequence,int,int)>($r2, $r3, $i0, $i1);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.CharSequence $r3, $r6;
        org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<prefixWildcard field=\'");

        $r3 = r2.<org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode: java.lang.CharSequence field>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' term=\'");

        $r6 = r2.<org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode: java.lang.CharSequence text>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'/>");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode $r1;
        org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode r0, r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode;

        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode: org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode cloneTree()>();

        r2 = (org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode) $r1;

        return r2;
    }

    public volatile org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode r0, $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode: org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode cloneTree()>();

        return $r1;
    }

    public volatile org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode r0, $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode: org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode cloneTree()>();

        return $r1;
    }

    public volatile org.apache.lucene.queryparser.flexible.core.nodes.QueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode r0, $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode: org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode cloneTree()>();

        return $r1;
    }
}
