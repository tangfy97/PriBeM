public class org.springframework.context.support.StaticApplicationContext extends org.springframework.context.support.GenericApplicationContext
{
    private final org.springframework.context.support.StaticMessageSource staticMessageSource;

    public void <init>() throws org.springframework.beans.BeansException
    {
        org.springframework.context.support.StaticApplicationContext r0;

        r0 := @this: org.springframework.context.support.StaticApplicationContext;

        specialinvoke r0.<org.springframework.context.support.StaticApplicationContext: void <init>(org.springframework.context.ApplicationContext)>(null);

        return;
    }

    public void <init>(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException
    {
        org.springframework.context.support.StaticApplicationContext r0;
        org.springframework.context.ApplicationContext r1;
        org.springframework.context.support.StaticMessageSource $r2, $r4;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r3;

        r0 := @this: org.springframework.context.support.StaticApplicationContext;

        r1 := @parameter0: org.springframework.context.ApplicationContext;

        specialinvoke r0.<org.springframework.context.support.GenericApplicationContext: void <init>(org.springframework.context.ApplicationContext)>(r1);

        $r2 = new org.springframework.context.support.StaticMessageSource;

        specialinvoke $r2.<org.springframework.context.support.StaticMessageSource: void <init>()>();

        r0.<org.springframework.context.support.StaticApplicationContext: org.springframework.context.support.StaticMessageSource staticMessageSource> = $r2;

        $r3 = virtualinvoke r0.<org.springframework.context.support.StaticApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>();

        $r4 = r0.<org.springframework.context.support.StaticApplicationContext: org.springframework.context.support.StaticMessageSource staticMessageSource>;

        interfaceinvoke $r3.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerSingleton(java.lang.String,java.lang.Object)>("messageSource", $r4);

        return;
    }

    public final org.springframework.context.support.StaticMessageSource getStaticMessageSource()
    {
        org.springframework.context.support.StaticApplicationContext r0;
        org.springframework.context.support.StaticMessageSource $r1;

        r0 := @this: org.springframework.context.support.StaticApplicationContext;

        $r1 = r0.<org.springframework.context.support.StaticApplicationContext: org.springframework.context.support.StaticMessageSource staticMessageSource>;

        return $r1;
    }

    public void registerSingleton(java.lang.String, java.lang.Class) throws org.springframework.beans.BeansException
    {
        org.springframework.context.support.StaticApplicationContext r2;
        java.lang.Class r1;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r3;
        java.lang.String r4;
        org.springframework.beans.factory.support.GenericBeanDefinition $r0;

        r2 := @this: org.springframework.context.support.StaticApplicationContext;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r0 = new org.springframework.beans.factory.support.GenericBeanDefinition;

        specialinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void <init>()>();

        virtualinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void setBeanClass(java.lang.Class)>(r1);

        $r3 = virtualinvoke r2.<org.springframework.context.support.StaticApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory getDefaultListableBeanFactory()>();

        virtualinvoke $r3.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r4, $r0);

        return;
    }

    public void registerSingleton(java.lang.String, java.lang.Class, org.springframework.beans.MutablePropertyValues) throws org.springframework.beans.BeansException
    {
        org.springframework.context.support.StaticApplicationContext r3;
        java.lang.Class r1;
        org.springframework.beans.MutablePropertyValues r2;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r4;
        java.lang.String r5;
        org.springframework.beans.factory.support.GenericBeanDefinition $r0;

        r3 := @this: org.springframework.context.support.StaticApplicationContext;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: org.springframework.beans.MutablePropertyValues;

        $r0 = new org.springframework.beans.factory.support.GenericBeanDefinition;

        specialinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void <init>()>();

        virtualinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void setBeanClass(java.lang.Class)>(r1);

        virtualinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void setPropertyValues(org.springframework.beans.MutablePropertyValues)>(r2);

        $r4 = virtualinvoke r3.<org.springframework.context.support.StaticApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory getDefaultListableBeanFactory()>();

        virtualinvoke $r4.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r5, $r0);

        return;
    }

    public void registerPrototype(java.lang.String, java.lang.Class) throws org.springframework.beans.BeansException
    {
        org.springframework.context.support.StaticApplicationContext r2;
        java.lang.Class r1;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r3;
        java.lang.String r4;
        org.springframework.beans.factory.support.GenericBeanDefinition $r0;

        r2 := @this: org.springframework.context.support.StaticApplicationContext;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r0 = new org.springframework.beans.factory.support.GenericBeanDefinition;

        specialinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void <init>()>();

        virtualinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void setScope(java.lang.String)>("prototype");

        virtualinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void setBeanClass(java.lang.Class)>(r1);

        $r3 = virtualinvoke r2.<org.springframework.context.support.StaticApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory getDefaultListableBeanFactory()>();

        virtualinvoke $r3.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r4, $r0);

        return;
    }

    public void registerPrototype(java.lang.String, java.lang.Class, org.springframework.beans.MutablePropertyValues) throws org.springframework.beans.BeansException
    {
        org.springframework.context.support.StaticApplicationContext r3;
        java.lang.Class r1;
        org.springframework.beans.MutablePropertyValues r2;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r4;
        java.lang.String r5;
        org.springframework.beans.factory.support.GenericBeanDefinition $r0;

        r3 := @this: org.springframework.context.support.StaticApplicationContext;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: org.springframework.beans.MutablePropertyValues;

        $r0 = new org.springframework.beans.factory.support.GenericBeanDefinition;

        specialinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void <init>()>();

        virtualinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void setScope(java.lang.String)>("prototype");

        virtualinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void setBeanClass(java.lang.Class)>(r1);

        virtualinvoke $r0.<org.springframework.beans.factory.support.GenericBeanDefinition: void setPropertyValues(org.springframework.beans.MutablePropertyValues)>(r2);

        $r4 = virtualinvoke r3.<org.springframework.context.support.StaticApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory getDefaultListableBeanFactory()>();

        virtualinvoke $r4.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r5, $r0);

        return;
    }

    public void addMessage(java.lang.String, java.util.Locale, java.lang.String)
    {
        org.springframework.context.support.StaticApplicationContext r0;
        java.util.Locale r3;
        java.lang.String r2, r4;
        org.springframework.context.support.StaticMessageSource $r1;

        r0 := @this: org.springframework.context.support.StaticApplicationContext;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Locale;

        r4 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.context.support.StaticApplicationContext: org.springframework.context.support.StaticMessageSource getStaticMessageSource()>();

        virtualinvoke $r1.<org.springframework.context.support.StaticMessageSource: void addMessage(java.lang.String,java.util.Locale,java.lang.String)>(r2, r3, r4);

        return;
    }
}
