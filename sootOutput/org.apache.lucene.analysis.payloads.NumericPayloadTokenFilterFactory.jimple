public class org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory
{
    private final float payload;
    private final java.lang.String typeMatch;

    public void <init>(java.util.Map)
    {
        java.lang.IllegalArgumentException $r3;
        org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory r0;
        java.util.Map r1;
        float $f0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r2, $r7;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        $f0 = virtualinvoke r0.<org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory: float requireFloat(java.util.Map,java.lang.String)>(r1, "payload");

        r0.<org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory: float payload> = $f0;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory: java.lang.String require(java.util.Map,java.lang.String)>(r1, "typeMatch");

        r0.<org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory: java.lang.String typeMatch> = $r2;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        return;
    }

    public org.apache.lucene.analysis.payloads.NumericPayloadTokenFilter create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory r2;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.payloads.NumericPayloadTokenFilter $r0;
        float $f0;
        java.lang.String $r3;

        r2 := @this: org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r0 = new org.apache.lucene.analysis.payloads.NumericPayloadTokenFilter;

        $f0 = r2.<org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory: float payload>;

        $r3 = r2.<org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory: java.lang.String typeMatch>;

        specialinvoke $r0.<org.apache.lucene.analysis.payloads.NumericPayloadTokenFilter: void <init>(org.apache.lucene.analysis.TokenStream,float,java.lang.String)>(r1, $f0, $r3);

        return $r0;
    }

    public volatile org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory r0;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.payloads.NumericPayloadTokenFilter $r2;

        r0 := @this: org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.payloads.NumericPayloadTokenFilterFactory: org.apache.lucene.analysis.payloads.NumericPayloadTokenFilter create(org.apache.lucene.analysis.TokenStream)>(r1);

        return $r2;
    }
}
