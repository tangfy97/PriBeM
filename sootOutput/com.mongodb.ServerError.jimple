public class com.mongodb.ServerError extends java.lang.Object
{
    final java.lang.String _err;
    final int _code;

    void <init>(com.mongodb.DBObject)
    {
        com.mongodb.DBObject r1;
        int $i0;
        com.mongodb.ServerError r0;
        java.lang.String $r2, $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.mongodb.ServerError;

        r1 := @parameter0: com.mongodb.DBObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.mongodb.ServerError: java.lang.String getMsg(org.bson.BSONObject,java.lang.String)>(r1, null);

        r0.<com.mongodb.ServerError: java.lang.String _err> = $r2;

        $r3 = r0.<com.mongodb.ServerError: java.lang.String _err>;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("need to have $err");

        throw $r4;

     label1:
        $i0 = staticinvoke <com.mongodb.ServerError: int getCode(org.bson.BSONObject)>(r1);

        r0.<com.mongodb.ServerError: int _code> = $i0;

        return;
    }

    static java.lang.String getMsg(org.bson.BSONObject, java.lang.String)
    {
        org.bson.BSONObject r0;
        java.lang.Object $r1, r4;
        java.lang.String $r2, r3;

        r0 := @parameter0: org.bson.BSONObject;

        r3 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>("$err");

        r4 = $r1;

        if $r1 != null goto label1;

        r4 = interfaceinvoke r0.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>("err");

     label1:
        if r4 != null goto label2;

        r4 = interfaceinvoke r0.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>("errmsg");

     label2:
        if r4 != null goto label3;

        return r3;

     label3:
        $r2 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    static int getCode(org.bson.BSONObject)
    {
        int $i0, $i2;
        org.bson.BSONObject r0;
        java.lang.Object $r1, r3;
        java.lang.Number $r2;

        r0 := @parameter0: org.bson.BSONObject;

        $r1 = interfaceinvoke r0.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>("code");

        r3 = $r1;

        if $r1 != null goto label1;

        r3 = interfaceinvoke r0.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>("$code");

     label1:
        if r3 != null goto label2;

        $i2 = (int) -5;

        return $i2;

     label2:
        $r2 = (java.lang.Number) r3;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        return $i0;
    }

    public java.lang.String getError()
    {
        com.mongodb.ServerError r0;
        java.lang.String $r1;

        r0 := @this: com.mongodb.ServerError;

        $r1 = r0.<com.mongodb.ServerError: java.lang.String _err>;

        return $r1;
    }

    public int getCode()
    {
        int $i0;
        com.mongodb.ServerError r0;

        r0 := @this: com.mongodb.ServerError;

        $i0 = r0.<com.mongodb.ServerError: int _code>;

        return $i0;
    }

    public boolean isNotMasterError()
    {
        int $i0;
        com.mongodb.ServerError r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.mongodb.ServerError;

        $i0 = r0.<com.mongodb.ServerError: int _code>;

        lookupswitch($i0)
        {
            case 10054: goto label1;
            case 10056: goto label1;
            case 10058: goto label1;
            case 10107: goto label1;
            case 13435: goto label1;
            case 13436: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        $r1 = r0.<com.mongodb.ServerError: java.lang.String _err>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("not master");

        return $z0;
    }

    public java.lang.String toString()
    {
        com.mongodb.ServerError r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r6;
        java.lang.String $r1, $r5, $r7;

        r0 := @this: com.mongodb.ServerError;

        $i0 = r0.<com.mongodb.ServerError: int _code>;

        if $i0 <= 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i1 = r0.<com.mongodb.ServerError: int _code>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r0.<com.mongodb.ServerError: java.lang.String _err>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        $r1 = r0.<com.mongodb.ServerError: java.lang.String _err>;

        return $r1;
    }
}
