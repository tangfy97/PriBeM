public abstract class org.apache.lucene.index.SortedDocValues extends org.apache.lucene.index.BinaryDocValues
{
    public static final org.apache.lucene.index.SortedDocValues EMPTY;

    protected void <init>()
    {
        org.apache.lucene.index.SortedDocValues r0;

        r0 := @this: org.apache.lucene.index.SortedDocValues;

        specialinvoke r0.<org.apache.lucene.index.BinaryDocValues: void <init>()>();

        return;
    }

    public abstract int getOrd(int);

    public abstract void lookupOrd(int, org.apache.lucene.util.BytesRef);

    public abstract int getValueCount();

    public void get(int, org.apache.lucene.util.BytesRef)
    {
        byte[] $r2;
        org.apache.lucene.util.BytesRef r1;
        int i0, $i1, $i3;
        org.apache.lucene.index.SortedDocValues r0;

        r0 := @this: org.apache.lucene.index.SortedDocValues;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.util.BytesRef;

        $i1 = virtualinvoke r0.<org.apache.lucene.index.SortedDocValues: int getOrd(int)>(i0);

        $i3 = (int) -1;

        if $i1 != $i3 goto label1;

        $r2 = <org.apache.lucene.index.SortedDocValues: byte[] MISSING>;

        r1.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r2;

        r1.<org.apache.lucene.util.BytesRef: int length> = 0;

        r1.<org.apache.lucene.util.BytesRef: int offset> = 0;

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.lucene.index.SortedDocValues: void lookupOrd(int,org.apache.lucene.util.BytesRef)>($i1, r1);

     label2:
        return;
    }

    public int lookupTerm(org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef $r0, r2;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7;
        org.apache.lucene.index.SortedDocValues r1;

        r1 := @this: org.apache.lucene.index.SortedDocValues;

        r2 := @parameter0: org.apache.lucene.util.BytesRef;

        $r0 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r0.<org.apache.lucene.util.BytesRef: void <init>()>();

        i6 = 0;

        $i0 = virtualinvoke r1.<org.apache.lucene.index.SortedDocValues: int getValueCount()>();

        i7 = $i0 - 1;

     label1:
        if i6 > i7 goto label5;

        $i3 = i6 + i7;

        i4 = $i3 >>> 1;

        virtualinvoke r1.<org.apache.lucene.index.SortedDocValues: void lookupOrd(int,org.apache.lucene.util.BytesRef)>(i4, $r0);

        $i5 = virtualinvoke $r0.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r2);

        if $i5 >= 0 goto label2;

        i6 = i4 + 1;

        goto label4;

     label2:
        if $i5 <= 0 goto label3;

        i7 = i4 - 1;

        goto label4;

     label3:
        return i4;

     label4:
        goto label1;

     label5:
        $i1 = i6 + 1;

        $i2 = neg $i1;

        return $i2;
    }

    public org.apache.lucene.index.TermsEnum termsEnum()
    {
        org.apache.lucene.index.SortedDocValuesTermsEnum $r0;
        org.apache.lucene.index.SortedDocValues r1;

        r1 := @this: org.apache.lucene.index.SortedDocValues;

        $r0 = new org.apache.lucene.index.SortedDocValuesTermsEnum;

        specialinvoke $r0.<org.apache.lucene.index.SortedDocValuesTermsEnum: void <init>(org.apache.lucene.index.SortedDocValues)>(r1);

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.lucene.index.SortedDocValues$1 $r0;

        $r0 = new org.apache.lucene.index.SortedDocValues$1;

        specialinvoke $r0.<org.apache.lucene.index.SortedDocValues$1: void <init>()>();

        <org.apache.lucene.index.SortedDocValues: org.apache.lucene.index.SortedDocValues EMPTY> = $r0;

        return;
    }
}
