class com.google.common.collect.MapMaker$ComputingMapAdapter extends com.google.common.collect.ForwardingConcurrentMap implements java.io.Serializable
{
    private static final long serialVersionUID;
    final com.google.common.collect.MapMaker$Cache cache;

    void <init>(com.google.common.collect.MapMaker$Cache)
    {
        com.google.common.collect.MapMaker$Cache r1;
        com.google.common.collect.MapMaker$ComputingMapAdapter r0;

        r0 := @this: com.google.common.collect.MapMaker$ComputingMapAdapter;

        r1 := @parameter0: com.google.common.collect.MapMaker$Cache;

        specialinvoke r0.<com.google.common.collect.ForwardingConcurrentMap: void <init>()>();

        r0.<com.google.common.collect.MapMaker$ComputingMapAdapter: com.google.common.collect.MapMaker$Cache cache> = r1;

        return;
    }

    protected java.util.concurrent.ConcurrentMap delegate()
    {
        com.google.common.collect.MapMaker$Cache $r1;
        com.google.common.collect.MapMaker$ComputingMapAdapter r0;
        java.util.concurrent.ConcurrentMap $r2;

        r0 := @this: com.google.common.collect.MapMaker$ComputingMapAdapter;

        $r1 = r0.<com.google.common.collect.MapMaker$ComputingMapAdapter: com.google.common.collect.MapMaker$Cache cache>;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.MapMaker$Cache: java.util.concurrent.ConcurrentMap asMap()>();

        return $r2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.lang.Object r1, $r3;
        com.google.common.collect.MapMaker$Cache $r2;
        com.google.common.collect.MapMaker$ComputingMapAdapter r0;

        r0 := @this: com.google.common.collect.MapMaker$ComputingMapAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.MapMaker$ComputingMapAdapter: com.google.common.collect.MapMaker$Cache cache>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.MapMaker$Cache: java.lang.Object apply(java.lang.Object)>(r1);

        return $r3;
    }

    protected volatile java.util.Map delegate()
    {
        com.google.common.collect.MapMaker$ComputingMapAdapter r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.google.common.collect.MapMaker$ComputingMapAdapter;

        $r1 = virtualinvoke r0.<com.google.common.collect.MapMaker$ComputingMapAdapter: java.util.concurrent.ConcurrentMap delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.google.common.collect.MapMaker$ComputingMapAdapter r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.google.common.collect.MapMaker$ComputingMapAdapter;

        $r1 = virtualinvoke r0.<com.google.common.collect.MapMaker$ComputingMapAdapter: java.util.concurrent.ConcurrentMap delegate()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.MapMaker$ComputingMapAdapter: long serialVersionUID> = 0L;

        return;
    }
}
