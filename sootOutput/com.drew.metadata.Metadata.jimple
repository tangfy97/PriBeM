public final class com.drew.metadata.Metadata extends java.lang.Object
{
    private final java.util.Map _directoryByClass;
    private final java.util.Collection _directoryList;

    public void <init>()
    {
        java.util.HashMap $r1;
        com.drew.metadata.Metadata r0;
        java.util.ArrayList $r2;

        r0 := @this: com.drew.metadata.Metadata;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.drew.metadata.Metadata: java.util.Map _directoryByClass> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.drew.metadata.Metadata: java.util.Collection _directoryList> = $r2;

        return;
    }

    public java.lang.Iterable getDirectories()
    {
        com.drew.metadata.Metadata r0;
        java.util.Collection $r1;

        r0 := @this: com.drew.metadata.Metadata;

        $r1 = r0.<com.drew.metadata.Metadata: java.util.Collection _directoryList>;

        return $r1;
    }

    public int getDirectoryCount()
    {
        int $i0;
        com.drew.metadata.Metadata r0;
        java.util.Collection $r1;

        r0 := @this: com.drew.metadata.Metadata;

        $r1 = r0.<com.drew.metadata.Metadata: java.util.Collection _directoryList>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        return $i0;
    }

    public com.drew.metadata.Directory getOrCreateDirectory(java.lang.Class)
    {
        com.drew.metadata.Metadata r0;
        com.drew.metadata.Directory r4, $r9;
        java.util.Map $r2, $r5, $r7;
        java.lang.String $r14, $r16;
        boolean $z0;
        java.util.Collection $r6;
        java.lang.RuntimeException $r11;
        java.lang.Exception $r10;
        java.lang.Class r1;
        java.lang.Object $r3, $r8;
        java.lang.StringBuilder $r12, $r13, $r15;

        r0 := @this: com.drew.metadata.Metadata;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.drew.metadata.Metadata: java.util.Map _directoryByClass>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.drew.metadata.Metadata: java.util.Map _directoryByClass>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r9 = (com.drew.metadata.Directory) $r8;

        return $r9;

     label1:
        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>();

        r4 = (com.drew.metadata.Directory) $r3;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot instantiate provided Directory type: ");

        $r14 = virtualinvoke r1.<java.lang.Class: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label4:
        $r5 = r0.<com.drew.metadata.Metadata: java.util.Map _directoryByClass>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        $r6 = r0.<com.drew.metadata.Metadata: java.util.Collection _directoryList>;

        interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>(r4);

        return r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public com.drew.metadata.Directory getDirectory(java.lang.Class)
    {
        com.drew.metadata.Directory $r4;
        com.drew.metadata.Metadata r0;
        java.util.Map $r2;
        java.lang.Class r1;
        java.lang.Object $r3;

        r0 := @this: com.drew.metadata.Metadata;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.drew.metadata.Metadata: java.util.Map _directoryByClass>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.drew.metadata.Directory) $r3;

        return $r4;
    }

    public boolean containsDirectory(java.lang.Class)
    {
        com.drew.metadata.Metadata r0;
        java.util.Map $r2;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: com.drew.metadata.Metadata;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.drew.metadata.Metadata: java.util.Map _directoryByClass>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean hasErrors()
    {
        com.drew.metadata.Directory r4;
        java.util.Iterator $r2;
        com.drew.metadata.Metadata r0;
        java.util.Collection $r1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: com.drew.metadata.Metadata;

        $r1 = r0.<com.drew.metadata.Metadata: java.util.Collection _directoryList>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.drew.metadata.Directory) $r3;

        $z1 = virtualinvoke r4.<com.drew.metadata.Directory: boolean hasErrors()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }
}
