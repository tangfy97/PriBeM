public interface  org.openxmlformats.schemas.spreadsheetml.x2006.main.CTPageSetup extends java.lang.Object implements org.apache.xmlbeans.XmlObject
{
    public static final org.apache.xmlbeans.SchemaType type;

    public abstract long getPaperSize();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetPaperSize();

    public abstract boolean isSetPaperSize();

    public abstract void setPaperSize(long);

    public abstract void xsetPaperSize(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetPaperSize();

    public abstract long getScale();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetScale();

    public abstract boolean isSetScale();

    public abstract void setScale(long);

    public abstract void xsetScale(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetScale();

    public abstract long getFirstPageNumber();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetFirstPageNumber();

    public abstract boolean isSetFirstPageNumber();

    public abstract void setFirstPageNumber(long);

    public abstract void xsetFirstPageNumber(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetFirstPageNumber();

    public abstract long getFitToWidth();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetFitToWidth();

    public abstract boolean isSetFitToWidth();

    public abstract void setFitToWidth(long);

    public abstract void xsetFitToWidth(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetFitToWidth();

    public abstract long getFitToHeight();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetFitToHeight();

    public abstract boolean isSetFitToHeight();

    public abstract void setFitToHeight(long);

    public abstract void xsetFitToHeight(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetFitToHeight();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.STPageOrder$Enum getPageOrder();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.STPageOrder xgetPageOrder();

    public abstract boolean isSetPageOrder();

    public abstract void setPageOrder(org.openxmlformats.schemas.spreadsheetml.x2006.main.STPageOrder$Enum);

    public abstract void xsetPageOrder(org.openxmlformats.schemas.spreadsheetml.x2006.main.STPageOrder);

    public abstract void unsetPageOrder();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.STOrientation$Enum getOrientation();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.STOrientation xgetOrientation();

    public abstract boolean isSetOrientation();

    public abstract void setOrientation(org.openxmlformats.schemas.spreadsheetml.x2006.main.STOrientation$Enum);

    public abstract void xsetOrientation(org.openxmlformats.schemas.spreadsheetml.x2006.main.STOrientation);

    public abstract void unsetOrientation();

    public abstract boolean getUsePrinterDefaults();

    public abstract org.apache.xmlbeans.XmlBoolean xgetUsePrinterDefaults();

    public abstract boolean isSetUsePrinterDefaults();

    public abstract void setUsePrinterDefaults(boolean);

    public abstract void xsetUsePrinterDefaults(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetUsePrinterDefaults();

    public abstract boolean getBlackAndWhite();

    public abstract org.apache.xmlbeans.XmlBoolean xgetBlackAndWhite();

    public abstract boolean isSetBlackAndWhite();

    public abstract void setBlackAndWhite(boolean);

    public abstract void xsetBlackAndWhite(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetBlackAndWhite();

    public abstract boolean getDraft();

    public abstract org.apache.xmlbeans.XmlBoolean xgetDraft();

    public abstract boolean isSetDraft();

    public abstract void setDraft(boolean);

    public abstract void xsetDraft(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetDraft();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellComments$Enum getCellComments();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellComments xgetCellComments();

    public abstract boolean isSetCellComments();

    public abstract void setCellComments(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellComments$Enum);

    public abstract void xsetCellComments(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellComments);

    public abstract void unsetCellComments();

    public abstract boolean getUseFirstPageNumber();

    public abstract org.apache.xmlbeans.XmlBoolean xgetUseFirstPageNumber();

    public abstract boolean isSetUseFirstPageNumber();

    public abstract void setUseFirstPageNumber(boolean);

    public abstract void xsetUseFirstPageNumber(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetUseFirstPageNumber();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.STPrintError$Enum getErrors();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.STPrintError xgetErrors();

    public abstract boolean isSetErrors();

    public abstract void setErrors(org.openxmlformats.schemas.spreadsheetml.x2006.main.STPrintError$Enum);

    public abstract void xsetErrors(org.openxmlformats.schemas.spreadsheetml.x2006.main.STPrintError);

    public abstract void unsetErrors();

    public abstract long getHorizontalDpi();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetHorizontalDpi();

    public abstract boolean isSetHorizontalDpi();

    public abstract void setHorizontalDpi(long);

    public abstract void xsetHorizontalDpi(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetHorizontalDpi();

    public abstract long getVerticalDpi();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetVerticalDpi();

    public abstract boolean isSetVerticalDpi();

    public abstract void setVerticalDpi(long);

    public abstract void xsetVerticalDpi(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetVerticalDpi();

    public abstract long getCopies();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetCopies();

    public abstract boolean isSetCopies();

    public abstract void setCopies(long);

    public abstract void xsetCopies(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetCopies();

    public abstract java.lang.String getId();

    public abstract org.openxmlformats.schemas.officeDocument.x2006.relationships.STRelationshipId xgetId();

    public abstract boolean isSetId();

    public abstract void setId(java.lang.String);

    public abstract void xsetId(org.openxmlformats.schemas.officeDocument.x2006.relationships.STRelationshipId);

    public abstract void unsetId();

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        java.lang.Class $r0;
        org.apache.xmlbeans.SchemaComponent $r3;
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.SchemaType $r4;

        $r0 = class "Lorg/openxmlformats/schemas/spreadsheetml/x2006/main/CTPageSetup;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem typeSystemForClassLoader(java.lang.ClassLoader,java.lang.String)>($r1, "schemaorg_apache_xmlbeans.system.sE130CAA0A01A7CDE5A2B4FEB8B311707");

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>("ctpagesetup534dtype");

        $r4 = (org.apache.xmlbeans.SchemaType) $r3;

        <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTPageSetup: org.apache.xmlbeans.SchemaType type> = $r4;

        return;
    }
}
