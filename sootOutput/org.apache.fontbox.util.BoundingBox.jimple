public class org.apache.fontbox.util.BoundingBox extends java.lang.Object
{
    private float lowerLeftX;
    private float lowerLeftY;
    private float upperRightX;
    private float upperRightY;

    public void <init>()
    {
        org.apache.fontbox.util.BoundingBox r0;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(float, float, float, float)
    {
        org.apache.fontbox.util.BoundingBox r0;
        float f0, f1, f2, f3;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.fontbox.util.BoundingBox: float lowerLeftX> = f0;

        r0.<org.apache.fontbox.util.BoundingBox: float lowerLeftY> = f1;

        r0.<org.apache.fontbox.util.BoundingBox: float upperRightX> = f2;

        r0.<org.apache.fontbox.util.BoundingBox: float upperRightY> = f3;

        return;
    }

    public float getLowerLeftX()
    {
        float $f0;
        org.apache.fontbox.util.BoundingBox r0;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        $f0 = r0.<org.apache.fontbox.util.BoundingBox: float lowerLeftX>;

        return $f0;
    }

    public void setLowerLeftX(float)
    {
        float f0;
        org.apache.fontbox.util.BoundingBox r0;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        f0 := @parameter0: float;

        r0.<org.apache.fontbox.util.BoundingBox: float lowerLeftX> = f0;

        return;
    }

    public float getLowerLeftY()
    {
        float $f0;
        org.apache.fontbox.util.BoundingBox r0;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        $f0 = r0.<org.apache.fontbox.util.BoundingBox: float lowerLeftY>;

        return $f0;
    }

    public void setLowerLeftY(float)
    {
        float f0;
        org.apache.fontbox.util.BoundingBox r0;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        f0 := @parameter0: float;

        r0.<org.apache.fontbox.util.BoundingBox: float lowerLeftY> = f0;

        return;
    }

    public float getUpperRightX()
    {
        float $f0;
        org.apache.fontbox.util.BoundingBox r0;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        $f0 = r0.<org.apache.fontbox.util.BoundingBox: float upperRightX>;

        return $f0;
    }

    public void setUpperRightX(float)
    {
        float f0;
        org.apache.fontbox.util.BoundingBox r0;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        f0 := @parameter0: float;

        r0.<org.apache.fontbox.util.BoundingBox: float upperRightX> = f0;

        return;
    }

    public float getUpperRightY()
    {
        float $f0;
        org.apache.fontbox.util.BoundingBox r0;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        $f0 = r0.<org.apache.fontbox.util.BoundingBox: float upperRightY>;

        return $f0;
    }

    public void setUpperRightY(float)
    {
        float f0;
        org.apache.fontbox.util.BoundingBox r0;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        f0 := @parameter0: float;

        r0.<org.apache.fontbox.util.BoundingBox: float upperRightY> = f0;

        return;
    }

    public float getWidth()
    {
        org.apache.fontbox.util.BoundingBox r0;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        $f0 = virtualinvoke r0.<org.apache.fontbox.util.BoundingBox: float getUpperRightX()>();

        $f1 = virtualinvoke r0.<org.apache.fontbox.util.BoundingBox: float getLowerLeftX()>();

        $f2 = $f0 - $f1;

        return $f2;
    }

    public float getHeight()
    {
        org.apache.fontbox.util.BoundingBox r0;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        $f0 = virtualinvoke r0.<org.apache.fontbox.util.BoundingBox: float getUpperRightY()>();

        $f1 = virtualinvoke r0.<org.apache.fontbox.util.BoundingBox: float getLowerLeftY()>();

        $f2 = $f0 - $f1;

        return $f2;
    }

    public boolean contains(float, float)
    {
        org.apache.fontbox.util.BoundingBox r0;
        byte $b0, $b1, $b2, $b3;
        int $i4, $i5, $i6, $i7;
        boolean $z0;
        float f0, $f1, $f2, f3, $f4, $f5;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        f0 := @parameter0: float;

        f3 := @parameter1: float;

        $f1 = r0.<org.apache.fontbox.util.BoundingBox: float lowerLeftX>;

        $b0 = f0 cmpl $f1;

        $i4 = (int) $b0;

        if $i4 < 0 goto label1;

        $f2 = r0.<org.apache.fontbox.util.BoundingBox: float upperRightX>;

        $b1 = f0 cmpg $f2;

        $i5 = (int) $b1;

        if $i5 > 0 goto label1;

        $f4 = r0.<org.apache.fontbox.util.BoundingBox: float lowerLeftY>;

        $b2 = f3 cmpl $f4;

        $i6 = (int) $b2;

        if $i6 < 0 goto label1;

        $f5 = r0.<org.apache.fontbox.util.BoundingBox: float upperRightY>;

        $b3 = f3 cmpg $f5;

        $i7 = (int) $b3;

        if $i7 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean contains(java.awt.Point)
    {
        org.apache.fontbox.util.BoundingBox r0;
        float $f0, $f1;
        java.awt.Point r1;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: org.apache.fontbox.util.BoundingBox;

        r1 := @parameter0: java.awt.Point;

        $d0 = virtualinvoke r1.<java.awt.Point: double getX()>();

        $f0 = (float) $d0;

        $d1 = virtualinvoke r1.<java.awt.Point: double getY()>();

        $f1 = (float) $d1;

        $z0 = virtualinvoke r0.<org.apache.fontbox.util.BoundingBox: boolean contains(float,float)>($f0, $f1);

        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.fontbox.util.BoundingBox r2;
        java.lang.String $r11;
        float $f0, $f1, $f2, $f3;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r2 := @this: org.apache.fontbox.util.BoundingBox;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $f0 = virtualinvoke r2.<org.apache.fontbox.util.BoundingBox: float getLowerLeftX()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f1 = virtualinvoke r2.<org.apache.fontbox.util.BoundingBox: float getLowerLeftY()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f2 = virtualinvoke r2.<org.apache.fontbox.util.BoundingBox: float getUpperRightX()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f3 = virtualinvoke r2.<org.apache.fontbox.util.BoundingBox: float getUpperRightY()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
