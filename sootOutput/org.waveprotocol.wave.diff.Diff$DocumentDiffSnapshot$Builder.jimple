public final class org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder extends com.google.protobuf.GeneratedMessage$Builder
{
    private org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result;

    private void <init>()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        specialinvoke r0.<com.google.protobuf.GeneratedMessage$Builder: void <init>()>();

        return;
    }

    private static org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder create()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r0;

        $r0 = new org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        specialinvoke $r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: void <init>()>();

        $r1 = new org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot;

        specialinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: void <init>(org.waveprotocol.wave.diff.Diff$1)>(null);

        $r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result> = $r1;

        return $r0;
    }

    protected org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot internalGetResult()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        return $r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clear()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2;
        java.lang.IllegalStateException $r3;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call clear() after build().");

        throw $r3;

     label1:
        $r2 = new org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot;

        specialinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: void <init>(org.waveprotocol.wave.diff.Diff$1)>(null);

        r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result> = $r2;

        return r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clone()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r0, r1, $r3;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r0 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder create()>();

        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = virtualinvoke $r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r2);

        return $r3;
    }

    public com.google.protobuf.Descriptors$Descriptor getDescriptorForType()
    {
        com.google.protobuf.Descriptors$Descriptor $r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r0 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: com.google.protobuf.Descriptors$Descriptor getDescriptor()>();

        return $r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getDefaultInstanceForType()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r0 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getDefaultInstance()>();

        return $r0;
    }

    public boolean isInitialized()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean isInitialized()>();

        return $z0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot build()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2, $r3;
        com.google.protobuf.UninitializedMessageException $r4;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r4 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>($r3);

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot buildPartial()>();

        return $r2;
    }

    private org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot buildParsed() throws com.google.protobuf.InvalidProtocolBufferException
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2;
        com.google.protobuf.InvalidProtocolBufferException $r4;
        com.google.protobuf.UninitializedMessageException $r3;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>($r2);

        $r4 = virtualinvoke $r3.<com.google.protobuf.UninitializedMessageException: com.google.protobuf.InvalidProtocolBufferException asInvalidProtocolBufferException()>();

        throw $r4;

     label1:
        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot buildPartial()>();

        return $r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot buildPartial()
    {
        java.lang.IllegalStateException $r24;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2, $r5, $r8, $r11, $r12, $r15, $r16, $r17, $r20, $r21;
        java.util.List $r3, $r4, $r6, $r7, $r9, $r10, $r13, $r14, $r18, $r19, $r22, $r23;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        if $r1 != null goto label1;

        $r24 = new java.lang.IllegalStateException;

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("build() has already been called on this Builder.");

        throw $r24;

     label1:
        $r2 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r2);

        $r4 = <java.util.Collections: java.util.List EMPTY_LIST>;

        if $r3 == $r4 goto label2;

        $r21 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r20 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r22 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r20);

        $r23 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r22);

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4902(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r21, $r23);

     label2:
        $r5 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r6 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r5);

        $r7 = <java.util.Collections: java.util.List EMPTY_LIST>;

        if $r6 == $r7 goto label3;

        $r17 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r16 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r18 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r16);

        $r19 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r18);

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5002(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r17, $r19);

     label3:
        $r8 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r9 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r8);

        $r10 = <java.util.Collections: java.util.List EMPTY_LIST>;

        if $r9 == $r10 goto label4;

        $r12 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r11 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r13 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r11);

        $r14 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r13);

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5102(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r12, $r14);

     label4:
        $r15 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result> = null;

        return $r15;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(com.google.protobuf.Message)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2;
        com.google.protobuf.Message r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1, $r3;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r0 := @parameter0: com.google.protobuf.Message;

        $z0 = r0 instanceof org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot) r0;

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r2);

        return $r3;

     label1:
        specialinvoke r1.<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>(r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.List $r2, $r6, $r8, $r9, $r13, $r15, $r16, $r20, $r22, $r23, $r30, $r31;
        long $l0, $l1;
        java.util.ArrayList $r10, $r17, $r24;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r27, $r28;
        java.lang.String $r26, $r29;
        com.google.protobuf.UnknownFieldSet $r4;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot r0, $r1, $r5, $r7, $r11, $r12, $r14, $r18, $r19, $r21, $r25;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r3;

        r3 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r0 := @parameter0: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot;

        $r1 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getDefaultInstance()>();

        if r0 != $r1 goto label01;

        return r3;

     label01:
        $z0 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasDocumentId()>();

        if $z0 == 0 goto label02;

        $r29 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getDocumentId()>();

        virtualinvoke r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setDocumentId(java.lang.String)>($r29);

     label02:
        $z1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasState()>();

        if $z1 == 0 goto label03;

        $r28 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getState()>();

        virtualinvoke r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeState(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r28);

     label03:
        $z2 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasDiff()>();

        if $z2 == 0 goto label04;

        $r27 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getDiff()>();

        virtualinvoke r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeDiff(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r27);

     label04:
        $z3 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasAuthor()>();

        if $z3 == 0 goto label05;

        $r26 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getAuthor()>();

        virtualinvoke r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setAuthor(java.lang.String)>($r26);

     label05:
        $r2 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>(r0);

        $z4 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label07;

        $r19 = r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r20 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r19);

        $z8 = interfaceinvoke $r20.<java.util.List: boolean isEmpty()>();

        if $z8 == 0 goto label06;

        $r25 = r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4902(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r25, $r24);

     label06:
        $r21 = r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r22 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r21);

        $r23 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>(r0);

        interfaceinvoke $r22.<java.util.List: boolean addAll(java.util.Collection)>($r23);

     label07:
        $r30 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>(r0);

        $z9 = interfaceinvoke $r30.<java.util.List: boolean isEmpty()>();

        if $z9 != 0 goto label09;

        $r12 = r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r13 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r12);

        $z7 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>();

        if $z7 == 0 goto label08;

        $r18 = r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5002(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r18, $r17);

     label08:
        $r14 = r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r15 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r14);

        $r16 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>(r0);

        interfaceinvoke $r15.<java.util.List: boolean addAll(java.util.Collection)>($r16);

     label09:
        $r31 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>(r0);

        $z10 = interfaceinvoke $r31.<java.util.List: boolean isEmpty()>();

        if $z10 != 0 goto label11;

        $r5 = r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r6 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r5);

        $z6 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z6 == 0 goto label10;

        $r11 = r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5102(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r11, $r10);

     label10:
        $r7 = r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r8 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r7);

        $r9 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>(r0);

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r9);

     label11:
        $z11 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasLastModifiedVersion()>();

        if $z11 == 0 goto label12;

        $l1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: long getLastModifiedVersion()>();

        virtualinvoke r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setLastModifiedVersion(long)>($l1);

     label12:
        $z5 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasLastModifiedTime()>();

        if $z5 == 0 goto label13;

        $l0 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: long getLastModifiedTime()>();

        virtualinvoke r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setLastModifiedTime(long)>($l0);

     label13:
        $r4 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: com.google.protobuf.UnknownFieldSet getUnknownFields()>();

        virtualinvoke r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>($r4);

        return r3;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.UnknownFieldSet$Builder $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r6, $r12;
        long $l1, $l2;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r8, $r9, $r13, $r14;
        com.google.protobuf.ExtensionRegistryLite r7;
        int $i0;
        java.lang.String $r4, $r5, $r10, $r11, $r15;
        boolean $z0, $z1, $z2;
        com.google.protobuf.UnknownFieldSet $r1, $r16, $r17;
        com.google.protobuf.CodedInputStream r3;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r3 := @parameter0: com.google.protobuf.CodedInputStream;

        r7 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>();

        $r2 = staticinvoke <com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder(com.google.protobuf.UnknownFieldSet)>($r1);

     label01:
        $i0 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: int readTag()>();

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 10: goto label04;
            case 18: goto label05;
            case 26: goto label07;
            case 34: goto label08;
            case 40: goto label09;
            case 48: goto label10;
            case 170: goto label11;
            case 178: goto label13;
            case 186: goto label14;
            default: goto label03;
        };

     label02:
        $r16 = virtualinvoke $r2.<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: com.google.protobuf.GeneratedMessage$Builder setUnknownFields(com.google.protobuf.UnknownFieldSet)>($r16);

        return r0;

     label03:
        $z2 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>(r3, $r2, r7, $i0);

        if $z2 != 0 goto label15;

        $r17 = virtualinvoke $r2.<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: com.google.protobuf.GeneratedMessage$Builder setUnknownFields(com.google.protobuf.UnknownFieldSet)>($r17);

        return r0;

     label04:
        $r15 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: java.lang.String readString()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setDocumentId(java.lang.String)>($r15);

        goto label15;

     label05:
        $r12 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder newBuilder()>();

        $z1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: boolean hasState()>();

        if $z1 == 0 goto label06;

        $r14 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getState()>();

        virtualinvoke $r12.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder mergeFrom(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r14);

     label06:
        virtualinvoke r3.<com.google.protobuf.CodedInputStream: void readMessage(com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite)>($r12, r7);

        $r13 = virtualinvoke $r12.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation buildPartial()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setState(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r13);

        goto label15;

     label07:
        $r11 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: java.lang.String readString()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setAuthor(java.lang.String)>($r11);

        goto label15;

     label08:
        $r10 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: java.lang.String readString()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addContributor(java.lang.String)>($r10);

        goto label15;

     label09:
        $l2 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: long readInt64()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setLastModifiedVersion(long)>($l2);

        goto label15;

     label10:
        $l1 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: long readInt64()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setLastModifiedTime(long)>($l1);

        goto label15;

     label11:
        $r6 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder newBuilder()>();

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: boolean hasDiff()>();

        if $z0 == 0 goto label12;

        $r9 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getDiff()>();

        virtualinvoke $r6.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder mergeFrom(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r9);

     label12:
        virtualinvoke r3.<com.google.protobuf.CodedInputStream: void readMessage(com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite)>($r6, r7);

        $r8 = virtualinvoke $r6.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation buildPartial()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setDiff(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r8);

        goto label15;

     label13:
        $r5 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: java.lang.String readString()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addAddedContributor(java.lang.String)>($r5);

        goto label15;

     label14:
        $r4 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: java.lang.String readString()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addRemovedContributor(java.lang.String)>($r4);

     label15:
        goto label01;
    }

    public boolean hasDocumentId()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasDocumentId()>();

        return $z0;
    }

    public java.lang.String getDocumentId()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getDocumentId()>();

        return $r2;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setDocumentId(java.lang.String)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2, $r3;
        java.lang.String r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;
        java.lang.NullPointerException $r4;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5202(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r2, 1);

        $r3 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String access$5302(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.lang.String)>($r3, r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearDocumentId()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2, $r3;
        java.lang.String $r4;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5202(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r1, 0);

        $r2 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getDefaultInstance()>();

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getDocumentId()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String access$5302(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.lang.String)>($r2, $r4);

        return r0;
    }

    public boolean hasState()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasState()>();

        return $z0;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getState()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getState()>();

        return $r2;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setState(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2, $r3;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;
        java.lang.NullPointerException $r4;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r0 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5402(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r2, 1);

        $r3 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5502(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r3, r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setState(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r4;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r2 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5402(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r1, 1);

        $r3 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r4 = virtualinvoke r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation build()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5502(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r3, $r4);

        return r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeState(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r10, $r11;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r3, $r4, $r7, $r8, $r13;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation r2, $r5, $r6, $r9, $r12;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r2 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasState()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r5 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5500(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r4);

        $r6 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getDefaultInstance()>();

        if $r5 == $r6 goto label1;

        $r8 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r7 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r9 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5500(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r7);

        $r10 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder newBuilder(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r9);

        $r11 = virtualinvoke $r10.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder mergeFrom(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>(r2);

        $r12 = virtualinvoke $r11.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation buildPartial()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5502(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r8, $r12);

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5502(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r3, r2);

     label2:
        $r13 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5402(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r13, 1);

        return r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearState()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r3;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5402(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r1, 0);

        $r2 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getDefaultInstance()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5502(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r2, $r3);

        return r0;
    }

    public boolean hasDiff()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasDiff()>();

        return $z0;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getDiff()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getDiff()>();

        return $r2;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setDiff(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2, $r3;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;
        java.lang.NullPointerException $r4;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r0 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5602(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r2, 1);

        $r3 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5702(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r3, r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setDiff(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r4;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r2 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5602(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r1, 1);

        $r3 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r4 = virtualinvoke r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation build()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5702(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r3, $r4);

        return r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeDiff(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r10, $r11;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r3, $r4, $r7, $r8, $r13;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation r2, $r5, $r6, $r9, $r12;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r2 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasDiff()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r5 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5700(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r4);

        $r6 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getDefaultInstance()>();

        if $r5 == $r6 goto label1;

        $r8 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r7 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r9 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5700(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r7);

        $r10 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder newBuilder(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r9);

        $r11 = virtualinvoke $r10.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder mergeFrom(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>(r2);

        $r12 = virtualinvoke $r11.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation buildPartial()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5702(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r8, $r12);

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5702(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r3, r2);

     label2:
        $r13 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5602(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r13, 1);

        return r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearDiff()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r3;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5602(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r1, 0);

        $r2 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getDefaultInstance()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation access$5702(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r2, $r3);

        return r0;
    }

    public boolean hasAuthor()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasAuthor()>();

        return $z0;
    }

    public java.lang.String getAuthor()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getAuthor()>();

        return $r2;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setAuthor(java.lang.String)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2, $r3;
        java.lang.String r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;
        java.lang.NullPointerException $r4;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5802(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r2, 1);

        $r3 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String access$5902(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.lang.String)>($r3, r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearAuthor()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2, $r3;
        java.lang.String $r4;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$5802(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r1, 0);

        $r2 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getDefaultInstance()>();

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getAuthor()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String access$5902(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.lang.String)>($r2, $r4);

        return r0;
    }

    public java.util.List getContributorList()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.util.List $r2, $r3;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r1);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public int getContributorCount()
    {
        int $i0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: int getContributorCount()>();

        return $i0;
    }

    public java.lang.String getContributor(int)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        int i0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getContributor(int)>(i0);

        return $r2;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setContributor(int, java.lang.String)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2;
        java.util.List $r3;
        int i0;
        java.lang.String r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;
        java.lang.NullPointerException $r4;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r2);

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addContributor(java.lang.String)
    {
        java.lang.NullPointerException $r8;
        java.util.ArrayList $r6;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2, $r4, $r7;
        java.util.List $r3, $r5;
        java.lang.String r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>()>();

        throw $r8;

     label1:
        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r7 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4902(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r7, $r6);

     label2:
        $r4 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r5 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addAllContributor(java.lang.Iterable)
    {
        java.lang.Iterable r3;
        java.util.ArrayList $r6;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r4, $r7;
        java.util.List $r2, $r5;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r3 := @parameter0: java.lang.Iterable;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4902(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r7, $r6);

     label1:
        $r4 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r5 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4900(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r4);

        staticinvoke <com.google.protobuf.GeneratedMessage$Builder: void addAll(java.lang.Iterable,java.util.Collection)>(r3, $r5);

        return r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearContributor()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.util.List $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$4902(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r1, $r2);

        return r0;
    }

    public java.util.List getAddedContributorList()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.util.List $r2, $r3;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r1);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public int getAddedContributorCount()
    {
        int $i0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: int getAddedContributorCount()>();

        return $i0;
    }

    public java.lang.String getAddedContributor(int)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        int i0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getAddedContributor(int)>(i0);

        return $r2;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setAddedContributor(int, java.lang.String)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2;
        java.util.List $r3;
        int i0;
        java.lang.String r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;
        java.lang.NullPointerException $r4;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r2);

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addAddedContributor(java.lang.String)
    {
        java.lang.NullPointerException $r8;
        java.util.ArrayList $r6;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2, $r4, $r7;
        java.util.List $r3, $r5;
        java.lang.String r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>()>();

        throw $r8;

     label1:
        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r7 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5002(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r7, $r6);

     label2:
        $r4 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r5 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addAllAddedContributor(java.lang.Iterable)
    {
        java.lang.Iterable r3;
        java.util.ArrayList $r6;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r4, $r7;
        java.util.List $r2, $r5;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r3 := @parameter0: java.lang.Iterable;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5002(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r7, $r6);

     label1:
        $r4 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r5 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5000(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r4);

        staticinvoke <com.google.protobuf.GeneratedMessage$Builder: void addAll(java.lang.Iterable,java.util.Collection)>(r3, $r5);

        return r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearAddedContributor()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.util.List $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5002(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r1, $r2);

        return r0;
    }

    public java.util.List getRemovedContributorList()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.util.List $r2, $r3;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r1);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public int getRemovedContributorCount()
    {
        int $i0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: int getRemovedContributorCount()>();

        return $i0;
    }

    public java.lang.String getRemovedContributor(int)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        int i0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getRemovedContributor(int)>(i0);

        return $r2;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setRemovedContributor(int, java.lang.String)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2;
        java.util.List $r3;
        int i0;
        java.lang.String r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;
        java.lang.NullPointerException $r4;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r2);

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addRemovedContributor(java.lang.String)
    {
        java.lang.NullPointerException $r8;
        java.util.ArrayList $r6;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2, $r4, $r7;
        java.util.List $r3, $r5;
        java.lang.String r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r1;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>()>();

        throw $r8;

     label1:
        $r2 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r7 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5102(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r7, $r6);

     label2:
        $r4 = r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r5 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r0);

        return r1;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addAllRemovedContributor(java.lang.Iterable)
    {
        java.lang.Iterable r3;
        java.util.ArrayList $r6;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r4, $r7;
        java.util.List $r2, $r5;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r3 := @parameter0: java.lang.Iterable;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5102(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r7, $r6);

     label1:
        $r4 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r5 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5100(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r4);

        staticinvoke <com.google.protobuf.GeneratedMessage$Builder: void addAll(java.lang.Iterable,java.util.Collection)>(r3, $r5);

        return r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearRemovedContributor()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.util.List $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List access$5102(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,java.util.List)>($r1, $r2);

        return r0;
    }

    public boolean hasLastModifiedVersion()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasLastModifiedVersion()>();

        return $z0;
    }

    public long getLastModifiedVersion()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        long $l0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: long getLastModifiedVersion()>();

        return $l0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setLastModifiedVersion(long)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2;
        long l0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        l0 := @parameter0: long;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$6002(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r1, 1);

        $r2 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: long access$6102(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,long)>($r2, l0);

        return r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearLastModifiedVersion()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$6002(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r1, 0);

        $r2 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: long access$6102(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,long)>($r2, 0L);

        return r0;
    }

    public boolean hasLastModifiedTime()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasLastModifiedTime()>();

        return $z0;
    }

    public long getLastModifiedTime()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        long $l0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: long getLastModifiedTime()>();

        return $l0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setLastModifiedTime(long)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2;
        long l0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        l0 := @parameter0: long;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$6202(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r1, 1);

        $r2 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: long access$6302(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,long)>($r2, l0);

        return r0;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearLastModifiedTime()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean access$6202(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,boolean)>($r1, 0);

        $r2 = r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot result>;

        staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: long access$6302(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot,long)>($r2, 0L);

        return r0;
    }

    protected volatile com.google.protobuf.GeneratedMessage internalGetResult()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot internalGetResult()>();

        return $r1;
    }

    public volatile com.google.protobuf.GeneratedMessage$Builder clone()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r1;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clone()>();

        return $r1;
    }

    public volatile com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.CodedInputStream r1;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r3;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r3;
    }

    public volatile com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)
    {
        com.google.protobuf.Message r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r2;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r1 := @parameter0: com.google.protobuf.Message;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(com.google.protobuf.Message)>(r1);

        return $r2;
    }

    public volatile com.google.protobuf.AbstractMessage$Builder clear()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r1;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clear()>();

        return $r1;
    }

    public volatile com.google.protobuf.AbstractMessage$Builder clone()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r1;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clone()>();

        return $r1;
    }

    public volatile com.google.protobuf.Message getDefaultInstanceForType()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getDefaultInstanceForType()>();

        return $r1;
    }

    public volatile com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.CodedInputStream r1;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r3;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r3;
    }

    public volatile com.google.protobuf.Message$Builder clone()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r1;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clone()>();

        return $r1;
    }

    public volatile com.google.protobuf.Message buildPartial()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot buildPartial()>();

        return $r1;
    }

    public volatile com.google.protobuf.Message build()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot build()>();

        return $r1;
    }

    public volatile com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)
    {
        com.google.protobuf.Message r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r2;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r1 := @parameter0: com.google.protobuf.Message;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(com.google.protobuf.Message)>(r1);

        return $r2;
    }

    public volatile com.google.protobuf.Message$Builder clear()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r1;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clear()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite getDefaultInstanceForType()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getDefaultInstanceForType()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.CodedInputStream r1;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r3;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r3;
    }

    public volatile com.google.protobuf.MessageLite$Builder clone()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r1;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clone()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite buildPartial()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot buildPartial()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite build()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot build()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite$Builder clear()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r1;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clear()>();

        return $r1;
    }

    public volatile com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.CodedInputStream r1;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r3;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r3;
    }

    public volatile com.google.protobuf.AbstractMessageLite$Builder clone()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r1;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0, $r1;

        r0 := @this: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clone()>();

        return $r1;
    }

    static org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot access$4600(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder) throws com.google.protobuf.InvalidProtocolBufferException
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder r0;

        r0 := @parameter0: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot buildParsed()>();

        return $r1;
    }

    static org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder access$4700()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder create()>();

        return $r0;
    }
}
