public class groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager extends java.lang.Object implements groovyjarjarantlr.JavaCodeGeneratorPrintWriterManager
{
    private groovyjarjarantlr.Grammar grammar;
    private groovyjarjarantlr.PrintWriterWithSMAP smapOutput;
    private java.io.PrintWriter currentOutput;
    private groovyjarjarantlr.Tool tool;
    private java.util.Map sourceMaps;
    private java.lang.String currentFileName;

    public void <init>()
    {
        groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager r0;
        java.util.HashMap $r1;

        r0 := @this: groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.util.Map sourceMaps> = $r1;

        return;
    }

    public java.io.PrintWriter setupOutput(groovyjarjarantlr.Tool, groovyjarjarantlr.Grammar) throws java.io.IOException
    {
        java.io.PrintWriter $r3;
        groovyjarjarantlr.Tool r1;
        groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager r0;
        groovyjarjarantlr.Grammar r2;

        r0 := @this: groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager;

        r1 := @parameter0: groovyjarjarantlr.Tool;

        r2 := @parameter1: groovyjarjarantlr.Grammar;

        $r3 = virtualinvoke r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.io.PrintWriter setupOutput(groovyjarjarantlr.Tool,groovyjarjarantlr.Grammar,java.lang.String)>(r1, r2, null);

        return $r3;
    }

    public java.io.PrintWriter setupOutput(groovyjarjarantlr.Tool, java.lang.String) throws java.io.IOException
    {
        java.io.PrintWriter $r3;
        groovyjarjarantlr.Tool r1;
        groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager r0;
        java.lang.String r2;

        r0 := @this: groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager;

        r1 := @parameter0: groovyjarjarantlr.Tool;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.io.PrintWriter setupOutput(groovyjarjarantlr.Tool,groovyjarjarantlr.Grammar,java.lang.String)>(r1, null, r2);

        return $r3;
    }

    public java.io.PrintWriter setupOutput(groovyjarjarantlr.Tool, groovyjarjarantlr.Grammar, java.lang.String) throws java.io.IOException
    {
        groovyjarjarantlr.Grammar r2;
        groovyjarjarantlr.Tool r1;
        java.lang.StringBuffer $r4, $r5, $r6, $r9, $r10, $r11;
        groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager r0;
        java.lang.String $r7, $r12, r15;
        java.io.PrintWriter $r8, $r14;
        groovyjarjarantlr.PrintWriterWithSMAP $r3, $r13;

        r0 := @this: groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager;

        r1 := @parameter0: groovyjarjarantlr.Tool;

        r2 := @parameter1: groovyjarjarantlr.Grammar;

        r15 := @parameter2: java.lang.String;

        r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.Tool tool> = r1;

        r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.Grammar grammar> = r2;

        if r15 != null goto label1;

        r15 = virtualinvoke r2.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

     label1:
        $r3 = new groovyjarjarantlr.PrintWriterWithSMAP;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".java");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = virtualinvoke r1.<groovyjarjarantlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>($r7);

        specialinvoke $r3.<groovyjarjarantlr.PrintWriterWithSMAP: void <init>(java.io.Writer)>($r8);

        r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.PrintWriterWithSMAP smapOutput> = $r3;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".java");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.lang.String currentFileName> = $r12;

        $r13 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.PrintWriterWithSMAP smapOutput>;

        r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.io.PrintWriter currentOutput> = $r13;

        $r14 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.io.PrintWriter currentOutput>;

        return $r14;
    }

    public void startMapping(int)
    {
        int i0;
        groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager r0;
        groovyjarjarantlr.PrintWriterWithSMAP $r1;

        r0 := @this: groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.PrintWriterWithSMAP smapOutput>;

        virtualinvoke $r1.<groovyjarjarantlr.PrintWriterWithSMAP: void startMapping(int)>(i0);

        return;
    }

    public void startSingleSourceLineMapping(int)
    {
        int i0;
        groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager r0;
        groovyjarjarantlr.PrintWriterWithSMAP $r1;

        r0 := @this: groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.PrintWriterWithSMAP smapOutput>;

        virtualinvoke $r1.<groovyjarjarantlr.PrintWriterWithSMAP: void startSingleSourceLineMapping(int)>(i0);

        return;
    }

    public void endMapping()
    {
        groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager r0;
        groovyjarjarantlr.PrintWriterWithSMAP $r1;

        r0 := @this: groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager;

        $r1 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.PrintWriterWithSMAP smapOutput>;

        virtualinvoke $r1.<groovyjarjarantlr.PrintWriterWithSMAP: void endMapping()>();

        return;
    }

    public void finishOutput() throws java.io.IOException
    {
        groovyjarjarantlr.Grammar $r2, $r5, $r11, $r14;
        groovyjarjarantlr.Tool $r4;
        java.lang.StringBuffer $r7, $r8, $r22;
        java.util.Map $r18, $r20;
        int $i0, $i1, $i3;
        groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager r0;
        java.lang.String $r6, $r9, $r12, $r13, $r16, $r19, r21;
        java.io.PrintWriter $r1, $r10;
        groovyjarjarantlr.PrintWriterWithSMAP $r15, $r17;

        r0 := @this: groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager;

        $r1 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.io.PrintWriter currentOutput>;

        virtualinvoke $r1.<java.io.PrintWriter: void close()>();

        $r2 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.Grammar grammar>;

        if $r2 == null goto label2;

        $r4 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.Tool tool>;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.Grammar grammar>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r7 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".smap");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = virtualinvoke $r4.<groovyjarjarantlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>($r9);

        $r11 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.Grammar grammar>;

        $r12 = virtualinvoke $r11.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        r21 = $r13;

        $i0 = virtualinvoke $r13.<java.lang.String: int lastIndexOf(int)>(47);

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        $i1 = $i0 + 1;

        r21 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int)>($i1);

     label1:
        $r15 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.PrintWriterWithSMAP smapOutput>;

        $r14 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.Grammar grammar>;

        $r16 = virtualinvoke $r14.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        virtualinvoke $r15.<groovyjarjarantlr.PrintWriterWithSMAP: void dump(java.io.PrintWriter,java.lang.String,java.lang.String)>($r10, $r16, r21);

        $r18 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.util.Map sourceMaps>;

        $r19 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.lang.String currentFileName>;

        $r17 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.PrintWriterWithSMAP smapOutput>;

        $r20 = virtualinvoke $r17.<groovyjarjarantlr.PrintWriterWithSMAP: java.util.Map getSourceMap()>();

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20);

     label2:
        r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.io.PrintWriter currentOutput> = null;

        return;
    }

    public java.util.Map getSourceMaps()
    {
        groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager r0;
        java.util.Map $r1;

        r0 := @this: groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager;

        $r1 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: java.util.Map sourceMaps>;

        return $r1;
    }

    public int getCurrentOutputLine()
    {
        int $i0;
        groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager r0;
        groovyjarjarantlr.PrintWriterWithSMAP $r1;

        r0 := @this: groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager;

        $r1 = r0.<groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager: groovyjarjarantlr.PrintWriterWithSMAP smapOutput>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.PrintWriterWithSMAP: int getCurrentOutputLine()>();

        return $i0;
    }
}
