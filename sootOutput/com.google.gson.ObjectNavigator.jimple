final class com.google.gson.ObjectNavigator extends java.lang.Object
{
    private final com.google.gson.ExclusionStrategy exclusionStrategy;
    private final com.google.gson.ReflectingFieldNavigator reflectingFieldNavigator;

    void <init>(com.google.gson.ExclusionStrategy)
    {
        com.google.gson.NullExclusionStrategy $r5;
        com.google.gson.ReflectingFieldNavigator $r6;
        com.google.gson.ObjectNavigator r0;
        com.google.gson.ExclusionStrategy r1, $r3, $r4;

        r0 := @this: com.google.gson.ObjectNavigator;

        r1 := @parameter0: com.google.gson.ExclusionStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new com.google.gson.NullExclusionStrategy;

        $r4 = $r5;

        specialinvoke $r5.<com.google.gson.NullExclusionStrategy: void <init>()>();

        goto label2;

     label1:
        $r4 = r1;

     label2:
        r0.<com.google.gson.ObjectNavigator: com.google.gson.ExclusionStrategy exclusionStrategy> = $r4;

        $r6 = new com.google.gson.ReflectingFieldNavigator;

        $r3 = r0.<com.google.gson.ObjectNavigator: com.google.gson.ExclusionStrategy exclusionStrategy>;

        specialinvoke $r6.<com.google.gson.ReflectingFieldNavigator: void <init>(com.google.gson.ExclusionStrategy)>($r3);

        r0.<com.google.gson.ObjectNavigator: com.google.gson.ReflectingFieldNavigator reflectingFieldNavigator> = $r6;

        return;
    }

    public void accept(com.google.gson.ObjectTypePair, com.google.gson.ObjectNavigator$Visitor)
    {
        com.google.gson.ObjectNavigator$Visitor r5;
        java.lang.Throwable $r12;
        com.google.gson.ReflectingFieldNavigator $r10;
        com.google.gson.ObjectTypePair r1;
        com.google.gson.ObjectNavigator r0;
        com.google.gson.ExclusionStrategy $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.reflect.Type $r2, $r8, $r9, $r11;
        java.lang.Class $r4;
        java.lang.Object $r6, r7, $r13;

        r0 := @this: com.google.gson.ObjectNavigator;

        r1 := @parameter0: com.google.gson.ObjectTypePair;

        r5 := @parameter1: com.google.gson.ObjectNavigator$Visitor;

        $r3 = r0.<com.google.gson.ObjectNavigator: com.google.gson.ExclusionStrategy exclusionStrategy>;

        $r2 = r1.<com.google.gson.ObjectTypePair: java.lang.reflect.Type type>;

        $r4 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r2);

        $z0 = interfaceinvoke $r3.<com.google.gson.ExclusionStrategy: boolean shouldSkipClass(java.lang.Class)>($r4);

        if $z0 == 0 goto label01;

        return;

     label01:
        $z1 = interfaceinvoke r5.<com.google.gson.ObjectNavigator$Visitor: boolean visitUsingCustomHandler(com.google.gson.ObjectTypePair)>(r1);

        if $z1 != 0 goto label11;

        $r6 = virtualinvoke r1.<com.google.gson.ObjectTypePair: java.lang.Object getObject()>();

        if $r6 != null goto label02;

        $r13 = interfaceinvoke r5.<com.google.gson.ObjectNavigator$Visitor: java.lang.Object getTarget()>();

        goto label03;

     label02:
        $r13 = $r6;

     label03:
        r7 = $r13;

        if $r13 != null goto label04;

        return;

     label04:
        virtualinvoke r1.<com.google.gson.ObjectTypePair: void setObject(java.lang.Object)>($r13);

        interfaceinvoke r5.<com.google.gson.ObjectNavigator$Visitor: void start(com.google.gson.ObjectTypePair)>(r1);

     label05:
        $r8 = r1.<com.google.gson.ObjectTypePair: java.lang.reflect.Type type>;

        $z2 = staticinvoke <com.google.gson.internal.$Gson$Types: boolean isArray(java.lang.reflect.Type)>($r8);

        if $z2 == 0 goto label06;

        $r11 = r1.<com.google.gson.ObjectTypePair: java.lang.reflect.Type type>;

        interfaceinvoke r5.<com.google.gson.ObjectNavigator$Visitor: void visitArray(java.lang.Object,java.lang.reflect.Type)>($r13, $r11);

        goto label08;

     label06:
        $r9 = r1.<com.google.gson.ObjectTypePair: java.lang.reflect.Type type>;

        if $r9 != class "Ljava/lang/Object;" goto label07;

        $z3 = staticinvoke <com.google.gson.ObjectNavigator: boolean isPrimitiveOrString(java.lang.Object)>($r13);

        if $z3 == 0 goto label07;

        interfaceinvoke r5.<com.google.gson.ObjectNavigator$Visitor: void visitPrimitive(java.lang.Object)>($r13);

        interfaceinvoke r5.<com.google.gson.ObjectNavigator$Visitor: java.lang.Object getTarget()>();

        goto label08;

     label07:
        interfaceinvoke r5.<com.google.gson.ObjectNavigator$Visitor: void startVisitingObject(java.lang.Object)>(r7);

        $r10 = r0.<com.google.gson.ObjectNavigator: com.google.gson.ReflectingFieldNavigator reflectingFieldNavigator>;

        virtualinvoke $r10.<com.google.gson.ReflectingFieldNavigator: void visitFieldsReflectively(com.google.gson.ObjectTypePair,com.google.gson.ObjectNavigator$Visitor)>(r1, r5);

     label08:
        interfaceinvoke r5.<com.google.gson.ObjectNavigator$Visitor: void end(com.google.gson.ObjectTypePair)>(r1);

        goto label11;

     label09:
        $r12 := @caughtexception;

     label10:
        interfaceinvoke r5.<com.google.gson.ObjectNavigator$Visitor: void end(com.google.gson.ObjectTypePair)>(r1);

        throw $r12;

     label11:
        return;

        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static boolean isPrimitiveOrString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "Ljava/lang/Object;" goto label1;

        if $r1 == class "Ljava/lang/String;" goto label1;

        $r2 = staticinvoke <com.google.gson.Primitives: java.lang.Class unwrap(java.lang.Class)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }
}
