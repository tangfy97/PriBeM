public class com.hp.hpl.jena.rdf.model.impl.ResourceImpl extends com.hp.hpl.jena.enhanced.EnhNode implements com.hp.hpl.jena.rdf.model.Resource
{
    public static final com.hp.hpl.jena.enhanced.Implementation factory;
    public static final com.hp.hpl.jena.enhanced.Implementation rdfNodeFactory;

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        return;
    }

    public void <init>()
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom)>(null);

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node fresh(java.lang.String)>(null);

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r1, r2);

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node fresh(java.lang.String)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>($r2, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r7;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r2, r4, $r6;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>($r6);

        specialinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>($r7, null);

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.model.AnonId)
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.AnonId r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.AnonId;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(com.hp.hpl.jena.rdf.model.AnonId,com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r1, null);

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.model.AnonId, com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.AnonId r1;
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.AnonId;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r2 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createAnon(com.hp.hpl.jena.rdf.model.AnonId)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r2, r3);

        return;
    }

    public void <init>(java.lang.String, com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node fresh(java.lang.String)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r2, r3);

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r2, r3);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r8;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r7;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r2, r4, $r6;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r8 := @parameter2: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>($r6);

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r7, r8);

        return;
    }

    public java.lang.Object visitWith(com.hp.hpl.jena.rdf.model.RDFVisitor)
    {
        com.hp.hpl.jena.rdf.model.AnonId $r3;
        com.hp.hpl.jena.rdf.model.RDFVisitor r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.Object $r4;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.RDFVisitor;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: boolean isAnon()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.AnonId getId()>();

        $r4 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.RDFVisitor: java.lang.Object visitBlank(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.AnonId)>(r0, $r3);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: java.lang.String getURI()>();

        $r4 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.RDFVisitor: java.lang.Object visitURI(com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(r0, $r2);

     label2:
        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Resource asResource()
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Literal asLiteral()
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r1;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.rdf.model.LiteralRequiredException $r0;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $r0 = new com.hp.hpl.jena.rdf.model.LiteralRequiredException;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node asNode()>();

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.LiteralRequiredException: void <init>(com.hp.hpl.jena.graph.Node)>($r2);

        throw $r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource inModel(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r6;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r3, $r5;
        com.hp.hpl.jena.rdf.model.Resource $r8;
        com.hp.hpl.jena.rdf.model.AnonId $r7;
        com.hp.hpl.jena.rdf.model.Model $r1, r2;
        java.lang.String $r4;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        if $r1 != r2 goto label1;

        $r8 = r0;

        goto label4;

     label1:
        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: boolean isAnon()>();

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.AnonId getId()>();

        $r8 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(com.hp.hpl.jena.rdf.model.AnonId)>($r7);

        goto label4;

     label2:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node asNode()>();

        $z1 = virtualinvoke $r3.<com.hp.hpl.jena.graph.Node: boolean isConcrete()>();

        if $z1 != 0 goto label3;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node asNode()>();

        $r6 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.RDFNode getRDFNode(com.hp.hpl.jena.graph.Node)>($r5);

        $r8 = (com.hp.hpl.jena.rdf.model.Resource) $r6;

        goto label4;

     label3:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: java.lang.String getURI()>();

        $r8 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>($r4);

     label4:
        return $r8;
    }

    private static com.hp.hpl.jena.graph.Node fresh(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createAnon()>();

        goto label2;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r0);

     label2:
        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.AnonId getId()
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.rdf.model.AnonId $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node asNode()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.rdf.model.AnonId getBlankNodeId()>();

        return $r2;
    }

    public java.lang.String getURI()
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: boolean isAnon()>();

        if $z0 == 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node node>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

     label2:
        return $r2;
    }

    public java.lang.String getNameSpace()
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: boolean isAnon()>();

        if $z0 == 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node node>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: java.lang.String getNameSpace()>();

     label2:
        return $r2;
    }

    public java.lang.String getLocalName()
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: boolean isAnon()>();

        if $z0 == 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node node>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: java.lang.String getLocalName()>();

     label2:
        return $r2;
    }

    public boolean hasURI(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node node>;

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: boolean hasURI(java.lang.String)>(r1);

        return $z0;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.graph.Node $r1;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.graph.Node asNode()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: java.lang.String toString()>();

        return $r2;
    }

    protected com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.HasNoModelException $r2;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom getModelCom()>();

        if $r1 != null goto label1;

        $r2 = new com.hp.hpl.jena.rdf.model.HasNoModelException;

        specialinvoke $r2.<com.hp.hpl.jena.rdf.model.HasNoModelException: void <init>(java.lang.Object)>(r0);

        throw $r2;

     label1:
        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.Statement $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement getProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.Statement $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Statement getProperty(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r3;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, null);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listProperties()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, null, null);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Resource addLiteral(com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(boolean)>(z0);

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property, long)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        long l0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        l0 := @parameter1: long;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,long)>(r0, r2, l0);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addLiteral(com.hp.hpl.jena.rdf.model.Property, long)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        long l0;
        com.hp.hpl.jena.rdf.model.Literal $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        l0 := @parameter1: long;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(long)>(l0);

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addLiteral(com.hp.hpl.jena.rdf.model.Property, char)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        char c0;
        com.hp.hpl.jena.rdf.model.Literal $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        c0 := @parameter1: char;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(char)>(c0);

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property, float)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        float f0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        f0 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,float)>(r0, r2, f0);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property, double)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        d0 := @parameter1: double;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model addLiteral(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,double)>(r0, r2, d0);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addLiteral(com.hp.hpl.jena.rdf.model.Property, double)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        d0 := @parameter1: double;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(double)>(d0);

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addLiteral(com.hp.hpl.jena.rdf.model.Property, float)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        float f0;
        com.hp.hpl.jena.rdf.model.Literal $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        f0 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(float)>(f0);

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.String r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String)>(r0, r2, r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.String r3, r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.String)>(r0, r2, r3, r4);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property, java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.datatypes.RDFDatatype r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.String r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: com.hp.hpl.jena.datatypes.RDFDatatype;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>(r0, r2, r3, r4);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addLiteral(com.hp.hpl.jena.rdf.model.Property, java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.Object r3;
        com.hp.hpl.jena.rdf.model.Literal $r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r4 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)>(r3);

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r4);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addLiteral(com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.Literal)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.Literal r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, r3);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r3;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, r3);

        return r0;
    }

    public boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r2);

        return $z0;
    }

    public boolean hasLiteral(com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        boolean z0, $z1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(boolean)>(z0);

        $z1 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r3);

        return $z1;
    }

    public boolean hasLiteral(com.hp.hpl.jena.rdf.model.Property, long)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        long l0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        l0 := @parameter1: long;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(long)>(l0);

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r3);

        return $z0;
    }

    public boolean hasLiteral(com.hp.hpl.jena.rdf.model.Property, char)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        char c0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        c0 := @parameter1: char;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(char)>(c0);

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r3);

        return $z0;
    }

    public boolean hasLiteral(com.hp.hpl.jena.rdf.model.Property, double)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        double d0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        d0 := @parameter1: double;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(double)>(d0);

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r3);

        return $z0;
    }

    public boolean hasLiteral(com.hp.hpl.jena.rdf.model.Property, float)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        float f0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        f0 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(float)>(f0);

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r3);

        return $z0;
    }

    public boolean hasProperty(com.hp.hpl.jena.rdf.model.Property, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String)>(r0, r2, r3);

        return $z0;
    }

    public boolean hasProperty(com.hp.hpl.jena.rdf.model.Property, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.String r3, r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.String)>(r0, r2, r3, r4);

        return $z0;
    }

    public boolean hasLiteral(com.hp.hpl.jena.rdf.model.Property, java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        java.lang.Object r3;
        com.hp.hpl.jena.rdf.model.Literal $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $r4 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)>(r3);

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, $r4);

        return $z0;
    }

    public boolean hasProperty(com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r3;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, r3);

        return $z0;
    }

    public com.hp.hpl.jena.rdf.model.Resource removeProperties()
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.Resource removeAll(com.hp.hpl.jena.rdf.model.Property)>(null);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource removeAll(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.Property r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model removeAll(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, r2, null);

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource begin()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model begin()>();

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource abort()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model abort()>();

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource commit()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.impl.ModelCom mustHaveModel()>();

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model commit()>();

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model getModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.enhanced.EnhGraph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        $r2 = (com.hp.hpl.jena.rdf.model.Model) $r1;

        return $r2;
    }

    protected com.hp.hpl.jena.rdf.model.impl.ModelCom getModelCom()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r2;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.enhanced.EnhGraph $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        $r2 = (com.hp.hpl.jena.rdf.model.impl.ModelCom) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Resource getPropertyResourceValue(com.hp.hpl.jena.rdf.model.Property)
    {
        java.lang.Throwable $r7;
        com.hp.hpl.jena.rdf.model.RDFNode $r5;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.rdf.model.Resource r6;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property r1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>(r1);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: java.lang.Object next()>();

        $r4 = (com.hp.hpl.jena.rdf.model.Statement) $r3;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $z1 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.RDFNode: boolean isResource()>();

        if $z1 == 0 goto label3;

        r6 = (com.hp.hpl.jena.rdf.model.Resource) $r5;

     label2:
        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        return r6;

     label3:
        goto label1;

     label4:
        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        return null;

     label5:
        $r7 := @caughtexception;

     label6:
        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public volatile com.hp.hpl.jena.rdf.model.RDFNode inModel(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ResourceImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.rdf.model.Resource inModel(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl$1 $r0;
        com.hp.hpl.jena.rdf.model.impl.ResourceImpl$2 $r1;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.ResourceImpl$1;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl$1: void <init>()>();

        <com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.enhanced.Implementation factory> = $r0;

        $r1 = new com.hp.hpl.jena.rdf.model.impl.ResourceImpl$2;

        specialinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl$2: void <init>()>();

        <com.hp.hpl.jena.rdf.model.impl.ResourceImpl: com.hp.hpl.jena.enhanced.Implementation rdfNodeFactory> = $r1;

        return;
    }
}
