public class org.apache.poi.util.SystemOutLogger extends org.apache.poi.util.POILogger
{
    private java.lang.String _cat;

    public void <init>()
    {
        org.apache.poi.util.SystemOutLogger r0;

        r0 := @this: org.apache.poi.util.SystemOutLogger;

        specialinvoke r0.<org.apache.poi.util.POILogger: void <init>()>();

        return;
    }

    public void initialize(java.lang.String)
    {
        org.apache.poi.util.SystemOutLogger r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.util.SystemOutLogger;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.poi.util.SystemOutLogger: java.lang.String _cat> = r1;

        return;
    }

    public void log(int, java.lang.Object)
    {
        org.apache.poi.util.SystemOutLogger r0;
        int i0;
        java.lang.Object r1;

        r0 := @this: org.apache.poi.util.SystemOutLogger;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.poi.util.SystemOutLogger: void log(int,java.lang.Object,java.lang.Throwable)>(i0, r1, null);

        return;
    }

    public void log(int, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r15;
        java.lang.String[] $r7, $r8;
        int i0, $i1, $i2, $i3;
        java.lang.String $r4, $r9, $r14;
        boolean $z0;
        org.apache.poi.util.SystemOutLogger r0;
        java.io.PrintStream $r2, $r16;
        java.lang.StringBuilder $r1, $r3, $r5, $r6, $r10, $r11, $r13;
        java.lang.Object r12;

        r0 := @this: org.apache.poi.util.SystemOutLogger;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.Object;

        r15 := @parameter2: java.lang.Throwable;

        $z0 = virtualinvoke r0.<org.apache.poi.util.SystemOutLogger: boolean check(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = r0.<org.apache.poi.util.SystemOutLogger: java.lang.String _cat>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = <org.apache.poi.util.SystemOutLogger: java.lang.String[] LEVEL_STRINGS_SHORT>;

        $r7 = <org.apache.poi.util.SystemOutLogger: java.lang.String[] LEVEL_STRINGS_SHORT>;

        $i1 = lengthof $r7;

        $i2 = $i1 - 1;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, i0);

        $r9 = $r8[$i3];

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r14);

        if r15 == null goto label1;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke r15.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r16);

     label1:
        return;
    }

    public boolean check(int)
    {
        org.apache.poi.util.SystemOutLogger r2;
        int i0, i1;
        java.lang.SecurityException $r1;
        java.lang.String $r0;

        r2 := @this: org.apache.poi.util.SystemOutLogger;

        i0 := @parameter0: int;

     label1:
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("poi.log.level", "5");

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        i1 = 1;

     label4:
        if i0 < i1 goto label5;

        return 1;

     label5:
        return 0;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }
}
