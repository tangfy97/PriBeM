public class org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass extends org.codehaus.groovy.reflection.stdclasses.DoubleCachedClass
{

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass r0;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.groovy.reflection.stdclasses.DoubleCachedClass: void <init>(java.lang.Class,boolean)>(r1, 1);

        return;
    }

    public boolean isDirectlyAssignable(java.lang.Object)
    {
        java.lang.Object r0;
        org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass r1;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.math.BigDecimal;

        return $z0;
    }

    public java.lang.Object coerceArgument(java.lang.Object)
    {
        java.math.BigDecimal $r1;
        org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass r3;
        java.lang.Object r0;
        java.lang.Number $r2;
        boolean $z0, $z1;
        double $d0;

        r3 := @this: org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.math.BigDecimal;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $z1 = r0 instanceof java.lang.Number;

        if $z1 == 0 goto label2;

        $r1 = new java.math.BigDecimal;

        $r2 = (java.lang.Number) r0;

        $d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>();

        specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>($d0);

        return $r1;

     label2:
        return r0;
    }
}
