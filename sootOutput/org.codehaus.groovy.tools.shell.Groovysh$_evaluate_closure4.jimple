class org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    private groovy.lang.Reference type;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Class;
    static java.lang.Class class$org$codehaus$groovy$runtime$MethodClosure;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh;

    public void <init>(java.lang.Object, java.lang.Object, groovy.lang.Reference)
    {
        groovy.lang.Reference r5, $r6;
        java.lang.Class $r0, $r1, $r7, $r8;
        org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4 r2;
        java.lang.Object r3, r4;

        r2 := @this: org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: groovy.lang.Reference;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = (groovy.lang.Reference) r5;

        r2.<org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: groovy.lang.Reference type> = $r6;

        return;
    }

    public java.lang.Object doCall(java.lang.reflect.Method)
    {
        java.lang.Object[] $r8, $r17, $r19, $r26, $r28, $r46, $r54, $r59;
        groovy.lang.Reference $r1, $r63;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.codehaus.groovy.runtime.GStringImpl $r18, $r27;
        java.util.List $r9;
        java.lang.String[] $r21, $r32;
        java.lang.Boolean $r40, $r48;
        org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4 r15;
        java.lang.Class $r2, r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14, $r22, $r23, $r29, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r49, $r50, $r51, $r56, $r57, $r58, $r60, $r61, $r62, $r66, $r67, $r68, $r72, $r73, $r74;
        java.lang.Object $r6, $r7, $r16, $r20, $r24, $r25, $r30, $r31, $r44, $r45, $r47, $r52, $r53, $r55, $r64, $r65, $r69, $r70, $r71;

        r15 := @this: org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0>;

        if $r2 != null goto label01;

        $r37 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0> = $r37;

        goto label02;

     label01:
        $r37 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0>;

     label02:
        r3 = $r37;

        $r4 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass>;

        if $r4 != null goto label03;

        $r38 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass> = $r38;

        goto label04;

     label03:
        $r38 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r5 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r5 != null goto label05;

        $r39 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r39;

        goto label06;

     label05:
        $r39 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label06:
        $r6 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r39, $r6, "name");

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = "main";

        $r8[1] = "run";

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r8);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r7, $r9);

        if $z0 == 0 goto label08;

     label07:
        $r40 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label13;

     label08:
        $r10 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r10 != null goto label09;

        $r36 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r41 = $r36;

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r36;

        goto label10;

     label09:
        $r41 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label10:
        $r11 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r11 != null goto label11;

        $r42 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r43 = $r42;

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r42;

        goto label12;

     label11:
        $r43 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label12:
        $r44 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r45 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r43, $r44, "name");

        $r46 = newarray (java.lang.Object)[1];

        $r46[0] = "super$";

        $r47 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r41, $r45, "startsWith", $r46);

        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r47);

        if $z3 != 0 goto label07;

        $r40 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label13:
        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r40);

        if $z1 == 0 goto label15;

     label14:
        $r48 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label20;

     label15:
        $r12 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r12 != null goto label16;

        $r35 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r49 = $r35;

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r35;

        goto label17;

     label16:
        $r49 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label17:
        $r13 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r13 != null goto label18;

        $r50 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r51 = $r50;

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r50;

        goto label19;

     label18:
        $r51 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label19:
        $r52 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r53 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r51, $r52, "name");

        $r54 = newarray (java.lang.Object)[1];

        $r54[0] = "class$";

        $r55 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r49, $r53, "startsWith", $r54);

        $z4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r55);

        if $z4 != 0 goto label14;

        $r48 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label20:
        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r48);

        if $z2 != 0 goto label21;

        $z5 = 1;

        goto label22;

     label21:
        $z5 = 0;

     label22:
        if $z5 == 0 goto label37;

        $r14 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r14 != null goto label23;

        $r56 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r56;

        goto label24;

     label23:
        $r56 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label24:
        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r15, "log");

        $r17 = newarray (java.lang.Object)[1];

        $r18 = new org.codehaus.groovy.runtime.GStringImpl;

        $r19 = newarray (java.lang.Object)[1];

        $r20 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r19[0] = $r20;

        $r21 = newarray (java.lang.String)[2];

        $r21[0] = "Saving method definition: ";

        $r21[1] = "";

        specialinvoke $r18.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r19, $r21);

        $r17[0] = $r18;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r56, $r16, "debug", $r17);

        $r22 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r22 != null goto label25;

        $r34 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r57 = $r34;

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r34;

        goto label26;

     label25:
        $r57 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label26:
        $r23 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$runtime$MethodClosure>;

        if $r23 != null goto label27;

        $r33 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.MethodClosure");

        $r58 = $r33;

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$runtime$MethodClosure> = $r33;

        goto label28;

     label27:
        $r58 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$runtime$MethodClosure>;

     label28:
        $r59 = newarray (java.lang.Object)[2];

        $r60 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r60 != null goto label29;

        $r61 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r62 = $r61;

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r61;

        goto label30;

     label29:
        $r62 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label30:
        $r63 = r15.<org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: groovy.lang.Reference type>;

        $r64 = virtualinvoke $r63.<groovy.lang.Reference: java.lang.Object get()>();

        $r65 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r62, $r64, "newInstance");

        $r59[0] = $r65;

        $r66 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r66 != null goto label31;

        $r67 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r68 = $r67;

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r67;

        goto label32;

     label31:
        $r68 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label32:
        $r69 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r70 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r68, $r69, "name");

        $r59[1] = $r70;

        $r71 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>($r57, $r58, $r59);

        $r72 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r72 != null goto label33;

        $r73 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r73;

        goto label34;

     label33:
        $r73 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label34:
        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r15, "interp");

        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r73, $r24, "context");

        $r26 = newarray (java.lang.Object)[2];

        $r27 = new org.codehaus.groovy.runtime.GStringImpl;

        $r28 = newarray (java.lang.Object)[1];

        $r29 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r29 != null goto label35;

        $r74 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r74;

        goto label36;

     label35:
        $r74 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label36:
        $r30 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r74, $r30, "name");

        $r28[0] = $r31;

        $r32 = newarray (java.lang.String)[2];

        $r32[0] = "";

        $r32[1] = "";

        specialinvoke $r27.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r28, $r32);

        $r26[0] = $r27;

        $r26[1] = $r71;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r3, $r25, "putAt", $r26);

        goto label37;

     label37:
        return null;
    }

    public java.lang.Object call(java.lang.reflect.Method)
    {
        java.lang.Object[] $r6;
        groovy.lang.Reference $r1;
        java.lang.Class $r2, r3, $r4, $r9, $r10;
        org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4 r5;
        java.lang.Object $r7, $r8;
        java.lang.reflect.Method r0;

        r5 := @this: org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0>;

        if $r2 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0>;

     label2:
        r3 = $r9;

        $r4 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass>;

        if $r4 != null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r6[0] = $r7;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r3, r5, "doCall", $r6);

        return $r8;
    }

    public java.lang.Class getType()
    {
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r7, $r8, $r9, $r10;
        org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4 r2;
        java.lang.Object $r4, $r6;

        r2 := @this: org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: groovy.lang.Reference type>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r5 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$java$lang$Class>;

        if $r5 != null goto label5;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$java$lang$Class> = $r10;

        goto label6;

     label5:
        $r10 = <org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: java.lang.Class class$java$lang$Class>;

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r10);

        $r7 = (java.lang.Class) $r6;

        return $r7;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
