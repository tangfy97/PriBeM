class org.codehaus.groovy.antlr.Main extends java.lang.Object
{
    static boolean whitespaceIncluded;
    static boolean showTree;
    static boolean verbose;

    void <init>()
    {
        org.codehaus.groovy.antlr.Main r0;

        r0 := @this: org.codehaus.groovy.antlr.Main;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.StringBuffer $r12, $r14, $r15;
        int $i0, $i1, i2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.PrintStream $r1, $r2, $r13, $r17;
        java.io.File $r9;
        java.lang.Exception $r11;

        r0 := @parameter0: java.lang.String[];

     label01:
        $i0 = lengthof r0;

        if $i0 <= 0 goto label11;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Parsing...");

        i2 = 0;

     label02:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label10;

        $r3 = r0[i2];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("-showtree");

        if $z0 == 0 goto label03;

        <org.codehaus.groovy.antlr.Main: boolean showTree> = 1;

        goto label09;

     label03:
        $r4 = r0[i2];

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("-verbose");

        if $z1 == 0 goto label04;

        <org.codehaus.groovy.antlr.Main: boolean verbose> = 1;

        goto label09;

     label04:
        $r5 = r0[i2];

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("-trace");

        if $z2 == 0 goto label05;

        <org.codehaus.groovy.antlr.parser.GroovyRecognizer: boolean tracing> = 1;

        <org.codehaus.groovy.antlr.parser.GroovyLexer: boolean tracing> = 1;

        goto label09;

     label05:
        $r6 = r0[i2];

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-traceParser");

        if $z3 == 0 goto label06;

        <org.codehaus.groovy.antlr.parser.GroovyRecognizer: boolean tracing> = 1;

        goto label09;

     label06:
        $r7 = r0[i2];

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("-traceLexer");

        if $z4 == 0 goto label07;

        <org.codehaus.groovy.antlr.parser.GroovyLexer: boolean tracing> = 1;

        goto label09;

     label07:
        $r8 = r0[i2];

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("-whitespaceIncluded");

        if $z5 == 0 goto label08;

        <org.codehaus.groovy.antlr.Main: boolean whitespaceIncluded> = 1;

        goto label09;

     label08:
        $r9 = new java.io.File;

        $r10 = r0[i2];

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r10);

        staticinvoke <org.codehaus.groovy.antlr.Main: void doFile(java.io.File)>($r9);

     label09:
        i2 = i2 + 1;

        goto label02;

     label10:
        goto label12;

     label11:
        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Usage: java -jar groovyc.jar [-showtree] [-verbose] [-trace{,Lexer,Parser}]<directory or file name>");

     label12:
        goto label14;

     label13:
        $r11 := @caughtexception;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("exception: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r17);

     label14:
        return;

        catch java.lang.Exception from label01 to label12 with label13;
    }

    public static void doFile(java.io.File) throws java.lang.Exception
    {
        java.lang.String[] $r13;
        java.lang.StringBuffer $r2, $r4, $r6;
        int $i0, i1;
        java.lang.String $r1, $r5, $r7, $r12, $r15;
        boolean $z0, $z1;
        java.io.PrintStream $r3;
        org.codehaus.groovy.antlr.UnicodeEscapingReader $r9;
        org.codehaus.groovy.antlr.parser.GroovyLexer $r11;
        java.io.File r0, $r14;
        org.codehaus.groovy.antlr.SourceBuffer $r8;
        java.io.FileReader $r10;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r13 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r13;

        if i1 >= $i0 goto label2;

        $r14 = new java.io.File;

        $r15 = $r13[i1];

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r15);

        staticinvoke <org.codehaus.groovy.antlr.Main: void doFile(java.io.File)>($r14);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".groovy");

        if $z1 == 0 goto label4;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" --- ");

        $r5 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = new org.codehaus.groovy.antlr.SourceBuffer;

        specialinvoke $r8.<org.codehaus.groovy.antlr.SourceBuffer: void <init>()>();

        $r9 = new org.codehaus.groovy.antlr.UnicodeEscapingReader;

        $r10 = new java.io.FileReader;

        specialinvoke $r10.<java.io.FileReader: void <init>(java.io.File)>(r0);

        specialinvoke $r9.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void <init>(java.io.Reader,org.codehaus.groovy.antlr.SourceBuffer)>($r10, $r8);

        $r11 = new org.codehaus.groovy.antlr.parser.GroovyLexer;

        specialinvoke $r11.<org.codehaus.groovy.antlr.parser.GroovyLexer: void <init>(java.io.Reader)>($r9);

        virtualinvoke $r9.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void setLexer(groovyjarjarantlr.CharScanner)>($r11);

        $r12 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        staticinvoke <org.codehaus.groovy.antlr.Main: void parseFile(java.lang.String,org.codehaus.groovy.antlr.parser.GroovyLexer,org.codehaus.groovy.antlr.SourceBuffer)>($r12, $r11, $r8);

     label4:
        return;
    }

    public static void parseFile(java.lang.String, org.codehaus.groovy.antlr.parser.GroovyLexer, org.codehaus.groovy.antlr.SourceBuffer) throws java.lang.Exception
    {
        org.codehaus.groovy.antlr.parser.GroovyRecognizer $r1;
        java.lang.String[] $r13;
        java.lang.StringBuffer $r4, $r6, $r7, $r8, $r10, $r18, $r20, $r21;
        int $i0;
        java.lang.String r3, $r11, $r22;
        groovyjarjarantlr.Token $r15;
        boolean $z0;
        java.io.PrintStream $r5, $r16, $r19;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0, $r14;
        java.lang.Exception $r17;
        org.codehaus.groovy.antlr.SourceBuffer r2;
        groovyjarjarantlr.collections.AST $r9, $r12;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.codehaus.groovy.antlr.parser.GroovyLexer;

        r2 := @parameter2: org.codehaus.groovy.antlr.SourceBuffer;

     label1:
        $r1 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyRecognizer: org.codehaus.groovy.antlr.parser.GroovyRecognizer make(org.codehaus.groovy.antlr.parser.GroovyLexer)>(r0);

        virtualinvoke $r1.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: void setSourceBuffer(org.codehaus.groovy.antlr.SourceBuffer)>(r2);

        virtualinvoke $r1.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: void setFilename(java.lang.String)>(r3);

        $z0 = <org.codehaus.groovy.antlr.Main: boolean whitespaceIncluded>;

        if $z0 == 0 goto label5;

        $r14 = virtualinvoke $r1.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: org.codehaus.groovy.antlr.parser.GroovyLexer getLexer()>();

        virtualinvoke $r14.<org.codehaus.groovy.antlr.parser.GroovyLexer: void setWhitespaceIncluded(boolean)>(1);

     label2:
        $r15 = virtualinvoke $r14.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token nextToken()>();

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.Object)>($r15);

        if $r15 == null goto label4;

        $i0 = virtualinvoke $r15.<groovyjarjarantlr.Token: int getType()>();

        if $i0 != 1 goto label3;

        goto label4;

     label3:
        goto label2;

     label4:
        return;

     label5:
        virtualinvoke $r1.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: void compilationUnit()>();

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("parseFile ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" => ");

        $r9 = virtualinvoke $r1.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: groovyjarjarantlr.collections.AST getAST()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r12 = virtualinvoke $r1.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: groovyjarjarantlr.collections.AST getAST()>();

        $r13 = virtualinvoke $r1.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: java.lang.String[] getTokenNames()>();

        staticinvoke <org.codehaus.groovy.antlr.Main: void doTreeAction(java.lang.String,groovyjarjarantlr.collections.AST,java.lang.String[])>(r3, $r12, $r13);

     label6:
        goto label8;

     label7:
        $r17 := @caughtexception;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("parser exception: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r17);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

        virtualinvoke $r17.<java.lang.Exception: void printStackTrace()>();

     label8:
        return;

        catch java.lang.Exception from label1 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static void doTreeAction(java.lang.String, groovyjarjarantlr.collections.AST, java.lang.String[])
    {
        org.codehaus.groovy.antlr.Main$1 $r5;
        java.io.PrintStream $r6;
        java.lang.String[] r1;
        groovyjarjarantlr.debug.misc.ASTFrame $r4;
        java.lang.String $r7, r8;
        groovyjarjarantlr.collections.AST r0, $r3;
        groovyjarjarantlr.ASTFactory $r2;
        boolean $z0, $z1;

        r8 := @parameter0: java.lang.String;

        r0 := @parameter1: groovyjarjarantlr.collections.AST;

        r1 := @parameter2: java.lang.String[];

        if r0 != null goto label1;

        return;

     label1:
        $z0 = <org.codehaus.groovy.antlr.Main: boolean showTree>;

        if $z0 == 0 goto label2;

        staticinvoke <groovyjarjarantlr.CommonAST: void setVerboseStringConversion(boolean,java.lang.String[])>(1, r1);

        $r2 = new groovyjarjarantlr.ASTFactory;

        specialinvoke $r2.<groovyjarjarantlr.ASTFactory: void <init>()>();

        $r3 = virtualinvoke $r2.<groovyjarjarantlr.ASTFactory: groovyjarjarantlr.collections.AST create(int,java.lang.String)>(0, "AST ROOT");

        interfaceinvoke $r3.<groovyjarjarantlr.collections.AST: void setFirstChild(groovyjarjarantlr.collections.AST)>(r0);

        $r4 = new groovyjarjarantlr.debug.misc.ASTFrame;

        specialinvoke $r4.<groovyjarjarantlr.debug.misc.ASTFrame: void <init>(java.lang.String,groovyjarjarantlr.collections.AST)>("Groovy AST", $r3);

        virtualinvoke $r4.<groovyjarjarantlr.debug.misc.ASTFrame: void setVisible(boolean)>(1);

        $r5 = new org.codehaus.groovy.antlr.Main$1;

        specialinvoke $r5.<org.codehaus.groovy.antlr.Main$1: void <init>(groovyjarjarantlr.debug.misc.ASTFrame)>($r4);

        virtualinvoke $r4.<groovyjarjarantlr.debug.misc.ASTFrame: void addWindowListener(java.awt.event.WindowListener)>($r5);

        $z1 = <org.codehaus.groovy.antlr.Main: boolean verbose>;

        if $z1 == 0 goto label2;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: java.lang.String toStringList()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label2:
        return;
    }

    static void <clinit>()
    {
        <org.codehaus.groovy.antlr.Main: boolean whitespaceIncluded> = 0;

        <org.codehaus.groovy.antlr.Main: boolean showTree> = 0;

        <org.codehaus.groovy.antlr.Main: boolean verbose> = 0;

        return;
    }
}
