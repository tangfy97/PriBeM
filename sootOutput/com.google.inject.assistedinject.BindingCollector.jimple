class com.google.inject.assistedinject.BindingCollector extends java.lang.Object
{
    private final java.util.Map bindings;

    void <init>()
    {
        com.google.inject.assistedinject.BindingCollector r0;
        java.util.HashMap $r1;

        r0 := @this: com.google.inject.assistedinject.BindingCollector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.inject.internal.util.$Maps: java.util.HashMap newHashMap()>();

        r0.<com.google.inject.assistedinject.BindingCollector: java.util.Map bindings> = $r1;

        return;
    }

    public com.google.inject.assistedinject.BindingCollector addBinding(com.google.inject.Key, com.google.inject.TypeLiteral)
    {
        com.google.inject.Key r1;
        com.google.inject.ConfigurationException $r5;
        com.google.inject.assistedinject.BindingCollector r0;
        com.google.inject.internal.util.$ImmutableSet $r11;
        com.google.inject.spi.Message $r6;
        java.util.Map $r2, $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        com.google.inject.TypeLiteral r3;
        boolean $z0;

        r0 := @this: com.google.inject.assistedinject.BindingCollector;

        r1 := @parameter0: com.google.inject.Key;

        r3 := @parameter1: com.google.inject.TypeLiteral;

        $r2 = r0.<com.google.inject.assistedinject.BindingCollector: java.util.Map bindings>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = new com.google.inject.ConfigurationException;

        $r6 = new com.google.inject.spi.Message;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only one implementation can be specified for ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.google.inject.spi.Message: void <init>(java.lang.String)>($r10);

        $r11 = staticinvoke <com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet of(java.lang.Object)>($r6);

        specialinvoke $r5.<com.google.inject.ConfigurationException: void <init>(java.lang.Iterable)>($r11);

        throw $r5;

     label1:
        $r4 = r0.<com.google.inject.assistedinject.BindingCollector: java.util.Map bindings>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return r0;
    }

    public java.util.Map getBindings()
    {
        com.google.inject.assistedinject.BindingCollector r0;
        java.util.Map $r1, $r2;

        r0 := @this: com.google.inject.assistedinject.BindingCollector;

        $r1 = r0.<com.google.inject.assistedinject.BindingCollector: java.util.Map bindings>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }
}
