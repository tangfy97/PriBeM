public class org.apache.batik.anim.values.AnimatableIntegerValue extends org.apache.batik.anim.values.AnimatableValue
{
    protected int value;

    protected void <init>(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        org.apache.batik.anim.values.AnimatableIntegerValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableIntegerValue;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        specialinvoke r0.<org.apache.batik.anim.values.AnimatableValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>(r1);

        return;
    }

    public void <init>(org.apache.batik.dom.anim.AnimationTarget, int)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        int i0;
        org.apache.batik.anim.values.AnimatableIntegerValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableIntegerValue;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.batik.anim.values.AnimatableValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>(r1);

        r0.<org.apache.batik.anim.values.AnimatableIntegerValue: int value> = i0;

        return;
    }

    public org.apache.batik.anim.values.AnimatableValue interpolate(org.apache.batik.anim.values.AnimatableValue, org.apache.batik.anim.values.AnimatableValue, float, org.apache.batik.anim.values.AnimatableValue, int)
    {
        org.apache.batik.dom.anim.AnimationTarget $r5;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        org.apache.batik.anim.values.AnimatableIntegerValue r1, $r4, r6, r7, r8;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        org.apache.batik.anim.values.AnimatableValue r0, r2, r3;

        r1 := @this: org.apache.batik.anim.values.AnimatableIntegerValue;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        r2 := @parameter1: org.apache.batik.anim.values.AnimatableValue;

        f0 := @parameter2: float;

        r3 := @parameter3: org.apache.batik.anim.values.AnimatableValue;

        i1 := @parameter4: int;

        if r0 != null goto label1;

        $r4 = new org.apache.batik.anim.values.AnimatableIntegerValue;

        $r5 = r1.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        specialinvoke $r4.<org.apache.batik.anim.values.AnimatableIntegerValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>($r5);

        r6 = $r4;

        goto label2;

     label1:
        r6 = (org.apache.batik.anim.values.AnimatableIntegerValue) r0;

     label2:
        $i8 = r1.<org.apache.batik.anim.values.AnimatableIntegerValue: int value>;

        i9 = $i8;

        if r2 == null goto label3;

        r7 = (org.apache.batik.anim.values.AnimatableIntegerValue) r2;

        $f1 = (float) $i8;

        $i4 = r1.<org.apache.batik.anim.values.AnimatableIntegerValue: int value>;

        $f2 = (float) $i4;

        $i5 = virtualinvoke r7.<org.apache.batik.anim.values.AnimatableIntegerValue: int getValue()>();

        $i6 = r1.<org.apache.batik.anim.values.AnimatableIntegerValue: int value>;

        $i7 = $i5 - $i6;

        $f3 = (float) $i7;

        $f4 = f0 * $f3;

        $f5 = $f2 + $f4;

        $f6 = $f1 + $f5;

        i9 = (int) $f6;

     label3:
        if r3 == null goto label4;

        r8 = (org.apache.batik.anim.values.AnimatableIntegerValue) r3;

        $i2 = virtualinvoke r8.<org.apache.batik.anim.values.AnimatableIntegerValue: int getValue()>();

        $i3 = i1 * $i2;

        i9 = i9 + $i3;

     label4:
        $i0 = r6.<org.apache.batik.anim.values.AnimatableIntegerValue: int value>;

        if $i0 == i9 goto label5;

        r6.<org.apache.batik.anim.values.AnimatableIntegerValue: int value> = i9;

        r6.<org.apache.batik.anim.values.AnimatableValue: boolean hasChanged> = 1;

     label5:
        return r6;
    }

    public int getValue()
    {
        int $i0;
        org.apache.batik.anim.values.AnimatableIntegerValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableIntegerValue;

        $i0 = r0.<org.apache.batik.anim.values.AnimatableIntegerValue: int value>;

        return $i0;
    }

    public boolean canPace()
    {
        org.apache.batik.anim.values.AnimatableIntegerValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableIntegerValue;

        return 1;
    }

    public float distanceTo(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.anim.values.AnimatableIntegerValue r1, r2;
        int $i0, $i1, $i2, $i3;
        float $f0;
        org.apache.batik.anim.values.AnimatableValue r0;

        r2 := @this: org.apache.batik.anim.values.AnimatableIntegerValue;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        r1 = (org.apache.batik.anim.values.AnimatableIntegerValue) r0;

        $i1 = r2.<org.apache.batik.anim.values.AnimatableIntegerValue: int value>;

        $i0 = r1.<org.apache.batik.anim.values.AnimatableIntegerValue: int value>;

        $i2 = $i1 - $i0;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $f0 = (float) $i3;

        return $f0;
    }

    public org.apache.batik.anim.values.AnimatableValue getZeroValue()
    {
        org.apache.batik.dom.anim.AnimationTarget $r2;
        org.apache.batik.anim.values.AnimatableIntegerValue $r0, r1;

        r1 := @this: org.apache.batik.anim.values.AnimatableIntegerValue;

        $r0 = new org.apache.batik.anim.values.AnimatableIntegerValue;

        $r2 = r1.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        specialinvoke $r0.<org.apache.batik.anim.values.AnimatableIntegerValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,int)>($r2, 0);

        return $r0;
    }

    public java.lang.String getCssText()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.batik.anim.values.AnimatableIntegerValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableIntegerValue;

        $i0 = r0.<org.apache.batik.anim.values.AnimatableIntegerValue: int value>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r1;
    }
}
