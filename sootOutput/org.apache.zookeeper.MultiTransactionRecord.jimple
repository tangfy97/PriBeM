public class org.apache.zookeeper.MultiTransactionRecord extends java.lang.Object implements org.apache.jute.Record, java.lang.Iterable
{
    private java.util.List ops;

    public void <init>()
    {
        org.apache.zookeeper.MultiTransactionRecord r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.zookeeper.MultiTransactionRecord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops> = $r1;

        return;
    }

    public void <init>(java.lang.Iterable)
    {
        org.apache.zookeeper.MultiTransactionRecord r0;
        org.apache.zookeeper.Op r5;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.Iterable r2;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.MultiTransactionRecord;

        r2 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops> = $r1;

        $r3 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.zookeeper.Op) $r4;

        virtualinvoke r0.<org.apache.zookeeper.MultiTransactionRecord: void add(org.apache.zookeeper.Op)>(r5);

        goto label1;

     label2:
        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.zookeeper.MultiTransactionRecord r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.zookeeper.MultiTransactionRecord;

        $r1 = r0.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public void add(org.apache.zookeeper.Op)
    {
        org.apache.zookeeper.MultiTransactionRecord r0;
        org.apache.zookeeper.Op r1;
        java.util.List $r2;

        r0 := @this: org.apache.zookeeper.MultiTransactionRecord;

        r1 := @parameter0: org.apache.zookeeper.Op;

        $r2 = r0.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.zookeeper.MultiTransactionRecord r0;
        java.util.List $r1;

        r0 := @this: org.apache.zookeeper.MultiTransactionRecord;

        $r1 = r0.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void serialize(org.apache.jute.OutputArchive, java.lang.String) throws java.io.IOException
    {
        org.apache.jute.OutputArchive r0;
        int $i0, $i1, $i3, $i5, $i7;
        java.lang.String r2;
        boolean $z0;
        org.apache.zookeeper.MultiTransactionRecord r1;
        org.apache.zookeeper.Op r7;
        java.util.Iterator $r4;
        org.apache.jute.Record $r9, $r10, $r11, $r12;
        java.io.IOException $r15;
        java.util.List $r3;
        java.lang.Object $r6;
        org.apache.zookeeper.proto.MultiHeader $r14, $r16;

        r1 := @this: org.apache.zookeeper.MultiTransactionRecord;

        r0 := @parameter0: org.apache.jute.OutputArchive;

        r2 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        $r3 = r1.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.zookeeper.Op) $r6;

        $r14 = new org.apache.zookeeper.proto.MultiHeader;

        $i0 = virtualinvoke r7.<org.apache.zookeeper.Op: int getType()>();

        $i3 = (int) -1;

        specialinvoke $r14.<org.apache.zookeeper.proto.MultiHeader: void <init>(int,boolean,int)>($i0, 0, $i3);

        virtualinvoke $r14.<org.apache.zookeeper.proto.MultiHeader: void serialize(org.apache.jute.OutputArchive,java.lang.String)>(r0, r2);

        $i1 = virtualinvoke r7.<org.apache.zookeeper.Op: int getType()>();

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 5: goto label4;
            case 13: goto label5;
            default: goto label6;
        };

     label2:
        $r12 = virtualinvoke r7.<org.apache.zookeeper.Op: org.apache.jute.Record toRequestRecord()>();

        interfaceinvoke $r12.<org.apache.jute.Record: void serialize(org.apache.jute.OutputArchive,java.lang.String)>(r0, r2);

        goto label7;

     label3:
        $r11 = virtualinvoke r7.<org.apache.zookeeper.Op: org.apache.jute.Record toRequestRecord()>();

        interfaceinvoke $r11.<org.apache.jute.Record: void serialize(org.apache.jute.OutputArchive,java.lang.String)>(r0, r2);

        goto label7;

     label4:
        $r10 = virtualinvoke r7.<org.apache.zookeeper.Op: org.apache.jute.Record toRequestRecord()>();

        interfaceinvoke $r10.<org.apache.jute.Record: void serialize(org.apache.jute.OutputArchive,java.lang.String)>(r0, r2);

        goto label7;

     label5:
        $r9 = virtualinvoke r7.<org.apache.zookeeper.Op: org.apache.jute.Record toRequestRecord()>();

        interfaceinvoke $r9.<org.apache.jute.Record: void serialize(org.apache.jute.OutputArchive,java.lang.String)>(r0, r2);

        goto label7;

     label6:
        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Invalid type of op");

        throw $r15;

     label7:
        goto label1;

     label8:
        $r16 = new org.apache.zookeeper.proto.MultiHeader;

        $i5 = (int) -1;

        $i7 = (int) -1;

        specialinvoke $r16.<org.apache.zookeeper.proto.MultiHeader: void <init>(int,boolean,int)>($i5, 1, $i7);

        virtualinvoke $r16.<org.apache.zookeeper.proto.MultiHeader: void serialize(org.apache.jute.OutputArchive,java.lang.String)>(r0, r2);

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        return;
    }

    public void deserialize(org.apache.jute.InputArchive, java.lang.String) throws java.io.IOException
    {
        byte[] $r9, $r16;
        org.apache.zookeeper.proto.DeleteRequest $r11;
        org.apache.jute.InputArchive r0;
        org.apache.zookeeper.proto.CreateRequest $r14;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r1, $r5, $r8, $r12, $r15;
        boolean $z0;
        org.apache.zookeeper.MultiTransactionRecord r4;
        org.apache.zookeeper.Op $r6, $r10, $r13, $r18;
        java.io.IOException $r19;
        org.apache.zookeeper.proto.SetDataRequest $r7;
        java.util.List $r17;
        org.apache.zookeeper.proto.CheckVersionRequest $r3;
        org.apache.zookeeper.proto.MultiHeader $r2;

        r4 := @this: org.apache.zookeeper.MultiTransactionRecord;

        r0 := @parameter0: org.apache.jute.InputArchive;

        r1 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void startRecord(java.lang.String)>(r1);

        $r2 = new org.apache.zookeeper.proto.MultiHeader;

        specialinvoke $r2.<org.apache.zookeeper.proto.MultiHeader: void <init>()>();

        virtualinvoke $r2.<org.apache.zookeeper.proto.MultiHeader: void deserialize(org.apache.jute.InputArchive,java.lang.String)>(r0, r1);

     label1:
        $z0 = virtualinvoke $r2.<org.apache.zookeeper.proto.MultiHeader: boolean getDone()>();

        if $z0 != 0 goto label8;

        $i0 = virtualinvoke $r2.<org.apache.zookeeper.proto.MultiHeader: int getType()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 5: goto label4;
            case 13: goto label5;
            default: goto label6;
        };

     label2:
        $r14 = new org.apache.zookeeper.proto.CreateRequest;

        specialinvoke $r14.<org.apache.zookeeper.proto.CreateRequest: void <init>()>();

        virtualinvoke $r14.<org.apache.zookeeper.proto.CreateRequest: void deserialize(org.apache.jute.InputArchive,java.lang.String)>(r0, r1);

        $r15 = virtualinvoke $r14.<org.apache.zookeeper.proto.CreateRequest: java.lang.String getPath()>();

        $r16 = virtualinvoke $r14.<org.apache.zookeeper.proto.CreateRequest: byte[] getData()>();

        $r17 = virtualinvoke $r14.<org.apache.zookeeper.proto.CreateRequest: java.util.List getAcl()>();

        $i4 = virtualinvoke $r14.<org.apache.zookeeper.proto.CreateRequest: int getFlags()>();

        $r18 = staticinvoke <org.apache.zookeeper.Op: org.apache.zookeeper.Op create(java.lang.String,byte[],java.util.List,int)>($r15, $r16, $r17, $i4);

        virtualinvoke r4.<org.apache.zookeeper.MultiTransactionRecord: void add(org.apache.zookeeper.Op)>($r18);

        goto label7;

     label3:
        $r11 = new org.apache.zookeeper.proto.DeleteRequest;

        specialinvoke $r11.<org.apache.zookeeper.proto.DeleteRequest: void <init>()>();

        virtualinvoke $r11.<org.apache.zookeeper.proto.DeleteRequest: void deserialize(org.apache.jute.InputArchive,java.lang.String)>(r0, r1);

        $r12 = virtualinvoke $r11.<org.apache.zookeeper.proto.DeleteRequest: java.lang.String getPath()>();

        $i3 = virtualinvoke $r11.<org.apache.zookeeper.proto.DeleteRequest: int getVersion()>();

        $r13 = staticinvoke <org.apache.zookeeper.Op: org.apache.zookeeper.Op delete(java.lang.String,int)>($r12, $i3);

        virtualinvoke r4.<org.apache.zookeeper.MultiTransactionRecord: void add(org.apache.zookeeper.Op)>($r13);

        goto label7;

     label4:
        $r7 = new org.apache.zookeeper.proto.SetDataRequest;

        specialinvoke $r7.<org.apache.zookeeper.proto.SetDataRequest: void <init>()>();

        virtualinvoke $r7.<org.apache.zookeeper.proto.SetDataRequest: void deserialize(org.apache.jute.InputArchive,java.lang.String)>(r0, r1);

        $r8 = virtualinvoke $r7.<org.apache.zookeeper.proto.SetDataRequest: java.lang.String getPath()>();

        $r9 = virtualinvoke $r7.<org.apache.zookeeper.proto.SetDataRequest: byte[] getData()>();

        $i2 = virtualinvoke $r7.<org.apache.zookeeper.proto.SetDataRequest: int getVersion()>();

        $r10 = staticinvoke <org.apache.zookeeper.Op: org.apache.zookeeper.Op setData(java.lang.String,byte[],int)>($r8, $r9, $i2);

        virtualinvoke r4.<org.apache.zookeeper.MultiTransactionRecord: void add(org.apache.zookeeper.Op)>($r10);

        goto label7;

     label5:
        $r3 = new org.apache.zookeeper.proto.CheckVersionRequest;

        specialinvoke $r3.<org.apache.zookeeper.proto.CheckVersionRequest: void <init>()>();

        virtualinvoke $r3.<org.apache.zookeeper.proto.CheckVersionRequest: void deserialize(org.apache.jute.InputArchive,java.lang.String)>(r0, r1);

        $r5 = virtualinvoke $r3.<org.apache.zookeeper.proto.CheckVersionRequest: java.lang.String getPath()>();

        $i1 = virtualinvoke $r3.<org.apache.zookeeper.proto.CheckVersionRequest: int getVersion()>();

        $r6 = staticinvoke <org.apache.zookeeper.Op: org.apache.zookeeper.Op check(java.lang.String,int)>($r5, $i1);

        virtualinvoke r4.<org.apache.zookeeper.MultiTransactionRecord: void add(org.apache.zookeeper.Op)>($r6);

        goto label7;

     label6:
        $r19 = new java.io.IOException;

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>("Invalid type of op");

        throw $r19;

     label7:
        virtualinvoke $r2.<org.apache.zookeeper.proto.MultiHeader: void deserialize(org.apache.jute.InputArchive,java.lang.String)>(r0, r1);

        goto label1;

     label8:
        interfaceinvoke r0.<org.apache.jute.InputArchive: void endRecord(java.lang.String)>(r1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.zookeeper.MultiTransactionRecord r0, r2;
        org.apache.zookeeper.Op r10, r12;
        java.util.Iterator $r6, $r8;
        java.util.List $r3, $r4, $r5, $r7;
        java.lang.Object r1, $r9, $r11;

        r0 := @this: org.apache.zookeeper.MultiTransactionRecord;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof org.apache.zookeeper.MultiTransactionRecord;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r2 = (org.apache.zookeeper.MultiTransactionRecord) r1;

        $r3 = r0.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops>;

        if $r3 == null goto label09;

        $r5 = r2.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        $r7 = r0.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.zookeeper.Op) $r9;

        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label04;

        return 0;

     label04:
        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.zookeeper.Op) $r11;

        $z4 = virtualinvoke r10.<java.lang.Object: boolean equals(java.lang.Object)>(r12);

        if $z4 != 0 goto label05;

        return 0;

     label05:
        goto label03;

     label06:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        return $z5;

     label09:
        $r4 = r2.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops>;

        if $r4 != null goto label10;

        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        return $z6;
    }

    public int hashCode()
    {
        org.apache.zookeeper.MultiTransactionRecord r0;
        org.apache.zookeeper.Op r4;
        java.util.Iterator $r2;
        java.util.List $r1;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.MultiTransactionRecord;

        i2 = 1023;

        $r1 = r0.<org.apache.zookeeper.MultiTransactionRecord: java.util.List ops>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.zookeeper.Op) $r3;

        $i0 = i2 * 25;

        $i1 = virtualinvoke r4.<java.lang.Object: int hashCode()>();

        i2 = $i0 + $i1;

        goto label1;

     label2:
        return i2;
    }
}
