public class org.apache.velocity.util.ArrayListWrapper extends java.util.AbstractList
{
    private java.lang.Object array;

    public void <init>(java.lang.Object)
    {
        org.apache.velocity.util.ArrayListWrapper r0;
        java.lang.Object r1;

        r0 := @this: org.apache.velocity.util.ArrayListWrapper;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<org.apache.velocity.util.ArrayListWrapper: java.lang.Object array> = r1;

        return;
    }

    public java.lang.Object get(int)
    {
        org.apache.velocity.util.ArrayListWrapper r0;
        int i0;
        java.lang.Object $r1, $r2;

        r0 := @this: org.apache.velocity.util.ArrayListWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.velocity.util.ArrayListWrapper: java.lang.Object array>;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r1, i0);

        return $r2;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        org.apache.velocity.util.ArrayListWrapper r0;
        int i0;
        java.lang.Object $r1, r2, $r3;

        r0 := @this: org.apache.velocity.util.ArrayListWrapper;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.velocity.util.ArrayListWrapper: java.lang.Object get(int)>(i0);

        $r3 = r0.<org.apache.velocity.util.ArrayListWrapper: java.lang.Object array>;

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r3, i0, r2);

        return $r1;
    }

    public int size()
    {
        org.apache.velocity.util.ArrayListWrapper r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: org.apache.velocity.util.ArrayListWrapper;

        $r1 = r0.<org.apache.velocity.util.ArrayListWrapper: java.lang.Object array>;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r1);

        return $i0;
    }
}
