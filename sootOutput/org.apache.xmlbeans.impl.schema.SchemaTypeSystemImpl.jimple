public class org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl extends org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase implements org.apache.xmlbeans.SchemaTypeSystem
{
    public static final int DATA_BABE;
    public static final int MAJOR_VERSION;
    public static final int MINOR_VERSION;
    public static final int RELEASE_NUMBER;
    public static final int FILETYPE_SCHEMAINDEX;
    public static final int FILETYPE_SCHEMATYPE;
    public static final int FILETYPE_SCHEMAELEMENT;
    public static final int FILETYPE_SCHEMAATTRIBUTE;
    public static final int FILETYPE_SCHEMAPOINTER;
    public static final int FILETYPE_SCHEMAMODELGROUP;
    public static final int FILETYPE_SCHEMAATTRIBUTEGROUP;
    public static final int FILETYPE_SCHEMAIDENTITYCONSTRAINT;
    public static final int FLAG_PART_SKIPPABLE;
    public static final int FLAG_PART_FIXED;
    public static final int FLAG_PART_NILLABLE;
    public static final int FLAG_PART_BLOCKEXT;
    public static final int FLAG_PART_BLOCKREST;
    public static final int FLAG_PART_BLOCKSUBST;
    public static final int FLAG_PART_ABSTRACT;
    public static final int FLAG_PART_FINALEXT;
    public static final int FLAG_PART_FINALREST;
    public static final int FLAG_PROP_ISATTR;
    public static final int FLAG_PROP_JAVASINGLETON;
    public static final int FLAG_PROP_JAVAOPTIONAL;
    public static final int FLAG_PROP_JAVAARRAY;
    public static final int FIELD_NONE;
    public static final int FIELD_GLOBAL;
    public static final int FIELD_LOCALATTR;
    public static final int FIELD_LOCALELT;
    static final int FLAG_SIMPLE_TYPE;
    static final int FLAG_DOCUMENT_TYPE;
    static final int FLAG_ORDERED;
    static final int FLAG_BOUNDED;
    static final int FLAG_FINITE;
    static final int FLAG_NUMERIC;
    static final int FLAG_STRINGENUM;
    static final int FLAG_UNION_OF_LISTS;
    static final int FLAG_HAS_PATTERN;
    static final int FLAG_ORDER_SENSITIVE;
    static final int FLAG_TOTAL_ORDER;
    static final int FLAG_COMPILED;
    static final int FLAG_BLOCK_EXT;
    static final int FLAG_BLOCK_REST;
    static final int FLAG_FINAL_EXT;
    static final int FLAG_FINAL_REST;
    static final int FLAG_FINAL_UNION;
    static final int FLAG_FINAL_LIST;
    static final int FLAG_ABSTRACT;
    static final int FLAG_ATTRIBUTE_TYPE;
    public static java.lang.String METADATA_PACKAGE_GEN;
    private static final java.lang.String HOLDER_TEMPLATE_CLASS;
    private static final java.lang.String HOLDER_TEMPLATE_CLASSFILE;
    private static final java.lang.String[] HOLDER_TEMPLATE_NAMES;
    private static final int CONSTANT_UTF8;
    private static final int CONSTANT_UNICODE;
    private static final int CONSTANT_INTEGER;
    private static final int CONSTANT_FLOAT;
    private static final int CONSTANT_LONG;
    private static final int CONSTANT_DOUBLE;
    private static final int CONSTANT_CLASS;
    private static final int CONSTANT_STRING;
    private static final int CONSTANT_FIELD;
    private static final int CONSTANT_METHOD;
    private static final int CONSTANT_INTERFACEMETHOD;
    private static final int CONSTANT_NAMEANDTYPE;
    private static final int MAX_UNSIGNED_SHORT;
    private static java.util.Random _random;
    private static byte[] _mask;
    private java.lang.String _name;
    private java.lang.String _basePackage;
    private boolean _incomplete;
    private java.lang.ClassLoader _classloader;
    private org.apache.xmlbeans.ResourceLoader _resourceLoader;
    org.apache.xmlbeans.SchemaTypeLoader _linker;
    private org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles;
    private org.apache.xmlbeans.Filer _filer;
    private java.util.List _annotations;
    private java.util.Map _containers;
    private org.apache.xmlbeans.impl.schema.SchemaDependencies _deps;
    private java.util.List _redefinedModelGroups;
    private java.util.List _redefinedAttributeGroups;
    private java.util.List _redefinedGlobalTypes;
    private java.util.Map _globalElements;
    private java.util.Map _globalAttributes;
    private java.util.Map _modelGroups;
    private java.util.Map _attributeGroups;
    private java.util.Map _globalTypes;
    private java.util.Map _documentTypes;
    private java.util.Map _attributeTypes;
    private java.util.Map _identityConstraints;
    private java.util.Map _typeRefsByClassname;
    private java.util.Set _namespaces;
    private static final org.apache.xmlbeans.SchemaType[] EMPTY_ST_ARRAY;
    private static final org.apache.xmlbeans.SchemaGlobalElement[] EMPTY_GE_ARRAY;
    private static final org.apache.xmlbeans.SchemaGlobalAttribute[] EMPTY_GA_ARRAY;
    private static final org.apache.xmlbeans.SchemaModelGroup[] EMPTY_MG_ARRAY;
    private static final org.apache.xmlbeans.SchemaAttributeGroup[] EMPTY_AG_ARRAY;
    private static final org.apache.xmlbeans.SchemaIdentityConstraint[] EMPTY_IC_ARRAY;
    private static final org.apache.xmlbeans.SchemaAnnotation[] EMPTY_ANN_ARRAY;
    static final byte[] SINGLE_ZERO_BYTE;
    private final java.util.Map _resolvedHandles;
    private boolean _allNonGroupHandlesResolved;
    static java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl;

    private static java.lang.String nameToPathString(java.lang.String)
    {
        java.lang.StringBuffer $r1, $r2, $r3;
        int $i0;
        java.lang.String $r0, r4, r5;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r4.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        r5 = $r0;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return r5;
    }

    public void <init>(java.lang.Class)
    {
        java.lang.Error $r25;
        java.util.HashMap $r27, $r28, $r29;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.StringBuffer $r9, $r11, $r21, $r23, $r30, $r32;
        java.util.Map $r2;
        int $i0, $i2;
        java.lang.String $r6, $r7, $r10, $r12, $r13, $r14, $r22, $r24;
        org.apache.xmlbeans.SchemaTypeLoader $r17;
        java.lang.RuntimeException $r26;
        org.apache.xmlbeans.impl.schema.ClassLoaderResourceLoader $r31;
        java.lang.Class r5;
        java.lang.ClassLoader $r15, $r16, $r19;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r5 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete> = 0;

        $r27 = new java.util.HashMap;

        specialinvoke $r27.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers> = $r27;

        $r2 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints> = $r2;

        $r28 = new java.util.HashMap;

        specialinvoke $r28.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _typeRefsByClassname> = $r28;

        $r29 = new java.util.HashMap;

        specialinvoke $r29.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles> = $r29;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _allNonGroupHandlesResolved> = 0;

        $r6 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int lastIndexOf(int)>(46);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name> = $r7;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loading type system ");

        $r10 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r12, 1);

        $r13 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        $r14 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String nameToPathString(java.lang.String)>($r13);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _basePackage> = $r14;

        $r15 = virtualinvoke r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.ClassLoader _classloader> = $r15;

        $r16 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.ClassLoader _classloader>;

        $r17 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader build(org.apache.xmlbeans.SchemaTypeLoader[],org.apache.xmlbeans.ResourceLoader,java.lang.ClassLoader)>(null, null, $r16);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker> = $r17;

        $r31 = new org.apache.xmlbeans.impl.schema.ClassLoaderResourceLoader;

        $r19 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.ClassLoader _classloader>;

        specialinvoke $r31.<org.apache.xmlbeans.impl.schema.ClassLoaderResourceLoader: void <init>(java.lang.ClassLoader)>($r19);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader> = $r31;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void initFromHeader()>();

     label2:
        goto label5;

     label3:
        $r26 := @caughtexception;

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: java.lang.Throwable logException(java.lang.Throwable)>($r26);

        throw $r26;

     label4:
        $r25 := @caughtexception;

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: java.lang.Throwable logException(java.lang.Throwable)>($r25);

        throw $r25;

     label5:
        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Finished loading type system ");

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $i2 = (int) -1;

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r24, $i2);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Error from label1 to label2 with label4;
    }

    public static boolean fileContainsTypeSystem(java.io.File, java.lang.String)
    {
        java.lang.Throwable $r11;
        java.lang.StringBuffer $r0, $r3, $r4, $r13, $r14, $r15;
        java.util.zip.ZipFile $r7, r20;
        java.lang.String r1, $r2, $r5, $r16, $r18;
        java.util.zip.ZipEntry $r8;
        boolean $z0, z1, $z2, $z3, $z4;
        java.io.IOException $r10, $r12, $r19;
        java.io.File r6, $r9;
        org.apache.xmlbeans.SchemaTypeLoaderException $r17;

        r6 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String nameToPathString(java.lang.String)>(r1);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("index.xsb");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = virtualinvoke r6.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label01;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>(r6, $r5);

        $z3 = virtualinvoke $r9.<java.io.File: boolean isFile()>();

        return $z3;

     label01:
        r20 = null;

     label02:
        $r7 = new java.util.zip.ZipFile;

        specialinvoke $r7.<java.util.zip.ZipFile: void <init>(java.io.File)>(r6);

        r20 = $r7;

        $r8 = virtualinvoke $r7.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>($r5);

        if $r8 == null goto label03;

        $z2 = virtualinvoke $r8.<java.util.zip.ZipEntry: boolean isDirectory()>();

        if $z2 != 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z1 = $z4;

     label05:
        if $r7 == null goto label09;

     label06:
        virtualinvoke $r7.<java.util.zip.ZipFile: void close()>();

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

     label09:
        return z1;

     label10:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Problem loading SchemaTypeSystem, zipfilename ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: java.lang.String log(java.lang.String)>($r16);

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: java.lang.Throwable logException(java.lang.Throwable)>($r12);

        $r17 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r18 = virtualinvoke $r12.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r17.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r18, r1, "index", 9);

        throw $r17;

     label11:
        $r11 := @caughtexception;

     label12:
        if r20 == null goto label16;

     label13:
        virtualinvoke r20.<java.util.zip.ZipFile: void close()>();

     label14:
        goto label16;

     label15:
        $r10 := @caughtexception;

     label16:
        throw $r11;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label02 to label05 with label10;
        catch java.lang.Throwable from label02 to label05 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label10 to label12 with label11;
    }

    public static org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl forName(java.lang.String, java.lang.ClassLoader)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r10;
        java.lang.reflect.Field $r8;
        java.lang.Exception $r11;
        java.lang.StringBuffer $r0, $r2, $r3, $r4;
        java.lang.Class $r7;
        java.lang.Object $r9;
        java.lang.String r1, $r5;
        java.lang.ClassLoader r6;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.ClassLoader;

     label1:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TypeSystemHolder");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r5, 1, r6);

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("typeSystem");

        $r9 = virtualinvoke $r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r10 = (org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl) $r9;

     label2:
        return $r10;

     label3:
        $r11 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>(org.apache.xmlbeans.ResourceLoader, java.lang.String, org.apache.xmlbeans.SchemaTypeLoader)
    {
        org.apache.xmlbeans.SchemaTypeLoader r8;
        java.lang.Error $r10;
        java.util.HashMap $r1, $r3, $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.RuntimeException $r11;
        org.apache.xmlbeans.ResourceLoader r9;
        java.util.Map $r2;
        java.lang.String r5, $r6, $r7;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r9 := @parameter0: org.apache.xmlbeans.ResourceLoader;

        r5 := @parameter1: java.lang.String;

        r8 := @parameter2: org.apache.xmlbeans.SchemaTypeLoader;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers> = $r1;

        $r2 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _typeRefsByClassname> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles> = $r4;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _allNonGroupHandlesResolved> = 0;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name> = r5;

        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String nameToPathString(java.lang.String)>($r6);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _basePackage> = $r7;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker> = r8;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader> = r9;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void initFromHeader()>();

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: java.lang.Throwable logException(java.lang.Throwable)>($r11);

        throw $r11;

     label4:
        $r10 := @caughtexception;

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: java.lang.Throwable logException(java.lang.Throwable)>($r10);

        throw $r10;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Error from label1 to label2 with label4;
    }

    private void initFromHeader()
    {
        java.lang.Throwable $r26;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r2;
        java.util.ArrayList $r19, $r20, $r21;
        java.lang.StringBuffer $r0, $r1, $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader $r6, r27;
        java.util.Map $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.String $r3, $r5;
        boolean $z0, $z1;
        java.util.Set $r18;
        java.util.List $r22, $r23, $r24, $r25;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r7, $r8;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Reading unresolved handles for type system ");

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r5, 0);

        r27 = null;

     label1:
        $r6 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        specialinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String,int)>(r2, "index", 1);

        r27 = $r6;

        $r7 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        specialinvoke $r7.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r2);

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles> = $r7;

        $r8 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles>;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readHandlePool(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)>($r8);

        $r9 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.Map readQNameRefMap()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalElements> = $r9;

        $r10 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.Map readQNameRefMap()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalAttributes> = $r10;

        $r11 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.Map readQNameRefMap()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _modelGroups> = $r11;

        $r12 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.Map readQNameRefMap()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeGroups> = $r12;

        $r13 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.Map readQNameRefMap()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints> = $r13;

        $r14 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.Map readQNameRefMap()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalTypes> = $r14;

        $r15 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.Map readQNameRefMap()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _documentTypes> = $r15;

        $r16 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.Map readQNameRefMap()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeTypes> = $r16;

        $r17 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.Map readClassnameRefMap()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _typeRefsByClassname> = $r17;

        $r18 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.Set readNamespaces()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Set _namespaces> = $r18;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        $z0 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 15, 0);

        if $z0 == 0 goto label2;

        $r23 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.List readQNameRefMapAsList(java.util.List)>($r19);

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedGlobalTypes> = $r23;

        $r24 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.List readQNameRefMapAsList(java.util.List)>($r20);

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedModelGroups> = $r24;

        $r25 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.List readQNameRefMapAsList(java.util.List)>($r21);

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedAttributeGroups> = $r25;

     label2:
        $z1 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 19, 0);

        if $z1 == 0 goto label3;

        $r22 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.util.List readAnnotations()>();

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _annotations> = $r22;

     label3:
        specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void buildContainers(java.util.List,java.util.List,java.util.List)>($r19, $r20, $r21);

     label4:
        if $r6 == null goto label8;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        goto label8;

     label5:
        $r26 := @caughtexception;

     label6:
        if r27 == null goto label7;

        virtualinvoke r27.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

     label7:
        throw $r26;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void saveIndex()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader $r0;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r0 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        specialinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>(r1, "index");

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeIndexData()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeRealHeader(java.lang.String,int)>("index", 1);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeIndexData()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeEnd()>();

        return;
    }

    void savePointers()
    {
        org.apache.xmlbeans.SchemaType[] $r29, $r72;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.util.Map $r50;
        org.apache.xmlbeans.SchemaModelGroup[] $r15, $r58;
        org.apache.xmlbeans.SchemaGlobalAttribute[] $r8;
        org.apache.xmlbeans.SchemaIdentityConstraint[] $r36;
        java.util.Set $r44, $r51;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r9, $r10, $r12, $r13, $r16, $r17, $r19, $r20, $r23, $r24, $r26, $r27, $r30, $r31, $r33, $r34, $r37, $r38, $r40, $r41, $r43, $r45, $r47, $r48, $r52, $r53, $r55, $r56, $r59, $r60, $r62, $r63, $r66, $r67, $r69, $r70, $r73, $r74, $r76, $r77;
        java.lang.String $r4, $r7, $r11, $r14, $r18, $r21, $r25, $r28, $r32, $r35, $r39, $r42, $r46, $r49, $r54, $r57, $r61, $r64, $r68, $r71, $r75, $r78;
        org.apache.xmlbeans.SchemaAttributeGroup[] $r22, $r65;
        org.apache.xmlbeans.SchemaGlobalElement[] $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaGlobalElement[] globalElements()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/element/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForComponents(org.apache.xmlbeans.SchemaComponent[],java.lang.String)>($r1, $r7);

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaGlobalAttribute[] globalAttributes()>();

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r11 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/attribute/");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForComponents(org.apache.xmlbeans.SchemaComponent[],java.lang.String)>($r8, $r14);

        $r15 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaModelGroup[] modelGroups()>();

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r18 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/modelgroup/");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForComponents(org.apache.xmlbeans.SchemaComponent[],java.lang.String)>($r15, $r21);

        $r22 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAttributeGroup[] attributeGroups()>();

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r25 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/attributegroup/");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForComponents(org.apache.xmlbeans.SchemaComponent[],java.lang.String)>($r22, $r28);

        $r29 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] globalTypes()>();

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r32 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/type/");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForComponents(org.apache.xmlbeans.SchemaComponent[],java.lang.String)>($r29, $r35);

        $r36 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaIdentityConstraint[] identityConstraints()>();

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r39 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/identityconstraint/");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForComponents(org.apache.xmlbeans.SchemaComponent[],java.lang.String)>($r36, $r42);

        $r44 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Set _namespaces>;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r46 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/namespace/");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForNamespaces(java.util.Set,java.lang.String)>($r44, $r49);

        $r50 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _typeRefsByClassname>;

        $r51 = interfaceinvoke $r50.<java.util.Map: java.util.Set keySet()>();

        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r54 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r55 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/javaname/");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForClassnames(java.util.Set,java.lang.String)>($r51, $r57);

        $r58 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaModelGroup[] redefinedModelGroups()>();

        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r61 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/redefinedmodelgroup/");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForComponents(org.apache.xmlbeans.SchemaComponent[],java.lang.String)>($r58, $r64);

        $r65 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAttributeGroup[] redefinedAttributeGroups()>();

        $r66 = new java.lang.StringBuffer;

        specialinvoke $r66.<java.lang.StringBuffer: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r68 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r69 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/redefinedattributegroup/");

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForComponents(org.apache.xmlbeans.SchemaComponent[],java.lang.String)>($r65, $r71);

        $r72 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] redefinedGlobalTypes()>();

        $r73 = new java.lang.StringBuffer;

        specialinvoke $r73.<java.lang.StringBuffer: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r75 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r76 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/redefinedtype/");

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointersForComponents(org.apache.xmlbeans.SchemaComponent[],java.lang.String)>($r72, $r78);

        return;
    }

    void savePointersForComponents(org.apache.xmlbeans.SchemaComponent[], java.lang.String)
    {
        org.apache.xmlbeans.SchemaComponent[] r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r1;
        java.lang.StringBuffer $r2, $r4, $r8;
        int $i0, i1;
        org.apache.xmlbeans.SchemaComponent $r5;
        java.lang.String r3, $r7, $r9, $r10;
        javax.xml.namespace.QName $r6;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r0 := @parameter0: org.apache.xmlbeans.SchemaComponent[];

        r3 := @parameter1: java.lang.String;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = r0[i1];

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaComponent: javax.xml.namespace.QName getName()>();

        $r7 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String hexsafedir(javax.xml.namespace.QName)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointerFile(java.lang.String,java.lang.String)>($r9, $r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void savePointersForClassnames(java.util.Set, java.lang.String)
    {
        java.util.Iterator $r1;
        java.util.Set r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r4;
        java.lang.StringBuffer $r5, $r7, $r9;
        java.lang.Object $r2;
        java.lang.String r3, r6, $r8, $r10, $r11;
        boolean $z0;

        r4 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r0 := @parameter0: java.util.Set;

        r6 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke r3.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        virtualinvoke r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointerFile(java.lang.String,java.lang.String)>($r10, $r11);

        goto label1;

     label2:
        return;
    }

    void savePointersForNamespaces(java.util.Set, java.lang.String)
    {
        java.util.Iterator $r1;
        java.util.Set r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r4;
        java.lang.StringBuffer $r5, $r7, $r10;
        java.lang.Object $r2;
        java.lang.String r3, r6, $r9, $r11, $r12;
        javax.xml.namespace.QName $r8;
        boolean $z0;

        r4 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r0 := @parameter0: java.util.Set;

        r6 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = new javax.xml.namespace.QName;

        specialinvoke $r8.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r3, "xmlns");

        $r9 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String hexsafedir(javax.xml.namespace.QName)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        virtualinvoke r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointerFile(java.lang.String,java.lang.String)>($r11, $r12);

        goto label1;

     label2:
        return;
    }

    void savePointerFile(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader $r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r1;
        java.lang.String r2, r3;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        specialinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>(r1, r2);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>(r3);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeRealHeader(java.lang.String,int)>(r2, 5);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>(r3);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeEnd()>();

        return;
    }

    void saveLoader()
    {
        org.apache.xmlbeans.impl.util.FilerImpl $r25;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        byte $b4;
        java.io.DataOutputStream $r45;
        repackage.Repackager r39;
        boolean $z0, $z1;
        java.io.EOFException $r36;
        java.lang.Exception $r28, $r29, $r31, $r32, $r34, $r35;
        org.apache.xmlbeans.Filer $r3, $r8, $r24;
        java.lang.Throwable $r30;
        java.io.DataInputStream $r43;
        java.lang.String[] $r2, $r26;
        java.lang.AssertionError $r41;
        java.lang.StringBuffer $r10, $r11, $r19, $r20, $r44, $r46;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15;
        java.lang.String $r1, $r9, $r12, $r15, $r16, $r21, $r23;
        java.io.OutputStream $r13, r38;
        java.io.IOException $r33;
        java.lang.RuntimeException $r47;
        java.lang.Class $r4, $r40;
        org.apache.xmlbeans.SchemaTypeLoaderException $r42;
        java.io.InputStream $r5, r37;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String indexClassForSystem(org.apache.xmlbeans.SchemaTypeSystem)>(r0);

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String[] makeClassStrings(java.lang.String)>($r1);

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i13 = lengthof $r2;

        $r26 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String[] HOLDER_TEMPLATE_NAMES>;

        $i12 = lengthof $r26;

        if $i13 == $i12 goto label01;

        $r41 = new java.lang.AssertionError;

        specialinvoke $r41.<java.lang.AssertionError: void <init>()>();

        throw $r41;

     label01:
        r37 = null;

        r38 = null;

        r39 = null;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.Filer _filer>;

        $z1 = $r3 instanceof org.apache.xmlbeans.impl.util.FilerImpl;

        if $z1 == 0 goto label02;

        $r24 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.Filer _filer>;

        $r25 = (org.apache.xmlbeans.impl.util.FilerImpl) $r24;

        r39 = virtualinvoke $r25.<org.apache.xmlbeans.impl.util.FilerImpl: repackage.Repackager getRepackager()>();

     label02:
        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl>;

        if $r4 != null goto label03;

        $r40 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl");

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl> = $r40;

        goto label04;

     label03:
        $r40 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl>;

     label04:
        $r5 = virtualinvoke $r40.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("TypeSystemHolder.template");

        r37 = $r5;

        if $r5 != null goto label05;

        $r42 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r23 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        specialinvoke $r42.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>("couldn\'t find resource: TypeSystemHolder.template", $r23, null, 9);

        throw $r42;

     label05:
        $r43 = new java.io.DataInputStream;

        specialinvoke $r43.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r5);

        $r8 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.Filer _filer>;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r10 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".class");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = interfaceinvoke $r8.<org.apache.xmlbeans.Filer: java.io.OutputStream createBinaryFile(java.lang.String)>($r12);

        r38 = $r13;

        $r45 = new java.io.DataOutputStream;

        specialinvoke $r45.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r13);

        $i0 = virtualinvoke $r43.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i1 = virtualinvoke $r43.<java.io.DataInputStream: int readUnsignedShort()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeShort(int)>($i1);

        $i2 = virtualinvoke $r43.<java.io.DataInputStream: int readUnsignedShort()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeShort(int)>($i2);

        $i3 = virtualinvoke $r43.<java.io.DataInputStream: int readUnsignedShort()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeShort(int)>($i3);

        i14 = 1;

     label06:
        if i14 >= $i3 goto label14;

        $i5 = virtualinvoke $r43.<java.io.DataInputStream: int readUnsignedByte()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeByte(int)>($i5);

        tableswitch($i5)
        {
            case 1: goto label07;
            case 2: goto label12;
            case 3: goto label10;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label11;
            case 7: goto label08;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label09;
            case 12: goto label09;
            default: goto label12;
        };

     label07:
        $r15 = virtualinvoke $r43.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r16 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String repackageConstant(java.lang.String,java.lang.String[],repackage.Repackager)>($r15, $r2, r39);

        virtualinvoke $r45.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r16);

        goto label13;

     label08:
        $i8 = virtualinvoke $r43.<java.io.DataInputStream: int readUnsignedShort()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeShort(int)>($i8);

        goto label13;

     label09:
        $i6 = virtualinvoke $r43.<java.io.DataInputStream: int readUnsignedShort()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeShort(int)>($i6);

        $i7 = virtualinvoke $r43.<java.io.DataInputStream: int readUnsignedShort()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeShort(int)>($i7);

        goto label13;

     label10:
        $i11 = virtualinvoke $r43.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeInt(int)>($i11);

        goto label13;

     label11:
        $i9 = virtualinvoke $r43.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeInt(int)>($i9);

        $i10 = virtualinvoke $r43.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r45.<java.io.DataOutputStream: void writeInt(int)>($i10);

        goto label13;

     label12:
        $r47 = new java.lang.RuntimeException;

        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected constant type: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r47;

     label13:
        i14 = i14 + 1;

        goto label06;

     label14:
        $b4 = virtualinvoke $r43.<java.io.DataInputStream: byte readByte()>();

        $i15 = (int) $b4;

        virtualinvoke $r45.<java.io.DataOutputStream: void writeByte(int)>($i15);

        goto label14;

     label15:
        $r36 := @caughtexception;

     label16:
        if $r5 == null goto label20;

     label17:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r35 := @caughtexception;

     label20:
        if $r13 == null goto label43;

     label21:
        virtualinvoke $r13.<java.io.OutputStream: void close()>();

     label22:
        goto label43;

     label23:
        $r34 := @caughtexception;

        goto label43;

     label24:
        $r33 := @caughtexception;

     label25:
        if r37 == null goto label29;

     label26:
        virtualinvoke r37.<java.io.InputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r32 := @caughtexception;

     label29:
        if r38 == null goto label43;

     label30:
        virtualinvoke r38.<java.io.OutputStream: void close()>();

     label31:
        goto label43;

     label32:
        $r31 := @caughtexception;

        goto label43;

     label33:
        $r30 := @caughtexception;

     label34:
        if r37 == null goto label38;

     label35:
        virtualinvoke r37.<java.io.InputStream: void close()>();

     label36:
        goto label38;

     label37:
        $r29 := @caughtexception;

     label38:
        if r38 == null goto label42;

     label39:
        virtualinvoke r38.<java.io.OutputStream: void close()>();

     label40:
        goto label42;

     label41:
        $r28 := @caughtexception;

     label42:
        throw $r30;

     label43:
        return;

        catch java.io.EOFException from label14 to label15 with label15;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.io.IOException from label02 to label16 with label24;
        catch java.lang.Exception from label26 to label27 with label28;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.lang.Throwable from label02 to label16 with label33;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.lang.Exception from label35 to label36 with label37;
        catch java.lang.Exception from label39 to label40 with label41;
        catch java.lang.Throwable from label33 to label34 with label33;
    }

    private static java.lang.String repackageConstant(java.lang.String, java.lang.String[], repackage.Repackager)
    {
        java.lang.String[] $r0, $r6, r8;
        repackage.Repackager r1;
        java.lang.StringBuffer $r3, $r4;
        int $i0, i1;
        java.lang.String r2, $r5, $r7, $r9;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String[];

        r1 := @parameter2: repackage.Repackager;

        i1 = 0;

     label1:
        $r0 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String[] HOLDER_TEMPLATE_NAMES>;

        $i0 = lengthof $r0;

        if i1 >= $i0 goto label3;

        $r6 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String[] HOLDER_TEMPLATE_NAMES>;

        $r7 = $r6[i1];

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r9 = r8[i1];

        return $r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if r1 == null goto label4;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>(r2);

        $r4 = virtualinvoke r1.<repackage.Repackager: java.lang.StringBuffer repackage(java.lang.StringBuffer)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;

     label4:
        return r2;
    }

    private static java.lang.String[] makeClassStrings(java.lang.String)
    {
        java.lang.String[] r0;
        java.lang.StringBuffer $r3, $r4, $r6, $r7, $r9, $r10, $r12;
        java.lang.String r1, $r2, $r5, $r8, $r11, $r13;

        r1 := @parameter0: java.lang.String;

        r0 = newarray (java.lang.String)[4];

        r0[0] = r1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        r0[1] = $r2;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("L");

        $r5 = r0[1];

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[2] = $r8;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class$");

        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 36);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[3] = $r13;

        return r0;
    }

    private java.util.Map buildTypeRefsByClassname()
    {
        org.apache.xmlbeans.SchemaType[] $r3, $r5, $r7, $r12;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r2;
        java.util.ArrayList $r0;
        java.util.LinkedHashMap $r1;
        org.apache.xmlbeans.SchemaType$Ref $r15;
        int $i0, i1;
        java.lang.String $r11, $r14;
        org.apache.xmlbeans.SchemaType r10;
        java.util.List $r4, $r6, $r8, $r13;
        java.lang.Object $r9;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] documentTypes()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $r5 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] attributeTypes()>();

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        $r7 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] globalTypes()>();

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r9 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        r10 = (org.apache.xmlbeans.SchemaType) $r9;

        $r11 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        if $r11 == null goto label2;

        $r14 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        $r15 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);

     label2:
        $r12 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType[] getAnonymousTypes()>();

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r13);

        i1 = i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    private java.util.Map buildTypeRefsByClassname(java.util.Map)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r9;
        java.util.LinkedHashMap $r0;
        java.util.Map r1;
        org.apache.xmlbeans.SchemaType$Ref $r8;
        java.lang.Object $r4, $r6;
        java.lang.String r5;
        org.apache.xmlbeans.SchemaType $r7;
        boolean $z0;

        r9 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: java.util.Map;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r7 = (org.apache.xmlbeans.SchemaType) $r6;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r8);

        goto label1;

     label2:
        return $r0;
    }

    private static java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])
    {
        org.apache.xmlbeans.SchemaComponent[] r1;
        org.apache.xmlbeans.SchemaComponent$Ref $r5;
        java.util.LinkedHashMap $r0;
        int $i0, i1;
        org.apache.xmlbeans.SchemaComponent $r2, $r4;
        javax.xml.namespace.QName $r3;

        r1 := @parameter0: org.apache.xmlbeans.SchemaComponent[];

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r2 = r1[i1];

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaComponent: javax.xml.namespace.QName getName()>();

        $r4 = r1[i1];

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaComponent: org.apache.xmlbeans.SchemaComponent$Ref getComponentRef()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static java.util.List buildComponentRefList(org.apache.xmlbeans.SchemaComponent[])
    {
        int $i0, i1;
        org.apache.xmlbeans.SchemaComponent[] r1;
        org.apache.xmlbeans.SchemaComponent $r2;
        org.apache.xmlbeans.SchemaComponent$Ref $r3;
        java.util.ArrayList $r0;

        r1 := @parameter0: org.apache.xmlbeans.SchemaComponent[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r2 = r1[i1];

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaComponent: org.apache.xmlbeans.SchemaComponent$Ref getComponentRef()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static java.util.Map buildDocumentMap(org.apache.xmlbeans.SchemaType[])
    {
        org.apache.xmlbeans.SchemaType[] r1;
        java.util.LinkedHashMap $r0;
        org.apache.xmlbeans.SchemaType$Ref $r5;
        int $i0, i1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.SchemaType $r2, $r4;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType[];

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r2 = r1[i1];

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getDocumentElementName()>();

        $r4 = r1[i1];

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static java.util.Map buildAttributeTypeMap(org.apache.xmlbeans.SchemaType[])
    {
        org.apache.xmlbeans.SchemaType[] r1;
        java.util.LinkedHashMap $r0;
        org.apache.xmlbeans.SchemaType$Ref $r5;
        int $i0, i1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.SchemaType $r2, $r4;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType[];

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r2 = r1[i1];

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getAttributeTypeAttributeName()>();

        $r4 = r1[i1];

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r3;

        return $r4;
    }

    private void addContainer(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaContainer $r0;
        java.util.Map $r3;
        java.lang.String r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.xmlbeans.impl.schema.SchemaContainer;

        specialinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaContainer: void <init>(java.lang.String)>(r1);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaContainer: void setTypeSystem(org.apache.xmlbeans.SchemaTypeSystem)>(r2);

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r0);

        return;
    }

    private org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaContainer $r2, r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r1);

        r3 = $r2;

        if $r2 != null goto label1;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void addContainer(java.lang.String)>(r1);

        r3 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r1);

     label1:
        return r3;
    }

    private void buildContainers(java.util.List, java.util.List, java.util.List)
    {
        org.apache.xmlbeans.SchemaAnnotation r134;
        java.util.Map $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r26;
        org.apache.xmlbeans.SchemaModelGroup$Ref $r60, $r110;
        java.util.Collection $r27;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r30, $r34, $r52, $r58, $r64, $r73, $r80, $r87, $r94, $r101, $r108, $r115, $r122;
        org.apache.xmlbeans.SchemaType$Ref $r66, $r75, $r82, $r89;
        int $i0, $i1;
        java.lang.Object $r29, $r33, $r49, $r53, $r55, $r59, $r61, $r65, $r69, $r70, $r74, $r76, $r77, $r81, $r83, $r84, $r88, $r90, $r91, $r95, $r97, $r98, $r102, $r104, $r105, $r109, $r111, $r112, $r116, $r118, $r119, $r123;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaGlobalElement$Ref $r124;
        java.util.Set $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23;
        javax.xml.namespace.QName $r50, $r56, $r62, $r71, $r78, $r85, $r92, $r99, $r106, $r113, $r120;
        java.lang.AssertionError $r68;
        java.lang.String $r51, $r57, $r63, $r72, $r79, $r86, $r93, $r100, $r107, $r114, $r121;
        java.util.Map$Entry r125, r126, r127, r128, r129, r130, r131, r132;
        org.apache.xmlbeans.SchemaAttributeGroup$Ref $r54, $r103;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.util.List $r25, $r31, $r35, $r36, $r37, r39, $r41, r43, $r45, r47, $r67, $r133;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r96;
        java.util.Iterator $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r28, $r32, $r38, $r40, $r42, $r44, $r46, $r48;
        org.apache.xmlbeans.SchemaGlobalAttribute$Ref $r117;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r39 := @parameter0: java.util.List;

        r43 := @parameter1: java.util.List;

        r47 := @parameter2: java.util.List;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalElements>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r118 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r125 = (java.util.Map$Entry) $r118;

        $r119 = interfaceinvoke r125.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r120 = (javax.xml.namespace.QName) $r119;

        $r121 = virtualinvoke $r120.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r122 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r121);

        $r123 = interfaceinvoke r125.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r124 = (org.apache.xmlbeans.SchemaGlobalElement$Ref) $r123;

        virtualinvoke $r122.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addGlobalElement(org.apache.xmlbeans.SchemaGlobalElement$Ref)>($r124);

        goto label01;

     label02:
        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalAttributes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r111 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r126 = (java.util.Map$Entry) $r111;

        $r112 = interfaceinvoke r126.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r113 = (javax.xml.namespace.QName) $r112;

        $r114 = virtualinvoke $r113.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r115 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r114);

        $r116 = interfaceinvoke r126.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r117 = (org.apache.xmlbeans.SchemaGlobalAttribute$Ref) $r116;

        virtualinvoke $r115.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addGlobalAttribute(org.apache.xmlbeans.SchemaGlobalAttribute$Ref)>($r117);

        goto label03;

     label04:
        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _modelGroups>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r104 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r127 = (java.util.Map$Entry) $r104;

        $r105 = interfaceinvoke r127.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r106 = (javax.xml.namespace.QName) $r105;

        $r107 = virtualinvoke $r106.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r108 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r107);

        $r109 = interfaceinvoke r127.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r110 = (org.apache.xmlbeans.SchemaModelGroup$Ref) $r109;

        virtualinvoke $r108.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addModelGroup(org.apache.xmlbeans.SchemaModelGroup$Ref)>($r110);

        goto label05;

     label06:
        $r10 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeGroups>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r97 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r128 = (java.util.Map$Entry) $r97;

        $r98 = interfaceinvoke r128.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r99 = (javax.xml.namespace.QName) $r98;

        $r100 = virtualinvoke $r99.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r101 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r100);

        $r102 = interfaceinvoke r128.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r103 = (org.apache.xmlbeans.SchemaAttributeGroup$Ref) $r102;

        virtualinvoke $r101.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addAttributeGroup(org.apache.xmlbeans.SchemaAttributeGroup$Ref)>($r103);

        goto label07;

     label08:
        $r13 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r90 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r129 = (java.util.Map$Entry) $r90;

        $r91 = interfaceinvoke r129.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r92 = (javax.xml.namespace.QName) $r91;

        $r93 = virtualinvoke $r92.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r94 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r93);

        $r95 = interfaceinvoke r129.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r96 = (org.apache.xmlbeans.SchemaIdentityConstraint$Ref) $r95;

        virtualinvoke $r94.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addIdentityConstraint(org.apache.xmlbeans.SchemaIdentityConstraint$Ref)>($r96);

        goto label09;

     label10:
        $r16 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalTypes>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>();

        $r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z5 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label12;

        $r83 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r130 = (java.util.Map$Entry) $r83;

        $r84 = interfaceinvoke r130.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r85 = (javax.xml.namespace.QName) $r84;

        $r86 = virtualinvoke $r85.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r87 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r86);

        $r88 = interfaceinvoke r130.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r89 = (org.apache.xmlbeans.SchemaType$Ref) $r88;

        virtualinvoke $r87.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addGlobalType(org.apache.xmlbeans.SchemaType$Ref)>($r89);

        goto label11;

     label12:
        $r19 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _documentTypes>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Set entrySet()>();

        $r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z6 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label14;

        $r76 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r131 = (java.util.Map$Entry) $r76;

        $r77 = interfaceinvoke r131.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r78 = (javax.xml.namespace.QName) $r77;

        $r79 = virtualinvoke $r78.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r80 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r79);

        $r81 = interfaceinvoke r131.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r82 = (org.apache.xmlbeans.SchemaType$Ref) $r81;

        virtualinvoke $r80.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addDocumentType(org.apache.xmlbeans.SchemaType$Ref)>($r82);

        goto label13;

     label14:
        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeTypes>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Set entrySet()>();

        $r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z7 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label16;

        $r69 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r132 = (java.util.Map$Entry) $r69;

        $r70 = interfaceinvoke r132.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r71 = (javax.xml.namespace.QName) $r70;

        $r72 = virtualinvoke $r71.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r73 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r72);

        $r74 = interfaceinvoke r132.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r75 = (org.apache.xmlbeans.SchemaType$Ref) $r74;

        virtualinvoke $r73.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addAttributeType(org.apache.xmlbeans.SchemaType$Ref)>($r75);

        goto label15;

     label16:
        $r25 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedGlobalTypes>;

        if $r25 == null goto label23;

        $r35 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedModelGroups>;

        if $r35 == null goto label23;

        $r36 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedAttributeGroups>;

        if $r36 == null goto label23;

        $z9 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z9 != 0 goto label17;

        $r67 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedGlobalTypes>;

        $i0 = interfaceinvoke $r67.<java.util.List: int size()>();

        $i1 = interfaceinvoke r39.<java.util.List: int size()>();

        if $i0 == $i1 goto label17;

        $r68 = new java.lang.AssertionError;

        specialinvoke $r68.<java.lang.AssertionError: void <init>()>();

        throw $r68;

     label17:
        $r37 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedGlobalTypes>;

        $r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

        $r40 = interfaceinvoke r39.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z12 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label19;

        $r61 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $r62 = (javax.xml.namespace.QName) $r61;

        $r63 = virtualinvoke $r62.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r64 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r63);

        $r65 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        $r66 = (org.apache.xmlbeans.SchemaType$Ref) $r65;

        virtualinvoke $r64.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addRedefinedType(org.apache.xmlbeans.SchemaType$Ref)>($r66);

        goto label18;

     label19:
        $r41 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedModelGroups>;

        $r42 = interfaceinvoke $r41.<java.util.List: java.util.Iterator iterator()>();

        $r44 = interfaceinvoke r43.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z10 = interfaceinvoke $r42.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label21;

        $r55 = interfaceinvoke $r44.<java.util.Iterator: java.lang.Object next()>();

        $r56 = (javax.xml.namespace.QName) $r55;

        $r57 = virtualinvoke $r56.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r58 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r57);

        $r59 = interfaceinvoke $r42.<java.util.Iterator: java.lang.Object next()>();

        $r60 = (org.apache.xmlbeans.SchemaModelGroup$Ref) $r59;

        virtualinvoke $r58.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addRedefinedModelGroup(org.apache.xmlbeans.SchemaModelGroup$Ref)>($r60);

        goto label20;

     label21:
        $r45 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedAttributeGroups>;

        $r46 = interfaceinvoke $r45.<java.util.List: java.util.Iterator iterator()>();

        $r48 = interfaceinvoke r47.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z11 = interfaceinvoke $r46.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label23;

        $r49 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        $r50 = (javax.xml.namespace.QName) $r49;

        $r51 = virtualinvoke $r50.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r52 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>($r51);

        $r53 = interfaceinvoke $r46.<java.util.Iterator: java.lang.Object next()>();

        $r54 = (org.apache.xmlbeans.SchemaAttributeGroup$Ref) $r53;

        virtualinvoke $r52.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addRedefinedAttributeGroup(org.apache.xmlbeans.SchemaAttributeGroup$Ref)>($r54);

        goto label22;

     label23:
        $r133 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _annotations>;

        if $r133 == null goto label25;

        $r31 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _annotations>;

        $r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z8 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label25;

        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r134 = (org.apache.xmlbeans.SchemaAnnotation) $r33;

        $r34 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>("");

        virtualinvoke $r34.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addAnnotation(org.apache.xmlbeans.SchemaAnnotation)>(r134);

        goto label24;

     label25:
        $r26 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r27 = interfaceinvoke $r26.<java.util.Map: java.util.Collection values()>();

        $r28 = interfaceinvoke $r27.<java.util.Collection: java.util.Iterator iterator()>();

     label26:
        $z13 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label27;

        $r29 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        $r30 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r29;

        virtualinvoke $r30.<org.apache.xmlbeans.impl.schema.SchemaContainer: void setImmutable()>();

        goto label26;

     label27:
        return;
    }

    private void fixupContainers()
    {
        java.util.Iterator $r3;
        org.apache.xmlbeans.impl.schema.SchemaContainer r5;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.lang.Object $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r4;

        virtualinvoke r5.<org.apache.xmlbeans.impl.schema.SchemaContainer: void setTypeSystem(org.apache.xmlbeans.SchemaTypeSystem)>(r0);

        virtualinvoke r5.<org.apache.xmlbeans.impl.schema.SchemaContainer: void setImmutable()>();

        goto label1;

     label2:
        return;
    }

    private void assertContainersSynchronized()
    {
        org.apache.xmlbeans.SchemaType[] $r79, $r81, $r82, $r89, $r91, $r92;
        java.util.Map $r2, $r6, $r10, $r14, $r18, $r22, $r26, $r30, $r34, $r38, $r42, $r46, $r50, $r64, $r73, $r74, $r83, $r84, $r93, $r105, $r114, $r126, $r135, $r147, $r156, $r157, $r166, $r167, $r176;
        java.lang.Object[] $r70, $r80, $r90, $r101, $r111, $r122, $r132, $r143, $r153, $r163, $r173;
        java.util.Collection $r3, $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35, $r39, $r43, $r47, $r51;
        java.util.HashSet $r13, $r21, $r29, $r45, $r49, $r58, $r94, $r115, $r136;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r56, $r62, $r67, $r77, $r87, $r98, $r108, $r119, $r129, $r140, $r150, $r160, $r170;
        org.apache.xmlbeans.SchemaComponent[] $r69, $r71, $r72, $r100, $r102, $r103, $r110, $r112, $r113, $r121, $r123, $r124, $r131, $r133, $r134, $r142, $r144, $r145, $r152, $r154, $r155, $r162, $r164, $r165, $r172, $r174, $r175;
        java.lang.Object $r55, $r61, $r66, $r76, $r86, $r97, $r107, $r118, $r128, $r139, $r149, $r159, $r169;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r1;
        java.util.Set $r53;
        java.lang.AssertionError $r54, $r60, $r65, $r75, $r85, $r96, $r106, $r117, $r127, $r138, $r148, $r158, $r168, $r177;
        java.lang.String $r57;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40;
        java.util.List $r59, $r63, $r68, $r78, $r88, $r95, $r99, $r104, $r109, $r116, $r120, $r125, $r130, $r137, $r141, $r146, $r151, $r161, $r171;
        java.util.HashMap $r0, $r5, $r9, $r17, $r25, $r33, $r37, $r41;
        java.util.Iterator $r4, $r8, $r12, $r16, $r20, $r24, $r28, $r32, $r36, $r40, $r44, $r48, $r52;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        z28 = 0;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        z28 = 1;

        if 1 != 0 goto label01;

        $r177 = new java.lang.AssertionError;

        specialinvoke $r177.<java.lang.AssertionError: void <init>()>();

        throw $r177;

     label01:
        if z28 != 0 goto label02;

        return;

     label02:
        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r169 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r170 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r169;

        $r171 = virtualinvoke $r170.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List globalElements()>();

        $r172 = newarray (org.apache.xmlbeans.SchemaComponent)[0];

        $r173 = interfaceinvoke $r171.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r172);

        $r174 = (org.apache.xmlbeans.SchemaComponent[]) $r173;

        $r175 = (org.apache.xmlbeans.SchemaComponent[]) $r174;

        $r176 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r175);

        interfaceinvoke $r0.<java.util.Map: void putAll(java.util.Map)>($r176);

        goto label03;

     label04:
        $z2 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z2 != 0 goto label05;

        $r167 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalElements>;

        $z27 = virtualinvoke $r167.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z27 != 0 goto label05;

        $r168 = new java.lang.AssertionError;

        specialinvoke $r168.<java.lang.AssertionError: void <init>()>();

        throw $r168;

     label05:
        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r6 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z29 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z29 == 0 goto label07;

        $r159 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r160 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r159;

        $r161 = virtualinvoke $r160.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List globalAttributes()>();

        $r162 = newarray (org.apache.xmlbeans.SchemaComponent)[0];

        $r163 = interfaceinvoke $r161.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r162);

        $r164 = (org.apache.xmlbeans.SchemaComponent[]) $r163;

        $r165 = (org.apache.xmlbeans.SchemaComponent[]) $r164;

        $r166 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r165);

        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r166);

        goto label06;

     label07:
        $z3 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z3 != 0 goto label08;

        $r157 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalAttributes>;

        $z26 = virtualinvoke $r157.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z26 != 0 goto label08;

        $r158 = new java.lang.AssertionError;

        specialinvoke $r158.<java.lang.AssertionError: void <init>()>();

        throw $r158;

     label08:
        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        $r10 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Collection values()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z30 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z30 == 0 goto label10;

        $r149 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r150 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r149;

        $r151 = virtualinvoke $r150.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List modelGroups()>();

        $r152 = newarray (org.apache.xmlbeans.SchemaComponent)[0];

        $r153 = interfaceinvoke $r151.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r152);

        $r154 = (org.apache.xmlbeans.SchemaComponent[]) $r153;

        $r155 = (org.apache.xmlbeans.SchemaComponent[]) $r154;

        $r156 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r155);

        interfaceinvoke $r9.<java.util.Map: void putAll(java.util.Map)>($r156);

        goto label09;

     label10:
        $z4 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z4 != 0 goto label11;

        $r147 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _modelGroups>;

        $z25 = virtualinvoke $r147.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z25 != 0 goto label11;

        $r148 = new java.lang.AssertionError;

        specialinvoke $r148.<java.lang.AssertionError: void <init>()>();

        throw $r148;

     label11:
        $r13 = new java.util.HashSet;

        specialinvoke $r13.<java.util.HashSet: void <init>()>();

        $r14 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Collection values()>();

        $r16 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z31 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z31 == 0 goto label13;

        $r139 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r140 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r139;

        $r141 = virtualinvoke $r140.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List redefinedModelGroups()>();

        $r142 = newarray (org.apache.xmlbeans.SchemaComponent)[0];

        $r143 = interfaceinvoke $r141.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r142);

        $r144 = (org.apache.xmlbeans.SchemaComponent[]) $r143;

        $r145 = (org.apache.xmlbeans.SchemaComponent[]) $r144;

        $r146 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List buildComponentRefList(org.apache.xmlbeans.SchemaComponent[])>($r145);

        interfaceinvoke $r13.<java.util.Set: boolean addAll(java.util.Collection)>($r146);

        goto label12;

     label13:
        $z5 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z5 != 0 goto label14;

        $r136 = new java.util.HashSet;

        $r137 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedModelGroups>;

        specialinvoke $r136.<java.util.HashSet: void <init>(java.util.Collection)>($r137);

        $z24 = virtualinvoke $r136.<java.util.HashSet: boolean equals(java.lang.Object)>($r13);

        if $z24 != 0 goto label14;

        $r138 = new java.lang.AssertionError;

        specialinvoke $r138.<java.lang.AssertionError: void <init>()>();

        throw $r138;

     label14:
        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        $r18 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.util.Collection values()>();

        $r20 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z32 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z32 == 0 goto label16;

        $r128 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        $r129 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r128;

        $r130 = virtualinvoke $r129.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List attributeGroups()>();

        $r131 = newarray (org.apache.xmlbeans.SchemaComponent)[0];

        $r132 = interfaceinvoke $r130.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r131);

        $r133 = (org.apache.xmlbeans.SchemaComponent[]) $r132;

        $r134 = (org.apache.xmlbeans.SchemaComponent[]) $r133;

        $r135 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r134);

        interfaceinvoke $r17.<java.util.Map: void putAll(java.util.Map)>($r135);

        goto label15;

     label16:
        $z6 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z6 != 0 goto label17;

        $r126 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeGroups>;

        $z23 = virtualinvoke $r126.<java.lang.Object: boolean equals(java.lang.Object)>($r17);

        if $z23 != 0 goto label17;

        $r127 = new java.lang.AssertionError;

        specialinvoke $r127.<java.lang.AssertionError: void <init>()>();

        throw $r127;

     label17:
        $r21 = new java.util.HashSet;

        specialinvoke $r21.<java.util.HashSet: void <init>()>();

        $r22 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Collection values()>();

        $r24 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z33 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z33 == 0 goto label19;

        $r118 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        $r119 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r118;

        $r120 = virtualinvoke $r119.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List redefinedAttributeGroups()>();

        $r121 = newarray (org.apache.xmlbeans.SchemaComponent)[0];

        $r122 = interfaceinvoke $r120.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r121);

        $r123 = (org.apache.xmlbeans.SchemaComponent[]) $r122;

        $r124 = (org.apache.xmlbeans.SchemaComponent[]) $r123;

        $r125 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List buildComponentRefList(org.apache.xmlbeans.SchemaComponent[])>($r124);

        interfaceinvoke $r21.<java.util.Set: boolean addAll(java.util.Collection)>($r125);

        goto label18;

     label19:
        $z7 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z7 != 0 goto label20;

        $r115 = new java.util.HashSet;

        $r116 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedAttributeGroups>;

        specialinvoke $r115.<java.util.HashSet: void <init>(java.util.Collection)>($r116);

        $z22 = virtualinvoke $r115.<java.util.HashSet: boolean equals(java.lang.Object)>($r21);

        if $z22 != 0 goto label20;

        $r117 = new java.lang.AssertionError;

        specialinvoke $r117.<java.lang.AssertionError: void <init>()>();

        throw $r117;

     label20:
        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        $r26 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r27 = interfaceinvoke $r26.<java.util.Map: java.util.Collection values()>();

        $r28 = interfaceinvoke $r27.<java.util.Collection: java.util.Iterator iterator()>();

     label21:
        $z34 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z34 == 0 goto label22;

        $r107 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        $r108 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r107;

        $r109 = virtualinvoke $r108.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List globalTypes()>();

        $r110 = newarray (org.apache.xmlbeans.SchemaComponent)[0];

        $r111 = interfaceinvoke $r109.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r110);

        $r112 = (org.apache.xmlbeans.SchemaComponent[]) $r111;

        $r113 = (org.apache.xmlbeans.SchemaComponent[]) $r112;

        $r114 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r113);

        interfaceinvoke $r25.<java.util.Map: void putAll(java.util.Map)>($r114);

        goto label21;

     label22:
        $z8 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z8 != 0 goto label23;

        $r105 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalTypes>;

        $z21 = virtualinvoke $r105.<java.lang.Object: boolean equals(java.lang.Object)>($r25);

        if $z21 != 0 goto label23;

        $r106 = new java.lang.AssertionError;

        specialinvoke $r106.<java.lang.AssertionError: void <init>()>();

        throw $r106;

     label23:
        $r29 = new java.util.HashSet;

        specialinvoke $r29.<java.util.HashSet: void <init>()>();

        $r30 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r31 = interfaceinvoke $r30.<java.util.Map: java.util.Collection values()>();

        $r32 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();

     label24:
        $z35 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z35 == 0 goto label25;

        $r97 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        $r98 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r97;

        $r99 = virtualinvoke $r98.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List redefinedGlobalTypes()>();

        $r100 = newarray (org.apache.xmlbeans.SchemaComponent)[0];

        $r101 = interfaceinvoke $r99.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r100);

        $r102 = (org.apache.xmlbeans.SchemaComponent[]) $r101;

        $r103 = (org.apache.xmlbeans.SchemaComponent[]) $r102;

        $r104 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List buildComponentRefList(org.apache.xmlbeans.SchemaComponent[])>($r103);

        interfaceinvoke $r29.<java.util.Set: boolean addAll(java.util.Collection)>($r104);

        goto label24;

     label25:
        $z9 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z9 != 0 goto label26;

        $r94 = new java.util.HashSet;

        $r95 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedGlobalTypes>;

        specialinvoke $r94.<java.util.HashSet: void <init>(java.util.Collection)>($r95);

        $z20 = virtualinvoke $r94.<java.util.HashSet: boolean equals(java.lang.Object)>($r29);

        if $z20 != 0 goto label26;

        $r96 = new java.lang.AssertionError;

        specialinvoke $r96.<java.lang.AssertionError: void <init>()>();

        throw $r96;

     label26:
        $r33 = new java.util.HashMap;

        specialinvoke $r33.<java.util.HashMap: void <init>()>();

        $r34 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r35 = interfaceinvoke $r34.<java.util.Map: java.util.Collection values()>();

        $r36 = interfaceinvoke $r35.<java.util.Collection: java.util.Iterator iterator()>();

     label27:
        $z36 = interfaceinvoke $r36.<java.util.Iterator: boolean hasNext()>();

        if $z36 == 0 goto label28;

        $r86 = interfaceinvoke $r36.<java.util.Iterator: java.lang.Object next()>();

        $r87 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r86;

        $r88 = virtualinvoke $r87.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List documentTypes()>();

        $r89 = newarray (org.apache.xmlbeans.SchemaType)[0];

        $r90 = interfaceinvoke $r88.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r89);

        $r91 = (org.apache.xmlbeans.SchemaType[]) $r90;

        $r92 = (org.apache.xmlbeans.SchemaType[]) $r91;

        $r93 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildDocumentMap(org.apache.xmlbeans.SchemaType[])>($r92);

        interfaceinvoke $r33.<java.util.Map: void putAll(java.util.Map)>($r93);

        goto label27;

     label28:
        $z10 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z10 != 0 goto label29;

        $r84 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _documentTypes>;

        $z19 = virtualinvoke $r84.<java.lang.Object: boolean equals(java.lang.Object)>($r33);

        if $z19 != 0 goto label29;

        $r85 = new java.lang.AssertionError;

        specialinvoke $r85.<java.lang.AssertionError: void <init>()>();

        throw $r85;

     label29:
        $r37 = new java.util.HashMap;

        specialinvoke $r37.<java.util.HashMap: void <init>()>();

        $r38 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r39 = interfaceinvoke $r38.<java.util.Map: java.util.Collection values()>();

        $r40 = interfaceinvoke $r39.<java.util.Collection: java.util.Iterator iterator()>();

     label30:
        $z37 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z37 == 0 goto label31;

        $r76 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $r77 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r76;

        $r78 = virtualinvoke $r77.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List attributeTypes()>();

        $r79 = newarray (org.apache.xmlbeans.SchemaType)[0];

        $r80 = interfaceinvoke $r78.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r79);

        $r81 = (org.apache.xmlbeans.SchemaType[]) $r80;

        $r82 = (org.apache.xmlbeans.SchemaType[]) $r81;

        $r83 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildAttributeTypeMap(org.apache.xmlbeans.SchemaType[])>($r82);

        interfaceinvoke $r37.<java.util.Map: void putAll(java.util.Map)>($r83);

        goto label30;

     label31:
        $z11 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z11 != 0 goto label32;

        $r74 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeTypes>;

        $z18 = virtualinvoke $r74.<java.lang.Object: boolean equals(java.lang.Object)>($r37);

        if $z18 != 0 goto label32;

        $r75 = new java.lang.AssertionError;

        specialinvoke $r75.<java.lang.AssertionError: void <init>()>();

        throw $r75;

     label32:
        $r41 = new java.util.HashMap;

        specialinvoke $r41.<java.util.HashMap: void <init>()>();

        $r42 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r43 = interfaceinvoke $r42.<java.util.Map: java.util.Collection values()>();

        $r44 = interfaceinvoke $r43.<java.util.Collection: java.util.Iterator iterator()>();

     label33:
        $z38 = interfaceinvoke $r44.<java.util.Iterator: boolean hasNext()>();

        if $z38 == 0 goto label34;

        $r66 = interfaceinvoke $r44.<java.util.Iterator: java.lang.Object next()>();

        $r67 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r66;

        $r68 = virtualinvoke $r67.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List identityConstraints()>();

        $r69 = newarray (org.apache.xmlbeans.SchemaComponent)[0];

        $r70 = interfaceinvoke $r68.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r69);

        $r71 = (org.apache.xmlbeans.SchemaComponent[]) $r70;

        $r72 = (org.apache.xmlbeans.SchemaComponent[]) $r71;

        $r73 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r72);

        interfaceinvoke $r41.<java.util.Map: void putAll(java.util.Map)>($r73);

        goto label33;

     label34:
        $z12 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z12 != 0 goto label35;

        $r64 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints>;

        $z17 = virtualinvoke $r64.<java.lang.Object: boolean equals(java.lang.Object)>($r41);

        if $z17 != 0 goto label35;

        $r65 = new java.lang.AssertionError;

        specialinvoke $r65.<java.lang.AssertionError: void <init>()>();

        throw $r65;

     label35:
        $r45 = new java.util.HashSet;

        specialinvoke $r45.<java.util.HashSet: void <init>()>();

        $r46 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r47 = interfaceinvoke $r46.<java.util.Map: java.util.Collection values()>();

        $r48 = interfaceinvoke $r47.<java.util.Collection: java.util.Iterator iterator()>();

     label36:
        $z39 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z39 == 0 goto label37;

        $r61 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        $r62 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r61;

        $r63 = virtualinvoke $r62.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List annotations()>();

        interfaceinvoke $r45.<java.util.Set: boolean addAll(java.util.Collection)>($r63);

        goto label36;

     label37:
        $z13 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z13 != 0 goto label38;

        $r58 = new java.util.HashSet;

        $r59 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _annotations>;

        specialinvoke $r58.<java.util.HashSet: void <init>(java.util.Collection)>($r59);

        $z16 = virtualinvoke $r58.<java.util.HashSet: boolean equals(java.lang.Object)>($r45);

        if $z16 != 0 goto label38;

        $r60 = new java.lang.AssertionError;

        specialinvoke $r60.<java.lang.AssertionError: void <init>()>();

        throw $r60;

     label38:
        $r49 = new java.util.HashSet;

        specialinvoke $r49.<java.util.HashSet: void <init>()>();

        $r50 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r51 = interfaceinvoke $r50.<java.util.Map: java.util.Collection values()>();

        $r52 = interfaceinvoke $r51.<java.util.Collection: java.util.Iterator iterator()>();

     label39:
        $z40 = interfaceinvoke $r52.<java.util.Iterator: boolean hasNext()>();

        if $z40 == 0 goto label40;

        $r55 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();

        $r56 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r55;

        $r57 = virtualinvoke $r56.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.lang.String getNamespace()>();

        interfaceinvoke $r49.<java.util.Set: boolean add(java.lang.Object)>($r57);

        goto label39;

     label40:
        $z14 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z14 != 0 goto label41;

        $r53 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Set _namespaces>;

        $z15 = virtualinvoke $r53.<java.lang.Object: boolean equals(java.lang.Object)>($r49);

        if $z15 != 0 goto label41;

        $r54 = new java.lang.AssertionError;

        specialinvoke $r54.<java.lang.AssertionError: void <init>()>();

        throw $r54;

     label41:
        return;
    }

    private static synchronized void nextBytes(byte[])
    {
        byte[] r1, $r2, $r3, $r9, $r11, $r12, $r13;
        java.util.Random $r0, $r18, $r21;
        byte $b1, $b2, $b3, $b4, $b11, $b13, $b14, $b16;
        java.io.DataOutputStream $r20;
        java.lang.Runtime $r8;
        java.io.ByteArrayOutputStream $r19;
        java.lang.String[] $r7;
        long $l6, $l8;
        int $i0, $i5, $i7, $i9, i10, $i12, $i15, $i17, i18, $i19, i20, i21, $i22, i23, $i24, $i25;
        java.lang.String $r14, $r15;
        java.io.IOException $r16;
        java.lang.Class $r6, $r17;

        r1 := @parameter0: byte[];

        $r0 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Random _random>;

        if $r0 != null goto label11;

     label01:
        $r19 = new java.io.ByteArrayOutputStream;

        specialinvoke $r19.<java.io.ByteArrayOutputStream: void <init>()>();

        $r20 = new java.io.DataOutputStream;

        specialinvoke $r20.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r19);

        $r6 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl>;

        if $r6 != null goto label02;

        $r17 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl");

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl> = $r17;

        goto label03;

     label02:
        $r17 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl>;

     label03:
        $i5 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r17);

        virtualinvoke $r20.<java.io.DataOutputStream: void writeInt(int)>($i5);

        $r7 = newarray (java.lang.String)[9];

        $r7[0] = "user.name";

        $r7[1] = "user.dir";

        $r7[2] = "user.timezone";

        $r7[3] = "user.country";

        $r7[4] = "java.class.path";

        $r7[5] = "java.home";

        $r7[6] = "java.vendor";

        $r7[7] = "java.version";

        $r7[8] = "os.version";

        i18 = 0;

     label04:
        $i19 = lengthof $r7;

        if i18 >= $i19 goto label06;

        $r14 = $r7[i18];

        $r15 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>($r14);

        if $r15 == null goto label05;

        virtualinvoke $r20.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r15);

        $i17 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r15);

        virtualinvoke $r20.<java.io.DataOutputStream: void writeInt(int)>($i17);

     label05:
        i18 = i18 + 1;

        goto label04;

     label06:
        $r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l6 = virtualinvoke $r8.<java.lang.Runtime: long freeMemory()>();

        virtualinvoke $r20.<java.io.DataOutputStream: void writeLong(long)>($l6);

        virtualinvoke $r20.<java.io.DataOutputStream: void close()>();

        $r9 = virtualinvoke $r19.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        i20 = 0;

     label07:
        $i7 = lengthof $r9;

        if i20 >= $i7 goto label08;

        $r11 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: byte[] _mask>;

        $i9 = lengthof $r11;

        i10 = i20 % $i9;

        $r12 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: byte[] _mask>;

        $b11 = $r12[i10];

        $i24 = (int) $b11;

        $i12 = $i24 * 21;

        $b13 = (byte) $i12;

        $r12[i10] = $b13;

        $r13 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: byte[] _mask>;

        $b14 = $r13[i10];

        $i25 = (int) $b14;

        $i15 = $i25 + i20;

        $b16 = (byte) $i15;

        $r13[i10] = $b16;

        i20 = i20 + 1;

        goto label07;

     label08:
        goto label10;

     label09:
        $r16 := @caughtexception;

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: java.lang.Throwable logException(java.lang.Throwable)>($r16);

     label10:
        $r21 = new java.util.Random;

        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r21.<java.util.Random: void <init>(long)>($l8);

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Random _random> = $r21;

     label11:
        $r18 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Random _random>;

        virtualinvoke $r18.<java.util.Random: void nextBytes(byte[])>(r1);

        i21 = 0;

     label12:
        $i22 = lengthof r1;

        if i21 >= $i22 goto label13;

        $r2 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: byte[] _mask>;

        $i0 = lengthof $r2;

        i23 = i21 & $i0;

        $b2 = r1[i21];

        $r3 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: byte[] _mask>;

        $b1 = $r3[i23];

        $b3 = $b2 ^ $b1;

        $b4 = (byte) $b3;

        r1[i21] = $b4;

        i21 = i21 + 1;

        goto label12;

     label13:
        return;

        catch java.io.IOException from label01 to label08 with label09;
    }

    public void <init>(java.lang.String)
    {
        byte[] r14, $r18;
        java.util.HashMap $r1, $r3, $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.StringBuffer $r5, $r6, $r8, $r9, $r10, $r15, $r16, $r19;
        java.util.Map $r2;
        java.lang.String $r7, $r11, $r12, $r13, $r17, r20;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r20 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers> = $r1;

        $r2 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _typeRefsByClassname> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles> = $r4;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _allNonGroupHandlesResolved> = 0;

        if r20 != null goto label1;

        r14 = newarray (byte)[16];

        staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void nextBytes(byte[])>(r14);

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r17 = new java.lang.String;

        $r18 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: byte[] encode(byte[])>(r14);

        specialinvoke $r17.<java.lang.String: void <init>(byte[])>($r18);

        $r19 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r7 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".system.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name> = $r11;

        $r12 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        $r13 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String nameToPathString(java.lang.String)>($r12);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _basePackage> = $r13;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.ClassLoader _classloader> = null;

        return;
    }

    public void loadFromBuilder(org.apache.xmlbeans.SchemaGlobalElement[], org.apache.xmlbeans.SchemaGlobalAttribute[], org.apache.xmlbeans.SchemaType[], org.apache.xmlbeans.SchemaType[], org.apache.xmlbeans.SchemaType[])
    {
        org.apache.xmlbeans.SchemaType[] r6, r8, r10;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.AssertionError $r18;
        java.util.HashSet $r16;
        org.apache.xmlbeans.SchemaGlobalElement[] r2;
        java.util.Map $r3, $r5, $r7, $r9, $r11, $r12;
        org.apache.xmlbeans.SchemaGlobalAttribute[] r4;
        boolean $z0;
        java.util.List $r13, $r14, $r15;
        java.lang.ClassLoader $r17;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r2 := @parameter0: org.apache.xmlbeans.SchemaGlobalElement[];

        r4 := @parameter1: org.apache.xmlbeans.SchemaGlobalAttribute[];

        r6 := @parameter2: org.apache.xmlbeans.SchemaType[];

        r8 := @parameter3: org.apache.xmlbeans.SchemaType[];

        r10 := @parameter4: org.apache.xmlbeans.SchemaType[];

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r17 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.ClassLoader _classloader>;

        if $r17 == null goto label1;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label1:
        $r1 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        specialinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r0);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles> = $r1;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>(r2);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalElements> = $r3;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>(r4);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalAttributes> = $r5;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>(r6);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalTypes> = $r7;

        $r9 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildDocumentMap(org.apache.xmlbeans.SchemaType[])>(r8);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _documentTypes> = $r9;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildAttributeTypeMap(org.apache.xmlbeans.SchemaType[])>(r10);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeTypes> = $r11;

        $r12 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildTypeRefsByClassname()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _typeRefsByClassname> = $r12;

        $r15 = <java.util.Collections: java.util.List EMPTY_LIST>;

        $r14 = <java.util.Collections: java.util.List EMPTY_LIST>;

        $r13 = <java.util.Collections: java.util.List EMPTY_LIST>;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void buildContainers(java.util.List,java.util.List,java.util.List)>($r15, $r14, $r13);

        $r16 = new java.util.HashSet;

        specialinvoke $r16.<java.util.HashSet: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Set _namespaces> = $r16;

        return;
    }

    public void loadFromStscState(org.apache.xmlbeans.impl.schema.StscState)
    {
        org.apache.xmlbeans.SchemaType[] $r15, $r17, $r19, $r21;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaAttributeGroup[] $r11, $r13;
        org.apache.xmlbeans.impl.schema.StscState r2;
        java.util.Map $r4, $r6, $r8, $r12, $r16, $r20, $r22, $r23, $r24, $r26, $r31;
        org.apache.xmlbeans.SchemaModelGroup[] $r7, $r9;
        org.apache.xmlbeans.SchemaGlobalAttribute[] $r5;
        org.apache.xmlbeans.impl.schema.SchemaDependencies $r32;
        boolean $z0;
        java.util.List $r10, $r14, $r18, $r27, $r30;
        java.lang.ClassLoader $r33;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r1;
        java.lang.String[] $r29;
        java.lang.AssertionError $r34;
        java.util.HashSet $r28;
        org.apache.xmlbeans.SchemaGlobalElement[] $r3;
        org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl[] $r25;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.schema.StscState;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r33 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.ClassLoader _classloader>;

        if $r33 == null goto label1;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label1:
        $r1 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        specialinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r0);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles> = $r1;

        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaGlobalElement[] globalElements()>();

        $r4 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r3);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalElements> = $r4;

        $r5 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaGlobalAttribute[] globalAttributes()>();

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r5);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalAttributes> = $r6;

        $r7 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaModelGroup[] modelGroups()>();

        $r8 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r7);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _modelGroups> = $r8;

        $r9 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaModelGroup[] redefinedModelGroups()>();

        $r10 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List buildComponentRefList(org.apache.xmlbeans.SchemaComponent[])>($r9);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedModelGroups> = $r10;

        $r11 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaAttributeGroup[] attributeGroups()>();

        $r12 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r11);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeGroups> = $r12;

        $r13 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaAttributeGroup[] redefinedAttributeGroups()>();

        $r14 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List buildComponentRefList(org.apache.xmlbeans.SchemaComponent[])>($r13);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedAttributeGroups> = $r14;

        $r15 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaType[] globalTypes()>();

        $r16 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r15);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalTypes> = $r16;

        $r17 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaType[] redefinedGlobalTypes()>();

        $r18 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List buildComponentRefList(org.apache.xmlbeans.SchemaComponent[])>($r17);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedGlobalTypes> = $r18;

        $r19 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaType[] documentTypes()>();

        $r20 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildDocumentMap(org.apache.xmlbeans.SchemaType[])>($r19);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _documentTypes> = $r20;

        $r21 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaType[] attributeTypes()>();

        $r22 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildAttributeTypeMap(org.apache.xmlbeans.SchemaType[])>($r21);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeTypes> = $r22;

        $r23 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map typesByClassname()>();

        $r24 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildTypeRefsByClassname(java.util.Map)>($r23);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _typeRefsByClassname> = $r24;

        $r25 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl[] idConstraints()>();

        $r26 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildComponentRefMap(org.apache.xmlbeans.SchemaComponent[])>($r25);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints> = $r26;

        $r27 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.List annotations()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _annotations> = $r27;

        $r28 = new java.util.HashSet;

        $r29 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: java.lang.String[] getNamespaces()>();

        $r30 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r29);

        specialinvoke $r28.<java.util.HashSet: void <init>(java.util.Collection)>($r30);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Set _namespaces> = $r28;

        $r31 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map getContainerMap()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers> = $r31;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void fixupContainers()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void assertContainersSynchronized()>();

        $r32 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaDependencies getDependencies()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void setDependencies(org.apache.xmlbeans.impl.schema.SchemaDependencies)>($r32);

        return;
    }

    final org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        return r0;
    }

    void setDependencies(org.apache.xmlbeans.impl.schema.SchemaDependencies)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaDependencies r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaDependencies _deps> = r1;

        return;
    }

    org.apache.xmlbeans.impl.schema.SchemaDependencies getDependencies()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaDependencies $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaDependencies _deps>;

        return $r1;
    }

    public boolean isIncomplete()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        return $z0;
    }

    void setIncomplete(boolean)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete> = z0;

        return;
    }

    public void saveToDirectory(java.io.File)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.impl.util.FilerImpl $r1;
        java.io.File r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r2 := @parameter0: java.io.File;

        $r1 = new org.apache.xmlbeans.impl.util.FilerImpl;

        specialinvoke $r1.<org.apache.xmlbeans.impl.util.FilerImpl: void <init>(java.io.File,java.io.File,repackage.Repackager,boolean,boolean)>(r2, null, null, 0, 0);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void save(org.apache.xmlbeans.Filer)>($r1);

        return;
    }

    public void save(org.apache.xmlbeans.Filer)
    {
        org.apache.xmlbeans.SchemaType[] $r3, $r4, $r5, $r11;
        java.lang.IllegalStateException $r15;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaAttributeGroup[] $r9, $r13;
        org.apache.xmlbeans.SchemaGlobalElement[] $r6;
        org.apache.xmlbeans.SchemaModelGroup[] $r8, $r12;
        org.apache.xmlbeans.SchemaGlobalAttribute[] $r7;
        org.apache.xmlbeans.SchemaIdentityConstraint[] $r10;
        boolean $z0;
        java.lang.IllegalArgumentException $r14;
        org.apache.xmlbeans.Filer r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.Filer;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Incomplete SchemaTypeSystems cannot be saved.");

        throw $r15;

     label1:
        if r1 != null goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("filer must not be null");

        throw $r14;

     label2:
        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.Filer _filer> = r1;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: void startWriteMode()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] globalTypes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveTypesRecursively(org.apache.xmlbeans.SchemaType[])>($r3);

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] documentTypes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveTypesRecursively(org.apache.xmlbeans.SchemaType[])>($r4);

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] attributeTypes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveTypesRecursively(org.apache.xmlbeans.SchemaType[])>($r5);

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaGlobalElement[] globalElements()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveGlobalElements(org.apache.xmlbeans.SchemaGlobalElement[])>($r6);

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaGlobalAttribute[] globalAttributes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveGlobalAttributes(org.apache.xmlbeans.SchemaGlobalAttribute[])>($r7);

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaModelGroup[] modelGroups()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveModelGroups(org.apache.xmlbeans.SchemaModelGroup[])>($r8);

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAttributeGroup[] attributeGroups()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveAttributeGroups(org.apache.xmlbeans.SchemaAttributeGroup[])>($r9);

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaIdentityConstraint[] identityConstraints()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveIdentityConstraints(org.apache.xmlbeans.SchemaIdentityConstraint[])>($r10);

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] redefinedGlobalTypes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveTypesRecursively(org.apache.xmlbeans.SchemaType[])>($r11);

        $r12 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaModelGroup[] redefinedModelGroups()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveModelGroups(org.apache.xmlbeans.SchemaModelGroup[])>($r12);

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAttributeGroup[] redefinedAttributeGroups()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveAttributeGroups(org.apache.xmlbeans.SchemaAttributeGroup[])>($r13);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveIndex()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void savePointers()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveLoader()>();

        return;
    }

    void saveTypesRecursively(org.apache.xmlbeans.SchemaType[])
    {
        org.apache.xmlbeans.SchemaType[] r0, $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r3, $r4;
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        int $i0, i1;
        org.apache.xmlbeans.SchemaType $r1, $r5, $r6;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        $r1 = r0[i1];

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        $r4 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        if $r2 == $r4 goto label2;

        goto label3;

     label2:
        $r5 = r0[i1];

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveType(org.apache.xmlbeans.SchemaType)>($r5);

        $r6 = r0[i1];

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType[] getAnonymousTypes()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveTypesRecursively(org.apache.xmlbeans.SchemaType[])>($r7);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public void saveGlobalElements(org.apache.xmlbeans.SchemaGlobalElement[])
    {
        java.lang.IllegalStateException $r3;
        org.apache.xmlbeans.SchemaGlobalElement[] r1;
        org.apache.xmlbeans.SchemaGlobalElement $r2;
        int $i0, i1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaGlobalElement[];

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This SchemaTypeSystem cannot be saved.");

        throw $r3;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r2 = r1[i1];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveGlobalElement(org.apache.xmlbeans.SchemaGlobalElement)>($r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void saveGlobalAttributes(org.apache.xmlbeans.SchemaGlobalAttribute[])
    {
        java.lang.IllegalStateException $r3;
        int $i0, i1;
        org.apache.xmlbeans.SchemaGlobalAttribute[] r1;
        org.apache.xmlbeans.SchemaGlobalAttribute $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaGlobalAttribute[];

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This SchemaTypeSystem cannot be saved.");

        throw $r3;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r2 = r1[i1];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveGlobalAttribute(org.apache.xmlbeans.SchemaGlobalAttribute)>($r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void saveModelGroups(org.apache.xmlbeans.SchemaModelGroup[])
    {
        java.lang.IllegalStateException $r3;
        org.apache.xmlbeans.SchemaModelGroup[] r1;
        int $i0, i1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaModelGroup $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaModelGroup[];

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This SchemaTypeSystem cannot be saved.");

        throw $r3;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r2 = r1[i1];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveModelGroup(org.apache.xmlbeans.SchemaModelGroup)>($r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void saveAttributeGroups(org.apache.xmlbeans.SchemaAttributeGroup[])
    {
        org.apache.xmlbeans.SchemaAttributeGroup $r2;
        java.lang.IllegalStateException $r3;
        int $i0, i1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        boolean $z0;
        org.apache.xmlbeans.SchemaAttributeGroup[] r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaAttributeGroup[];

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This SchemaTypeSystem cannot be saved.");

        throw $r3;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r2 = r1[i1];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveAttributeGroup(org.apache.xmlbeans.SchemaAttributeGroup)>($r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void saveIdentityConstraints(org.apache.xmlbeans.SchemaIdentityConstraint[])
    {
        java.lang.IllegalStateException $r3;
        int $i0, i1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaIdentityConstraint[] r1;
        org.apache.xmlbeans.SchemaIdentityConstraint $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaIdentityConstraint[];

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This SchemaTypeSystem cannot be saved.");

        throw $r3;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r2 = r1[i1];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveIdentityConstraint(org.apache.xmlbeans.SchemaIdentityConstraint)>($r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void saveGlobalElement(org.apache.xmlbeans.SchemaGlobalElement)
    {
        java.lang.IllegalStateException $r9;
        org.apache.xmlbeans.SchemaGlobalElement r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaParticle $r5, $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader $r4;
        java.lang.String $r3, $r6, $r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaGlobalElement;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This SchemaTypeSystem cannot be saved.");

        throw $r9;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForElement(org.apache.xmlbeans.SchemaGlobalElement)>(r1);

        $r4 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        specialinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>(r0, $r3);

        $r5 = (org.apache.xmlbeans.SchemaParticle) r1;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeParticleData(org.apache.xmlbeans.SchemaParticle)>($r5);

        $r6 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: java.lang.String getSourceName()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r6);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeRealHeader(java.lang.String,int)>($r3, 3);

        $r7 = (org.apache.xmlbeans.SchemaParticle) r1;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeParticleData(org.apache.xmlbeans.SchemaParticle)>($r7);

        $r8 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: java.lang.String getSourceName()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r8);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeEnd()>();

        return;
    }

    public void saveGlobalAttribute(org.apache.xmlbeans.SchemaGlobalAttribute)
    {
        java.lang.IllegalStateException $r7;
        org.apache.xmlbeans.SchemaGlobalAttribute r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader $r4;
        java.lang.String $r3, $r5, $r6;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaGlobalAttribute;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This SchemaTypeSystem cannot be saved.");

        throw $r7;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForAttribute(org.apache.xmlbeans.SchemaGlobalAttribute)>(r1);

        $r4 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        specialinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>(r0, $r3);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAttributeData(org.apache.xmlbeans.SchemaLocalAttribute)>(r1);

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalAttribute: java.lang.String getSourceName()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r5);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeRealHeader(java.lang.String,int)>($r3, 4);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAttributeData(org.apache.xmlbeans.SchemaLocalAttribute)>(r1);

        $r6 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalAttribute: java.lang.String getSourceName()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r6);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeEnd()>();

        return;
    }

    public void saveModelGroup(org.apache.xmlbeans.SchemaModelGroup)
    {
        java.lang.IllegalStateException $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String $r3;
        org.apache.xmlbeans.SchemaModelGroup r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaModelGroup;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This SchemaTypeSystem cannot be saved.");

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForModelGroup(org.apache.xmlbeans.SchemaModelGroup)>(r1);

        $r4 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        specialinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>(r0, $r3);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeModelGroupData(org.apache.xmlbeans.SchemaModelGroup)>(r1);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeRealHeader(java.lang.String,int)>($r3, 6);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeModelGroupData(org.apache.xmlbeans.SchemaModelGroup)>(r1);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeEnd()>();

        return;
    }

    public void saveAttributeGroup(org.apache.xmlbeans.SchemaAttributeGroup)
    {
        org.apache.xmlbeans.SchemaAttributeGroup r1;
        java.lang.IllegalStateException $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaAttributeGroup;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This SchemaTypeSystem cannot be saved.");

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForAttributeGroup(org.apache.xmlbeans.SchemaAttributeGroup)>(r1);

        $r4 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        specialinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>(r0, $r3);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAttributeGroupData(org.apache.xmlbeans.SchemaAttributeGroup)>(r1);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeRealHeader(java.lang.String,int)>($r3, 7);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAttributeGroupData(org.apache.xmlbeans.SchemaAttributeGroup)>(r1);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeEnd()>();

        return;
    }

    public void saveIdentityConstraint(org.apache.xmlbeans.SchemaIdentityConstraint)
    {
        java.lang.IllegalStateException $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String $r3;
        org.apache.xmlbeans.SchemaIdentityConstraint r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaIdentityConstraint;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _incomplete>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This SchemaTypeSystem cannot be saved.");

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForIdentityConstraint(org.apache.xmlbeans.SchemaIdentityConstraint)>(r1);

        $r4 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        specialinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>(r0, $r3);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeIdConstraintData(org.apache.xmlbeans.SchemaIdentityConstraint)>(r1);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeRealHeader(java.lang.String,int)>($r3, 8);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeIdConstraintData(org.apache.xmlbeans.SchemaIdentityConstraint)>(r1);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeEnd()>();

        return;
    }

    void saveType(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String $r3;
        org.apache.xmlbeans.SchemaType r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForType(org.apache.xmlbeans.SchemaType)>(r1);

        $r4 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        specialinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>(r0, $r3);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeTypeData(org.apache.xmlbeans.SchemaType)>(r1);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeRealHeader(java.lang.String,int)>($r3, 2);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeTypeData(org.apache.xmlbeans.SchemaType)>(r1);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeEnd()>();

        return;
    }

    public static java.lang.String crackPointer(java.io.InputStream)
    {
        java.lang.Throwable $r5;
        java.io.DataInputStream r13, $r14;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool $r15;
        short $s1, $s2, $s3, $s4;
        int $i0, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r3;
        java.io.IOException $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r13 = null;

     label01:
        $r14 = new java.io.DataInputStream;

        specialinvoke $r14.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        r13 = $r14;

        $i0 = virtualinvoke $r14.<java.io.DataInputStream: int readInt()>();

        if $i0 == -629491010 goto label07;

     label02:
        if $r14 == null goto label06;

     label03:
        virtualinvoke $r14.<java.io.DataInputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r12 := @caughtexception;

     label06:
        return null;

     label07:
        $s1 = virtualinvoke $r14.<java.io.DataInputStream: short readShort()>();

        $s2 = virtualinvoke $r14.<java.io.DataInputStream: short readShort()>();

        $i5 = (int) $s1;

        if $i5 == 2 goto label13;

     label08:
        if $r14 == null goto label12;

     label09:
        virtualinvoke $r14.<java.io.DataInputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r11 := @caughtexception;

     label12:
        return null;

     label13:
        $i6 = (int) $s2;

        if $i6 <= 24 goto label19;

     label14:
        if $r14 == null goto label18;

     label15:
        virtualinvoke $r14.<java.io.DataInputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r10 := @caughtexception;

     label18:
        return null;

     label19:
        $i7 = (int) $s1;

        if $i7 > 2 goto label20;

        $i8 = (int) $s1;

        if $i8 != 2 goto label21;

        $i9 = (int) $s2;

        if $i9 < 18 goto label21;

     label20:
        virtualinvoke $r14.<java.io.DataInputStream: short readShort()>();

     label21:
        $s4 = virtualinvoke $r14.<java.io.DataInputStream: short readShort()>();

        $i10 = (int) $s4;

        if $i10 == 5 goto label27;

     label22:
        if $r14 == null goto label26;

     label23:
        virtualinvoke $r14.<java.io.DataInputStream: void close()>();

     label24:
        goto label26;

     label25:
        $r9 := @caughtexception;

     label26:
        return null;

     label27:
        $r15 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool;

        specialinvoke $r15.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool: void <init>(java.lang.String,java.lang.String)>("pointer", "unk");

        virtualinvoke $r15.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool: void readFrom(java.io.DataInputStream)>($r14);

        $s3 = virtualinvoke $r14.<java.io.DataInputStream: short readShort()>();

        $i11 = (int) $s3;

        $r3 = virtualinvoke $r15.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool: java.lang.String stringForCode(int)>($i11);

     label28:
        if $r14 == null goto label32;

     label29:
        virtualinvoke $r14.<java.io.DataInputStream: void close()>();

     label30:
        goto label32;

     label31:
        $r8 := @caughtexception;

     label32:
        return $r3;

     label33:
        $r7 := @caughtexception;

     label34:
        if r13 == null goto label38;

     label35:
        virtualinvoke r13.<java.io.DataInputStream: void close()>();

     label36:
        goto label38;

     label37:
        $r6 := @caughtexception;

     label38:
        return null;

     label39:
        $r5 := @caughtexception;

     label40:
        if r13 == null goto label44;

     label41:
        virtualinvoke r13.<java.io.DataInputStream: void close()>();

     label42:
        goto label44;

     label43:
        $r4 := @caughtexception;

     label44:
        throw $r5;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.io.IOException from label01 to label02 with label33;
        catch java.io.IOException from label07 to label08 with label33;
        catch java.io.IOException from label13 to label14 with label33;
        catch java.io.IOException from label19 to label22 with label33;
        catch java.io.IOException from label27 to label28 with label33;
        catch java.io.IOException from label35 to label36 with label37;
        catch java.lang.Throwable from label01 to label02 with label39;
        catch java.lang.Throwable from label07 to label08 with label39;
        catch java.lang.Throwable from label13 to label14 with label39;
        catch java.lang.Throwable from label19 to label22 with label39;
        catch java.lang.Throwable from label27 to label28 with label39;
        catch java.lang.Throwable from label33 to label34 with label39;
        catch java.io.IOException from label41 to label42 with label43;
        catch java.lang.Throwable from label39 to label40 with label39;
    }

    public org.apache.xmlbeans.SchemaType typeForHandle(java.lang.String)
    {
        java.lang.Throwable $r6;
        java.util.Map $r1, $r3;
        java.lang.Object $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String r2;
        org.apache.xmlbeans.SchemaType $r5;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (org.apache.xmlbeans.SchemaType) $r4;

        exitmonitor $r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.SchemaType typeForClassname(java.lang.String)
    {
        java.util.Map $r2;
        org.apache.xmlbeans.SchemaType$Ref r4;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String r1;
        org.apache.xmlbeans.SchemaType $r5;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _typeRefsByClassname>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.xmlbeans.SchemaType$Ref) $r3;

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.<org.apache.xmlbeans.SchemaType$Ref: org.apache.xmlbeans.SchemaType get()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    public org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)
    {
        java.lang.IllegalStateException $r46;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.util.Map $r1, $r3, $r10, $r12, $r37, $r38;
        boolean $z0;
        java.lang.Throwable $r34, $r35;
        java.lang.StringBuffer $r7, $r8, $r14, $r15, $r18, $r19, $r22, $r23, $r26, $r27, $r30, $r31, $r40, $r41, $r42, $r43, $r44, $r45;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader $r39;
        int $i0, $i2;
        org.apache.xmlbeans.SchemaComponent r36;
        java.lang.String r2, $r9, $r16, $r20, $r24, $r28, $r32;
        java.lang.Object $r4, $r11;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles>;

        entermonitor $r1;

     label01:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r36 = (org.apache.xmlbeans.SchemaComponent) $r4;

        exitmonitor $r1;

     label02:
        goto label05;

     label03:
        $r35 := @caughtexception;

        exitmonitor $r1;

     label04:
        throw $r35;

     label05:
        if r36 != null goto label20;

        $r39 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $i2 = (int) 65535;

        specialinvoke $r39.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String,int)>(r0, r2, $i2);

        $i0 = virtualinvoke $r39.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int getActualFiletype()>();

        tableswitch($i0)
        {
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label12;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            default: goto label12;
        };

     label06:
        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Resolving type for handle ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r32, 0);

        r36 = virtualinvoke $r39.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType finishLoadingType()>();

        goto label13;

     label07:
        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Resolving element for handle ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r28, 0);

        r36 = virtualinvoke $r39.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaGlobalElement finishLoadingElement()>();

        goto label13;

     label08:
        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Resolving attribute for handle ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r24, 0);

        r36 = virtualinvoke $r39.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaGlobalAttribute finishLoadingAttribute()>();

        goto label13;

     label09:
        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Resolving model group for handle ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r20, 0);

        r36 = virtualinvoke $r39.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaModelGroup finishLoadingModelGroup()>();

        goto label13;

     label10:
        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Resolving attribute group for handle ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r16, 0);

        r36 = virtualinvoke $r39.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaAttributeGroup finishLoadingAttributeGroup()>();

        goto label13;

     label11:
        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Resolving id constraint for handle ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r9, 0);

        r36 = virtualinvoke $r39.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaIdentityConstraint finishLoadingIdentityConstraint()>();

        goto label13;

     label12:
        $r46 = new java.lang.IllegalStateException;

        specialinvoke $r46.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Illegal handle type");

        throw $r46;

     label13:
        $r37 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles>;

        entermonitor $r37;

     label14:
        $r38 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles>;

        $z0 = interfaceinvoke $r38.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z0 != 0 goto label15;

        $r12 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r36);

        goto label16;

     label15:
        $r10 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _resolvedHandles>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r36 = (org.apache.xmlbeans.SchemaComponent) $r11;

     label16:
        exitmonitor $r37;

     label17:
        goto label20;

     label18:
        $r34 := @caughtexception;

        exitmonitor $r37;

     label19:
        throw $r34;

     label20:
        return r36;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label14 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public void resolve()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r2;
        java.util.Map $r12, $r14, $r16, $r18, $r20, $r22;
        boolean $z0, $z1;
        java.util.Collection $r13, $r15, $r17, $r19, $r21, $r23;
        java.util.ArrayList $r34;
        java.lang.StringBuffer $r1, $r4, $r7, $r9, $r26, $r28, $r32, $r33, $r35;
        int $i1;
        java.lang.String $r3, $r5, $r8, $r10, $r27, $r29;
        java.util.Iterator $r24;
        org.apache.xmlbeans.SchemaComponent$Ref r31;
        java.lang.Object $r30;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Resolve called type system ");

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r5, 0);

        $z0 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _allNonGroupHandlesResolved>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Resolving all handles for type system ");

        $r8 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r10, 1);

        $r34 = new java.util.ArrayList;

        specialinvoke $r34.<java.util.ArrayList: void <init>()>();

        $r12 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalElements>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r34.<java.util.List: boolean addAll(java.util.Collection)>($r13);

        $r14 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalAttributes>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r34.<java.util.List: boolean addAll(java.util.Collection)>($r15);

        $r16 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalTypes>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r34.<java.util.List: boolean addAll(java.util.Collection)>($r17);

        $r18 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _documentTypes>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r34.<java.util.List: boolean addAll(java.util.Collection)>($r19);

        $r20 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeTypes>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r34.<java.util.List: boolean addAll(java.util.Collection)>($r21);

        $r22 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r34.<java.util.List: boolean addAll(java.util.Collection)>($r23);

        $r24 = interfaceinvoke $r34.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r30 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r31 = (org.apache.xmlbeans.SchemaComponent$Ref) $r30;

        virtualinvoke r31.<org.apache.xmlbeans.SchemaComponent$Ref: org.apache.xmlbeans.SchemaComponent getComponent()>();

        goto label2;

     label3:
        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Finished resolving type system ");

        $r27 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        $i1 = (int) -1;

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r29, $i1);

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean _allNonGroupHandlesResolved> = 1;

        return;
    }

    public boolean isNamespaceDefined(java.lang.String)
    {
        java.util.Set $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Set _namespaces>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public org.apache.xmlbeans.SchemaType$Ref findTypeRef(javax.xml.namespace.QName)
    {
        java.util.Map $r2;
        org.apache.xmlbeans.SchemaType$Ref $r4;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalTypes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.SchemaType$Ref) $r3;

        return $r4;
    }

    public org.apache.xmlbeans.SchemaType$Ref findDocumentTypeRef(javax.xml.namespace.QName)
    {
        java.util.Map $r2;
        org.apache.xmlbeans.SchemaType$Ref $r4;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _documentTypes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.SchemaType$Ref) $r3;

        return $r4;
    }

    public org.apache.xmlbeans.SchemaType$Ref findAttributeTypeRef(javax.xml.namespace.QName)
    {
        java.util.Map $r2;
        org.apache.xmlbeans.SchemaType$Ref $r4;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeTypes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.SchemaType$Ref) $r3;

        return $r4;
    }

    public org.apache.xmlbeans.SchemaGlobalElement$Ref findElementRef(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.SchemaGlobalElement$Ref $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalElements>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.SchemaGlobalElement$Ref) $r3;

        return $r4;
    }

    public org.apache.xmlbeans.SchemaGlobalAttribute$Ref findAttributeRef(javax.xml.namespace.QName)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        javax.xml.namespace.QName r1;
        org.apache.xmlbeans.SchemaGlobalAttribute$Ref $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalAttributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.SchemaGlobalAttribute$Ref) $r3;

        return $r4;
    }

    public org.apache.xmlbeans.SchemaModelGroup$Ref findModelGroupRef(javax.xml.namespace.QName)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        javax.xml.namespace.QName r1;
        org.apache.xmlbeans.SchemaModelGroup$Ref $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _modelGroups>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.SchemaModelGroup$Ref) $r3;

        return $r4;
    }

    public org.apache.xmlbeans.SchemaAttributeGroup$Ref findAttributeGroupRef(javax.xml.namespace.QName)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        javax.xml.namespace.QName r1;
        org.apache.xmlbeans.SchemaAttributeGroup$Ref $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeGroups>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.SchemaAttributeGroup$Ref) $r3;

        return $r4;
    }

    public org.apache.xmlbeans.SchemaIdentityConstraint$Ref findIdentityConstraintRef(javax.xml.namespace.QName)
    {
        java.util.Map $r2;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r4;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.SchemaIdentityConstraint$Ref) $r3;

        return $r4;
    }

    public org.apache.xmlbeans.SchemaType[] globalTypes()
    {
        org.apache.xmlbeans.SchemaType[] r3, $r10;
        java.util.Iterator $r6;
        java.util.Collection $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.util.Map $r1, $r2, $r4;
        org.apache.xmlbeans.SchemaType$Ref $r8;
        int $i0, i1;
        java.lang.Object $r7;
        org.apache.xmlbeans.SchemaType $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalTypes>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] EMPTY_ST_ARRAY>;

        return $r10;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalTypes>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r3 = newarray (org.apache.xmlbeans.SchemaType)[$i0];

        i1 = 0;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalTypes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.xmlbeans.SchemaType$Ref) $r7;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.SchemaType$Ref: org.apache.xmlbeans.SchemaType get()>();

        r3[i1] = $r9;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;
    }

    public org.apache.xmlbeans.SchemaType[] redefinedGlobalTypes()
    {
        org.apache.xmlbeans.SchemaType[] $r2, r5;
        java.util.Iterator $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.util.List $r1, $r3, $r4, $r6;
        org.apache.xmlbeans.SchemaType$Ref $r9;
        int $i0, i1;
        java.lang.Object $r8;
        org.apache.xmlbeans.SchemaType $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedGlobalTypes>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedGlobalTypes>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] EMPTY_ST_ARRAY>;

        return $r2;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedGlobalTypes>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.SchemaType)[$i0];

        i1 = 0;

        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedGlobalTypes>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.xmlbeans.SchemaType$Ref) $r8;

        $r10 = virtualinvoke $r9.<org.apache.xmlbeans.SchemaType$Ref: org.apache.xmlbeans.SchemaType get()>();

        r5[i1] = $r10;

        i1 = i1 + 1;

        goto label3;

     label4:
        return r5;
    }

    public java.io.InputStream getSourceAsStream(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.ResourceLoader $r2;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r7, $r10, $r11, $r12;
        java.lang.String $r4, $r8, r13;
        boolean $z0;
        java.io.InputStream $r9;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r13 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/src");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = interfaceinvoke $r2.<org.apache.xmlbeans.ResourceLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r8);

        return $r9;
    }

    org.apache.xmlbeans.impl.schema.SchemaContainer[] containers()
    {
        java.util.Iterator $r5;
        java.util.Collection $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r7;
        java.util.Map $r1, $r3;
        int $i0, i1;
        org.apache.xmlbeans.impl.schema.SchemaContainer[] r2;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        r2 = newarray (org.apache.xmlbeans.impl.schema.SchemaContainer)[$i0];

        i1 = 0;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _containers>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r6;

        r2[i1] = $r7;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    public org.apache.xmlbeans.SchemaType[] documentTypes()
    {
        org.apache.xmlbeans.SchemaType[] r3, $r10;
        java.util.Iterator $r6;
        java.util.Collection $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.util.Map $r1, $r2, $r4;
        org.apache.xmlbeans.SchemaType$Ref $r8;
        int $i0, i1;
        java.lang.Object $r7;
        org.apache.xmlbeans.SchemaType $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _documentTypes>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] EMPTY_ST_ARRAY>;

        return $r10;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _documentTypes>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r3 = newarray (org.apache.xmlbeans.SchemaType)[$i0];

        i1 = 0;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _documentTypes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.xmlbeans.SchemaType$Ref) $r7;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.SchemaType$Ref: org.apache.xmlbeans.SchemaType get()>();

        r3[i1] = $r9;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;
    }

    public org.apache.xmlbeans.SchemaType[] attributeTypes()
    {
        org.apache.xmlbeans.SchemaType[] r3, $r10;
        java.util.Iterator $r6;
        java.util.Collection $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.util.Map $r1, $r2, $r4;
        org.apache.xmlbeans.SchemaType$Ref $r8;
        int $i0, i1;
        java.lang.Object $r7;
        org.apache.xmlbeans.SchemaType $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeTypes>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] EMPTY_ST_ARRAY>;

        return $r10;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeTypes>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r3 = newarray (org.apache.xmlbeans.SchemaType)[$i0];

        i1 = 0;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeTypes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.xmlbeans.SchemaType$Ref) $r7;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.SchemaType$Ref: org.apache.xmlbeans.SchemaType get()>();

        r3[i1] = $r9;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;
    }

    public org.apache.xmlbeans.SchemaGlobalElement[] globalElements()
    {
        java.util.Iterator $r6;
        org.apache.xmlbeans.SchemaGlobalElement$Ref $r8;
        org.apache.xmlbeans.SchemaGlobalElement $r9;
        java.util.Collection $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaGlobalElement[] r3, $r10;
        java.util.Map $r1, $r2, $r4;
        int $i0, i1;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalElements>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaGlobalElement[] EMPTY_GE_ARRAY>;

        return $r10;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalElements>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r3 = newarray (org.apache.xmlbeans.SchemaGlobalElement)[$i0];

        i1 = 0;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalElements>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.xmlbeans.SchemaGlobalElement$Ref) $r7;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.SchemaGlobalElement$Ref: org.apache.xmlbeans.SchemaGlobalElement get()>();

        r3[i1] = $r9;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;
    }

    public org.apache.xmlbeans.SchemaGlobalAttribute[] globalAttributes()
    {
        java.util.Iterator $r6;
        java.util.Collection $r5;
        org.apache.xmlbeans.SchemaGlobalAttribute $r9;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaGlobalAttribute$Ref $r8;
        java.util.Map $r1, $r2, $r4;
        int $i0, i1;
        org.apache.xmlbeans.SchemaGlobalAttribute[] r3, $r10;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalAttributes>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaGlobalAttribute[] EMPTY_GA_ARRAY>;

        return $r10;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalAttributes>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r3 = newarray (org.apache.xmlbeans.SchemaGlobalAttribute)[$i0];

        i1 = 0;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _globalAttributes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.xmlbeans.SchemaGlobalAttribute$Ref) $r7;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.SchemaGlobalAttribute$Ref: org.apache.xmlbeans.SchemaGlobalAttribute get()>();

        r3[i1] = $r9;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;
    }

    public org.apache.xmlbeans.SchemaModelGroup[] modelGroups()
    {
        java.util.Iterator $r6;
        java.util.Collection $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaModelGroup $r9;
        org.apache.xmlbeans.SchemaModelGroup$Ref $r8;
        java.util.Map $r1, $r2, $r4;
        int $i0, i1;
        org.apache.xmlbeans.SchemaModelGroup[] r3, $r10;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _modelGroups>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaModelGroup[] EMPTY_MG_ARRAY>;

        return $r10;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _modelGroups>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r3 = newarray (org.apache.xmlbeans.SchemaModelGroup)[$i0];

        i1 = 0;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _modelGroups>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.xmlbeans.SchemaModelGroup$Ref) $r7;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.SchemaModelGroup$Ref: org.apache.xmlbeans.SchemaModelGroup get()>();

        r3[i1] = $r9;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;
    }

    public org.apache.xmlbeans.SchemaModelGroup[] redefinedModelGroups()
    {
        java.util.Iterator $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaModelGroup $r10;
        org.apache.xmlbeans.SchemaModelGroup$Ref $r9;
        java.util.List $r1, $r3, $r4, $r6;
        org.apache.xmlbeans.SchemaModelGroup[] $r2, r5;
        int $i0, i1;
        java.lang.Object $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedModelGroups>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedModelGroups>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaModelGroup[] EMPTY_MG_ARRAY>;

        return $r2;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedModelGroups>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.SchemaModelGroup)[$i0];

        i1 = 0;

        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedModelGroups>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.xmlbeans.SchemaModelGroup$Ref) $r8;

        $r10 = virtualinvoke $r9.<org.apache.xmlbeans.SchemaModelGroup$Ref: org.apache.xmlbeans.SchemaModelGroup get()>();

        r5[i1] = $r10;

        i1 = i1 + 1;

        goto label3;

     label4:
        return r5;
    }

    public org.apache.xmlbeans.SchemaAttributeGroup[] attributeGroups()
    {
        org.apache.xmlbeans.SchemaAttributeGroup $r9;
        java.util.Iterator $r6;
        java.util.Collection $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaAttributeGroup[] r3, $r10;
        java.util.Map $r1, $r2, $r4;
        int $i0, i1;
        java.lang.Object $r7;
        org.apache.xmlbeans.SchemaAttributeGroup$Ref $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeGroups>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAttributeGroup[] EMPTY_AG_ARRAY>;

        return $r10;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeGroups>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r3 = newarray (org.apache.xmlbeans.SchemaAttributeGroup)[$i0];

        i1 = 0;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _attributeGroups>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.xmlbeans.SchemaAttributeGroup$Ref) $r7;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.SchemaAttributeGroup$Ref: org.apache.xmlbeans.SchemaAttributeGroup get()>();

        r3[i1] = $r9;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;
    }

    public org.apache.xmlbeans.SchemaAttributeGroup[] redefinedAttributeGroups()
    {
        org.apache.xmlbeans.SchemaAttributeGroup $r10;
        java.util.Iterator $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaAttributeGroup[] $r2, r5;
        java.util.List $r1, $r3, $r4, $r6;
        int $i0, i1;
        java.lang.Object $r8;
        org.apache.xmlbeans.SchemaAttributeGroup$Ref $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedAttributeGroups>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedAttributeGroups>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAttributeGroup[] EMPTY_AG_ARRAY>;

        return $r2;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedAttributeGroups>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.SchemaAttributeGroup)[$i0];

        i1 = 0;

        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _redefinedAttributeGroups>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.xmlbeans.SchemaAttributeGroup$Ref) $r8;

        $r10 = virtualinvoke $r9.<org.apache.xmlbeans.SchemaAttributeGroup$Ref: org.apache.xmlbeans.SchemaAttributeGroup get()>();

        r5[i1] = $r10;

        i1 = i1 + 1;

        goto label3;

     label4:
        return r5;
    }

    public org.apache.xmlbeans.SchemaAnnotation[] annotations()
    {
        java.lang.Object[] $r6;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.util.List $r1, $r3, $r4, $r5;
        int $i0;
        org.apache.xmlbeans.SchemaAnnotation[] $r2, $r7, r8, r9;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _annotations>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _annotations>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAnnotation[] EMPTY_ANN_ARRAY>;

        return $r2;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _annotations>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r8 = newarray (org.apache.xmlbeans.SchemaAnnotation)[$i0];

        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.List _annotations>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r8);

        $r7 = (org.apache.xmlbeans.SchemaAnnotation[]) $r6;

        r9 = (org.apache.xmlbeans.SchemaAnnotation[]) $r7;

        return r9;
    }

    public org.apache.xmlbeans.SchemaIdentityConstraint[] identityConstraints()
    {
        java.util.Iterator $r6;
        java.util.Collection $r5;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.SchemaIdentityConstraint $r9;
        java.util.Map $r1, $r2, $r4;
        int $i0, i1;
        java.lang.Object $r7;
        org.apache.xmlbeans.SchemaIdentityConstraint[] r3, $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaIdentityConstraint[] EMPTY_IC_ARRAY>;

        return $r10;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r3 = newarray (org.apache.xmlbeans.SchemaIdentityConstraint)[$i0];

        i1 = 0;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _identityConstraints>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.xmlbeans.SchemaIdentityConstraint$Ref) $r7;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.SchemaIdentityConstraint$Ref: org.apache.xmlbeans.SchemaIdentityConstraint get()>();

        r3[i1] = $r9;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.ClassLoader $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.ClassLoader _classloader>;

        return $r1;
    }

    public java.lang.String handleForType(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String $r3;
        org.apache.xmlbeans.SchemaType r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForType(org.apache.xmlbeans.SchemaType)>(r1);

        return $r3;
    }

    public java.lang.String getName()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        return $r1;
    }

    public org.apache.xmlbeans.SchemaTypeSystem typeSystemForName(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String $r1, r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        return null;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.lang.String access$000(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _basePackage>;

        return $r1;
    }

    static java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String _name>;

        return $r1;
    }

    static org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool access$200(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool _localHandles>;

        return $r1;
    }

    static java.util.Map access$300(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map _typeRefsByClassname>;

        return $r1;
    }

    static java.util.Set access$400(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)
    {
        java.util.Set $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Set _namespaces>;

        return $r1;
    }

    static org.apache.xmlbeans.impl.schema.SchemaContainer access$800(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String r1;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r2;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainerNonNull(java.lang.String)>(r1);

        return $r2;
    }

    static org.apache.xmlbeans.Filer access$900(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.Filer $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.Filer _filer>;

        return $r1;
    }

    static org.apache.xmlbeans.ResourceLoader access$1000(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.ResourceLoader $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        return $r1;
    }

    static org.apache.xmlbeans.impl.schema.SchemaContainer access$1100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        java.lang.String r1;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r2;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        byte[] $r5, $r13;
        org.apache.xmlbeans.SchemaType[] $r6;
        java.lang.String[] $r4;
        org.apache.xmlbeans.SchemaAttributeGroup[] $r10;
        org.apache.xmlbeans.SchemaGlobalElement[] $r7;
        org.apache.xmlbeans.SchemaModelGroup[] $r9;
        int $i0;
        org.apache.xmlbeans.SchemaGlobalAttribute[] $r8;
        org.apache.xmlbeans.SchemaAnnotation[] $r12;
        java.lang.String $r3, $r15, $r17, $r22;
        org.apache.xmlbeans.SchemaIdentityConstraint[] $r11;
        boolean $z0, $z1;
        java.lang.Package $r2;
        java.lang.Class $r0, $r1, $r14, $r16, $r18, $r19, $r20, $r21;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int MAX_UNSIGNED_SHORT> = 65535;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_NAMEANDTYPE> = 12;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_INTERFACEMETHOD> = 11;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_METHOD> = 10;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_FIELD> = 9;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_STRING> = 8;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_CLASS> = 7;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_DOUBLE> = 6;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_LONG> = 5;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_FLOAT> = 4;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_INTEGER> = 3;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_UNICODE> = 2;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int CONSTANT_UTF8> = 1;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String HOLDER_TEMPLATE_CLASSFILE> = "TypeSystemHolder.template";

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String HOLDER_TEMPLATE_CLASS> = "org.apache.xmlbeans.impl.schema.TypeSystemHolder";

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_ATTRIBUTE_TYPE> = 524288;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_ABSTRACT> = 262144;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_FINAL_LIST> = 131072;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_FINAL_UNION> = 65536;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_FINAL_REST> = 32768;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_FINAL_EXT> = 16384;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_BLOCK_REST> = 8192;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_BLOCK_EXT> = 4096;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_COMPILED> = 2048;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_TOTAL_ORDER> = 1024;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_ORDER_SENSITIVE> = 512;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_HAS_PATTERN> = 256;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_UNION_OF_LISTS> = 128;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_STRINGENUM> = 64;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_NUMERIC> = 32;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_FINITE> = 16;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_BOUNDED> = 8;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_ORDERED> = 4;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_DOCUMENT_TYPE> = 2;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_SIMPLE_TYPE> = 1;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FIELD_LOCALELT> = 3;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FIELD_LOCALATTR> = 2;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FIELD_GLOBAL> = 1;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FIELD_NONE> = 0;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PROP_JAVAARRAY> = 8;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PROP_JAVAOPTIONAL> = 4;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PROP_JAVASINGLETON> = 2;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PROP_ISATTR> = 1;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PART_FINALREST> = 512;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PART_FINALEXT> = 256;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PART_ABSTRACT> = 128;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PART_BLOCKSUBST> = 64;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PART_BLOCKREST> = 32;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PART_BLOCKEXT> = 16;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PART_NILLABLE> = 8;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PART_FIXED> = 4;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FLAG_PART_SKIPPABLE> = 1;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FILETYPE_SCHEMAIDENTITYCONSTRAINT> = 8;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FILETYPE_SCHEMAATTRIBUTEGROUP> = 7;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FILETYPE_SCHEMAMODELGROUP> = 6;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FILETYPE_SCHEMAPOINTER> = 5;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FILETYPE_SCHEMAATTRIBUTE> = 4;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FILETYPE_SCHEMAELEMENT> = 3;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FILETYPE_SCHEMATYPE> = 2;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int FILETYPE_SCHEMAINDEX> = 1;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int RELEASE_NUMBER> = 0;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int MINOR_VERSION> = 24;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int MAJOR_VERSION> = 2;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: int DATA_BABE> = -629491010;

        $r0 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl>;

        if $r0 != null goto label01;

        $r18 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl");

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl> = $r18;

        goto label02;

     label01:
        $r18 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl>;

     label02:
        $z0 = virtualinvoke $r18.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean $assertionsDisabled> = $z1;

        $r1 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem>;

        if $r1 != null goto label05;

        $r19 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.SchemaTypeSystem");

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem> = $r19;

        goto label06;

     label05:
        $r19 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem>;

     label06:
        $r2 = virtualinvoke $r19.<java.lang.Class: java.lang.Package getPackage()>();

        if $r2 != null goto label11;

        $r14 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem>;

        if $r14 != null goto label07;

        $r20 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.SchemaTypeSystem");

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem> = $r20;

        goto label08;

     label07:
        $r20 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem>;

     label08:
        $r15 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $r16 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem>;

        if $r16 != null goto label09;

        $r21 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.SchemaTypeSystem");

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem> = $r21;

        goto label10;

     label09:
        $r21 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem>;

     label10:
        $r17 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r17.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $r22 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label12;

     label11:
        $r22 = virtualinvoke $r2.<java.lang.Package: java.lang.String getName()>();

     label12:
        $r3 = virtualinvoke $r22.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", "_");

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN> = $r3;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String[] makeClassStrings(java.lang.String)>("org.apache.xmlbeans.impl.schema.TypeSystemHolder");

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String[] HOLDER_TEMPLATE_NAMES> = $r4;

        $r5 = newarray (byte)[16];

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: byte[] _mask> = $r5;

        $r6 = newarray (org.apache.xmlbeans.SchemaType)[0];

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] EMPTY_ST_ARRAY> = $r6;

        $r7 = newarray (org.apache.xmlbeans.SchemaGlobalElement)[0];

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaGlobalElement[] EMPTY_GE_ARRAY> = $r7;

        $r8 = newarray (org.apache.xmlbeans.SchemaGlobalAttribute)[0];

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaGlobalAttribute[] EMPTY_GA_ARRAY> = $r8;

        $r9 = newarray (org.apache.xmlbeans.SchemaModelGroup)[0];

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaModelGroup[] EMPTY_MG_ARRAY> = $r9;

        $r10 = newarray (org.apache.xmlbeans.SchemaAttributeGroup)[0];

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAttributeGroup[] EMPTY_AG_ARRAY> = $r10;

        $r11 = newarray (org.apache.xmlbeans.SchemaIdentityConstraint)[0];

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaIdentityConstraint[] EMPTY_IC_ARRAY> = $r11;

        $r12 = newarray (org.apache.xmlbeans.SchemaAnnotation)[0];

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAnnotation[] EMPTY_ANN_ARRAY> = $r12;

        $r13 = newarray (byte)[1];

        $r13[0] = 0;

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: byte[] SINGLE_ZERO_BYTE> = $r13;

        return;
    }
}
