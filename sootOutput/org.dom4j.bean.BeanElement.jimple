public class org.dom4j.bean.BeanElement extends org.dom4j.tree.DefaultElement
{
    private static final org.dom4j.DocumentFactory DOCUMENT_FACTORY;
    private java.lang.Object bean;
    static java.lang.Class class$org$dom4j$bean$BeanElement;

    public void <init>(java.lang.String, java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.QName $r3;
        java.lang.Object r4;
        java.lang.String r1;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r2 = <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String)>(r1);

        specialinvoke r0.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName,java.lang.Object)>($r3, r4);

        return;
    }

    public void <init>(java.lang.String, org.dom4j.Namespace, java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.Namespace r2;
        org.dom4j.QName $r4;
        java.lang.Object r5;
        java.lang.String r1;
        org.dom4j.DocumentFactory $r3;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.dom4j.Namespace;

        r5 := @parameter2: java.lang.Object;

        $r3 = <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        $r4 = virtualinvoke $r3.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)>(r1, r2);

        specialinvoke r0.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName,java.lang.Object)>($r4, r5);

        return;
    }

    public void <init>(org.dom4j.QName, java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.QName r1;
        java.lang.Object r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 := @parameter0: org.dom4j.QName;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(org.dom4j.QName)>(r1);

        r0.<org.dom4j.bean.BeanElement: java.lang.Object bean> = r2;

        return;
    }

    public void <init>(org.dom4j.QName)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.QName r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 := @parameter0: org.dom4j.QName;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(org.dom4j.QName)>(r1);

        return;
    }

    public java.lang.Object getData()
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.Object $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 = r0.<org.dom4j.bean.BeanElement: java.lang.Object bean>;

        return $r1;
    }

    public void setData(java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.Object r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 := @parameter0: java.lang.Object;

        r0.<org.dom4j.bean.BeanElement: java.lang.Object bean> = r1;

        virtualinvoke r0.<org.dom4j.bean.BeanElement: void setAttributeList(java.util.List)>(null);

        return;
    }

    public org.dom4j.Attribute attribute(java.lang.String)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.bean.BeanAttributeList $r1;
        java.lang.String r2;
        org.dom4j.Attribute $r3;

        r0 := @this: org.dom4j.bean.BeanElement;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.bean.BeanAttributeList getBeanAttributeList()>();

        $r3 = virtualinvoke $r1.<org.dom4j.bean.BeanAttributeList: org.dom4j.Attribute attribute(java.lang.String)>(r2);

        return $r3;
    }

    public org.dom4j.Attribute attribute(org.dom4j.QName)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.bean.BeanAttributeList $r1;
        org.dom4j.QName r2;
        org.dom4j.Attribute $r3;

        r0 := @this: org.dom4j.bean.BeanElement;

        r2 := @parameter0: org.dom4j.QName;

        $r1 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.bean.BeanAttributeList getBeanAttributeList()>();

        $r3 = virtualinvoke $r1.<org.dom4j.bean.BeanAttributeList: org.dom4j.Attribute attribute(org.dom4j.QName)>(r2);

        return $r3;
    }

    public org.dom4j.Element addAttribute(java.lang.String, java.lang.String)
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.String r1, r3;
        org.dom4j.Attribute $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.Attribute attribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        interfaceinvoke $r2.<org.dom4j.Attribute: void setValue(java.lang.String)>(r3);

     label1:
        return r0;
    }

    public org.dom4j.Element addAttribute(org.dom4j.QName, java.lang.String)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.QName r1;
        java.lang.String r3;
        org.dom4j.Attribute $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 := @parameter0: org.dom4j.QName;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.Attribute attribute(org.dom4j.QName)>(r1);

        if $r2 == null goto label1;

        interfaceinvoke $r2.<org.dom4j.Attribute: void setValue(java.lang.String)>(r3);

     label1:
        return r0;
    }

    public void setAttributes(java.util.List)
    {
        java.lang.UnsupportedOperationException $r0;
        org.dom4j.bean.BeanElement r1;
        java.util.List r2;

        r1 := @this: org.dom4j.bean.BeanElement;

        r2 := @parameter0: java.util.List;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented yet.");

        throw $r0;
    }

    public void setAttributes(org.xml.sax.Attributes, org.dom4j.tree.NamespaceStack, boolean)
    {
        org.dom4j.DocumentFactory $r12;
        org.dom4j.tree.NamespaceStack r3;
        org.xml.sax.Attributes r0;
        int i0, $i1;
        java.lang.String $r1, $r8, $r9, $r10;
        boolean z0, $z1;
        org.dom4j.bean.BeanElement r2;
        java.lang.Exception $r11;
        org.dom4j.bean.BeanDocumentFactory $r13;
        java.lang.Class $r4, $r6, $r14;
        java.lang.Object $r7;
        java.lang.ClassLoader $r5;

        r2 := @this: org.dom4j.bean.BeanElement;

        r0 := @parameter0: org.xml.sax.Attributes;

        r3 := @parameter1: org.dom4j.tree.NamespaceStack;

        z0 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("class");

        if $r1 == null goto label8;

     label1:
        $r4 = <org.dom4j.bean.BeanElement: java.lang.Class class$org$dom4j$bean$BeanElement>;

        if $r4 != null goto label2;

        $r14 = staticinvoke <org.dom4j.bean.BeanElement: java.lang.Class class$(java.lang.String)>("org.dom4j.bean.BeanElement");

        <org.dom4j.bean.BeanElement: java.lang.Class class$org$dom4j$bean$BeanElement> = $r14;

        goto label3;

     label2:
        $r14 = <org.dom4j.bean.BeanElement: java.lang.Class class$org$dom4j$bean$BeanElement>;

     label3:
        $r5 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r1, 1, $r5);

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Object newInstance()>();

        virtualinvoke r2.<org.dom4j.bean.BeanElement: void setData(java.lang.Object)>($r7);

        i0 = 0;

     label4:
        $i1 = interfaceinvoke r0.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label6;

        $r8 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r9 = "class";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 != 0 goto label5;

        $r10 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        virtualinvoke r2.<org.dom4j.bean.BeanElement: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>($r8, $r10);

     label5:
        i0 = i0 + 1;

        goto label4;

     label6:
        goto label9;

     label7:
        $r11 := @caughtexception;

        $r12 = virtualinvoke r2.<org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r13 = (org.dom4j.bean.BeanDocumentFactory) $r12;

        virtualinvoke $r13.<org.dom4j.bean.BeanDocumentFactory: void handleException(java.lang.Exception)>($r11);

        goto label9;

     label8:
        specialinvoke r2.<org.dom4j.tree.DefaultElement: void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)>(r0, r3, z0);

     label9:
        return;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    protected org.dom4j.DocumentFactory getDocumentFactory()
    {
        org.dom4j.bean.BeanElement r1;
        org.dom4j.DocumentFactory $r0;

        r1 := @this: org.dom4j.bean.BeanElement;

        $r0 = <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        return $r0;
    }

    protected org.dom4j.bean.BeanAttributeList getBeanAttributeList()
    {
        org.dom4j.bean.BeanElement r0;
        java.util.List $r1;
        org.dom4j.bean.BeanAttributeList $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 = virtualinvoke r0.<org.dom4j.bean.BeanElement: java.util.List attributeList()>();

        $r2 = (org.dom4j.bean.BeanAttributeList) $r1;

        return $r2;
    }

    protected java.util.List createAttributeList()
    {
        org.dom4j.bean.BeanElement r1;
        org.dom4j.bean.BeanAttributeList $r0;

        r1 := @this: org.dom4j.bean.BeanElement;

        $r0 = new org.dom4j.bean.BeanAttributeList;

        specialinvoke $r0.<org.dom4j.bean.BeanAttributeList: void <init>(org.dom4j.bean.BeanElement)>(r1);

        return $r0;
    }

    protected java.util.List createAttributeList(int)
    {
        int i0;
        org.dom4j.bean.BeanElement r1;
        org.dom4j.bean.BeanAttributeList $r0;

        r1 := @this: org.dom4j.bean.BeanElement;

        i0 := @parameter0: int;

        $r0 = new org.dom4j.bean.BeanAttributeList;

        specialinvoke $r0.<org.dom4j.bean.BeanAttributeList: void <init>(org.dom4j.bean.BeanElement)>(r1);

        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.dom4j.DocumentFactory $r0;

        $r0 = staticinvoke <org.dom4j.bean.BeanDocumentFactory: org.dom4j.DocumentFactory getInstance()>();

        <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY> = $r0;

        return;
    }
}
