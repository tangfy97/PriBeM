public class org.codehaus.stax2.typed.TypedXMLStreamException extends javax.xml.stream.XMLStreamException
{
    private static final long serialVersionUID;
    protected java.lang.String mLexical;

    public void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.codehaus.stax2.typed.TypedXMLStreamException r0;

        r0 := @this: org.codehaus.stax2.typed.TypedXMLStreamException;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>(r1);

        r0.<org.codehaus.stax2.typed.TypedXMLStreamException: java.lang.String mLexical> = r2;

        return;
    }

    public void <init>(java.lang.String, java.lang.IllegalArgumentException)
    {
        java.lang.String r2;
        java.lang.IllegalArgumentException r1;
        org.codehaus.stax2.typed.TypedXMLStreamException r0;

        r0 := @this: org.codehaus.stax2.typed.TypedXMLStreamException;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.IllegalArgumentException;

        specialinvoke r0.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>(r1);

        r0.<org.codehaus.stax2.typed.TypedXMLStreamException: java.lang.String mLexical> = r2;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.IllegalArgumentException)
    {
        org.codehaus.stax2.typed.TypedXMLStreamException r0;
        java.lang.String r1, r3;
        java.lang.IllegalArgumentException r2;

        r0 := @this: org.codehaus.stax2.typed.TypedXMLStreamException;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.IllegalArgumentException;

        specialinvoke r0.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        r0.<org.codehaus.stax2.typed.TypedXMLStreamException: java.lang.String mLexical> = r3;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, javax.xml.stream.Location, java.lang.IllegalArgumentException)
    {
        org.codehaus.stax2.typed.TypedXMLStreamException r0;
        javax.xml.stream.Location r2;
        java.lang.String r1, r4;
        java.lang.IllegalArgumentException r3;

        r0 := @this: org.codehaus.stax2.typed.TypedXMLStreamException;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: javax.xml.stream.Location;

        r3 := @parameter3: java.lang.IllegalArgumentException;

        specialinvoke r0.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String,javax.xml.stream.Location,java.lang.Throwable)>(r1, r2, r3);

        r0.<org.codehaus.stax2.typed.TypedXMLStreamException: java.lang.String mLexical> = r4;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, javax.xml.stream.Location)
    {
        org.codehaus.stax2.typed.TypedXMLStreamException r0;
        javax.xml.stream.Location r2;
        java.lang.String r1, r3;

        r0 := @this: org.codehaus.stax2.typed.TypedXMLStreamException;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: javax.xml.stream.Location;

        specialinvoke r0.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String,javax.xml.stream.Location)>(r1, r2);

        r0.<org.codehaus.stax2.typed.TypedXMLStreamException: java.lang.String mLexical> = r3;

        return;
    }

    public java.lang.String getLexical()
    {
        java.lang.String $r1;
        org.codehaus.stax2.typed.TypedXMLStreamException r0;

        r0 := @this: org.codehaus.stax2.typed.TypedXMLStreamException;

        $r1 = r0.<org.codehaus.stax2.typed.TypedXMLStreamException: java.lang.String mLexical>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.codehaus.stax2.typed.TypedXMLStreamException: long serialVersionUID> = 1L;

        return;
    }
}
