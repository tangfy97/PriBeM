public final class com.mycila.inject.injector.AnnotatedMember extends java.lang.Object implements java.lang.reflect.Member, java.lang.reflect.AnnotatedElement
{
    private final java.lang.reflect.Member member;

    public void <init>(java.lang.reflect.Member)
    {
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.reflect.Member r1;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        r1 := @parameter0: java.lang.reflect.Member;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member> = r1;

        return;
    }

    public java.lang.reflect.Member getMember()
    {
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.reflect.Member $r1;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        return $r1;
    }

    public java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        java.lang.reflect.Member $r1;
        java.lang.'annotation'.Annotation $r4;
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.Class r2;
        java.lang.reflect.AnnotatedElement $r3;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        r2 := @parameter0: java.lang.Class;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $r3 = (java.lang.reflect.AnnotatedElement) $r1;

        $r4 = interfaceinvoke $r3.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r2);

        return $r4;
    }

    public boolean isAnnotationPresent(java.lang.Class)
    {
        java.lang.reflect.Member $r1;
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.Class r2;
        java.lang.reflect.AnnotatedElement $r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        r2 := @parameter0: java.lang.Class;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $r3 = (java.lang.reflect.AnnotatedElement) $r1;

        $z0 = interfaceinvoke $r3.<java.lang.reflect.AnnotatedElement: boolean isAnnotationPresent(java.lang.Class)>(r2);

        return $z0;
    }

    public java.lang.Class getDeclaringClass()
    {
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.Class $r2;
        java.lang.reflect.Member $r1;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $r2 = interfaceinvoke $r1.<java.lang.reflect.Member: java.lang.Class getDeclaringClass()>();

        return $r2;
    }

    public java.lang.String getName()
    {
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.String $r2;
        java.lang.reflect.Member $r1;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $r2 = interfaceinvoke $r1.<java.lang.reflect.Member: java.lang.String getName()>();

        return $r2;
    }

    public int getModifiers()
    {
        int $i0;
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.reflect.Member $r1;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $i0 = interfaceinvoke $r1.<java.lang.reflect.Member: int getModifiers()>();

        return $i0;
    }

    public boolean isSynthetic()
    {
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.reflect.Member $r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $z0 = interfaceinvoke $r1.<java.lang.reflect.Member: boolean isSynthetic()>();

        return $z0;
    }

    public java.lang.'annotation'.Annotation[] getAnnotations()
    {
        java.lang.reflect.Member $r1;
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.'annotation'.Annotation[] $r3;
        java.lang.reflect.AnnotatedElement $r2;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $r2 = (java.lang.reflect.AnnotatedElement) $r1;

        $r3 = interfaceinvoke $r2.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getAnnotations()>();

        return $r3;
    }

    public java.lang.'annotation'.Annotation[] getDeclaredAnnotations()
    {
        java.lang.reflect.Member $r1;
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.'annotation'.Annotation[] $r3;
        java.lang.reflect.AnnotatedElement $r2;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $r2 = (java.lang.reflect.AnnotatedElement) $r1;

        $r3 = interfaceinvoke $r2.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.String $r2;
        java.lang.reflect.Member $r1;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.reflect.Member $r5, $r6;
        com.mycila.inject.injector.AnnotatedMember r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (com.mycila.inject.injector.AnnotatedMember) r1;

        $r6 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $r5 = r4.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        com.mycila.inject.injector.AnnotatedMember r0;
        java.lang.reflect.Member $r1;

        r0 := @this: com.mycila.inject.injector.AnnotatedMember;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMember: java.lang.reflect.Member member>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
