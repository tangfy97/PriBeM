class org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2 r2;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object r3, r4;

        r2 := @this: org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2");

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return;
    }

    public java.lang.Object doCall(java.lang.Object)
    {
        java.lang.Integer $r27;
        boolean $z0, $z1;
        org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2 r5;
        java.lang.Object[] $r33, $r41;
        java.lang.Class $r0, r1, $r2, $r3, $r4, $r6, $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r28, $r29, $r30, $r34, $r35, $r36, $r37, $r38;
        java.lang.Object $r7, $r9, $r10, r18, $r24, $r25, $r26, $r31, $r32, $r39, $r40;

        r5 := @this: org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2;

        r18 := @parameter0: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2");

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$0> = $r19;

        goto label02;

     label01:
        $r19 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$0>;

     label02:
        r1 = $r19;

        $r2 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r20;

        goto label04;

     label03:
        $r20 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

        if $r3 != null goto label05;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand");

        $r21 = $r17;

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand> = $r17;

        goto label06;

     label05:
        $r21 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

     label06:
        $r4 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

        if $r4 != null goto label07;

        $r22 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand");

        $r23 = $r22;

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand> = $r22;

        goto label08;

     label07:
        $r23 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

     label08:
        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "classLoader");

        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r23, $r24, "loadedClasses");

        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r21, $r25, "size");

        $r27 = new java.lang.Integer;

        specialinvoke $r27.<java.lang.Integer: void <init>(int)>(0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r26, $r27);

        if $z1 == 0 goto label13;

        $r14 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

        if $r14 != null goto label09;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand");

        $r28 = $r16;

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand> = $r16;

        goto label10;

     label09:
        $r28 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

     label10:
        $r15 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

        if $r15 != null goto label11;

        $r29 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand");

        $r30 = $r29;

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand> = $r29;

        goto label12;

     label11:
        $r30 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

     label12:
        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r30, $r31, "out");

        $r33 = newarray (java.lang.Object)[1];

        $r33[0] = "No classes have been loaded";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r28, $r32, "println", $r33);

        goto label22;

     label13:
        $r6 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

        if $r6 != null goto label14;

        $r34 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand");

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand> = $r34;

        goto label15;

     label14:
        $r34 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

     label15:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "classLoader");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r34, $r7, "clearCache");

        $r8 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

        if $r8 != null goto label16;

        $r35 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand");

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand> = $r35;

        goto label17;

     label16:
        $r35 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

     label17:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r35, $r9, "verbose");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r10);

        if $z0 == 0 goto label22;

        $r11 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

        if $r11 != null goto label18;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand");

        $r36 = $r13;

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand> = $r13;

        goto label19;

     label18:
        $r36 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

     label19:
        $r12 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

        if $r12 != null goto label20;

        $r37 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand");

        $r38 = $r37;

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand> = $r37;

        goto label21;

     label20:
        $r38 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$PurgeCommand>;

     label21:
        $r39 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r38, $r39, "out");

        $r41 = newarray (java.lang.Object)[1];

        $r41[0] = "Loaded classes purged";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r36, $r40, "println", $r41);

        goto label22;

     label22:
        return null;
    }

    public java.lang.Object doCall()
    {
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2 r3;
        java.lang.Class $r0, r1, $r2, $r6, $r7;
        java.lang.Object $r5;

        r3 := @this: org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2;

        $r0 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2");

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$0>;

     label2:
        r1 = $r6;

        $r2 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = null;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "doCall", $r4);

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
