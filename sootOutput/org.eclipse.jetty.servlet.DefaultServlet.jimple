public class org.eclipse.jetty.servlet.DefaultServlet extends javax.servlet.http.HttpServlet implements org.eclipse.jetty.util.resource.ResourceFactory
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private static final long serialVersionUID;
    private javax.servlet.ServletContext _servletContext;
    private org.eclipse.jetty.server.handler.ContextHandler _contextHandler;
    private boolean _acceptRanges;
    private boolean _dirAllowed;
    private boolean _welcomeServlets;
    private boolean _welcomeExactServlets;
    private boolean _redirectWelcome;
    private boolean _gzip;
    private boolean _pathInfoOnly;
    private boolean _etags;
    private org.eclipse.jetty.util.resource.Resource _resourceBase;
    private org.eclipse.jetty.server.ResourceCache _cache;
    private org.eclipse.jetty.http.MimeTypes _mimeTypes;
    private java.lang.String[] _welcomes;
    private org.eclipse.jetty.util.resource.Resource _stylesheet;
    private boolean _useFileMappedBuffer;
    private org.eclipse.jetty.io.ByteArrayBuffer _cacheControl;
    private java.lang.String _relativeResourceBase;
    private org.eclipse.jetty.servlet.ServletHandler _servletHandler;
    private org.eclipse.jetty.servlet.ServletHolder _defaultHolder;

    public void <init>()
    {
        org.eclipse.jetty.servlet.DefaultServlet r0;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _acceptRanges> = 1;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _dirAllowed> = 1;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _welcomeServlets> = 0;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _welcomeExactServlets> = 0;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _redirectWelcome> = 0;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _gzip> = 1;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _pathInfoOnly> = 0;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _etags> = 0;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _useFileMappedBuffer> = 0;

        return;
    }

    public void init() throws javax.servlet.UnavailableException
    {
        org.eclipse.jetty.servlet.ServletHolder[] $r23;
        javax.servlet.Servlet $r33;
        org.eclipse.jetty.servlet.ServletHolder r32;
        java.lang.Exception $r67, $r71, $r76;
        java.lang.StringBuilder $r27, $r29, $r55, $r56, $r87, $r92;
        org.eclipse.jetty.http.MimeTypes $r5, $r35;
        org.eclipse.jetty.server.ResourceCache $r18, $r36, $r37, $r38, $r43, $r45, $r90;
        org.eclipse.jetty.server.Handler $r20;
        java.lang.Object[] $r31, $r44, $r58, $r74, $r82;
        org.eclipse.jetty.io.ByteArrayBuffer $r88;
        java.lang.String $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r30, $r57, $r59, $r70, $r73, $r79, $r83;
        javax.servlet.UnavailableException $r85, $r86, $r89, $r91;
        org.eclipse.jetty.util.resource.Resource $r28, $r40, $r50, $r51, $r52, $r61, $r80;
        javax.servlet.ServletContext $r1, $r2, $r41, $r63;
        java.lang.IllegalStateException $r84;
        java.net.URL $r49;
        org.eclipse.jetty.servlet.DefaultServlet r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        org.eclipse.jetty.servlet.ServletHandler $r21, $r22;
        java.lang.String[] $r7, $r8, $r66;
        int $i0, $i1, $i2, i3, i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20;
        org.eclipse.jetty.server.handler.ContextHandler $r3, $r4, $r6, $r12, $r19, $r60, $r65;
        java.lang.Object $r42;
        java.lang.Class $r48;
        org.eclipse.jetty.util.log.Logger $r24, $r26, $r46, $r54, $r68, $r72, $r75, $r77, $r81;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext getServletContext()>();

        r0.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext _servletContext> = $r1;

        $r2 = r0.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext _servletContext>;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler initContextHandler(javax.servlet.ServletContext)>($r2);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler> = $r3;

        $r4 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.http.MimeTypes getMimeTypes()>();

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.http.MimeTypes _mimeTypes> = $r5;

        $r6 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler>;

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.server.handler.ContextHandler: java.lang.String[] getWelcomeFiles()>();

        r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String[] _welcomes> = $r7;

        $r8 = r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String[] _welcomes>;

        if $r8 != null goto label01;

        $r66 = newarray (java.lang.String)[2];

        $r66[0] = "index.html";

        $r66[1] = "index.jsp";

        r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String[] _welcomes> = $r66;

     label01:
        $z0 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _acceptRanges>;

        $z1 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean getInitBoolean(java.lang.String,boolean)>("acceptRanges", $z0);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _acceptRanges> = $z1;

        $z2 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _dirAllowed>;

        $z3 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean getInitBoolean(java.lang.String,boolean)>("dirAllowed", $z2);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _dirAllowed> = $z3;

        $z4 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _redirectWelcome>;

        $z5 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean getInitBoolean(java.lang.String,boolean)>("redirectWelcome", $z4);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _redirectWelcome> = $z5;

        $z6 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _gzip>;

        $z7 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean getInitBoolean(java.lang.String,boolean)>("gzip", $z6);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _gzip> = $z7;

        $z8 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _pathInfoOnly>;

        $z9 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean getInitBoolean(java.lang.String,boolean)>("pathInfoOnly", $z8);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _pathInfoOnly> = $z9;

        $r9 = "exact";

        $r10 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getInitParameter(java.lang.String)>("welcomeServlets");

        $z10 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z10 == 0 goto label02;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _welcomeExactServlets> = 1;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _welcomeServlets> = 0;

        goto label03;

     label02:
        $z11 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _welcomeServlets>;

        $z12 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean getInitBoolean(java.lang.String,boolean)>("welcomeServlets", $z11);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _welcomeServlets> = $z12;

     label03:
        $r11 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getInitParameter(java.lang.String)>("aliases");

        if $r11 == null goto label04;

        $r65 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler>;

        $z23 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean getInitBoolean(java.lang.String,boolean)>("aliases", 0);

        virtualinvoke $r65.<org.eclipse.jetty.server.handler.ContextHandler: void setAliases(boolean)>($z23);

     label04:
        $r12 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler>;

        $z13 = virtualinvoke $r12.<org.eclipse.jetty.server.handler.ContextHandler: boolean isAliases()>();

        if $z13 != 0 goto label05;

        $z22 = staticinvoke <org.eclipse.jetty.util.resource.FileResource: boolean getCheckAliases()>();

        if $z22 != 0 goto label05;

        $r84 = new java.lang.IllegalStateException;

        specialinvoke $r84.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Alias checking disabled");

        throw $r84;

     label05:
        if $z13 == 0 goto label06;

        $r63 = r0.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext _servletContext>;

        interfaceinvoke $r63.<javax.servlet.ServletContext: void log(java.lang.String)>("Aliases are enabled! Security constraints may be bypassed!!!");

     label06:
        $z14 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _useFileMappedBuffer>;

        $z15 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean getInitBoolean(java.lang.String,boolean)>("useFileMappedBuffer", $z14);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _useFileMappedBuffer> = $z15;

        $r13 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getInitParameter(java.lang.String)>("relativeResourceBase");

        r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String _relativeResourceBase> = $r13;

        $r14 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getInitParameter(java.lang.String)>("resourceBase");

        if $r14 == null goto label10;

        $r59 = r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String _relativeResourceBase>;

        if $r59 == null goto label07;

        $r85 = new javax.servlet.UnavailableException;

        specialinvoke $r85.<javax.servlet.UnavailableException: void <init>(java.lang.String)>("resourceBase & relativeResourceBase");

        throw $r85;

     label07:
        $r60 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler>;

        $r61 = virtualinvoke $r60.<org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r14);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _resourceBase> = $r61;

     label08:
        goto label10;

     label09:
        $r76 := @caughtexception;

        $r77 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r77.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r76);

        $r86 = new javax.servlet.UnavailableException;

        $r79 = virtualinvoke $r76.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r86.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r79);

        throw $r86;

     label10:
        $r15 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getInitParameter(java.lang.String)>("stylesheet");

     label11:
        if $r15 == null goto label12;

        $r51 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r15);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _stylesheet> = $r51;

        $r52 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _stylesheet>;

        $z21 = virtualinvoke $r52.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z21 != 0 goto label12;

        $r54 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = newarray (java.lang.Object)[0];

        interfaceinvoke $r54.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r57, $r58);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _stylesheet> = null;

     label12:
        $r80 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _stylesheet>;

        if $r80 != null goto label13;

        $r48 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r49 = virtualinvoke $r48.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/jetty-dir.css");

        $r50 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.net.URL)>($r49);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _stylesheet> = $r50;

     label13:
        goto label15;

     label14:
        $r71 := @caughtexception;

        $r72 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $r73 = virtualinvoke $r71.<java.lang.Exception: java.lang.String toString()>();

        $r74 = newarray (java.lang.Object)[0];

        interfaceinvoke $r72.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r73, $r74);

        $r75 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r75.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r71);

     label15:
        $r16 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getInitParameter(java.lang.String)>("cacheControl");

        if $r16 == null goto label16;

        $r88 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r88.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>($r16);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl> = $r88;

     label16:
        $r17 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getInitParameter(java.lang.String)>("resourceCache");

        $i6 = (int) -2;

        $i0 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: int getInitInt(java.lang.String,int)>("maxCacheSize", $i6);

        $i8 = (int) -2;

        $i1 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: int getInitInt(java.lang.String,int)>("maxCachedFileSize", $i8);

        $i10 = (int) -2;

        $i2 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: int getInitInt(java.lang.String,int)>("maxCachedFiles", $i10);

        if $r17 == null goto label21;

        $i12 = (int) -1;

        if $i0 != $i12 goto label17;

        $i14 = (int) -2;

        if $i1 != $i14 goto label17;

        $i16 = (int) -2;

        if $i2 == $i16 goto label18;

     label17:
        $r81 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $r82 = newarray (java.lang.Object)[0];

        interfaceinvoke $r81.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("ignoring resource cache configuration, using resourceCache attribute", $r82);

     label18:
        $r83 = r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String _relativeResourceBase>;

        if $r83 != null goto label19;

        $r40 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _resourceBase>;

        if $r40 == null goto label20;

     label19:
        $r89 = new javax.servlet.UnavailableException;

        specialinvoke $r89.<javax.servlet.UnavailableException: void <init>(java.lang.String)>("resourceCache specified with resource bases");

        throw $r89;

     label20:
        $r41 = r0.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext _servletContext>;

        $r42 = interfaceinvoke $r41.<javax.servlet.ServletContext: java.lang.Object getAttribute(java.lang.String)>($r17);

        $r43 = (org.eclipse.jetty.server.ResourceCache) $r42;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache> = $r43;

        $r46 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $r44 = newarray (java.lang.Object)[2];

        $r44[0] = $r17;

        $r45 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        $r44[1] = $r45;

        interfaceinvoke $r46.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Cache {}={}", $r44);

     label21:
        $z16 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _etags>;

        $z17 = specialinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean getInitBoolean(java.lang.String,boolean)>("etags", $z16);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _etags> = $z17;

     label22:
        $r18 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        if $r18 != null goto label25;

        if $i2 <= 0 goto label25;

        $r90 = new org.eclipse.jetty.server.ResourceCache;

        $r35 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.http.MimeTypes _mimeTypes>;

        $z20 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _useFileMappedBuffer>;

        $z19 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _etags>;

        specialinvoke $r90.<org.eclipse.jetty.server.ResourceCache: void <init>(org.eclipse.jetty.server.ResourceCache,org.eclipse.jetty.util.resource.ResourceFactory,org.eclipse.jetty.http.MimeTypes,boolean,boolean)>(null, r0, $r35, $z20, $z19);

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache> = $r90;

        if $i0 <= 0 goto label23;

        $r38 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        virtualinvoke $r38.<org.eclipse.jetty.server.ResourceCache: void setMaxCacheSize(int)>($i0);

     label23:
        $i18 = (int) -1;

        if $i1 < $i18 goto label24;

        $r37 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        virtualinvoke $r37.<org.eclipse.jetty.server.ResourceCache: void setMaxCachedFileSize(int)>($i1);

     label24:
        $i20 = (int) -1;

        if $i2 < $i20 goto label25;

        $r36 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        virtualinvoke $r36.<org.eclipse.jetty.server.ResourceCache: void setMaxCachedFiles(int)>($i2);

     label25:
        goto label27;

     label26:
        $r67 := @caughtexception;

        $r68 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r68.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r67);

        $r91 = new javax.servlet.UnavailableException;

        $r70 = virtualinvoke $r67.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r91.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r70);

        throw $r91;

     label27:
        $r19 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler>;

        $r20 = virtualinvoke $r19.<org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.server.Handler getChildHandlerByClass(java.lang.Class)>(class "Lorg/eclipse/jetty/servlet/ServletHandler;");

        $r21 = (org.eclipse.jetty.servlet.ServletHandler) $r20;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.servlet.ServletHandler _servletHandler> = $r21;

        $r22 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $r23 = virtualinvoke $r22.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] getServlets()>();

        i3 = lengthof $r23;

        i4 = 0;

     label28:
        if i4 >= i3 goto label30;

        r32 = $r23[i4];

        $r33 = virtualinvoke r32.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet getServletInstance()>();

        if $r33 != r0 goto label29;

        r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.servlet.ServletHolder _defaultHolder> = r32;

     label29:
        i4 = i4 + 1;

        goto label28;

     label30:
        $r24 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $z18 = interfaceinvoke $r24.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z18 == 0 goto label31;

        $r26 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resource base = ");

        $r28 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _resourceBase>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = newarray (java.lang.Object)[0];

        interfaceinvoke $r26.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r30, $r31);

     label31:
        return;

        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label11 to label13 with label14;
        catch java.lang.Exception from label22 to label25 with label26;
    }

    protected org.eclipse.jetty.server.handler.ContextHandler initContextHandler(javax.servlet.ServletContext)
    {
        org.eclipse.jetty.servlet.DefaultServlet r19;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r0, $r1, $r17;
        java.lang.String $r10, $r14, $r16;
        boolean $z0;
        org.eclipse.jetty.server.handler.ContextHandler $r2, $r18;
        java.lang.IllegalArgumentException $r4;
        javax.servlet.ServletContext r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r11, $r12, $r15;
        java.lang.Class $r9, $r13;

        r19 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r3 := @parameter0: javax.servlet.ServletContext;

        $r0 = staticinvoke <org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.server.handler.ContextHandler$Context getCurrentContext()>();

        if $r0 != null goto label2;

        $z0 = r3 instanceof org.eclipse.jetty.server.handler.ContextHandler$Context;

        if $z0 == 0 goto label1;

        $r17 = (org.eclipse.jetty.server.handler.ContextHandler$Context) r3;

        $r18 = virtualinvoke $r17.<org.eclipse.jetty.server.handler.ContextHandler$Context: org.eclipse.jetty.server.handler.ContextHandler getContextHandler()>();

        return $r18;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The servletContext ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not ");

        $r13 = class "Lorg/eclipse/jetty/server/handler/ContextHandler$Context;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r4;

     label2:
        $r1 = staticinvoke <org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.server.handler.ContextHandler$Context getCurrentContext()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.handler.ContextHandler$Context: org.eclipse.jetty.server.handler.ContextHandler getContextHandler()>();

        return $r2;
    }

    public java.lang.String getInitParameter(java.lang.String)
    {
        org.eclipse.jetty.servlet.DefaultServlet r0;
        javax.servlet.ServletContext $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String r4, $r6, $r7, r8;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r4 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext getServletContext()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.eclipse.jetty.servlet.Default.");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r1.<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>($r6);

        r8 = $r7;

        if $r7 != null goto label1;

        r8 = specialinvoke r0.<javax.servlet.http.HttpServlet: java.lang.String getInitParameter(java.lang.String)>(r4);

     label1:
        return r8;
    }

    private boolean getInitBoolean(java.lang.String, boolean)
    {
        org.eclipse.jetty.servlet.DefaultServlet r0;
        int $i0;
        java.lang.String r1, $r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getInitParameter(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return z0;

     label2:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("t");

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("T");

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("y");

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("Y");

        if $z4 != 0 goto label3;

        $z5 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("1");

        if $z5 == 0 goto label4;

     label3:
        $z6 = 1;

        goto label5;

     label4:
        $z6 = 0;

     label5:
        return $z6;
    }

    private int getInitInt(java.lang.String, int)
    {
        int i0, $i1, $i2;
        java.lang.String r1, $r2, r3;
        org.eclipse.jetty.servlet.DefaultServlet r0;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getInitParameter(java.lang.String)>(r1);

        r3 = $r2;

        if $r2 != null goto label1;

        r3 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getInitParameter(java.lang.String)>(r1);

     label1:
        if r3 == null goto label2;

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        return $i2;

     label2:
        return i0;
    }

    public org.eclipse.jetty.util.resource.Resource getResource(java.lang.String)
    {
        java.lang.Object[] $r14;
        java.net.URL $r4;
        org.eclipse.jetty.servlet.DefaultServlet r0;
        java.lang.String $r1, $r13, $r16, r19;
        boolean $z0, $z1, $z2;
        java.io.IOException $r17;
        org.eclipse.jetty.server.handler.ContextHandler $r5;
        org.eclipse.jetty.util.resource.Resource $r2, $r15, r20;
        javax.servlet.ServletContext $r3;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12;
        org.eclipse.jetty.util.log.Logger $r6, $r8, $r18;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r19 := @parameter0: java.lang.String;

        r20 = null;

        $r1 = r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String _relativeResourceBase>;

        if $r1 == null goto label1;

        $r16 = r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String _relativeResourceBase>;

        r19 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r16, r19);

     label1:
        $r2 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _resourceBase>;

        if $r2 == null goto label2;

        $r15 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _resourceBase>;

        r20 = virtualinvoke $r15.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>(r19);

        goto label3;

     label2:
        $r3 = r0.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext _servletContext>;

        $r4 = interfaceinvoke $r3.<javax.servlet.ServletContext: java.net.URL getResource(java.lang.String)>(r19);

        $r5 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler>;

        r20 = virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.util.resource.Resource newResource(java.net.URL)>($r4);

     label3:
        $r6 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label4;

        $r8 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = newarray (java.lang.Object)[0];

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r13, $r14);

     label4:
        goto label6;

     label5:
        $r17 := @caughtexception;

        $r18 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r18.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r17);

     label6:
        if r20 == null goto label7;

        $z2 = virtualinvoke r20.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z2 != 0 goto label8;

     label7:
        $z1 = virtualinvoke r19.<java.lang.String: boolean endsWith(java.lang.String)>("/jetty-dir.css");

        if $z1 == 0 goto label8;

        r20 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _stylesheet>;

     label8:
        return r20;

        catch java.io.IOException from label1 to label4 with label5;
    }

    protected void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        java.util.Enumeration $r4, r77;
        javax.servlet.RequestDispatcher $r20;
        java.lang.StringBuilder $r7, $r8, $r9, $r26, $r30, $r31, $r32, $r45, $r46, $r47, $r48, $r49, $r51, $r53, $r54, $r55, $r56, $r62, $r63, $r64;
        org.eclipse.jetty.http.MimeTypes $r15, $r39;
        java.lang.Object[] $r18, $r58;
        java.lang.StringBuffer $r11;
        org.eclipse.jetty.util.resource.Resource r84, $r86, $r87;
        javax.servlet.ServletContext $r22, $r27, $r36, $r91;
        org.eclipse.jetty.servlet.DefaultServlet r3;
        org.eclipse.jetty.io.Buffer $r17, $r41;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Boolean $r2, r78;
        java.lang.Object $r1, $r35, $r70, $r71;
        org.eclipse.jetty.util.log.Logger $r19, $r50, $r74, $r88;
        org.eclipse.jetty.http.HttpContent $r61, $r68, r85;
        org.eclipse.jetty.server.ResourceCache $r59, $r60, $r66, $r67;
        java.lang.Throwable $r72, $r76;
        javax.servlet.http.HttpServletRequest r0;
        java.lang.String $r10, $r12, $r13, $r16, $r21, $r23, $r24, $r25, $r28, $r29, $r33, $r34, $r37, $r40, $r43, $r44, $r52, $r57, $r65, $r69, $r75, r79, r80, $r81, $r82, $r83, $r89, r90, $r92, $r93, $r94, $r95, $r96;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, z22, $z23, $z24, z25, z26;
        java.io.FileNotFoundException $r6;
        org.eclipse.jetty.http.HttpContent$ResourceAsHttpContent $r14, $r38;
        javax.servlet.http.HttpServletResponse r5;
        org.eclipse.jetty.server.handler.ContextHandler $r42;
        java.lang.IllegalArgumentException $r73;

        r3 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r5 := @parameter1: javax.servlet.http.HttpServletResponse;

        r77 = null;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.include.request_uri");

        if $r1 == null goto label01;

        $z21 = 1;

        goto label02;

     label01:
        $z21 = 0;

     label02:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z21);

        r78 = $r2;

        if $r2 == null goto label03;

        $z19 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z19 == 0 goto label03;

        $r70 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.include.servlet_path");

        r79 = (java.lang.String) $r70;

        $r71 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.include.path_info");

        r80 = (java.lang.String) $r71;

        if r79 != null goto label06;

        r79 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>();

        r80 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        goto label06;

     label03:
        r78 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $z0 = r3.<org.eclipse.jetty.servlet.DefaultServlet: boolean _pathInfoOnly>;

        if $z0 == 0 goto label04;

        $r81 = "/";

        goto label05;

     label04:
        $r81 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>();

     label05:
        r79 = $r81;

        r80 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        $r4 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>("Range");

        r77 = $r4;

        $z1 = specialinvoke r3.<org.eclipse.jetty.servlet.DefaultServlet: boolean hasDefinedRange(java.util.Enumeration)>($r4);

        if $z1 != 0 goto label06;

        r77 = null;

     label06:
        $r82 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>(r79, r80);

        if r80 != null goto label07;

        $r83 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>();

        goto label08;

     label07:
        $r83 = r80;

     label08:
        $z2 = virtualinvoke $r83.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        r84 = null;

        r85 = null;

     label09:
        z22 = 0;

        z26 = 0;

        z25 = 0;

        $z3 = virtualinvoke r78.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 != 0 goto label14;

        $z16 = r3.<org.eclipse.jetty.servlet.DefaultServlet: boolean _gzip>;

        if $z16 == 0 goto label14;

        if r77 != null goto label14;

        if $z2 != 0 goto label14;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".gz");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        $r66 = r3.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        if $r66 != null goto label10;

        r84 = virtualinvoke r3.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource getResource(java.lang.String)>($r65);

        goto label13;

     label10:
        $r67 = r3.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        $r68 = virtualinvoke $r67.<org.eclipse.jetty.server.ResourceCache: org.eclipse.jetty.http.HttpContent lookup(java.lang.String)>($r65);

        r85 = $r68;

        if $r68 != null goto label11;

        $r86 = null;

        goto label12;

     label11:
        $r86 = interfaceinvoke $r68.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.util.resource.Resource getResource()>();

     label12:
        r84 = $r86;

     label13:
        if r84 == null goto label14;

        $z17 = virtualinvoke r84.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z17 == 0 goto label14;

        $z18 = virtualinvoke r84.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z18 != 0 goto label14;

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Vary", "Accept-Encoding");

        $r69 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Accept-Encoding");

        if $r69 == null goto label14;

        $i9 = virtualinvoke $r69.<java.lang.String: int indexOf(java.lang.String)>("gzip");

        if $i9 < 0 goto label14;

        z22 = 1;

        z26 = 1;

        z25 = 1;

     label14:
        if z26 != 0 goto label18;

        $r59 = r3.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        if $r59 != null goto label15;

        r84 = virtualinvoke r3.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource getResource(java.lang.String)>($r82);

        goto label18;

     label15:
        $r60 = r3.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        $r61 = virtualinvoke $r60.<org.eclipse.jetty.server.ResourceCache: org.eclipse.jetty.http.HttpContent lookup(java.lang.String)>($r82);

        r85 = $r61;

        if $r61 != null goto label16;

        $r87 = null;

        goto label17;

     label16:
        $r87 = interfaceinvoke $r61.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.util.resource.Resource getResource()>();

     label17:
        r84 = $r87;

     label18:
        $r88 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $z23 = interfaceinvoke $r88.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z23 == 0 goto label21;

        $r50 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uri=");

        $r52 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource=");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r84);

        if r85 == null goto label19;

        $r89 = " content";

        goto label20;

     label19:
        $r89 = "";

     label20:
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = newarray (java.lang.Object)[0];

        interfaceinvoke $r50.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r57, $r58);

     label21:
        if r84 == null goto label22;

        $z5 = virtualinvoke r84.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z5 != 0 goto label24;

     label22:
        $z4 = virtualinvoke r78.<java.lang.Boolean: boolean booleanValue()>();

        if $z4 == 0 goto label23;

        $r6 = new java.io.FileNotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label23:
        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendError(int)>(404);

        goto label48;

     label24:
        $z6 = virtualinvoke r84.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z6 != 0 goto label30;

        if $z2 == 0 goto label26;

        $r42 = r3.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler>;

        $z15 = virtualinvoke $r42.<org.eclipse.jetty.server.handler.ContextHandler: boolean isAliases()>();

        if $z15 == 0 goto label26;

        $i5 = virtualinvoke $r82.<java.lang.String: int length()>();

        if $i5 <= 1 goto label26;

        $r43 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        $i6 = virtualinvoke $r82.<java.lang.String: int length()>();

        $i7 = $i6 - 1;

        $r44 = virtualinvoke $r82.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

        r90 = $r44;

        if $r43 == null goto label25;

        $i8 = virtualinvoke $r43.<java.lang.String: int length()>();

        if $i8 == 0 goto label25;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        r90 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

     label25:
        $r91 = r3.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext _servletContext>;

        $r92 = interfaceinvoke $r91.<javax.servlet.ServletContext: java.lang.String getContextPath()>();

        $r93 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r92, r90);

        $r94 = interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: java.lang.String encodeRedirectURL(java.lang.String)>($r93);

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)>($r94);

        goto label48;

     label26:
        if r85 != null goto label27;

        $r38 = new org.eclipse.jetty.http.HttpContent$ResourceAsHttpContent;

        $r39 = r3.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.http.MimeTypes _mimeTypes>;

        $r40 = virtualinvoke r84.<java.lang.Object: java.lang.String toString()>();

        $r41 = virtualinvoke $r39.<org.eclipse.jetty.http.MimeTypes: org.eclipse.jetty.io.Buffer getMimeByExtension(java.lang.String)>($r40);

        $i4 = interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: int getBufferSize()>();

        $z14 = r3.<org.eclipse.jetty.servlet.DefaultServlet: boolean _etags>;

        specialinvoke $r38.<org.eclipse.jetty.http.HttpContent$ResourceAsHttpContent: void <init>(org.eclipse.jetty.util.resource.Resource,org.eclipse.jetty.io.Buffer,int,boolean)>(r84, $r41, $i4, $z14);

        r85 = $r38;

     label27:
        $z12 = virtualinvoke r78.<java.lang.Boolean: boolean booleanValue()>();

        if $z12 != 0 goto label28;

        $z13 = virtualinvoke r3.<org.eclipse.jetty.servlet.DefaultServlet: boolean passConditionalHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.eclipse.jetty.util.resource.Resource,org.eclipse.jetty.http.HttpContent)>(r0, r5, r84, r85);

        if $z13 == 0 goto label48;

     label28:
        if z25 == 0 goto label29;

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Content-Encoding", "gzip");

        $r36 = r3.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext _servletContext>;

        $r37 = interfaceinvoke $r36.<javax.servlet.ServletContext: java.lang.String getMimeType(java.lang.String)>($r82);

        if $r37 == null goto label29;

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r37);

     label29:
        $z24 = virtualinvoke r78.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r3.<org.eclipse.jetty.servlet.DefaultServlet: void sendData(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean,org.eclipse.jetty.util.resource.Resource,org.eclipse.jetty.http.HttpContent,java.util.Enumeration)>(r0, r5, $z24, r84, r85, r77);

        goto label48;

     label30:
        if $z2 == 0 goto label31;

        $i2 = virtualinvoke $r82.<java.lang.String: int length()>();

        if $i2 != 1 goto label40;

        $r35 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.jetty.server.nullPathInfo");

        if $r35 == null goto label40;

     label31:
        $r11 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        entermonitor $r11;

     label32:
        $i0 = virtualinvoke $r11.<java.lang.StringBuffer: int lastIndexOf(java.lang.String)>(";");

        if $i0 >= 0 goto label33;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        goto label34;

     label33:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>($i0, 47);

     label34:
        $r12 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        if $r12 == null goto label35;

        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i1 == 0 goto label35;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

     label35:
        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setContentLength(int)>(0);

        $r95 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r96 = interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: java.lang.String encodeRedirectURL(java.lang.String)>($r95);

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)>($r96);

        exitmonitor $r11;

     label36:
        goto label39;

     label37:
        $r76 := @caughtexception;

        exitmonitor $r11;

     label38:
        throw $r76;

     label39:
        goto label48;

     label40:
        $r13 = specialinvoke r3.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String getWelcomeFile(java.lang.String)>($r82);

        if null == $r13 goto label46;

        $r19 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = $r13;

        interfaceinvoke $r19.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("welcome={}", $r18);

        $z10 = r3.<org.eclipse.jetty.servlet.DefaultServlet: boolean _redirectWelcome>;

        if $z10 == 0 goto label43;

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setContentLength(int)>(0);

        $r21 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        if $r21 == null goto label41;

        $i3 = virtualinvoke $r21.<java.lang.String: int length()>();

        if $i3 == 0 goto label41;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = r3.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext _servletContext>;

        $r28 = interfaceinvoke $r27.<javax.servlet.ServletContext: java.lang.String getContextPath()>();

        $r29 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r28, $r13);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: java.lang.String encodeRedirectURL(java.lang.String)>($r33);

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)>($r34);

        goto label42;

     label41:
        $r22 = r3.<org.eclipse.jetty.servlet.DefaultServlet: javax.servlet.ServletContext _servletContext>;

        $r23 = interfaceinvoke $r22.<javax.servlet.ServletContext: java.lang.String getContextPath()>();

        $r24 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r23, $r13);

        $r25 = interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: java.lang.String encodeRedirectURL(java.lang.String)>($r24);

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)>($r25);

     label42:
        goto label48;

     label43:
        $r20 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)>($r13);

        if $r20 == null goto label45;

        $z11 = virtualinvoke r78.<java.lang.Boolean: boolean booleanValue()>();

        if $z11 == 0 goto label44;

        interfaceinvoke $r20.<javax.servlet.RequestDispatcher: void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r5);

        goto label45;

     label44:
        interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.jetty.server.welcome", $r13);

        interfaceinvoke $r20.<javax.servlet.RequestDispatcher: void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r5);

     label45:
        goto label48;

     label46:
        $r14 = new org.eclipse.jetty.http.HttpContent$ResourceAsHttpContent;

        $r15 = r3.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.http.MimeTypes _mimeTypes>;

        $r16 = virtualinvoke r84.<java.lang.Object: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<org.eclipse.jetty.http.MimeTypes: org.eclipse.jetty.io.Buffer getMimeByExtension(java.lang.String)>($r16);

        $z7 = r3.<org.eclipse.jetty.servlet.DefaultServlet: boolean _etags>;

        specialinvoke $r14.<org.eclipse.jetty.http.HttpContent$ResourceAsHttpContent: void <init>(org.eclipse.jetty.util.resource.Resource,org.eclipse.jetty.io.Buffer,boolean)>(r84, $r17, $z7);

        r85 = $r14;

        $z8 = virtualinvoke r78.<java.lang.Boolean: boolean booleanValue()>();

        if $z8 != 0 goto label47;

        $z9 = virtualinvoke r3.<org.eclipse.jetty.servlet.DefaultServlet: boolean passConditionalHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.eclipse.jetty.util.resource.Resource,org.eclipse.jetty.http.HttpContent)>(r0, r5, r84, $r14);

        if $z9 == 0 goto label48;

     label47:
        virtualinvoke r3.<org.eclipse.jetty.servlet.DefaultServlet: void sendDirectory(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.eclipse.jetty.util.resource.Resource,java.lang.String)>(r0, r5, r84, $r82);

     label48:
        if r85 == null goto label49;

        interfaceinvoke r85.<org.eclipse.jetty.http.HttpContent: void release()>();

        goto label57;

     label49:
        if r84 == null goto label57;

        virtualinvoke r84.<org.eclipse.jetty.util.resource.Resource: void release()>();

        goto label57;

     label50:
        $r73 := @caughtexception;

        $r74 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r74.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r73);

        $z20 = interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z20 != 0 goto label51;

        $r75 = virtualinvoke $r73.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(500, $r75);

     label51:
        if r85 == null goto label52;

        interfaceinvoke r85.<org.eclipse.jetty.http.HttpContent: void release()>();

        goto label57;

     label52:
        if r84 == null goto label57;

        virtualinvoke r84.<org.eclipse.jetty.util.resource.Resource: void release()>();

        goto label57;

     label53:
        $r72 := @caughtexception;

     label54:
        if r85 == null goto label55;

        interfaceinvoke r85.<org.eclipse.jetty.http.HttpContent: void release()>();

        goto label56;

     label55:
        if r84 == null goto label56;

        virtualinvoke r84.<org.eclipse.jetty.util.resource.Resource: void release()>();

     label56:
        throw $r72;

     label57:
        return;

        catch java.lang.Throwable from label32 to label36 with label37;
        catch java.lang.Throwable from label37 to label38 with label37;
        catch java.lang.IllegalArgumentException from label09 to label48 with label50;
        catch java.lang.Throwable from label09 to label48 with label53;
        catch java.lang.Throwable from label50 to label51 with label53;
        catch java.lang.Throwable from label53 to label54 with label53;
    }

    private boolean hasDefinedRange(java.util.Enumeration)
    {
        java.util.Enumeration r0;
        org.eclipse.jetty.servlet.DefaultServlet r1;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r0 := @parameter0: java.util.Enumeration;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletResponse r2;
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.servlet.DefaultServlet r0;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    protected void doTrace(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletResponse r0;
        javax.servlet.http.HttpServletRequest r2;
        org.eclipse.jetty.servlet.DefaultServlet r1;

        r1 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r2 := @parameter0: javax.servlet.http.HttpServletRequest;

        r0 := @parameter1: javax.servlet.http.HttpServletResponse;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void sendError(int)>(405);

        return;
    }

    protected void doOptions(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletResponse r0;
        javax.servlet.http.HttpServletRequest r2;
        org.eclipse.jetty.servlet.DefaultServlet r1;

        r1 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r2 := @parameter0: javax.servlet.http.HttpServletRequest;

        r0 := @parameter1: javax.servlet.http.HttpServletResponse;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Allow", "GET,HEAD,POST,OPTIONS");

        return;
    }

    private java.lang.String getWelcomeFile(java.lang.String) throws java.net.MalformedURLException, java.io.IOException
    {
        java.lang.String[] $r1, $r2, $r4, $r13;
        org.eclipse.jetty.servlet.DefaultServlet r0;
        int $i0, i1;
        java.lang.String r3, $r5, $r6, $r14, r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jetty.http.PathMap$Entry $r9;
        org.eclipse.jetty.servlet.ServletHandler $r8;
        org.eclipse.jetty.servlet.ServletHolder $r11;
        org.eclipse.jetty.util.resource.Resource $r7;
        java.lang.Object $r10, $r12;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String[] _welcomes>;

        if $r1 != null goto label1;

        return null;

     label1:
        r15 = null;

        i1 = 0;

     label2:
        $r2 = r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String[] _welcomes>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label7;

        $r4 = r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String[] _welcomes>;

        $r5 = $r4[i1];

        $r6 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>(r3, $r5);

        $r7 = virtualinvoke r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource getResource(java.lang.String)>($r6);

        if $r7 == null goto label3;

        $z5 = virtualinvoke $r7.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z5 == 0 goto label3;

        $r13 = r0.<org.eclipse.jetty.servlet.DefaultServlet: java.lang.String[] _welcomes>;

        $r14 = $r13[i1];

        return $r14;

     label3:
        $z0 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _welcomeServlets>;

        if $z0 != 0 goto label4;

        $z4 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _welcomeExactServlets>;

        if $z4 == 0 goto label6;

     label4:
        if r15 != null goto label6;

        $r8 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $r9 = virtualinvoke $r8.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.http.PathMap$Entry getHolderEntry(java.lang.String)>($r6);

        if $r9 == null goto label6;

        $r10 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.servlet.ServletHolder _defaultHolder>;

        if $r10 == $r11 goto label6;

        $z1 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _welcomeServlets>;

        if $z1 != 0 goto label5;

        $z2 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _welcomeExactServlets>;

        if $z2 == 0 goto label6;

        $r12 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z3 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label6;

     label5:
        r15 = $r6;

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        return r15;
    }

    protected boolean passConditionalHeaders(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, org.eclipse.jetty.http.HttpContent) throws java.io.IOException
    {
        byte $b3, $b7, $b9, $b11;
        org.eclipse.jetty.http.HttpContent r6;
        org.eclipse.jetty.server.Response $r5, $r21, $r25, $r29, $r32;
        long $l0, $l1, $l2, $l4, $l5, $l6, $l8, $l10;
        javax.servlet.http.HttpServletRequest r0;
        java.lang.String $r1, $r8, $r9, $r10, $r13, $r16, $r18, $r20, $r35, $r37, $r39, $r40;
        org.eclipse.jetty.util.resource.Resource r3;
        org.eclipse.jetty.servlet.DefaultServlet r2;
        org.eclipse.jetty.io.Buffer $r7, $r11, $r12, $r15, $r19, $r23, $r24, $r27, $r28, $r31, $r33, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z12;
        org.eclipse.jetty.util.QuotedStringTokenizer $r41, $r42;
        int $i12, $i13;
        org.eclipse.jetty.http.HttpFields $r22, $r26, $r30;
        javax.servlet.http.HttpServletResponse r4;
        java.lang.IllegalArgumentException $r38;
        java.lang.Object $r14;

        r2 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r4 := @parameter1: javax.servlet.http.HttpServletResponse;

        r3 := @parameter2: org.eclipse.jetty.util.resource.Resource;

        r6 := @parameter3: org.eclipse.jetty.http.HttpContent;

     label01:
        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $z0 != 0 goto label21;

        $z1 = r2.<org.eclipse.jetty.servlet.DefaultServlet: boolean _etags>;

        if $z1 == 0 goto label15;

        $r9 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("If-Match");

        if $r9 == null goto label06;

        z10 = 0;

        z12 = 0;

        z11 = 0;

        if r6 == null goto label04;

        $r33 = interfaceinvoke r6.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getETag()>();

        if $r33 == null goto label04;

        $r41 = new org.eclipse.jetty.util.QuotedStringTokenizer;

        specialinvoke $r41.<org.eclipse.jetty.util.QuotedStringTokenizer: void <init>(java.lang.String,java.lang.String,boolean,boolean)>($r9, ", ", 0, 1);

     label02:
        if z11 != 0 goto label04;

        $z7 = virtualinvoke $r41.<org.eclipse.jetty.util.QuotedStringTokenizer: boolean hasMoreTokens()>();

        if $z7 == 0 goto label04;

        $r35 = virtualinvoke $r41.<org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String nextToken()>();

        $r36 = interfaceinvoke r6.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getETag()>();

        $r37 = virtualinvoke $r36.<java.lang.Object: java.lang.String toString()>();

        $z8 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z8 == 0 goto label03;

        z10 = 1;

        z12 = 1;

        z11 = 1;

     label03:
        goto label02;

     label04:
        if z12 != 0 goto label06;

        $r32 = staticinvoke <org.eclipse.jetty.server.Response: org.eclipse.jetty.server.Response getResponse(javax.servlet.http.HttpServletResponse)>(r4);

        virtualinvoke $r32.<org.eclipse.jetty.server.Response: void reset(boolean)>(1);

        virtualinvoke $r32.<org.eclipse.jetty.server.Response: void setStatus(int)>(412);

     label05:
        return 0;

     label06:
        $r10 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("If-None-Match");

        if $r10 == null goto label15;

        if r6 == null goto label15;

        $r11 = interfaceinvoke r6.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getETag()>();

        if $r11 == null goto label15;

        $r12 = interfaceinvoke r6.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getETag()>();

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        $r14 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("o.e.j.s.GzipFilter.ETag");

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 == 0 goto label08;

        $r29 = staticinvoke <org.eclipse.jetty.server.Response: org.eclipse.jetty.server.Response getResponse(javax.servlet.http.HttpServletResponse)>(r4);

        virtualinvoke $r29.<org.eclipse.jetty.server.Response: void reset(boolean)>(1);

        virtualinvoke $r29.<org.eclipse.jetty.server.Response: void setStatus(int)>(304);

        $r30 = virtualinvoke $r29.<org.eclipse.jetty.server.Response: org.eclipse.jetty.http.HttpFields getHttpFields()>();

        $r31 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer ETAG_BUFFER>;

        virtualinvoke $r30.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,java.lang.String)>($r31, $r10);

     label07:
        return 0;

     label08:
        $r15 = interfaceinvoke r6.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getETag()>();

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        $z4 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z4 == 0 goto label10;

        $r25 = staticinvoke <org.eclipse.jetty.server.Response: org.eclipse.jetty.server.Response getResponse(javax.servlet.http.HttpServletResponse)>(r4);

        virtualinvoke $r25.<org.eclipse.jetty.server.Response: void reset(boolean)>(1);

        virtualinvoke $r25.<org.eclipse.jetty.server.Response: void setStatus(int)>(304);

        $r26 = virtualinvoke $r25.<org.eclipse.jetty.server.Response: org.eclipse.jetty.http.HttpFields getHttpFields()>();

        $r27 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer ETAG_BUFFER>;

        $r28 = interfaceinvoke r6.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getETag()>();

        virtualinvoke $r26.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r27, $r28);

     label09:
        return 0;

     label10:
        $r42 = new org.eclipse.jetty.util.QuotedStringTokenizer;

        specialinvoke $r42.<org.eclipse.jetty.util.QuotedStringTokenizer: void <init>(java.lang.String,java.lang.String,boolean,boolean)>($r10, ", ", 0, 1);

     label11:
        $z5 = virtualinvoke $r42.<org.eclipse.jetty.util.QuotedStringTokenizer: boolean hasMoreTokens()>();

        if $z5 == 0 goto label14;

        $r18 = virtualinvoke $r42.<org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String nextToken()>();

        $r19 = interfaceinvoke r6.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getETag()>();

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        $z6 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z6 == 0 goto label13;

        $r21 = staticinvoke <org.eclipse.jetty.server.Response: org.eclipse.jetty.server.Response getResponse(javax.servlet.http.HttpServletResponse)>(r4);

        virtualinvoke $r21.<org.eclipse.jetty.server.Response: void reset(boolean)>(1);

        virtualinvoke $r21.<org.eclipse.jetty.server.Response: void setStatus(int)>(304);

        $r22 = virtualinvoke $r21.<org.eclipse.jetty.server.Response: org.eclipse.jetty.http.HttpFields getHttpFields()>();

        $r23 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer ETAG_BUFFER>;

        $r24 = interfaceinvoke r6.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getETag()>();

        virtualinvoke $r22.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r23, $r24);

     label12:
        return 0;

     label13:
        goto label11;

     label14:
        return 1;

     label15:
        $r40 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("If-Modified-Since");

        if $r40 == null goto label19;

        $r5 = staticinvoke <org.eclipse.jetty.server.Response: org.eclipse.jetty.server.Response getResponse(javax.servlet.http.HttpServletResponse)>(r4);

        if r6 == null goto label17;

        $r7 = interfaceinvoke r6.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getLastModified()>();

        if $r7 == null goto label17;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $z2 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label17;

        virtualinvoke $r5.<org.eclipse.jetty.server.Response: void reset(boolean)>(1);

        virtualinvoke $r5.<org.eclipse.jetty.server.Response: void setStatus(int)>(304);

        virtualinvoke $r5.<org.eclipse.jetty.server.Response: void flushBuffer()>();

     label16:
        return 0;

     label17:
        $l8 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: long getDateHeader(java.lang.String)>("If-Modified-Since");

        $b9 = $l8 cmp -1L;

        if $b9 == 0 goto label19;

        $l4 = virtualinvoke r3.<org.eclipse.jetty.util.resource.Resource: long lastModified()>();

        $l6 = $l4 / 1000L;

        $l5 = $l8 / 1000L;

        $b7 = $l6 cmp $l5;

        $i12 = (int) $b7;

        if $i12 > 0 goto label19;

        virtualinvoke $r5.<org.eclipse.jetty.server.Response: void reset(boolean)>(1);

        virtualinvoke $r5.<org.eclipse.jetty.server.Response: void setStatus(int)>(304);

        virtualinvoke $r5.<org.eclipse.jetty.server.Response: void flushBuffer()>();

     label18:
        return 0;

     label19:
        $l10 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: long getDateHeader(java.lang.String)>("If-Unmodified-Since");

        $b11 = $l10 cmp -1L;

        if $b11 == 0 goto label21;

        $l0 = virtualinvoke r3.<org.eclipse.jetty.util.resource.Resource: long lastModified()>();

        $l2 = $l0 / 1000L;

        $l1 = $l10 / 1000L;

        $b3 = $l2 cmp $l1;

        $i13 = (int) $b3;

        if $i13 <= 0 goto label21;

        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int)>(412);

     label20:
        return 0;

     label21:
        goto label24;

     label22:
        $r38 := @caughtexception;

        $z9 = interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z9 != 0 goto label23;

        $r39 = virtualinvoke $r38.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, $r39);

     label23:
        throw $r38;

     label24:
        return 1;

        catch java.lang.IllegalArgumentException from label01 to label05 with label22;
        catch java.lang.IllegalArgumentException from label06 to label07 with label22;
        catch java.lang.IllegalArgumentException from label08 to label09 with label22;
        catch java.lang.IllegalArgumentException from label10 to label12 with label22;
        catch java.lang.IllegalArgumentException from label13 to label14 with label22;
        catch java.lang.IllegalArgumentException from label15 to label16 with label22;
        catch java.lang.IllegalArgumentException from label17 to label18 with label22;
        catch java.lang.IllegalArgumentException from label19 to label20 with label22;
    }

    protected void sendDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String) throws java.io.IOException
    {
        byte[] $r9;
        org.eclipse.jetty.servlet.DefaultServlet r0;
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.ServletOutputStream $r11;
        int $i0, $i1;
        java.lang.String $r2, $r3, r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        javax.servlet.http.HttpServletResponse r10;
        org.eclipse.jetty.server.handler.ContextHandler $r5, $r13;
        org.eclipse.jetty.util.resource.Resource $r4, $r6, $r12, $r14, $r15, $r16, r17;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r10 := @parameter1: javax.servlet.http.HttpServletResponse;

        r17 := @parameter2: org.eclipse.jetty.util.resource.Resource;

        r7 := @parameter3: java.lang.String;

        $z0 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _dirAllowed>;

        if $z0 != 0 goto label1;

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

        return;

     label1:
        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r3 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r2, "/");

        $r4 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _resourceBase>;

        if $r4 == null goto label2;

        $r15 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _resourceBase>;

        $z2 = $r15 instanceof org.eclipse.jetty.util.resource.ResourceCollection;

        if $z2 == 0 goto label3;

        $r16 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.resource.Resource _resourceBase>;

        r17 = virtualinvoke $r16.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>(r7);

        goto label3;

     label2:
        $r5 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.util.resource.Resource getBaseResource()>();

        $z1 = $r6 instanceof org.eclipse.jetty.util.resource.ResourceCollection;

        if $z1 == 0 goto label3;

        $r13 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.handler.ContextHandler _contextHandler>;

        $r14 = virtualinvoke $r13.<org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.util.resource.Resource getBaseResource()>();

        r17 = virtualinvoke $r14.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>(r7);

     label3:
        $r12 = r17;

        $i1 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i1 <= 1 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        $r8 = virtualinvoke $r12.<org.eclipse.jetty.util.resource.Resource: java.lang.String getListHTML(java.lang.String,boolean)>($r3, $z3);

        if $r8 != null goto label6;

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(403, "No directory");

        return;

     label6:
        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("text/html; charset=UTF-8");

        $i0 = lengthof $r9;

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void setContentLength(int)>($i0);

        $r11 = interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        virtualinvoke $r11.<javax.servlet.ServletOutputStream: void write(byte[])>($r9);

        return;
    }

    protected void sendData(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, boolean, org.eclipse.jetty.util.resource.Resource, org.eclipse.jetty.http.HttpContent, java.util.Enumeration) throws java.io.IOException
    {
        java.util.Enumeration r6;
        byte $b0, $b11, $b12, $b46;
        org.eclipse.jetty.server.nio.NIOConnector $r50;
        java.lang.StringBuilder $r21, $r23, $r29, $r31, $r42, $r44, $r66, $r68, $r69;
        java.lang.Object[] $r46;
        long $l9, $l10, $l13, $l14, $l31, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l39, l40, $l41, l42;
        org.eclipse.jetty.util.resource.Resource r8;
        org.eclipse.jetty.servlet.DefaultServlet r7;
        org.eclipse.jetty.http.Generator $r5;
        org.eclipse.jetty.io.Buffer $r15, $r16, $r56, $r57;
        org.eclipse.jetty.server.HttpOutput $r49;
        javax.servlet.ServletOutputStream $r54;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i43, i44, $i45, $i47, i48, i49, $i50, $i51, $i52;
        org.eclipse.jetty.http.HttpFields $r11;
        java.lang.Object $r26, $r33, $r47;
        org.eclipse.jetty.util.log.Logger $r41;
        org.eclipse.jetty.server.Connector $r2;
        org.eclipse.jetty.server.InclusiveByteRange r58, r63, r64;
        java.io.PrintWriter $r53;
        org.eclipse.jetty.http.HttpContent r0;
        org.eclipse.jetty.util.MultiPartOutputStream $r67;
        org.eclipse.jetty.server.Response $r10;
        javax.servlet.http.HttpServletRequest r18;
        java.lang.String $r14, $r19, $r22, $r24, $r25, $r30, $r32, $r34, $r35, $r36, $r37, $r38, $r43, $r45, $r48, $r59, r60, r61;
        java.lang.IllegalStateException $r51;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, $z10, z11;
        java.util.List $r13;
        org.eclipse.jetty.server.AbstractHttpConnection $r1, $r4;
        java.lang.String[] $r27, $r39;
        java.io.OutputStream r55;
        javax.servlet.http.HttpServletResponse r3;
        org.eclipse.jetty.io.WriterOutputStream $r65;
        org.eclipse.jetty.server.AbstractHttpConnection$Output $r9, $r12;
        java.io.InputStream r62;

        r7 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r18 := @parameter0: javax.servlet.http.HttpServletRequest;

        r3 := @parameter1: javax.servlet.http.HttpServletResponse;

        z1 := @parameter2: boolean;

        r8 := @parameter3: org.eclipse.jetty.util.resource.Resource;

        r0 := @parameter4: org.eclipse.jetty.http.HttpContent;

        r6 := @parameter5: java.util.Enumeration;

        if r0 != null goto label01;

        z7 = 0;

        l40 = virtualinvoke r8.<org.eclipse.jetty.util.resource.Resource: long length()>();

        goto label04;

     label01:
        $r1 = staticinvoke <org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.AbstractHttpConnection getCurrentConnection()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Connector getConnector()>();

        $z0 = $r2 instanceof org.eclipse.jetty.server.nio.NIOConnector;

        if $z0 == 0 goto label02;

        $r50 = (org.eclipse.jetty.server.nio.NIOConnector) $r2;

        $z5 = interfaceinvoke $r50.<org.eclipse.jetty.server.nio.NIOConnector: boolean getUseDirectBuffers()>();

        if $z5 == 0 goto label02;

        $z6 = $r2 instanceof org.eclipse.jetty.server.ssl.SslConnector;

        if $z6 != 0 goto label02;

        $z8 = 1;

        goto label03;

     label02:
        $z8 = 0;

     label03:
        z7 = $z8;

        l40 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: long getContentLength()>();

     label04:
        $r54 = interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        r55 = $r54;

        $z9 = $r54 instanceof org.eclipse.jetty.server.HttpOutput;

        if $z9 == 0 goto label05;

        $r49 = (org.eclipse.jetty.server.HttpOutput) $r54;

        $z10 = virtualinvoke $r49.<org.eclipse.jetty.server.HttpOutput: boolean isWritten()>();

        goto label06;

     label05:
        $r4 = staticinvoke <org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.AbstractHttpConnection getCurrentConnection()>();

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.Generator getGenerator()>();

        $z10 = interfaceinvoke $r5.<org.eclipse.jetty.http.Generator: boolean isWritten()>();

     label06:
        z11 = $z10;

     label07:
        goto label09;

     label08:
        $r51 := @caughtexception;

        $r65 = new org.eclipse.jetty.io.WriterOutputStream;

        $r53 = interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        specialinvoke $r65.<org.eclipse.jetty.io.WriterOutputStream: void <init>(java.io.Writer)>($r53);

        r55 = $r65;

        z11 = 1;

     label09:
        if r6 == null goto label10;

        $z4 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z4 == 0 goto label10;

        $b0 = l40 cmp 0L;

        $i50 = (int) $b0;

        if $i50 >= 0 goto label24;

     label10:
        if z1 == 0 goto label11;

        virtualinvoke r8.<org.eclipse.jetty.util.resource.Resource: void writeTo(java.io.OutputStream,long,long)>(r55, 0L, l40);

        goto label46;

     label11:
        if r0 == null goto label17;

        if z11 != 0 goto label17;

        $z2 = r55 instanceof org.eclipse.jetty.server.HttpOutput;

        if $z2 == 0 goto label17;

        $z3 = r3 instanceof org.eclipse.jetty.server.Response;

        if $z3 == 0 goto label12;

        $r10 = (org.eclipse.jetty.server.Response) r3;

        $r11 = virtualinvoke $r10.<org.eclipse.jetty.server.Response: org.eclipse.jetty.http.HttpFields getHttpFields()>();

        virtualinvoke r7.<org.eclipse.jetty.servlet.DefaultServlet: void writeOptionHeaders(org.eclipse.jetty.http.HttpFields)>($r11);

        $r12 = (org.eclipse.jetty.server.AbstractHttpConnection$Output) r55;

        virtualinvoke $r12.<org.eclipse.jetty.server.AbstractHttpConnection$Output: void sendContent(java.lang.Object)>(r0);

        goto label46;

     label12:
        if z7 == 0 goto label13;

        $r56 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getDirectBuffer()>();

        goto label14;

     label13:
        $r56 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getIndirectBuffer()>();

     label14:
        if $r56 == null goto label15;

        virtualinvoke r7.<org.eclipse.jetty.servlet.DefaultServlet: void writeHeaders(javax.servlet.http.HttpServletResponse,org.eclipse.jetty.http.HttpContent,long)>(r3, r0, l40);

        $r9 = (org.eclipse.jetty.server.AbstractHttpConnection$Output) r55;

        virtualinvoke $r9.<org.eclipse.jetty.server.AbstractHttpConnection$Output: void sendContent(java.lang.Object)>($r56);

        goto label16;

     label15:
        virtualinvoke r7.<org.eclipse.jetty.servlet.DefaultServlet: void writeHeaders(javax.servlet.http.HttpServletResponse,org.eclipse.jetty.http.HttpContent,long)>(r3, r0, l40);

        virtualinvoke r8.<org.eclipse.jetty.util.resource.Resource: void writeTo(java.io.OutputStream,long,long)>(r55, 0L, l40);

     label16:
        goto label46;

     label17:
        if z11 == 0 goto label18;

        $l41 = -1L;

        goto label19;

     label18:
        $l41 = l40;

     label19:
        virtualinvoke r7.<org.eclipse.jetty.servlet.DefaultServlet: void writeHeaders(javax.servlet.http.HttpServletResponse,org.eclipse.jetty.http.HttpContent,long)>(r3, r0, $l41);

        if r0 != null goto label20;

        $r57 = null;

        goto label21;

     label20:
        $r57 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getIndirectBuffer()>();

     label21:
        if $r57 == null goto label22;

        interfaceinvoke $r57.<org.eclipse.jetty.io.Buffer: void writeTo(java.io.OutputStream)>(r55);

        goto label23;

     label22:
        virtualinvoke r8.<org.eclipse.jetty.util.resource.Resource: void writeTo(java.io.OutputStream,long,long)>(r55, 0L, l40);

     label23:
        goto label46;

     label24:
        $r13 = staticinvoke <org.eclipse.jetty.server.InclusiveByteRange: java.util.List satisfiableRanges(java.util.Enumeration,long)>(r6, l40);

        if $r13 == null goto label25;

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i1 != 0 goto label26;

     label25:
        virtualinvoke r7.<org.eclipse.jetty.servlet.DefaultServlet: void writeHeaders(javax.servlet.http.HttpServletResponse,org.eclipse.jetty.http.HttpContent,long)>(r3, r0, l40);

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(416);

        $r14 = staticinvoke <org.eclipse.jetty.server.InclusiveByteRange: java.lang.String to416HeaderRangeString(long)>(l40);

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Content-Range", $r14);

        virtualinvoke r8.<org.eclipse.jetty.util.resource.Resource: void writeTo(java.io.OutputStream,long,long)>(r55, 0L, l40);

        return;

     label26:
        $i2 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i2 != 1 goto label27;

        $r47 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);

        r58 = (org.eclipse.jetty.server.InclusiveByteRange) $r47;

        $l38 = virtualinvoke r58.<org.eclipse.jetty.server.InclusiveByteRange: long getSize(long)>(l40);

        virtualinvoke r7.<org.eclipse.jetty.servlet.DefaultServlet: void writeHeaders(javax.servlet.http.HttpServletResponse,org.eclipse.jetty.http.HttpContent,long)>(r3, r0, $l38);

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(206);

        $r48 = virtualinvoke r58.<org.eclipse.jetty.server.InclusiveByteRange: java.lang.String toHeaderRangeString(long)>(l40);

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Content-Range", $r48);

        $l39 = virtualinvoke r58.<org.eclipse.jetty.server.InclusiveByteRange: long getFirst(long)>(l40);

        virtualinvoke r8.<org.eclipse.jetty.util.resource.Resource: void writeTo(java.io.OutputStream,long,long)>(r55, $l39, $l38);

        return;

     label27:
        virtualinvoke r7.<org.eclipse.jetty.servlet.DefaultServlet: void writeHeaders(javax.servlet.http.HttpServletResponse,org.eclipse.jetty.http.HttpContent,long)>(r3, r0, -1L);

        $r15 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getContentType()>();

        if $r15 != null goto label28;

        $r59 = null;

        goto label29;

     label28:
        $r16 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getContentType()>();

        $r59 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

     label29:
        r60 = $r59;

        if $r59 != null goto label30;

        $r41 = <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG>;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown mimetype for ");

        $r43 = interfaceinvoke r18.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r46 = newarray (java.lang.Object)[0];

        interfaceinvoke $r41.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r45, $r46);

     label30:
        $r67 = new org.eclipse.jetty.util.MultiPartOutputStream;

        specialinvoke $r67.<org.eclipse.jetty.util.MultiPartOutputStream: void <init>(java.io.OutputStream)>(r55);

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(206);

        $r19 = interfaceinvoke r18.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Request-Range");

        if $r19 == null goto label31;

        r61 = "multipart/x-byteranges; boundary=";

        goto label32;

     label31:
        r61 = "multipart/byteranges; boundary=";

     label32:
        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);

        $r22 = virtualinvoke $r67.<org.eclipse.jetty.util.MultiPartOutputStream: java.lang.String getBoundary()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r24);

        r62 = virtualinvoke r8.<org.eclipse.jetty.util.resource.Resource: java.io.InputStream getInputStream()>();

        l42 = 0L;

        i43 = 0;

        $i3 = interfaceinvoke $r13.<java.util.List: int size()>();

        $r39 = newarray (java.lang.String)[$i3];

        i44 = 0;

     label33:
        $i45 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i44 >= $i45 goto label38;

        $r33 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i44);

        r63 = (org.eclipse.jetty.server.InclusiveByteRange) $r33;

        $r34 = virtualinvoke r63.<org.eclipse.jetty.server.InclusiveByteRange: java.lang.String toHeaderRangeString(long)>(l40);

        $r39[i44] = $r34;

        $l14 = (long) i43;

        if i44 <= 0 goto label34;

        $b46 = 2;

        goto label35;

     label34:
        $b46 = 0;

     label35:
        $i15 = $b46 + 2;

        $r35 = virtualinvoke $r67.<org.eclipse.jetty.util.MultiPartOutputStream: java.lang.String getBoundary()>();

        $i16 = virtualinvoke $r35.<java.lang.String: int length()>();

        $i17 = $i15 + $i16;

        $i18 = $i17 + 2;

        if r60 != null goto label36;

        $i47 = 0;

        goto label37;

     label36:
        $r36 = "Content-Type";

        $i19 = virtualinvoke $r36.<java.lang.String: int length()>();

        $i20 = $i19 + 2;

        $i21 = virtualinvoke r60.<java.lang.String: int length()>();

        $i47 = $i20 + $i21;

     label37:
        $i22 = $i18 + $i47;

        $i23 = $i22 + 2;

        $r37 = "Content-Range";

        $i24 = virtualinvoke $r37.<java.lang.String: int length()>();

        $i25 = $i23 + $i24;

        $i26 = $i25 + 2;

        $r38 = $r39[i44];

        $i27 = virtualinvoke $r38.<java.lang.String: int length()>();

        $i28 = $i26 + $i27;

        $i29 = $i28 + 2;

        $i30 = $i29 + 2;

        $l31 = (long) $i30;

        $l32 = virtualinvoke r63.<org.eclipse.jetty.server.InclusiveByteRange: long getLast(long)>(l40);

        $l33 = virtualinvoke r63.<org.eclipse.jetty.server.InclusiveByteRange: long getFirst(long)>(l40);

        $l34 = $l32 - $l33;

        $l35 = $l31 + $l34;

        $l36 = $l35 + 1L;

        $l37 = $l14 + $l36;

        i43 = (int) $l37;

        i44 = i44 + 1;

        goto label33;

     label38:
        $r25 = virtualinvoke $r67.<org.eclipse.jetty.util.MultiPartOutputStream: java.lang.String getBoundary()>();

        $i4 = virtualinvoke $r25.<java.lang.String: int length()>();

        $i5 = 4 + $i4;

        $i6 = $i5 + 2;

        $i7 = $i6 + 2;

        i48 = i43 + $i7;

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setContentLength(int)>(i48);

        i49 = 0;

     label39:
        $i8 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i49 >= $i8 goto label44;

        $r26 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i49);

        r64 = (org.eclipse.jetty.server.InclusiveByteRange) $r26;

        $r27 = newarray (java.lang.String)[1];

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Range: ");

        $r30 = $r39[i49];

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27[0] = $r32;

        virtualinvoke $r67.<org.eclipse.jetty.util.MultiPartOutputStream: void startPart(java.lang.String,java.lang.String[])>(r60, $r27);

        $l9 = virtualinvoke r64.<org.eclipse.jetty.server.InclusiveByteRange: long getFirst(long)>(l40);

        $l10 = virtualinvoke r64.<org.eclipse.jetty.server.InclusiveByteRange: long getSize(long)>(l40);

        if r62 == null goto label42;

        $b11 = $l9 cmp l42;

        $i51 = (int) $b11;

        if $i51 >= 0 goto label40;

        virtualinvoke r62.<java.io.InputStream: void close()>();

        r62 = virtualinvoke r8.<org.eclipse.jetty.util.resource.Resource: java.io.InputStream getInputStream()>();

        l42 = 0L;

     label40:
        $b12 = l42 cmp $l9;

        $i52 = (int) $b12;

        if $i52 >= 0 goto label41;

        $l13 = $l9 - l42;

        virtualinvoke r62.<java.io.InputStream: long skip(long)>($l13);

        l42 = $l9;

     label41:
        staticinvoke <org.eclipse.jetty.util.IO: void copy(java.io.InputStream,java.io.OutputStream,long)>(r62, $r67, $l10);

        l42 = l42 + $l10;

        goto label43;

     label42:
        virtualinvoke r8.<org.eclipse.jetty.util.resource.Resource: void writeTo(java.io.OutputStream,long,long)>($r67, $l9, $l10);

     label43:
        i49 = i49 + 1;

        goto label39;

     label44:
        if r62 == null goto label45;

        virtualinvoke r62.<java.io.InputStream: void close()>();

     label45:
        virtualinvoke $r67.<org.eclipse.jetty.util.MultiPartOutputStream: void close()>();

     label46:
        return;

        catch java.lang.IllegalStateException from label04 to label07 with label08;
    }

    protected void writeHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.http.HttpContent, long) throws java.io.IOException
    {
        org.eclipse.jetty.servlet.DefaultServlet r4;
        byte $b1, $b3, $b4, $b7, $b8;
        org.eclipse.jetty.io.Buffer $r1, $r5, $r9, $r11, $r12, $r14, $r15, $r16, $r18;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.http.HttpContent r0;
        org.eclipse.jetty.server.Response r20;
        long $l0, l2, $l6;
        int $i5, $i9, $i10;
        java.lang.String $r6, $r7, $r17, $r19;
        org.eclipse.jetty.http.HttpFields $r8;
        javax.servlet.http.HttpServletResponse r2;
        org.eclipse.jetty.util.resource.Resource $r3, $r10, $r13;

        r4 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r2 := @parameter0: javax.servlet.http.HttpServletResponse;

        r0 := @parameter1: org.eclipse.jetty.http.HttpContent;

        l2 := @parameter2: long;

        $r1 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getContentType()>();

        if $r1 == null goto label01;

        $r17 = interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: java.lang.String getContentType()>();

        if $r17 != null goto label01;

        $r18 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getContentType()>();

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r19);

     label01:
        $z1 = r2 instanceof org.eclipse.jetty.server.Response;

        if $z1 == 0 goto label06;

        r20 = (org.eclipse.jetty.server.Response) r2;

        $r8 = virtualinvoke r20.<org.eclipse.jetty.server.Response: org.eclipse.jetty.http.HttpFields getHttpFields()>();

        $r9 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getLastModified()>();

        if $r9 == null goto label02;

        $r15 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer LAST_MODIFIED_BUFFER>;

        $r16 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getLastModified()>();

        virtualinvoke $r8.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r15, $r16);

        goto label03;

     label02:
        $r10 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.util.resource.Resource getResource()>();

        if $r10 == null goto label03;

        $r13 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.util.resource.Resource getResource()>();

        $l6 = virtualinvoke $r13.<org.eclipse.jetty.util.resource.Resource: long lastModified()>();

        $b7 = $l6 cmp -1L;

        if $b7 == 0 goto label03;

        $r14 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer LAST_MODIFIED_BUFFER>;

        virtualinvoke $r8.<org.eclipse.jetty.http.HttpFields: void putDateField(org.eclipse.jetty.io.Buffer,long)>($r14, $l6);

     label03:
        $b8 = l2 cmp -1L;

        if $b8 == 0 goto label04;

        virtualinvoke r20.<org.eclipse.jetty.server.Response: void setLongContentLength(long)>(l2);

     label04:
        virtualinvoke r4.<org.eclipse.jetty.servlet.DefaultServlet: void writeOptionHeaders(org.eclipse.jetty.http.HttpFields)>($r8);

        $z0 = r4.<org.eclipse.jetty.servlet.DefaultServlet: boolean _etags>;

        if $z0 == 0 goto label05;

        $r11 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer ETAG_BUFFER>;

        $r12 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getETag()>();

        virtualinvoke $r8.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r11, $r12);

     label05:
        goto label10;

     label06:
        $r3 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.util.resource.Resource getResource()>();

        $l0 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: long lastModified()>();

        $b1 = $l0 cmp 0L;

        $i9 = (int) $b1;

        if $i9 < 0 goto label07;

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setDateHeader(java.lang.String,long)>("Last-Modified", $l0);

     label07:
        $b3 = l2 cmp -1L;

        if $b3 == 0 goto label09;

        $b4 = l2 cmp 2147483647L;

        $i10 = (int) $b4;

        if $i10 >= 0 goto label08;

        $i5 = (int) l2;

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setContentLength(int)>($i5);

        goto label09;

     label08:
        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Content-Length", $r7);

     label09:
        virtualinvoke r4.<org.eclipse.jetty.servlet.DefaultServlet: void writeOptionHeaders(javax.servlet.http.HttpServletResponse)>(r2);

        $z2 = r4.<org.eclipse.jetty.servlet.DefaultServlet: boolean _etags>;

        if $z2 == 0 goto label10;

        $r5 = interfaceinvoke r0.<org.eclipse.jetty.http.HttpContent: org.eclipse.jetty.io.Buffer getETag()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("ETag", $r6);

     label10:
        return;
    }

    protected void writeOptionHeaders(org.eclipse.jetty.http.HttpFields) throws java.io.IOException
    {
        org.eclipse.jetty.servlet.DefaultServlet r0;
        org.eclipse.jetty.io.ByteArrayBuffer $r1, $r3;
        org.eclipse.jetty.http.HttpFields r2;
        org.eclipse.jetty.io.Buffer $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r2 := @parameter0: org.eclipse.jetty.http.HttpFields;

        $z0 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _acceptRanges>;

        if $z0 == 0 goto label1;

        $r6 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer ACCEPT_RANGES_BUFFER>;

        $r5 = <org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.io.Buffer BYTES_BUFFER>;

        virtualinvoke r2.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r6, $r5);

     label1:
        $r1 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl>;

        if $r1 == null goto label2;

        $r4 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer CACHE_CONTROL_BUFFER>;

        $r3 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl>;

        virtualinvoke r2.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r4, $r3);

     label2:
        return;
    }

    protected void writeOptionHeaders(javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        org.eclipse.jetty.io.ByteArrayBuffer $r1, $r3;
        javax.servlet.http.HttpServletResponse r2;
        java.lang.String $r4;
        org.eclipse.jetty.servlet.DefaultServlet r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        r2 := @parameter0: javax.servlet.http.HttpServletResponse;

        $z0 = r0.<org.eclipse.jetty.servlet.DefaultServlet: boolean _acceptRanges>;

        if $z0 == 0 goto label1;

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Accept-Ranges", "bytes");

     label1:
        $r1 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl>;

        if $r1 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.io.ByteArrayBuffer: java.lang.String toString()>();

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Cache-Control", $r4);

     label2:
        return;
    }

    public void destroy()
    {
        org.eclipse.jetty.servlet.DefaultServlet r0;
        org.eclipse.jetty.server.ResourceCache $r1, $r2;

        r0 := @this: org.eclipse.jetty.servlet.DefaultServlet;

        $r1 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.server.ResourceCache _cache>;

        virtualinvoke $r2.<org.eclipse.jetty.server.ResourceCache: void flushCache()>();

     label1:
        specialinvoke r0.<javax.servlet.http.HttpServlet: void destroy()>();

        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.servlet.DefaultServlet: long serialVersionUID> = 4930458713846881193L;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/servlet/DefaultServlet;");

        <org.eclipse.jetty.servlet.DefaultServlet: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
