public abstract class com.jidesoft.swing.Searchable extends java.lang.Object
{
    private final java.beans.PropertyChangeSupport _propertyChangeSupport;
    protected final javax.swing.JComponent _component;
    private com.jidesoft.swing.Searchable$SearchPopup _popup;
    private javax.swing.JLayeredPane _layeredPane;
    private boolean _heavyweightComponentEnabled;
    private com.jidesoft.swing.SearchableProvider _searchableProvider;
    private java.util.regex.Pattern _pattern;
    private java.lang.String _searchText;
    private java.lang.String _previousSearchText;
    private boolean _fromStart;
    private boolean _caseSensitive;
    private boolean _repeats;
    private boolean _wildcardEnabled;
    private boolean _countMatch;
    protected int _matchCount;
    private com.jidesoft.utils.WildcardSupport _wildcardSupport;
    private java.awt.Color _mismatchForeground;
    private java.awt.Color _foreground;
    private java.awt.Color _background;
    protected java.awt.event.ComponentListener _componentListener;
    protected java.awt.event.KeyListener _keyListener;
    protected java.awt.event.FocusListener _focusListener;
    private com.jidesoft.swing.event.SearchableListener _searchableListener;
    public static final java.lang.String PROPERTY_SEARCH_TEXT;
    private int _cursor;
    private java.lang.String _searchLabel;
    private int _popupLocation;
    private int _searchingDelay;
    private int _popupTimeout;
    private javax.swing.Timer _popupTimer;
    private boolean _reverseOrder;
    protected javax.swing.event.EventListenerList listenerList;
    private java.awt.Component _popupLocationRelativeTo;
    public static final java.lang.String CLIENT_PROPERTY_SEARCHABLE;
    private java.util.Set _selection;
    private boolean _processModelChangeEvent;
    private boolean _hideSearchPopupOnEvent;

    public void <init>(javax.swing.JComponent)
    {
        javax.swing.JComponent r3, $r6;
        java.util.HashSet $r9;
        javax.swing.event.EventListenerList $r8;
        com.jidesoft.swing.Searchable r0, $r4;
        int $i1;
        java.beans.PropertyChangeSupport $r7;

        r0 := @this: com.jidesoft.swing.Searchable;

        r3 := @parameter0: javax.swing.JComponent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new java.beans.PropertyChangeSupport;

        specialinvoke $r7.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);

        r0.<com.jidesoft.swing.Searchable: java.beans.PropertyChangeSupport _propertyChangeSupport> = $r7;

        r0.<com.jidesoft.swing.Searchable: boolean _fromStart> = 1;

        r0.<com.jidesoft.swing.Searchable: boolean _caseSensitive> = 0;

        r0.<com.jidesoft.swing.Searchable: boolean _repeats> = 0;

        r0.<com.jidesoft.swing.Searchable: boolean _wildcardEnabled> = 1;

        r0.<com.jidesoft.swing.Searchable: com.jidesoft.utils.WildcardSupport _wildcardSupport> = null;

        r0.<com.jidesoft.swing.Searchable: java.awt.Color _foreground> = null;

        r0.<com.jidesoft.swing.Searchable: java.awt.Color _background> = null;

        $i1 = (int) -1;

        r0.<com.jidesoft.swing.Searchable: int _cursor> = $i1;

        r0.<com.jidesoft.swing.Searchable: java.lang.String _searchLabel> = null;

        r0.<com.jidesoft.swing.Searchable: int _popupLocation> = 1;

        r0.<com.jidesoft.swing.Searchable: int _searchingDelay> = 0;

        r0.<com.jidesoft.swing.Searchable: int _popupTimeout> = 0;

        r0.<com.jidesoft.swing.Searchable: boolean _reverseOrder> = 0;

        $r8 = new javax.swing.event.EventListenerList;

        specialinvoke $r8.<javax.swing.event.EventListenerList: void <init>()>();

        r0.<com.jidesoft.swing.Searchable: javax.swing.event.EventListenerList listenerList> = $r8;

        r0.<com.jidesoft.swing.Searchable: boolean _processModelChangeEvent> = 1;

        r0.<com.jidesoft.swing.Searchable: boolean _hideSearchPopupOnEvent> = 1;

        $r4 = staticinvoke <com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable getSearchable(javax.swing.JComponent)>(r3);

        if $r4 == null goto label1;

        staticinvoke <com.jidesoft.swing.SearchableUtils: void uninstallSearchable(com.jidesoft.swing.Searchable)>($r4);

     label1:
        r0.<com.jidesoft.swing.Searchable: java.lang.String _previousSearchText> = null;

        r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component> = r3;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r0.<com.jidesoft.swing.Searchable: java.util.Set _selection> = $r9;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void installListeners()>();

        $r6 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void updateClientProperty(javax.swing.JComponent,com.jidesoft.swing.Searchable)>($r6, r0);

        return;
    }

    public void <init>(javax.swing.JComponent, com.jidesoft.swing.SearchableProvider)
    {
        javax.swing.JComponent r3, $r7;
        java.util.HashSet $r10;
        javax.swing.event.EventListenerList $r9;
        com.jidesoft.swing.Searchable r0, $r4;
        int $i1;
        java.beans.PropertyChangeSupport $r8;
        com.jidesoft.swing.SearchableProvider r5;

        r0 := @this: com.jidesoft.swing.Searchable;

        r3 := @parameter0: javax.swing.JComponent;

        r5 := @parameter1: com.jidesoft.swing.SearchableProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = new java.beans.PropertyChangeSupport;

        specialinvoke $r8.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);

        r0.<com.jidesoft.swing.Searchable: java.beans.PropertyChangeSupport _propertyChangeSupport> = $r8;

        r0.<com.jidesoft.swing.Searchable: boolean _fromStart> = 1;

        r0.<com.jidesoft.swing.Searchable: boolean _caseSensitive> = 0;

        r0.<com.jidesoft.swing.Searchable: boolean _repeats> = 0;

        r0.<com.jidesoft.swing.Searchable: boolean _wildcardEnabled> = 1;

        r0.<com.jidesoft.swing.Searchable: com.jidesoft.utils.WildcardSupport _wildcardSupport> = null;

        r0.<com.jidesoft.swing.Searchable: java.awt.Color _foreground> = null;

        r0.<com.jidesoft.swing.Searchable: java.awt.Color _background> = null;

        $i1 = (int) -1;

        r0.<com.jidesoft.swing.Searchable: int _cursor> = $i1;

        r0.<com.jidesoft.swing.Searchable: java.lang.String _searchLabel> = null;

        r0.<com.jidesoft.swing.Searchable: int _popupLocation> = 1;

        r0.<com.jidesoft.swing.Searchable: int _searchingDelay> = 0;

        r0.<com.jidesoft.swing.Searchable: int _popupTimeout> = 0;

        r0.<com.jidesoft.swing.Searchable: boolean _reverseOrder> = 0;

        $r9 = new javax.swing.event.EventListenerList;

        specialinvoke $r9.<javax.swing.event.EventListenerList: void <init>()>();

        r0.<com.jidesoft.swing.Searchable: javax.swing.event.EventListenerList listenerList> = $r9;

        r0.<com.jidesoft.swing.Searchable: boolean _processModelChangeEvent> = 1;

        r0.<com.jidesoft.swing.Searchable: boolean _hideSearchPopupOnEvent> = 1;

        $r4 = staticinvoke <com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable getSearchable(javax.swing.JComponent)>(r3);

        if $r4 == null goto label1;

        staticinvoke <com.jidesoft.swing.SearchableUtils: void uninstallSearchable(com.jidesoft.swing.Searchable)>($r4);

     label1:
        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider> = r5;

        r0.<com.jidesoft.swing.Searchable: java.lang.String _previousSearchText> = null;

        r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component> = r3;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        r0.<com.jidesoft.swing.Searchable: java.util.Set _selection> = $r10;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void installListeners()>();

        $r7 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void updateClientProperty(javax.swing.JComponent,com.jidesoft.swing.Searchable)>($r7, r0);

        return;
    }

    protected abstract int getSelectedIndex();

    protected abstract void setSelectedIndex(int, boolean);

    public void adjustSelectedIndex(int, boolean)
    {
        int i0;
        com.jidesoft.swing.Searchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void setSelectedIndex(int,boolean)>(i0, z0);

        return;
    }

    protected abstract int getElementCount();

    protected abstract java.lang.Object getElementAt(int);

    protected abstract java.lang.String convertElementToString(java.lang.Object);

    public java.lang.String convertToString(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r2;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.String convertElementToString(java.lang.Object)>(r1);

        return $r2;
    }

    public boolean isHideSearchPopupOnEvent()
    {
        com.jidesoft.swing.Searchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $z0 = r0.<com.jidesoft.swing.Searchable: boolean _hideSearchPopupOnEvent>;

        return $z0;
    }

    public void setHideSearchPopupOnEvent(boolean)
    {
        com.jidesoft.swing.Searchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.Searchable: boolean _hideSearchPopupOnEvent> = z0;

        return;
    }

    public void hidePopup()
    {
        com.jidesoft.swing.Searchable$SearchPopup $r1, $r3, $r7;
        java.lang.Integer $r9;
        com.jidesoft.swing.event.SearchableEvent $r11;
        com.jidesoft.swing.Searchable r0;
        int $i0, $i2;
        javax.swing.JLayeredPane $r2, $r4, $r5, $r6;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        if $r1 == null goto label3;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isHeavyweightComponentEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        virtualinvoke $r7.<com.jidesoft.swing.Searchable$SearchPopup: void hidePopupImmediately()>();

        goto label2;

     label1:
        $r2 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        if $r2 == null goto label2;

        $r4 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        $r3 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        virtualinvoke $r4.<javax.swing.JLayeredPane: void remove(java.awt.Component)>($r3);

        $r5 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        virtualinvoke $r5.<javax.swing.JLayeredPane: void validate()>();

        $r6 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        virtualinvoke $r6.<javax.swing.JLayeredPane: void repaint()>();

        r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane> = null;

     label2:
        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup> = null;

        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider> = null;

        $r11 = new com.jidesoft.swing.event.SearchableEvent;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getCurrentIndex()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r10 = r0.<com.jidesoft.swing.Searchable: java.lang.String _previousSearchText>;

        specialinvoke $r11.<com.jidesoft.swing.event.SearchableEvent: void <init>(java.lang.Object,int,java.lang.String,java.lang.Object,java.lang.String)>(r0, 3000, "", $r9, $r10);

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r11);

     label3:
        $i2 = (int) -1;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void setCursor(int)>($i2);

        return;
    }

    public com.jidesoft.swing.SearchableProvider getSearchableProvider()
    {
        com.jidesoft.swing.Searchable r0;
        com.jidesoft.swing.SearchableProvider $r1;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider>;

        return $r1;
    }

    public void setSearchableProvider(com.jidesoft.swing.SearchableProvider)
    {
        com.jidesoft.swing.Searchable r0;
        com.jidesoft.swing.SearchableProvider r1;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: com.jidesoft.swing.SearchableProvider;

        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider> = r1;

        return;
    }

    public void installListeners()
    {
        java.awt.event.KeyListener $r6, $r8, $r16;
        java.awt.event.FocusListener $r9, $r11, $r15;
        com.jidesoft.swing.event.SearchableListener $r12, $r13;
        java.awt.event.ComponentListener $r1, $r2, $r17, $r18;
        javax.swing.JComponent $r3, $r4;
        java.awt.Component $r5, $r7, $r10;
        com.jidesoft.swing.Searchable r0;
        com.jidesoft.swing.Searchable$1 $r14;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: java.awt.event.ComponentListener _componentListener>;

        if $r1 != null goto label1;

        $r18 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.awt.event.ComponentListener createComponentListener()>();

        r0.<com.jidesoft.swing.Searchable: java.awt.event.ComponentListener _componentListener> = $r18;

     label1:
        $r3 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        $r2 = r0.<com.jidesoft.swing.Searchable: java.awt.event.ComponentListener _componentListener>;

        virtualinvoke $r3.<javax.swing.JComponent: void addComponentListener(java.awt.event.ComponentListener)>($r2);

        $r4 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        $r5 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Component getScrollPane(java.awt.Component)>($r4);

        if $r5 == null goto label2;

        $r17 = r0.<com.jidesoft.swing.Searchable: java.awt.event.ComponentListener _componentListener>;

        virtualinvoke $r5.<java.awt.Component: void addComponentListener(java.awt.event.ComponentListener)>($r17);

     label2:
        $r6 = r0.<com.jidesoft.swing.Searchable: java.awt.event.KeyListener _keyListener>;

        if $r6 != null goto label3;

        $r16 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.awt.event.KeyListener createKeyListener()>();

        r0.<com.jidesoft.swing.Searchable: java.awt.event.KeyListener _keyListener> = $r16;

     label3:
        $r7 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.awt.Component getComponent()>();

        $r8 = r0.<com.jidesoft.swing.Searchable: java.awt.event.KeyListener _keyListener>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void insertKeyListener(java.awt.Component,java.awt.event.KeyListener,int)>($r7, $r8, 0);

        $r9 = r0.<com.jidesoft.swing.Searchable: java.awt.event.FocusListener _focusListener>;

        if $r9 != null goto label4;

        $r15 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.awt.event.FocusListener createFocusListener()>();

        r0.<com.jidesoft.swing.Searchable: java.awt.event.FocusListener _focusListener> = $r15;

     label4:
        $r10 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.awt.Component getComponent()>();

        $r11 = r0.<com.jidesoft.swing.Searchable: java.awt.event.FocusListener _focusListener>;

        virtualinvoke $r10.<java.awt.Component: void addFocusListener(java.awt.event.FocusListener)>($r11);

        $r12 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.event.SearchableListener _searchableListener>;

        if $r12 != null goto label5;

        $r14 = new com.jidesoft.swing.Searchable$1;

        specialinvoke $r14.<com.jidesoft.swing.Searchable$1: void <init>(com.jidesoft.swing.Searchable)>(r0);

        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.event.SearchableListener _searchableListener> = $r14;

     label5:
        $r13 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.event.SearchableListener _searchableListener>;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void addSearchableListener(com.jidesoft.swing.event.SearchableListener)>($r13);

        return;
    }

    protected java.awt.event.ComponentListener createComponentListener()
    {
        com.jidesoft.swing.Searchable$2 $r0;
        com.jidesoft.swing.Searchable r1;

        r1 := @this: com.jidesoft.swing.Searchable;

        $r0 = new com.jidesoft.swing.Searchable$2;

        specialinvoke $r0.<com.jidesoft.swing.Searchable$2: void <init>(com.jidesoft.swing.Searchable)>(r1);

        return $r0;
    }

    protected java.awt.event.KeyListener createKeyListener()
    {
        com.jidesoft.swing.Searchable$3 $r0;
        com.jidesoft.swing.Searchable r1;

        r1 := @this: com.jidesoft.swing.Searchable;

        $r0 = new com.jidesoft.swing.Searchable$3;

        specialinvoke $r0.<com.jidesoft.swing.Searchable$3: void <init>(com.jidesoft.swing.Searchable)>(r1);

        return $r0;
    }

    protected java.awt.event.FocusListener createFocusListener()
    {
        com.jidesoft.swing.Searchable$4 $r0;
        com.jidesoft.swing.Searchable r1;

        r1 := @this: com.jidesoft.swing.Searchable;

        $r0 = new com.jidesoft.swing.Searchable$4;

        specialinvoke $r0.<com.jidesoft.swing.Searchable$4: void <init>(com.jidesoft.swing.Searchable)>(r1);

        return $r0;
    }

    public void uninstallListeners()
    {
        java.awt.event.FocusListener $r2, $r6;
        java.awt.event.KeyListener $r8, $r14;
        com.jidesoft.swing.event.SearchableListener $r3, $r4;
        java.awt.Component $r5, $r7, $r9, $r11, $r12;
        java.awt.event.ComponentListener $r1, $r10, $r13;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: java.awt.event.ComponentListener _componentListener>;

        if $r1 == null goto label2;

        $r9 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.awt.Component getComponent()>();

        $r10 = r0.<com.jidesoft.swing.Searchable: java.awt.event.ComponentListener _componentListener>;

        virtualinvoke $r9.<java.awt.Component: void removeComponentListener(java.awt.event.ComponentListener)>($r10);

        $r11 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.awt.Component getComponent()>();

        $r12 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Component getScrollPane(java.awt.Component)>($r11);

        if $r12 == null goto label1;

        $r13 = r0.<com.jidesoft.swing.Searchable: java.awt.event.ComponentListener _componentListener>;

        virtualinvoke $r12.<java.awt.Component: void removeComponentListener(java.awt.event.ComponentListener)>($r13);

     label1:
        r0.<com.jidesoft.swing.Searchable: java.awt.event.ComponentListener _componentListener> = null;

     label2:
        $r14 = r0.<com.jidesoft.swing.Searchable: java.awt.event.KeyListener _keyListener>;

        if $r14 == null goto label3;

        $r7 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.awt.Component getComponent()>();

        $r8 = r0.<com.jidesoft.swing.Searchable: java.awt.event.KeyListener _keyListener>;

        virtualinvoke $r7.<java.awt.Component: void removeKeyListener(java.awt.event.KeyListener)>($r8);

        r0.<com.jidesoft.swing.Searchable: java.awt.event.KeyListener _keyListener> = null;

     label3:
        $r2 = r0.<com.jidesoft.swing.Searchable: java.awt.event.FocusListener _focusListener>;

        if $r2 == null goto label4;

        $r5 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.awt.Component getComponent()>();

        $r6 = r0.<com.jidesoft.swing.Searchable: java.awt.event.FocusListener _focusListener>;

        virtualinvoke $r5.<java.awt.Component: void removeFocusListener(java.awt.event.FocusListener)>($r6);

        r0.<com.jidesoft.swing.Searchable: java.awt.event.FocusListener _focusListener> = null;

     label4:
        $r3 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.event.SearchableListener _searchableListener>;

        if $r3 == null goto label5;

        $r4 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.event.SearchableListener _searchableListener>;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void removeSearchableListener(com.jidesoft.swing.event.SearchableListener)>($r4);

        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.event.SearchableListener _searchableListener> = null;

     label5:
        return;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        java.beans.PropertyChangeListener r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<com.jidesoft.swing.Searchable: java.beans.PropertyChangeSupport _propertyChangeSupport>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        java.beans.PropertyChangeListener r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<com.jidesoft.swing.Searchable: java.beans.PropertyChangeSupport _propertyChangeSupport>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void firePropertyChangeEvent(java.lang.String)
    {
        java.lang.Integer $r6;
        com.jidesoft.swing.event.SearchableEvent $r5;
        com.jidesoft.swing.Searchable r1;
        int $i0, $i1;
        java.beans.PropertyChangeSupport $r4;
        java.lang.String r0, $r2, $r3, $r7;
        boolean $z0;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<com.jidesoft.swing.Searchable: java.lang.String _previousSearchText>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r4 = r1.<com.jidesoft.swing.Searchable: java.beans.PropertyChangeSupport _propertyChangeSupport>;

        $r3 = r1.<com.jidesoft.swing.Searchable: java.lang.String _previousSearchText>;

        virtualinvoke $r4.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("searchText", $r3, r0);

        $r5 = new com.jidesoft.swing.event.SearchableEvent;

        $i0 = virtualinvoke r1.<com.jidesoft.swing.Searchable: int getCurrentIndex()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = r1.<com.jidesoft.swing.Searchable: java.lang.String _previousSearchText>;

        specialinvoke $r5.<com.jidesoft.swing.event.SearchableEvent: void <init>(java.lang.Object,int,java.lang.String,java.lang.Object,java.lang.String)>(r1, 3004, r0, $r6, $r7);

        virtualinvoke r1.<com.jidesoft.swing.Searchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r5);

        r1.<com.jidesoft.swing.Searchable: java.lang.String _previousSearchText> = r0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label1;

        virtualinvoke r1.<com.jidesoft.swing.Searchable: void searchingTextEmpty()>();

     label1:
        return;
    }

    protected void searchingTextEmpty()
    {
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        return;
    }

    protected boolean compare(java.lang.Object, java.lang.String)
    {
        com.jidesoft.swing.Searchable r0;
        java.lang.Object r1;
        java.lang.String $r2, r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.String convertElementToString(java.lang.Object)>(r1);

        if $r2 == null goto label3;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isCaseSensitive()>();

        if $z0 == 0 goto label1;

        $r4 = $r2;

        goto label2;

     label1:
        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

     label2:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.String,java.lang.String)>($r4, r3);

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    protected boolean compare(java.lang.String, java.lang.String)
    {
        com.jidesoft.utils.WildcardSupport $r13;
        java.util.regex.Matcher $r11, $r18;
        byte $b4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.util.regex.PatternSyntaxException $r12;
        com.jidesoft.swing.Searchable r2;
        java.lang.StringBuilder $r6, $r7, $r19;
        java.util.regex.Pattern $r9, $r10, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i6, $i8;
        java.lang.String r0, $r1, $r3, r4, $r8, $r14, $r15;

        r2 := @this: com.jidesoft.swing.Searchable;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label01;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return 1;

     label02:
        $z0 = virtualinvoke r2.<com.jidesoft.swing.Searchable: boolean isWildcardEnabled()>();

        if $z0 != 0 goto label07;

        if r0 == null goto label05;

        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z6 != 0 goto label04;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 <= 0 goto label05;

        $z7 = virtualinvoke r2.<com.jidesoft.swing.Searchable: boolean isFromStart()>();

        if $z7 == 0 goto label03;

        $z8 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>(r0);

        if $z8 == 0 goto label05;

        goto label04;

     label03:
        $i3 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>(r0);

        $i6 = (int) -1;

        if $i3 == $i6 goto label05;

     label04:
        $z9 = 1;

        goto label06;

     label05:
        $z9 = 0;

     label06:
        return $z9;

     label07:
        $r3 = r2.<com.jidesoft.swing.Searchable: java.lang.String _searchText>;

        if $r3 == null goto label08;

        $r8 = r2.<com.jidesoft.swing.Searchable: java.lang.String _searchText>;

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label08;

        $r9 = r2.<com.jidesoft.swing.Searchable: java.util.regex.Pattern _pattern>;

        if $r9 == null goto label08;

        $r10 = r2.<com.jidesoft.swing.Searchable: java.util.regex.Pattern _pattern>;

        $r11 = virtualinvoke $r10.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);

        $z5 = virtualinvoke $r11.<java.util.regex.Matcher: boolean find()>();

        return $z5;

     label08:
        $r13 = virtualinvoke r2.<com.jidesoft.swing.Searchable: com.jidesoft.utils.WildcardSupport getWildcardSupport()>();

        $r14 = interfaceinvoke $r13.<com.jidesoft.utils.WildcardSupport: java.lang.String convert(java.lang.String)>(r0);

        $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z10 == 0 goto label12;

        $z3 = virtualinvoke r2.<com.jidesoft.swing.Searchable: boolean isFromStart()>();

        if $z3 == 0 goto label09;

        $z11 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>(r0);

        goto label11;

     label09:
        $i1 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>(r0);

        $i8 = (int) -1;

        if $i1 == $i8 goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        return $z11;

     label12:
        r2.<com.jidesoft.swing.Searchable: java.lang.String _searchText> = r0;

     label13:
        $z1 = virtualinvoke r2.<com.jidesoft.swing.Searchable: boolean isFromStart()>();

        if $z1 == 0 goto label14;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label15;

     label14:
        $r15 = $r14;

     label15:
        $z2 = virtualinvoke r2.<com.jidesoft.swing.Searchable: boolean isCaseSensitive()>();

        if $z2 == 0 goto label16;

        $b4 = 0;

        goto label17;

     label16:
        $b4 = 2;

     label17:
        $r16 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r15, $b4);

        r2.<com.jidesoft.swing.Searchable: java.util.regex.Pattern _pattern> = $r16;

        $r17 = r2.<com.jidesoft.swing.Searchable: java.util.regex.Pattern _pattern>;

        $r18 = virtualinvoke $r17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);

        $z12 = virtualinvoke $r18.<java.util.regex.Matcher: boolean find()>();

     label18:
        return $z12;

     label19:
        $r12 := @caughtexception;

        return 0;

        catch java.util.regex.PatternSyntaxException from label13 to label18 with label19;
    }

    public int getCursor()
    {
        int $i0;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $i0 = r0.<com.jidesoft.swing.Searchable: int _cursor>;

        return $i0;
    }

    public void setCursor(int)
    {
        int i0;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void setCursor(int,boolean)>(i0, 0);

        return;
    }

    public void setCursor(int, boolean)
    {
        java.util.Set $r1, $r2;
        java.lang.Integer $r3;
        com.jidesoft.swing.Searchable r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i1 = r0.<com.jidesoft.swing.Searchable: int _cursor>;

        if $i1 >= 0 goto label2;

     label1:
        $r1 = r0.<com.jidesoft.swing.Searchable: java.util.Set _selection>;

        interfaceinvoke $r1.<java.util.Set: void clear()>();

     label2:
        $i2 = r0.<com.jidesoft.swing.Searchable: int _cursor>;

        if $i2 < 0 goto label3;

        $r2 = r0.<com.jidesoft.swing.Searchable: java.util.Set _selection>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

     label3:
        r0.<com.jidesoft.swing.Searchable: int _cursor> = i0;

        return;
    }

    protected void highlightAll()
    {
        com.jidesoft.swing.Searchable r0;
        int $i0, i1, i2, $i4, $i6, $i8, $i10, $i12, $i14;
        java.lang.String $r1;

        r0 := @this: com.jidesoft.swing.Searchable;

        $i4 = (int) -1;

        i1 = $i4;

        i2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getSelectedIndex()>();

        $r1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.String getSearchingText()>();

     label1:
        $i6 = (int) -1;

        if i2 == $i6 goto label6;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int findNext(java.lang.String)>($r1);

        if i2 != $i0 goto label2;

        $i8 = (int) -1;

        i2 = $i8;

        goto label3;

     label2:
        i2 = $i0;

     label3:
        $i10 = (int) -1;

        if i2 == $i10 goto label5;

        $i12 = (int) -1;

        if i1 != $i12 goto label4;

        i1 = i2;

     label4:
        virtualinvoke r0.<com.jidesoft.swing.Searchable: void select(int,java.lang.String)>(i2, $r1);

     label5:
        goto label1;

     label6:
        $i14 = (int) -1;

        if i1 == $i14 goto label7;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void select(int,java.lang.String)>(i1, $r1);

     label7:
        return;
    }

    protected void cancelHighlightAll()
    {
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        return;
    }

    protected void select(int, java.lang.String)
    {
        com.jidesoft.swing.event.SearchableEvent $r6, $r7;
        com.jidesoft.swing.Searchable r0;
        int i0, $i2, $i4;
        java.lang.Object $r3;
        java.lang.String r2, $r5;

        r0 := @this: com.jidesoft.swing.Searchable;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $i2 = (int) -1;

        if i0 == $i2 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void setSelectedIndex(int,boolean)>(i0, 1);

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void setCursor(int,boolean)>(i0, 1);

        $r3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i0);

        $r6 = new com.jidesoft.swing.event.SearchableEvent;

        $r5 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.String convertElementToString(java.lang.Object)>($r3);

        specialinvoke $r6.<com.jidesoft.swing.event.SearchableEvent: void <init>(java.lang.Object,int,java.lang.String,java.lang.Object,java.lang.String)>(r0, 3002, r2, $r3, $r5);

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r6);

        goto label2;

     label1:
        $i4 = (int) -1;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void setSelectedIndex(int,boolean)>($i4, 0);

        $r7 = new com.jidesoft.swing.event.SearchableEvent;

        specialinvoke $r7.<com.jidesoft.swing.event.SearchableEvent: void <init>(java.lang.Object,int,java.lang.String)>(r0, 3003, r2);

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r7);

     label2:
        return;
    }

    public int findNext(java.lang.String)
    {
        byte $b3;
        int $i0, $i1, $i2, i4, i5, $i6, $i8, $i10, $i12;
        java.lang.String r1, r2, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.jidesoft.swing.Searchable r0;
        java.lang.Object $r3, $r4, $r5;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isCaseSensitive()>();

        if $z0 == 0 goto label01;

        $r6 = r1;

        goto label02;

     label01:
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label02:
        r2 = $r6;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getElementCount()>();

        if $i0 != 0 goto label05;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label03;

        $b3 = -1;

        goto label04;

     label03:
        $b3 = 0;

     label04:
        return $b3;

     label05:
        $i1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getCurrentIndex()>();

        i4 = $i1 + 1;

     label06:
        if i4 >= $i0 goto label08;

        $r5 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i4);

        $z4 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r5, r2);

        if $z4 == 0 goto label07;

        return i4;

     label07:
        i4 = i4 + 1;

        goto label06;

     label08:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isRepeats()>();

        if $z1 == 0 goto label11;

        i5 = 0;

     label09:
        if i5 >= $i1 goto label11;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i5);

        $z3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r4, r2);

        if $z3 == 0 goto label10;

        return i5;

     label10:
        i5 = i5 + 1;

        goto label09;

     label11:
        $i8 = (int) -1;

        if $i1 != $i8 goto label12;

        $i10 = (int) -1;

        $i6 = $i10;

        goto label14;

     label12:
        $r3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>($i1);

        $z2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r3, r2);

        if $z2 == 0 goto label13;

        $i6 = $i1;

        goto label14;

     label13:
        $i12 = (int) -1;

        $i6 = $i12;

     label14:
        return $i6;
    }

    protected int getCurrentIndex()
    {
        java.util.Set $r1, $r3;
        java.lang.Integer $r2;
        com.jidesoft.swing.Searchable r0;
        int $i0, $i1, $i2, $i3, $i5;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: java.util.Set _selection>;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getSelectedIndex()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $i2 = r0.<com.jidesoft.swing.Searchable: int _cursor>;

        $i5 = (int) -1;

        if $i2 == $i5 goto label1;

        $i3 = r0.<com.jidesoft.swing.Searchable: int _cursor>;

        goto label2;

     label1:
        $i3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getSelectedIndex()>();

     label2:
        return $i3;

     label3:
        $r3 = r0.<com.jidesoft.swing.Searchable: java.util.Set _selection>;

        interfaceinvoke $r3.<java.util.Set: void clear()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getSelectedIndex()>();

        return $i1;
    }

    public int findPrevious(java.lang.String)
    {
        byte $b3;
        int $i0, $i1, $i2, i4, i5, $i6, $i8, $i10, $i12, $i14, $i16;
        java.lang.String r1, r2, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.jidesoft.swing.Searchable r0;
        java.lang.Object $r3, $r4, $r5;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isCaseSensitive()>();

        if $z0 == 0 goto label01;

        $r6 = r1;

        goto label02;

     label01:
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label02:
        r2 = $r6;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getElementCount()>();

        if $i0 != 0 goto label05;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label03;

        $b3 = -1;

        goto label04;

     label03:
        $b3 = 0;

     label04:
        return $b3;

     label05:
        $i1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getCurrentIndex()>();

        i4 = $i1 - 1;

     label06:
        if i4 < 0 goto label08;

        $r5 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i4);

        $z4 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r5, r2);

        if $z4 == 0 goto label07;

        return i4;

     label07:
        $i8 = (int) -1;

        i4 = i4 + $i8;

        goto label06;

     label08:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isRepeats()>();

        if $z1 == 0 goto label11;

        i5 = $i0 - 1;

     label09:
        if i5 < $i1 goto label11;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i5);

        $z3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r4, r2);

        if $z3 == 0 goto label10;

        return i5;

     label10:
        $i10 = (int) -1;

        i5 = i5 + $i10;

        goto label09;

     label11:
        $i12 = (int) -1;

        if $i1 != $i12 goto label12;

        $i14 = (int) -1;

        $i6 = $i14;

        goto label14;

     label12:
        $r3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>($i1);

        $z2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r3, r2);

        if $z2 == 0 goto label13;

        $i6 = $i1;

        goto label14;

     label13:
        $i16 = (int) -1;

        $i6 = $i16;

     label14:
        return $i6;
    }

    public int findFromCursor(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, i4, i5, i6, $i7, $i8, $i9, i10, i11, i12, $i14, $i16, $i18, $i20;
        java.lang.String r1, $r4, r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.jidesoft.swing.Searchable r0;
        java.lang.Object $r2, $r3;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isCountMatch()>();

        if $z0 == 0 goto label03;

        $z5 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isReverseOrder()>();

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void setReverseOrder(boolean)>(0);

        $i3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getCurrentIndex()>();

        i4 = $i3;

        if $i3 >= 0 goto label01;

        i4 = 0;

     label01:
        $i14 = (int) -1;

        i5 = $i14;

        $i16 = (int) -1;

        r0.<com.jidesoft.swing.Searchable: int _matchCount> = $i16;

     label02:
        virtualinvoke r0.<com.jidesoft.swing.Searchable: void setSelectedIndex(int,boolean)>(i5, 0);

        i6 = i5;

        $i7 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int findNext(java.lang.String)>(r1);

        i5 = $i7;

        $i8 = r0.<com.jidesoft.swing.Searchable: int _matchCount>;

        $i9 = $i8 + 1;

        r0.<com.jidesoft.swing.Searchable: int _matchCount> = $i9;

        if $i7 > i6 goto label02;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void setSelectedIndex(int,boolean)>(i4, 0);

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void setReverseOrder(boolean)>($z5);

     label03:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isReverseOrder()>();

        if $z1 == 0 goto label04;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int reverseFindFromCursor(java.lang.String)>(r1);

        return $i2;

     label04:
        $z2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isCaseSensitive()>();

        if $z2 == 0 goto label05;

        $r4 = r1;

        goto label06;

     label05:
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label06:
        r5 = $r4;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getCurrentIndex()>();

        i10 = $i0;

        if $i0 >= 0 goto label07;

        i10 = 0;

     label07:
        $i1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getElementCount()>();

        if $i1 != 0 goto label08;

        $i18 = (int) -1;

        return $i18;

     label08:
        i11 = i10;

     label09:
        if i11 >= $i1 goto label11;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i11);

        $z4 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r3, r5);

        if $z4 == 0 goto label10;

        return i11;

     label10:
        i11 = i11 + 1;

        goto label09;

     label11:
        i12 = 0;

     label12:
        if i12 >= i10 goto label14;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i12);

        $z3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r2, r5);

        if $z3 == 0 goto label13;

        return i12;

     label13:
        i12 = i12 + 1;

        goto label12;

     label14:
        $i20 = (int) -1;

        return $i20;
    }

    public int reverseFindFromCursor(java.lang.String)
    {
        int $i0, $i1, $i2, i3, i4, i5, $i7, $i9, $i11, $i13;
        java.lang.String r1, r2, $r5;
        boolean $z0, $z1, $z2, $z3;
        com.jidesoft.swing.Searchable r0;
        java.lang.Object $r3, $r4;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isReverseOrder()>();

        if $z0 != 0 goto label01;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int findFromCursor(java.lang.String)>(r1);

        return $i2;

     label01:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isCaseSensitive()>();

        if $z1 == 0 goto label02;

        $r5 = r1;

        goto label03;

     label02:
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label03:
        r2 = $r5;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getCurrentIndex()>();

        i3 = $i0;

        if $i0 >= 0 goto label04;

        i3 = 0;

     label04:
        $i1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getElementCount()>();

        if $i1 != 0 goto label05;

        $i7 = (int) -1;

        return $i7;

     label05:
        i4 = i3;

     label06:
        if i4 < 0 goto label08;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i4);

        $z3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r4, r2);

        if $z3 == 0 goto label07;

        return i4;

     label07:
        $i9 = (int) -1;

        i4 = i4 + $i9;

        goto label06;

     label08:
        i5 = $i1 - 1;

     label09:
        if i5 < i3 goto label11;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i5);

        $z2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r3, r2);

        if $z2 == 0 goto label10;

        return i5;

     label10:
        $i11 = (int) -1;

        i5 = i5 + $i11;

        goto label09;

     label11:
        $i13 = (int) -1;

        return $i13;
    }

    public int findFirst(java.lang.String)
    {
        byte $b3;
        com.jidesoft.swing.Searchable r0;
        int $i0, $i1, $i2, i4, $i6;
        java.lang.Object $r3;
        java.lang.String r1, r2, $r4;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isCaseSensitive()>();

        if $z0 == 0 goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label2:
        r2 = $r4;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getElementCount()>();

        if $i0 != 0 goto label5;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label3;

        $b3 = -1;

        goto label4;

     label3:
        $b3 = 0;

     label4:
        return $b3;

     label5:
        i4 = 0;

     label6:
        if i4 >= $i0 goto label8;

        $i1 = specialinvoke r0.<com.jidesoft.swing.Searchable: int getIndex(int,int)>($i0, i4);

        $r3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>($i1);

        $z1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r3, r2);

        if $z1 == 0 goto label7;

        return $i1;

     label7:
        i4 = i4 + 1;

        goto label6;

     label8:
        $i6 = (int) -1;

        return $i6;
    }

    public int findLast(java.lang.String)
    {
        byte $b2;
        com.jidesoft.swing.Searchable r0;
        int $i0, $i1, i3, $i5, $i7;
        java.lang.Object $r3;
        java.lang.String r1, r2, $r4;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isCaseSensitive()>();

        if $z0 == 0 goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label2:
        r2 = $r4;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getElementCount()>();

        if $i0 != 0 goto label5;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        $b2 = -1;

        goto label4;

     label3:
        $b2 = 0;

     label4:
        return $b2;

     label5:
        i3 = $i0 - 1;

     label6:
        if i3 < 0 goto label8;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i3);

        $z1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r3, r2);

        if $z1 == 0 goto label7;

        return i3;

     label7:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label6;

     label8:
        $i7 = (int) -1;

        return $i7;
    }

    protected void keyTypedOrPressed(java.awt.event.KeyEvent)
    {
        char $c2;
        java.awt.event.KeyEvent r2;
        com.jidesoft.swing.Searchable r0;
        int $i0, $i1;
        java.lang.String r5;
        com.jidesoft.swing.SearchableProvider $r1, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.jidesoft.swing.Searchable;

        r2 := @parameter0: java.awt.event.KeyEvent;

        $r1 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider>;

        $z3 = interfaceinvoke $r3.<com.jidesoft.swing.SearchableProvider: boolean isPassive()>();

        if $z3 == 0 goto label1;

        $r4 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider>;

        interfaceinvoke $r4.<com.jidesoft.swing.SearchableProvider: void processKeyEvent(java.awt.event.KeyEvent)>(r2);

        return;

     label1:
        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isActivateKey(java.awt.event.KeyEvent)>(r2);

        if $z0 == 0 goto label5;

        r5 = "";

        $i0 = virtualinvoke r2.<java.awt.event.KeyEvent: int getID()>();

        if $i0 != 400 goto label4;

        $z1 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean isMenuShortcutKeyDown(java.awt.event.InputEvent)>(r2);

        if $z1 == 0 goto label2;

        return;

     label2:
        $z2 = virtualinvoke r2.<java.awt.event.KeyEvent: boolean isAltDown()>();

        if $z2 == 0 goto label3;

        return;

     label3:
        $c2 = virtualinvoke r2.<java.awt.event.KeyEvent: char getKeyChar()>();

        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

     label4:
        virtualinvoke r0.<com.jidesoft.swing.Searchable: void showPopup(java.lang.String)>(r5);

        $i1 = virtualinvoke r2.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i1 == 10 goto label5;

        virtualinvoke r2.<java.awt.event.KeyEvent: void consume()>();

     label5:
        return;
    }

    private int getIndex(int, int)
    {
        com.jidesoft.swing.Searchable r0;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isReverseOrder()>();

        if $z0 == 0 goto label1;

        $i2 = i1 - i0;

        $i3 = $i2 - 1;

        goto label2;

     label1:
        $i3 = i0;

     label2:
        return $i3;
    }

    public void showPopup(java.lang.String)
    {
        com.jidesoft.swing.Searchable$5 $r5;
        com.jidesoft.swing.Searchable r0;
        com.jidesoft.swing.Searchable$SearchPopup $r4;
        java.lang.String r3;
        com.jidesoft.swing.event.SearchableEvent $r2;
        com.jidesoft.swing.SearchableProvider $r1;

        r0 := @this: com.jidesoft.swing.Searchable;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider>;

        if $r1 != null goto label1;

        $r2 = new com.jidesoft.swing.event.SearchableEvent;

        specialinvoke $r2.<com.jidesoft.swing.event.SearchableEvent: void <init>(java.lang.Object,int,java.lang.String)>(r0, 2999, r3);

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r2);

        $r4 = virtualinvoke r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup createSearchPopup(java.lang.String)>(r3);

        specialinvoke r0.<com.jidesoft.swing.Searchable: void showPopup(com.jidesoft.swing.Searchable$SearchPopup)>($r4);

        $r5 = new com.jidesoft.swing.Searchable$5;

        specialinvoke $r5.<com.jidesoft.swing.Searchable$5: void <init>(com.jidesoft.swing.Searchable)>(r0);

        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider> = $r5;

     label1:
        return;
    }

    protected com.jidesoft.swing.Searchable$SearchPopup createSearchPopup(java.lang.String)
    {
        com.jidesoft.swing.Searchable$DefaultSearchPopup $r0;
        java.lang.String r2;
        com.jidesoft.swing.Searchable r1;

        r1 := @this: com.jidesoft.swing.Searchable;

        r2 := @parameter0: java.lang.String;

        $r0 = new com.jidesoft.swing.Searchable$DefaultSearchPopup;

        specialinvoke $r0.<com.jidesoft.swing.Searchable$DefaultSearchPopup: void <init>(com.jidesoft.swing.Searchable,java.lang.String)>(r1, r2);

        return $r0;
    }

    public java.lang.String getSearchingText()
    {
        com.jidesoft.swing.Searchable r0;
        java.lang.String $r3;
        com.jidesoft.swing.SearchableProvider $r1, $r2;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider>;

        $r3 = interfaceinvoke $r2.<com.jidesoft.swing.SearchableProvider: java.lang.String getSearchingText()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }

    private void showPopup(com.jidesoft.swing.Searchable$SearchPopup)
    {
        com.jidesoft.swing.Searchable$SearchPopup r4, $r6, $r7, $r12, $r14, $r15, $r18, $r23;
        java.awt.Point $r5;
        java.lang.Integer $r11;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        javax.swing.JComponent $r1, $r8, $r9;
        java.io.PrintStream $r16;
        javax.swing.JRootPane $r2;
        com.jidesoft.swing.Searchable r0;
        javax.swing.JLayeredPane $r3, $r10, $r13, $r17, $r19, $r20, $r21, $r22;

        r0 := @this: com.jidesoft.swing.Searchable;

        r4 := @parameter0: com.jidesoft.swing.Searchable$SearchPopup;

        $r1 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        $r2 = virtualinvoke $r1.<javax.swing.JComponent: javax.swing.JRootPane getRootPane()>();

        if $r2 == null goto label01;

        $r22 = virtualinvoke $r2.<javax.swing.JRootPane: javax.swing.JLayeredPane getLayeredPane()>();

        r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane> = $r22;

        goto label02;

     label01:
        r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane> = null;

     label02:
        $r3 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        if $r3 == null goto label03;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isHeavyweightComponentEnabled()>();

        if $z0 == 0 goto label06;

     label03:
        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup> = r4;

        $r5 = specialinvoke r0.<com.jidesoft.swing.Searchable: java.awt.Point updateSizeAndLocation()>();

        if $r5 == null goto label04;

        $i1 = $r5.<java.awt.Point: int x>;

        $i0 = $r5.<java.awt.Point: int y>;

        virtualinvoke r4.<com.jidesoft.swing.Searchable$SearchPopup: void showPopup(int,int)>($i1, $i0);

        $r6 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        virtualinvoke $r6.<com.jidesoft.swing.Searchable$SearchPopup: void setVisible(boolean)>(1);

        goto label05;

     label04:
        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup> = null;

     label05:
        goto label13;

     label06:
        $r7 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        if $r7 == null goto label07;

        $r17 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        if $r17 == null goto label07;

        $r19 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        $r18 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        virtualinvoke $r19.<javax.swing.JLayeredPane: void remove(java.awt.Component)>($r18);

        $r20 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        virtualinvoke $r20.<javax.swing.JLayeredPane: void validate()>();

        $r21 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        virtualinvoke $r21.<javax.swing.JLayeredPane: void repaint()>();

        r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane> = null;

        goto label09;

     label07:
        $r8 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        $z1 = virtualinvoke $r8.<javax.swing.JComponent: boolean isShowing()>();

        if $z1 != 0 goto label08;

        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup> = null;

        goto label09;

     label08:
        r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup> = r4;

     label09:
        $r23 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        if $r23 == null goto label10;

        $r9 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        $z2 = virtualinvoke $r9.<javax.swing.JComponent: boolean isDisplayable()>();

        if $z2 != 0 goto label11;

     label10:
        return;

     label11:
        $r10 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        if $r10 != null goto label12;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("Failed to find layeredPane.");

        return;

     label12:
        $r13 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        $r12 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        $r11 = <javax.swing.JLayeredPane: java.lang.Integer POPUP_LAYER>;

        virtualinvoke $r13.<javax.swing.JLayeredPane: void add(java.awt.Component,java.lang.Object)>($r12, $r11);

        specialinvoke r0.<com.jidesoft.swing.Searchable: java.awt.Point updateSizeAndLocation()>();

        $r14 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        virtualinvoke $r14.<com.jidesoft.swing.Searchable$SearchPopup: void setVisible(boolean)>(1);

        $r15 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        virtualinvoke $r15.<com.jidesoft.swing.Searchable$SearchPopup: void validate()>();

     label13:
        return;
    }

    private java.awt.Point updateSizeAndLocation()
    {
        com.jidesoft.swing.Searchable$SearchPopup $r2, $r3, $r6, $r7, $r8;
        java.awt.Point $r5, $r12, r18;
        boolean $z0, $z1, $z2;
        java.awt.IllegalComponentStateException $r15, $r16;
        java.awt.Component $r1, r17;
        java.awt.Dimension $r4;
        com.jidesoft.swing.Searchable r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        javax.swing.JComponent $r14;
        javax.swing.JLayeredPane $r9, $r10, $r11, $r13;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.awt.Component getPopupLocationRelativeTo()>();

        r17 = $r1;

        if $r1 != null goto label01;

        $r14 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        r17 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Component getScrollPane(java.awt.Component)>($r14);

     label01:
        if r17 != null goto label02;

        r17 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

     label02:
        $r2 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        if $r2 == null goto label13;

        $r3 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        $r4 = virtualinvoke $r3.<com.jidesoft.swing.Searchable$SearchPopup: java.awt.Dimension getPreferredSize()>();

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getPopupLocation()>();

        lookupswitch($i0)
        {
            case 1: goto label06;
            case 3: goto label03;
            default: goto label06;
        };

     label03:
        $r5 = virtualinvoke r17.<java.awt.Component: java.awt.Point getLocationOnScreen()>();

        r18 = $r5;

        $i1 = $r5.<java.awt.Point: int y>;

        $i2 = virtualinvoke r17.<java.awt.Component: int getHeight()>();

        $i3 = $i1 + $i2;

        $r5.<java.awt.Point: int y> = $i3;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isHeavyweightComponentEnabled()>();

        if $z0 != 0 goto label04;

        $r9 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        staticinvoke <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>($r5, $r9);

        $i5 = $r5.<java.awt.Point: int y>;

        $i4 = $r4.<java.awt.Dimension: int height>;

        $i6 = $i5 + $i4;

        $r10 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        $i7 = virtualinvoke $r10.<javax.swing.JLayeredPane: int getHeight()>();

        if $i6 <= $i7 goto label04;

        $r11 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        $i8 = virtualinvoke $r11.<javax.swing.JLayeredPane: int getHeight()>();

        $i9 = $r4.<java.awt.Dimension: int height>;

        $i10 = $i8 - $i9;

        $r5.<java.awt.Point: int y> = $i10;

     label04:
        goto label10;

     label05:
        $r16 := @caughtexception;

        return null;

     label06:
        $r12 = virtualinvoke r17.<java.awt.Component: java.awt.Point getLocationOnScreen()>();

        r18 = $r12;

        $z2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isHeavyweightComponentEnabled()>();

        if $z2 != 0 goto label07;

        $r13 = r0.<com.jidesoft.swing.Searchable: javax.swing.JLayeredPane _layeredPane>;

        staticinvoke <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>($r12, $r13);

     label07:
        $i12 = $r12.<java.awt.Point: int y>;

        $i11 = $r4.<java.awt.Dimension: int height>;

        $i13 = $i12 - $i11;

        $r12.<java.awt.Point: int y> = $i13;

        $i14 = $r12.<java.awt.Point: int y>;

        if $i14 >= 0 goto label08;

        $r12.<java.awt.Point: int y> = 0;

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

        return null;

     label10:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isHeavyweightComponentEnabled()>();

        if $z1 != 0 goto label11;

        $r7 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        virtualinvoke $r7.<com.jidesoft.swing.Searchable$SearchPopup: void setLocation(java.awt.Point)>(r18);

        $r8 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        virtualinvoke $r8.<com.jidesoft.swing.Searchable$SearchPopup: void setSize(java.awt.Dimension)>($r4);

        goto label12;

     label11:
        $r6 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        virtualinvoke $r6.<com.jidesoft.swing.Searchable$SearchPopup: void packPopup()>();

     label12:
        return r18;

     label13:
        return null;

        catch java.awt.IllegalComponentStateException from label03 to label04 with label05;
        catch java.awt.IllegalComponentStateException from label06 to label08 with label09;
    }

    protected boolean isFindFirstKey(java.awt.event.KeyEvent)
    {
        com.jidesoft.swing.Searchable r1;
        int $i0;
        java.awt.event.KeyEvent r0;
        boolean $z0;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i0 != 36 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean isFindLastKey(java.awt.event.KeyEvent)
    {
        com.jidesoft.swing.Searchable r1;
        int $i0;
        java.awt.event.KeyEvent r0;
        boolean $z0;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i0 != 35 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean isFindPreviousKey(java.awt.event.KeyEvent)
    {
        com.jidesoft.swing.Searchable r1;
        int $i0;
        java.awt.event.KeyEvent r0;
        boolean $z0;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i0 != 38 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean isFindNextKey(java.awt.event.KeyEvent)
    {
        com.jidesoft.swing.Searchable r1;
        int $i0;
        java.awt.event.KeyEvent r0;
        boolean $z0;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i0 != 40 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean isNavigationKey(java.awt.event.KeyEvent)
    {
        com.jidesoft.swing.Searchable r0;
        java.awt.event.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.awt.event.KeyEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isFindFirstKey(java.awt.event.KeyEvent)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isFindLastKey(java.awt.event.KeyEvent)>(r1);

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isFindNextKey(java.awt.event.KeyEvent)>(r1);

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isFindPreviousKey(java.awt.event.KeyEvent)>(r1);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    protected boolean isActivateKey(java.awt.event.KeyEvent)
    {
        com.jidesoft.swing.Searchable r1;
        int $i1, $i2, $i3;
        char $c0;
        java.awt.event.KeyEvent r0;
        boolean $z0;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $c0 = virtualinvoke r0.<java.awt.event.KeyEvent: char getKeyChar()>();

        $i1 = virtualinvoke r0.<java.awt.event.KeyEvent: int getID()>();

        if $i1 != 400 goto label1;

        $i2 = (int) $c0;

        if $i2 <= 32 goto label1;

        $i3 = (int) $c0;

        if $i3 == 127 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean isDeactivateKey(java.awt.event.KeyEvent)
    {
        com.jidesoft.swing.Searchable r1;
        int $i0;
        java.awt.event.KeyEvent r0;
        boolean $z0;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i0 == 10 goto label1;

        if $i0 == 27 goto label1;

        if $i0 == 33 goto label1;

        if $i0 == 34 goto label1;

        if $i0 == 36 goto label1;

        if $i0 == 35 goto label1;

        if $i0 == 37 goto label1;

        if $i0 == 39 goto label1;

        if $i0 == 38 goto label1;

        if $i0 != 40 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected boolean isSelectAllKey(java.awt.event.KeyEvent)
    {
        com.jidesoft.swing.Searchable r1;
        int $i0;
        java.awt.event.KeyEvent r0;
        boolean $z0, $z1;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $z0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean isMenuShortcutKeyDown(java.awt.event.InputEvent)>(r0);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i0 != 65 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected boolean isIncrementalSelectKey(java.awt.event.KeyEvent)
    {
        java.awt.event.KeyEvent r0;
        boolean $z0;
        com.jidesoft.swing.Searchable r1;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $z0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean isMenuShortcutKeyDown(java.awt.event.InputEvent)>(r0);

        return $z0;
    }

    public java.awt.Color getMismatchForeground()
    {
        java.awt.Color $r1, $r2, $r3;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: java.awt.Color _mismatchForeground>;

        if $r1 != null goto label1;

        $r3 = <java.awt.Color: java.awt.Color RED>;

        return $r3;

     label1:
        $r2 = r0.<com.jidesoft.swing.Searchable: java.awt.Color _mismatchForeground>;

        return $r2;
    }

    public void setMismatchForeground(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.Searchable: java.awt.Color _mismatchForeground> = r1;

        return;
    }

    public boolean isCaseSensitive()
    {
        com.jidesoft.swing.Searchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $z0 = r0.<com.jidesoft.swing.Searchable: boolean _caseSensitive>;

        return $z0;
    }

    public void setCaseSensitive(boolean)
    {
        com.jidesoft.swing.Searchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.Searchable: boolean _caseSensitive> = z0;

        return;
    }

    public int getSearchingDelay()
    {
        int $i0;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $i0 = r0.<com.jidesoft.swing.Searchable: int _searchingDelay>;

        return $i0;
    }

    public void setSearchingDelay(int)
    {
        int i0;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.Searchable: int _searchingDelay> = i0;

        return;
    }

    public boolean isRepeats()
    {
        com.jidesoft.swing.Searchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $z0 = r0.<com.jidesoft.swing.Searchable: boolean _repeats>;

        return $z0;
    }

    public void setRepeats(boolean)
    {
        com.jidesoft.swing.Searchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.Searchable: boolean _repeats> = z0;

        return;
    }

    public java.awt.Color getForeground()
    {
        java.awt.Color $r1, $r2, $r3;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: java.awt.Color _foreground>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("ToolTip.foreground");

        return $r3;

     label1:
        $r2 = r0.<com.jidesoft.swing.Searchable: java.awt.Color _foreground>;

        return $r2;
    }

    public void setForeground(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.Searchable: java.awt.Color _foreground> = r1;

        return;
    }

    public java.awt.Color getBackground()
    {
        java.awt.Color $r1, $r2, $r3;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: java.awt.Color _background>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("ToolTip.background");

        return $r3;

     label1:
        $r2 = r0.<com.jidesoft.swing.Searchable: java.awt.Color _background>;

        return $r2;
    }

    public void setBackground(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.Searchable: java.awt.Color _background> = r1;

        return;
    }

    public boolean isWildcardEnabled()
    {
        com.jidesoft.swing.Searchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $z0 = r0.<com.jidesoft.swing.Searchable: boolean _wildcardEnabled>;

        return $z0;
    }

    public void setWildcardEnabled(boolean)
    {
        com.jidesoft.swing.Searchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.Searchable: boolean _wildcardEnabled> = z0;

        return;
    }

    public com.jidesoft.utils.WildcardSupport getWildcardSupport()
    {
        com.jidesoft.utils.DefaultWildcardSupport $r3;
        com.jidesoft.swing.Searchable r0;
        com.jidesoft.utils.WildcardSupport $r1, $r2;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.utils.WildcardSupport _wildcardSupport>;

        if $r1 != null goto label1;

        $r3 = new com.jidesoft.utils.DefaultWildcardSupport;

        specialinvoke $r3.<com.jidesoft.utils.DefaultWildcardSupport: void <init>()>();

        r0.<com.jidesoft.swing.Searchable: com.jidesoft.utils.WildcardSupport _wildcardSupport> = $r3;

     label1:
        $r2 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.utils.WildcardSupport _wildcardSupport>;

        return $r2;
    }

    public void setWildcardSupport(com.jidesoft.utils.WildcardSupport)
    {
        com.jidesoft.utils.WildcardSupport r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: com.jidesoft.utils.WildcardSupport;

        r0.<com.jidesoft.swing.Searchable: com.jidesoft.utils.WildcardSupport _wildcardSupport> = r1;

        return;
    }

    public java.lang.String getSearchLabel()
    {
        com.jidesoft.swing.Searchable r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: java.lang.String _searchLabel>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.String getResourceString(java.lang.String)>("Searchable.searchFor");

        return $r3;

     label1:
        $r2 = r0.<com.jidesoft.swing.Searchable: java.lang.String _searchLabel>;

        return $r2;
    }

    public void setSearchLabel(java.lang.String)
    {
        java.lang.String r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.lang.String;

        r0.<com.jidesoft.swing.Searchable: java.lang.String _searchLabel> = r1;

        return;
    }

    public void addSearchableListener(com.jidesoft.swing.event.SearchableListener)
    {
        javax.swing.event.EventListenerList $r2;
        com.jidesoft.swing.event.SearchableListener r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: com.jidesoft.swing.event.SearchableListener;

        $r2 = r0.<com.jidesoft.swing.Searchable: javax.swing.event.EventListenerList listenerList>;

        virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "Lcom/jidesoft/swing/event/SearchableListener;", r1);

        return;
    }

    public void removeSearchableListener(com.jidesoft.swing.event.SearchableListener)
    {
        javax.swing.event.EventListenerList $r2;
        com.jidesoft.swing.event.SearchableListener r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: com.jidesoft.swing.event.SearchableListener;

        $r2 = r0.<com.jidesoft.swing.Searchable: javax.swing.event.EventListenerList listenerList>;

        virtualinvoke $r2.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>(class "Lcom/jidesoft/swing/event/SearchableListener;", r1);

        return;
    }

    public com.jidesoft.swing.event.SearchableListener[] getSearchableListeners()
    {
        java.util.EventListener[] $r2;
        javax.swing.event.EventListenerList $r1;
        com.jidesoft.swing.Searchable r0;
        com.jidesoft.swing.event.SearchableListener[] $r3;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: javax.swing.event.EventListenerList listenerList>;

        $r2 = virtualinvoke $r1.<javax.swing.event.EventListenerList: java.util.EventListener[] getListeners(java.lang.Class)>(class "Lcom/jidesoft/swing/event/SearchableListener;");

        $r3 = (com.jidesoft.swing.event.SearchableListener[]) $r2;

        return $r3;
    }

    public boolean isSearchableListenerInstalled(com.jidesoft.swing.event.SearchableListener)
    {
        com.jidesoft.swing.Searchable r0;
        com.jidesoft.swing.event.SearchableListener[] $r1;
        int i0, i1;
        com.jidesoft.swing.event.SearchableListener r2, r3;

        r0 := @this: com.jidesoft.swing.Searchable;

        r3 := @parameter0: com.jidesoft.swing.event.SearchableListener;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.event.SearchableListener[] getSearchableListeners()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        if r2 != r3 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)
    {
        java.lang.Object[] $r2;
        com.jidesoft.swing.event.SearchableListener $r6;
        com.jidesoft.swing.event.SearchableEvent r5;
        javax.swing.event.EventListenerList $r1;
        com.jidesoft.swing.Searchable r0;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r3, $r4;

        r0 := @this: com.jidesoft.swing.Searchable;

        r5 := @parameter0: com.jidesoft.swing.event.SearchableEvent;

        $r1 = r0.<com.jidesoft.swing.Searchable: javax.swing.event.EventListenerList listenerList>;

        $r2 = virtualinvoke $r1.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>();

        $i0 = lengthof $r2;

        i2 = $i0 - 2;

     label1:
        if i2 < 0 goto label3;

        $r3 = $r2[i2];

        if $r3 != class "Lcom/jidesoft/swing/event/SearchableListener;" goto label2;

        $i1 = i2 + 1;

        $r4 = $r2[$i1];

        $r6 = (com.jidesoft.swing.event.SearchableListener) $r4;

        interfaceinvoke $r6.<com.jidesoft.swing.event.SearchableListener: void searchableEventFired(com.jidesoft.swing.event.SearchableEvent)>(r5);

     label2:
        $i4 = (int) -2;

        i2 = i2 + $i4;

        goto label1;

     label3:
        return;
    }

    public java.awt.Component getComponent()
    {
        javax.swing.JComponent $r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        return $r1;
    }

    public int getPopupLocation()
    {
        int $i0;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $i0 = r0.<com.jidesoft.swing.Searchable: int _popupLocation>;

        return $i0;
    }

    public void setPopupLocation(int)
    {
        int i0;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.Searchable: int _popupLocation> = i0;

        return;
    }

    public boolean isReverseOrder()
    {
        com.jidesoft.swing.Searchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $z0 = r0.<com.jidesoft.swing.Searchable: boolean _reverseOrder>;

        return $z0;
    }

    public void setReverseOrder(boolean)
    {
        com.jidesoft.swing.Searchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.Searchable: boolean _reverseOrder> = z0;

        return;
    }

    protected java.lang.String getResourceString(java.lang.String)
    {
        javax.swing.JComponent $r1, $r5;
        java.util.ResourceBundle $r2;
        java.util.Locale $r6;
        com.jidesoft.swing.Searchable r0;
        java.lang.String r3, $r4;

        r0 := @this: com.jidesoft.swing.Searchable;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        if $r1 == null goto label1;

        $r5 = r0.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        $r6 = virtualinvoke $r5.<javax.swing.JComponent: java.util.Locale getLocale()>();

        goto label2;

     label1:
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        $r2 = staticinvoke <com.jidesoft.swing.Resource: java.util.ResourceBundle getResourceBundle(java.util.Locale)>($r6);

        $r4 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r3);

        return $r4;
    }

    public boolean isPopupVisible()
    {
        com.jidesoft.swing.Searchable$SearchPopup $r1;
        com.jidesoft.swing.Searchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isHeavyweightComponentEnabled()
    {
        com.jidesoft.swing.Searchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $z0 = r0.<com.jidesoft.swing.Searchable: boolean _heavyweightComponentEnabled>;

        return $z0;
    }

    public void setHeavyweightComponentEnabled(boolean)
    {
        com.jidesoft.swing.Searchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.Searchable: boolean _heavyweightComponentEnabled> = z0;

        return;
    }

    public java.awt.Component getPopupLocationRelativeTo()
    {
        java.awt.Component $r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: java.awt.Component _popupLocationRelativeTo>;

        return $r1;
    }

    public void setPopupLocationRelativeTo(java.awt.Component)
    {
        java.awt.Component r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.awt.Component;

        r0.<com.jidesoft.swing.Searchable: java.awt.Component _popupLocationRelativeTo> = r1;

        return;
    }

    public boolean isFromStart()
    {
        com.jidesoft.swing.Searchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $z0 = r0.<com.jidesoft.swing.Searchable: boolean _fromStart>;

        return $z0;
    }

    public void setFromStart(boolean)
    {
        com.jidesoft.swing.Searchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.jidesoft.swing.Searchable: void hidePopup()>();

        r0.<com.jidesoft.swing.Searchable: boolean _fromStart> = z0;

        return;
    }

    public static com.jidesoft.swing.Searchable getSearchable(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        com.jidesoft.swing.Searchable $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @parameter0: javax.swing.JComponent;

        $r1 = virtualinvoke r0.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("Searchable");

        $z0 = $r1 instanceof com.jidesoft.swing.Searchable;

        if $z0 == 0 goto label1;

        $r2 = (com.jidesoft.swing.Searchable) $r1;

        return $r2;

     label1:
        return null;
    }

    private void updateClientProperty(javax.swing.JComponent, com.jidesoft.swing.Searchable)
    {
        javax.swing.JComponent r0, $r2;
        com.jidesoft.swing.Searchable r1, r4, $r5;
        java.lang.Object $r3;
        boolean $z0;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: javax.swing.JComponent;

        r4 := @parameter1: com.jidesoft.swing.Searchable;

        if r0 == null goto label2;

        $r2 = r1.<com.jidesoft.swing.Searchable: javax.swing.JComponent _component>;

        $r3 = virtualinvoke $r2.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("Searchable");

        $z0 = $r3 instanceof com.jidesoft.swing.Searchable;

        if $z0 == 0 goto label1;

        $r5 = (com.jidesoft.swing.Searchable) $r3;

        virtualinvoke $r5.<com.jidesoft.swing.Searchable: void uninstallListeners()>();

     label1:
        virtualinvoke r0.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("Searchable", r4);

     label2:
        return;
    }

    public boolean isProcessModelChangeEvent()
    {
        com.jidesoft.swing.Searchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $z0 = r0.<com.jidesoft.swing.Searchable: boolean _processModelChangeEvent>;

        return $z0;
    }

    public void setProcessModelChangeEvent(boolean)
    {
        com.jidesoft.swing.Searchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.Searchable: boolean _processModelChangeEvent> = z0;

        return;
    }

    public int getPopupTimeout()
    {
        int $i0;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $i0 = r0.<com.jidesoft.swing.Searchable: int _popupTimeout>;

        return $i0;
    }

    public void setPopupTimeout(int)
    {
        int i0;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.Searchable: int _popupTimeout> = i0;

        return;
    }

    public boolean isCountMatch()
    {
        com.jidesoft.swing.Searchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $z0 = r0.<com.jidesoft.swing.Searchable: boolean _countMatch>;

        return $z0;
    }

    public void setCountMatch(boolean)
    {
        com.jidesoft.swing.Searchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Searchable;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.Searchable: boolean _countMatch> = z0;

        return;
    }

    int getMatchCount()
    {
        int $i0;
        com.jidesoft.swing.Searchable r0;

        r0 := @this: com.jidesoft.swing.Searchable;

        $i0 = r0.<com.jidesoft.swing.Searchable: int _matchCount>;

        return $i0;
    }

    public java.util.List findAll(java.lang.String)
    {
        java.lang.Integer $r5;
        java.util.ArrayList $r3;
        com.jidesoft.swing.Searchable r0;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String r1, r2, $r6;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.Searchable;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean isCaseSensitive()>();

        if $z0 == 0 goto label1;

        $r6 = r1;

        goto label2;

     label1:
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label2:
        r2 = $r6;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i1 = 0;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Searchable: int getElementCount()>();

     label3:
        if i1 >= $i0 goto label5;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i1);

        $z1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: boolean compare(java.lang.Object,java.lang.String)>($r4, r2);

        if $z1 == 0 goto label4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return $r3;
    }

    public java.lang.String getElementAtAsString(int)
    {
        com.jidesoft.swing.Searchable r0;
        int i0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: com.jidesoft.swing.Searchable;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>(i0);

        $r2 = virtualinvoke r0.<com.jidesoft.swing.Searchable: java.lang.String convertElementToString(java.lang.Object)>($r1);

        return $r2;
    }

    protected void textChanged(java.lang.String)
    {
        com.jidesoft.swing.event.SearchableEvent $r6, $r7;
        com.jidesoft.swing.Searchable r1;
        int $i0, $i1, $i3;
        java.lang.Object $r2;
        java.lang.String r0, $r4;

        r1 := @this: com.jidesoft.swing.Searchable;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        virtualinvoke r1.<com.jidesoft.swing.Searchable: void firePropertyChangeEvent(java.lang.String)>("");

        return;

     label2:
        $i1 = virtualinvoke r1.<com.jidesoft.swing.Searchable: int findFromCursor(java.lang.String)>(r0);

        $i3 = (int) -1;

        if $i1 != $i3 goto label3;

        virtualinvoke r1.<com.jidesoft.swing.Searchable: void firePropertyChangeEvent(java.lang.String)>(r0);

        $r6 = new com.jidesoft.swing.event.SearchableEvent;

        specialinvoke $r6.<com.jidesoft.swing.event.SearchableEvent: void <init>(java.lang.Object,int,java.lang.String)>(r1, 3003, r0);

        virtualinvoke r1.<com.jidesoft.swing.Searchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r6);

        goto label4;

     label3:
        virtualinvoke r1.<com.jidesoft.swing.Searchable: void firePropertyChangeEvent(java.lang.String)>(r0);

        $r2 = virtualinvoke r1.<com.jidesoft.swing.Searchable: java.lang.Object getElementAt(int)>($i1);

        $r7 = new com.jidesoft.swing.event.SearchableEvent;

        $r4 = virtualinvoke r1.<com.jidesoft.swing.Searchable: java.lang.String convertElementToString(java.lang.Object)>($r2);

        specialinvoke $r7.<com.jidesoft.swing.event.SearchableEvent: void <init>(java.lang.Object,int,java.lang.String,java.lang.Object,java.lang.String)>(r1, 3002, r0, $r2, $r4);

        virtualinvoke r1.<com.jidesoft.swing.Searchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r7);

     label4:
        return;
    }

    static com.jidesoft.swing.Searchable$SearchPopup access$200(com.jidesoft.swing.Searchable)
    {
        com.jidesoft.swing.Searchable$SearchPopup $r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @parameter0: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.Searchable$SearchPopup _popup>;

        return $r1;
    }

    static javax.swing.Timer access$302(com.jidesoft.swing.Searchable, javax.swing.Timer)
    {
        com.jidesoft.swing.Searchable r0;
        javax.swing.Timer r1;

        r0 := @parameter0: com.jidesoft.swing.Searchable;

        r1 := @parameter1: javax.swing.Timer;

        r0.<com.jidesoft.swing.Searchable: javax.swing.Timer _popupTimer> = r1;

        return r1;
    }

    static javax.swing.Timer access$300(com.jidesoft.swing.Searchable)
    {
        com.jidesoft.swing.Searchable r0;
        javax.swing.Timer $r1;

        r0 := @parameter0: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: javax.swing.Timer _popupTimer>;

        return $r1;
    }

    static com.jidesoft.swing.SearchableProvider access$400(com.jidesoft.swing.Searchable)
    {
        com.jidesoft.swing.Searchable r0;
        com.jidesoft.swing.SearchableProvider $r1;

        r0 := @parameter0: com.jidesoft.swing.Searchable;

        $r1 = r0.<com.jidesoft.swing.Searchable: com.jidesoft.swing.SearchableProvider _searchableProvider>;

        return $r1;
    }

    static java.awt.Point access$500(com.jidesoft.swing.Searchable)
    {
        java.awt.Point $r1;
        com.jidesoft.swing.Searchable r0;

        r0 := @parameter0: com.jidesoft.swing.Searchable;

        $r1 = specialinvoke r0.<com.jidesoft.swing.Searchable: java.awt.Point updateSizeAndLocation()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.Searchable: java.lang.String CLIENT_PROPERTY_SEARCHABLE> = "Searchable";

        <com.jidesoft.swing.Searchable: java.lang.String PROPERTY_SEARCH_TEXT> = "searchText";

        return;
    }
}
