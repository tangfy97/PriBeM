public class org.apache.tika.parser.chm.core.ChmExtractor extends java.lang.Object
{
    private java.util.List lzxBlocksCache;
    private org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet chmDirList;
    private org.apache.tika.parser.chm.accessor.ChmItsfHeader chmItsfHeader;
    private org.apache.tika.parser.chm.accessor.ChmItspHeader chmItspHeader;
    private org.apache.tika.parser.chm.accessor.ChmLzxcResetTable chmLzxcResetTable;
    private org.apache.tika.parser.chm.accessor.ChmLzxcControlData chmLzxcControlData;
    private byte[] data;
    private int indexOfContent;
    private long lzxBlockOffset;
    private long lzxBlockLength;

    private org.apache.tika.parser.chm.accessor.ChmLzxcControlData getChmLzxcControlData()
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        org.apache.tika.parser.chm.accessor.ChmLzxcControlData $r1;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $r1 = r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcControlData chmLzxcControlData>;

        return $r1;
    }

    private void setChmLzxcControlData(org.apache.tika.parser.chm.accessor.ChmLzxcControlData)
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        org.apache.tika.parser.chm.accessor.ChmLzxcControlData r1;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        r1 := @parameter0: org.apache.tika.parser.chm.accessor.ChmLzxcControlData;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcControlData chmLzxcControlData> = r1;

        return;
    }

    private org.apache.tika.parser.chm.accessor.ChmItspHeader getChmItspHeader()
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        org.apache.tika.parser.chm.accessor.ChmItspHeader $r1;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $r1 = r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItspHeader chmItspHeader>;

        return $r1;
    }

    private void setChmItspHeader(org.apache.tika.parser.chm.accessor.ChmItspHeader)
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        org.apache.tika.parser.chm.accessor.ChmItspHeader r1;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        r1 := @parameter0: org.apache.tika.parser.chm.accessor.ChmItspHeader;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItspHeader chmItspHeader> = r1;

        return;
    }

    private org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()
    {
        org.apache.tika.parser.chm.accessor.ChmLzxcResetTable $r1;
        org.apache.tika.parser.chm.core.ChmExtractor r0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $r1 = r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable chmLzxcResetTable>;

        return $r1;
    }

    private void setChmLzxcResetTable(org.apache.tika.parser.chm.accessor.ChmLzxcResetTable)
    {
        org.apache.tika.parser.chm.accessor.ChmLzxcResetTable r1;
        org.apache.tika.parser.chm.core.ChmExtractor r0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        r1 := @parameter0: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable chmLzxcResetTable> = r1;

        return;
    }

    private long getLzxBlockLength()
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        long $l0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $l0 = r0.<org.apache.tika.parser.chm.core.ChmExtractor: long lzxBlockLength>;

        return $l0;
    }

    private void setLzxBlockLength(long)
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        long l0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        l0 := @parameter0: long;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: long lzxBlockLength> = l0;

        return;
    }

    private long getLzxBlockOffset()
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        long $l0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $l0 = r0.<org.apache.tika.parser.chm.core.ChmExtractor: long lzxBlockOffset>;

        return $l0;
    }

    private void setLzxBlockOffset(long)
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        long l0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        l0 := @parameter0: long;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: long lzxBlockOffset> = l0;

        return;
    }

    private int getIndexOfContent()
    {
        int $i0;
        org.apache.tika.parser.chm.core.ChmExtractor r0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $i0 = r0.<org.apache.tika.parser.chm.core.ChmExtractor: int indexOfContent>;

        return $i0;
    }

    private void setIndexOfContent(int)
    {
        int i0;
        org.apache.tika.parser.chm.core.ChmExtractor r0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: int indexOfContent> = i0;

        return;
    }

    private byte[] getData()
    {
        byte[] $r1;
        org.apache.tika.parser.chm.core.ChmExtractor r0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $r1 = r0.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] data>;

        return $r1;
    }

    private void setData(byte[])
    {
        byte[] r1;
        org.apache.tika.parser.chm.core.ChmExtractor r0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        r1 := @parameter0: byte[];

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] data> = r1;

        return;
    }

    public void <init>(java.io.InputStream) throws org.apache.tika.exception.TikaException, java.io.IOException
    {
        byte[] $r2, $r5, $r6, $r10, $r13, $r16, $r20, $r22, $r33, $r34, $r39, $r54, r60;
        org.apache.tika.parser.chm.accessor.ChmLzxcControlData $r23, $r24, $r25;
        long $l0, $l2, $l8, $l17, $l18, $l19, $l22;
        java.util.ArrayList $r53;
        org.apache.tika.parser.chm.accessor.ChmLzxcResetTable $r27, $r40, $r41;
        java.lang.String $r21;
        org.apache.tika.parser.chm.accessor.ChmItspHeader $r8, $r9, $r14, $r18;
        java.io.IOException $r59;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet $r15, $r19, $r26, $r28, $r29, $r35, $r42, $r44, $r49, $r55;
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        java.util.List $r30, $r36, $r43, $r45, $r50, $r56;
        org.apache.tika.parser.chm.accessor.DirectoryListingEntry $r32, $r38, $r47, $r52, $r58;
        int $i1, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i20, $i21, $i23, $i24, $i25;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader $r3, $r4, $r7, $r11, $r12, $r17, $r48;
        java.lang.Object $r31, $r37, $r46, $r51, $r57;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List lzxBlocksCache> = null;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet chmDirList> = null;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItsfHeader chmItsfHeader> = null;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItspHeader chmItspHeader> = null;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable chmLzxcResetTable> = null;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcControlData chmLzxcControlData> = null;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] data> = null;

        staticinvoke <org.apache.tika.parser.chm.assertion.ChmAssert: void assertInputStreamNotNull(java.io.InputStream)>(r1);

     label1:
        $r2 = staticinvoke <org.apache.tika.io.IOUtils: byte[] toByteArray(java.io.InputStream)>(r1);

        specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: void setData(byte[])>($r2);

        $r3 = new org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        specialinvoke $r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void <init>()>();

        specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: void setChmItsfHeader(org.apache.tika.parser.chm.accessor.ChmItsfHeader)>($r3);

        $r4 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItsfHeader getChmItsfHeader()>();

        $r5 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $r6 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] copyOfRange(byte[],int,int)>($r5, 0, 95);

        $r7 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItsfHeader getChmItsfHeader()>();

        virtualinvoke $r4.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void parse(byte[],org.apache.tika.parser.chm.accessor.ChmItsfHeader)>($r6, $r7);

        $r8 = new org.apache.tika.parser.chm.accessor.ChmItspHeader;

        specialinvoke $r8.<org.apache.tika.parser.chm.accessor.ChmItspHeader: void <init>()>();

        specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: void setChmItspHeader(org.apache.tika.parser.chm.accessor.ChmItspHeader)>($r8);

        $r9 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItspHeader getChmItspHeader()>();

        $r10 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $r11 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItsfHeader getChmItsfHeader()>();

        $l0 = virtualinvoke $r11.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirOffset()>();

        $i1 = (int) $l0;

        $r12 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItsfHeader getChmItsfHeader()>();

        $l2 = virtualinvoke $r12.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirOffset()>();

        $i3 = (int) $l2;

        $i4 = $i3 + 84;

        $r13 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] copyOfRange(byte[],int,int)>($r10, $i1, $i4);

        $r14 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItspHeader getChmItspHeader()>();

        virtualinvoke $r9.<org.apache.tika.parser.chm.accessor.ChmItspHeader: void parse(byte[],org.apache.tika.parser.chm.accessor.ChmItspHeader)>($r13, $r14);

        $r15 = new org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        $r16 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $r17 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItsfHeader getChmItsfHeader()>();

        $r18 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItspHeader getChmItspHeader()>();

        specialinvoke $r15.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: void <init>(byte[],org.apache.tika.parser.chm.accessor.ChmItsfHeader,org.apache.tika.parser.chm.accessor.ChmItspHeader)>($r16, $r17, $r18);

        specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: void setChmDirList(org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet)>($r15);

        $r19 = virtualinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()>();

        $i5 = virtualinvoke $r19.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getControlDataIndex()>();

        $r20 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $r21 = "LZXC";

        $r22 = virtualinvoke $r21.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i6 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: int indexOfResetTableBlock(byte[],byte[])>($r20, $r22);

        r60 = null;

        if $i6 <= 0 goto label2;

        $r54 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $r55 = virtualinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()>();

        $r56 = virtualinvoke $r55.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $r57 = interfaceinvoke $r56.<java.util.List: java.lang.Object get(int)>($i5);

        $r58 = (org.apache.tika.parser.chm.accessor.DirectoryListingEntry) $r57;

        $i23 = virtualinvoke $r58.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getLength()>();

        $i24 = $i6 + $i23;

        r60 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] copyOfRange(byte[],int,int)>($r54, $i6, $i24);

     label2:
        $r23 = new org.apache.tika.parser.chm.accessor.ChmLzxcControlData;

        specialinvoke $r23.<org.apache.tika.parser.chm.accessor.ChmLzxcControlData: void <init>()>();

        specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: void setChmLzxcControlData(org.apache.tika.parser.chm.accessor.ChmLzxcControlData)>($r23);

        $r24 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcControlData getChmLzxcControlData()>();

        $r25 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcControlData getChmLzxcControlData()>();

        virtualinvoke $r24.<org.apache.tika.parser.chm.accessor.ChmLzxcControlData: void parse(byte[],org.apache.tika.parser.chm.accessor.ChmLzxcControlData)>(r60, $r25);

        $r26 = virtualinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()>();

        $i7 = virtualinvoke $r26.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: int getResetTableIndex()>();

        $r27 = new org.apache.tika.parser.chm.accessor.ChmLzxcResetTable;

        specialinvoke $r27.<org.apache.tika.parser.chm.accessor.ChmLzxcResetTable: void <init>()>();

        specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: void setChmLzxcResetTable(org.apache.tika.parser.chm.accessor.ChmLzxcResetTable)>($r27);

        $r28 = virtualinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()>();

        $l8 = virtualinvoke $r28.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: long getDataOffset()>();

        $i9 = (int) $l8;

        $r29 = virtualinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()>();

        $r30 = virtualinvoke $r29.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $r31 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>($i7);

        $r32 = (org.apache.tika.parser.chm.accessor.DirectoryListingEntry) $r31;

        $i10 = virtualinvoke $r32.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $i25 = $i9 + $i10;

        $r33 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $i11 = lengthof $r33;

        staticinvoke <org.apache.tika.parser.chm.assertion.ChmAssert: void assertCopyingDataIndex(int,int)>($i25, $i11);

        $r34 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $r35 = virtualinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()>();

        $r36 = virtualinvoke $r35.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $r37 = interfaceinvoke $r36.<java.util.List: java.lang.Object get(int)>($i7);

        $r38 = (org.apache.tika.parser.chm.accessor.DirectoryListingEntry) $r37;

        $i12 = virtualinvoke $r38.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getLength()>();

        $i13 = $i25 + $i12;

        $r39 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] copyOfRange(byte[],int,int)>($r34, $i25, $i13);

        $r40 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()>();

        $r41 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()>();

        virtualinvoke $r40.<org.apache.tika.parser.chm.accessor.ChmLzxcResetTable: void parse(byte[],org.apache.tika.parser.chm.accessor.ChmLzxcResetTable)>($r39, $r41);

        $r42 = virtualinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()>();

        $r43 = virtualinvoke $r42.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $i14 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: int indexOf(java.util.List,java.lang.String)>($r43, "Content");

        specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: void setIndexOfContent(int)>($i14);

        $r44 = virtualinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()>();

        $r45 = virtualinvoke $r44.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $i15 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: int getIndexOfContent()>();

        $r46 = interfaceinvoke $r45.<java.util.List: java.lang.Object get(int)>($i15);

        $r47 = (org.apache.tika.parser.chm.accessor.DirectoryListingEntry) $r46;

        $i16 = virtualinvoke $r47.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $l17 = (long) $i16;

        $r48 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItsfHeader getChmItsfHeader()>();

        $l18 = virtualinvoke $r48.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDataOffset()>();

        $l19 = $l17 + $l18;

        specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: void setLzxBlockOffset(long)>($l19);

        $r49 = virtualinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()>();

        $r50 = virtualinvoke $r49.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $i20 = specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: int getIndexOfContent()>();

        $r51 = interfaceinvoke $r50.<java.util.List: java.lang.Object get(int)>($i20);

        $r52 = (org.apache.tika.parser.chm.accessor.DirectoryListingEntry) $r51;

        $i21 = virtualinvoke $r52.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getLength()>();

        $l22 = (long) $i21;

        specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: void setLzxBlockLength(long)>($l22);

        $r53 = new java.util.ArrayList;

        specialinvoke $r53.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.apache.tika.parser.chm.core.ChmExtractor: void setLzxBlocksCache(java.util.List)>($r53);

     label3:
        goto label5;

     label4:
        $r59 := @caughtexception;

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public java.util.List enumerateChm()
    {
        org.apache.tika.parser.chm.accessor.DirectoryListingEntry r6;
        java.util.Iterator $r4;
        org.apache.tika.parser.chm.core.ChmExtractor r1;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet $r2;
        java.util.ArrayList $r0;
        java.util.List $r3;
        java.lang.Object $r5;
        java.lang.String $r7;
        boolean $z0;

        r1 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()>();

        $r3 = virtualinvoke $r2.<org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet: java.util.List getDirectoryListingEntryList()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.tika.parser.chm.accessor.DirectoryListingEntry) $r5;

        $r7 = virtualinvoke r6.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: java.lang.String getName()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return $r0;
    }

    public byte[] extractChmEntry(org.apache.tika.parser.chm.accessor.DirectoryListingEntry) throws org.apache.tika.exception.TikaException
    {
        byte[] $r4, $r16, $r18, $r22, $r24, $r26, $r27, $r28, $r29, $r30, $r32, $r40, $r41;
        org.apache.tika.parser.chm.lzx.ChmLzxBlock r47, r48, $r52, $r53, $r54;
        byte $b3, $b5, $b14, $b59;
        java.lang.Exception $r42;
        java.io.ByteArrayOutputStream $r51;
        org.apache.tika.parser.chm.accessor.ChmLzxcControlData $r7, $r14;
        long $l0, $l2, $l4, $l11, $l12, $l13, $l15, $l17, $l19, $l20, $l22, $l24, $l32, $l34, $l36, $l41, $l43, $l44, $l57, $l58;
        org.apache.tika.parser.chm.accessor.ChmLzxcResetTable $r6, $r17, $r19, $r23, $r25, $r31, $r34, $r50;
        org.apache.tika.exception.TikaException $r55;
        java.lang.String $r44;
        boolean $z0, $z1;
        org.apache.tika.parser.chm.core.ChmExtractor r5;
        java.util.List $r9, $r10, $r11, $r13, $r20, $r35, $r36, $r37, $r49;
        org.apache.tika.parser.chm.accessor.DirectoryListingEntry r1;
        org.apache.tika.parser.chm.core.ChmCommons$EntryType $r2, $r3, $r45, $r46;
        int $i1, $i6, $i7, $i8, $i9, $i10, $i16, $i18, $i21, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i35, $i37, $i38, $i39, $i40, $i42, $i45, $i46, i47, i48, i49, i50, i51, $i52, i53, $i54, $i55, $i56, $i60, $i61, $i62;
        org.apache.tika.parser.chm.lzx.ChmBlockInfo $r8;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader $r39;
        java.lang.Object $r12, $r38;

        r5 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        r1 := @parameter0: org.apache.tika.parser.chm.accessor.DirectoryListingEntry;

        $r51 = new java.io.ByteArrayOutputStream;

        specialinvoke $r51.<java.io.ByteArrayOutputStream: void <init>()>();

     label01:
        $r2 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: org.apache.tika.parser.chm.core.ChmCommons$EntryType getEntryType()>();

        $r3 = <org.apache.tika.parser.chm.core.ChmCommons$EntryType: org.apache.tika.parser.chm.core.ChmCommons$EntryType UNCOMPRESSED>;

        if $r2 != $r3 goto label02;

        $i40 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getLength()>();

        if $i40 <= 0 goto label02;

        $z1 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: boolean hasSkip(org.apache.tika.parser.chm.accessor.DirectoryListingEntry)>(r1);

        if $z1 != 0 goto label02;

        $r39 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItsfHeader getChmItsfHeader()>();

        $l41 = virtualinvoke $r39.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDataOffset()>();

        $i42 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $l43 = (long) $i42;

        $l44 = $l41 + $l43;

        i47 = (int) $l44;

        $r40 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $i45 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getLength()>();

        $i46 = i47 + $i45;

        $r41 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] copyOfRange(byte[],int,int)>($r40, i47, $i46);

        virtualinvoke $r51.<java.io.ByteArrayOutputStream: void write(byte[])>($r41);

        goto label19;

     label02:
        $r45 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: org.apache.tika.parser.chm.core.ChmCommons$EntryType getEntryType()>();

        $r46 = <org.apache.tika.parser.chm.core.ChmCommons$EntryType: org.apache.tika.parser.chm.core.ChmCommons$EntryType COMPRESSED>;

        if $r45 != $r46 goto label19;

        $z0 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: boolean hasSkip(org.apache.tika.parser.chm.accessor.DirectoryListingEntry)>(r1);

        if $z0 != 0 goto label19;

        $r6 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()>();

        $l0 = virtualinvoke $r6.<org.apache.tika.parser.chm.accessor.ChmLzxcResetTable: long getBlockLen()>();

        $i1 = (int) $l0;

        $r7 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcControlData getChmLzxcControlData()>();

        $r8 = staticinvoke <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfoInstance(org.apache.tika.parser.chm.accessor.DirectoryListingEntry,int,org.apache.tika.parser.chm.accessor.ChmLzxcControlData)>(r1, $i1, $r7);

        i48 = 0;

        i49 = 0;

        i50 = 0;

        $l2 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: long getLzxBlockLength()>();

        $b3 = $l2 cmp 2147483647L;

        $i60 = (int) $b3;

        if $i60 >= 0 goto label19;

        $l4 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: long getLzxBlockOffset()>();

        $b5 = $l4 cmp 2147483647L;

        $i61 = (int) $b5;

        if $i61 >= 0 goto label19;

        $r9 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List getLzxBlocksCache()>();

        $i6 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i6 == 0 goto label08;

        i48 = 0;

     label03:
        $r36 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List getLzxBlocksCache()>();

        $i37 = interfaceinvoke $r36.<java.util.List: int size()>();

        if i48 >= $i37 goto label08;

        $r37 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List getLzxBlocksCache()>();

        $r38 = interfaceinvoke $r37.<java.util.List: java.lang.Object get(int)>(i48);

        r47 = (org.apache.tika.parser.chm.lzx.ChmLzxBlock) $r38;

        i51 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getIniBlock()>();

     label04:
        $i38 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getStartBlock()>();

        if i51 > $i38 goto label07;

        $i39 = virtualinvoke r47.<org.apache.tika.parser.chm.lzx.ChmLzxBlock: int getBlockNumber()>();

        if $i39 != i51 goto label05;

        if i51 <= i49 goto label05;

        i49 = i51;

        i50 = i48;

     label05:
        $i52 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getStartBlock()>();

        if i49 != $i52 goto label06;

        goto label07;

     label06:
        i51 = i51 + 1;

        goto label04;

     label07:
        i48 = i48 + 1;

        goto label03;

     label08:
        $r10 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List getLzxBlocksCache()>();

        $i7 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i48 != $i7 goto label09;

        if i48 != 0 goto label09;

        $i31 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getIniBlock()>();

        i49 = $i31;

        $r30 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $r31 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()>();

        $l32 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: long getLzxBlockOffset()>();

        $i33 = (int) $l32;

        $l34 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: long getLzxBlockLength()>();

        $i35 = (int) $l34;

        $r32 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] getChmBlockSegment(byte[],org.apache.tika.parser.chm.accessor.ChmLzxcResetTable,int,int,int)>($r30, $r31, $i31, $i33, $i35);

        $r52 = new org.apache.tika.parser.chm.lzx.ChmLzxBlock;

        $r34 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()>();

        $l36 = virtualinvoke $r34.<org.apache.tika.parser.chm.accessor.ChmLzxcResetTable: long getBlockLen()>();

        specialinvoke $r52.<org.apache.tika.parser.chm.lzx.ChmLzxBlock: void <init>(int,byte[],long,org.apache.tika.parser.chm.lzx.ChmLzxBlock)>($i31, $r32, $l36, null);

        r48 = $r52;

        $r35 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List getLzxBlocksCache()>();

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r52);

        goto label10;

     label09:
        $r11 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List getLzxBlocksCache()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i50);

        r48 = (org.apache.tika.parser.chm.lzx.ChmLzxBlock) $r12;

     label10:
        i53 = i49;

     label11:
        $i54 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getEndBlock()>();

        if i53 > $i54 goto label18;

        $i8 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getStartBlock()>();

        if i53 != $i8 goto label12;

        $i28 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getEndBlock()>();

        if i53 != $i28 goto label12;

        $i29 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getStartOffset()>();

        $i30 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getEndOffset()>();

        $r29 = virtualinvoke r48.<org.apache.tika.parser.chm.lzx.ChmLzxBlock: byte[] getContent(int,int)>($i29, $i30);

        virtualinvoke $r51.<java.io.ByteArrayOutputStream: void write(byte[])>($r29);

        goto label18;

     label12:
        $i9 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getStartBlock()>();

        if i53 != $i9 goto label13;

        $i27 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getStartOffset()>();

        $r28 = virtualinvoke r48.<org.apache.tika.parser.chm.lzx.ChmLzxBlock: byte[] getContent(int)>($i27);

        virtualinvoke $r51.<java.io.ByteArrayOutputStream: void write(byte[])>($r28);

     label13:
        $i10 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getStartBlock()>();

        if i53 <= $i10 goto label14;

        $i26 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getEndBlock()>();

        if i53 >= $i26 goto label14;

        $r27 = virtualinvoke r48.<org.apache.tika.parser.chm.lzx.ChmLzxBlock: byte[] getContent()>();

        virtualinvoke $r51.<java.io.ByteArrayOutputStream: void write(byte[])>($r27);

     label14:
        $i55 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getEndBlock()>();

        if i53 != $i55 goto label15;

        $i25 = virtualinvoke $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getEndOffset()>();

        $r26 = virtualinvoke r48.<org.apache.tika.parser.chm.lzx.ChmLzxBlock: byte[] getContent(int,int)>(0, $i25);

        virtualinvoke $r51.<java.io.ByteArrayOutputStream: void write(byte[])>($r26);

        goto label18;

     label15:
        i53 = i53 + 1;

        $l11 = (long) i53;

        $r14 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcControlData getChmLzxcControlData()>();

        $l12 = virtualinvoke $r14.<org.apache.tika.parser.chm.accessor.ChmLzxcControlData: long getResetInterval()>();

        $l13 = $l11 % $l12;

        $b14 = $l13 cmp 0L;

        if $b14 != 0 goto label16;

        $r53 = new org.apache.tika.parser.chm.lzx.ChmLzxBlock;

        $r22 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $r23 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()>();

        $l20 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: long getLzxBlockOffset()>();

        $i21 = (int) $l20;

        $l22 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: long getLzxBlockLength()>();

        $i23 = (int) $l22;

        $r24 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] getChmBlockSegment(byte[],org.apache.tika.parser.chm.accessor.ChmLzxcResetTable,int,int,int)>($r22, $r23, i53, $i21, $i23);

        $r25 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()>();

        $l24 = virtualinvoke $r25.<org.apache.tika.parser.chm.accessor.ChmLzxcResetTable: long getBlockLen()>();

        specialinvoke $r53.<org.apache.tika.parser.chm.lzx.ChmLzxBlock: void <init>(int,byte[],long,org.apache.tika.parser.chm.lzx.ChmLzxBlock)>(i53, $r24, $l24, null);

        r48 = $r53;

        goto label17;

     label16:
        $r54 = new org.apache.tika.parser.chm.lzx.ChmLzxBlock;

        $r16 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: byte[] getData()>();

        $r17 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()>();

        $l15 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: long getLzxBlockOffset()>();

        $i16 = (int) $l15;

        $l17 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: long getLzxBlockLength()>();

        $i18 = (int) $l17;

        $r18 = staticinvoke <org.apache.tika.parser.chm.core.ChmCommons: byte[] getChmBlockSegment(byte[],org.apache.tika.parser.chm.accessor.ChmLzxcResetTable,int,int,int)>($r16, $r17, i53, $i16, $i18);

        $r19 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()>();

        $l19 = virtualinvoke $r19.<org.apache.tika.parser.chm.accessor.ChmLzxcResetTable: long getBlockLen()>();

        specialinvoke $r54.<org.apache.tika.parser.chm.lzx.ChmLzxBlock: void <init>(int,byte[],long,org.apache.tika.parser.chm.lzx.ChmLzxBlock)>(i53, $r18, $l19, r48);

        r48 = $r54;

     label17:
        $r20 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List getLzxBlocksCache()>();

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r48);

        goto label11;

     label18:
        $r49 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List getLzxBlocksCache()>();

        $i56 = interfaceinvoke $r49.<java.util.List: int size()>();

        $l57 = (long) $i56;

        $r50 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmLzxcResetTable getChmLzxcResetTable()>();

        $l58 = virtualinvoke $r50.<org.apache.tika.parser.chm.accessor.ChmLzxcResetTable: long getBlockCount()>();

        $b59 = $l57 cmp $l58;

        $i62 = (int) $b59;

        if $i62 <= 0 goto label19;

        $r13 = specialinvoke r5.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List getLzxBlocksCache()>();

        interfaceinvoke $r13.<java.util.List: void clear()>();

     label19:
        goto label21;

     label20:
        $r42 := @caughtexception;

        $r55 = new org.apache.tika.exception.TikaException;

        $r44 = virtualinvoke $r42.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r55.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r44);

        throw $r55;

     label21:
        $r4 = virtualinvoke $r51.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;

        catch java.lang.Exception from label01 to label19 with label20;
    }

    private void setLzxBlocksCache(java.util.List)
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        java.util.List r1;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List lzxBlocksCache> = r1;

        return;
    }

    private java.util.List getLzxBlocksCache()
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        java.util.List $r1;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $r1 = r0.<org.apache.tika.parser.chm.core.ChmExtractor: java.util.List lzxBlocksCache>;

        return $r1;
    }

    private void setChmDirList(org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet)
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet r1;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        r1 := @parameter0: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet chmDirList> = r1;

        return;
    }

    public org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet getChmDirList()
    {
        org.apache.tika.parser.chm.core.ChmExtractor r0;
        org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet $r1;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $r1 = r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmDirectoryListingSet chmDirList>;

        return $r1;
    }

    private void setChmItsfHeader(org.apache.tika.parser.chm.accessor.ChmItsfHeader)
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r1;
        org.apache.tika.parser.chm.core.ChmExtractor r0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        r1 := @parameter0: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItsfHeader chmItsfHeader> = r1;

        return;
    }

    private org.apache.tika.parser.chm.accessor.ChmItsfHeader getChmItsfHeader()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader $r1;
        org.apache.tika.parser.chm.core.ChmExtractor r0;

        r0 := @this: org.apache.tika.parser.chm.core.ChmExtractor;

        $r1 = r0.<org.apache.tika.parser.chm.core.ChmExtractor: org.apache.tika.parser.chm.accessor.ChmItsfHeader chmItsfHeader>;

        return $r1;
    }
}
