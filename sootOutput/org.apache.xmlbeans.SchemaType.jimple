public interface  org.apache.xmlbeans.SchemaType extends java.lang.Object implements org.apache.xmlbeans.SchemaComponent, org.apache.xmlbeans.SchemaAnnotated
{
    public static final int DT_NOT_DERIVED;
    public static final int DT_RESTRICTION;
    public static final int DT_EXTENSION;
    public static final int BTC_NOT_BUILTIN;
    public static final int BTC_ANY_TYPE;
    public static final int BTC_FIRST_PRIMITIVE;
    public static final int BTC_ANY_SIMPLE;
    public static final int BTC_BOOLEAN;
    public static final int BTC_BASE_64_BINARY;
    public static final int BTC_HEX_BINARY;
    public static final int BTC_ANY_URI;
    public static final int BTC_QNAME;
    public static final int BTC_NOTATION;
    public static final int BTC_FLOAT;
    public static final int BTC_DOUBLE;
    public static final int BTC_DECIMAL;
    public static final int BTC_STRING;
    public static final int BTC_DURATION;
    public static final int BTC_DATE_TIME;
    public static final int BTC_TIME;
    public static final int BTC_DATE;
    public static final int BTC_G_YEAR_MONTH;
    public static final int BTC_G_YEAR;
    public static final int BTC_G_MONTH_DAY;
    public static final int BTC_G_DAY;
    public static final int BTC_G_MONTH;
    public static final int BTC_LAST_PRIMITIVE;
    public static final int BTC_INTEGER;
    public static final int BTC_LONG;
    public static final int BTC_INT;
    public static final int BTC_SHORT;
    public static final int BTC_BYTE;
    public static final int BTC_NON_POSITIVE_INTEGER;
    public static final int BTC_NEGATIVE_INTEGER;
    public static final int BTC_NON_NEGATIVE_INTEGER;
    public static final int BTC_POSITIVE_INTEGER;
    public static final int BTC_UNSIGNED_LONG;
    public static final int BTC_UNSIGNED_INT;
    public static final int BTC_UNSIGNED_SHORT;
    public static final int BTC_UNSIGNED_BYTE;
    public static final int BTC_NORMALIZED_STRING;
    public static final int BTC_TOKEN;
    public static final int BTC_NAME;
    public static final int BTC_NCNAME;
    public static final int BTC_LANGUAGE;
    public static final int BTC_ID;
    public static final int BTC_IDREF;
    public static final int BTC_IDREFS;
    public static final int BTC_ENTITY;
    public static final int BTC_ENTITIES;
    public static final int BTC_NMTOKEN;
    public static final int BTC_NMTOKENS;
    public static final int BTC_LAST_BUILTIN;
    public static final int NOT_COMPLEX_TYPE;
    public static final int EMPTY_CONTENT;
    public static final int SIMPLE_CONTENT;
    public static final int ELEMENT_CONTENT;
    public static final int MIXED_CONTENT;
    public static final int FACET_LENGTH;
    public static final int FACET_MIN_LENGTH;
    public static final int FACET_MAX_LENGTH;
    public static final int FACET_MIN_EXCLUSIVE;
    public static final int FACET_MIN_INCLUSIVE;
    public static final int FACET_MAX_INCLUSIVE;
    public static final int FACET_MAX_EXCLUSIVE;
    public static final int FACET_TOTAL_DIGITS;
    public static final int FACET_FRACTION_DIGITS;
    public static final int LAST_BASIC_FACET;
    public static final int FACET_WHITE_SPACE;
    public static final int FACET_PATTERN;
    public static final int FACET_ENUMERATION;
    public static final int LAST_FACET;
    public static final int PROPERTY_ORDERED;
    public static final int PROPERTY_BOUNDED;
    public static final int PROPERTY_CARDINALITY;
    public static final int PROPERTY_NUMERIC;
    public static final int LAST_PROPERTY;
    public static final int UNORDERED;
    public static final int PARTIAL_ORDER;
    public static final int TOTAL_ORDER;
    public static final int NOT_SIMPLE;
    public static final int ATOMIC;
    public static final int UNION;
    public static final int LIST;
    public static final int NOT_DECIMAL;
    public static final int SIZE_BYTE;
    public static final int SIZE_SHORT;
    public static final int SIZE_INT;
    public static final int SIZE_LONG;
    public static final int SIZE_BIG_INTEGER;
    public static final int SIZE_BIG_DECIMAL;
    public static final int WS_UNSPECIFIED;
    public static final int WS_PRESERVE;
    public static final int WS_REPLACE;
    public static final int WS_COLLAPSE;

    public abstract javax.xml.namespace.QName getName();

    public abstract org.apache.xmlbeans.SchemaField getContainerField();

    public abstract boolean isDocumentType();

    public abstract boolean isAttributeType();

    public abstract javax.xml.namespace.QName getDocumentElementName();

    public abstract javax.xml.namespace.QName getAttributeTypeAttributeName();

    public abstract org.apache.xmlbeans.SchemaType getOuterType();

    public abstract boolean isSkippedAnonymousType();

    public abstract boolean isCompiled();

    public abstract java.lang.String getFullJavaName();

    public abstract java.lang.String getShortJavaName();

    public abstract java.lang.String getFullJavaImplName();

    public abstract java.lang.String getShortJavaImplName();

    public abstract java.lang.Class getJavaClass();

    public abstract java.lang.Class getEnumJavaClass();

    public abstract java.lang.Object getUserData();

    public abstract boolean isAnonymousType();

    public abstract boolean isBuiltinType();

    public abstract boolean isSimpleType();

    public abstract org.apache.xmlbeans.SchemaType getBaseType();

    public abstract org.apache.xmlbeans.SchemaType getCommonBaseType(org.apache.xmlbeans.SchemaType);

    public abstract boolean isAssignableFrom(org.apache.xmlbeans.SchemaType);

    public abstract int getDerivationType();

    public abstract int getBuiltinTypeCode();

    public abstract boolean isURType();

    public abstract boolean isNoType();

    public abstract org.apache.xmlbeans.SchemaTypeSystem getTypeSystem();

    public abstract boolean isAbstract();

    public abstract boolean finalExtension();

    public abstract boolean finalRestriction();

    public abstract boolean finalList();

    public abstract boolean finalUnion();

    public abstract boolean blockExtension();

    public abstract boolean blockRestriction();

    public abstract int getContentType();

    public abstract org.apache.xmlbeans.SchemaType getContentBasedOnType();

    public abstract org.apache.xmlbeans.SchemaTypeElementSequencer getElementSequencer();

    public abstract org.apache.xmlbeans.SchemaType[] getAnonymousTypes();

    public abstract org.apache.xmlbeans.SchemaProperty getElementProperty(javax.xml.namespace.QName);

    public abstract org.apache.xmlbeans.SchemaProperty[] getElementProperties();

    public abstract org.apache.xmlbeans.SchemaProperty getAttributeProperty(javax.xml.namespace.QName);

    public abstract org.apache.xmlbeans.SchemaProperty[] getAttributeProperties();

    public abstract org.apache.xmlbeans.SchemaProperty[] getProperties();

    public abstract org.apache.xmlbeans.SchemaProperty[] getDerivedProperties();

    public abstract org.apache.xmlbeans.SchemaAttributeModel getAttributeModel();

    public abstract boolean hasAttributeWildcards();

    public abstract org.apache.xmlbeans.SchemaParticle getContentModel();

    public abstract boolean hasElementWildcards();

    public abstract boolean isValidSubstitution(javax.xml.namespace.QName);

    public abstract boolean hasAllContent();

    public abstract boolean isOrderSensitive();

    public abstract org.apache.xmlbeans.SchemaType getElementType(javax.xml.namespace.QName, javax.xml.namespace.QName, org.apache.xmlbeans.SchemaTypeLoader);

    public abstract org.apache.xmlbeans.SchemaType getAttributeType(javax.xml.namespace.QName, org.apache.xmlbeans.SchemaTypeLoader);

    public abstract org.apache.xmlbeans.XmlAnySimpleType getFacet(int);

    public abstract boolean isFacetFixed(int);

    public abstract int ordered();

    public abstract boolean isBounded();

    public abstract boolean isFinite();

    public abstract boolean isNumeric();

    public abstract boolean hasPatternFacet();

    public abstract java.lang.String[] getPatterns();

    public abstract boolean matchPatternFacet(java.lang.String);

    public abstract org.apache.xmlbeans.XmlAnySimpleType[] getEnumerationValues();

    public abstract boolean hasStringEnumValues();

    public abstract org.apache.xmlbeans.SchemaType getBaseEnumType();

    public abstract org.apache.xmlbeans.SchemaStringEnumEntry[] getStringEnumEntries();

    public abstract org.apache.xmlbeans.SchemaStringEnumEntry enumEntryForString(java.lang.String);

    public abstract org.apache.xmlbeans.StringEnumAbstractBase enumForString(java.lang.String);

    public abstract org.apache.xmlbeans.StringEnumAbstractBase enumForInt(int);

    public abstract boolean isPrimitiveType();

    public abstract int getSimpleVariety();

    public abstract org.apache.xmlbeans.SchemaType getPrimitiveType();

    public abstract int getDecimalSize();

    public abstract org.apache.xmlbeans.SchemaType[] getUnionMemberTypes();

    public abstract org.apache.xmlbeans.SchemaType[] getUnionSubTypes();

    public abstract org.apache.xmlbeans.SchemaType[] getUnionConstituentTypes();

    public abstract org.apache.xmlbeans.SchemaType getUnionCommonBaseType();

    public abstract int getAnonymousUnionMemberOrdinal();

    public abstract org.apache.xmlbeans.SchemaType getListItemType();

    public abstract int getWhiteSpaceRule();

    public abstract org.apache.xmlbeans.XmlAnySimpleType newValue(java.lang.Object);

    public abstract org.apache.xmlbeans.SchemaType$Ref getRef();

    public abstract org.apache.xmlbeans.QNameSet qnameSetForWildcardElements();

    public abstract org.apache.xmlbeans.QNameSet qnameSetForWildcardAttributes();

    public static void <clinit>()
    {
        <org.apache.xmlbeans.SchemaType: int WS_COLLAPSE> = 3;

        <org.apache.xmlbeans.SchemaType: int WS_REPLACE> = 2;

        <org.apache.xmlbeans.SchemaType: int WS_PRESERVE> = 1;

        <org.apache.xmlbeans.SchemaType: int WS_UNSPECIFIED> = 0;

        <org.apache.xmlbeans.SchemaType: int SIZE_BIG_DECIMAL> = 1000001;

        <org.apache.xmlbeans.SchemaType: int SIZE_BIG_INTEGER> = 1000000;

        <org.apache.xmlbeans.SchemaType: int SIZE_LONG> = 64;

        <org.apache.xmlbeans.SchemaType: int SIZE_INT> = 32;

        <org.apache.xmlbeans.SchemaType: int SIZE_SHORT> = 16;

        <org.apache.xmlbeans.SchemaType: int SIZE_BYTE> = 8;

        <org.apache.xmlbeans.SchemaType: int NOT_DECIMAL> = 0;

        <org.apache.xmlbeans.SchemaType: int LIST> = 3;

        <org.apache.xmlbeans.SchemaType: int UNION> = 2;

        <org.apache.xmlbeans.SchemaType: int ATOMIC> = 1;

        <org.apache.xmlbeans.SchemaType: int NOT_SIMPLE> = 0;

        <org.apache.xmlbeans.SchemaType: int TOTAL_ORDER> = 2;

        <org.apache.xmlbeans.SchemaType: int PARTIAL_ORDER> = 1;

        <org.apache.xmlbeans.SchemaType: int UNORDERED> = 0;

        <org.apache.xmlbeans.SchemaType: int LAST_PROPERTY> = 15;

        <org.apache.xmlbeans.SchemaType: int PROPERTY_NUMERIC> = 15;

        <org.apache.xmlbeans.SchemaType: int PROPERTY_CARDINALITY> = 14;

        <org.apache.xmlbeans.SchemaType: int PROPERTY_BOUNDED> = 13;

        <org.apache.xmlbeans.SchemaType: int PROPERTY_ORDERED> = 12;

        <org.apache.xmlbeans.SchemaType: int LAST_FACET> = 11;

        <org.apache.xmlbeans.SchemaType: int FACET_ENUMERATION> = 11;

        <org.apache.xmlbeans.SchemaType: int FACET_PATTERN> = 10;

        <org.apache.xmlbeans.SchemaType: int FACET_WHITE_SPACE> = 9;

        <org.apache.xmlbeans.SchemaType: int LAST_BASIC_FACET> = 8;

        <org.apache.xmlbeans.SchemaType: int FACET_FRACTION_DIGITS> = 8;

        <org.apache.xmlbeans.SchemaType: int FACET_TOTAL_DIGITS> = 7;

        <org.apache.xmlbeans.SchemaType: int FACET_MAX_EXCLUSIVE> = 6;

        <org.apache.xmlbeans.SchemaType: int FACET_MAX_INCLUSIVE> = 5;

        <org.apache.xmlbeans.SchemaType: int FACET_MIN_INCLUSIVE> = 4;

        <org.apache.xmlbeans.SchemaType: int FACET_MIN_EXCLUSIVE> = 3;

        <org.apache.xmlbeans.SchemaType: int FACET_MAX_LENGTH> = 2;

        <org.apache.xmlbeans.SchemaType: int FACET_MIN_LENGTH> = 1;

        <org.apache.xmlbeans.SchemaType: int FACET_LENGTH> = 0;

        <org.apache.xmlbeans.SchemaType: int MIXED_CONTENT> = 4;

        <org.apache.xmlbeans.SchemaType: int ELEMENT_CONTENT> = 3;

        <org.apache.xmlbeans.SchemaType: int SIMPLE_CONTENT> = 2;

        <org.apache.xmlbeans.SchemaType: int EMPTY_CONTENT> = 1;

        <org.apache.xmlbeans.SchemaType: int NOT_COMPLEX_TYPE> = 0;

        <org.apache.xmlbeans.SchemaType: int BTC_LAST_BUILTIN> = 46;

        <org.apache.xmlbeans.SchemaType: int BTC_NMTOKENS> = 46;

        <org.apache.xmlbeans.SchemaType: int BTC_NMTOKEN> = 45;

        <org.apache.xmlbeans.SchemaType: int BTC_ENTITIES> = 44;

        <org.apache.xmlbeans.SchemaType: int BTC_ENTITY> = 43;

        <org.apache.xmlbeans.SchemaType: int BTC_IDREFS> = 42;

        <org.apache.xmlbeans.SchemaType: int BTC_IDREF> = 41;

        <org.apache.xmlbeans.SchemaType: int BTC_ID> = 40;

        <org.apache.xmlbeans.SchemaType: int BTC_LANGUAGE> = 39;

        <org.apache.xmlbeans.SchemaType: int BTC_NCNAME> = 38;

        <org.apache.xmlbeans.SchemaType: int BTC_NAME> = 37;

        <org.apache.xmlbeans.SchemaType: int BTC_TOKEN> = 36;

        <org.apache.xmlbeans.SchemaType: int BTC_NORMALIZED_STRING> = 35;

        <org.apache.xmlbeans.SchemaType: int BTC_UNSIGNED_BYTE> = 34;

        <org.apache.xmlbeans.SchemaType: int BTC_UNSIGNED_SHORT> = 33;

        <org.apache.xmlbeans.SchemaType: int BTC_UNSIGNED_INT> = 32;

        <org.apache.xmlbeans.SchemaType: int BTC_UNSIGNED_LONG> = 31;

        <org.apache.xmlbeans.SchemaType: int BTC_POSITIVE_INTEGER> = 30;

        <org.apache.xmlbeans.SchemaType: int BTC_NON_NEGATIVE_INTEGER> = 29;

        <org.apache.xmlbeans.SchemaType: int BTC_NEGATIVE_INTEGER> = 28;

        <org.apache.xmlbeans.SchemaType: int BTC_NON_POSITIVE_INTEGER> = 27;

        <org.apache.xmlbeans.SchemaType: int BTC_BYTE> = 26;

        <org.apache.xmlbeans.SchemaType: int BTC_SHORT> = 25;

        <org.apache.xmlbeans.SchemaType: int BTC_INT> = 24;

        <org.apache.xmlbeans.SchemaType: int BTC_LONG> = 23;

        <org.apache.xmlbeans.SchemaType: int BTC_INTEGER> = 22;

        <org.apache.xmlbeans.SchemaType: int BTC_LAST_PRIMITIVE> = 21;

        <org.apache.xmlbeans.SchemaType: int BTC_G_MONTH> = 21;

        <org.apache.xmlbeans.SchemaType: int BTC_G_DAY> = 20;

        <org.apache.xmlbeans.SchemaType: int BTC_G_MONTH_DAY> = 19;

        <org.apache.xmlbeans.SchemaType: int BTC_G_YEAR> = 18;

        <org.apache.xmlbeans.SchemaType: int BTC_G_YEAR_MONTH> = 17;

        <org.apache.xmlbeans.SchemaType: int BTC_DATE> = 16;

        <org.apache.xmlbeans.SchemaType: int BTC_TIME> = 15;

        <org.apache.xmlbeans.SchemaType: int BTC_DATE_TIME> = 14;

        <org.apache.xmlbeans.SchemaType: int BTC_DURATION> = 13;

        <org.apache.xmlbeans.SchemaType: int BTC_STRING> = 12;

        <org.apache.xmlbeans.SchemaType: int BTC_DECIMAL> = 11;

        <org.apache.xmlbeans.SchemaType: int BTC_DOUBLE> = 10;

        <org.apache.xmlbeans.SchemaType: int BTC_FLOAT> = 9;

        <org.apache.xmlbeans.SchemaType: int BTC_NOTATION> = 8;

        <org.apache.xmlbeans.SchemaType: int BTC_QNAME> = 7;

        <org.apache.xmlbeans.SchemaType: int BTC_ANY_URI> = 6;

        <org.apache.xmlbeans.SchemaType: int BTC_HEX_BINARY> = 5;

        <org.apache.xmlbeans.SchemaType: int BTC_BASE_64_BINARY> = 4;

        <org.apache.xmlbeans.SchemaType: int BTC_BOOLEAN> = 3;

        <org.apache.xmlbeans.SchemaType: int BTC_ANY_SIMPLE> = 2;

        <org.apache.xmlbeans.SchemaType: int BTC_FIRST_PRIMITIVE> = 2;

        <org.apache.xmlbeans.SchemaType: int BTC_ANY_TYPE> = 1;

        <org.apache.xmlbeans.SchemaType: int BTC_NOT_BUILTIN> = 0;

        <org.apache.xmlbeans.SchemaType: int DT_EXTENSION> = 2;

        <org.apache.xmlbeans.SchemaType: int DT_RESTRICTION> = 1;

        <org.apache.xmlbeans.SchemaType: int DT_NOT_DERIVED> = 0;

        return;
    }
}
