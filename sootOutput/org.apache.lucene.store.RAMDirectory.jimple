public class org.apache.lucene.store.RAMDirectory extends org.apache.lucene.store.Directory
{
    protected final java.util.Map fileMap;
    protected final java.util.concurrent.atomic.AtomicLong sizeInBytes;

    public void <init>()
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        org.apache.lucene.store.SingleInstanceLockFactory $r3;
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.lucene.store.RAMDirectory r0;
        java.io.IOException $r4;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        specialinvoke r0.<org.apache.lucene.store.Directory: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.lucene.store.RAMDirectory: java.util.Map fileMap> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<org.apache.lucene.store.RAMDirectory: java.util.concurrent.atomic.AtomicLong sizeInBytes> = $r2;

     label1:
        $r3 = new org.apache.lucene.store.SingleInstanceLockFactory;

        specialinvoke $r3.<org.apache.lucene.store.SingleInstanceLockFactory: void <init>()>();

        virtualinvoke r0.<org.apache.lucene.store.RAMDirectory: void setLockFactory(org.apache.lucene.store.LockFactory)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.store.RAMDirectory r0;
        org.apache.lucene.store.IOContext r2;
        org.apache.lucene.store.Directory r1;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r2 := @parameter1: org.apache.lucene.store.IOContext;

        specialinvoke r0.<org.apache.lucene.store.RAMDirectory: void <init>(org.apache.lucene.store.Directory,boolean,org.apache.lucene.store.IOContext)>(r1, 0, r2);

        return;
    }

    private void <init>(org.apache.lucene.store.Directory, boolean, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.store.RAMDirectory r0;
        java.lang.String[] $r2;
        org.apache.lucene.store.Directory r1;
        int i0, i1;
        java.lang.String r3;
        org.apache.lucene.store.IOContext r4;
        boolean z0;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        z0 := @parameter1: boolean;

        r4 := @parameter2: org.apache.lucene.store.IOContext;

        specialinvoke r0.<org.apache.lucene.store.RAMDirectory: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.store.Directory: java.lang.String[] listAll()>();

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = $r2[i1];

        virtualinvoke r1.<org.apache.lucene.store.Directory: void copy(org.apache.lucene.store.Directory,java.lang.String,java.lang.String,org.apache.lucene.store.IOContext)>(r0, r3, r3, r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r1.<org.apache.lucene.store.Directory: void close()>();

     label3:
        return;
    }

    public final java.lang.String[] listAll()
    {
        java.lang.Object[] $r6;
        java.util.Iterator $r4;
        org.apache.lucene.store.RAMDirectory r0;
        java.util.Set $r2;
        java.lang.String[] $r5, $r7;
        java.util.ArrayList $r3;
        java.util.Map $r1;
        int $i0, $i1;
        java.lang.Object $r8;
        java.lang.String r9;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        virtualinvoke r0.<org.apache.lucene.store.RAMDirectory: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.store.RAMDirectory: java.util.Map fileMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label1;

     label2:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r5 = newarray (java.lang.String)[$i1];

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        return $r7;
    }

    public final boolean fileExists(java.lang.String)
    {
        java.util.Map $r2;
        org.apache.lucene.store.RAMDirectory r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.store.RAMDirectory: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RAMDirectory: java.util.Map fileMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public final long fileLength(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.store.RAMFile r4;
        java.util.Map $r2;
        org.apache.lucene.store.RAMDirectory r0;
        java.lang.Object $r3;
        long $l0;
        java.lang.String r1;
        java.io.FileNotFoundException $r5;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.store.RAMDirectory: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RAMDirectory: java.util.Map fileMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.lucene.store.RAMFile) $r3;

        if r4 != null goto label1;

        $r5 = new java.io.FileNotFoundException;

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

     label1:
        $l0 = virtualinvoke r4.<org.apache.lucene.store.RAMFile: long getLength()>();

        return $l0;
    }

    public final long sizeInBytes()
    {
        org.apache.lucene.store.RAMDirectory r0;
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        virtualinvoke r0.<org.apache.lucene.store.RAMDirectory: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.store.RAMDirectory: java.util.concurrent.atomic.AtomicLong sizeInBytes>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public void deleteFile(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.store.RAMDirectory r0;
        long $l0, $l1;
        java.io.FileNotFoundException $r5;
        java.util.concurrent.atomic.AtomicLong $r6;
        org.apache.lucene.store.RAMFile r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.store.RAMDirectory: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RAMDirectory: java.util.Map fileMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (org.apache.lucene.store.RAMFile) $r3;

        if r4 == null goto label1;

        r4.<org.apache.lucene.store.RAMFile: org.apache.lucene.store.RAMDirectory directory> = null;

        $r6 = r0.<org.apache.lucene.store.RAMDirectory: java.util.concurrent.atomic.AtomicLong sizeInBytes>;

        $l0 = r4.<org.apache.lucene.store.RAMFile: long sizeInBytes>;

        $l1 = neg $l0;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l1);

        goto label2;

     label1:
        $r5 = new java.io.FileNotFoundException;

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

     label2:
        return;
    }

    public org.apache.lucene.store.IndexOutput createOutput(java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.store.RAMDirectory r0;
        long $l0, $l1;
        java.util.concurrent.atomic.AtomicLong $r8;
        org.apache.lucene.store.RAMOutputStream $r7;
        org.apache.lucene.store.RAMFile $r1, r5;
        java.util.Map $r3, $r6;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.lucene.store.IOContext r9;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        r2 := @parameter0: java.lang.String;

        r9 := @parameter1: org.apache.lucene.store.IOContext;

        virtualinvoke r0.<org.apache.lucene.store.RAMDirectory: void ensureOpen()>();

        $r1 = virtualinvoke r0.<org.apache.lucene.store.RAMDirectory: org.apache.lucene.store.RAMFile newRAMFile()>();

        $r3 = r0.<org.apache.lucene.store.RAMDirectory: java.util.Map fileMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        r5 = (org.apache.lucene.store.RAMFile) $r4;

        if r5 == null goto label1;

        $r8 = r0.<org.apache.lucene.store.RAMDirectory: java.util.concurrent.atomic.AtomicLong sizeInBytes>;

        $l0 = r5.<org.apache.lucene.store.RAMFile: long sizeInBytes>;

        $l1 = neg $l0;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l1);

        r5.<org.apache.lucene.store.RAMFile: org.apache.lucene.store.RAMDirectory directory> = null;

     label1:
        $r6 = r0.<org.apache.lucene.store.RAMDirectory: java.util.Map fileMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r1);

        $r7 = new org.apache.lucene.store.RAMOutputStream;

        specialinvoke $r7.<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)>($r1);

        return $r7;
    }

    protected org.apache.lucene.store.RAMFile newRAMFile()
    {
        org.apache.lucene.store.RAMDirectory r1;
        org.apache.lucene.store.RAMFile $r0;

        r1 := @this: org.apache.lucene.store.RAMDirectory;

        $r0 = new org.apache.lucene.store.RAMFile;

        specialinvoke $r0.<org.apache.lucene.store.RAMFile: void <init>(org.apache.lucene.store.RAMDirectory)>(r1);

        return $r0;
    }

    public void sync(java.util.Collection) throws java.io.IOException
    {
        org.apache.lucene.store.RAMDirectory r0;
        java.util.Collection r1;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        r1 := @parameter0: java.util.Collection;

        return;
    }

    public org.apache.lucene.store.IndexInput openInput(java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.store.RAMDirectory r0;
        java.io.FileNotFoundException $r6;
        org.apache.lucene.store.RAMFile r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.lucene.store.RAMInputStream $r5;
        java.lang.String r1;
        org.apache.lucene.store.IOContext r7;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: org.apache.lucene.store.IOContext;

        virtualinvoke r0.<org.apache.lucene.store.RAMDirectory: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RAMDirectory: java.util.Map fileMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.lucene.store.RAMFile) $r3;

        if r4 != null goto label1;

        $r6 = new java.io.FileNotFoundException;

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r6;

     label1:
        $r5 = new org.apache.lucene.store.RAMInputStream;

        specialinvoke $r5.<org.apache.lucene.store.RAMInputStream: void <init>(java.lang.String,org.apache.lucene.store.RAMFile)>(r1, r4);

        return $r5;
    }

    public void close()
    {
        org.apache.lucene.store.RAMDirectory r0;
        java.util.Map $r1;

        r0 := @this: org.apache.lucene.store.RAMDirectory;

        r0.<org.apache.lucene.store.RAMDirectory: boolean isOpen> = 0;

        $r1 = r0.<org.apache.lucene.store.RAMDirectory: java.util.Map fileMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }
}
