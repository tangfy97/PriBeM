public class com.hp.hpl.jena.sparql.engine.binding.BindingWrapped extends java.lang.Object implements com.hp.hpl.jena.sparql.engine.binding.Binding
{
    protected com.hp.hpl.jena.sparql.engine.binding.Binding binding;

    public void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingWrapped r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingWrapped;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingWrapped: com.hp.hpl.jena.sparql.engine.binding.Binding binding> = r1;

        return;
    }

    public com.hp.hpl.jena.sparql.engine.binding.Binding getWrapped()
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingWrapped r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingWrapped;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingWrapped: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        return $r1;
    }

    public boolean contains(com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingWrapped r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        com.hp.hpl.jena.sparql.core.Var r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingWrapped;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingWrapped: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.Binding: boolean contains(com.hp.hpl.jena.sparql.core.Var)>(r1);

        return $z0;
    }

    public com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingWrapped r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.sparql.core.Var r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingWrapped;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingWrapped: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.Binding: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>(r1);

        return $r3;
    }

    public java.util.Iterator vars()
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingWrapped r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        java.util.Iterator $r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingWrapped;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingWrapped: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: java.util.Iterator vars()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingWrapped r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingWrapped;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingWrapped: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public int size()
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingWrapped r0;
        int $i0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingWrapped;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingWrapped: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $i0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingWrapped r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingWrapped;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingWrapped: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: boolean isEmpty()>();

        return $z0;
    }

    public int hashCode()
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingWrapped r0;
        int $i0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingWrapped;

        $i0 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingBase: int hashCode(com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingWrapped r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingWrapped;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.hp.hpl.jena.sparql.engine.binding.Binding;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.hp.hpl.jena.sparql.engine.binding.Binding) r1;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingBase: boolean equals(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r2);

        return $z1;
    }
}
