public class org.apache.jena.fuseki.validation.QueryValidator extends org.apache.jena.fuseki.validation.ValidatorBase
{
    static final java.lang.String paramLineNumbers;
    static final java.lang.String paramFormat;
    static final java.lang.String paramQuery;
    static final java.lang.String paramSyntax;

    public void <init>()
    {
        org.apache.jena.fuseki.validation.QueryValidator r0;

        r0 := @this: org.apache.jena.fuseki.validation.QueryValidator;

        specialinvoke r0.<org.apache.jena.fuseki.validation.ValidatorBase: void <init>()>();

        return;
    }

    protected void execute(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        org.apache.jena.fuseki.validation.QueryValidator r8;
        com.hp.hpl.jena.query.Syntax $r26;
        com.hp.hpl.jena.sparql.ARQException $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z11, z12, z13, z14, $z15;
        java.lang.Exception $r19;
        java.lang.StringBuilder $r15, $r16, $r17;
        com.hp.hpl.jena.query.Query r29;
        java.lang.String[] $r1, $r7;
        javax.servlet.http.HttpServletRequest r0;
        javax.servlet.ServletOutputStream $r27;
        int $i0, $i1, $i2, i3;
        java.lang.String $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r18, $r22, $r24, r25;
        org.slf4j.Logger $r20;
        org.apache.jena.fuseki.validation.QueryValidator$1 $r28;
        javax.servlet.http.HttpServletResponse r2;
        java.lang.RuntimeException $r21;

        r8 := @this: org.apache.jena.fuseki.validation.QueryValidator;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

     label01:
        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>("query");

        if $r1 == null goto label02;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label04;

     label02:
        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, "No query parameter to validator");

     label03:
        return;

     label04:
        $i1 = lengthof $r1;

        if $i1 <= 1 goto label06;

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, "Too many query parameters");

     label05:
        return;

     label06:
        $r3 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("query");

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(\r|\n| )*$", "");

        $r5 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("languageSyntax");

        r25 = $r5;

        if $r5 == null goto label07;

        $z8 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z8 == 0 goto label08;

     label07:
        r25 = "SPARQL";

     label08:
        $r26 = staticinvoke <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax lookup(java.lang.String)>(r25);

        if $r26 != null goto label10;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown syntax: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, $r18);

     label09:
        return;

     label10:
        $r6 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("linenumbers");

        $r7 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>("outputFormat");

        z9 = 0;

        z10 = 0;

        z11 = 0;

        z12 = 0;

        z13 = 0;

        if $r7 == null goto label18;

        i3 = 0;

     label11:
        $i2 = lengthof $r7;

        if i3 >= $i2 goto label18;

        $r9 = $r7[i3];

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("sparql");

        if $z2 == 0 goto label12;

        z9 = 1;

     label12:
        $r10 = $r7[i3];

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("prefix");

        if $z3 == 0 goto label13;

     label13:
        $r11 = $r7[i3];

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("algebra");

        if $z4 == 0 goto label14;

        z10 = 1;

     label14:
        $r12 = $r7[i3];

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("quads");

        if $z5 == 0 goto label15;

        z11 = 1;

     label15:
        $r13 = $r7[i3];

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("opt");

        if $z6 == 0 goto label16;

        z12 = 1;

     label16:
        $r14 = $r7[i3];

        $z7 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("optquads");

        if $z7 == 0 goto label17;

        z13 = 1;

     label17:
        i3 = i3 + 1;

        goto label11;

     label18:
        z14 = 1;

        if $r6 == null goto label22;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z0 != 0 goto label19;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("yes");

        if $z1 == 0 goto label20;

     label19:
        $z15 = 1;

        goto label21;

     label20:
        $z15 = 0;

     label21:
        z14 = $z15;

     label22:
        staticinvoke <org.apache.jena.fuseki.validation.QueryValidator: void setHeaders(javax.servlet.http.HttpServletResponse)>(r2);

        $r27 = interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        virtualinvoke $r27.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<html>");

        staticinvoke <org.apache.jena.fuseki.validation.QueryValidator: void printHead(javax.servlet.ServletOutputStream,java.lang.String)>($r27, "SPARQL Query Validation Report");

        virtualinvoke $r27.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<body>");

        virtualinvoke $r27.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<h1>SPARQL Query Validator</h1>");

        virtualinvoke $r27.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<p>Input:</p>");

        $r28 = new org.apache.jena.fuseki.validation.QueryValidator$1;

        specialinvoke $r28.<org.apache.jena.fuseki.validation.QueryValidator$1: void <init>(org.apache.jena.fuseki.validation.QueryValidator,java.lang.String)>(r8, $r4);

        specialinvoke r8.<org.apache.jena.fuseki.validation.QueryValidator: void output(javax.servlet.ServletOutputStream,org.apache.jena.fuseki.validation.QueryValidator$Content,boolean)>($r27, $r28, z14);

        r29 = null;

     label23:
        r29 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>($r4, "http://example/base/", $r26);

     label24:
        goto label27;

     label25:
        $r23 := @caughtexception;

        virtualinvoke $r27.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<p>Syntax error:</p>");

        staticinvoke <org.apache.jena.fuseki.validation.QueryValidator: void startFixed(javax.servlet.ServletOutputStream)>($r27);

        $r24 = virtualinvoke $r23.<com.hp.hpl.jena.sparql.ARQException: java.lang.String getMessage()>();

        virtualinvoke $r27.<javax.servlet.ServletOutputStream: void println(java.lang.String)>($r24);

        staticinvoke <org.apache.jena.fuseki.validation.QueryValidator: void finishFixed(javax.servlet.ServletOutputStream)>($r27);

        goto label27;

     label26:
        $r21 := @caughtexception;

        virtualinvoke $r27.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<p>Internal error:</p>");

        staticinvoke <org.apache.jena.fuseki.validation.QueryValidator: void startFixed(javax.servlet.ServletOutputStream)>($r27);

        $r22 = virtualinvoke $r21.<java.lang.RuntimeException: java.lang.String getMessage()>();

        virtualinvoke $r27.<javax.servlet.ServletOutputStream: void println(java.lang.String)>($r22);

        staticinvoke <org.apache.jena.fuseki.validation.QueryValidator: void finishFixed(javax.servlet.ServletOutputStream)>($r27);

     label27:
        if r29 == null goto label32;

        if z9 == 0 goto label28;

        specialinvoke r8.<org.apache.jena.fuseki.validation.QueryValidator: void outputSyntax(javax.servlet.ServletOutputStream,com.hp.hpl.jena.query.Query,boolean)>($r27, r29, z14);

     label28:
        if z10 == 0 goto label29;

        specialinvoke r8.<org.apache.jena.fuseki.validation.QueryValidator: void outputAlgebra(javax.servlet.ServletOutputStream,com.hp.hpl.jena.query.Query,boolean)>($r27, r29, z14);

     label29:
        if z11 == 0 goto label30;

        specialinvoke r8.<org.apache.jena.fuseki.validation.QueryValidator: void outputAlgebraQuads(javax.servlet.ServletOutputStream,com.hp.hpl.jena.query.Query,boolean)>($r27, r29, z14);

     label30:
        if z12 == 0 goto label31;

        specialinvoke r8.<org.apache.jena.fuseki.validation.QueryValidator: void outputAlgebraOpt(javax.servlet.ServletOutputStream,com.hp.hpl.jena.query.Query,boolean)>($r27, r29, z14);

     label31:
        if z13 == 0 goto label32;

        specialinvoke r8.<org.apache.jena.fuseki.validation.QueryValidator: void outputAlgebraOptQuads(javax.servlet.ServletOutputStream,com.hp.hpl.jena.query.Query,boolean)>($r27, r29, z14);

     label32:
        virtualinvoke $r27.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("</body>");

        virtualinvoke $r27.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("</html>");

     label33:
        goto label35;

     label34:
        $r19 := @caughtexception;

        $r20 = <org.apache.jena.fuseki.validation.QueryValidator: org.slf4j.Logger serviceLog>;

        interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Exception in doGet", $r19);

     label35:
        return;

        catch com.hp.hpl.jena.sparql.ARQException from label23 to label24 with label25;
        catch java.lang.RuntimeException from label23 to label24 with label26;
        catch java.lang.Exception from label01 to label03 with label34;
        catch java.lang.Exception from label04 to label05 with label34;
        catch java.lang.Exception from label06 to label09 with label34;
        catch java.lang.Exception from label10 to label33 with label34;
    }

    private void outputSyntax(javax.servlet.ServletOutputStream, com.hp.hpl.jena.query.Query, boolean) throws java.io.IOException
    {
        org.apache.jena.fuseki.validation.QueryValidator r2;
        com.hp.hpl.jena.query.Query r3;
        javax.servlet.ServletOutputStream r0;
        org.apache.jena.fuseki.validation.QueryValidator$2 $r1;
        boolean z0;

        r2 := @this: org.apache.jena.fuseki.validation.QueryValidator;

        r0 := @parameter0: javax.servlet.ServletOutputStream;

        r3 := @parameter1: com.hp.hpl.jena.query.Query;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<p>Formatted, parsed query:</p>");

        $r1 = new org.apache.jena.fuseki.validation.QueryValidator$2;

        specialinvoke $r1.<org.apache.jena.fuseki.validation.QueryValidator$2: void <init>(org.apache.jena.fuseki.validation.QueryValidator,com.hp.hpl.jena.query.Query)>(r2, r3);

        specialinvoke r2.<org.apache.jena.fuseki.validation.QueryValidator: void output(javax.servlet.ServletOutputStream,org.apache.jena.fuseki.validation.QueryValidator$Content,boolean)>(r0, $r1, z0);

        return;
    }

    private void outputAlgebra(javax.servlet.ServletOutputStream, com.hp.hpl.jena.query.Query, boolean) throws java.io.IOException
    {
        org.apache.jena.fuseki.validation.QueryValidator r3;
        com.hp.hpl.jena.query.Query r1;
        javax.servlet.ServletOutputStream r0;
        com.hp.hpl.jena.sparql.algebra.Op $r2;
        boolean z0;

        r3 := @this: org.apache.jena.fuseki.validation.QueryValidator;

        r0 := @parameter0: javax.servlet.ServletOutputStream;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<p>Algebra structure:</p>");

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op compile(com.hp.hpl.jena.query.Query)>(r1);

        specialinvoke r3.<org.apache.jena.fuseki.validation.QueryValidator: void output(javax.servlet.ServletOutputStream,com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.algebra.Op,boolean)>(r0, r1, $r2, z0);

        return;
    }

    private void outputAlgebraOpt(javax.servlet.ServletOutputStream, com.hp.hpl.jena.query.Query, boolean) throws java.io.IOException
    {
        org.apache.jena.fuseki.validation.QueryValidator r4;
        com.hp.hpl.jena.query.Query r1;
        javax.servlet.ServletOutputStream r0;
        com.hp.hpl.jena.sparql.algebra.Op $r2, $r3;
        boolean z0;

        r4 := @this: org.apache.jena.fuseki.validation.QueryValidator;

        r0 := @parameter0: javax.servlet.ServletOutputStream;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<p>Alebgra, with general triple optimizations:</p>");

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op compile(com.hp.hpl.jena.query.Query)>(r1);

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op optimize(com.hp.hpl.jena.sparql.algebra.Op)>($r2);

        specialinvoke r4.<org.apache.jena.fuseki.validation.QueryValidator: void output(javax.servlet.ServletOutputStream,com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.algebra.Op,boolean)>(r0, r1, $r3, z0);

        return;
    }

    private void outputAlgebraQuads(javax.servlet.ServletOutputStream, com.hp.hpl.jena.query.Query, boolean) throws java.io.IOException
    {
        org.apache.jena.fuseki.validation.QueryValidator r4;
        com.hp.hpl.jena.query.Query r1;
        javax.servlet.ServletOutputStream r0;
        com.hp.hpl.jena.sparql.algebra.Op $r2, $r3;
        boolean z0;

        r4 := @this: org.apache.jena.fuseki.validation.QueryValidator;

        r0 := @parameter0: javax.servlet.ServletOutputStream;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<p>Quad structure:</p>");

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op compile(com.hp.hpl.jena.query.Query)>(r1);

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op toQuadForm(com.hp.hpl.jena.sparql.algebra.Op)>($r2);

        specialinvoke r4.<org.apache.jena.fuseki.validation.QueryValidator: void output(javax.servlet.ServletOutputStream,com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.algebra.Op,boolean)>(r0, r1, $r3, z0);

        return;
    }

    private void outputAlgebraOptQuads(javax.servlet.ServletOutputStream, com.hp.hpl.jena.query.Query, boolean) throws java.io.IOException
    {
        org.apache.jena.fuseki.validation.QueryValidator r5;
        com.hp.hpl.jena.query.Query r1;
        javax.servlet.ServletOutputStream r0;
        com.hp.hpl.jena.sparql.algebra.Op $r2, $r3, $r4;
        boolean z0;

        r5 := @this: org.apache.jena.fuseki.validation.QueryValidator;

        r0 := @parameter0: javax.servlet.ServletOutputStream;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("<p>Alebgra, with general quads optimizations:</p>");

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op compile(com.hp.hpl.jena.query.Query)>(r1);

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op toQuadForm(com.hp.hpl.jena.sparql.algebra.Op)>($r2);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op optimize(com.hp.hpl.jena.sparql.algebra.Op)>($r3);

        specialinvoke r5.<org.apache.jena.fuseki.validation.QueryValidator: void output(javax.servlet.ServletOutputStream,com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.algebra.Op,boolean)>(r0, r1, $r4, z0);

        return;
    }

    private void output(javax.servlet.ServletOutputStream, com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.algebra.Op, boolean) throws java.io.IOException
    {
        org.apache.jena.fuseki.validation.QueryValidator r3;
        com.hp.hpl.jena.query.Query r1;
        javax.servlet.ServletOutputStream r5;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r0;
        org.apache.jena.fuseki.validation.QueryValidator$3 $r2;
        com.hp.hpl.jena.sparql.algebra.Op r4;
        boolean z0;

        r3 := @this: org.apache.jena.fuseki.validation.QueryValidator;

        r5 := @parameter0: javax.servlet.ServletOutputStream;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        r4 := @parameter2: com.hp.hpl.jena.sparql.algebra.Op;

        z0 := @parameter3: boolean;

        $r0 = new com.hp.hpl.jena.sparql.serializer.SerializationContext;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.serializer.SerializationContext: void <init>(com.hp.hpl.jena.sparql.core.Prologue)>(r1);

        $r2 = new org.apache.jena.fuseki.validation.QueryValidator$3;

        specialinvoke $r2.<org.apache.jena.fuseki.validation.QueryValidator$3: void <init>(org.apache.jena.fuseki.validation.QueryValidator,com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r3, r4, $r0);

        specialinvoke r3.<org.apache.jena.fuseki.validation.QueryValidator: void output(javax.servlet.ServletOutputStream,org.apache.jena.fuseki.validation.QueryValidator$Content,boolean)>(r5, $r2, z0);

        return;
    }

    private void output(javax.servlet.ServletOutputStream, org.apache.jena.fuseki.validation.QueryValidator$Content, boolean) throws java.io.IOException
    {
        org.apache.jena.fuseki.validation.QueryValidator r6;
        org.apache.jena.fuseki.validation.QueryValidator$Content r2;
        byte[] $r5;
        org.apache.jena.atlas.io.IndentedLineBuffer $r1;
        javax.servlet.ServletOutputStream r0;
        java.lang.String $r3, $r4;
        boolean z0;

        r6 := @this: org.apache.jena.fuseki.validation.QueryValidator;

        r0 := @parameter0: javax.servlet.ServletOutputStream;

        r2 := @parameter1: org.apache.jena.fuseki.validation.QueryValidator$Content;

        z0 := @parameter2: boolean;

        staticinvoke <org.apache.jena.fuseki.validation.QueryValidator: void startFixed(javax.servlet.ServletOutputStream)>(r0);

        $r1 = new org.apache.jena.atlas.io.IndentedLineBuffer;

        specialinvoke $r1.<org.apache.jena.atlas.io.IndentedLineBuffer: void <init>(boolean)>(z0);

        interfaceinvoke r2.<org.apache.jena.fuseki.validation.QueryValidator$Content: void print(org.apache.jena.atlas.io.IndentedWriter)>($r1);

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedLineBuffer: void flush()>();

        $r3 = virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedLineBuffer: java.lang.String asString()>();

        $r4 = staticinvoke <org.apache.jena.fuseki.validation.QueryValidator: java.lang.String htmlQuote(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r0.<javax.servlet.ServletOutputStream: void write(byte[])>($r5);

        staticinvoke <org.apache.jena.fuseki.validation.QueryValidator: void finishFixed(javax.servlet.ServletOutputStream)>(r0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.jena.fuseki.validation.QueryValidator: java.lang.String paramSyntax> = "languageSyntax";

        <org.apache.jena.fuseki.validation.QueryValidator: java.lang.String paramQuery> = "query";

        <org.apache.jena.fuseki.validation.QueryValidator: java.lang.String paramFormat> = "outputFormat";

        <org.apache.jena.fuseki.validation.QueryValidator: java.lang.String paramLineNumbers> = "linenumbers";

        return;
    }
}
