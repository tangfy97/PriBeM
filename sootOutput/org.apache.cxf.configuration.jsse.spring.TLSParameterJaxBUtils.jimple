public final class org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;

    private void <init>()
    {
        org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils r0;

        r0 := @this: org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.SecureRandom getSecureRandom(org.apache.cxf.configuration.security.SecureRandomParameters) throws java.security.GeneralSecurityException
    {
        java.security.SecureRandom r3, $r4, $r5;
        org.apache.cxf.configuration.security.SecureRandomParameters r0;
        java.lang.String $r1, $r2;

        r0 := @parameter0: org.apache.cxf.configuration.security.SecureRandomParameters;

        r3 = null;

        if r0 == null goto label6;

        $r1 = virtualinvoke r0.<org.apache.cxf.configuration.security.SecureRandomParameters: java.lang.String getAlgorithm()>();

        $r2 = virtualinvoke r0.<org.apache.cxf.configuration.security.SecureRandomParameters: java.lang.String getProvider()>();

        if $r2 == null goto label3;

        if $r1 == null goto label1;

        $r4 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>($r1, $r2);

        goto label2;

     label1:
        $r4 = null;

     label2:
        r3 = $r4;

        goto label6;

     label3:
        if $r1 == null goto label4;

        $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r1);

        goto label5;

     label4:
        $r5 = null;

     label5:
        r3 = $r5;

     label6:
        return r3;
    }

    public static java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType) throws java.security.GeneralSecurityException, java.io.IOException
    {
        java.net.URL $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.security.KeyStore r6, $r32;
        java.util.logging.Logger $r1, $r4, $r7, $r21, $r25;
        java.lang.StringBuilder $r16, $r17, $r19;
        java.lang.String $r2, $r3, $r5, $r8, $r11, $r13, $r18, $r20, $r24, $r26, $r27, $r28, $r31;
        org.apache.cxf.configuration.security.KeyStoreType r0;
        java.io.IOException $r22;
        java.io.FileInputStream $r9, $r23, r33;
        char[] $r29, r30;
        java.lang.Class $r14;
        java.io.InputStream $r12, $r15;

        r0 := @parameter0: org.apache.cxf.configuration.security.KeyStoreType;

        if r0 != null goto label01;

        return null;

     label01:
        $z0 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: boolean isSetType()>();

        if $z0 == 0 goto label02;

        $r28 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: java.lang.String getType()>();

        goto label03;

     label02:
        $r28 = null;

     label03:
        $r1 = <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.util.logging.Logger LOG>;

        $r2 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r3 = staticinvoke <org.apache.cxf.transport.https.SSLUtils: java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)>($r28, $r1, $r2);

        $z1 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: boolean isSetPassword()>();

        if $z1 == 0 goto label04;

        $r27 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: java.lang.String getPassword()>();

        $r29 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: char[] deobfuscate(java.lang.String)>($r27);

        goto label05;

     label04:
        $r29 = null;

     label05:
        r30 = $r29;

        if $r29 != null goto label06;

        $r25 = <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.util.logging.Logger LOG>;

        $r26 = staticinvoke <org.apache.cxf.transport.https.SSLUtils: java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)>(null, $r25);

        if $r26 == null goto label06;

        r30 = virtualinvoke $r26.<java.lang.String: char[] toCharArray()>();

     label06:
        $z5 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: boolean isSetProvider()>();

        if $z5 == 0 goto label07;

        $r31 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: java.lang.String getProvider()>();

        goto label08;

     label07:
        $r31 = null;

     label08:
        $r4 = <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.util.logging.Logger LOG>;

        $r5 = staticinvoke <org.apache.cxf.transport.https.SSLUtils: java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)>($r31, $r4);

        if $r5 != null goto label09;

        $r32 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3);

        goto label10;

     label09:
        $r32 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>($r3, $r5);

     label10:
        r6 = $r32;

        $z2 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: boolean isSetFile()>();

        if $z2 == 0 goto label11;

        $r23 = new java.io.FileInputStream;

        $r24 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: java.lang.String getFile()>();

        specialinvoke $r23.<java.io.FileInputStream: void <init>(java.lang.String)>($r24);

        virtualinvoke $r32.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r23, r30);

        goto label16;

     label11:
        $z3 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: boolean isSetResource()>();

        if $z3 == 0 goto label13;

        $r13 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: java.lang.String getResource()>();

        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.io.InputStream getResourceAsStream(java.lang.String,java.lang.Class)>($r13, $r14);

        if $r15 != null goto label12;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not load keystore resource ");

        $r18 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: java.lang.String getResource()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.util.logging.Logger LOG>;

        virtualinvoke $r21.<java.util.logging.Logger: void severe(java.lang.String)>($r20);

        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r22;

     label12:
        virtualinvoke $r32.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, r30);

        goto label16;

     label13:
        $z4 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: boolean isSetUrl()>();

        if $z4 == 0 goto label14;

        $r10 = new java.net.URL;

        $r11 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyStoreType: java.lang.String getUrl()>();

        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r11);

        $r12 = virtualinvoke $r10.<java.net.URL: java.io.InputStream openStream()>();

        virtualinvoke $r32.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, r30);

        goto label16;

     label14:
        $r7 = <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.util.logging.Logger LOG>;

        $r8 = staticinvoke <org.apache.cxf.transport.https.SSLUtils: java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)>(null, $r7);

        r33 = null;

        if $r8 == null goto label15;

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.lang.String)>($r8);

        r33 = $r9;

     label15:
        virtualinvoke r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r33, r30);

     label16:
        return r6;
    }

    public static java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType) throws java.io.IOException, java.security.cert.CertificateException, java.security.KeyStoreException, java.security.NoSuchAlgorithmException
    {
        java.net.URL $r1;
        org.apache.cxf.configuration.security.CertStoreType r0;
        java.lang.String $r2, $r5, $r11, $r13, $r17;
        boolean $z0, $z1, $z2;
        java.security.KeyStore $r4, $r8, $r18;
        java.io.IOException $r15;
        java.io.FileInputStream $r16;
        java.util.logging.Logger $r14;
        java.lang.Class $r6;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.io.InputStream $r3, $r7;

        r0 := @parameter0: org.apache.cxf.configuration.security.CertStoreType;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<org.apache.cxf.configuration.security.CertStoreType: boolean isSetFile()>();

        if $z0 == 0 goto label2;

        $r16 = new java.io.FileInputStream;

        $r17 = virtualinvoke r0.<org.apache.cxf.configuration.security.CertStoreType: java.lang.String getFile()>();

        specialinvoke $r16.<java.io.FileInputStream: void <init>(java.lang.String)>($r17);

        $r18 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.security.KeyStore createTrustStore(java.io.InputStream)>($r16);

        return $r18;

     label2:
        $z1 = virtualinvoke r0.<org.apache.cxf.configuration.security.CertStoreType: boolean isSetResource()>();

        if $z1 == 0 goto label4;

        $r5 = virtualinvoke r0.<org.apache.cxf.configuration.security.CertStoreType: java.lang.String getResource()>();

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.io.InputStream getResourceAsStream(java.lang.String,java.lang.Class)>($r5, $r6);

        if $r7 != null goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not load truststore resource ");

        $r11 = virtualinvoke r0.<org.apache.cxf.configuration.security.CertStoreType: java.lang.String getResource()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.util.logging.Logger LOG>;

        virtualinvoke $r14.<java.util.logging.Logger: void severe(java.lang.String)>($r13);

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r15;

     label3:
        $r8 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.security.KeyStore createTrustStore(java.io.InputStream)>($r7);

        return $r8;

     label4:
        $z2 = virtualinvoke r0.<org.apache.cxf.configuration.security.CertStoreType: boolean isSetUrl()>();

        if $z2 == 0 goto label5;

        $r1 = new java.net.URL;

        $r2 = virtualinvoke r0.<org.apache.cxf.configuration.security.CertStoreType: java.lang.String getUrl()>();

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.net.URL: java.io.InputStream openStream()>();

        $r4 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.security.KeyStore createTrustStore(java.io.InputStream)>($r3);

        return $r4;

     label5:
        return null;
    }

    private static java.security.KeyStore createTrustStore(java.io.InputStream) throws java.io.IOException, java.security.cert.CertificateException, java.security.KeyStoreException, java.security.NoSuchAlgorithmException
    {
        java.security.cert.X509Certificate r7;
        javax.security.auth.x500.X500Principal $r8;
        java.util.Iterator $r4;
        java.util.Collection $r1;
        java.security.KeyStore $r3;
        java.security.cert.Certificate r6;
        java.lang.Object $r5;
        java.lang.String $r2, $r9;
        java.io.InputStream r0;
        boolean $z0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.util.Collection loadCertificates(java.io.InputStream)>(r0);

        $r2 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2);

        virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);

        $r4 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.security.cert.Certificate) $r5;

        r7 = (java.security.cert.X509Certificate) r6;

        $r8 = virtualinvoke r7.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r9 = virtualinvoke $r8.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        virtualinvoke $r3.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>($r9, r6);

        goto label1;

     label2:
        return $r3;
    }

    private static java.util.Collection loadCertificates(java.io.InputStream) throws java.io.IOException, java.security.cert.CertificateException
    {
        java.security.cert.CertificateFactory $r0;
        java.io.InputStream r1;
        java.util.Collection $r2;

        r1 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r2 = virtualinvoke $r0.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>(r1);

        return $r2;
    }

    private static char[] deobfuscate(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7, $i8, $i9, $i10, i12, i13;
        java.lang.String $r0, $r2, $r4, r6;
        boolean $z0;
        char $c11;
        char[] r1, $r3, $r5;

        r6 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("OBF:");

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r6.<java.lang.String: char[] toCharArray()>();

        return $r5;

     label1:
        $r0 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(4);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        r1 = newarray (char)[$i1];

        i12 = 0;

        i13 = 0;

     label2:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i13 >= $i2 goto label3;

        $i3 = i13 + 4;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i13, $i3);

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r4, 36);

        i5 = $i4 / 256;

        i6 = $i4 % 256;

        $i7 = i12;

        i12 = i12 + 1;

        $i8 = i5 + i6;

        $i9 = $i8 - 254;

        $i10 = $i9 / 2;

        $c11 = (char) $i10;

        r1[$i7] = $c11;

        i13 = i13 + 4;

        goto label2;

     label3:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i12);

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        return $r3;
    }

    public static javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType) throws java.security.GeneralSecurityException, java.io.IOException
    {
        org.apache.cxf.configuration.security.KeyManagersType r0;
        org.apache.cxf.configuration.security.KeyStoreType $r1;
        javax.net.ssl.KeyManagerFactory $r10;
        java.security.KeyStore $r2;
        char[] r4, $r9;
        java.lang.String r3, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        javax.net.ssl.KeyManager[] $r5;

        r0 := @parameter0: org.apache.cxf.configuration.security.KeyManagersType;

        $r1 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyManagersType: org.apache.cxf.configuration.security.KeyStoreType getKeyStore()>();

        $r2 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyManagersType: boolean isSetFactoryAlgorithm()>();

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyManagersType: java.lang.String getFactoryAlgorithm()>();

        goto label3;

     label2:
        $r8 = staticinvoke <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>();

     label3:
        r3 = $r8;

        $z1 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyManagersType: boolean isSetKeyPassword()>();

        if $z1 == 0 goto label4;

        $r7 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyManagersType: java.lang.String getKeyPassword()>();

        $r9 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: char[] deobfuscate(java.lang.String)>($r7);

        goto label5;

     label4:
        $r9 = null;

     label5:
        r4 = $r9;

        $z2 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyManagersType: boolean isSetProvider()>();

        if $z2 == 0 goto label6;

        $r6 = virtualinvoke r0.<org.apache.cxf.configuration.security.KeyManagersType: java.lang.String getProvider()>();

        $r10 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>(r3, $r6);

        goto label7;

     label6:
        $r10 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r3);

     label7:
        virtualinvoke $r10.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r2, r4);

        $r5 = virtualinvoke $r10.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();

        return $r5;
    }

    public static javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType) throws java.security.GeneralSecurityException, java.io.IOException
    {
        javax.net.ssl.TrustManagerFactory $r8;
        org.apache.cxf.configuration.security.KeyStoreType $r5;
        java.security.KeyStore r1, $r6;
        org.apache.cxf.configuration.security.CertStoreType $r4;
        javax.net.ssl.TrustManager[] $r2;
        org.apache.cxf.configuration.security.TrustManagersType r0;
        java.lang.String $r3, $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.apache.cxf.configuration.security.TrustManagersType;

        $z0 = virtualinvoke r0.<org.apache.cxf.configuration.security.TrustManagersType: boolean isSetKeyStore()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<org.apache.cxf.configuration.security.TrustManagersType: org.apache.cxf.configuration.security.KeyStoreType getKeyStore()>();

        $r6 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)>($r5);

        goto label3;

     label1:
        $z1 = virtualinvoke r0.<org.apache.cxf.configuration.security.TrustManagersType: boolean isSetCertStore()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<org.apache.cxf.configuration.security.TrustManagersType: org.apache.cxf.configuration.security.CertStoreType getCertStore()>();

        $r6 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)>($r4);

        goto label3;

     label2:
        $r6 = (java.security.KeyStore) null;

     label3:
        r1 = $r6;

        if $r6 != null goto label4;

        return null;

     label4:
        $z2 = virtualinvoke r0.<org.apache.cxf.configuration.security.TrustManagersType: boolean isSetFactoryAlgorithm()>();

        if $z2 == 0 goto label5;

        $r7 = virtualinvoke r0.<org.apache.cxf.configuration.security.TrustManagersType: java.lang.String getFactoryAlgorithm()>();

        goto label6;

     label5:
        $r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>();

     label6:
        $z3 = virtualinvoke r0.<org.apache.cxf.configuration.security.TrustManagersType: boolean isSetProvider()>();

        if $z3 == 0 goto label7;

        $r3 = virtualinvoke r0.<org.apache.cxf.configuration.security.TrustManagersType: java.lang.String getProvider()>();

        $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>($r7, $r3);

        goto label8;

     label7:
        $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r7);

     label8:
        virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1);

        $r2 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/configuration/jsse/spring/TLSParameterJaxBUtils;");

        <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
