class org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1 extends org.apache.commons.compress.utils.CountingOutputStream
{
    final org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0;

    void <init>(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile, java.io.OutputStream)
    {
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1 r0;
        java.io.OutputStream r2;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile r1;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1;

        r1 := @parameter0: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile;

        r2 := @parameter1: java.io.OutputStream;

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0> = r1;

        specialinvoke r0.<org.apache.commons.compress.utils.CountingOutputStream: void <init>(java.io.OutputStream)>(r2);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile $r1;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1 r0;
        int i0;
        java.util.zip.CRC32 $r2;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.compress.utils.CountingOutputStream: void write(int)>(i0);

        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0>;

        $r2 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZOutputFile: java.util.zip.CRC32 access$100(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile)>($r1);

        virtualinvoke $r2.<java.util.zip.CRC32: void update(int)>(i0);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        byte[] r1;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile $r2;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1 r0;
        java.util.zip.CRC32 $r3;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.commons.compress.utils.CountingOutputStream: void write(byte[])>(r1);

        $r2 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0>;

        $r3 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZOutputFile: java.util.zip.CRC32 access$100(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile)>($r2);

        virtualinvoke $r3.<java.util.zip.CRC32: void update(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile $r2;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1 r0;
        int i0, i1;
        java.util.zip.CRC32 $r3;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.commons.compress.utils.CountingOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $r2 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0>;

        $r3 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZOutputFile: java.util.zip.CRC32 access$100(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile)>($r2);

        virtualinvoke $r3.<java.util.zip.CRC32: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }
}
