public class org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor extends org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier implements org.apache.cxf.phase.PhaseInterceptor
{
    private java.lang.String phase;
    private org.apache.cxf.configuration.security.AuthorizationPolicy policy;

    public void <init>()
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        specialinvoke r0.<org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier: void <init>()>();

        r0.<org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor: java.lang.String phase> = "marshal";

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier: void <init>()>();

        r0.<org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor: java.lang.String phase> = "marshal";

        r0.<org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor: java.lang.String phase> = r1;

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r0;
        org.apache.cxf.message.Message r1;
        java.util.HashMap $r10;
        java.util.List $r9;
        org.apache.cxf.configuration.security.AuthorizationPolicy $r3;
        java.util.Map $r7, $r8, r12;
        java.lang.Object $r6;
        java.net.URI $r2;
        java.lang.String $r4, $r5, $r11;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor: java.net.URI getCurrentURI(org.apache.cxf.message.Message)>(r1);

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor: org.apache.cxf.configuration.security.AuthorizationPolicy getPolicy()>();

        $r4 = specialinvoke r0.<org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier: java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URI,org.apache.cxf.message.Message)>($r3, $r2, r1);

        $r5 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r6 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.util.Map) $r6;

        $r8 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r7);

        r12 = $r8;

        if $r8 != null goto label1;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r12 = $r10;

        $r11 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

     label1:
        $r9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Authorization", $r9);

        return;
    }

    private java.net.URI getCurrentURI(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r7;
        org.apache.cxf.message.Message r1;
        java.net.URISyntaxException $r5;
        java.lang.RuntimeException $r6;
        java.lang.Object $r3;
        java.net.URI $r0;
        java.lang.String $r2, $r4;

        r7 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

     label1:
        $r0 = new java.net.URI;

        $r2 = <org.apache.cxf.message.Message: java.lang.String ENDPOINT_ADDRESS>;

        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.String) $r3;

        specialinvoke $r0.<java.net.URI: void <init>(java.lang.String)>($r4);

     label2:
        return $r0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public void handleFault(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        return;
    }

    public java.util.Set getAfter()
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r1;
        java.util.Set $r0;

        r1 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        $r0 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r0;
    }

    public java.util.Set getBefore()
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r1;
        java.util.Set $r0;

        r1 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        $r0 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r0;
    }

    public java.lang.String getId()
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getPhase()
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        $r1 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor: java.lang.String phase>;

        return $r1;
    }

    public java.util.Collection getAdditionalInterceptors()
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r1;
        java.util.Set $r0;

        r1 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        $r0 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r0;
    }

    public org.apache.cxf.configuration.security.AuthorizationPolicy getPolicy()
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r0;
        org.apache.cxf.configuration.security.AuthorizationPolicy $r1;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        $r1 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor: org.apache.cxf.configuration.security.AuthorizationPolicy policy>;

        return $r1;
    }

    public void setPolicy(org.apache.cxf.configuration.security.AuthorizationPolicy)
    {
        org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor r0;
        org.apache.cxf.configuration.security.AuthorizationPolicy r1;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor;

        r1 := @parameter0: org.apache.cxf.configuration.security.AuthorizationPolicy;

        r0.<org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor: org.apache.cxf.configuration.security.AuthorizationPolicy policy> = r1;

        return;
    }
}
