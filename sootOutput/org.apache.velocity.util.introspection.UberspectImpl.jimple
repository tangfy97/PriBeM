public class org.apache.velocity.util.introspection.UberspectImpl extends java.lang.Object implements org.apache.velocity.util.introspection.Uberspect, org.apache.velocity.util.introspection.UberspectLoggable
{
    protected org.apache.velocity.runtime.log.Log log;
    protected org.apache.velocity.util.introspection.Introspector introspector;
    static java.lang.Class class$java$util$Iterator;
    static java.lang.Class class$org$apache$velocity$util$ArrayListWrapper;
    static java.lang.Class class$java$lang$Class;

    public void <init>()
    {
        org.apache.velocity.util.introspection.UberspectImpl r0;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init()
    {
        org.apache.velocity.runtime.log.Log $r2;
        org.apache.velocity.util.introspection.UberspectImpl r0;
        org.apache.velocity.util.introspection.Introspector $r1;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl;

        $r1 = new org.apache.velocity.util.introspection.Introspector;

        $r2 = r0.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        specialinvoke $r1.<org.apache.velocity.util.introspection.Introspector: void <init>(org.apache.velocity.runtime.log.Log)>($r2);

        r0.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.util.introspection.Introspector introspector> = $r1;

        return;
    }

    public void setLog(org.apache.velocity.runtime.log.Log)
    {
        org.apache.velocity.runtime.log.Log r1;
        org.apache.velocity.util.introspection.UberspectImpl r0;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl;

        r1 := @parameter0: org.apache.velocity.runtime.log.Log;

        r0.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log> = r1;

        return;
    }

    public void setRuntimeLogger(org.apache.velocity.runtime.RuntimeLogger)
    {
        org.apache.velocity.runtime.log.RuntimeLoggerLog $r1;
        org.apache.velocity.util.introspection.UberspectImpl r0;
        org.apache.velocity.runtime.RuntimeLogger r2;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl;

        r2 := @parameter0: org.apache.velocity.runtime.RuntimeLogger;

        $r1 = new org.apache.velocity.runtime.log.RuntimeLoggerLog;

        specialinvoke $r1.<org.apache.velocity.runtime.log.RuntimeLoggerLog: void <init>(org.apache.velocity.runtime.RuntimeLogger)>(r2);

        virtualinvoke r0.<org.apache.velocity.util.introspection.UberspectImpl: void setLog(org.apache.velocity.runtime.log.Log)>($r1);

        return;
    }

    public java.util.Iterator getIterator(java.lang.Object, org.apache.velocity.util.introspection.Info) throws java.lang.Exception
    {
        java.util.Enumeration $r23;
        java.util.Map $r42;
        org.apache.velocity.exception.VelocityException $r50;
        org.apache.velocity.util.ArrayIterator $r47;
        java.lang.Exception $r49;
        org.apache.velocity.util.introspection.UberspectImpl r6;
        java.lang.StringBuffer $r7, $r9, $r11, $r12, $r14, $r16, $r17, $r24, $r26, $r27, $r28, $r29, $r30, $r34, $r36, $r37, $r38, $r39, $r40, $r51, $r52, $r55, $r56;
        java.lang.String $r13, $r18, $r31, $r41, $r54, $r57;
        org.apache.velocity.runtime.log.Log $r8, $r15, $r21, $r25, $r32, $r35;
        java.lang.NoSuchMethodException $r48;
        java.lang.reflect.Method $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Collection $r43, $r45;
        org.apache.velocity.util.introspection.Info r10;
        org.apache.velocity.util.EnumerationIterator $r22;
        java.util.Iterator $r20, $r33, $r44, $r46;
        java.lang.Object r0, $r19;
        java.lang.Class $r1, $r2, $r4, $r5, $r53, $r58;

        r6 := @this: org.apache.velocity.util.introspection.UberspectImpl;

        r0 := @parameter0: java.lang.Object;

        r10 := @parameter1: org.apache.velocity.util.introspection.Info;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label01;

        $r47 = new org.apache.velocity.util.ArrayIterator;

        specialinvoke $r47.<org.apache.velocity.util.ArrayIterator: void <init>(java.lang.Object)>(r0);

        return $r47;

     label01:
        $z1 = r0 instanceof java.util.Collection;

        if $z1 == 0 goto label02;

        $r45 = (java.util.Collection) r0;

        $r46 = interfaceinvoke $r45.<java.util.Collection: java.util.Iterator iterator()>();

        return $r46;

     label02:
        $z2 = r0 instanceof java.util.Map;

        if $z2 == 0 goto label03;

        $r42 = (java.util.Map) r0;

        $r43 = interfaceinvoke $r42.<java.util.Map: java.util.Collection values()>();

        $r44 = interfaceinvoke $r43.<java.util.Collection: java.util.Iterator iterator()>();

        return $r44;

     label03:
        $z3 = r0 instanceof java.util.Iterator;

        if $z3 == 0 goto label05;

        $r32 = r6.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $z7 = virtualinvoke $r32.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z7 == 0 goto label04;

        $r35 = r6.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The iterative object in the #foreach() loop at ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r10);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is of type java.util.Iterator.  Because ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("it is not resettable, if used in more than once it ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("may lead to unexpected results.");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r35.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r41);

     label04:
        $r33 = (java.util.Iterator) r0;

        return $r33;

     label05:
        $z4 = r0 instanceof java.util.Enumeration;

        if $z4 == 0 goto label07;

        $r21 = r6.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $z6 = virtualinvoke $r21.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z6 == 0 goto label06;

        $r25 = r6.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The iterative object in the #foreach() loop at ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r10);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is of type java.util.Enumeration.  Because ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("it is not resettable, if used in more than once it ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("may lead to unexpected results.");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r25.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r31);

     label06:
        $r22 = new org.apache.velocity.util.EnumerationIterator;

        $r23 = (java.util.Enumeration) r0;

        specialinvoke $r22.<org.apache.velocity.util.EnumerationIterator: void <init>(java.util.Enumeration)>($r23);

        return $r22;

     label07:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label08:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("iterator", null);

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r5 = <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$java$util$Iterator>;

        if $r5 != null goto label09;

        $r58 = staticinvoke <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$(java.lang.String)>("java.util.Iterator");

        <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$java$util$Iterator> = $r58;

        goto label10;

     label09:
        $r58 = <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$java$util$Iterator>;

     label10:
        $z5 = virtualinvoke $r58.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z5 == 0 goto label14;

     label11:
        $r19 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, null);

        $r20 = (java.util.Iterator) $r19;

     label12:
        return $r20;

     label13:
        $r49 := @caughtexception;

        $r50 = new org.apache.velocity.exception.VelocityException;

        $r51 = new java.lang.StringBuffer;

        specialinvoke $r51.<java.lang.StringBuffer: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error invoking the method \'iterator\' on class \'");

        $r53 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r54 = virtualinvoke $r53.<java.lang.Class: java.lang.String getName()>();

        $r55 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r50.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r57, $r49);

        throw $r50;

     label14:
        $r8 = r6.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("iterator() method of reference in #foreach loop at ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not return a true Iterator.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r13);

     label15:
        goto label17;

     label16:
        $r48 := @caughtexception;

     label17:
        $r15 = r6.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not determine type of iterator in #foreach loop at ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r10);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r15.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r18);

        return null;

        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.NoSuchMethodException from label08 to label12 with label16;
        catch java.lang.NoSuchMethodException from label13 to label15 with label16;
    }

    public org.apache.velocity.util.introspection.VelMethod getMethod(java.lang.Object, java.lang.String, java.lang.Object[], org.apache.velocity.util.introspection.Info) throws java.lang.Exception
    {
        java.lang.Object[] r5;
        org.apache.velocity.util.introspection.UberspectImpl r1;
        org.apache.velocity.util.introspection.Info r18;
        org.apache.velocity.util.introspection.Introspector $r2, $r10, $r14;
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl $r12, $r16, $r17;
        java.lang.String r4;
        java.lang.reflect.Method $r6, $r11, $r15;
        boolean $z0;
        java.lang.Object r0;
        java.lang.Class $r3, $r7, $r8, $r9, $r13, $r19, $r20;

        r1 := @this: org.apache.velocity.util.introspection.UberspectImpl;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Object[];

        r18 := @parameter3: org.apache.velocity.util.introspection.Info;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.util.introspection.Introspector introspector>;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r2.<org.apache.velocity.util.introspection.Introspector: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Object[])>($r3, r4, r5);

        if $r6 == null goto label2;

        $r17 = new org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        specialinvoke $r17.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: void <init>(java.lang.reflect.Method)>($r6);

        return $r17;

     label2:
        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label5;

        $r14 = r1.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.util.introspection.Introspector introspector>;

        $r13 = <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$org$apache$velocity$util$ArrayListWrapper>;

        if $r13 != null goto label3;

        $r19 = staticinvoke <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$(java.lang.String)>("org.apache.velocity.util.ArrayListWrapper");

        <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$org$apache$velocity$util$ArrayListWrapper> = $r19;

        goto label4;

     label3:
        $r19 = <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$org$apache$velocity$util$ArrayListWrapper>;

     label4:
        $r15 = virtualinvoke $r14.<org.apache.velocity.util.introspection.Introspector: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Object[])>($r19, r4, r5);

        if $r15 == null goto label8;

        $r16 = new org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        specialinvoke $r16.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: void <init>(java.lang.reflect.Method,boolean)>($r15, 1);

        return $r16;

     label5:
        $r8 = <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$java$lang$Class>;

        if $r8 != null goto label6;

        $r20 = staticinvoke <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$java$lang$Class> = $r20;

        goto label7;

     label6:
        $r20 = <org.apache.velocity.util.introspection.UberspectImpl: java.lang.Class class$java$lang$Class>;

     label7:
        if $r7 != $r20 goto label8;

        $r10 = r1.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.util.introspection.Introspector introspector>;

        $r9 = (java.lang.Class) r0;

        $r11 = virtualinvoke $r10.<org.apache.velocity.util.introspection.Introspector: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Object[])>($r9, r4, r5);

        if $r11 == null goto label8;

        $r12 = new org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        specialinvoke $r12.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: void <init>(java.lang.reflect.Method)>($r11);

        return $r12;

     label8:
        return null;
    }

    public org.apache.velocity.util.introspection.VelPropertyGet getPropertyGet(java.lang.Object, java.lang.String, org.apache.velocity.util.introspection.Info) throws java.lang.Exception
    {
        org.apache.velocity.runtime.parser.node.MapGetExecutor $r13;
        org.apache.velocity.util.introspection.UberspectImpl r3;
        org.apache.velocity.util.introspection.Info r15;
        org.apache.velocity.runtime.parser.node.PropertyExecutor $r2;
        org.apache.velocity.util.introspection.Introspector $r5, $r8, $r11;
        org.apache.velocity.runtime.parser.node.AbstractExecutor r16;
        java.lang.String r4;
        org.apache.velocity.runtime.parser.node.GetExecutor $r10;
        boolean $z0, $z1, $z2, $z3;
        org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl $r17;
        org.apache.velocity.runtime.log.Log $r6, $r9, $r12, $r14;
        java.lang.Object r0;
        java.lang.Class $r1;
        org.apache.velocity.runtime.parser.node.BooleanPropertyExecutor $r7;

        r3 := @this: org.apache.velocity.util.introspection.UberspectImpl;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.String;

        r15 := @parameter2: org.apache.velocity.util.introspection.Info;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = new org.apache.velocity.runtime.parser.node.PropertyExecutor;

        $r6 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $r5 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.util.introspection.Introspector introspector>;

        specialinvoke $r2.<org.apache.velocity.runtime.parser.node.PropertyExecutor: void <init>(org.apache.velocity.runtime.log.Log,org.apache.velocity.util.introspection.Introspector,java.lang.Class,java.lang.String)>($r6, $r5, $r1, r4);

        r16 = $r2;

        $z0 = virtualinvoke $r2.<org.apache.velocity.runtime.parser.node.AbstractExecutor: boolean isAlive()>();

        if $z0 != 0 goto label2;

        $r13 = new org.apache.velocity.runtime.parser.node.MapGetExecutor;

        $r14 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        specialinvoke $r13.<org.apache.velocity.runtime.parser.node.MapGetExecutor: void <init>(org.apache.velocity.runtime.log.Log,java.lang.Class,java.lang.String)>($r14, $r1, r4);

        r16 = $r13;

     label2:
        $z1 = virtualinvoke r16.<org.apache.velocity.runtime.parser.node.AbstractExecutor: boolean isAlive()>();

        if $z1 != 0 goto label3;

        $r10 = new org.apache.velocity.runtime.parser.node.GetExecutor;

        $r12 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $r11 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.util.introspection.Introspector introspector>;

        specialinvoke $r10.<org.apache.velocity.runtime.parser.node.GetExecutor: void <init>(org.apache.velocity.runtime.log.Log,org.apache.velocity.util.introspection.Introspector,java.lang.Class,java.lang.String)>($r12, $r11, $r1, r4);

        r16 = $r10;

     label3:
        $z2 = virtualinvoke r16.<org.apache.velocity.runtime.parser.node.AbstractExecutor: boolean isAlive()>();

        if $z2 != 0 goto label4;

        $r7 = new org.apache.velocity.runtime.parser.node.BooleanPropertyExecutor;

        $r9 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $r8 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.util.introspection.Introspector introspector>;

        specialinvoke $r7.<org.apache.velocity.runtime.parser.node.BooleanPropertyExecutor: void <init>(org.apache.velocity.runtime.log.Log,org.apache.velocity.util.introspection.Introspector,java.lang.Class,java.lang.String)>($r9, $r8, $r1, r4);

        r16 = $r7;

     label4:
        $z3 = virtualinvoke r16.<org.apache.velocity.runtime.parser.node.AbstractExecutor: boolean isAlive()>();

        if $z3 == 0 goto label5;

        $r17 = new org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl;

        specialinvoke $r17.<org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl: void <init>(org.apache.velocity.runtime.parser.node.AbstractExecutor)>(r16);

        goto label6;

     label5:
        $r17 = null;

     label6:
        return $r17;
    }

    public org.apache.velocity.util.introspection.VelPropertySet getPropertySet(java.lang.Object, java.lang.String, java.lang.Object, org.apache.velocity.util.introspection.Info) throws java.lang.Exception
    {
        org.apache.velocity.util.introspection.UberspectImpl r3;
        org.apache.velocity.util.introspection.Info r13;
        org.apache.velocity.util.introspection.Introspector $r6, $r9;
        org.apache.velocity.runtime.parser.node.SetExecutor r14;
        java.lang.String r4;
        boolean $z0, $z1, $z2;
        org.apache.velocity.runtime.parser.node.SetPropertyExecutor $r2;
        org.apache.velocity.runtime.log.Log $r7, $r10, $r12;
        org.apache.velocity.util.introspection.UberspectImpl$VelSetterImpl $r15;
        java.lang.Object r0, r5;
        java.lang.Class $r1;
        org.apache.velocity.runtime.parser.node.PutExecutor $r8;
        org.apache.velocity.runtime.parser.node.MapSetExecutor $r11;

        r3 := @this: org.apache.velocity.util.introspection.UberspectImpl;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Object;

        r13 := @parameter3: org.apache.velocity.util.introspection.Info;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = new org.apache.velocity.runtime.parser.node.SetPropertyExecutor;

        $r7 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $r6 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.util.introspection.Introspector introspector>;

        specialinvoke $r2.<org.apache.velocity.runtime.parser.node.SetPropertyExecutor: void <init>(org.apache.velocity.runtime.log.Log,org.apache.velocity.util.introspection.Introspector,java.lang.Class,java.lang.String,java.lang.Object)>($r7, $r6, $r1, r4, r5);

        r14 = $r2;

        $z0 = virtualinvoke $r2.<org.apache.velocity.runtime.parser.node.SetExecutor: boolean isAlive()>();

        if $z0 != 0 goto label2;

        $r11 = new org.apache.velocity.runtime.parser.node.MapSetExecutor;

        $r12 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        specialinvoke $r11.<org.apache.velocity.runtime.parser.node.MapSetExecutor: void <init>(org.apache.velocity.runtime.log.Log,java.lang.Class,java.lang.String)>($r12, $r1, r4);

        r14 = $r11;

     label2:
        $z1 = virtualinvoke r14.<org.apache.velocity.runtime.parser.node.SetExecutor: boolean isAlive()>();

        if $z1 != 0 goto label3;

        $r8 = new org.apache.velocity.runtime.parser.node.PutExecutor;

        $r10 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.runtime.log.Log log>;

        $r9 = r3.<org.apache.velocity.util.introspection.UberspectImpl: org.apache.velocity.util.introspection.Introspector introspector>;

        specialinvoke $r8.<org.apache.velocity.runtime.parser.node.PutExecutor: void <init>(org.apache.velocity.runtime.log.Log,org.apache.velocity.util.introspection.Introspector,java.lang.Class,java.lang.Object,java.lang.String)>($r10, $r9, $r1, r5, r4);

        r14 = $r8;

     label3:
        $z2 = virtualinvoke r14.<org.apache.velocity.runtime.parser.node.SetExecutor: boolean isAlive()>();

        if $z2 == 0 goto label4;

        $r15 = new org.apache.velocity.util.introspection.UberspectImpl$VelSetterImpl;

        specialinvoke $r15.<org.apache.velocity.util.introspection.UberspectImpl$VelSetterImpl: void <init>(org.apache.velocity.runtime.parser.node.SetExecutor)>(r14);

        goto label5;

     label4:
        $r15 = null;

     label5:
        return $r15;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
