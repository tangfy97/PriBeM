final class com.hp.hpl.jena.ontology.impl.RDFSProfile$1 extends com.hp.hpl.jena.ontology.impl.RDFSProfile$SupportsCheck
{

    void <init>()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile$1 r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile$1;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.RDFSProfile$SupportsCheck: void <init>()>();

        return;
    }

    public boolean doCheck(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.graph.Node r2, $r4, $r6, $r9, $r11, $r13, $r16, $r17, $r20, $r21;
        com.hp.hpl.jena.enhanced.EnhGraph r0;
        com.hp.hpl.jena.rdf.model.Property $r3, $r8, $r15, $r19;
        com.hp.hpl.jena.graph.Graph $r1, $r7, $r14, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.hp.hpl.jena.ontology.impl.RDFSProfile$1 r22;
        com.hp.hpl.jena.rdf.model.Resource $r5, $r10, $r12;

        r22 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile$1;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhGraph: com.hp.hpl.jena.graph.Graph asGraph()>();

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r5 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Class>;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, $r4, $r6);

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhGraph: com.hp.hpl.jena.graph.Graph asGraph()>();

        $r8 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r10 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Datatype>;

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        $z1 = interfaceinvoke $r7.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, $r9, $r11);

        if $z1 != 0 goto label1;

        $r12 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Resource>;

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        $z2 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>($r13);

        if $z2 != 0 goto label1;

        $r14 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhGraph: com.hp.hpl.jena.graph.Graph asGraph()>();

        $r16 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r15 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property domain>;

        $r17 = interfaceinvoke $r15.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $z3 = interfaceinvoke $r14.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r16, $r17, r2);

        if $z3 != 0 goto label1;

        $r18 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhGraph: com.hp.hpl.jena.graph.Graph asGraph()>();

        $r20 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r19 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property range>;

        $r21 = interfaceinvoke $r19.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $z4 = interfaceinvoke $r18.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r20, $r21, r2);

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }
}
