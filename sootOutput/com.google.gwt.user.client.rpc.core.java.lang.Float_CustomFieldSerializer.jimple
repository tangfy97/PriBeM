public final class com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer extends java.lang.Object
{

    public void <init>()
    {
        com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer r0;

        r0 := @this: com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void deserialize(com.google.gwt.user.client.rpc.SerializationStreamReader, java.lang.Float)
    {
        java.lang.Float r1;
        com.google.gwt.user.client.rpc.SerializationStreamReader r0;

        r0 := @parameter0: com.google.gwt.user.client.rpc.SerializationStreamReader;

        r1 := @parameter1: java.lang.Float;

        return;
    }

    public static java.lang.Float instantiate(com.google.gwt.user.client.rpc.SerializationStreamReader) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Float $r0;
        float $f0;
        com.google.gwt.user.client.rpc.SerializationStreamReader r1;

        r1 := @parameter0: com.google.gwt.user.client.rpc.SerializationStreamReader;

        $r0 = new java.lang.Float;

        $f0 = interfaceinvoke r1.<com.google.gwt.user.client.rpc.SerializationStreamReader: float readFloat()>();

        specialinvoke $r0.<java.lang.Float: void <init>(float)>($f0);

        return $r0;
    }

    public static void serialize(com.google.gwt.user.client.rpc.SerializationStreamWriter, java.lang.Float) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Float r1;
        float $f0;
        com.google.gwt.user.client.rpc.SerializationStreamWriter r0;

        r0 := @parameter0: com.google.gwt.user.client.rpc.SerializationStreamWriter;

        r1 := @parameter1: java.lang.Float;

        $f0 = virtualinvoke r1.<java.lang.Float: float floatValue()>();

        interfaceinvoke r0.<com.google.gwt.user.client.rpc.SerializationStreamWriter: void writeFloat(float)>($f0);

        return;
    }
}
