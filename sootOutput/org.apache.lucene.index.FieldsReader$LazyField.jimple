class org.apache.lucene.index.FieldsReader$LazyField extends org.apache.lucene.document.AbstractField implements org.apache.lucene.document.Fieldable
{
    private int toRead;
    private long pointer;
    private boolean isCompressed;
    private boolean cacheResult;
    final org.apache.lucene.index.FieldsReader this$0;

    public void <init>(org.apache.lucene.index.FieldsReader, java.lang.String, org.apache.lucene.document.Field$Store, int, long, boolean, boolean, boolean)
    {
        org.apache.lucene.document.Field$Store r3;
        org.apache.lucene.document.Field$Index $r5;
        org.apache.lucene.document.Field$TermVector $r4;
        long l1;
        org.apache.lucene.index.FieldsReader r1;
        org.apache.lucene.index.FieldsReader$LazyField r0;
        int i0;
        java.lang.String r2;
        boolean z0, z1, z2;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        r1 := @parameter0: org.apache.lucene.index.FieldsReader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.lucene.document.Field$Store;

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        z0 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0> = r1;

        $r5 = <org.apache.lucene.document.Field$Index: org.apache.lucene.document.Field$Index NO>;

        $r4 = <org.apache.lucene.document.Field$TermVector: org.apache.lucene.document.Field$TermVector NO>;

        specialinvoke r0.<org.apache.lucene.document.AbstractField: void <init>(java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)>(r2, r3, $r5, $r4);

        r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead> = i0;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: long pointer> = l1;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean isBinary> = z0;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean cacheResult> = z1;

        if z0 == 0 goto label1;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: int binaryLength> = i0;

     label1:
        r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean lazy> = 1;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean isCompressed> = z2;

        return;
    }

    public void <init>(org.apache.lucene.index.FieldsReader, java.lang.String, org.apache.lucene.document.Field$Store, org.apache.lucene.document.Field$Index, org.apache.lucene.document.Field$TermVector, int, long, boolean, boolean, boolean)
    {
        org.apache.lucene.document.Field$Store r3;
        org.apache.lucene.document.Field$Index r4;
        org.apache.lucene.document.Field$TermVector r5;
        long l1;
        org.apache.lucene.index.FieldsReader r1;
        org.apache.lucene.index.FieldsReader$LazyField r0;
        int i0;
        java.lang.String r2;
        boolean z0, z1, z2;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        r1 := @parameter0: org.apache.lucene.index.FieldsReader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.lucene.document.Field$Store;

        r4 := @parameter3: org.apache.lucene.document.Field$Index;

        r5 := @parameter4: org.apache.lucene.document.Field$TermVector;

        i0 := @parameter5: int;

        l1 := @parameter6: long;

        z0 := @parameter7: boolean;

        z2 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0> = r1;

        specialinvoke r0.<org.apache.lucene.document.AbstractField: void <init>(java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)>(r2, r3, r4, r5);

        r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead> = i0;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: long pointer> = l1;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean isBinary> = z0;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean cacheResult> = z1;

        if z0 == 0 goto label1;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: int binaryLength> = i0;

     label1:
        r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean lazy> = 1;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean isCompressed> = z2;

        return;
    }

    private org.apache.lucene.store.IndexInput getFieldStream()
    {
        org.apache.lucene.store.IndexInput $r5, r9;
        org.apache.lucene.util.CloseableThreadLocal $r2, $r8;
        org.apache.lucene.index.FieldsReader $r1, $r4, $r7;
        org.apache.lucene.index.FieldsReader$LazyField r0;
        java.lang.Object $r3, $r6;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        $r1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        $r2 = staticinvoke <org.apache.lucene.index.FieldsReader: org.apache.lucene.util.CloseableThreadLocal access$000(org.apache.lucene.index.FieldsReader)>($r1);

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.CloseableThreadLocal: java.lang.Object get()>();

        r9 = (org.apache.lucene.store.IndexInput) $r3;

        if r9 != null goto label1;

        $r4 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        $r5 = staticinvoke <org.apache.lucene.index.FieldsReader: org.apache.lucene.store.IndexInput access$100(org.apache.lucene.index.FieldsReader)>($r4);

        $r6 = virtualinvoke $r5.<org.apache.lucene.store.IndexInput: java.lang.Object clone()>();

        r9 = (org.apache.lucene.store.IndexInput) $r6;

        $r7 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        $r8 = staticinvoke <org.apache.lucene.index.FieldsReader: org.apache.lucene.util.CloseableThreadLocal access$000(org.apache.lucene.index.FieldsReader)>($r7);

        virtualinvoke $r8.<org.apache.lucene.util.CloseableThreadLocal: void set(java.lang.Object)>(r9);

     label1:
        return r9;
    }

    public java.io.Reader readerValue()
    {
        org.apache.lucene.index.FieldsReader $r1;
        org.apache.lucene.index.FieldsReader$LazyField r0;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        $r1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        staticinvoke <org.apache.lucene.index.FieldsReader: void access$200(org.apache.lucene.index.FieldsReader)>($r1);

        return null;
    }

    public org.apache.lucene.analysis.TokenStream tokenStreamValue()
    {
        org.apache.lucene.index.FieldsReader $r1;
        org.apache.lucene.index.FieldsReader$LazyField r0;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        $r1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        staticinvoke <org.apache.lucene.index.FieldsReader: void access$200(org.apache.lucene.index.FieldsReader)>($r1);

        return null;
    }

    public java.lang.String stringValue()
    {
        byte[] $r11, r14, r16;
        long $l0;
        org.apache.lucene.index.FieldReaderException $r13;
        org.apache.lucene.index.FieldsReader$LazyField r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r4, $r7, $r8, $r9, r15;
        boolean $z0, $z1, $z2;
        org.apache.lucene.store.IndexInput $r5;
        java.io.IOException $r12;
        org.apache.lucene.index.FieldsReader $r1, $r6, $r10;
        char[] r17;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        $r1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        staticinvoke <org.apache.lucene.index.FieldsReader: void access$200(org.apache.lucene.index.FieldsReader)>($r1);

        $z0 = r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean isBinary>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.lucene.index.FieldsReader$LazyField: java.lang.Object fieldsData>;

        if $r2 != null goto label9;

        $r5 = specialinvoke r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.store.IndexInput getFieldStream()>();

     label2:
        $l0 = r0.<org.apache.lucene.index.FieldsReader$LazyField: long pointer>;

        virtualinvoke $r5.<org.apache.lucene.store.IndexInput: void seek(long)>($l0);

        $z1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean isCompressed>;

        if $z1 == 0 goto label3;

        $i6 = r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead>;

        r14 = newarray (byte)[$i6];

        $i7 = lengthof r14;

        virtualinvoke $r5.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>(r14, 0, $i7);

        $r9 = new java.lang.String;

        $r10 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        $r11 = staticinvoke <org.apache.lucene.index.FieldsReader: byte[] access$300(org.apache.lucene.index.FieldsReader,byte[])>($r10, r14);

        specialinvoke $r9.<java.lang.String: void <init>(byte[],java.lang.String)>($r11, "UTF-8");

        r15 = $r9;

        goto label5;

     label3:
        $r6 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        $i1 = staticinvoke <org.apache.lucene.index.FieldsReader: int access$400(org.apache.lucene.index.FieldsReader)>($r6);

        if $i1 < 1 goto label4;

        $i4 = r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead>;

        r16 = newarray (byte)[$i4];

        $i5 = r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead>;

        virtualinvoke $r5.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>(r16, 0, $i5);

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(byte[],java.lang.String)>(r16, "UTF-8");

        r15 = $r8;

        goto label5;

     label4:
        $i2 = r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead>;

        r17 = newarray (char)[$i2];

        $i3 = r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead>;

        virtualinvoke $r5.<org.apache.lucene.store.IndexInput: void readChars(char[],int,int)>(r17, 0, $i3);

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(char[])>(r17);

        r15 = $r7;

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        $r13 = new org.apache.lucene.index.FieldReaderException;

        specialinvoke $r13.<org.apache.lucene.index.FieldReaderException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label7:
        $z2 = r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean cacheResult>;

        if $z2 == 0 goto label8;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: java.lang.Object fieldsData> = r15;

     label8:
        return r15;

     label9:
        $r3 = r0.<org.apache.lucene.index.FieldsReader$LazyField: java.lang.Object fieldsData>;

        $r4 = (java.lang.String) $r3;

        return $r4;

        catch java.io.IOException from label2 to label5 with label6;
    }

    public long getPointer()
    {
        org.apache.lucene.index.FieldsReader $r1;
        org.apache.lucene.index.FieldsReader$LazyField r0;
        long $l0;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        $r1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        staticinvoke <org.apache.lucene.index.FieldsReader: void access$200(org.apache.lucene.index.FieldsReader)>($r1);

        $l0 = r0.<org.apache.lucene.index.FieldsReader$LazyField: long pointer>;

        return $l0;
    }

    public void setPointer(long)
    {
        org.apache.lucene.index.FieldsReader $r1;
        org.apache.lucene.index.FieldsReader$LazyField r0;
        long l0;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        staticinvoke <org.apache.lucene.index.FieldsReader: void access$200(org.apache.lucene.index.FieldsReader)>($r1);

        r0.<org.apache.lucene.index.FieldsReader$LazyField: long pointer> = l0;

        return;
    }

    public int getToRead()
    {
        org.apache.lucene.index.FieldsReader $r1;
        int $i0;
        org.apache.lucene.index.FieldsReader$LazyField r0;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        $r1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        staticinvoke <org.apache.lucene.index.FieldsReader: void access$200(org.apache.lucene.index.FieldsReader)>($r1);

        $i0 = r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead>;

        return $i0;
    }

    public void setToRead(int)
    {
        org.apache.lucene.index.FieldsReader $r1;
        int i0;
        org.apache.lucene.index.FieldsReader$LazyField r0;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        staticinvoke <org.apache.lucene.index.FieldsReader: void access$200(org.apache.lucene.index.FieldsReader)>($r1);

        r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead> = i0;

        return;
    }

    public byte[] getBinaryValue(byte[])
    {
        byte[] $r4, $r5, r6, r11, r12;
        long $l1;
        org.apache.lucene.index.FieldReaderException $r10;
        org.apache.lucene.index.FieldsReader$LazyField r0;
        int $i0, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2;
        org.apache.lucene.store.IndexInput $r7;
        java.io.IOException $r9;
        org.apache.lucene.index.FieldsReader $r1, $r8;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.lucene.index.FieldsReader$LazyField;

        r6 := @parameter0: byte[];

        $r1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        staticinvoke <org.apache.lucene.index.FieldsReader: void access$200(org.apache.lucene.index.FieldsReader)>($r1);

        $z0 = r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean isBinary>;

        if $z0 == 0 goto label11;

        $r2 = r0.<org.apache.lucene.index.FieldsReader$LazyField: java.lang.Object fieldsData>;

        if $r2 != null goto label10;

        if r6 == null goto label01;

        $i5 = lengthof r6;

        $i4 = r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead>;

        if $i5 >= $i4 goto label02;

     label01:
        $i0 = r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead>;

        r11 = newarray (byte)[$i0];

        goto label03;

     label02:
        r11 = r6;

     label03:
        $r7 = specialinvoke r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.store.IndexInput getFieldStream()>();

     label04:
        $l1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: long pointer>;

        virtualinvoke $r7.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);

        $i2 = r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead>;

        virtualinvoke $r7.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>(r11, 0, $i2);

        $z1 = r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean isCompressed>;

        if $z1 != 1 goto label05;

        $r8 = r0.<org.apache.lucene.index.FieldsReader$LazyField: org.apache.lucene.index.FieldsReader this$0>;

        r12 = staticinvoke <org.apache.lucene.index.FieldsReader: byte[] access$300(org.apache.lucene.index.FieldsReader,byte[])>($r8, r11);

        goto label06;

     label05:
        r12 = r11;

     label06:
        goto label08;

     label07:
        $r9 := @caughtexception;

        $r10 = new org.apache.lucene.index.FieldReaderException;

        specialinvoke $r10.<org.apache.lucene.index.FieldReaderException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label08:
        r0.<org.apache.lucene.index.FieldsReader$LazyField: int binaryOffset> = 0;

        $i3 = r0.<org.apache.lucene.index.FieldsReader$LazyField: int toRead>;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: int binaryLength> = $i3;

        $z2 = r0.<org.apache.lucene.index.FieldsReader$LazyField: boolean cacheResult>;

        if $z2 != 1 goto label09;

        r0.<org.apache.lucene.index.FieldsReader$LazyField: java.lang.Object fieldsData> = r12;

     label09:
        return r12;

     label10:
        $r3 = r0.<org.apache.lucene.index.FieldsReader$LazyField: java.lang.Object fieldsData>;

        $r4 = (byte[]) $r3;

        $r5 = (byte[]) $r4;

        return $r5;

     label11:
        return null;

        catch java.io.IOException from label04 to label06 with label07;
    }
}
