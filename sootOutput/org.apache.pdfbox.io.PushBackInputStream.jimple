public class org.apache.pdfbox.io.PushBackInputStream extends java.io.PushbackInputStream
{
    private long offset;
    private final org.apache.pdfbox.io.RandomAccessRead raInput;

    public void <init>(java.io.InputStream, int) throws java.io.IOException
    {
        org.apache.pdfbox.io.PushBackInputStream r0;
        org.apache.pdfbox.io.RandomAccessRead $r3;
        int i0;
        java.io.IOException $r2;
        java.io.InputStream r1;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(r1, i0);

        r0.<org.apache.pdfbox.io.PushBackInputStream: long offset> = 0L;

        if r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Error: input was null");

        throw $r2;

     label1:
        $z0 = r1 instanceof org.apache.pdfbox.io.RandomAccessRead;

        if $z0 == 0 goto label2;

        $r3 = (org.apache.pdfbox.io.RandomAccessRead) r1;

        goto label3;

     label2:
        $r3 = null;

     label3:
        r0.<org.apache.pdfbox.io.PushBackInputStream: org.apache.pdfbox.io.RandomAccessRead raInput> = $r3;

        return;
    }

    public int peek() throws java.io.IOException
    {
        int $i0, $i2;
        org.apache.pdfbox.io.PushBackInputStream r0;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.io.PushBackInputStream: int read()>();

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        virtualinvoke r0.<org.apache.pdfbox.io.PushBackInputStream: void unread(int)>($i0);

     label1:
        return $i0;
    }

    public long getOffset()
    {
        long $l0;
        org.apache.pdfbox.io.PushBackInputStream r0;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        $l0 = r0.<org.apache.pdfbox.io.PushBackInputStream: long offset>;

        return $l0;
    }

    public int read() throws java.io.IOException
    {
        org.apache.pdfbox.io.PushBackInputStream r0;
        int $i0, $i4;
        long $l1, $l2;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        $i0 = specialinvoke r0.<java.io.PushbackInputStream: int read()>();

        $i4 = (int) -1;

        if $i0 == $i4 goto label1;

        $l1 = r0.<org.apache.pdfbox.io.PushBackInputStream: long offset>;

        $l2 = $l1 + 1L;

        r0.<org.apache.pdfbox.io.PushBackInputStream: long offset> = $l2;

     label1:
        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        byte[] r1;
        org.apache.pdfbox.io.PushBackInputStream r0;
        int $i0, $i1;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.pdfbox.io.PushBackInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.pdfbox.io.PushBackInputStream r0;
        long $l3, $l4, $l5;
        int i0, i1, $i2, $i7;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<java.io.PushbackInputStream: int read(byte[],int,int)>(r1, i0, i1);

        $i7 = (int) -1;

        if $i2 == $i7 goto label1;

        $l4 = r0.<org.apache.pdfbox.io.PushBackInputStream: long offset>;

        $l3 = (long) $i2;

        $l5 = $l4 + $l3;

        r0.<org.apache.pdfbox.io.PushBackInputStream: long offset> = $l5;

     label1:
        return $i2;
    }

    public void unread(int) throws java.io.IOException
    {
        org.apache.pdfbox.io.PushBackInputStream r0;
        int i2;
        long $l0, $l1;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        i2 := @parameter0: int;

        $l0 = r0.<org.apache.pdfbox.io.PushBackInputStream: long offset>;

        $l1 = $l0 - 1L;

        r0.<org.apache.pdfbox.io.PushBackInputStream: long offset> = $l1;

        specialinvoke r0.<java.io.PushbackInputStream: void unread(int)>(i2);

        return;
    }

    public void unread(byte[]) throws java.io.IOException
    {
        int $i0;
        byte[] r1;
        org.apache.pdfbox.io.PushBackInputStream r0;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.pdfbox.io.PushBackInputStream: void unread(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void unread(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.pdfbox.io.PushBackInputStream r0;
        int i0, i4;
        long $l1, $l2, $l3;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        r1 := @parameter0: byte[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 <= 0 goto label1;

        $l2 = r0.<org.apache.pdfbox.io.PushBackInputStream: long offset>;

        $l1 = (long) i0;

        $l3 = $l2 - $l1;

        r0.<org.apache.pdfbox.io.PushBackInputStream: long offset> = $l3;

        specialinvoke r0.<java.io.PushbackInputStream: void unread(byte[],int,int)>(r1, i4, i0);

     label1:
        return;
    }

    public boolean isEOF() throws java.io.IOException
    {
        org.apache.pdfbox.io.PushBackInputStream r0;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.io.PushBackInputStream: int peek()>();

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void fillBuffer() throws java.io.IOException
    {
        byte[] $r1, r2;
        org.apache.pdfbox.io.PushBackInputStream r0;
        int i0, $i1, $i2, i3, i4, $i6, $i8;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        $r1 = r0.<org.apache.pdfbox.io.PushBackInputStream: byte[] buf>;

        i0 = lengthof $r1;

        r2 = newarray (byte)[i0];

        i3 = 0;

        i4 = 0;

     label1:
        $i6 = (int) -1;

        if i3 == $i6 goto label2;

        if i4 >= i0 goto label2;

        $i1 = i0 - i4;

        $i2 = virtualinvoke r0.<org.apache.pdfbox.io.PushBackInputStream: int read(byte[],int,int)>(r2, i4, $i1);

        i3 = $i2;

        $i8 = (int) -1;

        if $i2 == $i8 goto label1;

        i4 = i4 + $i2;

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.pdfbox.io.PushBackInputStream: void unread(byte[],int,int)>(r2, 0, i4);

        return;
    }

    public byte[] readFully(int) throws java.io.IOException
    {
        byte[] r0;
        org.apache.pdfbox.io.PushBackInputStream r1;
        int i0, $i1, $i2, i3;
        java.io.EOFException $r2;

        r1 := @this: org.apache.pdfbox.io.PushBackInputStream;

        i0 := @parameter0: int;

        r0 = newarray (byte)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $i1 = i0 - i3;

        $i2 = virtualinvoke r1.<org.apache.pdfbox.io.PushBackInputStream: int read(byte[],int,int)>(r0, i3, $i1);

        if $i2 >= 0 goto label2;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>(java.lang.String)>("Premature end of file");

        throw $r2;

     label2:
        i3 = i3 + $i2;

        goto label1;

     label3:
        return r0;
    }

    public void seek(long) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.pdfbox.io.RandomAccessRead $r1, $r3;
        long l3, $l4;
        int $i0, $i1, i2;
        java.lang.String $r9, $r12;
        org.apache.pdfbox.io.PushBackInputStream r0;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r10, $r11;
        java.lang.Class $r8;
        java.io.InputStream $r7;

        r0 := @this: org.apache.pdfbox.io.PushBackInputStream;

        l3 := @parameter0: long;

        $r1 = r0.<org.apache.pdfbox.io.PushBackInputStream: org.apache.pdfbox.io.RandomAccessRead raInput>;

        if $r1 != null goto label1;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provided stream of type ");

        $r7 = r0.<org.apache.pdfbox.io.PushBackInputStream: java.io.InputStream in>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not seekable.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label1:
        $r2 = r0.<org.apache.pdfbox.io.PushBackInputStream: byte[] buf>;

        $i1 = lengthof $r2;

        $i0 = r0.<org.apache.pdfbox.io.PushBackInputStream: int pos>;

        i2 = $i1 - $i0;

        if i2 <= 0 goto label2;

        $l4 = (long) i2;

        virtualinvoke r0.<org.apache.pdfbox.io.PushBackInputStream: long skip(long)>($l4);

     label2:
        $r3 = r0.<org.apache.pdfbox.io.PushBackInputStream: org.apache.pdfbox.io.RandomAccessRead raInput>;

        interfaceinvoke $r3.<org.apache.pdfbox.io.RandomAccessRead: void seek(long)>(l3);

        r0.<org.apache.pdfbox.io.PushBackInputStream: long offset> = l3;

        return;
    }
}
