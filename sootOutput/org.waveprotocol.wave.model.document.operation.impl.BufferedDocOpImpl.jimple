final class org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.DocOp
{
    private boolean knownToBeWellFormed;
    private final org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components;
    static final boolean $assertionsDisabled;

    static org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl create(org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[])
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] r0;
        java.lang.AssertionError $r2;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[];

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl createUnchecked(org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[])>(r0);

        staticinvoke <org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void checkWellformedness(org.waveprotocol.wave.model.document.operation.DocOp)>($r1);

        $z0 = <org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = $r1.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: boolean knownToBeWellFormed>;

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        return $r1;
    }

    static org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl createUnchecked(org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[])
    {
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl $r0;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] r1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[];

        $r0 = new org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void <init>(org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[])>(r1);

        return $r0;
    }

    private static void checkWellformedness(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.DocOp r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $z0 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpValidator: boolean isWellFormed(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector,org.waveprotocol.wave.model.document.operation.DocOp)>(null, r0);

        if $z0 != 0 goto label1;

        $r1 = new org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpValidator: boolean isWellFormed(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector,org.waveprotocol.wave.model.document.operation.DocOp)>($r1, r0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to build ill-formed operation (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalState(java.lang.Object)>($r7);

     label1:
        return;
    }

    private void <init>(org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[])
    {
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: boolean knownToBeWellFormed> = 0;

        r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components> = r1;

        return;
    }

    public int size()
    {
        int $i0;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public org.waveprotocol.wave.model.document.operation.DocOpComponentType getType(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r2;
        org.waveprotocol.wave.model.document.operation.DocOpComponentType $r3;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r1;
        int i0;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent: org.waveprotocol.wave.model.document.operation.DocOpComponentType getType()>();

        return $r3;
    }

    public void applyComponent(int, org.waveprotocol.wave.model.document.operation.DocOpCursor)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r1;
        org.waveprotocol.wave.model.document.operation.DocOpCursor r2;
        int i0;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOpCursor;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r1[i0];

        virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>(r2);

        return;
    }

    public void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent r2;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] r1;
        org.waveprotocol.wave.model.document.operation.DocOpCursor r3;
        int i0, i1;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOpCursor;

        r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String getCharactersString(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        int i0;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$Characters $r4;
        java.lang.String $r5;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.DocInitializationComponentType $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocInitializationComponentType CHARACTERS>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$Characters) $r3;

        $r5 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$Characters: java.lang.String string>;

        return $r5;
    }

    public java.lang.String getDeleteCharactersString(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.DocOpComponentType $r1;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DeleteCharacters $r4;
        int i0;
        java.lang.String $r5;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType DELETE_CHARACTERS>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DeleteCharacters) $r3;

        $r5 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DeleteCharacters: java.lang.String string>;

        return $r5;
    }

    public org.waveprotocol.wave.model.document.operation.Attributes getReplaceAttributesNewAttributes(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ReplaceAttributes $r4;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.DocOpComponentType $r1;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        int i0;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.Attributes $r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType REPLACE_ATTRIBUTES>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ReplaceAttributes) $r3;

        $r5 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ReplaceAttributes: org.waveprotocol.wave.model.document.operation.Attributes newAttrs>;

        return $r5;
    }

    public org.waveprotocol.wave.model.document.operation.Attributes getReplaceAttributesOldAttributes(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ReplaceAttributes $r4;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.DocOpComponentType $r1;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        int i0;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.Attributes $r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType REPLACE_ATTRIBUTES>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ReplaceAttributes) $r3;

        $r5 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ReplaceAttributes: org.waveprotocol.wave.model.document.operation.Attributes oldAttrs>;

        return $r5;
    }

    public int getRetainItemCount(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.DocOpComponentType $r1;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        int i0, $i1;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$Retain $r4;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType RETAIN>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$Retain) $r3;

        $i1 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$Retain: int itemCount>;

        return $i1;
    }

    public org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap getAnnotationBoundary(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        int i0;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$AnnotationBoundary $r4;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap $r5;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.DocInitializationComponentType $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocInitializationComponentType ANNOTATION_BOUNDARY>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$AnnotationBoundary) $r3;

        $r5 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$AnnotationBoundary: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap boundary>;

        return $r5;
    }

    public org.waveprotocol.wave.model.document.operation.Attributes getDeleteElementStartAttributes(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.DocOpComponentType $r1;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        int i0;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.Attributes $r5;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DeleteElementStart $r4;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType DELETE_ELEMENT_START>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DeleteElementStart) $r3;

        $r5 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DeleteElementStart: org.waveprotocol.wave.model.document.operation.Attributes attrs>;

        return $r5;
    }

    public java.lang.String getDeleteElementStartTag(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.DocOpComponentType $r1;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        int i0;
        java.lang.String $r5;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DeleteElementStart $r4;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType DELETE_ELEMENT_START>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DeleteElementStart) $r3;

        $r5 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DeleteElementStart: java.lang.String type>;

        return $r5;
    }

    public org.waveprotocol.wave.model.document.operation.Attributes getElementStartAttributes(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        int i0;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ElementStart $r4;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.DocInitializationComponentType $r1;
        org.waveprotocol.wave.model.document.operation.Attributes $r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocInitializationComponentType ELEMENT_START>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ElementStart) $r3;

        $r5 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ElementStart: org.waveprotocol.wave.model.document.operation.Attributes attrs>;

        return $r5;
    }

    public java.lang.String getElementStartTag(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        int i0;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ElementStart $r4;
        java.lang.String $r5;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.DocInitializationComponentType $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocInitializationComponentType ELEMENT_START>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ElementStart) $r3;

        $r5 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$ElementStart: java.lang.String type>;

        return $r5;
    }

    public org.waveprotocol.wave.model.document.operation.AttributesUpdate getUpdateAttributesUpdate(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r3;
        org.waveprotocol.wave.model.document.operation.DocOpComponentType $r1;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$UpdateAttributes $r4;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r2;
        int i0;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate $r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        $r1 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType UPDATE_ATTRIBUTES>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void check(int,org.waveprotocol.wave.model.document.operation.DocOpComponentType)>(i0, $r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r3 = $r2[i0];

        $r4 = (org.waveprotocol.wave.model.document.operation.impl.OperationComponents$UpdateAttributes) $r3;

        $r5 = $r4.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$UpdateAttributes: org.waveprotocol.wave.model.document.operation.AttributesUpdate update>;

        return $r5;
    }

    public boolean isKnownToBeWellFormed()
    {
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        $z0 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: boolean knownToBeWellFormed>;

        return $z0;
    }

    void markWellFormed()
    {
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: boolean knownToBeWellFormed> = 1;

        return;
    }

    private void check(int, org.waveprotocol.wave.model.document.operation.DocOpComponentType)
    {
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] $r1;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent $r2;
        org.waveprotocol.wave.model.document.operation.DocOpComponentType $r3, r4;
        int i0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        i0 := @parameter0: int;

        r4 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOpComponentType;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent[] components>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.OperationComponents$DocOpComponent: org.waveprotocol.wave.model.document.operation.DocOpComponentType getType()>();

        if $r3 == r4 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Component ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not of type \' ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', it is \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r13);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.document.operation.DocOp $r6;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r2;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r8, $r9;
        java.lang.String $r3, $r7, $r10;

        r2 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Buffered@");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.util.DocOpScrub: org.waveprotocol.wave.model.document.operation.DocOp maybeScrub(org.waveprotocol.wave.model.document.operation.DocOp)>(r2);

        $r7 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String toConciseString(org.waveprotocol.wave.model.document.operation.DocOp)>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public volatile void apply(java.lang.Object) throws org.waveprotocol.wave.model.operation.OperationException
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl r0;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.document.operation.DocOpCursor) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/document/operation/impl/BufferedDocOpImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.document.operation.impl.BufferedDocOpImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
