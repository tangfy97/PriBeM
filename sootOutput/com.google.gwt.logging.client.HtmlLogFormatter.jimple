public class com.google.gwt.logging.client.HtmlLogFormatter extends com.google.gwt.logging.impl.FormatterImpl
{
    private static java.lang.String newline;
    private boolean showStackTraces;

    public void <init>(boolean)
    {
        com.google.gwt.logging.client.HtmlLogFormatter r0;
        boolean z0;

        r0 := @this: com.google.gwt.logging.client.HtmlLogFormatter;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.google.gwt.logging.impl.FormatterImpl: void <init>()>();

        r0.<com.google.gwt.logging.client.HtmlLogFormatter: boolean showStackTraces> = z0;

        return;
    }

    public java.lang.String format(java.util.logging.LogRecord)
    {
        java.lang.Throwable $r10;
        java.util.logging.LogRecord r2;
        java.lang.StringBuilder $r0;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13;
        com.google.gwt.logging.client.HtmlLogFormatter r1;
        boolean $z0;

        r1 := @this: com.google.gwt.logging.client.HtmlLogFormatter;

        r2 := @parameter0: java.util.logging.LogRecord;

        $r0 = new java.lang.StringBuilder;

        $r3 = virtualinvoke r1.<com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String getHtmlPrefix(java.util.logging.LogRecord)>(r2);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String getHtmlPrefix(java.util.logging.LogRecord)>(r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String getRecordInfo(java.util.logging.LogRecord,java.lang.String)>(r2, " ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke r2.<java.util.logging.LogRecord: java.lang.String getMessage()>();

        $r7 = specialinvoke r1.<com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String getEscaped(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $z0 = r1.<com.google.gwt.logging.client.HtmlLogFormatter: boolean showStackTraces>;

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r2.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

        $r11 = <com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String newline>;

        $r12 = virtualinvoke r1.<com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String getStackTraceAsString(java.lang.Throwable,java.lang.String,java.lang.String)>($r10, $r11, "&nbsp;&nbsp;&nbsp;");

        $r13 = specialinvoke r1.<com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String getEscaped(java.lang.String)>($r12);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label1:
        $r8 = virtualinvoke r1.<com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String getHtmlSuffix(java.util.logging.LogRecord)>(r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    protected java.lang.String getHtmlPrefix(java.util.logging.LogRecord)
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r4, $r5;
        com.google.gwt.logging.client.HtmlLogFormatter r1;
        java.util.logging.LogRecord r2;
        java.util.logging.Level $r3;

        r1 := @this: com.google.gwt.logging.client.HtmlLogFormatter;

        r2 := @parameter0: java.util.logging.LogRecord;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<span style=\'color:");

        $r3 = virtualinvoke r2.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();

        $i0 = virtualinvoke $r3.<java.util.logging.Level: int intValue()>();

        $r4 = specialinvoke r1.<com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String getColor(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'>");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<code>");

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected java.lang.String getHtmlSuffix(java.util.logging.LogRecord)
    {
        com.google.gwt.logging.client.HtmlLogFormatter r0;
        java.util.logging.LogRecord r1;

        r0 := @this: com.google.gwt.logging.client.HtmlLogFormatter;

        r1 := @parameter0: java.util.logging.LogRecord;

        return "</code></span>";
    }

    private java.lang.String getColor(int)
    {
        java.util.logging.Level $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.google.gwt.logging.client.HtmlLogFormatter r8;

        r8 := @this: com.google.gwt.logging.client.HtmlLogFormatter;

        i0 := @parameter0: int;

        $r0 = <java.util.logging.Level: java.util.logging.Level OFF>;

        $i1 = virtualinvoke $r0.<java.util.logging.Level: int intValue()>();

        if i0 != $i1 goto label1;

        return "#000";

     label1:
        $r1 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $i2 = virtualinvoke $r1.<java.util.logging.Level: int intValue()>();

        if i0 < $i2 goto label2;

        return "#F00";

     label2:
        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $i3 = virtualinvoke $r2.<java.util.logging.Level: int intValue()>();

        if i0 < $i3 goto label3;

        return "#E56717";

     label3:
        $r3 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $i4 = virtualinvoke $r3.<java.util.logging.Level: int intValue()>();

        if i0 < $i4 goto label4;

        return "#20b000";

     label4:
        $r4 = <java.util.logging.Level: java.util.logging.Level CONFIG>;

        $i5 = virtualinvoke $r4.<java.util.logging.Level: int intValue()>();

        if i0 < $i5 goto label5;

        return "#2B60DE";

     label5:
        $r5 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $i6 = virtualinvoke $r5.<java.util.logging.Level: int intValue()>();

        if i0 < $i6 goto label6;

        return "#F0F";

     label6:
        $r6 = <java.util.logging.Level: java.util.logging.Level FINER>;

        $i7 = virtualinvoke $r6.<java.util.logging.Level: int intValue()>();

        if i0 < $i7 goto label7;

        return "#F0F";

     label7:
        $r7 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $i8 = virtualinvoke $r7.<java.util.logging.Level: int intValue()>();

        if i0 < $i8 goto label8;

        return "#F0F";

     label8:
        return "#000";
    }

    private java.lang.String getEscaped(java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3, r5;
        com.google.gwt.logging.client.HtmlLogFormatter r4;

        r4 := @this: com.google.gwt.logging.client.HtmlLogFormatter;

        r5 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<", "&lt;");

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(">", "&gt;");

        $r2 = <com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String newline>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r2, "<br>");

        return $r3;
    }

    static void <clinit>()
    {
        <com.google.gwt.logging.client.HtmlLogFormatter: java.lang.String newline> = "__GWT_LOG_FORMATTER_BR__";

        return;
    }
}
