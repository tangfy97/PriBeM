final class org.apache.lucene.index.NormsWriterPerField extends org.apache.lucene.index.InvertedDocEndConsumerPerField implements java.lang.Comparable
{
    final org.apache.lucene.index.NormsWriterPerThread perThread;
    final org.apache.lucene.index.FieldInfo fieldInfo;
    final org.apache.lucene.index.DocumentsWriter$DocState docState;
    int[] docIDs;
    byte[] norms;
    int upto;
    final org.apache.lucene.index.FieldInvertState fieldState;
    static final boolean $assertionsDisabled;

    public void reset()
    {
        byte[] $r3, $r4;
        int[] $r1, $r2;
        int $i0, $i1;
        org.apache.lucene.index.NormsWriterPerField r0;

        r0 := @this: org.apache.lucene.index.NormsWriterPerField;

        $r1 = r0.<org.apache.lucene.index.NormsWriterPerField: int[] docIDs>;

        $i0 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        $r2 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] shrink(int[],int)>($r1, $i0);

        r0.<org.apache.lucene.index.NormsWriterPerField: int[] docIDs> = $r2;

        $r3 = r0.<org.apache.lucene.index.NormsWriterPerField: byte[] norms>;

        $i1 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        $r4 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] shrink(byte[],int)>($r3, $i1);

        r0.<org.apache.lucene.index.NormsWriterPerField: byte[] norms> = $r4;

        r0.<org.apache.lucene.index.NormsWriterPerField: int upto> = 0;

        return;
    }

    public void <init>(org.apache.lucene.index.DocInverterPerField, org.apache.lucene.index.NormsWriterPerThread, org.apache.lucene.index.FieldInfo)
    {
        byte[] $r2;
        org.apache.lucene.index.DocumentsWriter$DocState $r5;
        org.apache.lucene.index.NormsWriterPerField r0;
        org.apache.lucene.index.DocInverterPerField r6;
        org.apache.lucene.index.FieldInvertState $r7;
        org.apache.lucene.index.NormsWriterPerThread r3;
        int[] $r1;
        org.apache.lucene.index.FieldInfo r4;

        r0 := @this: org.apache.lucene.index.NormsWriterPerField;

        r6 := @parameter0: org.apache.lucene.index.DocInverterPerField;

        r3 := @parameter1: org.apache.lucene.index.NormsWriterPerThread;

        r4 := @parameter2: org.apache.lucene.index.FieldInfo;

        specialinvoke r0.<org.apache.lucene.index.InvertedDocEndConsumerPerField: void <init>()>();

        $r1 = newarray (int)[1];

        r0.<org.apache.lucene.index.NormsWriterPerField: int[] docIDs> = $r1;

        $r2 = newarray (byte)[1];

        r0.<org.apache.lucene.index.NormsWriterPerField: byte[] norms> = $r2;

        r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.NormsWriterPerThread perThread> = r3;

        r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo> = r4;

        $r5 = r3.<org.apache.lucene.index.NormsWriterPerThread: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.DocumentsWriter$DocState docState> = $r5;

        $r7 = r6.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState> = $r7;

        return;
    }

    void abort()
    {
        org.apache.lucene.index.NormsWriterPerField r0;

        r0 := @this: org.apache.lucene.index.NormsWriterPerField;

        r0.<org.apache.lucene.index.NormsWriterPerField: int upto> = 0;

        return;
    }

    public int compareTo(org.apache.lucene.index.NormsWriterPerField)
    {
        int $i0;
        org.apache.lucene.index.FieldInfo $r1, $r3;
        org.apache.lucene.index.NormsWriterPerField r0, r2;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.lucene.index.NormsWriterPerField;

        r2 := @parameter0: org.apache.lucene.index.NormsWriterPerField;

        $r1 = r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r5 = $r1.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r3 = r2.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r4 = $r3.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $i0 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

        return $i0;
    }

    void finish()
    {
        byte[] $r4, $r5, $r6, $r12, $r18;
        byte $b13;
        int[] $r3, $r8, $r9, $r10, $r21;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.index.DocumentsWriter$DocState $r13, $r19, $r22;
        org.apache.lucene.search.Similarity $r14, $r20;
        org.apache.lucene.index.FieldInvertState $r17;
        float $f0;
        org.apache.lucene.index.NormsWriterPerField r0;
        java.lang.AssertionError $r7, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17;
        java.lang.String $r16;
        org.apache.lucene.index.FieldInfo $r1, $r2, $r15;

        r0 := @this: org.apache.lucene.index.NormsWriterPerField;

        $r1 = r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $z0 = $r1.<org.apache.lucene.index.FieldInfo: boolean isIndexed>;

        if $z0 == 0 goto label5;

        $r2 = r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $z1 = $r2.<org.apache.lucene.index.FieldInfo: boolean omitNorms>;

        if $z1 != 0 goto label5;

        $r3 = r0.<org.apache.lucene.index.NormsWriterPerField: int[] docIDs>;

        $i1 = lengthof $r3;

        $i0 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        if $i1 > $i0 goto label2;

        $z3 = <org.apache.lucene.index.NormsWriterPerField: boolean $assertionsDisabled>;

        if $z3 != 0 goto label1;

        $r10 = r0.<org.apache.lucene.index.NormsWriterPerField: int[] docIDs>;

        $i9 = lengthof $r10;

        $i8 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        if $i9 == $i8 goto label1;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label1:
        $r8 = r0.<org.apache.lucene.index.NormsWriterPerField: int[] docIDs>;

        $i6 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        $i7 = 1 + $i6;

        $r9 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] grow(int[],int)>($r8, $i7);

        r0.<org.apache.lucene.index.NormsWriterPerField: int[] docIDs> = $r9;

     label2:
        $r12 = r0.<org.apache.lucene.index.NormsWriterPerField: byte[] norms>;

        $i10 = lengthof $r12;

        $i11 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        if $i10 > $i11 goto label4;

        $z2 = <org.apache.lucene.index.NormsWriterPerField: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $r6 = r0.<org.apache.lucene.index.NormsWriterPerField: byte[] norms>;

        $i5 = lengthof $r6;

        $i4 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        if $i5 == $i4 goto label3;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label3:
        $r4 = r0.<org.apache.lucene.index.NormsWriterPerField: byte[] norms>;

        $i2 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        $i3 = 1 + $i2;

        $r5 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[],int)>($r4, $i3);

        r0.<org.apache.lucene.index.NormsWriterPerField: byte[] norms> = $r5;

     label4:
        $r13 = r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        $r14 = $r13.<org.apache.lucene.index.DocumentsWriter$DocState: org.apache.lucene.search.Similarity similarity>;

        $r15 = r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r16 = $r15.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r17 = r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $f0 = virtualinvoke $r14.<org.apache.lucene.search.Similarity: float computeNorm(java.lang.String,org.apache.lucene.index.FieldInvertState)>($r16, $r17);

        $r18 = r0.<org.apache.lucene.index.NormsWriterPerField: byte[] norms>;

        $i12 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        $r19 = r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        $r20 = $r19.<org.apache.lucene.index.DocumentsWriter$DocState: org.apache.lucene.search.Similarity similarity>;

        $b13 = virtualinvoke $r20.<org.apache.lucene.search.Similarity: byte encodeNormValue(float)>($f0);

        $r18[$i12] = $b13;

        $r21 = r0.<org.apache.lucene.index.NormsWriterPerField: int[] docIDs>;

        $i14 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        $r22 = r0.<org.apache.lucene.index.NormsWriterPerField: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        $i15 = $r22.<org.apache.lucene.index.DocumentsWriter$DocState: int docID>;

        $r21[$i14] = $i15;

        $i16 = r0.<org.apache.lucene.index.NormsWriterPerField: int upto>;

        $i17 = $i16 + 1;

        r0.<org.apache.lucene.index.NormsWriterPerField: int upto> = $i17;

     label5:
        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.lucene.index.NormsWriterPerField r0, $r2;

        r0 := @this: org.apache.lucene.index.NormsWriterPerField;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.index.NormsWriterPerField) r1;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.NormsWriterPerField: int compareTo(org.apache.lucene.index.NormsWriterPerField)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/NormsWriterPerField;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.NormsWriterPerField: boolean $assertionsDisabled> = $z1;

        return;
    }
}
