public class org.apache.jena.riot.system.StreamRDFWrapper extends java.lang.Object implements org.apache.jena.riot.system.StreamRDF
{
    protected final org.apache.jena.riot.system.StreamRDF sink;

    public void <init>(org.apache.jena.riot.system.StreamRDF)
    {
        org.apache.jena.riot.system.StreamRDF r1;
        org.apache.jena.riot.system.StreamRDFWrapper r0;

        r0 := @this: org.apache.jena.riot.system.StreamRDFWrapper;

        r1 := @parameter0: org.apache.jena.riot.system.StreamRDF;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.system.StreamRDFWrapper: org.apache.jena.riot.system.StreamRDF sink> = r1;

        return;
    }

    public void start()
    {
        org.apache.jena.riot.system.StreamRDF $r1;
        org.apache.jena.riot.system.StreamRDFWrapper r0;

        r0 := @this: org.apache.jena.riot.system.StreamRDFWrapper;

        $r1 = r0.<org.apache.jena.riot.system.StreamRDFWrapper: org.apache.jena.riot.system.StreamRDF sink>;

        interfaceinvoke $r1.<org.apache.jena.riot.system.StreamRDF: void start()>();

        return;
    }

    public void triple(com.hp.hpl.jena.graph.Triple)
    {
        org.apache.jena.riot.system.StreamRDF $r2;
        org.apache.jena.riot.system.StreamRDFWrapper r0;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: org.apache.jena.riot.system.StreamRDFWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<org.apache.jena.riot.system.StreamRDFWrapper: org.apache.jena.riot.system.StreamRDF sink>;

        interfaceinvoke $r2.<org.apache.jena.riot.system.StreamRDF: void triple(com.hp.hpl.jena.graph.Triple)>(r1);

        return;
    }

    public void quad(com.hp.hpl.jena.sparql.core.Quad)
    {
        org.apache.jena.riot.system.StreamRDF $r2;
        org.apache.jena.riot.system.StreamRDFWrapper r0;
        com.hp.hpl.jena.sparql.core.Quad r1;

        r0 := @this: org.apache.jena.riot.system.StreamRDFWrapper;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r2 = r0.<org.apache.jena.riot.system.StreamRDFWrapper: org.apache.jena.riot.system.StreamRDF sink>;

        interfaceinvoke $r2.<org.apache.jena.riot.system.StreamRDF: void quad(com.hp.hpl.jena.sparql.core.Quad)>(r1);

        return;
    }

    public void tuple(org.apache.jena.atlas.lib.Tuple)
    {
        org.apache.jena.riot.system.StreamRDF $r2;
        org.apache.jena.riot.system.StreamRDFWrapper r0;
        org.apache.jena.atlas.lib.Tuple r1;

        r0 := @this: org.apache.jena.riot.system.StreamRDFWrapper;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r2 = r0.<org.apache.jena.riot.system.StreamRDFWrapper: org.apache.jena.riot.system.StreamRDF sink>;

        interfaceinvoke $r2.<org.apache.jena.riot.system.StreamRDF: void tuple(org.apache.jena.atlas.lib.Tuple)>(r1);

        return;
    }

    public void base(java.lang.String)
    {
        org.apache.jena.riot.system.StreamRDF $r2;
        java.lang.String r1;
        org.apache.jena.riot.system.StreamRDFWrapper r0;

        r0 := @this: org.apache.jena.riot.system.StreamRDFWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.system.StreamRDFWrapper: org.apache.jena.riot.system.StreamRDF sink>;

        interfaceinvoke $r2.<org.apache.jena.riot.system.StreamRDF: void base(java.lang.String)>(r1);

        return;
    }

    public void prefix(java.lang.String, java.lang.String)
    {
        org.apache.jena.riot.system.StreamRDFWrapper r0;
        org.apache.jena.riot.system.StreamRDF $r3;
        java.lang.String r1, r2;

        r0 := @this: org.apache.jena.riot.system.StreamRDFWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.jena.riot.system.StreamRDFWrapper: org.apache.jena.riot.system.StreamRDF sink>;

        interfaceinvoke $r3.<org.apache.jena.riot.system.StreamRDF: void prefix(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void finish()
    {
        org.apache.jena.riot.system.StreamRDF $r1;
        org.apache.jena.riot.system.StreamRDFWrapper r0;

        r0 := @this: org.apache.jena.riot.system.StreamRDFWrapper;

        $r1 = r0.<org.apache.jena.riot.system.StreamRDFWrapper: org.apache.jena.riot.system.StreamRDF sink>;

        interfaceinvoke $r1.<org.apache.jena.riot.system.StreamRDF: void finish()>();

        return;
    }
}
