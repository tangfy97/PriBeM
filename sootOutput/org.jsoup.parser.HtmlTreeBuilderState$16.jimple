final enum class org.jsoup.parser.HtmlTreeBuilderState$16 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.jsoup.parser.HtmlTreeBuilderState$16 r0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$16;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);

        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$16 r6;
        org.jsoup.nodes.Element $r4, $r12, $r14, $r16, $r17, $r18, $r19, $r28, $r30, $r37;
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$Character $r7;
        org.jsoup.parser.Token$EndTag $r10, $r21, $r26, $r27, $r32, $r33, $r34;
        org.jsoup.parser.HtmlTreeBuilder r3;
        java.lang.String $r5, $r8, $r9, $r11, $r13, $r15, $r20, $r23, $r29, $r31, $r38;
        org.jsoup.parser.Token$StartTag $r22;
        int[] $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        org.jsoup.parser.HtmlTreeBuilderState $r25, $r35;
        java.lang.String[] $r24;
        int $i0, $i1;
        org.jsoup.parser.Token$TokenType $r1;
        org.jsoup.parser.Token$Comment $r36;

        r6 := @this: org.jsoup.parser.HtmlTreeBuilderState$16;

        r0 := @parameter0: org.jsoup.parser.Token;

        r3 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $r2 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;

        $r1 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $i0 = virtualinvoke $r1.<org.jsoup.parser.Token$TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label15;
            case 5: goto label01;
            case 6: goto label23;
            default: goto label24;
        };

     label01:
        $r7 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();

        $r8 = virtualinvoke $r7.<org.jsoup.parser.Token$Character: java.lang.String getData()>();

        $r9 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: java.lang.String access$400()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label02;

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r6);

        return 0;

     label02:
        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r7);

        goto label25;

     label03:
        $r36 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r36);

        goto label25;

     label04:
        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r6);

        return 0;

     label05:
        $r22 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r23 = virtualinvoke $r22.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $z10 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z10 == 0 goto label06;

        $r35 = <org.jsoup.parser.HtmlTreeBuilderState$16: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        $z23 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>($r22, $r35);

        return $z23;

     label06:
        $z11 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("option");

        if $z11 == 0 goto label07;

        $r34 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r34.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("option");

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r34);

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r22);

        goto label25;

     label07:
        $z12 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("optgroup");

        if $z12 == 0 goto label10;

        $r28 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r29 = virtualinvoke $r28.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z21 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("option");

        if $z21 == 0 goto label08;

        $r33 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r33.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("option");

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r33);

        goto label09;

     label08:
        $r30 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r31 = virtualinvoke $r30.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z22 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>("optgroup");

        if $z22 == 0 goto label09;

        $r32 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r32.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("optgroup");

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r32);

     label09:
        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r22);

        goto label25;

     label10:
        $z13 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("select");

        if $z13 == 0 goto label11;

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r6);

        $r27 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r27.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("select");

        $z20 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r27);

        return $z20;

     label11:
        $r24 = newarray (java.lang.String)[3];

        $r24[0] = "input";

        $r24[1] = "keygen";

        $r24[2] = "textarea";

        $z14 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r23, $r24);

        if $z14 == 0 goto label13;

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r6);

        $z18 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean inSelectScope(java.lang.String)>("select");

        if $z18 != 0 goto label12;

        return 0;

     label12:
        $r26 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r26.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("select");

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r26);

        $z19 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r22);

        return $z19;

     label13:
        $z15 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("script");

        if $z15 == 0 goto label14;

        $r25 = <org.jsoup.parser.HtmlTreeBuilderState$16: org.jsoup.parser.HtmlTreeBuilderState InHead>;

        $z17 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r0, $r25);

        return $z17;

     label14:
        $z16 = specialinvoke r6.<org.jsoup.parser.HtmlTreeBuilderState$16: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r0, r3);

        return $z16;

     label15:
        $r10 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        $r11 = virtualinvoke $r10.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("optgroup");

        if $z2 == 0 goto label18;

        $r14 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r15 = virtualinvoke $r14.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z8 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("option");

        if $z8 == 0 goto label16;

        $r16 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r17 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element)>($r16);

        if $r17 == null goto label16;

        $r18 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r19 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element)>($r18);

        $r20 = virtualinvoke $r19.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z9 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("optgroup");

        if $z9 == 0 goto label16;

        $r21 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r21.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("option");

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r21);

     label16:
        $r37 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r38 = virtualinvoke $r37.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z25 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>("optgroup");

        if $z25 == 0 goto label17;

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();

        goto label25;

     label17:
        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r6);

        goto label25;

     label18:
        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("option");

        if $z3 == 0 goto label20;

        $r12 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r13 = virtualinvoke $r12.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("option");

        if $z7 == 0 goto label19;

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();

        goto label25;

     label19:
        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r6);

        goto label25;

     label20:
        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("select");

        if $z4 == 0 goto label22;

        $z6 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean inSelectScope(java.lang.String)>($r11);

        if $z6 != 0 goto label21;

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r6);

        return 0;

     label21:
        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>($r11);

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void resetInsertionMode()>();

        goto label25;

     label22:
        $z5 = specialinvoke r6.<org.jsoup.parser.HtmlTreeBuilderState$16: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r0, r3);

        return $z5;

     label23:
        $r4 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r5 = virtualinvoke $r4.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z0 != 0 goto label25;

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r6);

        goto label25;

     label24:
        $z24 = specialinvoke r6.<org.jsoup.parser.HtmlTreeBuilderState$16: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r0, r3);

        return $z24;

     label25:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$16 r1;
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.Token r2;

        r1 := @this: org.jsoup.parser.HtmlTreeBuilderState$16;

        r2 := @parameter0: org.jsoup.parser.Token;

        r0 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r1);

        return 0;
    }
}
