public class org.jsoup.nodes.Attributes extends java.lang.Object implements java.lang.Iterable, java.lang.Cloneable
{
    protected static final java.lang.String dataPrefix;
    private java.util.LinkedHashMap attributes;

    public void <init>()
    {
        org.jsoup.nodes.Attributes r0;

        r0 := @this: org.jsoup.nodes.Attributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes> = null;

        return;
    }

    public java.lang.String get(java.lang.String)
    {
        org.jsoup.nodes.Attributes r1;
        java.util.LinkedHashMap $r2, $r3;
        org.jsoup.nodes.Attribute r6;
        java.lang.Object $r5;
        java.lang.String r0, $r4, $r7;

        r1 := @this: org.jsoup.nodes.Attributes;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r0);

        $r2 = r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r2 != null goto label1;

        return "";

     label1:
        $r3 = r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (org.jsoup.nodes.Attribute) $r5;

        if r6 == null goto label2;

        $r7 = virtualinvoke r6.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();

        goto label3;

     label2:
        $r7 = "";

     label3:
        return $r7;
    }

    public void put(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Attributes r3;
        org.jsoup.nodes.Attribute $r0;
        java.lang.String r1, r2;

        r3 := @this: org.jsoup.nodes.Attributes;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.jsoup.nodes.Attribute;

        specialinvoke $r0.<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        virtualinvoke r3.<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>($r0);

        return;
    }

    public void put(org.jsoup.nodes.Attribute)
    {
        java.util.LinkedHashMap $r2, $r3, $r5;
        org.jsoup.nodes.Attributes r1;
        org.jsoup.nodes.Attribute r0;
        java.lang.String $r4;

        r1 := @this: org.jsoup.nodes.Attributes;

        r0 := @parameter0: org.jsoup.nodes.Attribute;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r0);

        $r2 = r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r2 != null goto label1;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>(int)>(2);

        r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes> = $r5;

     label1:
        $r3 = r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $r4 = virtualinvoke r0.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r0);

        return;
    }

    public void remove(java.lang.String)
    {
        java.util.LinkedHashMap $r2, $r3;
        org.jsoup.nodes.Attributes r1;
        java.lang.String r0, $r4;

        r1 := @this: org.jsoup.nodes.Attributes;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r0);

        $r2 = r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r4);

        return;
    }

    public boolean hasKey(java.lang.String)
    {
        java.util.LinkedHashMap $r1, $r3;
        org.jsoup.nodes.Attributes r0;
        java.lang.String r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.nodes.Attributes;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r1 == null goto label1;

        $r3 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r3.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int size()
    {
        java.util.LinkedHashMap $r1, $r2;
        org.jsoup.nodes.Attributes r0;
        int $i0;

        r0 := @this: org.jsoup.nodes.Attributes;

        $r1 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $i0 = virtualinvoke $r2.<java.util.LinkedHashMap: int size()>();

        return $i0;
    }

    public void addAll(org.jsoup.nodes.Attributes)
    {
        org.jsoup.nodes.Attributes r0, r1;
        java.util.LinkedHashMap $r2, $r3, $r4, $r5;
        int $i0, $i1;

        r1 := @this: org.jsoup.nodes.Attributes;

        r0 := @parameter0: org.jsoup.nodes.Attributes;

        $i0 = virtualinvoke r0.<org.jsoup.nodes.Attributes: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r2 != null goto label2;

        $r5 = new java.util.LinkedHashMap;

        $i1 = virtualinvoke r0.<org.jsoup.nodes.Attributes: int size()>();

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>(int)>($i1);

        r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes> = $r5;

     label2:
        $r4 = r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $r3 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        virtualinvoke $r4.<java.util.LinkedHashMap: void putAll(java.util.Map)>($r3);

        return;
    }

    public java.util.Iterator iterator()
    {
        org.jsoup.nodes.Attributes r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.jsoup.nodes.Attributes;

        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attributes: java.util.List asList()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.List asList()
    {
        org.jsoup.nodes.Attributes r0;
        java.util.Map$Entry r9;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.util.ArrayList $r2;
        java.util.LinkedHashMap $r1, $r3, $r4;
        java.util.List $r7, $r11;
        int $i0;
        java.lang.Object $r8, $r10;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Attributes;

        $r1 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r1 != null goto label1;

        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r11;

     label1:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $i0 = virtualinvoke $r3.<java.util.LinkedHashMap: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $r5 = virtualinvoke $r4.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

        $r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r7;
    }

    public java.util.Map dataset()
    {
        org.jsoup.nodes.Attributes$Dataset $r0;
        org.jsoup.nodes.Attributes r1;

        r1 := @this: org.jsoup.nodes.Attributes;

        $r0 = new org.jsoup.nodes.Attributes$Dataset;

        specialinvoke $r0.<org.jsoup.nodes.Attributes$Dataset: void <init>(org.jsoup.nodes.Attributes,org.jsoup.nodes.Attributes$1)>(r1, null);

        return $r0;
    }

    public java.lang.String html()
    {
        org.jsoup.nodes.Attributes r1;
        org.jsoup.nodes.Document$OutputSettings $r3;
        org.jsoup.nodes.Document $r2;
        java.lang.StringBuilder $r0;
        java.lang.String $r4;

        r1 := @this: org.jsoup.nodes.Attributes;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = new org.jsoup.nodes.Document;

        specialinvoke $r2.<org.jsoup.nodes.Document: void <init>(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();

        virtualinvoke r1.<org.jsoup.nodes.Attributes: void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings)>($r0, $r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    void html(java.lang.StringBuilder, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Attributes r0;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.LinkedHashMap $r1, $r2;
        org.jsoup.nodes.Attribute r8;
        org.jsoup.nodes.Document$OutputSettings r10;
        java.lang.Object $r5, $r7;
        java.lang.StringBuilder r9;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Attributes;

        r9 := @parameter0: java.lang.StringBuilder;

        r10 := @parameter1: org.jsoup.nodes.Document$OutputSettings;

        $r1 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (org.jsoup.nodes.Attribute) $r7;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r8.<org.jsoup.nodes.Attribute: void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings)>(r9, r10);

        goto label2;

     label3:
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.nodes.Attributes r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Attributes;

        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attributes: java.lang.String html()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.jsoup.nodes.Attributes r0, r2;
        java.util.LinkedHashMap $r3, $r4, $r5, $r6;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.nodes.Attributes;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.jsoup.nodes.Attributes;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.jsoup.nodes.Attributes) r1;

        $r3 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r3 == null goto label3;

        $r6 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $r5 = r2.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $z1 = virtualinvoke $r6.<java.util.LinkedHashMap: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label5;

        goto label4;

     label3:
        $r4 = r2.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r4 == null goto label5;

     label4:
        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        java.util.LinkedHashMap $r1, $r2;
        org.jsoup.nodes.Attributes r0;
        int $i0;

        r0 := @this: org.jsoup.nodes.Attributes;

        $r1 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $i0 = virtualinvoke $r2.<java.util.LinkedHashMap: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public org.jsoup.nodes.Attributes clone()
    {
        org.jsoup.nodes.Attributes r0, r3, $r12;
        java.lang.CloneNotSupportedException $r13;
        java.util.LinkedHashMap $r1, $r4, $r5, $r9;
        int $i0;
        java.lang.String $r10;
        boolean $z0;
        java.util.Iterator $r6;
        java.lang.RuntimeException $r14;
        org.jsoup.nodes.Attribute r8, $r11;
        java.lang.Object $r2, $r7;

        r0 := @this: org.jsoup.nodes.Attributes;

        $r1 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        if $r1 != null goto label1;

        $r12 = new org.jsoup.nodes.Attributes;

        specialinvoke $r12.<org.jsoup.nodes.Attributes: void <init>()>();

        return $r12;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r3 = (org.jsoup.nodes.Attributes) $r2;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label4:
        $r4 = new java.util.LinkedHashMap;

        $r5 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $i0 = virtualinvoke $r5.<java.util.LinkedHashMap: int size()>();

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>(int)>($i0);

        r3.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes> = $r4;

        $r6 = virtualinvoke r0.<org.jsoup.nodes.Attributes: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.jsoup.nodes.Attribute) $r7;

        $r9 = r3.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        $r10 = virtualinvoke r8.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        $r11 = virtualinvoke r8.<org.jsoup.nodes.Attribute: org.jsoup.nodes.Attribute clone()>();

        virtualinvoke $r9.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        goto label5;

     label6:
        return r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    private static java.lang.String dataKey(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data-");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jsoup.nodes.Attributes r0, $r1;

        r0 := @this: org.jsoup.nodes.Attributes;

        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attributes: org.jsoup.nodes.Attributes clone()>();

        return $r1;
    }

    static java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes)
    {
        java.util.LinkedHashMap $r1;
        org.jsoup.nodes.Attributes r0;

        r0 := @parameter0: org.jsoup.nodes.Attributes;

        $r1 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;

        return $r1;
    }

    static java.util.LinkedHashMap access$102(org.jsoup.nodes.Attributes, java.util.LinkedHashMap)
    {
        java.util.LinkedHashMap r1;
        org.jsoup.nodes.Attributes r0;

        r0 := @parameter0: org.jsoup.nodes.Attributes;

        r1 := @parameter1: java.util.LinkedHashMap;

        r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes> = r1;

        return r1;
    }

    static java.lang.String access$300(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.jsoup.nodes.Attributes: java.lang.String dataKey(java.lang.String)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.jsoup.nodes.Attributes: java.lang.String dataPrefix> = "data-";

        return;
    }
}
