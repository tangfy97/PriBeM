class org.apache.cxf.endpoint.ClientImpl$2 extends java.lang.Object implements org.apache.cxf.transport.MessageObserver
{
    final org.apache.cxf.endpoint.ClientImpl this$0;

    void <init>(org.apache.cxf.endpoint.ClientImpl)
    {
        org.apache.cxf.endpoint.ClientImpl r1;
        org.apache.cxf.endpoint.ClientImpl$2 r0;

        r0 := @this: org.apache.cxf.endpoint.ClientImpl$2;

        r1 := @parameter0: org.apache.cxf.endpoint.ClientImpl;

        r0.<org.apache.cxf.endpoint.ClientImpl$2: org.apache.cxf.endpoint.ClientImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onMessage(org.apache.cxf.message.Message)
    {
        java.util.concurrent.Executor $r12;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.endpoint.ClientImpl$2$1 $r11;
        org.apache.cxf.endpoint.ClientImpl$2 r8;
        org.apache.cxf.message.Exchange $r1;
        org.apache.cxf.endpoint.ClientImpl $r9, $r10;
        java.lang.StringBuilder $r2, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        boolean $z0;

        r8 := @this: org.apache.cxf.endpoint.ClientImpl$2;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = class "Ljava/util/concurrent/Executor;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".USING_SPECIFIED");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: boolean containsKey(java.lang.Object)>($r7);

        if $z0 != 0 goto label1;

        $r10 = r8.<org.apache.cxf.endpoint.ClientImpl$2: org.apache.cxf.endpoint.ClientImpl this$0>;

        $r12 = $r10.<org.apache.cxf.endpoint.ClientImpl: java.util.concurrent.Executor executor>;

        $r11 = new org.apache.cxf.endpoint.ClientImpl$2$1;

        specialinvoke $r11.<org.apache.cxf.endpoint.ClientImpl$2$1: void <init>(org.apache.cxf.endpoint.ClientImpl$2,org.apache.cxf.message.Message)>(r8, r0);

        interfaceinvoke $r12.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r11);

        goto label2;

     label1:
        $r9 = r8.<org.apache.cxf.endpoint.ClientImpl$2: org.apache.cxf.endpoint.ClientImpl this$0>;

        virtualinvoke $r9.<org.apache.cxf.endpoint.ClientImpl: void onMessage(org.apache.cxf.message.Message)>(r0);

     label2:
        return;
    }
}
