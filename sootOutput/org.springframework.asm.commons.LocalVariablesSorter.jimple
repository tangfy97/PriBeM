public class org.springframework.asm.commons.LocalVariablesSorter extends org.springframework.asm.MethodAdapter
{
    private int[] mapping;
    protected final int firstLocal;
    private int nextLocal;

    public void <init>(int, java.lang.String, org.springframework.asm.MethodVisitor)
    {
        org.springframework.asm.Type[] $r4;
        byte $b6;
        int[] $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i7, $i8;
        org.springframework.asm.MethodVisitor r1;
        java.lang.String r3;
        org.springframework.asm.commons.LocalVariablesSorter r0;
        org.springframework.asm.Type $r5;

        r0 := @this: org.springframework.asm.commons.LocalVariablesSorter;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r1 := @parameter2: org.springframework.asm.MethodVisitor;

        specialinvoke r0.<org.springframework.asm.MethodAdapter: void <init>(org.springframework.asm.MethodVisitor)>(r1);

        $r2 = newarray (int)[40];

        r0.<org.springframework.asm.commons.LocalVariablesSorter: int[] mapping> = $r2;

        $r4 = staticinvoke <org.springframework.asm.Type: org.springframework.asm.Type[] getArgumentTypes(java.lang.String)>(r3);

        $i1 = 8 & i0;

        if $i1 == 0 goto label1;

        $b6 = 0;

        goto label2;

     label1:
        $b6 = 1;

     label2:
        r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal> = $b6;

        i7 = 0;

     label3:
        $i8 = lengthof $r4;

        if i7 >= $i8 goto label4;

        $i3 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal>;

        $r5 = $r4[i7];

        $i4 = virtualinvoke $r5.<org.springframework.asm.Type: int getSize()>();

        $i5 = $i3 + $i4;

        r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal> = $i5;

        i7 = i7 + 1;

        goto label3;

     label4:
        $i2 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal>;

        r0.<org.springframework.asm.commons.LocalVariablesSorter: int firstLocal> = $i2;

        return;
    }

    public void visitVarInsn(int, int)
    {
        byte b3;
        int i0, i1, $i2;
        org.springframework.asm.MethodVisitor $r1;
        org.springframework.asm.commons.LocalVariablesSorter r0;

        r0 := @this: org.springframework.asm.commons.LocalVariablesSorter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        lookupswitch(i0)
        {
            case 22: goto label1;
            case 24: goto label1;
            case 55: goto label1;
            case 57: goto label1;
            default: goto label2;
        };

     label1:
        b3 = 2;

        goto label3;

     label2:
        b3 = 1;

     label3:
        $r1 = r0.<org.springframework.asm.commons.LocalVariablesSorter: org.springframework.asm.MethodVisitor mv>;

        $i2 = specialinvoke r0.<org.springframework.asm.commons.LocalVariablesSorter: int remap(int,int)>(i1, b3);

        interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: void visitVarInsn(int,int)>(i0, $i2);

        return;
    }

    public void visitIincInsn(int, int)
    {
        int i0, $i1, i2;
        org.springframework.asm.MethodVisitor $r1;
        org.springframework.asm.commons.LocalVariablesSorter r0;

        r0 := @this: org.springframework.asm.commons.LocalVariablesSorter;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = r0.<org.springframework.asm.commons.LocalVariablesSorter: org.springframework.asm.MethodVisitor mv>;

        $i1 = specialinvoke r0.<org.springframework.asm.commons.LocalVariablesSorter: int remap(int,int)>(i0, 1);

        interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: void visitIincInsn(int,int)>($i1, i2);

        return;
    }

    public void visitMaxs(int, int)
    {
        int i0, $i1, i2;
        org.springframework.asm.MethodVisitor $r1;
        org.springframework.asm.commons.LocalVariablesSorter r0;

        r0 := @this: org.springframework.asm.commons.LocalVariablesSorter;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = r0.<org.springframework.asm.commons.LocalVariablesSorter: org.springframework.asm.MethodVisitor mv>;

        $i1 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal>;

        interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: void visitMaxs(int,int)>(i0, $i1);

        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.springframework.asm.Label, org.springframework.asm.Label, int)
    {
        org.springframework.asm.Label r5, r6;
        byte $b2;
        int i0, $i1;
        org.springframework.asm.MethodVisitor $r7;
        java.lang.String r0, $r1, r3, r4, $r8;
        org.springframework.asm.commons.LocalVariablesSorter r2;
        boolean $z0, $z1;

        r2 := @this: org.springframework.asm.commons.LocalVariablesSorter;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: org.springframework.asm.Label;

        r6 := @parameter4: org.springframework.asm.Label;

        i0 := @parameter5: int;

        $r1 = "J";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r8 = "D";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $b2 = 2;

        goto label3;

     label2:
        $b2 = 1;

     label3:
        $r7 = r2.<org.springframework.asm.commons.LocalVariablesSorter: org.springframework.asm.MethodVisitor mv>;

        $i1 = specialinvoke r2.<org.springframework.asm.commons.LocalVariablesSorter: int remap(int,int)>(i0, $b2);

        interfaceinvoke $r7.<org.springframework.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.springframework.asm.Label,org.springframework.asm.Label,int)>(r3, r0, r4, r5, r6, $i1);

        return;
    }

    protected int newLocal(int)
    {
        int i0, i1, $i2, $i3;
        org.springframework.asm.commons.LocalVariablesSorter r0;

        r0 := @this: org.springframework.asm.commons.LocalVariablesSorter;

        i1 := @parameter0: int;

        i0 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal>;

        $i2 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal>;

        $i3 = $i2 + i1;

        r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal> = $i3;

        return i0;
    }

    private int remap(int, int)
    {
        int[] $r1, $r2, $r3, $r4, r5;
        int i0, $i1, i2, $i3, $i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        org.springframework.asm.commons.LocalVariablesSorter r0;

        r0 := @this: org.springframework.asm.commons.LocalVariablesSorter;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $i1 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int firstLocal>;

        if i0 >= $i1 goto label1;

        return i0;

     label1:
        $i3 = 2 * i0;

        $i4 = $i3 + i2;

        i5 = $i4 - 1;

        $r1 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int[] mapping>;

        i6 = lengthof $r1;

        if i5 < i6 goto label2;

        $i12 = 2 * i6;

        $i11 = i5 + 1;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i11);

        r5 = newarray (int)[$i13];

        $r4 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int[] mapping>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r5, 0, i6);

        r0.<org.springframework.asm.commons.LocalVariablesSorter: int[] mapping> = r5;

     label2:
        $r2 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int[] mapping>;

        $i14 = $r2[i5];

        i15 = $i14;

        if $i14 != 0 goto label3;

        $i8 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal>;

        i15 = $i8 + 1;

        $r3 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int[] mapping>;

        $r3[i5] = i15;

        $i9 = r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal>;

        $i10 = $i9 + i2;

        r0.<org.springframework.asm.commons.LocalVariablesSorter: int nextLocal> = $i10;

     label3:
        $i7 = i15 - 1;

        return $i7;
    }
}
