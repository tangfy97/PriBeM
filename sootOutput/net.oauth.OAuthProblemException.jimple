public class net.oauth.OAuthProblemException extends net.oauth.OAuthException
{
    public static final java.lang.String OAUTH_PROBLEM;
    private final java.util.Map parameters;
    private static final long serialVersionUID;

    public void <init>()
    {
        java.util.HashMap $r1;
        net.oauth.OAuthProblemException r0;

        r0 := @this: net.oauth.OAuthProblemException;

        specialinvoke r0.<net.oauth.OAuthException: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<net.oauth.OAuthProblemException: java.util.Map parameters> = $r1;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.util.Map $r3;
        java.util.HashMap $r2;
        net.oauth.OAuthProblemException r0;
        java.lang.String r1;

        r0 := @this: net.oauth.OAuthProblemException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<net.oauth.OAuthException: void <init>(java.lang.String)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<net.oauth.OAuthProblemException: java.util.Map parameters> = $r2;

        if r1 == null goto label1;

        $r3 = r0.<net.oauth.OAuthProblemException: java.util.Map parameters>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oauth_problem", r1);

     label1:
        return;
    }

    public java.lang.String getMessage()
    {
        net.oauth.OAuthProblemException r0;
        java.lang.Integer $r5;
        java.util.Map $r3;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1, $r2, $r9, $r10, $r11, r12;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: net.oauth.OAuthProblemException;

        $r1 = specialinvoke r0.<net.oauth.OAuthException: java.lang.String getMessage()>();

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = virtualinvoke r0.<net.oauth.OAuthProblemException: java.lang.String getProblem()>();

        if $r2 == null goto label2;

        return $r2;

     label2:
        $r3 = virtualinvoke r0.<net.oauth.OAuthProblemException: java.util.Map getParameters()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("HTTP response");

        if $r4 == null goto label5;

        $r10 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        r12 = $r10;

        $i1 = virtualinvoke $r10.<java.lang.String: int indexOf(java.lang.String)>("\n");

        i3 = $i1;

        if $i1 >= 0 goto label3;

        i3 = virtualinvoke $r10.<java.lang.String: int indexOf(java.lang.String)>("\r");

     label3:
        if i3 < 0 goto label4;

        r12 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

     label4:
        $r11 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i2 <= 0 goto label5;

        return $r11;

     label5:
        $i0 = virtualinvoke r0.<net.oauth.OAuthProblemException: int getHttpStatusCode()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        if $r5 == null goto label6;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP status ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label6:
        return null;
    }

    public void setParameter(java.lang.String, java.lang.Object)
    {
        java.util.Map $r1;
        java.lang.Object r3;
        net.oauth.OAuthProblemException r0;
        java.lang.String r2;

        r0 := @this: net.oauth.OAuthProblemException;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<net.oauth.OAuthProblemException: java.util.Map getParameters()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public java.util.Map getParameters()
    {
        net.oauth.OAuthProblemException r0;
        java.util.Map $r1;

        r0 := @this: net.oauth.OAuthProblemException;

        $r1 = r0.<net.oauth.OAuthProblemException: java.util.Map parameters>;

        return $r1;
    }

    public java.lang.String getProblem()
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        net.oauth.OAuthProblemException r0;
        java.lang.String $r3;

        r0 := @this: net.oauth.OAuthProblemException;

        $r1 = virtualinvoke r0.<net.oauth.OAuthProblemException: java.util.Map getParameters()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("oauth_problem");

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public int getHttpStatusCode()
    {
        net.oauth.OAuthProblemException r0;
        java.util.Map $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.lang.Number $r4;
        boolean $z0;

        r0 := @this: net.oauth.OAuthProblemException;

        $r1 = virtualinvoke r0.<net.oauth.OAuthProblemException: java.util.Map getParameters()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("HTTP status");

        if $r2 != null goto label1;

        return 200;

     label1:
        $z0 = $r2 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r4 = (java.lang.Number) $r2;

        $i1 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        return $i1;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        return $i0;
    }

    public static void <clinit>()
    {
        <net.oauth.OAuthProblemException: long serialVersionUID> = 1L;

        <net.oauth.OAuthProblemException: java.lang.String OAUTH_PROBLEM> = "oauth_problem";

        return;
    }
}
