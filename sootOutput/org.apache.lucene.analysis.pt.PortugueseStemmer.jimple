public class org.apache.lucene.analysis.pt.PortugueseStemmer extends org.apache.lucene.analysis.pt.RSLPStemmerBase
{
    private static final org.apache.lucene.analysis.pt.RSLPStemmerBase$Step plural;
    private static final org.apache.lucene.analysis.pt.RSLPStemmerBase$Step feminine;
    private static final org.apache.lucene.analysis.pt.RSLPStemmerBase$Step adverb;
    private static final org.apache.lucene.analysis.pt.RSLPStemmerBase$Step augmentative;
    private static final org.apache.lucene.analysis.pt.RSLPStemmerBase$Step noun;
    private static final org.apache.lucene.analysis.pt.RSLPStemmerBase$Step verb;
    private static final org.apache.lucene.analysis.pt.RSLPStemmerBase$Step vowel;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.lucene.analysis.pt.PortugueseStemmer r0;

        r0 := @this: org.apache.lucene.analysis.pt.PortugueseStemmer;

        specialinvoke r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase: void <init>()>();

        return;
    }

    public int stem(char[], int)
    {
        org.apache.lucene.analysis.pt.PortugueseStemmer r9;
        org.apache.lucene.analysis.pt.RSLPStemmerBase$Step $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.AssertionError $r10;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, i9, i10, i11, $i12;
        boolean $z0;
        char $c5;
        char[] r0;

        r9 := @this: org.apache.lucene.analysis.pt.PortugueseStemmer;

        r0 := @parameter0: char[];

        i9 := @parameter1: int;

        $z0 = <org.apache.lucene.analysis.pt.PortugueseStemmer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i8 = lengthof r0;

        $i7 = i9 + 1;

        if $i8 >= $i7 goto label01;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>("this stemmer requires an oversized array of at least 1");

        throw $r10;

     label01:
        $r1 = <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step plural>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Step: int apply(char[],int)>(r0, i9);

        $r2 = <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step adverb>;

        $i1 = virtualinvoke $r2.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Step: int apply(char[],int)>(r0, $i0);

        $r3 = <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step feminine>;

        $i2 = virtualinvoke $r3.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Step: int apply(char[],int)>(r0, $i1);

        $r4 = <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step augmentative>;

        $i3 = virtualinvoke $r4.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Step: int apply(char[],int)>(r0, $i2);

        $r5 = <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step noun>;

        $i4 = virtualinvoke $r5.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Step: int apply(char[],int)>(r0, $i3);

        i10 = $i4;

        if $i4 != $i3 goto label02;

        $r6 = <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step verb>;

        $i6 = virtualinvoke $r6.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Step: int apply(char[],int)>(r0, $i4);

        i10 = $i6;

        if $i6 != $i4 goto label02;

        $r7 = <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step vowel>;

        i10 = virtualinvoke $r7.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Step: int apply(char[],int)>(r0, $i6);

     label02:
        i11 = 0;

     label03:
        if i11 >= i10 goto label13;

        $c5 = r0[i11];

        $i12 = (int) $c5;

        tableswitch($i12)
        {
            case 224: goto label04;
            case 225: goto label04;
            case 226: goto label04;
            case 227: goto label04;
            case 228: goto label04;
            case 229: goto label04;
            case 230: goto label12;
            case 231: goto label05;
            case 232: goto label06;
            case 233: goto label06;
            case 234: goto label06;
            case 235: goto label06;
            case 236: goto label07;
            case 237: goto label07;
            case 238: goto label07;
            case 239: goto label07;
            case 240: goto label12;
            case 241: goto label08;
            case 242: goto label09;
            case 243: goto label09;
            case 244: goto label09;
            case 245: goto label09;
            case 246: goto label09;
            case 247: goto label12;
            case 248: goto label12;
            case 249: goto label10;
            case 250: goto label10;
            case 251: goto label10;
            case 252: goto label10;
            case 253: goto label11;
            case 254: goto label12;
            case 255: goto label11;
            default: goto label12;
        };

     label04:
        r0[i11] = 97;

        goto label12;

     label05:
        r0[i11] = 99;

        goto label12;

     label06:
        r0[i11] = 101;

        goto label12;

     label07:
        r0[i11] = 105;

        goto label12;

     label08:
        r0[i11] = 110;

        goto label12;

     label09:
        r0[i11] = 111;

        goto label12;

     label10:
        r0[i11] = 117;

        goto label12;

     label11:
        r0[i11] = 121;

     label12:
        i11 = i11 + 1;

        goto label03;

     label13:
        return i10;
    }

    static void <clinit>()
    {
        org.apache.lucene.analysis.pt.RSLPStemmerBase$Step $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        java.util.Map $r1;
        boolean $z0, $z1;
        java.lang.Class $r0;
        java.lang.Object $r2, $r4, $r6, $r8, $r10, $r12, $r14;

        $r0 = class "Lorg/apache/lucene/analysis/pt/PortugueseStemmer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.analysis.pt.PortugueseStemmer: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.apache.lucene.analysis.pt.PortugueseStemmer: java.util.Map parse(java.lang.Class,java.lang.String)>(class "Lorg/apache/lucene/analysis/pt/PortugueseStemmer;", "portuguese.rslp");

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Plural");

        $r3 = (org.apache.lucene.analysis.pt.RSLPStemmerBase$Step) $r2;

        <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step plural> = $r3;

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Feminine");

        $r5 = (org.apache.lucene.analysis.pt.RSLPStemmerBase$Step) $r4;

        <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step feminine> = $r5;

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Adverb");

        $r7 = (org.apache.lucene.analysis.pt.RSLPStemmerBase$Step) $r6;

        <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step adverb> = $r7;

        $r8 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Augmentative");

        $r9 = (org.apache.lucene.analysis.pt.RSLPStemmerBase$Step) $r8;

        <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step augmentative> = $r9;

        $r10 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Noun");

        $r11 = (org.apache.lucene.analysis.pt.RSLPStemmerBase$Step) $r10;

        <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step noun> = $r11;

        $r12 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Verb");

        $r13 = (org.apache.lucene.analysis.pt.RSLPStemmerBase$Step) $r12;

        <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step verb> = $r13;

        $r14 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Vowel");

        $r15 = (org.apache.lucene.analysis.pt.RSLPStemmerBase$Step) $r14;

        <org.apache.lucene.analysis.pt.PortugueseStemmer: org.apache.lucene.analysis.pt.RSLPStemmerBase$Step vowel> = $r15;

        return;
    }
}
