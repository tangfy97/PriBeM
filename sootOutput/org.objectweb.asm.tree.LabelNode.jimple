public class org.objectweb.asm.tree.LabelNode extends org.objectweb.asm.tree.AbstractInsnNode
{
    private org.objectweb.asm.Label label;

    public void <init>()
    {
        int $i1;
        org.objectweb.asm.tree.LabelNode r0;

        r0 := @this: org.objectweb.asm.tree.LabelNode;

        $i1 = (int) -1;

        specialinvoke r0.<org.objectweb.asm.tree.AbstractInsnNode: void <init>(int)>($i1);

        return;
    }

    public void <init>(org.objectweb.asm.Label)
    {
        int $i1;
        org.objectweb.asm.tree.LabelNode r0;
        org.objectweb.asm.Label r1;

        r0 := @this: org.objectweb.asm.tree.LabelNode;

        r1 := @parameter0: org.objectweb.asm.Label;

        $i1 = (int) -1;

        specialinvoke r0.<org.objectweb.asm.tree.AbstractInsnNode: void <init>(int)>($i1);

        r0.<org.objectweb.asm.tree.LabelNode: org.objectweb.asm.Label label> = r1;

        return;
    }

    public int getType()
    {
        org.objectweb.asm.tree.LabelNode r0;

        r0 := @this: org.objectweb.asm.tree.LabelNode;

        return 8;
    }

    public org.objectweb.asm.Label getLabel()
    {
        org.objectweb.asm.tree.LabelNode r0;
        org.objectweb.asm.Label $r1, $r2, $r3;

        r0 := @this: org.objectweb.asm.tree.LabelNode;

        $r1 = r0.<org.objectweb.asm.tree.LabelNode: org.objectweb.asm.Label label>;

        if $r1 != null goto label1;

        $r3 = new org.objectweb.asm.Label;

        specialinvoke $r3.<org.objectweb.asm.Label: void <init>()>();

        r0.<org.objectweb.asm.tree.LabelNode: org.objectweb.asm.Label label> = $r3;

     label1:
        $r2 = r0.<org.objectweb.asm.tree.LabelNode: org.objectweb.asm.Label label>;

        return $r2;
    }

    public void accept(org.objectweb.asm.MethodVisitor)
    {
        org.objectweb.asm.tree.LabelNode r1;
        org.objectweb.asm.Label $r2;
        org.objectweb.asm.MethodVisitor r0;

        r1 := @this: org.objectweb.asm.tree.LabelNode;

        r0 := @parameter0: org.objectweb.asm.MethodVisitor;

        $r2 = virtualinvoke r1.<org.objectweb.asm.tree.LabelNode: org.objectweb.asm.Label getLabel()>();

        virtualinvoke r0.<org.objectweb.asm.MethodVisitor: void visitLabel(org.objectweb.asm.Label)>($r2);

        return;
    }

    public org.objectweb.asm.tree.AbstractInsnNode clone(java.util.Map)
    {
        org.objectweb.asm.tree.AbstractInsnNode $r3;
        java.util.Map r0;
        org.objectweb.asm.tree.LabelNode r1;
        java.lang.Object $r2;

        r1 := @this: org.objectweb.asm.tree.LabelNode;

        r0 := @parameter0: java.util.Map;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (org.objectweb.asm.tree.AbstractInsnNode) $r2;

        return $r3;
    }

    public void resetLabel()
    {
        org.objectweb.asm.tree.LabelNode r0;

        r0 := @this: org.objectweb.asm.tree.LabelNode;

        r0.<org.objectweb.asm.tree.LabelNode: org.objectweb.asm.Label label> = null;

        return;
    }
}
