public class javax.ws.rs.NotFoundException extends javax.ws.rs.ClientErrorException
{
    private static final long serialVersionUID;

    public void <init>()
    {
        javax.ws.rs.core.Response$Status $r1;
        javax.ws.rs.NotFoundException r0;

        r0 := @this: javax.ws.rs.NotFoundException;

        $r1 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_FOUND>;

        specialinvoke r0.<javax.ws.rs.ClientErrorException: void <init>(javax.ws.rs.core.Response$Status)>($r1);

        return;
    }

    public void <init>(javax.ws.rs.core.Response) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.core.Response r1, $r3;
        javax.ws.rs.core.Response$Status $r2;
        javax.ws.rs.NotFoundException r0;

        r0 := @this: javax.ws.rs.NotFoundException;

        r1 := @parameter0: javax.ws.rs.core.Response;

        $r2 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_FOUND>;

        $r3 = staticinvoke <javax.ws.rs.NotFoundException: javax.ws.rs.core.Response validate(javax.ws.rs.core.Response,javax.ws.rs.core.Response$Status)>(r1, $r2);

        specialinvoke r0.<javax.ws.rs.ClientErrorException: void <init>(javax.ws.rs.core.Response)>($r3);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        javax.ws.rs.core.Response$Status $r2;
        javax.ws.rs.NotFoundException r0;

        r0 := @this: javax.ws.rs.NotFoundException;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_FOUND>;

        specialinvoke r0.<javax.ws.rs.ClientErrorException: void <init>(javax.ws.rs.core.Response$Status,java.lang.Throwable)>($r2, r1);

        return;
    }

    public void <init>(javax.ws.rs.core.Response, java.lang.Throwable) throws java.lang.IllegalArgumentException
    {
        java.lang.Throwable r4;
        javax.ws.rs.core.Response r1, $r3;
        javax.ws.rs.core.Response$Status $r2;
        javax.ws.rs.NotFoundException r0;

        r0 := @this: javax.ws.rs.NotFoundException;

        r1 := @parameter0: javax.ws.rs.core.Response;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_FOUND>;

        $r3 = staticinvoke <javax.ws.rs.NotFoundException: javax.ws.rs.core.Response validate(javax.ws.rs.core.Response,javax.ws.rs.core.Response$Status)>(r1, $r2);

        specialinvoke r0.<javax.ws.rs.ClientErrorException: void <init>(javax.ws.rs.core.Response,java.lang.Throwable)>($r3, r4);

        return;
    }

    public static void <clinit>()
    {
        <javax.ws.rs.NotFoundException: long serialVersionUID> = -6820866117511628388L;

        return;
    }
}
