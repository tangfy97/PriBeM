public class org.apache.commons.codec.language.ColognePhonetic extends java.lang.Object implements org.apache.commons.codec.StringEncoder
{
    private static final char[][] PREPROCESS_MAP;

    public void <init>()
    {
        org.apache.commons.codec.language.ColognePhonetic r0;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean arrayContains(char[], char)
    {
        int i0, i3, $i4, $i5;
        char[] r0;
        char c1, c2;

        r0 := @parameter0: char[];

        c2 := @parameter1: char;

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        c1 = r0[i3];

        $i4 = (int) c1;

        $i5 = (int) c2;

        if $i4 != $i5 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.String colognePhonetic(java.lang.String)
    {
        org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int $i0, $i1, $i3, i5, i6, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.String $r1, $r5, r15;
        char $c2, c4, c7, c8;
        org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer $r17;
        char[] $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        org.apache.commons.codec.language.ColognePhonetic r0;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic;

        r15 := @parameter0: java.lang.String;

        if r15 != null goto label01;

        return null;

     label01:
        $r1 = specialinvoke r0.<org.apache.commons.codec.language.ColognePhonetic: java.lang.String preprocess(java.lang.String)>(r15);

        $r16 = new org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i0 * 2;

        specialinvoke $r16.<org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer: void <init>(org.apache.commons.codec.language.ColognePhonetic,int)>(r0, $i1);

        $r17 = new org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer;

        $r4 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r17.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: void <init>(org.apache.commons.codec.language.ColognePhonetic,char[])>(r0, $r4);

        c4 = 45;

        i5 = 47;

        i6 = virtualinvoke $r17.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: int length()>();

     label02:
        if i6 <= 0 goto label32;

        $c2 = virtualinvoke $r17.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: char removeNext()>();

        $i3 = virtualinvoke $r17.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: int length()>();

        i6 = $i3;

        if $i3 <= 0 goto label03;

        c7 = virtualinvoke $r17.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: char getNextChar()>();

        goto label04;

     label03:
        c7 = 45;

     label04:
        $r6 = newarray (char)[7];

        $r6[0] = 65;

        $r6[1] = 69;

        $r6[2] = 73;

        $r6[3] = 74;

        $r6[4] = 79;

        $r6[5] = 85;

        $r6[6] = 89;

        $z0 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r6, $c2);

        if $z0 == 0 goto label05;

        c8 = 48;

        goto label28;

     label05:
        $i9 = (int) $c2;

        if $i9 == 72 goto label06;

        $i10 = (int) $c2;

        if $i10 < 65 goto label06;

        $i11 = (int) $c2;

        if $i11 <= 90 goto label08;

     label06:
        if i5 != 47 goto label07;

        goto label02;

     label07:
        c8 = 45;

        goto label28;

     label08:
        $i12 = (int) $c2;

        if $i12 == 66 goto label09;

        $i13 = (int) $c2;

        if $i13 != 80 goto label10;

        if c7 == 72 goto label10;

     label09:
        c8 = 49;

        goto label28;

     label10:
        $i14 = (int) $c2;

        if $i14 == 68 goto label11;

        $i15 = (int) $c2;

        if $i15 != 84 goto label12;

     label11:
        $r7 = newarray (char)[3];

        $r7[0] = 83;

        $r7[1] = 67;

        $r7[2] = 90;

        $z1 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r7, c7);

        if $z1 != 0 goto label12;

        c8 = 50;

        goto label28;

     label12:
        $r8 = newarray (char)[4];

        $r8[0] = 87;

        $r8[1] = 70;

        $r8[2] = 80;

        $r8[3] = 86;

        $z2 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r8, $c2);

        if $z2 == 0 goto label13;

        c8 = 51;

        goto label28;

     label13:
        $r9 = newarray (char)[3];

        $r9[0] = 71;

        $r9[1] = 75;

        $r9[2] = 81;

        $z3 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r9, $c2);

        if $z3 == 0 goto label14;

        c8 = 52;

        goto label28;

     label14:
        $i16 = (int) $c2;

        if $i16 != 88 goto label15;

        $r14 = newarray (char)[3];

        $r14[0] = 67;

        $r14[1] = 75;

        $r14[2] = 81;

        $z8 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r14, c4);

        if $z8 != 0 goto label15;

        c8 = 52;

        virtualinvoke $r17.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: void addLeft(char)>(83);

        i6 = $i3 + 1;

        goto label28;

     label15:
        $i17 = (int) $c2;

        if $i17 == 83 goto label16;

        $i18 = (int) $c2;

        if $i18 != 90 goto label17;

     label16:
        c8 = 56;

        goto label28;

     label17:
        $i19 = (int) $c2;

        if $i19 != 67 goto label22;

        if i5 != 47 goto label19;

        $r13 = newarray (char)[9];

        $r13[0] = 65;

        $r13[1] = 72;

        $r13[2] = 75;

        $r13[3] = 76;

        $r13[4] = 79;

        $r13[5] = 81;

        $r13[6] = 82;

        $r13[7] = 85;

        $r13[8] = 88;

        $z7 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r13, c7);

        if $z7 == 0 goto label18;

        c8 = 52;

        goto label28;

     label18:
        c8 = 56;

        goto label28;

     label19:
        $r11 = newarray (char)[2];

        $r11[0] = 83;

        $r11[1] = 90;

        $z5 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r11, c4);

        if $z5 != 0 goto label20;

        $r12 = newarray (char)[7];

        $r12[0] = 65;

        $r12[1] = 72;

        $r12[2] = 79;

        $r12[3] = 85;

        $r12[4] = 75;

        $r12[5] = 81;

        $r12[6] = 88;

        $z6 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r12, c7);

        if $z6 != 0 goto label21;

     label20:
        c8 = 56;

        goto label28;

     label21:
        c8 = 52;

        goto label28;

     label22:
        $r10 = newarray (char)[3];

        $r10[0] = 84;

        $r10[1] = 68;

        $r10[2] = 88;

        $z4 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r10, $c2);

        if $z4 == 0 goto label23;

        c8 = 56;

        goto label28;

     label23:
        $i20 = (int) $c2;

        if $i20 != 82 goto label24;

        c8 = 55;

        goto label28;

     label24:
        $i21 = (int) $c2;

        if $i21 != 76 goto label25;

        c8 = 53;

        goto label28;

     label25:
        $i22 = (int) $c2;

        if $i22 == 77 goto label26;

        $i23 = (int) $c2;

        if $i23 != 78 goto label27;

     label26:
        c8 = 54;

        goto label28;

     label27:
        c8 = $c2;

     label28:
        if c8 == 45 goto label31;

        if i5 == c8 goto label29;

        if c8 != 48 goto label30;

        if i5 == 47 goto label30;

     label29:
        if c8 < 48 goto label30;

        if c8 <= 56 goto label31;

     label30:
        virtualinvoke $r16.<org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer: void addRight(char)>(c8);

     label31:
        c4 = $c2;

        i5 = c8;

        goto label02;

     label32:
        $r5 = virtualinvoke $r16.<org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.EncoderException $r4;
        java.lang.String $r2, $r3, $r8, $r12, $r15;
        boolean $z0;
        java.lang.Object r0;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r13, $r14;
        java.lang.Class $r7, $r11;
        org.apache.commons.codec.language.ColognePhonetic r1;

        r1 := @this: org.apache.commons.codec.language.ColognePhonetic;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $r4 = new org.apache.commons.codec.EncoderException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This method\'s parameter was expected to be of the type ");

        $r7 = class "Ljava/lang/String;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". But actually it was of the type ");

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>($r15);

        throw $r4;

     label1:
        $r2 = (java.lang.String) r0;

        $r3 = virtualinvoke r1.<org.apache.commons.codec.language.ColognePhonetic: java.lang.String encode(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String encode(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.apache.commons.codec.language.ColognePhonetic r0;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.language.ColognePhonetic: java.lang.String colognePhonetic(java.lang.String)>(r1);

        return $r2;
    }

    public boolean isEncodeEqual(java.lang.String, java.lang.String)
    {
        java.lang.String r1, $r2, r3, $r4;
        org.apache.commons.codec.language.ColognePhonetic r0;
        boolean $z0;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.language.ColognePhonetic: java.lang.String colognePhonetic(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.ColognePhonetic: java.lang.String colognePhonetic(java.lang.String)>(r3);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }

    private java.lang.String preprocess(java.lang.String)
    {
        char[][] r4;
        java.util.Locale $r0;
        int $i0, i2, i6, i7, $i8, $i9, $i10;
        java.lang.String $r1, r7, $r8;
        char $c1, $c3, $c4, $c5;
        char[] $r2, r5;
        org.apache.commons.codec.language.ColognePhonetic r6;

        r6 := @this: org.apache.commons.codec.language.ColognePhonetic;

        r7 := @parameter0: java.lang.String;

        $r0 = <java.util.Locale: java.util.Locale GERMAN>;

        $r1 = virtualinvoke r7.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        i6 = 0;

     label1:
        $i0 = lengthof $r2;

        if i6 >= $i0 goto label5;

        $c1 = $r2[i6];

        $i8 = (int) $c1;

        if $i8 <= 90 goto label4;

        r4 = <org.apache.commons.codec.language.ColognePhonetic: char[][] PREPROCESS_MAP>;

        i2 = lengthof r4;

        i7 = 0;

     label2:
        if i7 >= i2 goto label4;

        r5 = r4[i7];

        $c4 = $r2[i6];

        $c3 = r5[0];

        $i9 = (int) $c4;

        $i10 = (int) $c3;

        if $i9 != $i10 goto label3;

        $c5 = r5[1];

        $r2[i6] = $c5;

        goto label4;

     label3:
        i7 = i7 + 1;

        goto label2;

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r2);

        return $r8;
    }

    static void <clinit>()
    {
        char[] $r1, $r2, $r3, $r4;
        char[][] $r0;

        $r0 = newarray (char[])[4];

        $r1 = newarray (char)[2];

        $r1[0] = 196;

        $r1[1] = 65;

        $r0[0] = $r1;

        $r2 = newarray (char)[2];

        $r2[0] = 220;

        $r2[1] = 85;

        $r0[1] = $r2;

        $r3 = newarray (char)[2];

        $r3[0] = 214;

        $r3[1] = 79;

        $r0[2] = $r3;

        $r4 = newarray (char)[2];

        $r4[0] = 223;

        $r4[1] = 83;

        $r0[3] = $r4;

        <org.apache.commons.codec.language.ColognePhonetic: char[][] PREPROCESS_MAP> = $r0;

        return;
    }
}
