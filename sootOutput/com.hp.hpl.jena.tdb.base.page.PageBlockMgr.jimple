public class com.hp.hpl.jena.tdb.base.page.PageBlockMgr extends java.lang.Object
{
    protected final com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr;
    protected com.hp.hpl.jena.tdb.base.block.BlockConverter pageFactory;

    protected void <init>(com.hp.hpl.jena.tdb.base.block.BlockConverter, com.hp.hpl.jena.tdb.base.block.BlockMgr)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr r2;
        com.hp.hpl.jena.tdb.base.block.BlockConverter r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.BlockConverter;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockConverter pageFactory> = r1;

        r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr> = r2;

        return;
    }

    protected void setConverter(com.hp.hpl.jena.tdb.base.block.BlockConverter)
    {
        com.hp.hpl.jena.tdb.base.block.BlockConverter r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.BlockConverter;

        r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockConverter pageFactory> = r1;

        return;
    }

    public com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        return $r1;
    }

    public com.hp.hpl.jena.tdb.base.page.Page create(com.hp.hpl.jena.tdb.base.block.BlockType)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r1;
        com.hp.hpl.jena.tdb.base.page.Page $r5;
        com.hp.hpl.jena.tdb.base.block.BlockType r3;
        com.hp.hpl.jena.tdb.base.block.Block $r2;
        int $i1;
        com.hp.hpl.jena.tdb.base.block.BlockConverter $r4;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        r3 := @parameter0: com.hp.hpl.jena.tdb.base.block.BlockType;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        $i1 = (int) -1;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.block.BlockMgr: com.hp.hpl.jena.tdb.base.block.Block allocate(int)>($i1);

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.base.block.Block: void setModified(boolean)>(1);

        $r4 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockConverter pageFactory>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.tdb.base.block.BlockConverter: com.hp.hpl.jena.tdb.base.page.Page createFromBlock(com.hp.hpl.jena.tdb.base.block.Block,com.hp.hpl.jena.tdb.base.block.BlockType)>($r2, r3);

        return $r5;
    }

    public com.hp.hpl.jena.tdb.base.page.Page getWrite(int)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r1;
        com.hp.hpl.jena.tdb.base.page.Page $r4;
        com.hp.hpl.jena.tdb.base.block.Block $r2;
        int i0;
        long $l1;
        com.hp.hpl.jena.tdb.base.block.BlockConverter $r3;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        $l1 = (long) i0;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.block.BlockMgr: com.hp.hpl.jena.tdb.base.block.Block getWrite(long)>($l1);

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.base.block.Block: void setModified(boolean)>(1);

        $r3 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockConverter pageFactory>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.base.block.BlockConverter: com.hp.hpl.jena.tdb.base.page.Page fromBlock(com.hp.hpl.jena.tdb.base.block.Block)>($r2);

        return $r4;
    }

    public com.hp.hpl.jena.tdb.base.page.Page getRead(int)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r1;
        com.hp.hpl.jena.tdb.base.page.Page $r4;
        com.hp.hpl.jena.tdb.base.block.Block $r2;
        int i0;
        long $l1;
        com.hp.hpl.jena.tdb.base.block.BlockConverter $r3;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        $l1 = (long) i0;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.block.BlockMgr: com.hp.hpl.jena.tdb.base.block.Block getRead(long)>($l1);

        $r3 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockConverter pageFactory>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.base.block.BlockConverter: com.hp.hpl.jena.tdb.base.page.Page fromBlock(com.hp.hpl.jena.tdb.base.block.Block)>($r2);

        return $r4;
    }

    public void put(com.hp.hpl.jena.tdb.base.page.Page)
    {
        com.hp.hpl.jena.tdb.base.page.Page r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.page.Page;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: void write(com.hp.hpl.jena.tdb.base.page.Page)>(r1);

        virtualinvoke r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: void release(com.hp.hpl.jena.tdb.base.page.Page)>(r1);

        return;
    }

    public void write(com.hp.hpl.jena.tdb.base.page.Page)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r4;
        com.hp.hpl.jena.tdb.base.page.Page r1;
        com.hp.hpl.jena.tdb.base.block.Block $r3;
        com.hp.hpl.jena.tdb.base.block.BlockConverter $r2;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.page.Page;

        $r2 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockConverter pageFactory>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.base.block.BlockConverter: com.hp.hpl.jena.tdb.base.block.Block toBlock(com.hp.hpl.jena.tdb.base.page.Page)>(r1);

        $r4 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        interfaceinvoke $r4.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void write(com.hp.hpl.jena.tdb.base.block.Block)>($r3);

        return;
    }

    public void release(com.hp.hpl.jena.tdb.base.page.Page)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r3;
        com.hp.hpl.jena.tdb.base.page.Page r0;
        com.hp.hpl.jena.tdb.base.block.Block $r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r2;

        r2 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.page.Page;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.tdb.base.page.Page: com.hp.hpl.jena.tdb.base.block.Block getBackingBlock()>();

        $r3 = r2.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        interfaceinvoke $r3.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void release(com.hp.hpl.jena.tdb.base.block.Block)>($r1);

        return;
    }

    private void warn(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        r1 := @parameter0: java.lang.String;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, r1);

        return;
    }

    public void free(com.hp.hpl.jena.tdb.base.page.Page)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r3;
        com.hp.hpl.jena.tdb.base.page.Page r0;
        com.hp.hpl.jena.tdb.base.block.Block $r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r2;

        r2 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.page.Page;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.tdb.base.page.Page: com.hp.hpl.jena.tdb.base.block.Block getBackingBlock()>();

        $r3 = r2.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        interfaceinvoke $r3.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void free(com.hp.hpl.jena.tdb.base.block.Block)>($r1);

        return;
    }

    public void promote(com.hp.hpl.jena.tdb.base.page.Page)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r3;
        com.hp.hpl.jena.tdb.base.page.Page r0;
        com.hp.hpl.jena.tdb.base.block.Block $r1, $r4;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r2;

        r2 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.page.Page;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.tdb.base.page.Page: com.hp.hpl.jena.tdb.base.block.Block getBackingBlock()>();

        $r3 = r2.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.base.block.BlockMgr: com.hp.hpl.jena.tdb.base.block.Block promote(com.hp.hpl.jena.tdb.base.block.Block)>($r1);

        if $r4 == $r1 goto label1;

        virtualinvoke $r4.<com.hp.hpl.jena.tdb.base.block.Block: void setModified(boolean)>(1);

        interfaceinvoke r0.<com.hp.hpl.jena.tdb.base.page.Page: void reset(com.hp.hpl.jena.tdb.base.block.Block)>($r4);

     label1:
        return;
    }

    public boolean valid(int)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r1;
        int i0;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.block.BlockMgr: boolean valid(int)>(i0);

        return $z0;
    }

    public void dump()
    {
        java.io.PrintStream $r2;
        com.hp.hpl.jena.tdb.base.page.Page $r1;
        int i0;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        i0 = 0;

     label1:
        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: boolean valid(int)>(i0);

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.page.Page getRead(int)>(i0);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>($r1);

        virtualinvoke r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: void release(com.hp.hpl.jena.tdb.base.page.Page)>($r1);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void startUpdate()
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void beginUpdate()>();

        return;
    }

    public void finishUpdate()
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void endUpdate()>();

        return;
    }

    public void startRead()
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void beginRead()>();

        return;
    }

    public void finishRead()
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r1;
        com.hp.hpl.jena.tdb.base.page.PageBlockMgr r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.page.PageBlockMgr;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.page.PageBlockMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr blockMgr>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void endRead()>();

        return;
    }
}
