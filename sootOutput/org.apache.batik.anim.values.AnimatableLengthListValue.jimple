public class org.apache.batik.anim.values.AnimatableLengthListValue extends org.apache.batik.anim.values.AnimatableValue
{
    protected short[] lengthTypes;
    protected float[] lengthValues;
    protected short percentageInterpretation;

    protected void <init>(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        org.apache.batik.anim.values.AnimatableLengthListValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableLengthListValue;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        specialinvoke r0.<org.apache.batik.anim.values.AnimatableValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>(r1);

        return;
    }

    public void <init>(org.apache.batik.dom.anim.AnimationTarget, short[], float[], short)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        org.apache.batik.anim.values.AnimatableLengthListValue r0;
        short s0;
        float[] r3;
        short[] r2;

        r0 := @this: org.apache.batik.anim.values.AnimatableLengthListValue;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        r2 := @parameter1: short[];

        r3 := @parameter2: float[];

        s0 := @parameter3: short;

        specialinvoke r0.<org.apache.batik.anim.values.AnimatableValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>(r1);

        r0.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes> = r2;

        r0.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues> = r3;

        r0.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation> = s0;

        return;
    }

    public org.apache.batik.anim.values.AnimatableValue interpolate(org.apache.batik.anim.values.AnimatableValue, org.apache.batik.anim.values.AnimatableValue, float, org.apache.batik.anim.values.AnimatableValue, int)
    {
        byte $b2, $b16;
        float[] $r8, $r10, $r12, $r13, $r16, $r19, $r28, r34, $r37;
        short $s0, $s1, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s22, $s23, s25;
        org.apache.batik.anim.values.AnimatableLengthListValue r1, r3, r4, $r11, $r23, r35, $r38;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12;
        float $f0, f1, $f2, $f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11;
        short[] $r6, $r7, $r9, $r14, $r17, $r20, $r22, $r24, $r27, $r29, $r30, $r31, $r32, r33, $r36;
        org.apache.batik.anim.values.AnimatableValue r0, r2, r5;
        org.apache.batik.dom.anim.AnimationTarget $r15, $r18, $r21, $r26;
        int i3, $i15, $i17, $i18, $i19, $i20, $i21, i24, $i26, $i27, $i28, $i29;
        double $d0;

        r4 := @this: org.apache.batik.anim.values.AnimatableLengthListValue;

        r5 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        r0 := @parameter1: org.apache.batik.anim.values.AnimatableValue;

        f1 := @parameter2: float;

        r2 := @parameter3: org.apache.batik.anim.values.AnimatableValue;

        i3 := @parameter4: int;

        r1 = (org.apache.batik.anim.values.AnimatableLengthListValue) r0;

        r3 = (org.apache.batik.anim.values.AnimatableLengthListValue) r2;

        if r0 == null goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        if r2 == null goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        z1 = $z6;

        if z0 == 0 goto label05;

        $r31 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $i20 = lengthof $r31;

        $r32 = r4.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $i19 = lengthof $r32;

        if $i20 != $i19 goto label07;

     label05:
        if z1 == 0 goto label06;

        $r29 = r3.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $i18 = lengthof $r29;

        $r30 = r4.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $i17 = lengthof $r30;

        if $i18 != $i17 goto label07;

     label06:
        $z12 = 1;

        $z11 = 1;

        goto label08;

     label07:
        $z12 = 0;

        $z11 = 0;

     label08:
        z2 = $z11;

        if $z12 != 0 goto label09;

        if z0 == 0 goto label09;

        $d0 = (double) f1;

        $b16 = $d0 cmpl 0.5;

        $i26 = (int) $b16;

        if $i26 < 0 goto label09;

        r33 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        r34 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        goto label10;

     label09:
        r33 = r4.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        r34 = r4.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

     label10:
        $i21 = lengthof r33;

        if r5 != null goto label11;

        $r38 = new org.apache.batik.anim.values.AnimatableLengthListValue;

        $r26 = r4.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        specialinvoke $r38.<org.apache.batik.anim.values.AnimatableLengthListValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>($r26);

        r35 = $r38;

        $r27 = newarray (short)[$i21];

        $r38.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes> = $r27;

        $r28 = newarray (float)[$i21];

        $r38.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues> = $r28;

        goto label13;

     label11:
        r35 = (org.apache.batik.anim.values.AnimatableLengthListValue) r5;

        $r6 = r35.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        if $r6 == null goto label12;

        $r24 = r35.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $i15 = lengthof $r24;

        if $i15 == $i21 goto label13;

     label12:
        $r7 = newarray (short)[$i21];

        r35.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes> = $r7;

        $r8 = newarray (float)[$i21];

        r35.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues> = $r8;

     label13:
        $r23 = r35;

        $s22 = r4.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        $s23 = r35.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        $i27 = (int) $s22;

        $i28 = (int) $s23;

        if $i27 == $i28 goto label14;

        $z8 = 1;

        goto label15;

     label14:
        $z8 = 0;

     label15:
        $r23.<org.apache.batik.anim.values.AnimatableValue: boolean hasChanged> = $z8;

        $s0 = r4.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        r35.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation> = $s0;

        i24 = 0;

        goto label28;

     label16:
        f4 = 0.0F;

        f5 = 0.0F;

        s25 = r33[i24];

        f6 = r34[i24];

        if z2 == 0 goto label23;

        if z0 == 0 goto label17;

        $s14 = r4.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        $r22 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $s13 = $r22[i24];

        $s12 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        $z4 = staticinvoke <org.apache.batik.anim.values.AnimatableLengthValue: boolean compatibleTypes(short,short,short,short)>(s25, $s14, $s13, $s12);

        if $z4 == 0 goto label18;

     label17:
        if z1 == 0 goto label20;

        $s6 = r4.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        $r14 = r3.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $s5 = $r14[i24];

        $s4 = r3.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        $z3 = staticinvoke <org.apache.batik.anim.values.AnimatableLengthValue: boolean compatibleTypes(short,short,short,short)>(s25, $s6, $s5, $s4);

        if $z3 != 0 goto label20;

     label18:
        $r15 = r4.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        $s7 = r4.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        f6 = interfaceinvoke $r15.<org.apache.batik.dom.anim.AnimationTarget: float svgToUserSpace(float,short,short)>(f6, s25, $s7);

        s25 = 1;

        if z0 == 0 goto label19;

        $r21 = r0.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        $r19 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        $f3 = $r19[i24];

        $r20 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $s11 = $r20[i24];

        $s10 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        f4 = interfaceinvoke $r21.<org.apache.batik.dom.anim.AnimationTarget: float svgToUserSpace(float,short,short)>($f3, $s11, $s10);

     label19:
        if z1 == 0 goto label22;

        $r18 = r2.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        $r16 = r3.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        $f2 = $r16[i24];

        $r17 = r3.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $s9 = $r17[i24];

        $s8 = r3.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        f5 = interfaceinvoke $r18.<org.apache.batik.dom.anim.AnimationTarget: float svgToUserSpace(float,short,short)>($f2, $s9, $s8);

        goto label22;

     label20:
        if z0 == 0 goto label21;

        $r13 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        f4 = $r13[i24];

     label21:
        if z1 == 0 goto label22;

        $r12 = r3.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        f5 = $r12[i24];

     label22:
        $f7 = f4 - f6;

        $f8 = f1 * $f7;

        $f9 = (float) i3;

        $f10 = $f9 * f5;

        $f11 = $f8 + $f10;

        f6 = f6 + $f11;

     label23:
        $z9 = r35.<org.apache.batik.anim.values.AnimatableValue: boolean hasChanged>;

        if $z9 != 0 goto label27;

        $r11 = r35;

        $r9 = r35.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $s1 = $r9[i24];

        $i29 = (int) $s1;

        if s25 != $i29 goto label24;

        $r10 = r35.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        $f0 = $r10[i24];

        $b2 = f6 cmpl $f0;

        if $b2 == 0 goto label25;

     label24:
        $z10 = 1;

        goto label26;

     label25:
        $z10 = 0;

     label26:
        $r11.<org.apache.batik.anim.values.AnimatableValue: boolean hasChanged> = $z10;

     label27:
        $r36 = r35.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $r36[i24] = s25;

        $r37 = r35.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        $r37[i24] = f6;

        i24 = i24 + 1;

     label28:
        if i24 < $i21 goto label16;

        return r35;
    }

    public short[] getLengthTypes()
    {
        org.apache.batik.anim.values.AnimatableLengthListValue r0;
        short[] $r1;

        r0 := @this: org.apache.batik.anim.values.AnimatableLengthListValue;

        $r1 = r0.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        return $r1;
    }

    public float[] getLengthValues()
    {
        org.apache.batik.anim.values.AnimatableLengthListValue r0;
        float[] $r1;

        r0 := @this: org.apache.batik.anim.values.AnimatableLengthListValue;

        $r1 = r0.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        return $r1;
    }

    public boolean canPace()
    {
        org.apache.batik.anim.values.AnimatableLengthListValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableLengthListValue;

        return 0;
    }

    public float distanceTo(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.anim.values.AnimatableLengthListValue r0;
        org.apache.batik.anim.values.AnimatableValue r1;

        r0 := @this: org.apache.batik.anim.values.AnimatableLengthListValue;

        r1 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        return 0.0F;
    }

    public org.apache.batik.anim.values.AnimatableValue getZeroValue()
    {
        org.apache.batik.dom.anim.AnimationTarget $r5;
        org.apache.batik.anim.values.AnimatableLengthListValue r0, $r3;
        float[] $r1, r2;
        short $s1;
        int $i0;
        short[] $r4;

        r0 := @this: org.apache.batik.anim.values.AnimatableLengthListValue;

        $r1 = r0.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        $i0 = lengthof $r1;

        r2 = newarray (float)[$i0];

        $r3 = new org.apache.batik.anim.values.AnimatableLengthListValue;

        $r5 = r0.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        $r4 = r0.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $s1 = r0.<org.apache.batik.anim.values.AnimatableLengthListValue: short percentageInterpretation>;

        specialinvoke $r3.<org.apache.batik.anim.values.AnimatableLengthListValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,short[],float[],short)>($r5, $r4, r2, $s1);

        return $r3;
    }

    public java.lang.String getCssText()
    {
        float[] $r2, $r3, $r4, $r10;
        java.lang.String[] $r7, $r13;
        short $s2, $s4;
        java.lang.StringBuffer $r15;
        int $i0, $i1, $i3, $i5, i6, $i7, $i8;
        java.lang.String $r5, $r8, $r9, $r11, $r14;
        org.apache.batik.anim.values.AnimatableLengthListValue r1;
        float $f0, $f1;
        short[] $r6, $r12;

        r1 := @this: org.apache.batik.anim.values.AnimatableLengthListValue;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $r10 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        $f1 = $r10[0];

        $r11 = staticinvoke <org.apache.batik.anim.values.AnimatableValue: java.lang.String formatNumber(float)>($f1);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = <org.apache.batik.anim.values.AnimatableLengthValue: java.lang.String[] UNITS>;

        $r12 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $s4 = $r12[0];

        $i7 = (int) $s4;

        $i5 = $i7 - 1;

        $r14 = $r13[$i5];

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

     label1:
        i6 = 1;

        goto label3;

     label2:
        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r4 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        $f0 = $r4[i6];

        $r5 = staticinvoke <org.apache.batik.anim.values.AnimatableValue: java.lang.String formatNumber(float)>($f0);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = <org.apache.batik.anim.values.AnimatableLengthValue: java.lang.String[] UNITS>;

        $r6 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: short[] lengthTypes>;

        $s2 = $r6[i6];

        $i8 = (int) $s2;

        $i3 = $i8 - 1;

        $r8 = $r7[$i3];

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        i6 = i6 + 1;

     label3:
        $r3 = r1.<org.apache.batik.anim.values.AnimatableLengthListValue: float[] lengthValues>;

        $i1 = lengthof $r3;

        if i6 < $i1 goto label2;

        $r9 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
