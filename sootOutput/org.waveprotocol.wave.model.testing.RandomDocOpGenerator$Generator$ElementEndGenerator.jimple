class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator extends org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator
{
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomConstantOperationComponentGenerator: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)>(r1);

        return;
    }

    org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, boolean, org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator r3;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent $r4, $r5;
        java.lang.RuntimeException $r6;
        int[] $r1;
        int $i0, $i1, $i2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage r0;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        boolean z0;

        r3 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        z0 := @parameter1: boolean;

        r0 := @parameter2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage;

        $r1 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$testing$RandomDocOpGenerator$Generator$Stage>;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r5 = virtualinvoke r3.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton,boolean)>(r2, z0);

        return $r5;

     label2:
        $i2 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: int insertionStackComplexityMeasure()>();

        if $i2 != 0 goto label3;

        return null;

     label3:
        $r4 = virtualinvoke r3.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton,boolean)>(r2, z0);

        return $r4;

     label4:
        return null;

     label5:
        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected stage: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult check(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r2;

        r3 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkElementEnd(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r1);

        return $r2;
    }

    void apply(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator r1;

        r1 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doElementEnd()>();

        return;
    }

    void output(org.waveprotocol.wave.model.document.operation.DocOpCursor)
    {
        org.waveprotocol.wave.model.document.operation.DocOpCursor r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator r1;

        r1 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementEndGenerator;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOpCursor;

        interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void elementEnd()>();

        return;
    }
}
