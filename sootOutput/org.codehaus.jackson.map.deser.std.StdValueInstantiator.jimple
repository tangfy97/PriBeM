public class org.codehaus.jackson.map.deser.std.StdValueInstantiator extends org.codehaus.jackson.map.deser.ValueInstantiator
{
    protected final java.lang.String _valueTypeDesc;
    protected final boolean _cfgEmptyStringsAsObjects;
    protected org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator;
    protected org.codehaus.jackson.map.deser.impl.CreatorProperty[] _constructorArguments;
    protected org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator;
    protected org.codehaus.jackson.type.JavaType _delegateType;
    protected org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator;
    protected org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator;
    protected org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator;
    protected org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator;
    protected org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator;
    protected org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator;

    public void <init>(org.codehaus.jackson.map.DeserializationConfig, java.lang.Class)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r2;
        java.lang.Class r3;
        java.lang.String $r4;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r3 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: void <init>()>();

        if r1 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $r2 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT>;

        $z0 = virtualinvoke r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r2);

     label2:
        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: boolean _cfgEmptyStringsAsObjects> = $z0;

        if r3 != null goto label3;

        $r4 = "UNKNOWN TYPE";

        goto label4;

     label3:
        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

     label4:
        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String _valueTypeDesc> = $r4;

        return;
    }

    public void <init>(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r2;
        org.codehaus.jackson.type.JavaType r3;
        java.lang.String $r4;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r3 := @parameter1: org.codehaus.jackson.type.JavaType;

        specialinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: void <init>()>();

        if r1 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $r2 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT>;

        $z0 = virtualinvoke r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r2);

     label2:
        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: boolean _cfgEmptyStringsAsObjects> = $z0;

        if r3 != null goto label3;

        $r4 = "UNKNOWN TYPE";

        goto label4;

     label3:
        $r4 = virtualinvoke r3.<org.codehaus.jackson.type.JavaType: java.lang.String toString()>();

     label4:
        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String _valueTypeDesc> = $r4;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.deser.std.StdValueInstantiator)
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        org.codehaus.jackson.map.deser.impl.CreatorProperty[] $r4;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.String $r2;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0, r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r1 := @parameter0: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        specialinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: void <init>()>();

        $z0 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: boolean _cfgEmptyStringsAsObjects>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: boolean _cfgEmptyStringsAsObjects> = $z0;

        $r2 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String _valueTypeDesc>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String _valueTypeDesc> = $r2;

        $r3 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator> = $r3;

        $r4 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.deser.impl.CreatorProperty[] _constructorArguments>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.deser.impl.CreatorProperty[] _constructorArguments> = $r4;

        $r5 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator> = $r5;

        $r6 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.type.JavaType _delegateType>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.type.JavaType _delegateType> = $r6;

        $r7 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator> = $r7;

        $r8 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator> = $r8;

        $r9 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator> = $r9;

        $r10 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator> = $r10;

        $r11 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator> = $r11;

        $r12 = r1.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator>;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator> = $r12;

        return;
    }

    public void configureFromObjectSettings(org.codehaus.jackson.map.introspect.AnnotatedWithParams, org.codehaus.jackson.map.introspect.AnnotatedWithParams, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.introspect.AnnotatedWithParams, org.codehaus.jackson.map.deser.impl.CreatorProperty[])
    {
        org.codehaus.jackson.type.JavaType r3;
        org.codehaus.jackson.map.deser.impl.CreatorProperty[] r5;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r1, r2, r4;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r3 := @parameter2: org.codehaus.jackson.type.JavaType;

        r4 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r5 := @parameter4: org.codehaus.jackson.map.deser.impl.CreatorProperty[];

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator> = r1;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator> = r2;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.type.JavaType _delegateType> = r3;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator> = r4;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.deser.impl.CreatorProperty[] _constructorArguments> = r5;

        return;
    }

    public void configureFromStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator> = r1;

        return;
    }

    public void configureFromIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator> = r1;

        return;
    }

    public void configureFromLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator> = r1;

        return;
    }

    public void configureFromDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator> = r1;

        return;
    }

    public void configureFromBooleanCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator> = r1;

        return;
    }

    public java.lang.String getValueTypeDesc()
    {
        java.lang.String $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String _valueTypeDesc>;

        return $r1;
    }

    public boolean canCreateFromString()
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canCreateFromInt()
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canCreateFromLong()
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canCreateFromDouble()
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canCreateFromBoolean()
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canCreateUsingDefault()
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canCreateFromObjectWith()
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.codehaus.jackson.type.JavaType getDelegateType()
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.type.JavaType _delegateType>;

        return $r1;
    }

    public org.codehaus.jackson.map.deser.SettableBeanProperty[] getFromObjectArguments()
    {
        org.codehaus.jackson.map.deser.impl.CreatorProperty[] $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.deser.impl.CreatorProperty[] _constructorArguments>;

        return $r1;
    }

    public java.lang.Object createUsingDefault() throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.IllegalStateException $r4;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1, $r2;
        java.lang.Exception $r10;
        org.codehaus.jackson.map.JsonMappingException $r11, $r13;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        java.lang.ExceptionInInitializerError $r12;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No default constructor for ");

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.Object call()>();

     label2:
        return $r3;

     label3:
        $r12 := @caughtexception;

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r12);

        throw $r13;

     label4:
        $r10 := @caughtexception;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r10);

        throw $r11;

        catch java.lang.ExceptionInInitializerError from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.lang.Object createFromObjectWith(java.lang.Object[]) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.IllegalStateException $r5;
        java.lang.Object[] r2;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1, $r3;
        java.lang.Exception $r11;
        org.codehaus.jackson.map.JsonMappingException $r12, $r14;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        java.lang.ExceptionInInitializerError $r13;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r2 := @parameter0: java.lang.Object[];

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No with-args constructor for ");

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.Object call(java.lang.Object[])>(r2);

     label2:
        return $r4;

     label3:
        $r13 := @caughtexception;

        $r14 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r13);

        throw $r14;

     label4:
        $r11 := @caughtexception;

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r11);

        throw $r12;

        catch java.lang.ExceptionInInitializerError from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.lang.Object createUsingDelegate(java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.IllegalStateException $r5;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1, $r3;
        java.lang.Exception $r11;
        org.codehaus.jackson.map.JsonMappingException $r12, $r14;
        java.lang.Object r2, $r4;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        java.lang.ExceptionInInitializerError $r13;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No delegate constructor for ");

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.Object call1(java.lang.Object)>(r2);

     label2:
        return $r4;

     label3:
        $r13 := @caughtexception;

        $r14 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r13);

        throw $r14;

     label4:
        $r11 := @caughtexception;

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r11);

        throw $r12;

        catch java.lang.ExceptionInInitializerError from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.lang.Object createFromString(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1, $r4;
        java.lang.Exception $r6;
        org.codehaus.jackson.map.JsonMappingException $r7;
        java.lang.Object $r3, $r5;
        java.lang.String r2;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator>;

        if $r1 == null goto label4;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.Object call1(java.lang.Object)>(r2);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.Object _createFromStringFallbacks(java.lang.String)>(r2);

        return $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.Object createFromInt(int) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        long $l1;
        java.lang.Integer $r14;
        org.codehaus.jackson.map.JsonMappingException $r3, $r17;
        java.lang.Long $r11;
        int i0;
        java.lang.String $r6, $r9;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1, $r2, $r10, $r13;
        java.lang.Exception $r16;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        java.lang.Object $r12, $r15;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator>;

        if $r1 == null goto label3;

        $r13 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r15 = virtualinvoke $r13.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.Object call1(java.lang.Object)>($r14);

     label2:
        return $r15;

     label3:
        $r2 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator>;

        if $r2 == null goto label5;

        $r10 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator>;

        $l1 = (long) i0;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r12 = virtualinvoke $r10.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.Object call1(java.lang.Object)>($r11);

     label4:
        return $r12;

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;

        $r17 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r16);

        throw $r17;

     label7:
        $r3 = new org.codehaus.jackson.map.JsonMappingException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from JSON integral number; no single-int-arg constructor/factory method");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r9);

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public java.lang.Object createFromLong(long) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        long l0;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1, $r9;
        java.lang.Exception $r12;
        org.codehaus.jackson.map.JsonMappingException $r2, $r13;
        java.lang.Long $r10;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.Object $r11;
        java.lang.String $r5, $r8;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        l0 := @parameter0: long;

     label1:
        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator>;

        if $r1 == null goto label3;

        $r9 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r11 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.Object call1(java.lang.Object)>($r10);

     label2:
        return $r11;

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r12);

        throw $r13;

     label5:
        $r2 = new org.codehaus.jackson.map.JsonMappingException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from JSON long integral number; no single-long-arg constructor/factory method");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r8);

        throw $r2;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.lang.Object createFromDouble(double) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Double $r10;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1, $r9;
        java.lang.Exception $r12;
        org.codehaus.jackson.map.JsonMappingException $r2, $r13;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.Object $r11;
        java.lang.String $r5, $r8;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        double d0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        d0 := @parameter0: double;

     label1:
        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator>;

        if $r1 == null goto label3;

        $r9 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator>;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r11 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.Object call1(java.lang.Object)>($r10);

     label2:
        return $r11;

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r12);

        throw $r13;

     label5:
        $r2 = new org.codehaus.jackson.map.JsonMappingException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from JSON floating-point number; no one-double/Double-arg constructor/factory method");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r8);

        throw $r2;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.lang.Object createFromBoolean(boolean) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1, $r9;
        java.lang.Exception $r12;
        org.codehaus.jackson.map.JsonMappingException $r2, $r13;
        java.lang.Boolean $r10;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.Object $r11;
        java.lang.String $r5, $r8;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        z0 := @parameter0: boolean;

     label1:
        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator>;

        if $r1 == null goto label3;

        $r9 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator>;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r11 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.Object call1(java.lang.Object)>($r10);

     label2:
        return $r11;

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>($r12);

        throw $r13;

     label5:
        $r2 = new org.codehaus.jackson.map.JsonMappingException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from JSON boolean value; no single-boolean/Boolean-arg constructor/factory method");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r8);

        throw $r2;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator()
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator>;

        return $r1;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator()
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator>;

        return $r1;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedWithParams getWithArgsCreator()
    {
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator>;

        return $r1;
    }

    protected java.lang.Object _createFromStringFallbacks(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.JsonMappingException $r2;
        int $i0;
        java.lang.String $r5, $r8, r9, $r10, $r11, $r12;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r0;
        boolean $z0, $z1, $z2;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.Object $r13, $r14;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r9 := @parameter0: java.lang.String;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator>;

        if $r1 == null goto label2;

        $r10 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>();

        $r11 = "true";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label1;

        $r14 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.Object createFromBoolean(boolean)>(1);

        return $r14;

     label1:
        $r12 = "false";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label2;

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.Object createFromBoolean(boolean)>(0);

        return $r13;

     label2:
        $z0 = r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: boolean _cfgEmptyStringsAsObjects>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        return null;

     label3:
        $r2 = new org.codehaus.jackson.map.JsonMappingException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from JSON String; no single-String constructor/factory method");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r8);

        throw $r2;
    }

    protected org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)
    {
        java.lang.Throwable $r0, r11;
        org.codehaus.jackson.map.JsonMappingException $r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r9;
        java.lang.String $r5, $r8, $r10;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator r4;

        r4 := @this: org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        r11 := @parameter0: java.lang.Throwable;

     label1:
        $r0 = virtualinvoke r11.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r0 == null goto label2;

        r11 = virtualinvoke r11.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        $r1 = new org.codehaus.jackson.map.JsonMappingException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instantiation of ");

        $r5 = virtualinvoke r4.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value failed: ");

        $r8 = virtualinvoke r11.<java.lang.Throwable: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r11);

        return $r1;
    }
}
