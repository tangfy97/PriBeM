public abstract class org.apache.xml.serializer.ToStream extends org.apache.xml.serializer.SerializerBase
{
    private static final java.lang.String COMMENT_BEGIN;
    private static final java.lang.String COMMENT_END;
    protected org.apache.xml.utils.BoolStack m_disableOutputEscapingStates;
    boolean m_triedToGetConverter;
    java.lang.reflect.Method m_canConvertMeth;
    java.lang.Object m_charToByteConverter;
    protected org.apache.xml.utils.BoolStack m_preserves;
    protected boolean m_ispreserve;
    protected boolean m_isprevtext;
    protected int m_maxCharacter;
    protected final char[] m_lineSep;
    protected boolean m_lineSepUse;
    protected final int m_lineSepLen;
    protected org.apache.xml.serializer.CharInfo m_charInfo;
    boolean m_shouldFlush;
    protected boolean m_spaceBeforeClose;
    boolean m_startNewLine;
    protected boolean m_inDoctype;
    boolean m_isUTF8;
    protected java.util.Properties m_format;
    protected boolean m_cdataStartCalled;
    private boolean m_escaping;

    public void <init>()
    {
        org.apache.xml.serializer.ToStream r0;
        int $i0, $i1;
        char[] $r4, $r5;
        java.lang.String $r3;
        org.apache.xml.utils.BoolStack $r1, $r2;

        r0 := @this: org.apache.xml.serializer.ToStream;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void <init>()>();

        $r1 = new org.apache.xml.utils.BoolStack;

        specialinvoke $r1.<org.apache.xml.utils.BoolStack: void <init>()>();

        r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_disableOutputEscapingStates> = $r1;

        r0.<org.apache.xml.serializer.ToStream: boolean m_triedToGetConverter> = 0;

        r0.<org.apache.xml.serializer.ToStream: java.lang.Object m_charToByteConverter> = null;

        $r2 = new org.apache.xml.utils.BoolStack;

        specialinvoke $r2.<org.apache.xml.utils.BoolStack: void <init>()>();

        r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves> = $r2;

        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext> = 0;

        $i0 = staticinvoke <org.apache.xml.serializer.Encodings: int getLastPrintable()>();

        r0.<org.apache.xml.serializer.ToStream: int m_maxCharacter> = $i0;

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep> = $r4;

        r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse> = 1;

        $r5 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i1 = lengthof $r5;

        r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen> = $i1;

        r0.<org.apache.xml.serializer.ToStream: boolean m_shouldFlush> = 1;

        r0.<org.apache.xml.serializer.ToStream: boolean m_spaceBeforeClose> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_inDoctype> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_isUTF8> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_cdataStartCalled> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_escaping> = 1;

        return;
    }

    protected void closeCDATA() throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r3;
        java.io.Writer $r1;
        java.io.IOException $r2;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

     label1:
        $r1 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("]]>");

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen> = 0;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void serialize(org.w3c.dom.Node) throws java.io.IOException
    {
        org.apache.xml.utils.WrappedRuntimeException $r5;
        org.w3c.dom.Node r3;
        org.xml.sax.SAXException $r4;
        org.apache.xml.utils.DOM2Helper $r2;
        org.apache.xml.serializer.ToStream r1;
        org.apache.xml.utils.TreeWalker $r0;

        r1 := @this: org.apache.xml.serializer.ToStream;

        r3 := @parameter0: org.w3c.dom.Node;

     label1:
        $r0 = new org.apache.xml.utils.TreeWalker;

        $r2 = new org.apache.xml.utils.DOM2Helper;

        specialinvoke $r2.<org.apache.xml.utils.DOM2Helper: void <init>()>();

        specialinvoke $r0.<org.apache.xml.utils.TreeWalker: void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper)>(r1, $r2);

        virtualinvoke $r0.<org.apache.xml.utils.TreeWalker: void traverse(org.w3c.dom.Node)>(r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r5.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    static final boolean isUTF16Surrogate(char)
    {
        int $i2, $i4;
        char c0, $c1;
        boolean $z0;

        c0 := @parameter0: char;

        $c1 = c0 & 64512;

        $i2 = (int) $c1;

        $i4 = (int) 55296;

        if $i2 != $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected final void flushWriter() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered $r2, $r3;
        java.io.IOException $r4;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r5;
        java.io.Writer r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        if null == r1 goto label7;

     label1:
        $z0 = r1 instanceof org.apache.xml.serializer.WriterToUTF8Buffered;

        if $z0 == 0 goto label3;

        $z2 = r0.<org.apache.xml.serializer.ToStream: boolean m_shouldFlush>;

        if $z2 == 0 goto label2;

        $r3 = (org.apache.xml.serializer.WriterToUTF8Buffered) r1;

        virtualinvoke $r3.<org.apache.xml.serializer.WriterToUTF8Buffered: void flush()>();

        goto label3;

     label2:
        $r2 = (org.apache.xml.serializer.WriterToUTF8Buffered) r1;

        virtualinvoke $r2.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

     label3:
        $z3 = r1 instanceof org.apache.xml.serializer.WriterToASCI;

        if $z3 == 0 goto label4;

        $z1 = r0.<org.apache.xml.serializer.ToStream: boolean m_shouldFlush>;

        if $z1 == 0 goto label5;

        virtualinvoke r1.<java.io.Writer: void flush()>();

        goto label5;

     label4:
        virtualinvoke r1.<java.io.Writer: void flush()>();

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    public java.io.OutputStream getOutputStream()
    {
        java.io.OutputStream $r5, $r8;
        org.apache.xml.serializer.WriterToUTF8Buffered $r7;
        org.apache.xml.serializer.ToStream r0;
        java.io.Writer $r1, $r2, $r3, $r6;
        org.apache.xml.serializer.WriterToASCI $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $z0 = $r1 instanceof org.apache.xml.serializer.WriterToUTF8Buffered;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $r7 = (org.apache.xml.serializer.WriterToUTF8Buffered) $r6;

        $r8 = virtualinvoke $r7.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream getOutputStream()>();

        return $r8;

     label1:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $z1 = $r2 instanceof org.apache.xml.serializer.WriterToASCI;

        if $z1 == 0 goto label2;

        $r3 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $r4 = (org.apache.xml.serializer.WriterToASCI) $r3;

        $r5 = virtualinvoke $r4.<org.apache.xml.serializer.WriterToASCI: java.io.OutputStream getOutputStream()>();

        return $r5;

     label2:
        return null;
    }

    public void elementDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r5;
        java.io.IOException $r7;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r8;
        int $i0, $i1;
        java.io.Writer r9;
        char[] $r3, $r4;
        java.lang.String r1, r2, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_inExternalDTD>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r9 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $z1 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl>;

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r6 = $r5.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputDocTypeDecl(java.lang.String,boolean)>($r6, 0);

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl> = 0;

     label2:
        $z2 = r0.<org.apache.xml.serializer.ToStream: boolean m_inDoctype>;

        if $z2 == 0 goto label3;

        virtualinvoke r9.<java.io.Writer: void write(java.lang.String)>(" [");

        $r4 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i1 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke r9.<java.io.Writer: void write(char[],int,int)>($r4, 0, $i1);

        r0.<org.apache.xml.serializer.ToStream: boolean m_inDoctype> = 0;

     label3:
        virtualinvoke r9.<java.io.Writer: void write(java.lang.String)>("<!ELEMENT ");

        virtualinvoke r9.<java.io.Writer: void write(java.lang.String)>(r1);

        virtualinvoke r9.<java.io.Writer: void write(int)>(32);

        virtualinvoke r9.<java.io.Writer: void write(java.lang.String)>(r2);

        virtualinvoke r9.<java.io.Writer: void write(int)>(62);

        $r3 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i0 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke r9.<java.io.Writer: void write(char[],int,int)>($r3, 0, $i0);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public void internalEntityDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r4;
        java.io.IOException $r6;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r7;
        int $i0;
        java.io.Writer r8;
        char[] $r3;
        java.lang.String r1, r2, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_inExternalDTD>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl>;

        if $z1 == 0 goto label2;

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r5 = $r4.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputDocTypeDecl(java.lang.String,boolean)>($r5, 0);

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl> = 0;

     label2:
        $z2 = r0.<org.apache.xml.serializer.ToStream: boolean m_inDoctype>;

        if $z2 == 0 goto label3;

        r8 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke r8.<java.io.Writer: void write(java.lang.String)>(" [");

        $r3 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i0 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke r8.<java.io.Writer: void write(char[],int,int)>($r3, 0, $i0);

        r0.<org.apache.xml.serializer.ToStream: boolean m_inDoctype> = 0;

     label3:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputEntityDecl(java.lang.String,java.lang.String)>(r1, r2);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = new org.xml.sax.SAXException;

        specialinvoke $r7.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    void outputEntityDecl(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r1;
        int $i0;
        char[] $r4;
        java.lang.String r2, r3;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r1 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("<!ENTITY ");

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(" \"");

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(r3);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("\">");

        $r4 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i0 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r4, 0, $i0);

        return;
    }

    protected final void outputLineSep() throws java.io.IOException
    {
        int $i0;
        java.io.Writer $r2;
        char[] $r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $r2 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $r1 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i0 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>($r1, 0, $i0);

        return;
    }

    public void setOutputFormat(java.util.Properties)
    {
        java.util.Properties r1;
        java.io.Writer $r2;
        org.apache.xml.serializer.ToStream r0;
        boolean z0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.util.Properties;

        z0 = r0.<org.apache.xml.serializer.ToStream: boolean m_shouldFlush>;

        $r2 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void init(java.io.Writer,java.util.Properties,boolean,boolean)>($r2, r1, 0, 0);

        r0.<org.apache.xml.serializer.ToStream: boolean m_shouldFlush> = z0;

        return;
    }

    private synchronized void init(java.io.Writer, java.util.Properties, boolean, boolean)
    {
        org.apache.xml.serializer.SerializerTraceWriter $r12;
        org.apache.xml.serializer.CharInfo $r7;
        int $i0, $i1;
        java.lang.String r6, $r8, $r9, $r10, $r11, $r14, $r15, $r17, $r18, r19;
        boolean z0, $z1, $z2, z3, $z4, $z5, $z6;
        java.util.Properties r3;
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.serializer.SerializerTrace $r1, $r13;
        java.io.Writer r2;
        java.lang.Object $r4, $r5, $r16;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: java.io.Writer;

        r3 := @parameter1: java.util.Properties;

        z3 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        r0.<org.apache.xml.serializer.ToStream: boolean m_shouldFlush> = z0;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label1;

        $z4 = r2 instanceof org.apache.xml.serializer.SerializerTraceWriter;

        if $z4 != 0 goto label1;

        $r12 = new org.apache.xml.serializer.SerializerTraceWriter;

        $r13 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        specialinvoke $r12.<org.apache.xml.serializer.SerializerTraceWriter: void <init>(java.io.Writer,org.apache.xml.serializer.SerializerTrace)>(r2, $r13);

        r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer> = $r12;

        goto label2;

     label1:
        r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer> = r2;

     label2:
        r0.<org.apache.xml.serializer.ToStream: java.util.Properties m_format> = r3;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void setCdataSectionElements(java.lang.String,java.util.Properties)>("cdata-section-elements", r3);

        $i1 = staticinvoke <org.apache.xml.serializer.OutputPropertyUtils: int getIntProperty(java.lang.String,java.util.Properties)>("{http://xml.apache.org/xalan}indent-amount", r3);

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void setIndentAmount(int)>($i1);

        $z5 = staticinvoke <org.apache.xml.serializer.OutputPropertyUtils: boolean getBooleanProperty(java.lang.String,java.util.Properties)>("indent", r3);

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setIndent(boolean)>($z5);

        $z6 = staticinvoke <org.apache.xml.serializer.OutputPropertyUtils: boolean getBooleanProperty(java.lang.String,java.util.Properties)>("omit-xml-declaration", r3);

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setOmitXMLDeclaration(boolean)>($z6);

        $r14 = virtualinvoke r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("doctype-system");

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setDoctypeSystem(java.lang.String)>($r14);

        $r15 = virtualinvoke r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("doctype-public");

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setDoctypePublic(java.lang.String)>($r15);

        $r16 = virtualinvoke r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("standalone");

        if $r16 == null goto label4;

        $r11 = virtualinvoke r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("standalone");

        if z3 == 0 goto label3;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setStandaloneInternal(java.lang.String)>($r11);

        goto label4;

     label3:
        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setStandalone(java.lang.String)>($r11);

     label4:
        $r17 = virtualinvoke r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("media-type");

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setMediaType(java.lang.String)>($r17);

        if null == $r15 goto label5;

        $z2 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("-//W3C//DTD XHTML");

        if $z2 == 0 goto label5;

        r0.<org.apache.xml.serializer.ToStream: boolean m_spaceBeforeClose> = 1;

     label5:
        $r18 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        r19 = $r18;

        if null != $r18 goto label6;

        $r8 = virtualinvoke r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("encoding");

        $r9 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.String getMimeEncoding(java.lang.String)>($r8);

        r19 = $r9;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setEncoding(java.lang.String)>($r9);

     label6:
        $z1 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        r0.<org.apache.xml.serializer.ToStream: boolean m_isUTF8> = $z1;

        $i0 = staticinvoke <org.apache.xml.serializer.Encodings: int getLastPrintable(java.lang.String)>(r19);

        r0.<org.apache.xml.serializer.ToStream: int m_maxCharacter> = $i0;

        $r4 = virtualinvoke r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("{http://xml.apache.org/xalan}entities");

        $r10 = (java.lang.String) $r4;

        if null == $r10 goto label7;

        $r5 = virtualinvoke r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("method");

        r6 = (java.lang.String) $r5;

        $r7 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String,java.lang.String)>($r10, r6);

        r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo> = $r7;

     label7:
        return;
    }

    private synchronized void init(java.io.Writer, java.util.Properties)
    {
        java.io.Writer r1;
        java.util.Properties r2;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: java.util.Properties;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void init(java.io.Writer,java.util.Properties,boolean,boolean)>(r1, r2, 0, 0);

        return;
    }

    protected synchronized void init(java.io.OutputStream, java.util.Properties, boolean) throws java.io.UnsupportedEncodingException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered $r4;
        java.lang.StringBuffer $r8, $r10, $r11, $r12, $r13, $r14;
        int $i0;
        java.lang.String $r1, $r5, $r6, $r15, r16;
        boolean $z0, $z1, z2, $z3, $z4;
        java.io.OutputStream r2;
        java.io.PrintStream $r9;
        java.util.Properties r3;
        org.apache.xml.serializer.ToStream r0;
        java.io.Writer r18;
        org.apache.xml.serializer.WriterToASCI $r17;
        java.io.UnsupportedEncodingException $r7;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: java.util.Properties;

        z2 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        r16 = $r1;

        if $r1 != null goto label1;

        $r5 = virtualinvoke r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("encoding");

        $r6 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.String getMimeEncoding(java.lang.String)>($r5);

        r16 = $r6;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setEncoding(java.lang.String)>($r6);

     label1:
        $z0 = virtualinvoke r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("UTF-8");

        if $z0 == 0 goto label2;

        r0.<org.apache.xml.serializer.ToStream: boolean m_isUTF8> = 1;

        $r4 = new org.apache.xml.serializer.WriterToUTF8Buffered;

        specialinvoke $r4.<org.apache.xml.serializer.WriterToUTF8Buffered: void <init>(java.io.OutputStream)>(r2);

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void init(java.io.Writer,java.util.Properties,boolean,boolean)>($r4, r3, z2, 1);

        goto label8;

     label2:
        $z1 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("WINDOWS-1250");

        if $z1 != 0 goto label3;

        $z3 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("US-ASCII");

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("ASCII");

        if $z4 == 0 goto label4;

     label3:
        $r17 = new org.apache.xml.serializer.WriterToASCI;

        specialinvoke $r17.<org.apache.xml.serializer.WriterToASCI: void <init>(java.io.OutputStream)>(r2);

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void init(java.io.Writer,java.util.Properties,boolean,boolean)>($r17, r3, z2, 1);

        goto label8;

     label4:
        r18 = staticinvoke <org.apache.xml.serializer.Encodings: java.io.Writer getWriter(java.io.OutputStream,java.lang.String)>(r2, r16);

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Warning: encoding \"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" not supported");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", using ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("UTF-8");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r15);

        r16 = "UTF-8";

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setEncoding(java.lang.String)>("UTF-8");

        r18 = staticinvoke <org.apache.xml.serializer.Encodings: java.io.Writer getWriter(java.io.OutputStream,java.lang.String)>(r2, "UTF-8");

     label7:
        $i0 = staticinvoke <org.apache.xml.serializer.Encodings: int getLastPrintable(java.lang.String)>(r16);

        r0.<org.apache.xml.serializer.ToStream: int m_maxCharacter> = $i0;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void init(java.io.Writer,java.util.Properties,boolean,boolean)>(r18, r3, z2, 1);

     label8:
        return;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
    }

    public java.util.Properties getOutputFormat()
    {
        java.util.Properties $r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $r1 = r0.<org.apache.xml.serializer.ToStream: java.util.Properties m_format>;

        return $r1;
    }

    public void setWriter(java.io.Writer)
    {
        org.apache.xml.serializer.SerializerTraceWriter $r3;
        org.apache.xml.serializer.SerializerTrace $r1, $r4;
        java.io.Writer r2;
        org.apache.xml.serializer.ToStream r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: java.io.Writer;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label1;

        $z0 = r2 instanceof org.apache.xml.serializer.SerializerTraceWriter;

        if $z0 != 0 goto label1;

        $r3 = new org.apache.xml.serializer.SerializerTraceWriter;

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        specialinvoke $r3.<org.apache.xml.serializer.SerializerTraceWriter: void <init>(java.io.Writer,org.apache.xml.serializer.SerializerTrace)>(r2, $r4);

        r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer> = $r3;

        goto label2;

     label1:
        r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer> = r2;

     label2:
        return;
    }

    public boolean setLineSepUse(boolean)
    {
        org.apache.xml.serializer.ToStream r0;
        boolean z0, z1;

        r0 := @this: org.apache.xml.serializer.ToStream;

        z1 := @parameter0: boolean;

        z0 = r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse>;

        r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse> = z1;

        return z0;
    }

    public void setOutputStream(java.io.OutputStream)
    {
        java.io.OutputStream r2;
        java.util.Properties $r1, r4;
        org.apache.xml.serializer.ToStream r0;
        java.io.UnsupportedEncodingException $r3;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: java.io.OutputStream;

     label1:
        $r1 = r0.<org.apache.xml.serializer.ToStream: java.util.Properties m_format>;

        if null != $r1 goto label2;

        r4 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties getDefaultMethodProperties(java.lang.String)>("xml");

        goto label3;

     label2:
        r4 = r0.<org.apache.xml.serializer.ToStream: java.util.Properties m_format>;

     label3:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void init(java.io.OutputStream,java.util.Properties,boolean)>(r2, r4, 1);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

     label6:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label4 with label5;
    }

    public boolean setEscaping(boolean)
    {
        org.apache.xml.serializer.ToStream r0;
        boolean z0, z1;

        r0 := @this: org.apache.xml.serializer.ToStream;

        z1 := @parameter0: boolean;

        z0 = r0.<org.apache.xml.serializer.ToStream: boolean m_escaping>;

        r0.<org.apache.xml.serializer.ToStream: boolean m_escaping> = z1;

        return z0;
    }

    protected void indent(int) throws java.io.IOException
    {
        int $i0, i1, $i2, $i3;
        org.apache.xml.serializer.ToStream r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        i1 := @parameter0: int;

        $z0 = r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputLineSep()>();

     label1:
        $i0 = r0.<org.apache.xml.serializer.SerializerBase: int m_indentAmount>;

        if $i0 <= 0 goto label2;

        $i2 = r0.<org.apache.xml.serializer.SerializerBase: int m_indentAmount>;

        $i3 = i1 * $i2;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void printSpace(int)>($i3);

     label2:
        return;
    }

    protected void indent() throws java.io.IOException
    {
        int $i0;
        org.apache.xml.serializer.ElemContext $r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $i0 = $r1.<org.apache.xml.serializer.ElemContext: int m_currentElemDepth>;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent(int)>($i0);

        return;
    }

    private void printSpace(int) throws java.io.IOException
    {
        java.io.Writer r1;
        int i0, i1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        i1 = 0;

        goto label2;

     label1:
        virtualinvoke r1.<java.io.Writer: void write(int)>(32);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        return;
    }

    public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        int $i0, $i1;
        java.lang.String r1, r2, r3, r4, $r8, r11;
        boolean $z0, $z1, $z2;
        org.apache.xml.serializer.ElemContext $r7;
        java.io.IOException $r9;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r10;
        java.io.Writer r12;
        char[] $r5, $r6;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r11 := @parameter4: java.lang.String;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_inExternalDTD>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r12 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $z1 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl>;

        if $z1 == 0 goto label2;

        $r7 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r8 = $r7.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputDocTypeDecl(java.lang.String,boolean)>($r8, 0);

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl> = 0;

     label2:
        $z2 = r0.<org.apache.xml.serializer.ToStream: boolean m_inDoctype>;

        if $z2 == 0 goto label3;

        virtualinvoke r12.<java.io.Writer: void write(java.lang.String)>(" [");

        $r6 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i1 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke r12.<java.io.Writer: void write(char[],int,int)>($r6, 0, $i1);

        r0.<org.apache.xml.serializer.ToStream: boolean m_inDoctype> = 0;

     label3:
        virtualinvoke r12.<java.io.Writer: void write(java.lang.String)>("<!ATTLIST ");

        virtualinvoke r12.<java.io.Writer: void write(java.lang.String)>(r1);

        virtualinvoke r12.<java.io.Writer: void write(int)>(32);

        virtualinvoke r12.<java.io.Writer: void write(java.lang.String)>(r2);

        virtualinvoke r12.<java.io.Writer: void write(int)>(32);

        virtualinvoke r12.<java.io.Writer: void write(java.lang.String)>(r3);

        if r4 == null goto label4;

        virtualinvoke r12.<java.io.Writer: void write(int)>(32);

        virtualinvoke r12.<java.io.Writer: void write(java.lang.String)>(r4);

     label4:
        virtualinvoke r12.<java.io.Writer: void write(int)>(62);

        $r5 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i0 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke r12.<java.io.Writer: void write(char[],int,int)>($r5, 0, $i0);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    public java.io.Writer getWriter()
    {
        java.io.Writer $r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        return $r1;
    }

    public void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1, r2, r3;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    protected boolean escapingNotNeeded(char)
    {
        java.lang.Character $r29;
        java.lang.reflect.Method $r4, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalAccessException $r13;
        java.lang.Exception $r17;
        java.lang.reflect.InvocationTargetException $r15;
        java.lang.Object[] r26;
        java.lang.StringBuffer $r20, $r22, $r28;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Boolean r27;
        java.lang.String $r6, $r21, $r23;
        java.io.PrintStream $r14, $r16, $r19;
        java.lang.Class[] r24;
        char c0;
        org.apache.xml.serializer.ToStream r0;
        java.lang.Object $r1, $r3, $r5, $r7, $r8, $r10, $r25;
        java.lang.Class $r9, $r11;

        r0 := @this: org.apache.xml.serializer.ToStream;

        c0 := @parameter0: char;

        $i2 = (int) c0;

        if $i2 >= 127 goto label03;

        $i3 = (int) c0;

        if $i3 >= 32 goto label01;

        $i4 = (int) c0;

        if 10 == $i4 goto label01;

        $i5 = (int) c0;

        if 13 == $i5 goto label01;

        $i6 = (int) c0;

        if 9 != $i6 goto label02;

     label01:
        return 1;

     label02:
        return 0;

     label03:
        $r1 = r0.<org.apache.xml.serializer.ToStream: java.lang.Object m_charToByteConverter>;

        if null != $r1 goto label07;

        $z2 = r0.<org.apache.xml.serializer.ToStream: boolean m_triedToGetConverter>;

        if 0 != $z2 goto label07;

        r0.<org.apache.xml.serializer.ToStream: boolean m_triedToGetConverter> = 1;

     label04:
        $r6 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        $r7 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.Object getCharToByteConverter(java.lang.String)>($r6);

        r0.<org.apache.xml.serializer.ToStream: java.lang.Object m_charToByteConverter> = $r7;

        $r8 = r0.<org.apache.xml.serializer.ToStream: java.lang.Object m_charToByteConverter>;

        if null == $r8 goto label05;

        r24 = newarray (java.lang.Class)[1];

        $r9 = <java.lang.Character: java.lang.Class TYPE>;

        r24[0] = $r9;

        $r10 = r0.<org.apache.xml.serializer.ToStream: java.lang.Object m_charToByteConverter>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("canConvert", r24);

        r0.<org.apache.xml.serializer.ToStream: java.lang.reflect.Method m_canConvertMeth> = $r12;

     label05:
        goto label07;

     label06:
        $r17 := @caughtexception;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Warning: ");

        $r21 = virtualinvoke $r17.<java.lang.Throwable: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label07:
        $r25 = r0.<org.apache.xml.serializer.ToStream: java.lang.Object m_charToByteConverter>;

        if null == $r25 goto label14;

     label08:
        r26 = newarray (java.lang.Object)[1];

        $r29 = new java.lang.Character;

        specialinvoke $r29.<java.lang.Character: void <init>(char)>(c0);

        r26[0] = $r29;

        $r4 = r0.<org.apache.xml.serializer.ToStream: java.lang.reflect.Method m_canConvertMeth>;

        $r3 = r0.<org.apache.xml.serializer.ToStream: java.lang.Object m_charToByteConverter>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, r26);

        r27 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke r27.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label10;

        $z1 = staticinvoke <java.lang.Character: boolean isISOControl(char)>(c0);

        if $z1 != 0 goto label09;

        $z3 = 1;

        goto label11;

     label09:
        $z3 = 0;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        return $z3;

     label12:
        $r15 := @caughtexception;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("Warning: InvocationTargetException in canConvert!");

        goto label14;

     label13:
        $r13 := @caughtexception;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Warning: IllegalAccessException in canConvert!");

     label14:
        $i1 = r0.<org.apache.xml.serializer.ToStream: int m_maxCharacter>;

        $i7 = (int) c0;

        if $i7 > $i1 goto label15;

        $z4 = 1;

        goto label16;

     label15:
        $z4 = 0;

     label16:
        return $z4;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.reflect.InvocationTargetException from label08 to label12 with label12;
        catch java.lang.IllegalAccessException from label08 to label12 with label13;
    }

    protected void writeUTF16Surrogate(char, char[], int, int) throws java.io.IOException
    {
        char c0;
        org.apache.xml.serializer.ToStream r0;
        int i1, i2, $i3;
        java.io.Writer r2;
        char[] r1;
        java.lang.String $r3;

        r0 := @this: org.apache.xml.serializer.ToStream;

        c0 := @parameter0: char;

        r1 := @parameter1: char[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: int getURF16SurrogateValue(char,char[],int,int)>(c0, r1, i1, i2);

        r2 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke r2.<java.io.Writer: void write(int)>(38);

        virtualinvoke r2.<java.io.Writer: void write(int)>(35);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r3);

        virtualinvoke r2.<java.io.Writer: void write(int)>(59);

        return;
    }

    int getURF16SurrogateValue(char, char[], int, int) throws java.io.IOException
    {
        java.lang.Object[] $r2, $r12;
        java.lang.StringBuffer $r5, $r6, $r8, $r17;
        int i0, $i1, $i3, $i4, $i5, $i6, i7, i8, i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i22, $i23, $i25;
        java.lang.String $r4, $r7, $r9, $r10, $r13, $r14;
        char c2, c9;
        java.io.IOException $r16, $r18;
        org.apache.xml.serializer.ToStream r15;
        char[] r0;

        r15 := @this: org.apache.xml.serializer.ToStream;

        c2 := @parameter0: char;

        r0 := @parameter1: char[];

        i7 := @parameter2: int;

        i0 := @parameter3: int;

        $i1 = i7 + 1;

        if $i1 < i0 goto label1;

        $r16 = new java.io.IOException;

        $r12 = newarray (java.lang.Object)[1];

        $i11 = (int) c2;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        $r12[0] = $r13;

        $r14 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_UTF16_SURROGATE", $r12);

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r16;

     label1:
        i8 = i7 + 1;

        c9 = r0[i8];

        $i13 = (int) 56320;

        $i14 = (int) c9;

        if $i13 > $i14 goto label2;

        $i15 = (int) c9;

        $i17 = (int) 57344;

        if $i15 < $i17 goto label3;

     label2:
        $r18 = new java.io.IOException;

        $r2 = newarray (java.lang.Object)[1];

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $i18 = (int) c2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i18);

        $r5 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i19 = (int) c9;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i19);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2[0] = $r9;

        $r10 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_UTF16_SURROGATE", $r2);

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r18;

     label3:
        $i20 = (int) c2;

        $i22 = (int) 55296;

        $i3 = $i20 - $i22;

        $i4 = $i3 << 10;

        $i23 = (int) c9;

        $i5 = $i4 + $i23;

        $i25 = (int) 56320;

        $i6 = $i5 - $i25;

        i10 = $i6 + 65536;

        return i10;
    }

    protected int accumDefaultEntity(java.io.Writer, char, int, char[], int, boolean, boolean) throws java.io.IOException
    {
        org.apache.xml.serializer.CharInfo $r1, $r2, $r5;
        int i0, $i2, $i3, i4, $i5, $i6, $i7;
        java.lang.String $r3;
        boolean z0, z1, $z2, $z3;
        char c1;
        org.apache.xml.serializer.ToStream r0;
        java.io.Writer r4;
        char[] $r6, r7;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r4 := @parameter0: java.io.Writer;

        c1 := @parameter1: char;

        i0 := @parameter2: int;

        r7 := @parameter3: char[];

        i4 := @parameter4: int;

        z1 := @parameter5: boolean;

        z0 := @parameter6: boolean;

        if z0 != 0 goto label1;

        $i5 = (int) c1;

        if 10 != $i5 goto label1;

        $r6 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i3 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke r4.<java.io.Writer: void write(char[],int,int)>($r6, 0, $i3);

        goto label7;

     label1:
        if z1 == 0 goto label2;

        $r5 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $i6 = (int) c1;

        $z3 = virtualinvoke $r5.<org.apache.xml.serializer.CharInfo: boolean isSpecialTextChar(int)>($i6);

        if $z3 != 0 goto label3;

     label2:
        if z1 != 0 goto label6;

        $r1 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $i7 = (int) c1;

        $z2 = virtualinvoke $r1.<org.apache.xml.serializer.CharInfo: boolean isSpecialAttrChar(int)>($i7);

        if $z2 == 0 goto label6;

     label3:
        $r2 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $r3 = virtualinvoke $r2.<org.apache.xml.serializer.CharInfo: java.lang.String getEntityNameForChar(char)>(c1);

        if null == $r3 goto label4;

        virtualinvoke r4.<java.io.Writer: void write(int)>(38);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r3);

        virtualinvoke r4.<java.io.Writer: void write(int)>(59);

        goto label5;

     label4:
        return i0;

     label5:
        goto label7;

     label6:
        return i0;

     label7:
        $i2 = i0 + 1;

        return $i2;
    }

    void writeNormalizedChars(char[], int, int, boolean, boolean) throws java.io.IOException, org.xml.sax.SAXException
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9;
        java.io.Writer r1;
        int i0, i1, i2, $i4, $i5, $i7, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String $r3, $r4;
        char c3, $c6, $c8;
        org.apache.xml.serializer.ToStream r0;
        char[] r2, $r5;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z8 := @parameter4: boolean;

        r1 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        i2 = i0 + i1;

        i10 = i0;

        goto label13;

     label01:
        c3 = r2[i10];

        $i11 = (int) c3;

        if 10 != $i11 goto label02;

        if z8 == 0 goto label02;

        $r5 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i9 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r5, 0, $i9);

        goto label12;

     label02:
        if z0 == 0 goto label05;

        $z5 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean escapingNotNeeded(char)>(c3);

        if $z5 != 0 goto label05;

        $z6 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z6 == 0 goto label03;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label03:
        $z7 = staticinvoke <org.apache.xml.serializer.ToStream: boolean isUTF16Surrogate(char)>(c3);

        if $z7 == 0 goto label04;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void writeUTF16Surrogate(char,char[],int,int)>(c3, r2, i10, i2);

        i10 = i10 + 1;

        goto label12;

     label04:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&#");

        $i12 = (int) c3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.Writer: void write(int)>(59);

        goto label12;

     label05:
        if z0 == 0 goto label06;

        $i4 = i2 - 2;

        if i10 >= $i4 goto label06;

        $i13 = (int) c3;

        if 93 != $i13 goto label06;

        $i5 = i10 + 1;

        $c6 = r2[$i5];

        $i14 = (int) $c6;

        if 93 != $i14 goto label06;

        $i7 = i10 + 2;

        $c8 = r2[$i7];

        $i15 = (int) $c8;

        if 62 != $i15 goto label06;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("]]]]><![CDATA[>");

        i10 = i10 + 2;

        goto label12;

     label06:
        $z9 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean escapingNotNeeded(char)>(c3);

        if $z9 == 0 goto label08;

        if z0 == 0 goto label07;

        $z4 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z4 != 0 goto label07;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("<![CDATA[");

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen> = 1;

     label07:
        $i16 = (int) c3;

        virtualinvoke r1.<java.io.Writer: void write(int)>($i16);

        goto label12;

     label08:
        $z1 = staticinvoke <org.apache.xml.serializer.ToStream: boolean isUTF16Surrogate(char)>(c3);

        if $z1 == 0 goto label10;

        $z3 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z3 == 0 goto label09;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label09:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void writeUTF16Surrogate(char,char[],int,int)>(c3, r2, i10, i2);

        i10 = i10 + 1;

        goto label12;

     label10:
        $z2 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z2 == 0 goto label11;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label11:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&#");

        $i17 = (int) c3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i17);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r3);

        virtualinvoke r1.<java.io.Writer: void write(int)>(59);

     label12:
        i10 = i10 + 1;

     label13:
        if i10 < i2 goto label01;

        return;
    }

    public void endNonEscaping() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.utils.BoolStack $r1;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $r1 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_disableOutputEscapingStates>;

        virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean pop()>();

        return;
    }

    public void startNonEscaping() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.utils.BoolStack $r1;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $r1 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_disableOutputEscapingStates>;

        virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean push(boolean)>(1);

        return;
    }

    protected void cdata(char[], int, int) throws org.xml.sax.SAXException
    {
        int i0, i1, $i2, $i3, $i6;
        java.lang.String $r7;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z7, $z8, $z9;
        org.apache.xml.serializer.ElemContext $r1, $r4;
        char $c4, $c5;
        java.io.IOException $r5;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r9;
        java.io.Writer $r3;
        org.apache.xml.serializer.SerializerTrace $r8;
        char[] r2;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label01:
        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z0 = $r1.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z0 == 0 goto label02;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeStartTag()>();

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r4.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label02:
        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 1;

        $z1 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean shouldIndent()>();

        if $z1 == 0 goto label03;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent()>();

     label03:
        if i1 < 1 goto label04;

        $c5 = r2[i0];

        $z5 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean escapingNotNeeded(char)>($c5);

        if $z5 == 0 goto label04;

        $z9 = 1;

        $z8 = 1;

        goto label05;

     label04:
        $z9 = 0;

        $z8 = 0;

     label05:
        z2 = $z9;

        if $z8 == 0 goto label06;

        $z4 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z4 != 0 goto label06;

        $r3 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("<![CDATA[");

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen> = 1;

     label06:
        $z7 = specialinvoke r0.<org.apache.xml.serializer.ToStream: boolean isEscapingDisabled()>();

        if $z7 == 0 goto label07;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void charactersRaw(char[],int,int)>(r2, i0, i1);

        goto label08;

     label07:
        $z3 = r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void writeNormalizedChars(char[],int,int,boolean,boolean)>(r2, i0, i1, 1, $z3);

     label08:
        if z2 == 0 goto label09;

        $i2 = i0 + i1;

        $i3 = $i2 - 1;

        $c4 = r2[$i3];

        $i6 = (int) $c4;

        if $i6 != 93 goto label09;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label09:
        $r8 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r8 == null goto label10;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireCDATAEvent(char[],int,int)>(r2, i0, i1);

     label10:
        goto label12;

     label11:
        $r5 := @caughtexception;

        $r9 = new org.xml.sax.SAXException;

        $r7 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_OIERROR", null);

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r7, $r5);

        throw $r9;

     label12:
        return;

        catch java.io.IOException from label01 to label10 with label11;
    }

    private boolean isEscapingDisabled()
    {
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.utils.BoolStack $r1;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $r1 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_disableOutputEscapingStates>;

        $z0 = virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean peekOrFalse()>();

        return $z0;
    }

    protected void charactersRaw(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r1, $r4;
        java.io.IOException $r5;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r6;
        int i0, i1;
        java.io.Writer $r3;
        char[] r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_inEntityRef>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z1 = $r1.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeStartTag()>();

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r4.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label2:
        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 1;

        $r3 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>(r2, i0, i1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.xml.sax.SAXException $r16;
        java.io.Writer $r9;
        org.apache.xml.serializer.CharInfo $r7, $r10, $r15;
        int i0, i1, $i2, $i4, $i6, $i7, i8, i9, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        org.apache.xml.serializer.ElemContext $r1, $r3, $r6, $r11, $r12;
        char $c3, $c5, c10;
        java.io.IOException $r13;
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.serializer.SerializerTrace $r5, $r8;
        char[] r2;
        org.apache.xml.utils.BoolStack $r4;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z0 = $r1.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeStartTag()>();

        $r12 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r12.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

        goto label02;

     label01:
        $z1 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument>;

        if $z1 == 0 goto label02;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void startDocumentInternal()>();

     label02:
        $z11 = r0.<org.apache.xml.serializer.ToStream: boolean m_cdataStartCalled>;

        if $z11 != 0 goto label03;

        $r3 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z2 = $r3.<org.apache.xml.serializer.ElemContext: boolean m_isCdataSection>;

        if $z2 == 0 goto label04;

     label03:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void cdata(char[],int,int)>(r2, i0, i1);

        return;

     label04:
        $z3 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z3 == 0 goto label05;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label05:
        $r4 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_disableOutputEscapingStates>;

        $z4 = virtualinvoke $r4.<org.apache.xml.utils.BoolStack: boolean peekOrFalse()>();

        if $z4 != 0 goto label06;

        $z5 = r0.<org.apache.xml.serializer.ToStream: boolean m_escaping>;

        if $z5 != 0 goto label08;

     label06:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void charactersRaw(char[],int,int)>(r2, i0, i1);

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r5 == null goto label07;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireCharEvent(char[],int,int)>(r2, i0, i1);

     label07:
        return;

     label08:
        $r6 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z6 = $r6.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z6 == 0 goto label09;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeStartTag()>();

        $r11 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r11.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label09:
        $i7 = i0 + i1;

        i8 = i0 - 1;

        i9 = i0;

        goto label12;

     label10:
        $r15 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $i12 = (int) $c5;

        $z12 = virtualinvoke $r15.<org.apache.xml.serializer.CharInfo: boolean isTextASCIIClean(int)>($i12);

        if $z12 != 0 goto label11;

        $i6 = specialinvoke r0.<org.apache.xml.serializer.ToStream: int processDirty(char[],int,int,char,int,boolean)>(r2, $i7, i9, $c5, i8, 1);

        i8 = $i6;

        i9 = $i6;

     label11:
        i9 = i9 + 1;

     label12:
        if i9 >= $i7 goto label14;

        $c5 = r2[i9];

        $i13 = (int) $c5;

        if $i13 == 32 goto label10;

        $i14 = (int) $c5;

        if $i14 != 10 goto label13;

        $z10 = r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse>;

        if $z10 != 0 goto label10;

     label13:
        $i15 = (int) $c5;

        if $i15 == 13 goto label10;

        $i16 = (int) $c5;

        if $i16 == 9 goto label10;

     label14:
        if i9 >= $i7 goto label22;

        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 1;

        goto label22;

     label15:
        i9 = i9 + 1;

     label16:
        if i9 >= $i7 goto label17;

        $c3 = r2[i9];

        $i17 = (int) $c3;

        if $i17 >= 127 goto label17;

        $r10 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $i18 = (int) $c3;

        $z9 = virtualinvoke $r10.<org.apache.xml.serializer.CharInfo: boolean isTextASCIIClean(int)>($i18);

        if $z9 != 0 goto label15;

     label17:
        if i9 != $i7 goto label18;

        goto label23;

     label18:
        c10 = r2[i9];

        $z7 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean escapingNotNeeded(char)>(c10);

        if $z7 == 0 goto label19;

        $r7 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $i19 = (int) c10;

        $z8 = virtualinvoke $r7.<org.apache.xml.serializer.CharInfo: boolean isSpecialTextChar(int)>($i19);

        if $z8 == 0 goto label21;

     label19:
        $i20 = (int) c10;

        if 34 != $i20 goto label20;

        goto label21;

     label20:
        $i2 = specialinvoke r0.<org.apache.xml.serializer.ToStream: int processDirty(char[],int,int,char,int,boolean)>(r2, $i7, i9, c10, i8, 1);

        i8 = $i2;

        i9 = $i2;

     label21:
        i9 = i9 + 1;

     label22:
        if i9 < $i7 goto label16;

     label23:
        $i4 = i8 + 1;

        if i9 <= $i4 goto label24;

        i11 = i9 - $i4;

        $r9 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r9.<java.io.Writer: void write(char[],int,int)>(r2, $i4, i11);

     label24:
        r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext> = 1;

     label25:
        goto label27;

     label26:
        $r13 := @caughtexception;

        $r16 = new org.xml.sax.SAXException;

        specialinvoke $r16.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r13);

        throw $r16;

     label27:
        $r8 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r8 == null goto label28;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireCharEvent(char[],int,int)>(r2, i0, i1);

     label28:
        return;

        catch java.io.IOException from label09 to label25 with label26;
    }

    private int processDirty(char[], int, int, char, int, boolean) throws java.io.IOException
    {
        int i0, i2, $i3, $i4, i5, i6, i7, $i8;
        boolean z0;
        char c1;
        org.apache.xml.serializer.ToStream r0;
        java.io.Writer $r2, $r4, $r5;
        char[] r1, $r3;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: char[];

        i2 := @parameter1: int;

        i6 := @parameter2: int;

        c1 := @parameter3: char;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        i7 = i0 + 1;

        if i6 <= i7 goto label1;

        i5 = i6 - i7;

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r5.<java.io.Writer: void write(char[],int,int)>(r1, i7, i5);

     label1:
        $i8 = (int) c1;

        if 10 != $i8 goto label2;

        if z0 == 0 goto label2;

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $r3 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i4 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>($r3, 0, $i4);

        goto label3;

     label2:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $i3 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: int accumDefaultEscape(java.io.Writer,char,int,char[],int,boolean,boolean)>($r2, c1, i6, r1, i2, z0, 0);

        i6 = $i3 - 1;

     label3:
        return i6;
    }

    public void characters(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToStream r1;
        int $i0, $i1, $i2, $i3;
        char[] $r2, $r3, $r4, $r5;
        java.lang.String r0;

        r1 := @this: org.apache.xml.serializer.ToStream;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff>;

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label1;

        $i2 = $i0 * 2;

        $i3 = $i2 + 1;

        $r5 = newarray (char)[$i3];

        r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff> = $r5;

     label1:
        $r3 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r3, 0);

        $r4 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_charsBuff>;

        virtualinvoke r1.<org.apache.xml.serializer.ToStream: void characters(char[],int,int)>($r4, 0, $i0);

        return;
    }

    protected int accumDefaultEscape(java.io.Writer, char, int, char[], int, boolean, boolean) throws java.io.IOException
    {
        boolean z0, z1, $z2, $z3, $z4;
        java.io.Writer r1;
        java.lang.Object[] $r6, $r17;
        org.apache.xml.serializer.CharInfo $r3, $r4;
        java.lang.StringBuffer $r9, $r10, $r12, $r22;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i12, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i30, $i31, $i33, $i34, $i35, $i36, $i37;
        java.lang.String $r8, $r11, $r13, $r14, $r15, $r18, $r19, $r20;
        char c0, c11;
        java.io.IOException $r21, $r23;
        org.apache.xml.serializer.ToStream r0;
        char[] r2;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.io.Writer;

        c0 := @parameter1: char;

        i8 := @parameter2: int;

        r2 := @parameter3: char[];

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        $i2 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: int accumDefaultEntity(java.io.Writer,char,int,char[],int,boolean,boolean)>(r1, c0, i8, r2, i1, z0, z1);

        i9 = $i2;

        if i8 != $i2 goto label9;

        $i14 = (int) 55296;

        $i15 = (int) c0;

        if $i14 > $i15 goto label4;

        $i16 = (int) c0;

        $i18 = (int) 56320;

        if $i16 >= $i18 goto label4;

        $i3 = i8 + 1;

        if $i3 < i1 goto label1;

        $r21 = new java.io.IOException;

        $r17 = newarray (java.lang.Object)[1];

        $i19 = (int) c0;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i19);

        $r17[0] = $r18;

        $r19 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_UTF16_SURROGATE", $r17);

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw $r21;

     label1:
        i10 = i8 + 1;

        c11 = r2[i10];

        $i21 = (int) 56320;

        $i22 = (int) c11;

        if $i21 > $i22 goto label2;

        $i23 = (int) c11;

        $i25 = (int) 57344;

        if $i23 < $i25 goto label3;

     label2:
        $r23 = new java.io.IOException;

        $r6 = newarray (java.lang.Object)[1];

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $i26 = (int) c0;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i26);

        $r9 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i27 = (int) c11;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i27);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6[0] = $r13;

        $r14 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_UTF16_SURROGATE", $r6);

        specialinvoke $r23.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r23;

     label3:
        $i28 = (int) c0;

        $i30 = (int) 55296;

        $i4 = $i28 - $i30;

        $i5 = $i4 << 10;

        $i31 = (int) c11;

        $i6 = $i5 + $i31;

        $i33 = (int) 56320;

        $i7 = $i6 - $i33;

        i12 = $i7 + 65536;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&#");

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r15);

        virtualinvoke r1.<java.io.Writer: void write(int)>(59);

        i9 = $i2 + 2;

        goto label9;

     label4:
        $z2 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean escapingNotNeeded(char)>(c0);

        if $z2 == 0 goto label6;

        if z0 == 0 goto label5;

        $r4 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $i34 = (int) c0;

        $z4 = virtualinvoke $r4.<org.apache.xml.serializer.CharInfo: boolean isSpecialTextChar(int)>($i34);

        if $z4 != 0 goto label6;

     label5:
        if z0 != 0 goto label7;

        $r3 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $i35 = (int) c0;

        $z3 = virtualinvoke $r3.<org.apache.xml.serializer.CharInfo: boolean isSpecialAttrChar(int)>($i35);

        if $z3 == 0 goto label7;

     label6:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&#");

        $i36 = (int) c0;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i36);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r20);

        virtualinvoke r1.<java.io.Writer: void write(int)>(59);

        goto label8;

     label7:
        $i37 = (int) c0;

        virtualinvoke r1.<java.io.Writer: void write(int)>($i37);

     label8:
        i9 = $i2 + 1;

     label9:
        return i9;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.xml.sax.Attributes r3;
        java.lang.String r1, r2, r4, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xml.serializer.ElemContext $r5, $r6, $r8, $r12;
        java.io.IOException $r10;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r11;
        org.apache.xml.serializer.SerializerTrace $r7;
        java.io.Writer $r13;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: org.xml.sax.Attributes;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_inEntityRef>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $z1 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument>;

        if $z1 == 0 goto label02;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument> = 0;

        goto label03;

     label02:
        $z2 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z2 == 0 goto label03;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label03:
        $z5 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl>;

        if 1 != $z5 goto label04;

        $r9 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypeSystem()>();

        if null == $r9 goto label04;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputDocTypeDecl(java.lang.String,boolean)>(r2, 1);

     label04:
        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl> = 0;

        $r12 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z6 = $r12.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z6 == 0 goto label05;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeStartTag()>();

        $r8 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r8.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label05:
        if r1 == null goto label06;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void ensurePrefixIsDeclared(java.lang.String,java.lang.String)>(r1, r2);

     label06:
        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 0;

        $z3 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean shouldIndent()>();

        if $z3 == 0 goto label07;

        $z4 = r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine>;

        if $z4 == 0 goto label07;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent()>();

     label07:
        r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine> = 1;

        $r13 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r13.<java.io.Writer: void write(int)>(60);

        virtualinvoke $r13.<java.io.Writer: void write(java.lang.String)>(r2);

     label08:
        goto label10;

     label09:
        $r10 := @caughtexception;

        $r11 = new org.xml.sax.SAXException;

        specialinvoke $r11.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r10);

        throw $r11;

     label10:
        if r3 == null goto label11;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void addAttributes(org.xml.sax.Attributes)>(r3);

     label11:
        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r6 = virtualinvoke $r5.<org.apache.xml.serializer.ElemContext: org.apache.xml.serializer.ElemContext push(java.lang.String,java.lang.String,java.lang.String)>(r1, r4, r2);

        r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext> = $r6;

        r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext> = 0;

        $r7 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r7 == null goto label12;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void firePseudoAttributes()>();

     label12:
        return;

        catch java.io.IOException from label03 to label08 with label09;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1, r2, r3;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, null);

        return;
    }

    public void startElement(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(null, null, r1, null);

        return;
    }

    void outputDocTypeDecl(java.lang.String, boolean) throws org.xml.sax.SAXException
    {
        java.io.IOException $r7;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r8;
        int $i0, $i1;
        java.io.Writer $r6;
        char[] $r4, $r5;
        java.lang.String r1, $r2, $r3;
        boolean $z0, z1;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label1:
        $r6 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>("<!DOCTYPE ");

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>(r1);

        $r2 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypePublic()>();

        if null == $r2 goto label2;

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>(" PUBLIC \"");

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>($r2);

        virtualinvoke $r6.<java.io.Writer: void write(int)>(34);

     label2:
        $r3 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypeSystem()>();

        if null == $r3 goto label6;

        if null != $r2 goto label3;

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>(" SYSTEM \"");

        goto label4;

     label3:
        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>(" \"");

     label4:
        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>($r3);

        if z1 == 0 goto label5;

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>("\">");

        $r5 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i1 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke $r6.<java.io.Writer: void write(char[],int,int)>($r5, 0, $i1);

        z1 = 0;

        goto label6;

     label5:
        virtualinvoke $r6.<java.io.Writer: void write(int)>(34);

     label6:
        if 0 == 0 goto label7;

        if z1 == 0 goto label7;

        virtualinvoke $r6.<java.io.Writer: void write(int)>(62);

        $r4 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i0 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke $r6.<java.io.Writer: void write(char[],int,int)>($r4, 0, $i0);

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

     label9:
        return;

        catch java.io.IOException from label1 to label7 with label8;
    }

    public void processAttributes(java.io.Writer, int) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.serializer.AttributesImplSerializer $r2, $r4;
        int i0, i1;
        java.io.Writer r6;
        java.lang.String $r1, $r3, $r5;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r6 := @parameter0: java.io.Writer;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $r3 = virtualinvoke $r2.<org.xml.sax.helpers.AttributesImpl: java.lang.String getQName(int)>(i1);

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $r5 = virtualinvoke $r4.<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(int)>(i1);

        virtualinvoke r6.<java.io.Writer: void write(int)>(32);

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r3);

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>("=\"");

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)>(r6, $r5, $r1);

        virtualinvoke r6.<java.io.Writer: void write(int)>(34);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        return;
    }

    public void writeAttrString(java.io.Writer, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serializer.CharInfo $r5;
        int $i0, $i1, $i3, $i4, i5, $i6, $i7;
        java.lang.String r0, r8;
        boolean $z0, $z1;
        char c2;
        org.apache.xml.serializer.ToStream r1;
        java.io.Writer r4;
        char[] $r2, $r3, $r6, $r7;

        r1 := @this: org.apache.xml.serializer.ToStream;

        r4 := @parameter0: java.io.Writer;

        r0 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff>;

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label1;

        $i3 = $i0 * 2;

        $i4 = $i3 + 1;

        $r6 = newarray (char)[$i4];

        r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff> = $r6;

     label1:
        $r3 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r3, 0);

        $r7 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff>;

        i5 = 0;

        goto label5;

     label2:
        c2 = $r7[i5];

        $z0 = virtualinvoke r1.<org.apache.xml.serializer.ToStream: boolean escapingNotNeeded(char)>(c2);

        if $z0 == 0 goto label3;

        $r5 = r1.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $i6 = (int) c2;

        $z1 = virtualinvoke $r5.<org.apache.xml.serializer.CharInfo: boolean isSpecialAttrChar(int)>($i6);

        if $z1 != 0 goto label3;

        $i7 = (int) c2;

        virtualinvoke r4.<java.io.Writer: void write(int)>($i7);

        goto label4;

     label3:
        virtualinvoke r1.<org.apache.xml.serializer.ToStream: int accumDefaultEscape(java.io.Writer,char,int,char[],int,boolean,boolean)>(r4, c2, i5, $r7, $i0, 0, 1);

     label4:
        i5 = i5 + 1;

     label5:
        if i5 < $i0 goto label2;

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.AttributesImplSerializer $r12, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.xml.sax.SAXException $r18;
        java.io.Writer $r13, r21;
        org.apache.xml.serializer.NamespaceMappings $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String r4, $r16, r19, r20;
        org.apache.xml.serializer.ElemContext $r1, $r3, $r5, $r6, $r7, $r10, $r15;
        java.io.IOException $r17;
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.serializer.SerializerTrace $r11, $r22;
        org.apache.xml.utils.BoolStack $r8, $r9;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r19 := @parameter0: java.lang.String;

        r20 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_inEntityRef>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings m_prefixMap>;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $i0 = $r1.<org.apache.xml.serializer.ElemContext: int m_currentElemDepth>;

        virtualinvoke $r2.<org.apache.xml.serializer.NamespaceMappings: void popNamespaces(int,org.xml.sax.ContentHandler)>($i0, null);

     label02:
        r21 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $r3 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z1 = $r3.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z1 == 0 goto label07;

        $r11 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r11 == null goto label03;

        $r15 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r16 = $r15.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireStartElem(java.lang.String)>($r16);

     label03:
        $r12 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $i3 = virtualinvoke $r12.<org.xml.sax.helpers.AttributesImpl: int getLength()>();

        if $i3 <= 0 goto label04;

        $r13 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void processAttributes(java.io.Writer,int)>($r13, $i3);

        $r14 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        virtualinvoke $r14.<org.apache.xml.serializer.AttributesImplSerializer: void clear()>();

     label04:
        $z7 = r0.<org.apache.xml.serializer.ToStream: boolean m_spaceBeforeClose>;

        if $z7 == 0 goto label05;

        virtualinvoke r21.<java.io.Writer: void write(java.lang.String)>(" />");

        goto label06;

     label05:
        virtualinvoke r21.<java.io.Writer: void write(java.lang.String)>("/>");

     label06:
        goto label10;

     label07:
        $z2 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z2 == 0 goto label08;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label08:
        $z3 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean shouldIndent()>();

        if $z3 == 0 goto label09;

        $r10 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $i1 = $r10.<org.apache.xml.serializer.ElemContext: int m_currentElemDepth>;

        $i2 = $i1 - 1;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent(int)>($i2);

     label09:
        virtualinvoke r21.<java.io.Writer: void write(int)>(60);

        virtualinvoke r21.<java.io.Writer: void write(int)>(47);

        virtualinvoke r21.<java.io.Writer: void write(java.lang.String)>(r4);

        virtualinvoke r21.<java.io.Writer: void write(int)>(62);

     label10:
        goto label12;

     label11:
        $r17 := @caughtexception;

        $r18 = new org.xml.sax.SAXException;

        specialinvoke $r18.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r17);

        throw $r18;

     label12:
        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z4 = $r5.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z4 != 0 goto label15;

        $z5 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z5 == 0 goto label15;

        $r8 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        $z6 = virtualinvoke $r8.<org.apache.xml.utils.BoolStack: boolean isEmpty()>();

        if $z6 == 0 goto label13;

        $z8 = 0;

        goto label14;

     label13:
        $r9 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        $z8 = virtualinvoke $r9.<org.apache.xml.utils.BoolStack: boolean pop()>();

     label14:
        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = $z8;

     label15:
        r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext> = 0;

        $r22 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r22 == null goto label16;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEndElem(java.lang.String)>(r4);

     label16:
        $r6 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r7 = $r6.<org.apache.xml.serializer.ElemContext: org.apache.xml.serializer.ElemContext m_prev>;

        r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext> = $r7;

        return;

        catch java.io.IOException from label02 to label10 with label11;
    }

    public void endElement(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void endElement(java.lang.String,java.lang.String,java.lang.String)>(null, null, r1);

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1, r2;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r1, r2, 1);

        return;
    }

    public boolean startPrefixMapping(java.lang.String, java.lang.String, boolean) throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r7, $r8, $r9;
        int $i0, i1;
        java.lang.String r2, r3, $r5, $r6, $r10;
        boolean z0, $z1, $z2, $z3;
        org.apache.xml.serializer.ElemContext $r1, $r11;
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.serializer.NamespaceMappings $r4;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void flushPending()>();

        $r11 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $i0 = $r11.<org.apache.xml.serializer.ElemContext: int m_currentElemDepth>;

        i1 = $i0 + 1;

        goto label2;

     label1:
        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        i1 = $r1.<org.apache.xml.serializer.ElemContext: int m_currentElemDepth>;

     label2:
        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings m_prefixMap>;

        $z1 = virtualinvoke $r4.<org.apache.xml.serializer.NamespaceMappings: boolean pushNamespace(java.lang.String,java.lang.String,int)>(r2, r3, i1);

        if $z1 == 0 goto label4;

        $r5 = "";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label3;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void addAttributeAlways(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", r2, "xmlns", "CDATA", r3);

        goto label4;

     label3:
        $r6 = "";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 != 0 goto label4;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xmlns:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void addAttributeAlways(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", r2, $r10, "CDATA", r3);

     label4:
        return $z1;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        int i0, i1, $i3, i4, $i5, $i7, i8, i9, $i11, $i12, $i13;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6;
        org.apache.xml.serializer.ElemContext $r1, $r5;
        char $c2, $c6, $c10;
        java.io.IOException $r6;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r8;
        org.apache.xml.serializer.SerializerTrace $r3;
        java.io.Writer $r4;
        char[] r2;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r2 := @parameter0: char[];

        i8 := @parameter1: int;

        i1 := @parameter2: int;

        i0 = i8;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_inEntityRef>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z1 = $r1.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z1 == 0 goto label02;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeStartTag()>();

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r5.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

        goto label03;

     label02:
        $z2 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument>;

        if $z2 == 0 goto label03;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument> = 0;

     label03:
        $z4 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean shouldIndent()>();

        if $z4 == 0 goto label04;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent()>();

     label04:
        $i7 = i8 + i1;

        z5 = 0;

        $z3 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z3 == 0 goto label05;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label05:
        $r4 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("<!--");

        i9 = i8;

        goto label10;

     label06:
        if z5 == 0 goto label07;

        $c2 = r2[i9];

        $i11 = (int) $c2;

        if $i11 != 45 goto label07;

        $i3 = i9 - i8;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>(r2, i8, $i3);

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>(" -");

        i8 = i9 + 1;

     label07:
        $c10 = r2[i9];

        $i12 = (int) $c10;

        if $i12 != 45 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        z5 = $z6;

        i9 = i9 + 1;

     label10:
        if i9 < $i7 goto label06;

        if i1 <= 0 goto label12;

        i4 = $i7 - i8;

        if i4 <= 0 goto label11;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>(r2, i8, i4);

     label11:
        $i5 = $i7 - 1;

        $c6 = r2[$i5];

        $i13 = (int) $c6;

        if $i13 != 45 goto label12;

        virtualinvoke $r4.<java.io.Writer: void write(int)>(32);

     label12:
        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("-->");

     label13:
        goto label15;

     label14:
        $r6 := @caughtexception;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r6);

        throw $r8;

     label15:
        r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine> = 1;

        $r3 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r3 == null goto label16;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireCommentEvent(char[],int,int)>(r2, i0, i1);

     label16:
        return;

        catch java.io.IOException from label03 to label13 with label14;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToStream r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label1:
        r0.<org.apache.xml.serializer.ToStream: boolean m_cdataStartCalled> = 0;

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r2;
        java.io.IOException $r5;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r6;
        int $i0;
        java.io.Writer $r4;
        char[] $r1;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serializer.ToStream;

     label1:
        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl>;

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r3 = $r2.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputDocTypeDecl(java.lang.String,boolean)>($r3, 0);

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl> = 0;

     label2:
        $r4 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $z1 = r0.<org.apache.xml.serializer.ToStream: boolean m_inDoctype>;

        if $z1 != 0 goto label3;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("]>");

        goto label4;

     label3:
        virtualinvoke $r4.<java.io.Writer: void write(int)>(62);

     label4:
        $r1 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i0 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>($r1, 0, $i0);

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        int i0, i1;
        char[] r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if 0 != i0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void characters(char[],int,int)>(r1, i1, i0);

        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r0.<org.apache.xml.serializer.ToStream: boolean m_cdataStartCalled> = 1;

        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r0;
        org.apache.xml.serializer.ToStream r1;
        boolean $z0;

        r1 := @this: org.apache.xml.serializer.ToStream;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("[dtd]");

        if $z0 == 0 goto label1;

        r1.<org.apache.xml.serializer.SerializerBase: boolean m_inExternalDTD> = 1;

     label1:
        r1.<org.apache.xml.serializer.SerializerBase: boolean m_inEntityRef> = 1;

        return;
    }

    protected void closeStartTag() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.AttributesImplSerializer $r3, $r9;
        java.util.Vector $r5;
        int $i0;
        java.lang.String $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xml.serializer.ElemContext $r1, $r7, $r10;
        java.io.IOException $r12;
        org.apache.xml.serializer.ToStream r0;
        org.xml.sax.SAXException $r13;
        org.apache.xml.serializer.SerializerTrace $r2;
        java.io.Writer $r4, $r8;
        org.apache.xml.utils.BoolStack $r6;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z0 = $r1.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z0 == 0 goto label8;

     label1:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r2 == null goto label2;

        $r10 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r11 = $r10.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireStartElem(java.lang.String)>($r11);

     label2:
        $r3 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $i0 = virtualinvoke $r3.<org.xml.sax.helpers.AttributesImpl: int getLength()>();

        if $i0 <= 0 goto label3;

        $r8 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void processAttributes(java.io.Writer,int)>($r8, $i0);

        $r9 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        virtualinvoke $r9.<org.apache.xml.serializer.AttributesImplSerializer: void clear()>();

     label3:
        $r4 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r4.<java.io.Writer: void write(int)>(62);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        $r13 = new org.xml.sax.SAXException;

        specialinvoke $r13.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r12);

        throw $r13;

     label6:
        $r5 = r0.<org.apache.xml.serializer.SerializerBase: java.util.Vector m_cdataSectionElements>;

        if $r5 == null goto label7;

        $r7 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z3 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: boolean isCdataSection()>();

        $r7.<org.apache.xml.serializer.ElemContext: boolean m_isCdataSection> = $z3;

     label7:
        $z1 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z1 == 0 goto label8;

        r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext> = 0;

        $r6 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        $z2 = r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve>;

        virtualinvoke $r6.<org.apache.xml.utils.BoolStack: boolean push(boolean)>($z2);

     label8:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r4;
        java.lang.String r1, r2, r3;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setDoctypeSystem(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setDoctypePublic(java.lang.String)>(r2);

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r4.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName> = r3;

        r0.<org.apache.xml.serializer.ToStream: boolean m_inDoctype> = 1;

        return;
    }

    public int getIndentAmount()
    {
        int $i0;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $i0 = r0.<org.apache.xml.serializer.SerializerBase: int m_indentAmount>;

        return $i0;
    }

    public void setIndentAmount(int)
    {
        int i0;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        i0 := @parameter0: int;

        r0.<org.apache.xml.serializer.SerializerBase: int m_indentAmount> = i0;

        return;
    }

    protected boolean shouldIndent()
    {
        org.apache.xml.serializer.ToStream r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z0 == 0 goto label1;

        $z1 = r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve>;

        if $z1 != 0 goto label1;

        $z2 = r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext>;

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    private void setCdataSectionElements(java.lang.String, java.util.Properties)
    {
        java.util.Vector $r8;
        int $i0, $i2, $i3, i4, $i5, $i6;
        java.lang.String r1, $r2, $r6, $r7;
        boolean $z0, z1;
        java.util.Properties r0;
        org.apache.xml.utils.FastStringBuffer $r9;
        char $c1;
        org.apache.xml.serializer.ToStream r5;

        r5 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Properties;

        $r2 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if null == $r2 goto label8;

        $r8 = new java.util.Vector;

        specialinvoke $r8.<java.util.Vector: void <init>()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        z1 = 0;

        $r9 = new org.apache.xml.utils.FastStringBuffer;

        specialinvoke $r9.<org.apache.xml.utils.FastStringBuffer: void <init>()>();

        i4 = 0;

        goto label6;

     label1:
        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i4);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 == 0 goto label2;

        if z1 != 0 goto label4;

        $i2 = virtualinvoke $r9.<org.apache.xml.utils.FastStringBuffer: int length()>();

        if $i2 <= 0 goto label5;

        $r6 = virtualinvoke $r9.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        specialinvoke r5.<org.apache.xml.serializer.ToStream: void addCdataSectionElement(java.lang.String,java.util.Vector)>($r6, $r8);

        virtualinvoke $r9.<org.apache.xml.utils.FastStringBuffer: void reset()>();

        goto label5;

     label2:
        $i5 = (int) $c1;

        if 123 != $i5 goto label3;

        z1 = 1;

        goto label4;

     label3:
        $i6 = (int) $c1;

        if 125 != $i6 goto label4;

        z1 = 0;

     label4:
        virtualinvoke $r9.<org.apache.xml.utils.FastStringBuffer: void append(char)>($c1);

     label5:
        i4 = i4 + 1;

     label6:
        if i4 < $i0 goto label1;

        $i3 = virtualinvoke $r9.<org.apache.xml.utils.FastStringBuffer: int length()>();

        if $i3 <= 0 goto label7;

        $r7 = virtualinvoke $r9.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        specialinvoke r5.<org.apache.xml.serializer.ToStream: void addCdataSectionElement(java.lang.String,java.util.Vector)>($r7, $r8);

        virtualinvoke $r9.<org.apache.xml.utils.FastStringBuffer: void reset()>();

     label7:
        virtualinvoke r5.<org.apache.xml.serializer.ToStream: void setCdataSectionElements(java.util.Vector)>($r8);

     label8:
        return;
    }

    private void addCdataSectionElement(java.lang.String, java.util.Vector)
    {
        java.util.Vector r3;
        java.util.StringTokenizer $r0;
        java.lang.String r1, $r2, $r5;
        org.apache.xml.serializer.ToStream r4;
        boolean $z0;

        r4 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Vector;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r1, "{}", 0);

        $r2 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        if null != $r5 goto label3;

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>(null);

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        goto label4;

     label3:
        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>($r5);

     label4:
        return;
    }

    public void setCdataSectionElements(java.util.Vector)
    {
        java.util.Vector r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: java.util.Vector;

        r0.<org.apache.xml.serializer.SerializerBase: java.util.Vector m_cdataSectionElements> = r1;

        return;
    }

    protected java.lang.String ensureAttributesNamespaceIsDeclared(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r8, $r9, $r10, $r14, $r15, $r16;
        int $i0, $i1;
        java.lang.String r0, r1, r2, $r5, $r7, $r11, $r13, $r17, r18, $r19, r20;
        boolean $z0;
        org.apache.xml.serializer.ToStream r3;
        org.apache.xml.serializer.NamespaceMappings $r4, $r6, $r12;

        r3 := @this: org.apache.xml.serializer.ToStream;

        r0 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        if r0 == null goto label6;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i1 >= 0 goto label1;

        $r19 = "";

        goto label2;

     label1:
        $r19 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        r2 = $r19;

        if $i1 <= 0 goto label4;

        $r12 = r3.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings m_prefixMap>;

        $r13 = virtualinvoke $r12.<org.apache.xml.serializer.NamespaceMappings: java.lang.String lookupNamespace(java.lang.String)>($r19);

        if $r13 == null goto label3;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        return null;

     label3:
        virtualinvoke r3.<org.apache.xml.serializer.ToStream: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r2, r0, 0);

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xmlns:");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xml.serializer.SerializerBase: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", r2, $r17, "CDATA", r0);

        return r2;

     label4:
        $r4 = r3.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings m_prefixMap>;

        $r5 = virtualinvoke $r4.<org.apache.xml.serializer.NamespaceMappings: java.lang.String lookupPrefix(java.lang.String)>(r0);

        r20 = $r5;

        if $r5 != null goto label5;

        $r6 = r3.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings m_prefixMap>;

        $r7 = virtualinvoke $r6.<org.apache.xml.serializer.NamespaceMappings: java.lang.String generateNextPrefix()>();

        r20 = $r7;

        virtualinvoke r3.<org.apache.xml.serializer.ToStream: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>($r7, r0, 0);

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xmlns:");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xml.serializer.SerializerBase: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", $r7, $r11, "CDATA", r0);

     label5:
        return r20;

     label6:
        return null;
    }

    void ensurePrefixIsDeclared(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r6, $r7, $r8, $r9;
        int $i0, $i1, $i2;
        java.lang.String r0, r1, r2, $r5, $r10, $r11, $r12;
        boolean $z0;
        org.apache.xml.serializer.ToStream r3;
        org.apache.xml.serializer.NamespaceMappings $r4;

        r3 := @this: org.apache.xml.serializer.ToStream;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label6;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i1 >= 0 goto label1;

        $r11 = "";

        goto label2;

     label1:
        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        r2 = $r11;

        if null == $r11 goto label6;

        $r4 = r3.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings m_prefixMap>;

        $r5 = virtualinvoke $r4.<org.apache.xml.serializer.NamespaceMappings: java.lang.String lookupNamespace(java.lang.String)>($r11);

        if null == $r5 goto label3;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label6;

     label3:
        virtualinvoke r3.<org.apache.xml.serializer.ToStream: void startPrefixMapping(java.lang.String,java.lang.String)>(r2, r0);

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xmlns");

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 != 0 goto label4;

        $r12 = "";

        goto label5;

     label4:
        $r12 = ":";

     label5:
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xml.serializer.ToStream: void addAttributeAlways(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", r2, $r10, "CDATA", r0);

     label6:
        return;
    }

    public void flushPending() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r1, $r2;
        org.apache.xml.serializer.ToStream r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument> = 0;

     label1:
        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z1 = $r1.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeStartTag()>();

        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r2.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label2:
        $z2 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z2 == 0 goto label3;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen> = 0;

     label3:
        return;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.xml.sax.ContentHandler r1;
        org.apache.xml.serializer.ToStream r0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        return;
    }

    public void addAttributeAlways(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.xml.serializer.AttributesImplSerializer $r2, $r7, $r10, $r13;
        int $i0;
        java.lang.String r1, r3, r4, r5, r6, $r11, r12;
        boolean $z0;
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.serializer.SerializerTrace $r8, $r9;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $i0 = virtualinvoke $r2.<org.apache.xml.serializer.AttributesImplSerializer: int getIndex(java.lang.String)>(r1);

        if $i0 < 0 goto label3;

        r12 = null;

        $r9 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r9 == null goto label1;

        $r10 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $r11 = virtualinvoke $r10.<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(int)>($i0);

        r12 = $r11;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label1;

        r12 = null;

     label1:
        $r13 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        virtualinvoke $r13.<org.xml.sax.helpers.AttributesImpl: void setValue(int,java.lang.String)>($i0, r6);

        if r12 == null goto label2;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void firePseudoAttributes()>();

     label2:
        goto label4;

     label3:
        $r7 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        virtualinvoke $r7.<org.apache.xml.serializer.AttributesImplSerializer: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r3, r4, r1, r5, r6);

        $r8 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r8 == null goto label4;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void firePseudoAttributes()>();

     label4:
        return;
    }

    protected void firePseudoAttributes()
    {
        java.io.IOException $r10;
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.serializer.AttributesImplSerializer $r4;
        java.lang.StringBuffer $r3;
        org.xml.sax.SAXException $r9;
        org.apache.xml.serializer.SerializerTrace $r1, $r7;
        java.io.Writer $r2;
        int $i0, $i1;
        org.apache.xml.serializer.ToStream$WritertoStringBuffer $r8;
        char[] $r6;
        java.lang.String $r5;

        r0 := @this: org.apache.xml.serializer.ToStream;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label6;

     label1:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r2.<java.io.Writer: void flush()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $i0 = virtualinvoke $r4.<org.xml.sax.helpers.AttributesImpl: int getLength()>();

        if $i0 <= 0 goto label2;

        $r8 = new org.apache.xml.serializer.ToStream$WritertoStringBuffer;

        specialinvoke $r8.<org.apache.xml.serializer.ToStream$WritertoStringBuffer: void <init>(org.apache.xml.serializer.ToStream,java.lang.StringBuffer)>(r0, $r3);

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void processAttributes(java.io.Writer,int)>($r8, $i0);

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        $r7 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        $i1 = lengthof $r6;

        interfaceinvoke $r7.<org.apache.xml.serializer.SerializerTrace: void fireGenerateEvent(int,char[],int,int)>(11, $r6, 0, $i1);

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        goto label6;

     label5:
        $r9 := @caughtexception;

     label6:
        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch org.xml.sax.SAXException from label1 to label3 with label5;
    }

    public void setTransformer(javax.xml.transform.Transformer)
    {
        javax.xml.transform.Transformer r1;
        org.apache.xml.serializer.SerializerTraceWriter $r4;
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.serializer.SerializerTrace $r2, $r5;
        java.io.Writer $r3, $r6;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r1 := @parameter0: javax.xml.transform.Transformer;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void setTransformer(javax.xml.transform.Transformer)>(r1);

        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $z0 = $r3 instanceof org.apache.xml.serializer.SerializerTraceWriter;

        if $z0 != 0 goto label1;

        $r4 = new org.apache.xml.serializer.SerializerTraceWriter;

        $r6 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        specialinvoke $r4.<org.apache.xml.serializer.SerializerTraceWriter: void <init>(java.io.Writer,org.apache.xml.serializer.SerializerTrace)>($r6, $r5);

        r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer> = $r4;

     label1:
        return;
    }

    public boolean reset()
    {
        org.apache.xml.serializer.ToStream r0;
        boolean $z0, z1;

        r0 := @this: org.apache.xml.serializer.ToStream;

        z1 = 0;

        $z0 = specialinvoke r0.<org.apache.xml.serializer.SerializerBase: boolean reset()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void resetToStream()>();

        z1 = 1;

     label1:
        return z1;
    }

    private void resetToStream()
    {
        int $i0;
        org.apache.xml.serializer.ToStream r0;
        org.apache.xml.utils.BoolStack $r1, $r2;

        r0 := @this: org.apache.xml.serializer.ToStream;

        r0.<org.apache.xml.serializer.ToStream: java.lang.reflect.Method m_canConvertMeth> = null;

        r0.<org.apache.xml.serializer.ToStream: boolean m_cdataStartCalled> = 0;

        r0.<org.apache.xml.serializer.ToStream: java.lang.Object m_charToByteConverter> = null;

        $r1 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_disableOutputEscapingStates>;

        virtualinvoke $r1.<org.apache.xml.utils.BoolStack: void clear()>();

        r0.<org.apache.xml.serializer.ToStream: boolean m_escaping> = 1;

        r0.<org.apache.xml.serializer.ToStream: boolean m_inDoctype> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_isUTF8> = 0;

        $i0 = staticinvoke <org.apache.xml.serializer.Encodings: int getLastPrintable()>();

        r0.<org.apache.xml.serializer.ToStream: int m_maxCharacter> = $i0;

        $r2 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        virtualinvoke $r2.<org.apache.xml.utils.BoolStack: void clear()>();

        r0.<org.apache.xml.serializer.ToStream: boolean m_shouldFlush> = 1;

        r0.<org.apache.xml.serializer.ToStream: boolean m_spaceBeforeClose> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_triedToGetConverter> = 0;

        r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse> = 1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xml.serializer.ToStream: java.lang.String COMMENT_END> = "-->";

        <org.apache.xml.serializer.ToStream: java.lang.String COMMENT_BEGIN> = "<!--";

        return;
    }
}
