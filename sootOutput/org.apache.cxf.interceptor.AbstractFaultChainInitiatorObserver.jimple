public abstract class org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver extends java.lang.Object implements org.apache.cxf.transport.MessageObserver
{
    private static final java.util.logging.Logger LOG;
    private org.apache.cxf.Bus bus;
    private java.lang.ClassLoader loader;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.cxf.Bus)
    {
        org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver r0;
        org.apache.cxf.Bus r1;
        java.lang.Object $r2;
        java.lang.ClassLoader $r3;

        r0 := @this: org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver;

        r1 := @parameter0: org.apache.cxf.Bus;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: org.apache.cxf.Bus bus> = r1;

        if r1 == null goto label1;

        $r2 = interfaceinvoke r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Ljava/lang/ClassLoader;");

        $r3 = (java.lang.ClassLoader) $r2;

        r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: java.lang.ClassLoader loader> = $r3;

     label1:
        return;
    }

    public void onMessage(org.apache.cxf.message.Message)
    {
        java.util.SortedSet $r7;
        org.apache.cxf.message.FaultMode $r22;
        boolean $z0, $z1, $z2;
        org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder r31;
        java.util.logging.Logger $r29;
        java.lang.Exception $r27, r32;
        java.lang.ClassLoader $r3, $r23;
        org.apache.cxf.Bus $r1, $r2, $r9, $r26;
        org.apache.cxf.message.MessageImpl $r17;
        java.lang.Throwable $r25;
        org.apache.cxf.binding.Binding $r20;
        java.lang.AssertionError $r24;
        java.util.logging.Level $r28;
        org.apache.cxf.interceptor.Fault $r21;
        org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver r0;
        org.apache.cxf.message.Message r4, $r12, r33;
        java.lang.RuntimeException $r30;
        org.apache.cxf.message.Exchange $r5, $r8;
        org.apache.cxf.endpoint.Endpoint $r19;
        org.apache.cxf.phase.PhaseInterceptorChain $r6;
        java.lang.Object $r10, $r11, $r13, $r14, $r15, $r16, $r18;

        r0 := @this: org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver;

        r4 := @parameter0: org.apache.cxf.message.Message;

        $z0 = <org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if null != r4 goto label01;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label01:
        $r1 = r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: org.apache.cxf.Bus bus>;

        $r2 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)>($r1);

        r31 = null;

     label02:
        $r3 = r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: java.lang.ClassLoader loader>;

        if $r3 == null goto label03;

        $r23 = r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: java.lang.ClassLoader loader>;

        r31 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder setThreadContextClassloader(java.lang.ClassLoader)>($r23);

     label03:
        $r5 = interfaceinvoke r4.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $z1 = virtualinvoke r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: boolean isOutboundObserver()>();

        if $z1 == 0 goto label09;

        $r10 = interfaceinvoke r4.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        r32 = (java.lang.Exception) $r10;

        $z2 = r32 instanceof org.apache.cxf.interceptor.Fault;

        if $z2 != 0 goto label04;

        $r21 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r21.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>(r32);

        r32 = $r21;

     label04:
        $r11 = interfaceinvoke r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/message/FaultMode;");

        $r22 = (org.apache.cxf.message.FaultMode) $r11;

        $r12 = interfaceinvoke $r5.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        r33 = $r12;

        if null != $r12 goto label05;

        $r17 = new org.apache.cxf.message.MessageImpl;

        specialinvoke $r17.<org.apache.cxf.message.MessageImpl: void <init>()>();

        interfaceinvoke $r17.<org.apache.cxf.message.Message: void setExchange(org.apache.cxf.message.Exchange)>($r5);

        $r18 = interfaceinvoke $r5.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/Endpoint;");

        $r19 = (org.apache.cxf.endpoint.Endpoint) $r18;

        $r20 = interfaceinvoke $r19.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.binding.Binding getBinding()>();

        r33 = interfaceinvoke $r20.<org.apache.cxf.binding.Binding: org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Message)>($r17);

     label05:
        interfaceinvoke r33.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Exception;", r32);

        if null == $r22 goto label06;

        interfaceinvoke r33.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/message/FaultMode;", $r22);

     label06:
        $r13 = interfaceinvoke r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("javax.xml.ws.addressing.context.inbound");

        if $r13 == null goto label07;

        $r16 = interfaceinvoke r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("javax.xml.ws.addressing.context.inbound");

        interfaceinvoke r33.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.ws.addressing.context.inbound", $r16);

     label07:
        interfaceinvoke $r5.<org.apache.cxf.message.Exchange: void setOutMessage(org.apache.cxf.message.Message)>(null);

        interfaceinvoke $r5.<org.apache.cxf.message.Exchange: void setOutFaultMessage(org.apache.cxf.message.Message)>(r33);

        $r14 = interfaceinvoke r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/service/model/BindingFaultInfo;");

        if $r14 == null goto label08;

        $r15 = interfaceinvoke r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/service/model/BindingFaultInfo;");

        interfaceinvoke r33.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/BindingFaultInfo;", $r15);

     label08:
        goto label10;

     label09:
        r33 = r4;

        interfaceinvoke $r5.<org.apache.cxf.message.Exchange: void setInMessage(org.apache.cxf.message.Message)>(null);

        interfaceinvoke $r5.<org.apache.cxf.message.Exchange: void setInFaultMessage(org.apache.cxf.message.Message)>(r4);

     label10:
        $r6 = new org.apache.cxf.phase.PhaseInterceptorChain;

        $r7 = virtualinvoke r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: java.util.SortedSet getPhases()>();

        specialinvoke $r6.<org.apache.cxf.phase.PhaseInterceptorChain: void <init>(java.util.SortedSet)>($r7);

        $r8 = interfaceinvoke r33.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        virtualinvoke r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)>($r8, $r6);

        interfaceinvoke r33.<org.apache.cxf.message.Message: void setInterceptorChain(org.apache.cxf.interceptor.InterceptorChain)>($r6);

     label11:
        virtualinvoke $r6.<org.apache.cxf.phase.PhaseInterceptorChain: boolean doIntercept(org.apache.cxf.message.Message)>(r33);

     label12:
        goto label14;

     label13:
        $r27 := @caughtexception;

        $r29 = <org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: java.util.logging.Logger LOG>;

        $r28 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r29.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r28, "Error occurred during error handling, give up!", $r27);

        $r30 = new java.lang.RuntimeException;

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r27);

        throw $r30;

     label14:
        $r9 = r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: org.apache.cxf.Bus bus>;

        if $r2 == $r9 goto label15;

        staticinvoke <org.apache.cxf.BusFactory: void setThreadDefaultBus(org.apache.cxf.Bus)>($r2);

     label15:
        if r31 == null goto label20;

        virtualinvoke r31.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

        goto label20;

     label16:
        $r25 := @caughtexception;

     label17:
        $r26 = r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: org.apache.cxf.Bus bus>;

        if $r2 == $r26 goto label18;

        staticinvoke <org.apache.cxf.BusFactory: void setThreadDefaultBus(org.apache.cxf.Bus)>($r2);

     label18:
        if r31 == null goto label19;

        virtualinvoke r31.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

     label19:
        throw $r25;

     label20:
        return;

        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Throwable from label02 to label14 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    protected abstract boolean isOutboundObserver();

    protected abstract java.util.SortedSet getPhases();

    protected void initializeInterceptors(org.apache.cxf.message.Exchange, org.apache.cxf.phase.PhaseInterceptorChain)
    {
        org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver r0;
        org.apache.cxf.phase.PhaseInterceptorChain r2;
        org.apache.cxf.message.Exchange r1;

        r0 := @this: org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver;

        r1 := @parameter0: org.apache.cxf.message.Exchange;

        r2 := @parameter1: org.apache.cxf.phase.PhaseInterceptorChain;

        return;
    }

    public org.apache.cxf.Bus getBus()
    {
        org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver r0;
        org.apache.cxf.Bus $r1;

        r0 := @this: org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver;

        $r1 = r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: org.apache.cxf.Bus bus>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.util.logging.Logger $r1;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/cxf/interceptor/AbstractFaultChainInitiatorObserver;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/AbstractFaultChainInitiatorObserver;");

        <org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: java.util.logging.Logger LOG> = $r1;

        return;
    }
}
