public class arq.cmdline.ModResultsIn extends java.lang.Object implements arq.cmdline.ArgModuleGeneral
{
    protected final arq.cmdline.ArgDecl resultsInputFmtDecl;
    protected final arq.cmdline.ArgDecl fileDecl;
    private com.hp.hpl.jena.sparql.resultset.ResultsFormat inputFormat;
    private java.lang.String resultsFilename;
    private com.hp.hpl.jena.query.ResultSet resultSet;

    public void <init>()
    {
        arq.cmdline.ModResultsIn r0;
        arq.cmdline.ArgDecl $r1, $r3;
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r5;
        java.lang.String[] $r2, $r4;

        r0 := @this: arq.cmdline.ModResultsIn;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new arq.cmdline.ArgDecl;

        $r2 = newarray (java.lang.String)[0];

        specialinvoke $r1.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "in", $r2);

        r0.<arq.cmdline.ModResultsIn: arq.cmdline.ArgDecl resultsInputFmtDecl> = $r1;

        $r3 = new arq.cmdline.ArgDecl;

        $r4 = newarray (java.lang.String)[0];

        specialinvoke $r3.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "file", $r4);

        r0.<arq.cmdline.ModResultsIn: arq.cmdline.ArgDecl fileDecl> = $r3;

        $r5 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_TEXT>;

        r0.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.sparql.resultset.ResultsFormat inputFormat> = $r5;

        r0.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename> = null;

        r0.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.query.ResultSet resultSet> = null;

        return;
    }

    public void registerWith(arq.cmdline.CmdGeneral)
    {
        arq.cmdline.ModResultsIn r2;
        arq.cmdline.Usage $r1;
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgDecl $r3, $r4;

        r2 := @this: arq.cmdline.ModResultsIn;

        r0 := @parameter0: arq.cmdline.CmdGeneral;

        $r1 = virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.Usage getUsage()>();

        virtualinvoke $r1.<arq.cmdline.Usage: void startCategory(java.lang.String)>("Results");

        $r3 = r2.<arq.cmdline.ModResultsIn: arq.cmdline.ArgDecl fileDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r3, "--file", "Input file");

        $r4 = r2.<arq.cmdline.ModResultsIn: arq.cmdline.ArgDecl resultsInputFmtDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r4, "--in", "Results format (XML, JSON; RDF serialization)");

        return;
    }

    public void processArgs(arq.cmdline.CmdArgModule) throws java.lang.IllegalArgumentException
    {
        arq.cmdline.ArgDecl $r2, $r4, $r5, $r18;
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r7, $r8, $r14;
        arq.cmdline.CmdArgModule r0;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r6, $r12, $r13, $r15, $r16, $r17, $r19, $r20;
        boolean $z0, $z1;
        arq.cmdline.ModResultsIn r1;
        java.lang.StringBuilder $r9, $r10, $r11;

        r1 := @this: arq.cmdline.ModResultsIn;

        r0 := @parameter0: arq.cmdline.CmdArgModule;

        $r2 = r1.<arq.cmdline.ModResultsIn: arq.cmdline.ArgDecl fileDecl>;

        $z0 = virtualinvoke r0.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r2);

        if $z0 == 0 goto label1;

        $r18 = r1.<arq.cmdline.ModResultsIn: arq.cmdline.ArgDecl fileDecl>;

        $r19 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String getValue(arq.cmdline.ArgDecl)>($r18);

        r1.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename> = $r19;

     label1:
        $i0 = virtualinvoke r0.<arq.cmdline.CmdArgModule: int getNumPositional()>();

        if $i0 != 0 goto label2;

        $r17 = r1.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename>;

        if $r17 != null goto label2;

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>("No results file");

     label2:
        $i2 = virtualinvoke r0.<arq.cmdline.CmdArgModule: int getNumPositional()>();

        if $i2 <= 1 goto label3;

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>("Only one result set file allowed");

     label3:
        $i1 = virtualinvoke r0.<arq.cmdline.CmdArgModule: int getNumPositional()>();

        if $i1 != 1 goto label4;

        $r16 = r1.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename>;

        if $r16 == null goto label4;

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>("Either result set file or --file - not both");

     label4:
        $r20 = r1.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename>;

        if $r20 != null goto label5;

        $r15 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String getPositionalArg(int)>(0);

        r1.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename> = $r15;

     label5:
        $r3 = r1.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename>;

        if $r3 == null goto label6;

        $r13 = r1.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename>;

        $r14 = staticinvoke <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat guessSyntax(java.lang.String)>($r13);

        r1.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.sparql.resultset.ResultsFormat inputFormat> = $r14;

     label6:
        $r4 = r1.<arq.cmdline.ModResultsIn: arq.cmdline.ArgDecl resultsInputFmtDecl>;

        $z1 = virtualinvoke r0.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r4);

        if $z1 == 0 goto label7;

        $r5 = r1.<arq.cmdline.ModResultsIn: arq.cmdline.ArgDecl resultsInputFmtDecl>;

        $r6 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String getValue(arq.cmdline.ArgDecl)>($r5);

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat lookup(java.lang.String)>($r6);

        r1.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.sparql.resultset.ResultsFormat inputFormat> = $r7;

        $r8 = r1.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.sparql.resultset.ResultsFormat inputFormat>;

        if $r8 != null goto label7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized output format: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>($r12);

     label7:
        return;
    }

    public void checkCommandLine(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.CmdArgModule r1;
        arq.cmdline.ModResultsIn r0;

        r0 := @this: arq.cmdline.ModResultsIn;

        r1 := @parameter0: arq.cmdline.CmdArgModule;

        return;
    }

    public com.hp.hpl.jena.query.ResultSet getResultSet()
    {
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r4, $r10;
        boolean $z0;
        arq.cmd.TerminationException $r9, $r14, $r21, $r33;
        com.hp.hpl.jena.query.ResultSet $r1, $r6, $r7, $r12, $r15;
        com.hp.hpl.jena.shared.NotFoundException $r26;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r16;
        java.lang.StringBuilder $r27, $r29, $r31;
        java.lang.Throwable $r19, $r23;
        java.lang.String $r2, $r3, $r5, $r18, $r30, $r32;
        java.io.PrintStream $r8, $r13, $r17, $r20, $r22, $r24, $r25, $r28;
        arq.cmdline.ModResultsIn r0;
        java.io.InputStream $r11;

        r0 := @this: arq.cmdline.ModResultsIn;

        $r1 = r0.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.query.ResultSet resultSet>;

        if $r1 == null goto label1;

        $r15 = r0.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.query.ResultSet resultSet>;

        return $r15;

     label1:
        $r2 = r0.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename>;

        if $r2 != null goto label2;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("No result file name");

        $r14 = new arq.cmd.TerminationException;

        specialinvoke $r14.<arq.cmd.TerminationException: void <init>(int)>(1);

        throw $r14;

     label2:
        $r3 = r0.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z0 == 0 goto label4;

        $r11 = <java.lang.System: java.io.InputStream in>;

        $r10 = r0.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.sparql.resultset.ResultsFormat inputFormat>;

        $r12 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSet load(java.io.InputStream,com.hp.hpl.jena.sparql.resultset.ResultsFormat)>($r11, $r10);

     label3:
        return $r12;

     label4:
        $r5 = r0.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename>;

        $r4 = r0.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.sparql.resultset.ResultsFormat inputFormat>;

        $r6 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSet load(java.lang.String,com.hp.hpl.jena.sparql.resultset.ResultsFormat)>($r5, $r4);

        if $r6 != null goto label5;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Failed to read the result set");

        $r9 = new arq.cmd.TerminationException;

        specialinvoke $r9.<arq.cmd.TerminationException: void <init>(int)>(9);

        throw $r9;

     label5:
        r0.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.query.ResultSet resultSet> = $r6;

        $r7 = r0.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.query.ResultSet resultSet>;

     label6:
        return $r7;

     label7:
        $r26 := @caughtexception;

        $r28 = <java.lang.System: java.io.PrintStream err>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found: ");

        $r30 = r0.<arq.cmdline.ModResultsIn: java.lang.String resultsFilename>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r32);

        $r33 = new arq.cmd.TerminationException;

        specialinvoke $r33.<arq.cmd.TerminationException: void <init>(int)>(9);

        throw $r33;

     label8:
        $r16 := @caughtexception;

        $r17 = <java.lang.System: java.io.PrintStream err>;

        $r18 = virtualinvoke $r16.<com.hp.hpl.jena.sparql.ARQInternalErrorException: java.lang.String getMessage()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r19 = virtualinvoke $r16.<com.hp.hpl.jena.sparql.ARQInternalErrorException: java.lang.Throwable getCause()>();

        if $r19 == null goto label9;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Cause:");

        $r23 = virtualinvoke $r16.<com.hp.hpl.jena.sparql.ARQInternalErrorException: java.lang.Throwable getCause()>();

        $r24 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r23.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r24);

        $r25 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.io.PrintStream: void println()>();

     label9:
        $r20 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void printStackTrace(java.io.PrintStream)>($r20);

        $r21 = new arq.cmd.TerminationException;

        specialinvoke $r21.<arq.cmd.TerminationException: void <init>(int)>(99);

        throw $r21;

        catch com.hp.hpl.jena.shared.NotFoundException from label2 to label3 with label7;
        catch com.hp.hpl.jena.shared.NotFoundException from label4 to label6 with label7;
        catch com.hp.hpl.jena.sparql.ARQInternalErrorException from label2 to label3 with label8;
        catch com.hp.hpl.jena.sparql.ARQInternalErrorException from label4 to label6 with label8;
    }

    public com.hp.hpl.jena.sparql.resultset.ResultsFormat getInputFormat()
    {
        arq.cmdline.ModResultsIn r0;
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r1;

        r0 := @this: arq.cmdline.ModResultsIn;

        $r1 = r0.<arq.cmdline.ModResultsIn: com.hp.hpl.jena.sparql.resultset.ResultsFormat inputFormat>;

        return $r1;
    }
}
