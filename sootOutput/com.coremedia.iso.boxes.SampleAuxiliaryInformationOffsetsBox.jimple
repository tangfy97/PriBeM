public class com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private java.util.List offsets;
    private java.lang.String auxInfoType;
    private java.lang.String auxInfoTypeParameter;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5;

    public void <init>()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        java.util.LinkedList $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("saio");

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets> = $r1;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        long $l6;
        java.util.List $r1, $r2;
        byte $b9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getVersion()>();

        if $i0 != 0 goto label1;

        $r2 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $i7 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i8 = 4 * $i7;

        goto label2;

     label1:
        $r1 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i8 = 8 * $i1;

     label2:
        $i2 = 8 + $i8;

        $i3 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getFlags()>();

        $i4 = $i3 & 1;

        if $i4 != 1 goto label3;

        $b9 = 8;

        goto label4;

     label3:
        $b9 = 0;

     label4:
        $i5 = $i2 + $b9;

        $l6 = (long) $i5;

        return $l6;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        byte[] $r8, $r10;
        long $l3, $l5, $l6;
        java.nio.ByteBuffer r1;
        java.lang.Long r6;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r7, $r9;
        boolean $z0;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        java.util.Iterator $r4;
        java.util.List $r2, $r3;
        java.lang.Object $r5;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        $r7 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.lang.String auxInfoType>;

        $r8 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r7);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r8);

        $r9 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.lang.String auxInfoTypeParameter>;

        $r10 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r9);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r10);

     label1:
        $r2 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $l3 = (long) $i2;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l3);

        $r3 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Long) $r5;

        $i4 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getVersion()>();

        if $i4 != 0 goto label3;

        $l6 = virtualinvoke r6.<java.lang.Long: long longValue()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l6);

        goto label4;

     label3:
        $l5 = virtualinvoke r6.<java.lang.Long: long longValue()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt64(java.nio.ByteBuffer,long)>(r1, $l5);

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        long $l2, $l5, $l6;
        java.nio.ByteBuffer r1;
        java.lang.Long $r4, $r6;
        int $i0, $i1, $i3, $i4, i7;
        java.lang.String $r7, $r8;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        java.util.List $r2, $r3, $r5;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        $r7 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String read4cc(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.lang.String auxInfoType> = $r7;

        $r8 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String read4cc(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.lang.String auxInfoTypeParameter> = $r8;

     label1:
        $l2 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i3 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l2);

        $r2 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        i7 = 0;

        goto label5;

     label2:
        $i4 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getVersion()>();

        if $i4 != 0 goto label3;

        $r5 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $l6 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label4;

     label3:
        $r3 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $l5 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt64(java.nio.ByteBuffer)>(r1);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label4:
        i7 = i7 + 1;

     label5:
        if i7 < $i3 goto label2;

        return;
    }

    public java.lang.String getAuxInfoType()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.String $r4;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.lang.String auxInfoType>;

        return $r4;
    }

    public void setAuxInfoType(java.lang.String)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r1;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        java.lang.String r0;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.lang.String auxInfoType> = r0;

        return;
    }

    public java.lang.String getAuxInfoTypeParameter()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.String $r4;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.lang.String auxInfoTypeParameter>;

        return $r4;
    }

    public void setAuxInfoTypeParameter(java.lang.String)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r1;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        java.lang.String r0;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.lang.String auxInfoTypeParameter> = r0;

        return;
    }

    public java.util.List getOffsets()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        java.util.List $r4;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        return $r4;
    }

    public void setOffsets(java.util.List)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r1;
        java.util.List r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        r0 := @parameter0: java.util.List;

        $r2 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets> = r0;

        return;
    }

    static void <clinit>()
    {
        <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.lang.String TYPE> = "saio";

        staticinvoke <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: void ajc$preClinit()>();

        return;
    }

    private static void ajc$preClinit()
    {
        org.aspectj.runtime.reflect.Factory $r0;
        org.aspectj.lang.JoinPoint$StaticPart $r2, $r4, $r6, $r8, $r10, $r12;
        org.aspectj.lang.reflect.MethodSignature $r1, $r3, $r5, $r7, $r9, $r11;

        $r0 = new org.aspectj.runtime.reflect.Factory;

        specialinvoke $r0.<org.aspectj.runtime.reflect.Factory: void <init>(java.lang.String,java.lang.Class)>("SampleAuxiliaryInformationOffsetsBox.java", class "Lcom/coremedia/iso/boxes/SampleAuxiliaryInformationOffsetsBox;");

        $r1 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getAuxInfoType", "com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox", "", "", "", "java.lang.String");

        $r2 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r1, 109);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> = $r2;

        $r3 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setAuxInfoType", "com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox", "java.lang.String", "auxInfoType", "", "void");

        $r4 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r3, 113);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1> = $r4;

        $r5 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getAuxInfoTypeParameter", "com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox", "", "", "", "java.lang.String");

        $r6 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r5, 117);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2> = $r6;

        $r7 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setAuxInfoTypeParameter", "com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox", "java.lang.String", "auxInfoTypeParameter", "", "void");

        $r8 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r7, 121);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3> = $r8;

        $r9 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getOffsets", "com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox", "", "", "", "java.util.List");

        $r10 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r9, 125);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4> = $r10;

        $r11 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setOffsets", "com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox", "java.util.List", "offsets", "", "void");

        $r12 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r11, 129);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5> = $r12;

        return;
    }
}
