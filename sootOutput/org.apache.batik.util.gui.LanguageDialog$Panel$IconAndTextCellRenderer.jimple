public class org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer extends javax.swing.JLabel implements javax.swing.ListCellRenderer
{
    private final org.apache.batik.util.gui.LanguageDialog$Panel this$0;

    public void <init>(org.apache.batik.util.gui.LanguageDialog$Panel)
    {
        org.apache.batik.util.gui.LanguageDialog$Panel r1;
        org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer r0;
        javax.swing.border.Border $r2;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer;

        r1 := @parameter0: org.apache.batik.util.gui.LanguageDialog$Panel;

        specialinvoke r0.<javax.swing.JLabel: void <init>()>();

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer: org.apache.batik.util.gui.LanguageDialog$Panel this$0> = r1;

        virtualinvoke r0.<javax.swing.JComponent: void setOpaque(boolean)>(1);

        $r2 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(3, 3, 3, 3);

        virtualinvoke r0.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r2);

        return;
    }

    public java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
    {
        java.awt.Color $r9, $r10, $r11, $r12;
        org.apache.batik.util.gui.LanguageDialog$Panel $r3, $r5;
        int i0;
        java.lang.String r1, $r4;
        org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer r2;
        boolean $z0, z1, z2;
        java.awt.Font $r8;
        javax.swing.JList r7;
        javax.swing.Icon $r6;
        java.lang.Object r0;

        r2 := @this: org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer;

        r7 := @parameter0: javax.swing.JList;

        r0 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r1 = (java.lang.String) r0;

        $r3 = r2.<org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer: org.apache.batik.util.gui.LanguageDialog$Panel this$0>;

        $r4 = virtualinvoke $r3.<org.apache.batik.util.gui.LanguageDialog$Panel: java.lang.String getCountryText(java.lang.String)>(r1);

        virtualinvoke r2.<javax.swing.JLabel: void setText(java.lang.String)>($r4);

        $r5 = r2.<org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer: org.apache.batik.util.gui.LanguageDialog$Panel this$0>;

        $r6 = virtualinvoke $r5.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.Icon getCountryIcon(java.lang.String)>(r1);

        virtualinvoke r2.<javax.swing.JLabel: void setIcon(javax.swing.Icon)>($r6);

        $z0 = virtualinvoke r7.<java.awt.Component: boolean isEnabled()>();

        virtualinvoke r2.<javax.swing.JComponent: void setEnabled(boolean)>($z0);

        $r8 = virtualinvoke r7.<java.awt.Component: java.awt.Font getFont()>();

        virtualinvoke r2.<javax.swing.JComponent: void setFont(java.awt.Font)>($r8);

        if z1 == 0 goto label1;

        $r11 = virtualinvoke r7.<javax.swing.JList: java.awt.Color getSelectionBackground()>();

        virtualinvoke r2.<javax.swing.JComponent: void setBackground(java.awt.Color)>($r11);

        $r12 = virtualinvoke r7.<javax.swing.JList: java.awt.Color getSelectionForeground()>();

        virtualinvoke r2.<javax.swing.JComponent: void setForeground(java.awt.Color)>($r12);

        goto label2;

     label1:
        $r9 = virtualinvoke r7.<java.awt.Component: java.awt.Color getBackground()>();

        virtualinvoke r2.<javax.swing.JComponent: void setBackground(java.awt.Color)>($r9);

        $r10 = virtualinvoke r7.<java.awt.Component: java.awt.Color getForeground()>();

        virtualinvoke r2.<javax.swing.JComponent: void setForeground(java.awt.Color)>($r10);

     label2:
        return r2;
    }
}
