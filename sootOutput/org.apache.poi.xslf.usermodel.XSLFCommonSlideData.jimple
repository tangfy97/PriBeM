public class org.apache.poi.xslf.usermodel.XSLFCommonSlideData extends java.lang.Object
{
    private final org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData data;

    public void <init>(org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData)
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData r1;
        org.apache.poi.xslf.usermodel.XSLFCommonSlideData r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFCommonSlideData;

        r1 := @parameter0: org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xslf.usermodel.XSLFCommonSlideData: org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData data> = r1;

        return;
    }

    public java.util.List getDrawingText()
    {
        org.apache.poi.xslf.usermodel.DrawingTableCell r26;
        org.apache.poi.xslf.usermodel.DrawingTableRow[] $r23;
        org.apache.xmlbeans.SchemaType $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData $r10;
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData $r1;
        java.util.List $r4, $r6;
        java.lang.StringBuilder $r12, $r13, $r17, $r18;
        javax.xml.namespace.QName $r15;
        org.apache.poi.xslf.usermodel.DrawingTableRow r24;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame r33;
        org.apache.xmlbeans.XmlCursor $r11;
        java.util.ArrayList $r3;
        org.apache.poi.xslf.usermodel.DrawingTable $r21;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape $r2, r32;
        int i0, i1, i2, i3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTable $r22;
        java.lang.String $r16, $r19, $r28;
        org.apache.xmlbeans.XmlObject $r20, r34;
        org.apache.poi.POIXMLException $r31;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject $r9;
        java.util.Iterator $r5, $r7;
        org.apache.poi.xslf.usermodel.DrawingTextBody $r27;
        org.apache.xmlbeans.XmlException $r30;
        org.apache.poi.xslf.usermodel.XSLFCommonSlideData r0;
        org.apache.poi.xslf.usermodel.DrawingTableCell[] $r25;
        java.lang.Object $r8, $r29;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFCommonSlideData;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFCommonSlideData: org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData data>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData: org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape getSpTree()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFCommonSlideData: void processShape(org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape,java.util.List)>($r2, $r3);

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape: java.util.List getGrpSpList()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r29 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r32 = (org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape) $r29;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFCommonSlideData: void processShape(org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape,java.util.List)>(r32, $r3);

        goto label01;

     label02:
        $r6 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape: java.util.List getGraphicFrameList()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame) $r8;

        $r9 = interfaceinvoke r33.<org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame: org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject getGraphic()>();

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject: org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData getGraphicData()>();

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("declare namespace pic=\'");

        $r14 = <org.openxmlformats.schemas.drawingml.x2006.main.CTTable: org.apache.xmlbeans.SchemaType type>;

        $r15 = interfaceinvoke $r14.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r16 = virtualinvoke $r15.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' .//pic:tbl");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.xmlbeans.XmlCursor: void selectPath(java.lang.String)>($r19);

     label04:
        $z2 = interfaceinvoke $r11.<org.apache.xmlbeans.XmlCursor: boolean toNextSelection()>();

        if $z2 == 0 goto label13;

        $r20 = interfaceinvoke $r11.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        r34 = $r20;

        $z3 = $r20 instanceof org.apache.xmlbeans.impl.values.XmlAnyTypeImpl;

        if $z3 == 0 goto label08;

     label05:
        $r28 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        r34 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTTable$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTTable parse(java.lang.String)>($r28);

     label06:
        goto label08;

     label07:
        $r30 := @caughtexception;

        $r31 = new org.apache.poi.POIXMLException;

        specialinvoke $r31.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r30);

        throw $r31;

     label08:
        $z4 = r34 instanceof org.openxmlformats.schemas.drawingml.x2006.main.CTTable;

        if $z4 == 0 goto label12;

        $r21 = new org.apache.poi.xslf.usermodel.DrawingTable;

        $r22 = (org.openxmlformats.schemas.drawingml.x2006.main.CTTable) r34;

        specialinvoke $r21.<org.apache.poi.xslf.usermodel.DrawingTable: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTable)>($r22);

        $r23 = virtualinvoke $r21.<org.apache.poi.xslf.usermodel.DrawingTable: org.apache.poi.xslf.usermodel.DrawingTableRow[] getRows()>();

        i0 = lengthof $r23;

        i2 = 0;

     label09:
        if i2 >= i0 goto label12;

        r24 = $r23[i2];

        $r25 = virtualinvoke r24.<org.apache.poi.xslf.usermodel.DrawingTableRow: org.apache.poi.xslf.usermodel.DrawingTableCell[] getCells()>();

        i1 = lengthof $r25;

        i3 = 0;

     label10:
        if i3 >= i1 goto label11;

        r26 = $r25[i3];

        $r27 = virtualinvoke r26.<org.apache.poi.xslf.usermodel.DrawingTableCell: org.apache.poi.xslf.usermodel.DrawingTextBody getTextBody()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r27);

        i3 = i3 + 1;

        goto label10;

     label11:
        i2 = i2 + 1;

        goto label09;

     label12:
        goto label04;

     label13:
        interfaceinvoke $r11.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label03;

     label14:
        return $r3;

        catch org.apache.xmlbeans.XmlException from label05 to label06 with label07;
    }

    public java.util.List getText()
    {
        java.util.Iterator $r3;
        java.util.ArrayList $r0;
        java.util.List $r2, $r7;
        org.apache.poi.xslf.usermodel.DrawingTextBody r5;
        org.apache.poi.xslf.usermodel.DrawingParagraph[] $r6;
        org.apache.poi.xslf.usermodel.XSLFCommonSlideData r1;
        java.lang.Object $r4;
        boolean $z0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFCommonSlideData;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFCommonSlideData: java.util.List getDrawingText()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.poi.xslf.usermodel.DrawingTextBody) $r4;

        $r6 = virtualinvoke r5.<org.apache.poi.xslf.usermodel.DrawingTextBody: org.apache.poi.xslf.usermodel.DrawingParagraph[] getParagraphs()>();

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        goto label1;

     label2:
        return $r0;
    }

    private void processShape(org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape, java.util.List)
    {
        org.apache.poi.xslf.usermodel.DrawingTextPlaceholder $r10;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTShape r4;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder $r11;
        java.util.List $r1, r9;
        org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps $r7;
        org.apache.poi.xslf.usermodel.DrawingTextBody $r8, r13;
        org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual $r6;
        org.apache.poi.xslf.usermodel.XSLFCommonSlideData r12;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r5;
        java.lang.Object $r3;

        r12 := @this: org.apache.poi.xslf.usermodel.XSLFCommonSlideData;

        r0 := @parameter0: org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape;

        r9 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape: java.util.List getSpList()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.openxmlformats.schemas.presentationml.x2006.main.CTShape) $r3;

        $r5 = interfaceinvoke r4.<org.openxmlformats.schemas.presentationml.x2006.main.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        if $r5 != null goto label2;

        goto label1;

     label2:
        $r6 = interfaceinvoke r4.<org.openxmlformats.schemas.presentationml.x2006.main.CTShape: org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual getNvSpPr()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual: org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps getNvPr()>();

        $z0 = interfaceinvoke $r7.<org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps: boolean isSetPh()>();

        if $z0 == 0 goto label3;

        $r10 = new org.apache.poi.xslf.usermodel.DrawingTextPlaceholder;

        $r11 = interfaceinvoke $r7.<org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps: org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder getPh()>();

        specialinvoke $r10.<org.apache.poi.xslf.usermodel.DrawingTextPlaceholder: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody,org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder)>($r5, $r11);

        r13 = $r10;

        goto label4;

     label3:
        $r8 = new org.apache.poi.xslf.usermodel.DrawingTextBody;

        specialinvoke $r8.<org.apache.poi.xslf.usermodel.DrawingTextBody: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody)>($r5);

        r13 = $r8;

     label4:
        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r13);

        goto label1;

     label5:
        return;
    }
}
