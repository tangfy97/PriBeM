public class ucar.nc2.ft.point.standard.plug.GempakCdm extends ucar.nc2.ft.point.standard.TableConfigurerImpl
{
    private static final java.lang.String Convention;

    public void <init>()
    {
        ucar.nc2.ft.point.standard.plug.GempakCdm r0;

        r0 := @this: ucar.nc2.ft.point.standard.plug.GempakCdm;

        specialinvoke r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: void <init>()>();

        return;
    }

    public boolean isMine(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.ft.point.standard.plug.GempakCdm r8;
        java.util.StringTokenizer $r2;
        java.lang.String $r1, $r6, $r7;
        ucar.nc2.constants.FeatureType r9;
        boolean $z0, $z1, z2, $z3, $z4;
        ucar.nc2.constants.CF$FeatureType $r3, $r4, $r5, r10;
        ucar.nc2.dataset.NetcdfDataset r0;

        r8 := @this: ucar.nc2.ft.point.standard.plug.GempakCdm;

        r9 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        z2 = 0;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Conventions", null);

        if $r1 != null goto label01;

        return 0;

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("GEMPAK/CDM");

        if $z0 == 0 goto label02;

        z2 = 1;

     label02:
        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, ",");

     label03:
        $z3 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z3 == 0 goto label05;

        $r6 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("GEMPAK/CDM");

        if $z1 == 0 goto label04;

        z2 = 1;

     label04:
        goto label03;

     label05:
        if z2 != 0 goto label06;

        return 0;

     label06:
        $r3 = staticinvoke <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType getFeatureTypeFromGlobalAttribute(ucar.nc2.NetcdfFile)>(r0);

        r10 = $r3;

        if $r3 != null goto label07;

        r10 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType point>;

     label07:
        $r4 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType timeSeries>;

        if r10 == $r4 goto label08;

        $r5 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType timeSeriesProfile>;

        if r10 != $r5 goto label09;

     label08:
        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        return $z4;
    }

    public ucar.nc2.ft.point.standard.TableConfig getConfig(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        java.lang.IllegalStateException $r10;
        ucar.nc2.ft.point.standard.plug.GempakCdm r3;
        java.util.Formatter r4;
        ucar.nc2.ft.point.standard.TableConfig $r5, $r8, $r9;
        int[] $r2;
        int $i0, $i1;
        java.lang.String $r14;
        ucar.nc2.constants.FeatureType r6, $r7;
        ucar.nc2.constants.CF$FeatureType $r1, r15;
        java.lang.StringBuilder $r11, $r12, $r13;
        ucar.nc2.dataset.NetcdfDataset r0;

        r3 := @this: ucar.nc2.ft.point.standard.plug.GempakCdm;

        r6 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r4 := @parameter2: java.util.Formatter;

        $r1 = staticinvoke <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType getFeatureTypeFromGlobalAttribute(ucar.nc2.NetcdfFile)>(r0);

        r15 = $r1;

        if $r1 != null goto label1;

        r15 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType point>;

     label1:
        $r2 = <ucar.nc2.ft.point.standard.plug.GempakCdm$1: int[] $SwitchMap$ucar$nc2$constants$CF$FeatureType>;

        $i0 = virtualinvoke r15.<ucar.nc2.constants.CF$FeatureType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label5;
            default: goto label6;
        };

     label2:
        return null;

     label3:
        $r7 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType POINT>;

        if r6 != $r7 goto label4;

        $r9 = virtualinvoke r3.<ucar.nc2.ft.point.standard.plug.GempakCdm: ucar.nc2.ft.point.standard.TableConfig getStationAsPointConfig(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r0, r4);

        return $r9;

     label4:
        $r8 = virtualinvoke r3.<ucar.nc2.ft.point.standard.plug.GempakCdm: ucar.nc2.ft.point.standard.TableConfig getStationConfig(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r0, r4);

        return $r8;

     label5:
        $r5 = virtualinvoke r3.<ucar.nc2.ft.point.standard.plug.GempakCdm: ucar.nc2.ft.point.standard.TableConfig getStationProfileConfig(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r0, r4);

        return $r5;

     label6:
        $r10 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unimplemented feature ftype= ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r10;
    }

    protected ucar.nc2.ft.point.standard.TableConfig getStationConfig(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.plug.GempakCdm r46;
        ucar.nc2.dataset.CoordinateAxis $r2, $r4, $r11, $r17;
        ucar.nc2.ft.point.standard.TableConfig $r5, $r19;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r26, $r49;
        byte $b8;
        ucar.nc2.constants.AxisType $r1, $r3, $r10, $r16;
        ucar.nc2.constants.FeatureType $r6;
        ucar.nc2.ft.point.standard.JoinArray$Type $r30;
        java.lang.Object[] $r32, $r34, $r36, $r38, $r42, $r43, $r44, $r45;
        long $l7;
        ucar.nc2.Structure $r33, r51;
        java.lang.String $r7, $r8, $r9, $r12, $r13, $r14, $r20, $r21, $r22, $r24, $r25, $r27, $r37, $r39;
        ucar.nc2.Dimension $r18, $r35, $r40, $r41, r47;
        ucar.nc2.dataset.NetcdfDataset r0;
        java.util.Formatter r31;
        ucar.nc2.ft.point.standard.JoinArray $r29;
        boolean z0, $z1, $z2, $z3;
        ucar.nc2.ft.point.standard.Table$Type $r23, $r48, r50, $r52;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        ucar.nc2.Variable $r15, $r28;

        r46 := @this: ucar.nc2.ft.point.standard.plug.GempakCdm;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r31 := @parameter1: java.util.Formatter;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        if $r2 != null goto label01;

        $r45 = newarray (java.lang.Object)[0];

        virtualinvoke r31.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Must have a Latitude coordinate", $r45);

        return null;

     label01:
        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r4 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r3);

        if $r4 != null goto label02;

        $r44 = newarray (java.lang.Object)[0];

        virtualinvoke r31.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Must have a Longitude coordinate", $r44);

        return null;

     label02:
        $i0 = virtualinvoke $r2.<ucar.nc2.Variable: int getRank()>();

        $i1 = virtualinvoke $r4.<ucar.nc2.Variable: int getRank()>();

        if $i0 == $i1 goto label03;

        $r43 = newarray (java.lang.Object)[0];

        virtualinvoke r31.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Lat and Lon coordinate must have same rank", $r43);

        return null;

     label03:
        $i2 = virtualinvoke $r2.<ucar.nc2.Variable: int getRank()>();

        if $i2 != 0 goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        z0 = $z3;

        $i3 = virtualinvoke $r2.<ucar.nc2.Variable: int getRank()>();

        if $i3 != 1 goto label06;

        $l7 = virtualinvoke $r2.<ucar.nc2.Variable: long getSize()>();

        $b8 = $l7 cmp 1L;

        if $b8 != 0 goto label06;

        goto label06;

     label06:
        r47 = null;

        if z0 != 0 goto label08;

        $r40 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r41 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if $r40 == $r41 goto label07;

        $r42 = newarray (java.lang.Object)[0];

        virtualinvoke r31.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Lat and Lon coordinate must have same size", $r42);

        return null;

     label07:
        r47 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

     label08:
        $z1 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: boolean hasRecordStructure(ucar.nc2.dataset.NetcdfDataset)>(r0);

        if z0 == 0 goto label09;

        $r48 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Top>;

        goto label10;

     label09:
        $r48 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

     label10:
        $r5 = new ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke $r5.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r48, "station");

        $r6 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r5.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = $r6;

        if $z1 == 0 goto label11;

        $r49 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        goto label12;

     label11:
        $r49 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

     label12:
        $r5.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r49;

        $r7 = virtualinvoke r47.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r5.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r7;

        $r8 = virtualinvoke $r2.<ucar.nc2.Variable: java.lang.String getName()>();

        $r5.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r8;

        $r9 = virtualinvoke $r4.<ucar.nc2.Variable: java.lang.String getName()>();

        $r5.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r9;

        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r11 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r10);

        if $r11 == null goto label13;

        $r39 = virtualinvoke $r11.<ucar.nc2.Variable: java.lang.String getName()>();

        $r5.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnAlt> = $r39;

     label13:
        $r12 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: java.lang.String getNameOfVariableWithAttribute(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "standard_name", "station_id");

        $r5.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId> = $r12;

        $r13 = $r5.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId>;

        if $r13 != null goto label14;

        $r38 = newarray (java.lang.Object)[0];

        virtualinvoke r31.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Station id variable with standard name station_id", $r38);

        return null;

     label14:
        $r14 = $r5.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId>;

        $r15 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r14);

        if z0 != 0 goto label15;

        $r35 = virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z2 = virtualinvoke $r35.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>(r47);

        if $z2 != 0 goto label15;

        $r36 = newarray (java.lang.Object)[2];

        $r37 = $r5.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId>;

        $r36[0] = $r37;

        $r36[1] = r47;

        virtualinvoke r31.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Station id (%s) outer dimension must match latitude/longitude dimension (%s)", $r36);

        return null;

     label15:
        $r16 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r17 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r16);

        if $r17 != null goto label16;

        $r34 = newarray (java.lang.Object)[0];

        virtualinvoke r31.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Must have a Time coordinate", $r34);

        return null;

     label16:
        $i4 = virtualinvoke $r17.<ucar.nc2.dataset.VariableDS: int getRank()>();

        $i5 = $i4 - 1;

        $r18 = virtualinvoke $r17.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i5);

        r50 = null;

        r51 = null;

        if null != null goto label17;

        $r33 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Structure getStructureWithDimensions(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, r47, $r18);

        r51 = $r33;

        if $r33 == null goto label17;

        r50 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimStructure>;

     label17:
        if r50 != null goto label18;

        $i6 = virtualinvoke $r17.<ucar.nc2.dataset.VariableDS: int getRank()>();

        if $i6 != 2 goto label18;

        r50 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInner>;

     label18:
        if r50 != null goto label19;

        $r32 = newarray (java.lang.Object)[0];

        virtualinvoke r31.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Cannot figure out Station/obs table structure", $r32);

        return null;

     label19:
        $r19 = new ucar.nc2.ft.point.standard.TableConfig;

        $r20 = virtualinvoke $r18.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r19.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>(r50, $r20);

        $r21 = virtualinvoke $r18.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r19.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r21;

        $r22 = virtualinvoke $r17.<ucar.nc2.dataset.VariableDS: java.lang.String getName()>();

        $r19.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r22;

        $r19.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String missingVar> = "_isMissing";

        virtualinvoke $r5.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r19);

        $r23 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimStructure>;

        if r50 != $r23 goto label20;

        $r25 = virtualinvoke r51.<ucar.nc2.Structure: java.lang.String getName()>();

        $r19.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r25;

        $r26 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        $r19.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r26;

        $r27 = virtualinvoke $r17.<ucar.nc2.dataset.VariableDS: java.lang.String getShortName()>();

        $r28 = virtualinvoke r51.<ucar.nc2.Structure: ucar.nc2.Variable findVariable(java.lang.String)>($r27);

        if $r28 != null goto label20;

        $r29 = new ucar.nc2.ft.point.standard.JoinArray;

        $r30 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type raw>;

        specialinvoke $r29.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r17, $r30, 0);

        virtualinvoke $r19.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r29);

     label20:
        $r52 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInner>;

        if r50 != $r52 goto label21;

        $r24 = virtualinvoke $r18.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r19.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r24;

     label21:
        if 0 == 0 goto label22;

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

     label22:
        return $r5;
    }

    protected ucar.nc2.ft.point.standard.TableConfig getStationAsPointConfig(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.plug.GempakCdm r44;
        java.util.Formatter r35;
        ucar.nc2.dataset.CoordinateAxis $r2, $r4, $r6, $r8;
        ucar.nc2.ft.point.standard.TableConfig $r12;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r16;
        ucar.nc2.ft.point.standard.JoinArray $r26;
        byte $b11;
        ucar.nc2.constants.AxisType $r1, $r3, $r5, $r7;
        ucar.nc2.ft.point.standard.JoinMuiltdimStructure $r25;
        ucar.nc2.constants.FeatureType $r17;
        boolean z0, $z1, $z2;
        ucar.ma2.DataType $r32, $r33;
        java.util.List $r22;
        ucar.nc2.ft.point.standard.JoinArray$Type $r27;
        ucar.nc2.dataset.StructurePseudoDS $r24;
        java.lang.Object[] $r36, $r37, $r40, $r41, $r42, $r43;
        long $l10;
        ucar.nc2.Structure $r11;
        java.util.ArrayList $r21;
        ucar.nc2.ft.point.standard.Table$Type r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        ucar.nc2.Variable r29;
        java.lang.String $r13, $r14, $r15, $r18, $r19, $r20, $r31, $r34;
        java.util.Iterator $r23;
        ucar.nc2.Dimension $r9, $r30, $r38, $r39, r45;
        java.lang.Object $r28;
        ucar.nc2.dataset.NetcdfDataset r0;

        r44 := @this: ucar.nc2.ft.point.standard.plug.GempakCdm;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r35 := @parameter1: java.util.Formatter;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        if $r2 != null goto label01;

        $r43 = newarray (java.lang.Object)[0];

        virtualinvoke r35.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Must have a Latitude coordinate", $r43);

        return null;

     label01:
        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r4 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r3);

        if $r4 != null goto label02;

        $r42 = newarray (java.lang.Object)[0];

        virtualinvoke r35.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Must have a Longitude coordinate", $r42);

        return null;

     label02:
        $i0 = virtualinvoke $r2.<ucar.nc2.Variable: int getRank()>();

        $i1 = virtualinvoke $r4.<ucar.nc2.Variable: int getRank()>();

        if $i0 == $i1 goto label03;

        $r41 = newarray (java.lang.Object)[0];

        virtualinvoke r35.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Lat and Lon coordinate must have same rank", $r41);

        return null;

     label03:
        $i2 = virtualinvoke $r2.<ucar.nc2.Variable: int getRank()>();

        if $i2 != 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        z0 = $z1;

        $i3 = virtualinvoke $r2.<ucar.nc2.Variable: int getRank()>();

        if $i3 != 1 goto label06;

        $l10 = virtualinvoke $r2.<ucar.nc2.Variable: long getSize()>();

        $b11 = $l10 cmp 1L;

        if $b11 != 0 goto label06;

        goto label06;

     label06:
        r45 = null;

        if z0 != 0 goto label08;

        $r38 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r39 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if $r38 == $r39 goto label07;

        $r40 = newarray (java.lang.Object)[0];

        virtualinvoke r35.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Lat and Lon coordinate must have same size", $r40);

        return null;

     label07:
        r45 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

     label08:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r5);

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r7);

        if $r8 != null goto label09;

        $r37 = newarray (java.lang.Object)[0];

        virtualinvoke r35.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Must have a Time coordinate", $r37);

        return null;

     label09:
        $i4 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: int getRank()>();

        $i5 = $i4 - 1;

        $r9 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i5);

        r10 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        $r11 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Structure getStructureWithDimensions(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r0, r45, $r9);

        if $r11 != null goto label10;

        $r36 = newarray (java.lang.Object)[0];

        virtualinvoke r35.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Cannot figure out StationAsPoint table structure", $r36);

        return null;

     label10:
        $r12 = new ucar.nc2.ft.point.standard.TableConfig;

        $r13 = virtualinvoke $r9.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r12.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>(r10, $r13);

        $r14 = virtualinvoke $r9.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r12.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r14;

        $r15 = virtualinvoke $r11.<ucar.nc2.Structure: java.lang.String getName()>();

        $r12.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r15;

        $r16 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        $r12.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r16;

        $r17 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType POINT>;

        $r12.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = $r17;

        $r18 = virtualinvoke $r2.<ucar.nc2.Variable: java.lang.String getName()>();

        $r12.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r18;

        $r19 = virtualinvoke $r4.<ucar.nc2.Variable: java.lang.String getName()>();

        $r12.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r19;

        $r20 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: java.lang.String getName()>();

        $r12.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r20;

        if $r6 == null goto label11;

        $r34 = virtualinvoke $r6.<ucar.nc2.Variable: java.lang.String getName()>();

        $r12.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String elev> = $r34;

     label11:
        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>(int)>(30);

        $r22 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z2 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r28 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r29 = (ucar.nc2.Variable) $r28;

        $r30 = virtualinvoke r29.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if $r30 != r45 goto label14;

        $i8 = virtualinvoke r29.<ucar.nc2.Variable: int getRank()>();

        if $i8 == 1 goto label13;

        $i9 = virtualinvoke r29.<ucar.nc2.Variable: int getRank()>();

        if $i9 != 2 goto label14;

        $r32 = virtualinvoke r29.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r33 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r32 != $r33 goto label14;

     label13:
        $r31 = virtualinvoke r29.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r31);

     label14:
        goto label12;

     label15:
        $r24 = new ucar.nc2.dataset.StructurePseudoDS;

        specialinvoke $r24.<ucar.nc2.dataset.StructurePseudoDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,java.util.List,ucar.nc2.Dimension)>(r0, null, "stnStruct", $r21, r45);

        $r25 = new ucar.nc2.ft.point.standard.JoinMuiltdimStructure;

        $i6 = virtualinvoke $r9.<ucar.nc2.Dimension: int getLength()>();

        specialinvoke $r25.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: void <init>(ucar.nc2.dataset.StructureDS,int)>($r24, $i6);

        virtualinvoke $r12.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r25);

        $r26 = new ucar.nc2.ft.point.standard.JoinArray;

        $r27 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type modulo>;

        $i7 = virtualinvoke $r9.<ucar.nc2.Dimension: int getLength()>();

        specialinvoke $r26.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r8, $r27, $i7);

        virtualinvoke $r12.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r26);

        if 0 == 0 goto label16;

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

     label16:
        return $r12;
    }

    protected ucar.nc2.ft.point.standard.TableConfig getStationProfileConfig(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.plug.GempakCdm r0;
        java.util.Formatter r2;
        ucar.nc2.ft.point.standard.TableConfig $r3, $r11, $r20;
        ucar.nc2.dataset.CoordinateAxis $r8, $r26;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r15;
        ucar.nc2.ft.point.standard.JoinArray $r16;
        ucar.nc2.constants.AxisType $r7;
        ucar.nc2.constants.FeatureType $r6;
        ucar.nc2.ft.point.standard.JoinArray$Type $r17;
        java.lang.Object[] $r28, $r29, $r30, $r31;
        ucar.nc2.Structure $r10, $r23;
        ucar.nc2.ft.point.standard.Table$Type $r12, $r21;
        int $i0, $i1;
        java.lang.String $r4, $r13, $r14, $r18, $r19, $r22, $r24, $r25, $r27;
        ucar.nc2.Dimension $r5, $r9;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.plug.GempakCdm;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.util.Formatter;

        $r3 = virtualinvoke r0.<ucar.nc2.ft.point.standard.plug.GempakCdm: ucar.nc2.ft.point.standard.TableConfig makeStationTable(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r1, r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = $r3.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r4);

        $r6 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION_PROFILE>;

        $r3.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = $r6;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r7);

        if $r8 != null goto label2;

        $r31 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Must have a Time coordinate", $r31);

        return null;

     label2:
        $i0 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: int getRank()>();

        $i1 = $i0 - 1;

        $r9 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i1);

        $r10 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Structure getStructureWithDimensions(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r1, $r5, $r9);

        if $r10 != null goto label3;

        $r30 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Cannot figure out Station/obs table structure", $r30);

        return null;

     label3:
        $r11 = new ucar.nc2.ft.point.standard.TableConfig;

        $r12 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimStructure>;

        $r13 = virtualinvoke $r9.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r11.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r12, $r13);

        $r11.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String missingVar> = "_isMissing";

        $r14 = virtualinvoke $r10.<ucar.nc2.Structure: java.lang.String getName()>();

        $r11.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r14;

        $r15 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        $r11.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r15;

        $r16 = new ucar.nc2.ft.point.standard.JoinArray;

        $r17 = <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type level>;

        specialinvoke $r16.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>($r8, $r17, 1);

        virtualinvoke $r11.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r16);

        $r18 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: java.lang.String getName()>();

        $r11.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r18;

        $r19 = virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: java.lang.String getName()>();

        $r11.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String feature_id> = $r19;

        virtualinvoke $r3.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r11);

        $r20 = new ucar.nc2.ft.point.standard.TableConfig;

        $r21 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type NestedStructure>;

        $r22 = virtualinvoke $r9.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r20.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r21, $r22);

        $r23 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: ucar.nc2.Structure getNestedStructure(ucar.nc2.Structure)>($r10);

        if $r23 != null goto label4;

        $r29 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Cannot find nested Structure for profile", $r29);

        return null;

     label4:
        $r24 = virtualinvoke $r23.<ucar.nc2.Structure: java.lang.String getName()>();

        $r20.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r24;

        $r25 = virtualinvoke $r23.<ucar.nc2.Structure: java.lang.String getShortName()>();

        $r20.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String nestedTableName> = $r25;

        $r26 = virtualinvoke r0.<ucar.nc2.ft.point.standard.plug.GempakCdm: ucar.nc2.dataset.CoordinateAxis findZAxisNotStationAlt(ucar.nc2.dataset.NetcdfDataset)>(r1);

        if $r26 != null goto label5;

        $r28 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Cannot find profile elevation variable", $r28);

        return null;

     label5:
        $r27 = virtualinvoke $r26.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r20.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String elev> = $r27;

        virtualinvoke $r11.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r20);

        return $r3;
    }

    protected ucar.nc2.ft.point.standard.TableConfig makeStationTable(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.plug.GempakCdm r14;
        java.util.Formatter r15;
        ucar.nc2.dataset.CoordinateAxis $r2, $r4;
        ucar.nc2.ft.point.standard.TableConfig $r9;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r10;
        ucar.nc2.constants.AxisType $r1, $r3;
        boolean $z0;
        java.lang.Object[] $r24, $r26, $r27, $r28, $r29, $r30;
        ucar.nc2.ft.point.standard.Table$Type r8;
        int $i0, $i1;
        ucar.nc2.Variable $r22;
        java.lang.String $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r25;
        ucar.nc2.Dimension $r5, $r6, $r7, $r23;
        ucar.nc2.dataset.NetcdfDataset r0;

        r14 := @this: ucar.nc2.ft.point.standard.plug.GempakCdm;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r15 := @parameter1: java.util.Formatter;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        if $r2 != null goto label1;

        $r30 = newarray (java.lang.Object)[0];

        virtualinvoke r15.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Must have a Latitude coordinate", $r30);

        return null;

     label1:
        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r4 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r3);

        if $r4 != null goto label2;

        $r29 = newarray (java.lang.Object)[0];

        virtualinvoke r15.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Must have a Longitude coordinate", $r29);

        return null;

     label2:
        $i0 = virtualinvoke $r2.<ucar.nc2.Variable: int getRank()>();

        $i1 = virtualinvoke $r4.<ucar.nc2.Variable: int getRank()>();

        if $i0 == $i1 goto label3;

        $r28 = newarray (java.lang.Object)[0];

        virtualinvoke r15.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Lat and Lon coordinate must have same rank", $r28);

        return null;

     label3:
        $r5 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r6 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if $r5 == $r6 goto label4;

        $r27 = newarray (java.lang.Object)[0];

        virtualinvoke r15.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Lat and Lon coordinate must have same size", $r27);

        return null;

     label4:
        $r7 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        r8 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        $r9 = new ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke $r9.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>(r8, "station");

        $r10 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

        $r9.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r10;

        $r11 = virtualinvoke $r7.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r11;

        $r12 = virtualinvoke $r2.<ucar.nc2.Variable: java.lang.String getName()>();

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r12;

        $r13 = virtualinvoke $r4.<ucar.nc2.Variable: java.lang.String getName()>();

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r13;

        $r16 = virtualinvoke r14.<ucar.nc2.ft.point.standard.plug.GempakCdm: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r0, "station_id", $r7, r15);

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId> = $r16;

        $r17 = virtualinvoke r14.<ucar.nc2.ft.point.standard.plug.GempakCdm: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r0, "station_desc", $r7, r15);

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnDesc> = $r17;

        $r18 = virtualinvoke r14.<ucar.nc2.ft.point.standard.plug.GempakCdm: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r0, "station_WMO_id", $r7, r15);

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnWmoId> = $r18;

        $r19 = virtualinvoke r14.<ucar.nc2.ft.point.standard.plug.GempakCdm: java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r0, "surface_altitude", $r7, r15);

        $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnAlt> = $r19;

        $r20 = $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId>;

        if $r20 != null goto label5;

        $r26 = newarray (java.lang.Object)[0];

        virtualinvoke r15.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Station id variable with standard name station_id", $r26);

        return null;

     label5:
        $r21 = $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId>;

        $r22 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z0 = virtualinvoke $r23.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label6;

        $r24 = newarray (java.lang.Object)[2];

        $r25 = $r9.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId>;

        $r24[0] = $r25;

        $r24[1] = $r7;

        virtualinvoke r15.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GempakCdm: Station id (%s) outer dimension must match latitude/longitude dimension (%s)", $r24);

        return null;

     label6:
        return $r9;
    }

    public static void <clinit>()
    {
        <ucar.nc2.ft.point.standard.plug.GempakCdm: java.lang.String Convention> = "GEMPAK/CDM";

        return;
    }
}
