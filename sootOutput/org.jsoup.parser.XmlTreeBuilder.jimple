public class org.jsoup.parser.XmlTreeBuilder extends org.jsoup.parser.TreeBuilder
{

    public void <init>()
    {
        org.jsoup.parser.XmlTreeBuilder r0;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        specialinvoke r0.<org.jsoup.parser.TreeBuilder: void <init>()>();

        return;
    }

    protected void initialiseParse(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList)
    {
        org.jsoup.helper.DescendableLinkedList $r5;
        org.jsoup.nodes.Document $r4;
        java.lang.String r1, r2;
        org.jsoup.parser.ParseErrorList r3;
        org.jsoup.parser.XmlTreeBuilder r0;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.jsoup.parser.ParseErrorList;

        specialinvoke r0.<org.jsoup.parser.TreeBuilder: void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>(r1, r2, r3);

        $r5 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;

        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Document doc>;

        virtualinvoke $r5.<org.jsoup.helper.DescendableLinkedList: boolean add(java.lang.Object)>($r4);

        return;
    }

    protected boolean process(org.jsoup.parser.Token)
    {
        org.jsoup.parser.Token$StartTag $r8;
        org.jsoup.parser.XmlTreeBuilder r3;
        int[] $r2;
        int $i0, $i1;
        java.lang.String $r13;
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$Doctype $r4;
        org.jsoup.parser.Token$Character $r5;
        org.jsoup.parser.Token$TokenType $r1, $r11;
        org.jsoup.parser.Token$EndTag $r7;
        org.jsoup.parser.Token$Comment $r6;
        java.lang.StringBuilder $r9, $r10, $r12;

        r3 := @this: org.jsoup.parser.XmlTreeBuilder;

        r0 := @parameter0: org.jsoup.parser.Token;

        $r2 = <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;

        $r1 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $i0 = virtualinvoke $r1.<org.jsoup.parser.Token$TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label7;
        };

     label1:
        $r8 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        virtualinvoke r3.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r8);

        goto label8;

     label2:
        $r7 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        specialinvoke r3.<org.jsoup.parser.XmlTreeBuilder: void popStackToClose(org.jsoup.parser.Token$EndTag)>($r7);

        goto label8;

     label3:
        $r6 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke r3.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r6);

        goto label8;

     label4:
        $r5 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();

        virtualinvoke r3.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r5);

        goto label8;

     label5:
        $r4 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Doctype asDoctype()>();

        virtualinvoke r3.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Doctype)>($r4);

        goto label8;

     label6:
        goto label8;

     label7:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected token type: ");

        $r11 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.jsoup.helper.Validate: void fail(java.lang.String)>($r13);

     label8:
        return 1;
    }

    private void insertNode(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Node r2;
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.nodes.Element $r1;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        r2 := @parameter0: org.jsoup.nodes.Node;

        $r1 = virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        virtualinvoke $r1.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r2);

        return;
    }

    org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)
    {
        org.jsoup.nodes.Attributes $r5;
        org.jsoup.helper.DescendableLinkedList $r7;
        org.jsoup.parser.Token$StartTag r0;
        org.jsoup.parser.Tokeniser $r8;
        org.jsoup.parser.XmlTreeBuilder r4;
        org.jsoup.parser.Tag $r2;
        org.jsoup.nodes.Element $r3;
        java.lang.String $r1, $r6;
        boolean $z0, $z1;

        r4 := @this: org.jsoup.parser.XmlTreeBuilder;

        r0 := @parameter0: org.jsoup.parser.Token$StartTag;

        $r1 = virtualinvoke r0.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $r2 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>($r1);

        $r3 = new org.jsoup.nodes.Element;

        $r6 = r4.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        $r5 = r0.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;

        specialinvoke $r3.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>($r2, $r6, $r5);

        specialinvoke r4.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>($r3);

        $z0 = virtualinvoke r0.<org.jsoup.parser.Token$StartTag: boolean isSelfClosing()>();

        if $z0 == 0 goto label1;

        $r8 = r4.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;

        virtualinvoke $r8.<org.jsoup.parser.Tokeniser: void acknowledgeSelfClosingFlag()>();

        $z1 = virtualinvoke $r2.<org.jsoup.parser.Tag: boolean isKnownTag()>();

        if $z1 != 0 goto label2;

        virtualinvoke $r2.<org.jsoup.parser.Tag: org.jsoup.parser.Tag setSelfClosing()>();

        goto label2;

     label1:
        $r7 = r4.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;

        virtualinvoke $r7.<org.jsoup.helper.DescendableLinkedList: boolean add(java.lang.Object)>($r3);

     label2:
        return $r3;
    }

    void insert(org.jsoup.parser.Token$Comment)
    {
        org.jsoup.nodes.Comment $r0;
        org.jsoup.parser.XmlTreeBuilder r3;
        org.jsoup.nodes.XmlDeclaration $r7;
        org.jsoup.nodes.Node r9;
        int $i0;
        org.jsoup.parser.Token$Comment r1;
        java.lang.String $r2, $r4, $r5, $r6, $r8;
        boolean $z0, $z1, $z2, $z3;

        r3 := @this: org.jsoup.parser.XmlTreeBuilder;

        r1 := @parameter0: org.jsoup.parser.Token$Comment;

        $r0 = new org.jsoup.nodes.Comment;

        $r2 = virtualinvoke r1.<org.jsoup.parser.Token$Comment: java.lang.String getData()>();

        $r4 = r3.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        specialinvoke $r0.<org.jsoup.nodes.Comment: void <init>(java.lang.String,java.lang.String)>($r2, $r4);

        r9 = $r0;

        $z0 = r1.<org.jsoup.parser.Token$Comment: boolean bogus>;

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r0.<org.jsoup.nodes.Comment: java.lang.String getData()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 1 goto label2;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $z1 != 0 goto label1;

        $z3 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("?");

        if $z3 == 0 goto label2;

     label1:
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>(1);

        $r7 = new org.jsoup.nodes.XmlDeclaration;

        $r8 = virtualinvoke $r0.<org.jsoup.nodes.Comment: java.lang.String baseUri()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        specialinvoke $r7.<org.jsoup.nodes.XmlDeclaration: void <init>(java.lang.String,java.lang.String,boolean)>($r6, $r8, $z2);

        r9 = $r7;

     label2:
        specialinvoke r3.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r9);

        return;
    }

    void insert(org.jsoup.parser.Token$Character)
    {
        org.jsoup.nodes.TextNode $r0;
        java.lang.String $r2, $r4;
        org.jsoup.parser.XmlTreeBuilder r3;
        org.jsoup.parser.Token$Character r1;

        r3 := @this: org.jsoup.parser.XmlTreeBuilder;

        r1 := @parameter0: org.jsoup.parser.Token$Character;

        $r0 = new org.jsoup.nodes.TextNode;

        $r2 = virtualinvoke r1.<org.jsoup.parser.Token$Character: java.lang.String getData()>();

        $r4 = r3.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        specialinvoke $r0.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>($r2, $r4);

        specialinvoke r3.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>($r0);

        return;
    }

    void insert(org.jsoup.parser.Token$Doctype)
    {
        org.jsoup.nodes.DocumentType $r0;
        java.lang.String $r2, $r3, $r4, $r6;
        org.jsoup.parser.XmlTreeBuilder r5;
        org.jsoup.parser.Token$Doctype r1;

        r5 := @this: org.jsoup.parser.XmlTreeBuilder;

        r1 := @parameter0: org.jsoup.parser.Token$Doctype;

        $r0 = new org.jsoup.nodes.DocumentType;

        $r2 = virtualinvoke r1.<org.jsoup.parser.Token$Doctype: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<org.jsoup.parser.Token$Doctype: java.lang.String getPublicIdentifier()>();

        $r4 = virtualinvoke r1.<org.jsoup.parser.Token$Doctype: java.lang.String getSystemIdentifier()>();

        $r6 = r5.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        specialinvoke $r0.<org.jsoup.nodes.DocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4, $r6);

        specialinvoke r5.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>($r0);

        return;
    }

    private void popStackToClose(org.jsoup.parser.Token$EndTag)
    {
        org.jsoup.parser.XmlTreeBuilder r2;
        org.jsoup.nodes.Element r10, r11, r12;
        java.lang.String $r1, $r9;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4, $r6;
        org.jsoup.helper.DescendableLinkedList $r3, $r5;
        org.jsoup.parser.Token$EndTag r0;
        java.lang.Object $r7, $r8;

        r2 := @this: org.jsoup.parser.XmlTreeBuilder;

        r0 := @parameter0: org.jsoup.parser.Token$EndTag;

        $r1 = virtualinvoke r0.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        r10 = null;

        $r3 = r2.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;

        $r4 = virtualinvoke $r3.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.jsoup.nodes.Element) $r8;

        $r9 = virtualinvoke r11.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label2;

        r10 = r11;

        goto label3;

     label2:
        goto label1;

     label3:
        if r10 != null goto label4;

        return;

     label4:
        $r5 = r2.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;

        $r6 = virtualinvoke $r5.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label5:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.jsoup.nodes.Element) $r7;

        if r12 != r10 goto label6;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        goto label7;

     label6:
        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        goto label5;

     label7:
        return;
    }

    java.util.List parseFragment(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList)
    {
        java.util.List $r5;
        org.jsoup.nodes.Document $r4;
        java.lang.String r1, r2;
        org.jsoup.parser.ParseErrorList r3;
        org.jsoup.parser.XmlTreeBuilder r0;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.jsoup.parser.ParseErrorList;

        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>(r1, r2, r3);

        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void runParser()>();

        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Document doc>;

        $r5 = virtualinvoke $r4.<org.jsoup.nodes.Document: java.util.List childNodes()>();

        return $r5;
    }
}
