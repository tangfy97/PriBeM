public class org.apache.pdfbox.pdmodel.fdf.FDFDocument extends java.lang.Object implements java.io.Closeable
{
    private org.apache.pdfbox.cos.COSDocument document;

    public void <init>() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDictionary $r3;
        org.apache.pdfbox.cos.COSDocument $r1, $r2, $r4;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;
        org.apache.pdfbox.pdmodel.fdf.FDFCatalog $r5;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.pdfbox.cos.COSDocument;

        specialinvoke $r1.<org.apache.pdfbox.cos.COSDocument: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.cos.COSDocument document> = $r1;

        $r2 = r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.cos.COSDocument document>;

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSDocument: void setHeaderString(java.lang.String)>("%FDF-1.2");

        $r4 = r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.cos.COSDocument document>;

        $r3 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDocument: void setTrailer(org.apache.pdfbox.cos.COSDictionary)>($r3);

        $r5 = new org.apache.pdfbox.pdmodel.fdf.FDFCatalog;

        specialinvoke $r5.<org.apache.pdfbox.pdmodel.fdf.FDFCatalog: void <init>()>();

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: void setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog)>($r5);

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDocument)
    {
        org.apache.pdfbox.cos.COSDocument r1;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.cos.COSDocument document> = r1;

        return;
    }

    public void <init>(org.w3c.dom.Document) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;
        java.io.IOException $r5;
        org.w3c.dom.Element $r2;
        org.w3c.dom.Document r1;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String $r3, $r8, $r11;
        boolean $z0;
        org.apache.pdfbox.pdmodel.fdf.FDFCatalog $r4;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        r1 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: void <init>()>();

        $r2 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("xfdf");

        if $z0 != 0 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while importing xfdf document, root should be \'xfdf\' and not \'");

        $r8 = interfaceinvoke $r2.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        $r4 = new org.apache.pdfbox.pdmodel.fdf.FDFCatalog;

        specialinvoke $r4.<org.apache.pdfbox.pdmodel.fdf.FDFCatalog: void <init>(org.w3c.dom.Element)>($r2);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: void setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog)>($r4);

        return;
    }

    public void writeXML(java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r0;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r1;
        org.apache.pdfbox.pdmodel.fdf.FDFCatalog $r2;

        r1 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        r0 := @parameter0: java.io.Writer;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("<xfdf xmlns=\"http://ns.adobe.com/xfdf/\" xml:space=\"preserve\">\n");

        $r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.pdmodel.fdf.FDFCatalog getCatalog()>();

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.fdf.FDFCatalog: void writeXML(java.io.Writer)>(r0);

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("</xfdf>\n");

        return;
    }

    public org.apache.pdfbox.cos.COSDocument getDocument()
    {
        org.apache.pdfbox.cos.COSDocument $r1;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.cos.COSDocument document>;

        return $r1;
    }

    public org.apache.pdfbox.pdmodel.fdf.FDFCatalog getCatalog()
    {
        org.apache.pdfbox.cos.COSName $r3;
        org.apache.pdfbox.cos.COSDocument $r1;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;
        org.apache.pdfbox.cos.COSDictionary $r2, r5;
        org.apache.pdfbox.cos.COSBase $r4;
        org.apache.pdfbox.pdmodel.fdf.FDFCatalog $r6, $r7, r8;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.cos.COSDocument document>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT>;

        $r4 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3);

        r5 = (org.apache.pdfbox.cos.COSDictionary) $r4;

        if r5 != null goto label1;

        $r7 = new org.apache.pdfbox.pdmodel.fdf.FDFCatalog;

        specialinvoke $r7.<org.apache.pdfbox.pdmodel.fdf.FDFCatalog: void <init>()>();

        r8 = $r7;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: void setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog)>($r7);

        goto label2;

     label1:
        $r6 = new org.apache.pdfbox.pdmodel.fdf.FDFCatalog;

        specialinvoke $r6.<org.apache.pdfbox.pdmodel.fdf.FDFCatalog: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r5);

        r8 = $r6;

     label2:
        return r8;
    }

    public void setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog)
    {
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSName $r4;
        org.apache.pdfbox.cos.COSDocument $r1;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;
        org.apache.pdfbox.pdmodel.fdf.FDFCatalog r3;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        r3 := @parameter0: org.apache.pdfbox.pdmodel.fdf.FDFCatalog;

        $r1 = r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.cos.COSDocument document>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>();

        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT>;

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r4, r3);

        return;
    }

    public static org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.lang.String) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.fdf.FDFDocument $r3;
        java.io.BufferedInputStream $r0;
        java.io.FileInputStream $r1;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.BufferedInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        $r3 = staticinvoke <org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.InputStream)>($r0);

        return $r3;
    }

    public static org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.File) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.fdf.FDFDocument $r3;
        java.io.BufferedInputStream $r0;
        java.io.FileInputStream $r1;
        java.io.File r2;

        r2 := @parameter0: java.io.File;

        $r0 = new java.io.BufferedInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        $r3 = staticinvoke <org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.InputStream)>($r0);

        return $r3;
    }

    public static org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.InputStream) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.fdf.FDFDocument $r2;
        org.apache.pdfbox.pdfparser.PDFParser $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new org.apache.pdfbox.pdfparser.PDFParser;

        specialinvoke $r0.<org.apache.pdfbox.pdfparser.PDFParser: void <init>(java.io.InputStream)>(r1);

        virtualinvoke $r0.<org.apache.pdfbox.pdfparser.PDFParser: void parse()>();

        $r2 = virtualinvoke $r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.pdmodel.fdf.FDFDocument getFDFDocument()>();

        return $r2;
    }

    public static org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.lang.String) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.fdf.FDFDocument $r3;
        java.io.BufferedInputStream $r0;
        java.io.FileInputStream $r1;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.BufferedInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        $r3 = staticinvoke <org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.InputStream)>($r0);

        return $r3;
    }

    public static org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.File) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.fdf.FDFDocument $r3;
        java.io.BufferedInputStream $r0;
        java.io.FileInputStream $r1;
        java.io.File r2;

        r2 := @parameter0: java.io.File;

        $r0 = new java.io.BufferedInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        $r3 = staticinvoke <org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.InputStream)>($r0);

        return $r3;
    }

    public static org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.InputStream) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.fdf.FDFDocument $r2;
        org.w3c.dom.Document $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.pdfbox.util.XMLUtil: org.w3c.dom.Document parse(java.io.InputStream)>(r0);

        $r2 = new org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        specialinvoke $r2.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: void <init>(org.w3c.dom.Document)>($r1);

        return $r2;
    }

    public void save(java.io.File) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        java.io.FileOutputStream $r1;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;
        java.io.File r2;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        r2 := @parameter0: java.io.File;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: void save(java.io.OutputStream)>($r1);

        return;
    }

    public void save(java.lang.String) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        java.io.FileOutputStream $r1;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;
        java.lang.String r2;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: void save(java.io.OutputStream)>($r1);

        return;
    }

    public void save(java.io.OutputStream) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.pdfwriter.COSWriter $r0, r5;
        java.io.OutputStream r1;
        java.lang.Throwable $r4;
        org.apache.pdfbox.cos.COSDocument $r3;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r2;

        r2 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        r1 := @parameter0: java.io.OutputStream;

        r5 = null;

     label1:
        $r0 = new org.apache.pdfbox.pdfwriter.COSWriter;

        specialinvoke $r0.<org.apache.pdfbox.pdfwriter.COSWriter: void <init>(java.io.OutputStream)>(r1);

        r5 = $r0;

        $r3 = r2.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.cos.COSDocument document>;

        virtualinvoke $r0.<org.apache.pdfbox.pdfwriter.COSWriter: void write(org.apache.pdfbox.cos.COSDocument)>($r3);

        virtualinvoke $r0.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

     label2:
        if $r0 == null goto label6;

        virtualinvoke $r0.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

        goto label6;

     label3:
        $r4 := @caughtexception;

     label4:
        if r5 == null goto label5;

        virtualinvoke r5.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

     label5:
        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void saveXFDF(java.io.File) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;
        java.io.BufferedWriter $r1;
        java.io.FileWriter $r2;
        java.io.File r3;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        r3 := @parameter0: java.io.File;

        $r1 = new java.io.BufferedWriter;

        $r2 = new java.io.FileWriter;

        specialinvoke $r2.<java.io.FileWriter: void <init>(java.io.File)>(r3);

        specialinvoke $r1.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r2);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: void saveXFDF(java.io.Writer)>($r1);

        return;
    }

    public void saveXFDF(java.lang.String) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;
        java.io.BufferedWriter $r1;
        java.io.FileWriter $r2;
        java.lang.String r3;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.io.BufferedWriter;

        $r2 = new java.io.FileWriter;

        specialinvoke $r2.<java.io.FileWriter: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r2);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: void saveXFDF(java.io.Writer)>($r1);

        return;
    }

    public void saveXFDF(java.io.Writer) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        java.io.Writer r1;
        java.lang.Throwable $r2;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        r1 := @parameter0: java.io.Writer;

     label1:
        virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: void writeXML(java.io.Writer)>(r1);

     label2:
        if r1 == null goto label6;

        virtualinvoke r1.<java.io.Writer: void close()>();

        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        if r1 == null goto label5;

        virtualinvoke r1.<java.io.Writer: void close()>();

     label5:
        throw $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void close() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument $r1;
        org.apache.pdfbox.pdmodel.fdf.FDFDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.fdf.FDFDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.fdf.FDFDocument: org.apache.pdfbox.cos.COSDocument document>;

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: void close()>();

        return;
    }
}
