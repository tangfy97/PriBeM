public class com.google.protobuf.Internal extends java.lang.Object
{

    public void <init>()
    {
        com.google.protobuf.Internal r0;

        r0 := @this: com.google.protobuf.Internal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String stringDefaultValue(java.lang.String)
    {
        byte[] $r2;
        java.lang.IllegalStateException $r4;
        java.lang.String $r0, r1;
        java.io.UnsupportedEncodingException $r3;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "UTF-8");

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Java VM does not support a standard character set.", $r3);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static com.google.protobuf.ByteString bytesDefaultValue(java.lang.String)
    {
        com.google.protobuf.ByteString $r2;
        byte[] $r1;
        java.lang.IllegalStateException $r4;
        java.lang.String r0;
        java.io.UnsupportedEncodingException $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r2 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Java VM does not support a standard character set.", $r3);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
