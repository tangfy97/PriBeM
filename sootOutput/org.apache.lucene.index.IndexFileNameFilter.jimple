public class org.apache.lucene.index.IndexFileNameFilter extends java.lang.Object implements java.io.FilenameFilter
{
    private static org.apache.lucene.index.IndexFileNameFilter singleton;
    private java.util.HashSet extensions;
    private java.util.HashSet extensionsInCFS;

    private void <init>()
    {
        org.apache.lucene.index.IndexFileNameFilter r0;
        java.lang.String[] r5, r7;
        java.util.HashSet $r1, $r2, $r3, $r4;
        int i0, i1, i2, i3;
        java.lang.String r6, r8;

        r0 := @this: org.apache.lucene.index.IndexFileNameFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.lucene.index.IndexFileNameFilter: java.util.HashSet extensions> = $r1;

        r5 = <org.apache.lucene.index.IndexFileNames: java.lang.String[] INDEX_EXTENSIONS>;

        i0 = lengthof r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r6 = r5[i1];

        $r4 = r0.<org.apache.lucene.index.IndexFileNameFilter: java.util.HashSet extensions>;

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>(r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.apache.lucene.index.IndexFileNameFilter: java.util.HashSet extensionsInCFS> = $r2;

        r7 = <org.apache.lucene.index.IndexFileNames: java.lang.String[] INDEX_EXTENSIONS_IN_COMPOUND_FILE>;

        i2 = lengthof r7;

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        r8 = r7[i3];

        $r3 = r0.<org.apache.lucene.index.IndexFileNameFilter: java.util.HashSet extensionsInCFS>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r8);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public boolean accept(java.io.File, java.lang.String)
    {
        org.apache.lucene.index.IndexFileNameFilter r2;
        java.io.File r4;
        java.util.HashSet $r3;
        int $i0, $i1, $i3;
        java.lang.String r0, $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r2 := @this: org.apache.lucene.index.IndexFileNameFilter;

        r4 := @parameter0: java.io.File;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        $i3 = (int) -1;

        if $i0 == $i3 goto label4;

        $i1 = 1 + $i0;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = r2.<org.apache.lucene.index.IndexFileNameFilter: java.util.HashSet extensions>;

        $z2 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("f");

        if $z3 == 0 goto label2;

        $z6 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>("f\\d+");

        if $z6 == 0 goto label2;

        return 1;

     label2:
        $z4 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("s");

        if $z4 == 0 goto label3;

        $z5 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>("s\\d+");

        if $z5 == 0 goto label3;

        return 1;

     label3:
        goto label6;

     label4:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("deletable");

        if $z0 == 0 goto label5;

        return 1;

     label5:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("segments");

        if $z1 == 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    public boolean isCFSFile(java.lang.String)
    {
        org.apache.lucene.index.IndexFileNameFilter r2;
        java.util.HashSet $r3;
        int $i0, $i1, $i3;
        java.lang.String r0, $r1;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.lucene.index.IndexFileNameFilter;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        $i3 = (int) -1;

        if $i0 == $i3 goto label2;

        $i1 = 1 + $i0;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = r2.<org.apache.lucene.index.IndexFileNameFilter: java.util.HashSet extensionsInCFS>;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("f");

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>("f\\d+");

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static org.apache.lucene.index.IndexFileNameFilter getFilter()
    {
        org.apache.lucene.index.IndexFileNameFilter $r0;

        $r0 = <org.apache.lucene.index.IndexFileNameFilter: org.apache.lucene.index.IndexFileNameFilter singleton>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.lucene.index.IndexFileNameFilter $r0;

        $r0 = new org.apache.lucene.index.IndexFileNameFilter;

        specialinvoke $r0.<org.apache.lucene.index.IndexFileNameFilter: void <init>()>();

        <org.apache.lucene.index.IndexFileNameFilter: org.apache.lucene.index.IndexFileNameFilter singleton> = $r0;

        return;
    }
}
