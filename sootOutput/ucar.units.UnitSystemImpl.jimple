public class ucar.units.UnitSystemImpl extends java.lang.Object implements ucar.units.UnitSystem, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.HashMap quantityMap;
    private final ucar.units.UnitDB baseUnitDB;
    private final ucar.units.UnitDBImpl acceptableUnitDB;

    protected void <init>(ucar.units.UnitDBImpl, ucar.units.UnitDBImpl) throws ucar.units.UnitExistsException
    {
        java.util.HashMap $r1, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        ucar.units.BaseQuantity $r12;
        ucar.units.UnitSystemImpl r0;
        boolean $z0;
        java.util.Iterator $r3;
        ucar.units.Unit r9;
        ucar.units.UnitDBImpl r2, $r4, r5, $r6, $r7;
        java.lang.Object $r8;
        ucar.units.BaseUnit r10;

        r0 := @this: ucar.units.UnitSystemImpl;

        r2 := @parameter0: ucar.units.UnitDBImpl;

        r5 := @parameter1: ucar.units.UnitDBImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        $i0 = virtualinvoke r2.<ucar.units.UnitDBImpl: int nameCount()>();

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>($i0);

        r0.<ucar.units.UnitSystemImpl: java.util.HashMap quantityMap> = $r1;

        $r3 = virtualinvoke r2.<ucar.units.UnitDBImpl: java.util.Iterator getIterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (ucar.units.Unit) $r8;

        r10 = (ucar.units.BaseUnit) r9;

        $r11 = r0.<ucar.units.UnitSystemImpl: java.util.HashMap quantityMap>;

        $r12 = virtualinvoke r10.<ucar.units.BaseUnit: ucar.units.BaseQuantity getBaseQuantity()>();

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r10);

        goto label1;

     label2:
        r0.<ucar.units.UnitSystemImpl: ucar.units.UnitDB baseUnitDB> = r2;

        $r4 = new ucar.units.UnitDBImpl;

        $i1 = virtualinvoke r2.<ucar.units.UnitDBImpl: int nameCount()>();

        $i2 = virtualinvoke r5.<ucar.units.UnitDBImpl: int nameCount()>();

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r2.<ucar.units.UnitDBImpl: int symbolCount()>();

        $i5 = virtualinvoke r5.<ucar.units.UnitDBImpl: int symbolCount()>();

        $i6 = $i4 + $i5;

        specialinvoke $r4.<ucar.units.UnitDBImpl: void <init>(int,int)>($i3, $i6);

        r0.<ucar.units.UnitSystemImpl: ucar.units.UnitDBImpl acceptableUnitDB> = $r4;

        $r6 = r0.<ucar.units.UnitSystemImpl: ucar.units.UnitDBImpl acceptableUnitDB>;

        virtualinvoke $r6.<ucar.units.UnitDBImpl: void add(ucar.units.UnitDBImpl)>(r2);

        $r7 = r0.<ucar.units.UnitSystemImpl: ucar.units.UnitDBImpl acceptableUnitDB>;

        virtualinvoke $r7.<ucar.units.UnitDBImpl: void add(ucar.units.UnitDBImpl)>(r5);

        return;
    }

    public final ucar.units.UnitDB getBaseUnitDB()
    {
        ucar.units.UnitSystemImpl r0;
        ucar.units.UnitDB $r1;

        r0 := @this: ucar.units.UnitSystemImpl;

        $r1 = r0.<ucar.units.UnitSystemImpl: ucar.units.UnitDB baseUnitDB>;

        return $r1;
    }

    public final ucar.units.UnitDB getUnitDB()
    {
        ucar.units.UnitSystemImpl r0;
        ucar.units.UnitDBImpl $r1;

        r0 := @this: ucar.units.UnitSystemImpl;

        $r1 = r0.<ucar.units.UnitSystemImpl: ucar.units.UnitDBImpl acceptableUnitDB>;

        return $r1;
    }

    public final ucar.units.BaseUnit getBaseUnit(ucar.units.BaseQuantity)
    {
        java.util.HashMap $r2;
        java.lang.Object $r3;
        ucar.units.BaseQuantity r1;
        ucar.units.BaseUnit $r4;
        ucar.units.UnitSystemImpl r0;

        r0 := @this: ucar.units.UnitSystemImpl;

        r1 := @parameter0: ucar.units.BaseQuantity;

        $r2 = r0.<ucar.units.UnitSystemImpl: java.util.HashMap quantityMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (ucar.units.BaseUnit) $r3;

        return $r4;
    }

    public static void <clinit>()
    {
        <ucar.units.UnitSystemImpl: long serialVersionUID> = 1L;

        return;
    }
}
