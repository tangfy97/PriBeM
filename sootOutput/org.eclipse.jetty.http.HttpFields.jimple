public class org.eclipse.jetty.http.HttpFields extends java.lang.Object
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final java.lang.String __COOKIE_DELIM;
    public static final java.util.TimeZone __GMT;
    public static final org.eclipse.jetty.io.BufferDateCache __dateCache;
    public static final java.lang.String __separators;
    private static final java.lang.String[] DAYS;
    private static final java.lang.String[] MONTHS;
    private static final java.lang.ThreadLocal __dateGenerator;
    private static final java.lang.String[] __dateReceiveFmt;
    private static final java.lang.ThreadLocal __dateParser;
    public static final java.lang.String __01Jan1970;
    public static final org.eclipse.jetty.io.Buffer __01Jan1970_BUFFER;
    public static final java.lang.String __01Jan1970_COOKIE;
    private final java.util.ArrayList _fields;
    private final java.util.HashMap _names;
    private static java.util.concurrent.ConcurrentMap __cache;
    private static int __cacheSize;
    private static final java.lang.Float __one;
    private static final java.lang.Float __zero;
    private static final org.eclipse.jetty.util.StringMap __qualities;

    public static java.lang.String formatDate(long)
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        long l0;
        org.eclipse.jetty.http.HttpFields$DateGenerator $r2;
        java.lang.String $r3;

        l0 := @parameter0: long;

        $r0 = <org.eclipse.jetty.http.HttpFields: java.lang.ThreadLocal __dateGenerator>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (org.eclipse.jetty.http.HttpFields$DateGenerator) $r1;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields$DateGenerator: java.lang.String formatDate(long)>(l0);

        return $r3;
    }

    public static void formatCookieDate(java.lang.StringBuilder, long)
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        java.lang.StringBuilder r2;
        long l0;
        org.eclipse.jetty.http.HttpFields$DateGenerator $r3;

        r2 := @parameter0: java.lang.StringBuilder;

        l0 := @parameter1: long;

        $r0 = <org.eclipse.jetty.http.HttpFields: java.lang.ThreadLocal __dateGenerator>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (org.eclipse.jetty.http.HttpFields$DateGenerator) $r1;

        virtualinvoke $r3.<org.eclipse.jetty.http.HttpFields$DateGenerator: void formatCookieDate(java.lang.StringBuilder,long)>(r2, l0);

        return;
    }

    public static java.lang.String formatCookieDate(long)
    {
        java.lang.StringBuilder $r0;
        long l0;
        java.lang.String $r1;

        l0 := @parameter0: long;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(28);

        staticinvoke <org.eclipse.jetty.http.HttpFields: void formatCookieDate(java.lang.StringBuilder,long)>($r0, l0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static long parseDate(java.lang.String)
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        long $l0;
        java.lang.String r2;
        org.eclipse.jetty.http.HttpFields$DateParser $r3;

        r2 := @parameter0: java.lang.String;

        $r0 = <org.eclipse.jetty.http.HttpFields: java.lang.ThreadLocal __dateParser>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (org.eclipse.jetty.http.HttpFields$DateParser) $r1;

        $l0 = virtualinvoke $r3.<org.eclipse.jetty.http.HttpFields$DateParser: long parse(java.lang.String)>(r2);

        return $l0;
    }

    public void <init>()
    {
        java.util.HashMap $r2;
        org.eclipse.jetty.http.HttpFields r0;
        java.util.ArrayList $r1;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(20);

        r0.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(32);

        r0.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names> = $r2;

        return;
    }

    private org.eclipse.jetty.io.Buffer convertValue(java.lang.String)
    {
        java.util.concurrent.ConcurrentMap $r1, $r4, $r5, $r7;
        org.eclipse.jetty.io.ByteArrayBuffer $r3;
        int $i0, $i1, $i2;
        java.lang.String r0;
        org.eclipse.jetty.http.HttpFields r11;
        org.eclipse.jetty.io.Buffer $r8, r12, r13;
        java.lang.RuntimeException $r10;
        java.lang.Object $r2, $r6;
        java.io.UnsupportedEncodingException $r9;

        r11 := @this: org.eclipse.jetty.http.HttpFields;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.eclipse.jetty.http.HttpFields: java.util.concurrent.ConcurrentMap __cache>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r0);

        r12 = (org.eclipse.jetty.io.Buffer) $r2;

        if r12 == null goto label1;

        return r12;

     label1:
        $r3 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r3.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String,java.lang.String)>(r0, "ISO-8859-1");

        r13 = $r3;

        $i0 = <org.eclipse.jetty.http.HttpFields: int __cacheSize>;

        if $i0 <= 0 goto label3;

        $r4 = <org.eclipse.jetty.http.HttpFields: java.util.concurrent.ConcurrentMap __cache>;

        $i1 = interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: int size()>();

        $i2 = <org.eclipse.jetty.http.HttpFields: int __cacheSize>;

        if $i1 <= $i2 goto label2;

        $r7 = <org.eclipse.jetty.http.HttpFields: java.util.concurrent.ConcurrentMap __cache>;

        interfaceinvoke $r7.<java.util.concurrent.ConcurrentMap: void clear()>();

     label2:
        $r5 = <org.eclipse.jetty.http.HttpFields: java.util.concurrent.ConcurrentMap __cache>;

        $r6 = interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r0, $r3);

        $r8 = (org.eclipse.jetty.io.Buffer) $r6;

        if $r8 == null goto label3;

        r13 = $r8;

     label3:
        return r13;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.io.UnsupportedEncodingException from label1 to label3 with label4;
    }

    public java.util.Collection getFieldNamesCollection()
    {
        java.util.Iterator $r4;
        java.util.ArrayList $r0, $r2, $r3;
        org.eclipse.jetty.http.HttpFields$Field r6;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r8;
        org.eclipse.jetty.http.HttpFields r1;
        org.eclipse.jetty.io.Buffer $r7;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.http.HttpFields;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = r1.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.http.HttpFields$Field) $r5;

        if r6 == null goto label2;

        $r7 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.io.Buffer access$500(org.eclipse.jetty.http.HttpFields$Field)>(r6);

        $r8 = staticinvoke <org.eclipse.jetty.io.BufferUtil: java.lang.String to8859_1_String(org.eclipse.jetty.io.Buffer)>($r7);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public java.util.Enumeration getFieldNames()
    {
        java.util.Enumeration $r3;
        java.util.Set $r2;
        java.util.HashMap $r1;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.http.HttpFields$3 $r4;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        $r1 = r0.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r2);

        $r4 = new org.eclipse.jetty.http.HttpFields$3;

        specialinvoke $r4.<org.eclipse.jetty.http.HttpFields$3: void <init>(org.eclipse.jetty.http.HttpFields,java.util.Enumeration)>(r0, $r3);

        return $r4;
    }

    public int size()
    {
        int $i0;
        org.eclipse.jetty.http.HttpFields r0;
        java.util.ArrayList $r1;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        $r1 = r0.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public org.eclipse.jetty.http.HttpFields$Field getField(int)
    {
        org.eclipse.jetty.http.HttpFields$Field $r3;
        int i0;
        java.lang.Object $r2;
        org.eclipse.jetty.http.HttpFields r0;
        java.util.ArrayList $r1;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (org.eclipse.jetty.http.HttpFields$Field) $r2;

        return $r3;
    }

    private org.eclipse.jetty.http.HttpFields$Field getField(java.lang.String)
    {
        org.eclipse.jetty.http.HttpFields$Field $r6;
        org.eclipse.jetty.http.HttpHeaders $r2;
        java.util.HashMap $r3;
        java.lang.Object $r5;
        java.lang.String r1;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer $r4;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        $r2 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r4 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r1);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (org.eclipse.jetty.http.HttpFields$Field) $r5;

        return $r6;
    }

    private org.eclipse.jetty.http.HttpFields$Field getField(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.http.HttpFields$Field $r6;
        org.eclipse.jetty.http.HttpHeaders $r2;
        java.util.HashMap $r3;
        java.lang.Object $r5;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer r1, $r4;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $r3 = r0.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        $r2 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r4 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(org.eclipse.jetty.io.Buffer)>(r1);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (org.eclipse.jetty.http.HttpFields$Field) $r5;

        return $r6;
    }

    public boolean containsKey(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.http.HttpHeaders $r2;
        java.util.HashMap $r3;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer r1, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $r3 = r0.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        $r2 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r4 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(org.eclipse.jetty.io.Buffer)>(r1);

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        return $z0;
    }

    public boolean containsKey(java.lang.String)
    {
        org.eclipse.jetty.http.HttpHeaders $r2;
        java.util.HashMap $r3;
        java.lang.String r1;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        $r2 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r4 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r1);

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        return $z0;
    }

    public java.lang.String getStringField(java.lang.String)
    {
        org.eclipse.jetty.http.HttpFields$Field $r2;
        java.lang.String r1, $r3;
        org.eclipse.jetty.http.HttpFields r0;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.http.HttpFields$Field getField(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields$Field: java.lang.String getValue()>();

     label2:
        return $r3;
    }

    public java.lang.String getStringField(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.http.HttpFields$Field $r2;
        java.lang.String $r3;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $r2 = specialinvoke r0.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.http.HttpFields$Field getField(org.eclipse.jetty.io.Buffer)>(r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields$Field: java.lang.String getValue()>();

     label2:
        return $r3;
    }

    public org.eclipse.jetty.io.Buffer get(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.http.HttpFields$Field $r2;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer r1, $r3;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $r2 = specialinvoke r0.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.http.HttpFields$Field getField(org.eclipse.jetty.io.Buffer)>(r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.io.Buffer access$600(org.eclipse.jetty.http.HttpFields$Field)>($r2);

     label2:
        return $r3;
    }

    public java.util.Collection getValuesCollection(java.lang.String)
    {
        org.eclipse.jetty.http.HttpFields$Field $r2, r5;
        java.lang.String r1, $r4;
        org.eclipse.jetty.http.HttpFields r0;
        java.util.ArrayList $r3;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.http.HttpFields$Field getField(java.lang.String)>(r1);

        r5 = $r2;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label2:
        if r5 == null goto label3;

        $r4 = virtualinvoke r5.<org.eclipse.jetty.http.HttpFields$Field: java.lang.String getValue()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        r5 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.http.HttpFields$Field access$700(org.eclipse.jetty.http.HttpFields$Field)>(r5);

        goto label2;

     label3:
        return $r3;
    }

    public java.util.Enumeration getValues(java.lang.String)
    {
        org.eclipse.jetty.http.HttpFields$Field $r2;
        java.util.List $r4;
        java.util.Enumeration $r5;
        java.lang.String r1;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.http.HttpFields$4 $r3;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.http.HttpFields$Field getField(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r5 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r4);

        return $r5;

     label1:
        $r3 = new org.eclipse.jetty.http.HttpFields$4;

        specialinvoke $r3.<org.eclipse.jetty.http.HttpFields$4: void <init>(org.eclipse.jetty.http.HttpFields,org.eclipse.jetty.http.HttpFields$Field)>(r0, $r2);

        return $r3;
    }

    public java.util.Enumeration getValues(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.http.HttpFields$Field $r2;
        java.util.List $r4;
        java.util.Enumeration $r5;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer r1;
        org.eclipse.jetty.http.HttpFields$5 $r3;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $r2 = specialinvoke r0.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.http.HttpFields$Field getField(org.eclipse.jetty.io.Buffer)>(r1);

        if $r2 != null goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r5 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r4);

        return $r5;

     label1:
        $r3 = new org.eclipse.jetty.http.HttpFields$5;

        specialinvoke $r3.<org.eclipse.jetty.http.HttpFields$5: void <init>(org.eclipse.jetty.http.HttpFields,org.eclipse.jetty.http.HttpFields$Field)>(r0, $r2);

        return $r3;
    }

    public java.util.Enumeration getValues(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.http.HttpFields$6 $r3;
        java.util.Enumeration $r2;
        java.lang.String r1, r4;
        org.eclipse.jetty.http.HttpFields r0;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.http.HttpFields: java.util.Enumeration getValues(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new org.eclipse.jetty.http.HttpFields$6;

        specialinvoke $r3.<org.eclipse.jetty.http.HttpFields$6: void <init>(org.eclipse.jetty.http.HttpFields,java.util.Enumeration,java.lang.String)>(r0, $r2, r4);

        return $r3;
    }

    public void put(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.http.HttpHeaders $r2;
        java.lang.String r0, r1;
        org.eclipse.jetty.http.HttpFields r4;
        org.eclipse.jetty.io.Buffer $r3, $r5;

        r4 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        virtualinvoke r4.<org.eclipse.jetty.http.HttpFields: void remove(java.lang.String)>(r1);

        goto label2;

     label1:
        $r2 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r1);

        $r5 = specialinvoke r4.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.io.Buffer convertValue(java.lang.String)>(r0);

        virtualinvoke r4.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r3, $r5);

     label2:
        return;
    }

    public void put(org.eclipse.jetty.io.Buffer, java.lang.String)
    {
        org.eclipse.jetty.http.HttpHeaders $r1;
        java.lang.String r4;
        org.eclipse.jetty.http.HttpFields r3;
        org.eclipse.jetty.io.Buffer r0, $r2, $r5;

        r3 := @this: org.eclipse.jetty.http.HttpFields;

        r0 := @parameter0: org.eclipse.jetty.io.Buffer;

        r4 := @parameter1: java.lang.String;

        $r1 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(org.eclipse.jetty.io.Buffer)>(r0);

        $r5 = specialinvoke r3.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.io.Buffer convertValue(java.lang.String)>(r4);

        virtualinvoke r3.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r2, $r5);

        return;
    }

    public void put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.http.HttpHeaders $r6;
        java.util.HashMap $r3;
        java.util.ArrayList $r2;
        org.eclipse.jetty.http.HttpFields$Field $r1;
        org.eclipse.jetty.http.HttpHeaderValues $r4;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer $r5, r7, r8;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r7 := @parameter0: org.eclipse.jetty.io.Buffer;

        r8 := @parameter1: org.eclipse.jetty.io.Buffer;

        virtualinvoke r0.<org.eclipse.jetty.http.HttpFields: void remove(org.eclipse.jetty.io.Buffer)>(r7);

        if r8 != null goto label1;

        return;

     label1:
        $z0 = r7 instanceof org.eclipse.jetty.io.BufferCache$CachedBuffer;

        if $z0 != 0 goto label2;

        $r6 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        r7 = virtualinvoke $r6.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(org.eclipse.jetty.io.Buffer)>(r7);

     label2:
        $z1 = r8 instanceof org.eclipse.jetty.io.BufferCache$CachedBuffer;

        if $z1 != 0 goto label3;

        $r4 = <org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.http.HttpHeaderValues CACHE>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.io.Buffer lookup(org.eclipse.jetty.io.Buffer)>(r8);

        r8 = interfaceinvoke $r5.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer asImmutableBuffer()>();

     label3:
        $r1 = new org.eclipse.jetty.http.HttpFields$Field;

        specialinvoke $r1.<org.eclipse.jetty.http.HttpFields$Field: void <init>(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer,org.eclipse.jetty.http.HttpFields$1)>(r7, r8, null);

        $r2 = r0.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r1);

        return;
    }

    public void put(java.lang.String, java.util.List)
    {
        org.eclipse.jetty.http.HttpHeaders $r3;
        int $i0, $i1;
        java.lang.String r2, $r9, $r12;
        org.eclipse.jetty.http.HttpFields r1;
        org.eclipse.jetty.io.Buffer $r4, $r10, $r13;
        boolean $z0;
        java.util.Iterator $r6;
        java.util.List r0;
        java.lang.Object $r5, $r7;
        org.eclipse.jetty.http.HttpHeaderValues $r8, $r11;

        r1 := @this: org.eclipse.jetty.http.HttpFields;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.List;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        virtualinvoke r1.<org.eclipse.jetty.http.HttpFields: void remove(java.lang.String)>(r2);

        return;

     label2:
        $r3 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r2);

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        if $r5 == null goto label3;

        $r11 = <org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.http.HttpHeaderValues CACHE>;

        $r12 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>($r12);

        virtualinvoke r1.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r4, $r13);

        goto label4;

     label3:
        virtualinvoke r1.<org.eclipse.jetty.http.HttpFields: void remove(org.eclipse.jetty.io.Buffer)>($r4);

     label4:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i1 <= 1 goto label6;

        $r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label5:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        if $r7 == null goto label5;

        $r8 = <org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.http.HttpHeaderValues CACHE>;

        $r9 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>($r9);

        virtualinvoke r1.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r4, $r10);

        goto label5;

     label6:
        return;
    }

    public void add(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.eclipse.jetty.http.HttpHeaders $r2;
        java.lang.String r0, r1;
        org.eclipse.jetty.http.HttpFields r4;
        org.eclipse.jetty.io.Buffer $r3, $r5;

        r4 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r1);

        $r5 = specialinvoke r4.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.io.Buffer convertValue(java.lang.String)>(r0);

        virtualinvoke r4.<org.eclipse.jetty.http.HttpFields: void add(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r3, $r5);

        return;
    }

    public void add(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.lang.IllegalArgumentException
    {
        org.eclipse.jetty.http.HttpHeaders $r5, $r7;
        java.util.HashMap $r4, $r12;
        java.util.ArrayList $r3;
        int $i0;
        org.eclipse.jetty.http.HttpFields r1;
        org.eclipse.jetty.io.Buffer $r0, r9, r10, $r11;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r8;
        org.eclipse.jetty.http.HttpFields$Field $r2, r14, r15;
        java.lang.Object $r13;
        org.eclipse.jetty.http.HttpHeaderValues $r6;

        r1 := @this: org.eclipse.jetty.http.HttpFields;

        r9 := @parameter0: org.eclipse.jetty.io.Buffer;

        r10 := @parameter1: org.eclipse.jetty.io.Buffer;

        if r10 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null value");

        throw $r8;

     label1:
        $z0 = r9 instanceof org.eclipse.jetty.io.BufferCache$CachedBuffer;

        if $z0 != 0 goto label2;

        $r7 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        r9 = virtualinvoke $r7.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(org.eclipse.jetty.io.Buffer)>(r9);

     label2:
        $r0 = interfaceinvoke r9.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer asImmutableBuffer()>();

        $z1 = r10 instanceof org.eclipse.jetty.io.BufferCache$CachedBuffer;

        if $z1 != 0 goto label3;

        $r5 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $i0 = virtualinvoke $r5.<org.eclipse.jetty.http.HttpHeaders: int getOrdinal(org.eclipse.jetty.io.Buffer)>($r0);

        $z2 = staticinvoke <org.eclipse.jetty.http.HttpHeaderValues: boolean hasKnownValues(int)>($i0);

        if $z2 == 0 goto label3;

        $r6 = <org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.http.HttpHeaderValues CACHE>;

        r10 = virtualinvoke $r6.<org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.io.Buffer lookup(org.eclipse.jetty.io.Buffer)>(r10);

     label3:
        $r11 = interfaceinvoke r10.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer asImmutableBuffer()>();

        $r12 = r1.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        r14 = (org.eclipse.jetty.http.HttpFields$Field) $r13;

        r15 = null;

     label4:
        if r14 == null goto label5;

        r15 = r14;

        r14 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.http.HttpFields$Field access$700(org.eclipse.jetty.http.HttpFields$Field)>(r14);

        goto label4;

     label5:
        $r2 = new org.eclipse.jetty.http.HttpFields$Field;

        specialinvoke $r2.<org.eclipse.jetty.http.HttpFields$Field: void <init>(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer,org.eclipse.jetty.http.HttpFields$1)>($r0, $r11, null);

        $r3 = r1.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        if r15 == null goto label6;

        staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.http.HttpFields$Field access$702(org.eclipse.jetty.http.HttpFields$Field,org.eclipse.jetty.http.HttpFields$Field)>(r15, $r2);

        goto label7;

     label6:
        $r4 = r1.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r2);

     label7:
        return;
    }

    public void remove(java.lang.String)
    {
        org.eclipse.jetty.http.HttpHeaders $r2;
        java.lang.String r1;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer $r3;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r1);

        virtualinvoke r0.<org.eclipse.jetty.http.HttpFields: void remove(org.eclipse.jetty.io.Buffer)>($r3);

        return;
    }

    public void remove(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.http.HttpHeaders $r4;
        java.util.HashMap $r1;
        java.util.ArrayList $r3;
        org.eclipse.jetty.http.HttpFields$Field r6;
        java.lang.Object $r2;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer r5;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r5 := @parameter0: org.eclipse.jetty.io.Buffer;

        $z0 = r5 instanceof org.eclipse.jetty.io.BufferCache$CachedBuffer;

        if $z0 != 0 goto label1;

        $r4 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        r5 = virtualinvoke $r4.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(org.eclipse.jetty.io.Buffer)>(r5);

     label1:
        $r1 = r0.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r5);

        r6 = (org.eclipse.jetty.http.HttpFields$Field) $r2;

     label2:
        if r6 == null goto label3;

        $r3 = r0.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r6);

        r6 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.http.HttpFields$Field access$700(org.eclipse.jetty.http.HttpFields$Field)>(r6);

        goto label2;

     label3:
        return;
    }

    public long getLongField(java.lang.String) throws java.lang.NumberFormatException
    {
        org.eclipse.jetty.http.HttpFields$Field $r2;
        long $l0;
        java.lang.String r1;
        org.eclipse.jetty.http.HttpFields r0;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.http.HttpFields$Field getField(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $l0 = -1L;

        goto label2;

     label1:
        $l0 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields$Field: long getLongValue()>();

     label2:
        return $l0;
    }

    public long getLongField(org.eclipse.jetty.io.Buffer) throws java.lang.NumberFormatException
    {
        org.eclipse.jetty.http.HttpFields$Field $r2;
        long $l0;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $r2 = specialinvoke r0.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.http.HttpFields$Field getField(org.eclipse.jetty.io.Buffer)>(r1);

        if $r2 != null goto label1;

        $l0 = -1L;

        goto label2;

     label1:
        $l0 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields$Field: long getLongValue()>();

     label2:
        return $l0;
    }

    public long getDateField(java.lang.String)
    {
        long $l0;
        byte $b1;
        java.lang.String r1, $r4, $r5, $r13;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer $r3;
        java.lang.ThreadLocal $r6;
        org.eclipse.jetty.http.HttpFields$DateParser $r8;
        java.lang.IllegalArgumentException $r9;
        org.eclipse.jetty.http.HttpFields$Field $r2;
        java.lang.Object $r7;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.http.HttpFields$Field getField(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return -1L;

     label1:
        $r3 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.io.Buffer access$600(org.eclipse.jetty.http.HttpFields$Field)>($r2);

        $r4 = staticinvoke <org.eclipse.jetty.io.BufferUtil: java.lang.String to8859_1_String(org.eclipse.jetty.io.Buffer)>($r3);

        $r5 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.String valueParameters(java.lang.String,java.util.Map)>($r4, null);

        if $r5 != null goto label2;

        return -1L;

     label2:
        $r6 = <org.eclipse.jetty.http.HttpFields: java.lang.ThreadLocal __dateParser>;

        $r7 = virtualinvoke $r6.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r8 = (org.eclipse.jetty.http.HttpFields$DateParser) $r7;

        $l0 = virtualinvoke $r8.<org.eclipse.jetty.http.HttpFields$DateParser: long parse(java.lang.String)>($r5);

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot convert date: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label3:
        return $l0;
    }

    public void putLongField(org.eclipse.jetty.io.Buffer, long)
    {
        long l0;
        org.eclipse.jetty.http.HttpFields r1;
        org.eclipse.jetty.io.Buffer $r0, r2;

        r1 := @this: org.eclipse.jetty.http.HttpFields;

        r2 := @parameter0: org.eclipse.jetty.io.Buffer;

        l0 := @parameter1: long;

        $r0 = staticinvoke <org.eclipse.jetty.io.BufferUtil: org.eclipse.jetty.io.Buffer toBuffer(long)>(l0);

        virtualinvoke r1.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>(r2, $r0);

        return;
    }

    public void putLongField(java.lang.String, long)
    {
        org.eclipse.jetty.http.HttpHeaders $r1;
        long l0;
        java.lang.String r0;
        org.eclipse.jetty.http.HttpFields r4;
        org.eclipse.jetty.io.Buffer $r2, $r3;

        r4 := @this: org.eclipse.jetty.http.HttpFields;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r0);

        $r3 = staticinvoke <org.eclipse.jetty.io.BufferUtil: org.eclipse.jetty.io.Buffer toBuffer(long)>(l0);

        virtualinvoke r4.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r2, $r3);

        return;
    }

    public void addLongField(java.lang.String, long)
    {
        org.eclipse.jetty.http.HttpHeaders $r1;
        long l0;
        java.lang.String r0;
        org.eclipse.jetty.http.HttpFields r4;
        org.eclipse.jetty.io.Buffer $r2, $r3;

        r4 := @this: org.eclipse.jetty.http.HttpFields;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r0);

        $r3 = staticinvoke <org.eclipse.jetty.io.BufferUtil: org.eclipse.jetty.io.Buffer toBuffer(long)>(l0);

        virtualinvoke r4.<org.eclipse.jetty.http.HttpFields: void add(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r2, $r3);

        return;
    }

    public void addLongField(org.eclipse.jetty.io.Buffer, long)
    {
        long l0;
        org.eclipse.jetty.http.HttpFields r1;
        org.eclipse.jetty.io.Buffer $r0, r2;

        r1 := @this: org.eclipse.jetty.http.HttpFields;

        r2 := @parameter0: org.eclipse.jetty.io.Buffer;

        l0 := @parameter1: long;

        $r0 = staticinvoke <org.eclipse.jetty.io.BufferUtil: org.eclipse.jetty.io.Buffer toBuffer(long)>(l0);

        virtualinvoke r1.<org.eclipse.jetty.http.HttpFields: void add(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>(r2, $r0);

        return;
    }

    public void putDateField(org.eclipse.jetty.io.Buffer, long)
    {
        org.eclipse.jetty.io.ByteArrayBuffer $r1;
        long l0;
        java.lang.String $r0;
        org.eclipse.jetty.http.HttpFields r2;
        org.eclipse.jetty.io.Buffer r3;

        r2 := @this: org.eclipse.jetty.http.HttpFields;

        r3 := @parameter0: org.eclipse.jetty.io.Buffer;

        l0 := @parameter1: long;

        $r0 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.String formatDate(long)>(l0);

        $r1 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r1.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>($r0);

        virtualinvoke r2.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>(r3, $r1);

        return;
    }

    public void putDateField(java.lang.String, long)
    {
        org.eclipse.jetty.http.HttpHeaders $r1;
        long l0;
        java.lang.String r0;
        org.eclipse.jetty.http.HttpFields r3;
        org.eclipse.jetty.io.Buffer $r2;

        r3 := @this: org.eclipse.jetty.http.HttpFields;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r0);

        virtualinvoke r3.<org.eclipse.jetty.http.HttpFields: void putDateField(org.eclipse.jetty.io.Buffer,long)>($r2, l0);

        return;
    }

    public void addDateField(java.lang.String, long)
    {
        org.eclipse.jetty.io.ByteArrayBuffer $r4;
        org.eclipse.jetty.http.HttpHeaders $r2;
        long l0;
        java.lang.String $r0, r1;
        org.eclipse.jetty.http.HttpFields r5;
        org.eclipse.jetty.io.Buffer $r3;

        r5 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r0 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.String formatDate(long)>(l0);

        $r2 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r1);

        $r4 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r4.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>($r0);

        virtualinvoke r5.<org.eclipse.jetty.http.HttpFields: void add(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r3, $r4);

        return;
    }

    public void addSetCookie(org.eclipse.jetty.http.HttpCookie)
    {
        org.eclipse.jetty.http.HttpCookie r1;
        long $l1;
        int $i0, $i2;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        org.eclipse.jetty.http.HttpFields r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r1 := @parameter0: org.eclipse.jetty.http.HttpCookie;

        $r2 = virtualinvoke r1.<org.eclipse.jetty.http.HttpCookie: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<org.eclipse.jetty.http.HttpCookie: java.lang.String getValue()>();

        $r4 = virtualinvoke r1.<org.eclipse.jetty.http.HttpCookie: java.lang.String getDomain()>();

        $r5 = virtualinvoke r1.<org.eclipse.jetty.http.HttpCookie: java.lang.String getPath()>();

        $i0 = virtualinvoke r1.<org.eclipse.jetty.http.HttpCookie: int getMaxAge()>();

        $l1 = (long) $i0;

        $r6 = virtualinvoke r1.<org.eclipse.jetty.http.HttpCookie: java.lang.String getComment()>();

        $z0 = virtualinvoke r1.<org.eclipse.jetty.http.HttpCookie: boolean isSecure()>();

        $z1 = virtualinvoke r1.<org.eclipse.jetty.http.HttpCookie: boolean isHttpOnly()>();

        $i2 = virtualinvoke r1.<org.eclipse.jetty.http.HttpCookie: int getVersion()>();

        virtualinvoke r0.<org.eclipse.jetty.http.HttpFields: void addSetCookie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,boolean,boolean,int)>($r2, $r3, $r4, $r5, $l1, $r6, $z0, $z1, $i2);

        return;
    }

    public void addSetCookie(java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, java.lang.String, boolean, boolean, int)
    {
        byte $b2, $b11;
        java.lang.StringBuilder $r14, $r15, $r18, $r19, $r38, $r39, $r40;
        long l1, $l3, $l4, $l5;
        java.util.ArrayList $r21;
        org.eclipse.jetty.io.ByteArrayBuffer $r41;
        java.lang.String r0, $r3, r4, r5, r6, r7, $r8, r12, $r16, $r20, $r26, $r28, $r29, $r32;
        java.util.Locale $r27;
        org.eclipse.jetty.io.Buffer $r10, $r11, $r24, $r33, $r35, $r36;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, z10, z11, z12, z13;
        org.eclipse.jetty.http.HttpFields$Field $r22, $r25, r30, r31;
        java.util.HashMap $r23;
        int $i0, i6, $i7, $i8, $i9, $i10, $i12;
        org.eclipse.jetty.http.HttpFields r9;
        java.lang.IllegalArgumentException $r37;

        r9 := @this: org.eclipse.jetty.http.HttpFields;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        l1 := @parameter4: long;

        r5 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        i6 := @parameter8: int;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        $r37 = new java.lang.IllegalArgumentException;

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad cookie name");

        throw $r37;

     label02:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>(int)>(128);

        staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: boolean quoteIfNeeded(java.lang.Appendable,java.lang.String,java.lang.String)>($r38, r0, "\"\\\n\r\t\f\u0008%+ ;=");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r3 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        z8 = 0;

        z13 = 0;

        z12 = 0;

        z9 = 0;

        z11 = 0;

        z10 = 0;

        if r4 == null goto label03;

        $i10 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i10 <= 0 goto label03;

        staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: boolean quoteIfNeeded(java.lang.Appendable,java.lang.String,java.lang.String)>($r38, r4, "\"\\\n\r\t\f\u0008%+ ;=");

     label03:
        if r5 == null goto label04;

        $i9 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i9 <= 0 goto label04;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";Comment=");

        staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: boolean quoteIfNeeded(java.lang.Appendable,java.lang.String,java.lang.String)>($r38, r5, "\"\\\n\r\t\f\u0008%+ ;=");

     label04:
        if r6 == null goto label06;

        $i8 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i8 <= 0 goto label06;

        z9 = 1;

        z11 = 1;

        z10 = 1;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";Path=");

        $r29 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

        $z7 = virtualinvoke $r29.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z7 == 0 goto label05;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        goto label06;

     label05:
        staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: boolean quoteIfNeeded(java.lang.Appendable,java.lang.String,java.lang.String)>($r38, r6, "\"\\\n\r\t\f\u0008%+ ;=");

     label06:
        if r7 == null goto label07;

        $i7 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i7 <= 0 goto label07;

        z8 = 1;

        z13 = 1;

        z12 = 1;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";Domain=");

        $r27 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r28 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r27);

        staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: boolean quoteIfNeeded(java.lang.Appendable,java.lang.String,java.lang.String)>($r38, $r28, "\"\\\n\r\t\f\u0008%+ ;=");

     label07:
        $b11 = l1 cmp 0L;

        $i12 = (int) $b11;

        if $i12 < 0 goto label10;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";Expires=");

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label08;

        $r26 = <org.eclipse.jetty.http.HttpFields: java.lang.String __01Jan1970_COOKIE>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        goto label09;

     label08:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = 1000L * l1;

        $l5 = $l3 + $l4;

        staticinvoke <org.eclipse.jetty.http.HttpFields: void formatCookieDate(java.lang.StringBuilder,long)>($r38, $l5);

     label09:
        if i6 <= 0 goto label10;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";Max-Age=");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

     label10:
        if z0 == 0 goto label11;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";Secure");

     label11:
        if z1 == 0 goto label12;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";HttpOnly");

     label12:
        $r8 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        r30 = specialinvoke r9.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.http.HttpFields$Field getField(java.lang.String)>("Set-Cookie");

        r31 = null;

     label13:
        if r30 == null goto label22;

        $r10 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.io.Buffer access$600(org.eclipse.jetty.http.HttpFields$Field)>(r30);

        if $r10 != null goto label14;

        $r32 = null;

        goto label15;

     label14:
        $r11 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.io.Buffer access$600(org.eclipse.jetty.http.HttpFields$Field)>(r30);

        $r32 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

     label15:
        r12 = $r32;

        if $r32 == null goto label21;

        $z2 = virtualinvoke $r32.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z2 == 0 goto label21;

        if z13 != 0 goto label16;

        $z6 = virtualinvoke $r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("Domain");

        if $z6 == 0 goto label17;

     label16:
        if z12 == 0 goto label21;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $z3 = virtualinvoke r12.<java.lang.String: boolean contains(java.lang.CharSequence)>($r16);

        if $z3 == 0 goto label21;

     label17:
        if z11 != 0 goto label18;

        $z5 = virtualinvoke r12.<java.lang.String: boolean contains(java.lang.CharSequence)>("Path");

        if $z5 == 0 goto label19;

     label18:
        if z10 == 0 goto label21;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Path=");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $z4 = virtualinvoke r12.<java.lang.String: boolean contains(java.lang.CharSequence)>($r20);

        if $z4 == 0 goto label21;

     label19:
        $r21 = r9.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        virtualinvoke $r21.<java.util.ArrayList: boolean remove(java.lang.Object)>(r30);

        if r31 != null goto label20;

        $r23 = r9.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        $r24 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer SET_COOKIE_BUFFER>;

        $r25 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.http.HttpFields$Field access$700(org.eclipse.jetty.http.HttpFields$Field)>(r30);

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25);

        goto label22;

     label20:
        $r22 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.http.HttpFields$Field access$700(org.eclipse.jetty.http.HttpFields$Field)>(r30);

        staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.http.HttpFields$Field access$702(org.eclipse.jetty.http.HttpFields$Field,org.eclipse.jetty.http.HttpFields$Field)>(r31, $r22);

        goto label22;

     label21:
        r31 = r30;

        r30 = staticinvoke <org.eclipse.jetty.http.HttpFields$Field: org.eclipse.jetty.http.HttpFields$Field access$700(org.eclipse.jetty.http.HttpFields$Field)>(r30);

        goto label13;

     label22:
        $r33 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer SET_COOKIE_BUFFER>;

        $r41 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r41.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>($r8);

        virtualinvoke r9.<org.eclipse.jetty.http.HttpFields: void add(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r33, $r41);

        $r35 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer EXPIRES_BUFFER>;

        $r36 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.io.Buffer __01Jan1970_BUFFER>;

        virtualinvoke r9.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r35, $r36);

        return;
    }

    public void putTo(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        java.util.ArrayList $r1, $r3;
        org.eclipse.jetty.http.HttpFields$Field r5;
        int $i0, i1;
        java.lang.Object $r4;
        org.eclipse.jetty.http.HttpFields r0;
        org.eclipse.jetty.io.Buffer r2;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        r2 := @parameter0: org.eclipse.jetty.io.Buffer;

        i1 = 0;

     label1:
        $r1 = r0.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (org.eclipse.jetty.http.HttpFields$Field) $r4;

        if r5 == null goto label2;

        virtualinvoke r5.<org.eclipse.jetty.http.HttpFields$Field: void putTo(org.eclipse.jetty.io.Buffer)>(r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        staticinvoke <org.eclipse.jetty.io.BufferUtil: void putCRLF(org.eclipse.jetty.io.Buffer)>(r2);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Exception $r9;
        java.util.ArrayList $r2, $r4;
        org.eclipse.jetty.http.HttpFields$Field r6;
        java.lang.StringBuffer $r0;
        int $i0, i1;
        java.lang.Object $r5;
        java.lang.String $r3, $r7, $r8, $r11;
        org.eclipse.jetty.util.log.Logger $r10;
        org.eclipse.jetty.http.HttpFields r1;

        r1 := @this: org.eclipse.jetty.http.HttpFields;

     label1:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label2:
        $r2 = r1.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label6;

        $r4 = r1.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (org.eclipse.jetty.http.HttpFields$Field) $r5;

        if r6 == null goto label5;

        $r7 = virtualinvoke r6.<org.eclipse.jetty.http.HttpFields$Field: java.lang.String getName()>();

        if $r7 == null goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r8 = virtualinvoke r6.<org.eclipse.jetty.http.HttpFields$Field: java.lang.String getValue()>();

        if $r8 == null goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

     label7:
        return $r3;

     label8:
        $r9 := @caughtexception;

        $r10 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r9);

        $r11 = virtualinvoke $r9.<java.lang.Exception: java.lang.String toString()>();

        return $r11;

        catch java.lang.Exception from label1 to label7 with label8;
    }

    public void clear()
    {
        java.util.HashMap $r2;
        org.eclipse.jetty.http.HttpFields r0;
        java.util.ArrayList $r1;

        r0 := @this: org.eclipse.jetty.http.HttpFields;

        $r1 = r0.<org.eclipse.jetty.http.HttpFields: java.util.ArrayList _fields>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<org.eclipse.jetty.http.HttpFields: java.util.HashMap _names>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        return;
    }

    public void add(org.eclipse.jetty.http.HttpFields)
    {
        java.util.Enumeration $r1, $r4;
        java.lang.Object $r2, $r6;
        java.lang.String r3, $r7;
        org.eclipse.jetty.http.HttpFields r0, r5;
        boolean $z0, $z1;

        r5 := @this: org.eclipse.jetty.http.HttpFields;

        r0 := @parameter0: org.eclipse.jetty.http.HttpFields;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.http.HttpFields: java.util.Enumeration getFieldNames()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.http.HttpFields: java.util.Enumeration getValues(java.lang.String)>(r3);

     label3:
        $z1 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = (java.lang.String) $r6;

        virtualinvoke r5.<org.eclipse.jetty.http.HttpFields: void add(java.lang.String,java.lang.String)>(r3, $r7);

        goto label3;

     label4:
        goto label2;

     label5:
        return;
    }

    public static java.lang.String valueParameters(java.lang.String, java.util.Map)
    {
        java.util.Map r1;
        int $i0;
        java.lang.String r0, $r3, $r4, $r5, $r6, $r8, $r9, $r10, r11;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.util.QuotedStringTokenizer $r2, $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(59);

        if $i0 >= 0 goto label2;

        return r0;

     label2:
        if r1 != null goto label3;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        return $r10;

     label3:
        $r2 = new org.eclipse.jetty.util.QuotedStringTokenizer;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        specialinvoke $r2.<org.eclipse.jetty.util.QuotedStringTokenizer: void <init>(java.lang.String,java.lang.String,boolean,boolean)>($r3, ";", 0, 1);

     label4:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label7;

        $r6 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r7 = new org.eclipse.jetty.util.QuotedStringTokenizer;

        specialinvoke $r7.<org.eclipse.jetty.util.QuotedStringTokenizer: void <init>(java.lang.String,java.lang.String)>($r6, "= ");

        $z1 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label6;

        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r11 = null;

        $z2 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 == 0 goto label5;

        r11 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label5:
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r11);

     label6:
        goto label4;

     label7:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        return $r5;
    }

    public static java.lang.Float getQuality(java.lang.String)
    {
        java.lang.Float $r1, $r10, $r12, $r13, r15, $r17;
        java.util.HashMap $r16;
        int $i0, $i1, $i3, $i4, i5, i6, i7, $i8;
        java.lang.String r0, $r9;
        java.util.Map$Entry $r8;
        char $c2;
        org.eclipse.jetty.util.StringMap $r4, $r7;
        java.lang.Exception $r14;
        java.lang.Object $r3, $r5, $r11;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r13 = <org.eclipse.jetty.http.HttpFields: java.lang.Float __zero>;

        return $r13;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(";");

        i5 = $i0 + 1;

        if $i0 < 0 goto label2;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 != $i1 goto label3;

     label2:
        $r1 = <org.eclipse.jetty.http.HttpFields: java.lang.Float __one>;

        return $r1;

     label3:
        i6 = i5 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $i8 = (int) $c2;

        if $i8 != 113 goto label4;

        i7 = i6 + 1;

        $r7 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = $i3 - i7;

        $r8 = virtualinvoke $r7.<org.eclipse.jetty.util.StringMap: java.util.Map$Entry getEntry(java.lang.String,int,int)>(r0, i7, $i4);

        if $r8 == null goto label4;

        $r11 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.Float) $r11;

        return $r12;

     label4:
        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>(int)>(3);

        staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.String valueParameters(java.lang.String,java.util.Map)>(r0, $r16);

        $r3 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("q");

        $r9 = (java.lang.String) $r3;

        $r4 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.util.StringMap: java.lang.Object get(java.lang.String)>($r9);

        $r10 = (java.lang.Float) $r5;

        r15 = $r10;

        if $r10 != null goto label8;

     label5:
        $r17 = new java.lang.Float;

        specialinvoke $r17.<java.lang.Float: void <init>(java.lang.String)>($r9);

        r15 = $r17;

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;

        r15 = <org.eclipse.jetty.http.HttpFields: java.lang.Float __one>;

     label8:
        return r15;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.util.List qualityList(java.util.Enumeration)
    {
        java.lang.Float r5, $r11, r14;
        java.util.Enumeration r0;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7, $i8, $i9, $i11;
        java.lang.String $r10;
        boolean $z0, $z1;
        double $d0;
        java.util.List $r1, $r2, $r3;
        float $f0;
        java.lang.Object $r4, $r6, $r7, $r8, $r9, r12, r13;

        r0 := @parameter0: java.util.Enumeration;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label2;

     label1:
        $r1 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r1;

     label2:
        r12 = null;

        r13 = null;

     label3:
        $z1 = interfaceinvoke r0.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label5;

        $r9 = interfaceinvoke r0.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        $r11 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.Float getQuality(java.lang.String)>($r10);

        $f0 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

        $d0 = (double) $f0;

        $b6 = $d0 cmpl 0.001;

        $i9 = (int) $b6;

        if $i9 < 0 goto label4;

        r12 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>(r12, $r10);

        r13 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>(r13, $r11);

     label4:
        goto label3;

     label5:
        $r2 = staticinvoke <org.eclipse.jetty.util.LazyList: java.util.List getList(java.lang.Object,boolean)>(r12, 0);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= 2 goto label6;

        return $r2;

     label6:
        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.util.List getList(java.lang.Object,boolean)>(r13, 0);

        r14 = <org.eclipse.jetty.http.HttpFields: java.lang.Float __zero>;

        i7 = interfaceinvoke $r2.<java.util.List: int size()>();

     label7:
        $i8 = i7;

        $i11 = (int) -1;

        i7 = i7 + $i11;

        if $i8 <= 0 goto label9;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i7);

        r5 = (java.lang.Float) $r4;

        $i1 = virtualinvoke r14.<java.lang.Float: int compareTo(java.lang.Float)>(r5);

        if $i1 <= 0 goto label8;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i7);

        $i2 = i7 + 1;

        $r7 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i7, $r7);

        $i3 = i7 + 1;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i3, $r6);

        $i4 = i7 + 1;

        $r8 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i4);

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i7, $r8);

        $i5 = i7 + 1;

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i5, r5);

        r14 = <org.eclipse.jetty.http.HttpFields: java.lang.Float __zero>;

        i7 = interfaceinvoke $r2.<java.util.List: int size()>();

        goto label7;

     label8:
        r14 = r5;

        goto label7;

     label9:
        interfaceinvoke $r3.<java.util.List: void clear()>();

        return $r2;
    }

    static java.lang.String[] access$000()
    {
        java.lang.String[] $r0;

        $r0 = <org.eclipse.jetty.http.HttpFields: java.lang.String[] DAYS>;

        return $r0;
    }

    static java.lang.String[] access$100()
    {
        java.lang.String[] $r0;

        $r0 = <org.eclipse.jetty.http.HttpFields: java.lang.String[] MONTHS>;

        return $r0;
    }

    static java.lang.String[] access$300()
    {
        java.lang.String[] $r0;

        $r0 = <org.eclipse.jetty.http.HttpFields: java.lang.String[] __dateReceiveFmt>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Float $r19, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52;
        org.eclipse.jetty.io.BufferDateCache $r2, $r6;
        java.lang.Integer $r18;
        java.util.Locale $r3;
        org.eclipse.jetty.http.HttpFields$1 $r9;
        org.eclipse.jetty.http.HttpFields$2 $r11;
        java.util.TimeZone $r1, $r4, $r5;
        java.util.concurrent.ConcurrentHashMap $r17;
        org.eclipse.jetty.util.StringMap $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53;
        java.lang.String[] $r7, $r8, $r10;
        org.eclipse.jetty.io.ByteArrayBuffer $r13;
        int $i0;
        java.lang.String $r12, $r14, $r15, $r16;
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.http.HttpFields: java.lang.String __separators> = ", \t";

        <org.eclipse.jetty.http.HttpFields: java.lang.String __COOKIE_DELIM> = "\"\\\n\r\t\f\u0008%+ ;=";

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/http/HttpFields;");

        <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        <org.eclipse.jetty.http.HttpFields: java.util.TimeZone __GMT> = $r1;

        $r2 = new org.eclipse.jetty.io.BufferDateCache;

        $r3 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r2.<org.eclipse.jetty.io.BufferDateCache: void <init>(java.lang.String,java.util.Locale)>("EEE, dd MMM yyyy HH:mm:ss \'GMT\'", $r3);

        <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.io.BufferDateCache __dateCache> = $r2;

        $r4 = <org.eclipse.jetty.http.HttpFields: java.util.TimeZone __GMT>;

        virtualinvoke $r4.<java.util.TimeZone: void setID(java.lang.String)>("GMT");

        $r6 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.io.BufferDateCache __dateCache>;

        $r5 = <org.eclipse.jetty.http.HttpFields: java.util.TimeZone __GMT>;

        virtualinvoke $r6.<org.eclipse.jetty.io.BufferDateCache: void setTimeZone(java.util.TimeZone)>($r5);

        $r7 = newarray (java.lang.String)[8];

        $r7[0] = "Sat";

        $r7[1] = "Sun";

        $r7[2] = "Mon";

        $r7[3] = "Tue";

        $r7[4] = "Wed";

        $r7[5] = "Thu";

        $r7[6] = "Fri";

        $r7[7] = "Sat";

        <org.eclipse.jetty.http.HttpFields: java.lang.String[] DAYS> = $r7;

        $r8 = newarray (java.lang.String)[13];

        $r8[0] = "Jan";

        $r8[1] = "Feb";

        $r8[2] = "Mar";

        $r8[3] = "Apr";

        $r8[4] = "May";

        $r8[5] = "Jun";

        $r8[6] = "Jul";

        $r8[7] = "Aug";

        $r8[8] = "Sep";

        $r8[9] = "Oct";

        $r8[10] = "Nov";

        $r8[11] = "Dec";

        $r8[12] = "Jan";

        <org.eclipse.jetty.http.HttpFields: java.lang.String[] MONTHS> = $r8;

        $r9 = new org.eclipse.jetty.http.HttpFields$1;

        specialinvoke $r9.<org.eclipse.jetty.http.HttpFields$1: void <init>()>();

        <org.eclipse.jetty.http.HttpFields: java.lang.ThreadLocal __dateGenerator> = $r9;

        $r10 = newarray (java.lang.String)[22];

        $r10[0] = "EEE, dd MMM yyyy HH:mm:ss zzz";

        $r10[1] = "EEE, dd-MMM-yy HH:mm:ss";

        $r10[2] = "EEE MMM dd HH:mm:ss yyyy";

        $r10[3] = "EEE, dd MMM yyyy HH:mm:ss";

        $r10[4] = "EEE dd MMM yyyy HH:mm:ss zzz";

        $r10[5] = "EEE dd MMM yyyy HH:mm:ss";

        $r10[6] = "EEE MMM dd yyyy HH:mm:ss zzz";

        $r10[7] = "EEE MMM dd yyyy HH:mm:ss";

        $r10[8] = "EEE MMM-dd-yyyy HH:mm:ss zzz";

        $r10[9] = "EEE MMM-dd-yyyy HH:mm:ss";

        $r10[10] = "dd MMM yyyy HH:mm:ss zzz";

        $r10[11] = "dd MMM yyyy HH:mm:ss";

        $r10[12] = "dd-MMM-yy HH:mm:ss zzz";

        $r10[13] = "dd-MMM-yy HH:mm:ss";

        $r10[14] = "MMM dd HH:mm:ss yyyy zzz";

        $r10[15] = "MMM dd HH:mm:ss yyyy";

        $r10[16] = "EEE MMM dd HH:mm:ss yyyy zzz";

        $r10[17] = "EEE, MMM dd HH:mm:ss yyyy zzz";

        $r10[18] = "EEE, MMM dd HH:mm:ss yyyy";

        $r10[19] = "EEE, dd-MMM-yy HH:mm:ss zzz";

        $r10[20] = "EEE dd-MMM-yy HH:mm:ss zzz";

        $r10[21] = "EEE dd-MMM-yy HH:mm:ss";

        <org.eclipse.jetty.http.HttpFields: java.lang.String[] __dateReceiveFmt> = $r10;

        $r11 = new org.eclipse.jetty.http.HttpFields$2;

        specialinvoke $r11.<org.eclipse.jetty.http.HttpFields$2: void <init>()>();

        <org.eclipse.jetty.http.HttpFields: java.lang.ThreadLocal __dateParser> = $r11;

        $r12 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.String formatDate(long)>(0L);

        <org.eclipse.jetty.http.HttpFields: java.lang.String __01Jan1970> = $r12;

        $r13 = new org.eclipse.jetty.io.ByteArrayBuffer;

        $r14 = <org.eclipse.jetty.http.HttpFields: java.lang.String __01Jan1970>;

        specialinvoke $r13.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>($r14);

        <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.io.Buffer __01Jan1970_BUFFER> = $r13;

        $r15 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.String formatCookieDate(long)>(0L);

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        <org.eclipse.jetty.http.HttpFields: java.lang.String __01Jan1970_COOKIE> = $r16;

        $r17 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r17.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.eclipse.jetty.http.HttpFields: java.util.concurrent.ConcurrentMap __cache> = $r17;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>("org.eclipse.jetty.http.HttpFields.CACHE", 2000);

        $i0 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        <org.eclipse.jetty.http.HttpFields: int __cacheSize> = $i0;

        $r19 = new java.lang.Float;

        specialinvoke $r19.<java.lang.Float: void <init>(java.lang.String)>("1.0");

        <org.eclipse.jetty.http.HttpFields: java.lang.Float __one> = $r19;

        $r20 = new java.lang.Float;

        specialinvoke $r20.<java.lang.Float: void <init>(java.lang.String)>("0.0");

        <org.eclipse.jetty.http.HttpFields: java.lang.Float __zero> = $r20;

        $r21 = new org.eclipse.jetty.util.StringMap;

        specialinvoke $r21.<org.eclipse.jetty.util.StringMap: void <init>()>();

        <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities> = $r21;

        $r23 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r22 = <org.eclipse.jetty.http.HttpFields: java.lang.Float __one>;

        virtualinvoke $r23.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>(null, $r22);

        $r25 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r24 = <org.eclipse.jetty.http.HttpFields: java.lang.Float __one>;

        virtualinvoke $r25.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("1.0", $r24);

        $r27 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r26 = <org.eclipse.jetty.http.HttpFields: java.lang.Float __one>;

        virtualinvoke $r27.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("1", $r26);

        $r29 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r28 = new java.lang.Float;

        specialinvoke $r28.<java.lang.Float: void <init>(java.lang.String)>("0.9");

        virtualinvoke $r29.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.9", $r28);

        $r31 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r30 = new java.lang.Float;

        specialinvoke $r30.<java.lang.Float: void <init>(java.lang.String)>("0.8");

        virtualinvoke $r31.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.8", $r30);

        $r33 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r32 = new java.lang.Float;

        specialinvoke $r32.<java.lang.Float: void <init>(java.lang.String)>("0.7");

        virtualinvoke $r33.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.7", $r32);

        $r35 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r34 = new java.lang.Float;

        specialinvoke $r34.<java.lang.Float: void <init>(java.lang.String)>("0.66");

        virtualinvoke $r35.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.66", $r34);

        $r37 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r36 = new java.lang.Float;

        specialinvoke $r36.<java.lang.Float: void <init>(java.lang.String)>("0.6");

        virtualinvoke $r37.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.6", $r36);

        $r39 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r38 = new java.lang.Float;

        specialinvoke $r38.<java.lang.Float: void <init>(java.lang.String)>("0.5");

        virtualinvoke $r39.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.5", $r38);

        $r41 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r40 = new java.lang.Float;

        specialinvoke $r40.<java.lang.Float: void <init>(java.lang.String)>("0.4");

        virtualinvoke $r41.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.4", $r40);

        $r43 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r42 = new java.lang.Float;

        specialinvoke $r42.<java.lang.Float: void <init>(java.lang.String)>("0.33");

        virtualinvoke $r43.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.33", $r42);

        $r45 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r44 = new java.lang.Float;

        specialinvoke $r44.<java.lang.Float: void <init>(java.lang.String)>("0.3");

        virtualinvoke $r45.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.3", $r44);

        $r47 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r46 = new java.lang.Float;

        specialinvoke $r46.<java.lang.Float: void <init>(java.lang.String)>("0.2");

        virtualinvoke $r47.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.2", $r46);

        $r49 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r48 = new java.lang.Float;

        specialinvoke $r48.<java.lang.Float: void <init>(java.lang.String)>("0.1");

        virtualinvoke $r49.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.1", $r48);

        $r51 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r50 = <org.eclipse.jetty.http.HttpFields: java.lang.Float __zero>;

        virtualinvoke $r51.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0", $r50);

        $r53 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.util.StringMap __qualities>;

        $r52 = <org.eclipse.jetty.http.HttpFields: java.lang.Float __zero>;

        virtualinvoke $r53.<org.eclipse.jetty.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("0.0", $r52);

        return;
    }
}
