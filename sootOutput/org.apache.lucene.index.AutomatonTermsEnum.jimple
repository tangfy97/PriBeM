class org.apache.lucene.index.AutomatonTermsEnum extends org.apache.lucene.index.FilteredTermsEnum
{
    private final org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton;
    private final org.apache.lucene.util.BytesRef commonSuffixRef;
    private final boolean finite;
    private final org.apache.lucene.util.automaton.Transition[][] allTransitions;
    private final long[] visited;
    private long curGen;
    private final org.apache.lucene.util.BytesRef seekBytesRef;
    private boolean linear;
    private final org.apache.lucene.util.BytesRef linearUpperBound;
    private final java.util.Comparator termComp;
    private final org.apache.lucene.util.IntsRef savedStates;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.TermsEnum, org.apache.lucene.util.automaton.CompiledAutomaton)
    {
        org.apache.lucene.util.automaton.Transition[][] $r9;
        java.lang.AssertionError $r14;
        org.apache.lucene.util.IntsRef $r4;
        org.apache.lucene.index.AutomatonTermsEnum r0;
        long[] $r11;
        org.apache.lucene.index.TermsEnum r1;
        int $i0;
        java.lang.Boolean $r6;
        org.apache.lucene.util.automaton.CompiledAutomaton r5;
        boolean $z0, $z1;
        org.apache.lucene.util.BytesRef $r2, $r3, $r8;
        org.apache.lucene.util.automaton.ByteRunAutomaton $r7, $r10, $r13;
        java.util.Comparator $r12;

        r0 := @this: org.apache.lucene.index.AutomatonTermsEnum;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        r5 := @parameter1: org.apache.lucene.util.automaton.CompiledAutomaton;

        specialinvoke r0.<org.apache.lucene.index.FilteredTermsEnum: void <init>(org.apache.lucene.index.TermsEnum)>(r1);

        $r2 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r2.<org.apache.lucene.util.BytesRef: void <init>(int)>(10);

        r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef> = $r2;

        r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean linear> = 0;

        $r3 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r3.<org.apache.lucene.util.BytesRef: void <init>(int)>(10);

        r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef linearUpperBound> = $r3;

        $r4 = new org.apache.lucene.util.IntsRef;

        specialinvoke $r4.<org.apache.lucene.util.IntsRef: void <init>(int)>(10);

        r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.IntsRef savedStates> = $r4;

        $r6 = r5.<org.apache.lucene.util.automaton.CompiledAutomaton: java.lang.Boolean finite>;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean finite> = $z0;

        $r7 = r5.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton> = $r7;

        $z1 = <org.apache.lucene.index.AutomatonTermsEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r13 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        if $r13 != null goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        $r8 = r5.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef>;

        r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef commonSuffixRef> = $r8;

        $r9 = r5.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.Transition[][] sortedTransitions>;

        r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.Transition[][] allTransitions> = $r9;

        $r10 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $i0 = virtualinvoke $r10.<org.apache.lucene.util.automaton.ByteRunAutomaton: int getSize()>();

        $r11 = newarray (long)[$i0];

        r0.<org.apache.lucene.index.AutomatonTermsEnum: long[] visited> = $r11;

        $r12 = virtualinvoke r0.<org.apache.lucene.index.AutomatonTermsEnum: java.util.Comparator getComparator()>();

        r0.<org.apache.lucene.index.AutomatonTermsEnum: java.util.Comparator termComp> = $r12;

        return;
    }

    protected org.apache.lucene.index.FilteredTermsEnum$AcceptStatus accept(org.apache.lucene.util.BytesRef)
    {
        byte[] $r3;
        org.apache.lucene.index.FilteredTermsEnum$AcceptStatus $r10, $r11, $r12;
        org.apache.lucene.index.AutomatonTermsEnum r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.util.BytesRef $r1, r2, $r5, $r7, $r8;
        org.apache.lucene.util.automaton.ByteRunAutomaton $r4;
        java.util.Comparator $r6, $r9;

        r0 := @this: org.apache.lucene.index.AutomatonTermsEnum;

        r2 := @parameter0: org.apache.lucene.util.BytesRef;

        $r1 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef commonSuffixRef>;

        if $r1 == null goto label1;

        $r7 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef commonSuffixRef>;

        $z3 = staticinvoke <org.apache.lucene.util.StringHelper: boolean endsWith(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>(r2, $r7);

        if $z3 == 0 goto label7;

     label1:
        $r4 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $r3 = r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i1 = r2.<org.apache.lucene.util.BytesRef: int offset>;

        $i0 = r2.<org.apache.lucene.util.BytesRef: int length>;

        $z0 = virtualinvoke $r4.<org.apache.lucene.util.automaton.ByteRunAutomaton: boolean run(byte[],int,int)>($r3, $i1, $i0);

        if $z0 == 0 goto label4;

        $z2 = r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean linear>;

        if $z2 == 0 goto label2;

        $r10 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus YES>;

        goto label3;

     label2:
        $r10 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus YES_AND_SEEK>;

     label3:
        return $r10;

     label4:
        $z1 = r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean linear>;

        if $z1 == 0 goto label5;

        $r6 = r0.<org.apache.lucene.index.AutomatonTermsEnum: java.util.Comparator termComp>;

        $r5 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef linearUpperBound>;

        $i2 = interfaceinvoke $r6.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $i2 >= 0 goto label5;

        $r11 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus NO>;

        goto label6;

     label5:
        $r11 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus NO_AND_SEEK>;

     label6:
        return $r11;

     label7:
        $z4 = r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean linear>;

        if $z4 == 0 goto label8;

        $r9 = r0.<org.apache.lucene.index.AutomatonTermsEnum: java.util.Comparator termComp>;

        $r8 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef linearUpperBound>;

        $i3 = interfaceinvoke $r9.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r8);

        if $i3 >= 0 goto label8;

        $r12 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus NO>;

        goto label9;

     label8:
        $r12 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus NO_AND_SEEK>;

     label9:
        return $r12;
    }

    protected org.apache.lucene.util.BytesRef nextSeekTerm(org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRef r0, $r2, $r3, $r6, $r7;
        java.lang.AssertionError $r8;
        org.apache.lucene.index.AutomatonTermsEnum r1;
        org.apache.lucene.util.automaton.ByteRunAutomaton $r4, $r5;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.index.AutomatonTermsEnum;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        if r0 != null goto label2;

        $z1 = <org.apache.lucene.index.AutomatonTermsEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r7 = r1.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i1 = $r7.<org.apache.lucene.util.BytesRef: int length>;

        if $i1 == 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r5 = r1.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $r4 = r1.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $i0 = virtualinvoke $r4.<org.apache.lucene.util.automaton.ByteRunAutomaton: int getInitialState()>();

        $z2 = virtualinvoke $r5.<org.apache.lucene.util.automaton.ByteRunAutomaton: boolean isAccept(int)>($i0);

        if $z2 == 0 goto label3;

        $r6 = r1.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        return $r6;

     label2:
        $r2 = r1.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        virtualinvoke $r2.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>(r0);

     label3:
        $z0 = specialinvoke r1.<org.apache.lucene.index.AutomatonTermsEnum: boolean nextString()>();

        if $z0 == 0 goto label4;

        $r3 = r1.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        return $r3;

     label4:
        return null;
    }

    private void setLinear(int)
    {
        org.apache.lucene.util.automaton.Transition[][] $r2, $r15;
        byte[] $r5, $r8, $r9, $r11, $r13, $r19, $r21, $r23;
        org.apache.lucene.index.AutomatonTermsEnum r0;
        byte $b3, $b6, $b8, $b11;
        org.apache.lucene.util.automaton.Transition[] $r3, $r16;
        boolean $z0, $z1, $z2;
        org.apache.lucene.util.BytesRef $r4, $r6, $r7, $r10, $r12, $r14, $r18, $r20, $r22;
        java.lang.StringBuilder $r27, $r28, $r32;
        java.lang.AssertionError $r31, $r33;
        short $s7, $s9, $s12, $s18, $s20, $s22;
        int i0, $i1, $i2, $i4, $i5, $i10, $i13, i14, i15, i16, i17, $i19, $i21, $i23;
        java.lang.String $r29;
        org.apache.lucene.util.automaton.Transition r17;
        org.apache.lucene.util.automaton.ByteRunAutomaton $r1, $r24;

        r0 := @this: org.apache.lucene.index.AutomatonTermsEnum;

        i0 := @parameter0: int;

        $z0 = <org.apache.lucene.index.AutomatonTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean linear>;

        if $z2 == 0 goto label1;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label1:
        $r1 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        i14 = virtualinvoke $r1.<org.apache.lucene.util.automaton.ByteRunAutomaton: int getInitialState()>();

        i15 = 255;

        i16 = 0;

     label2:
        if i16 >= i0 goto label4;

        $r24 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $r22 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r23 = $r22.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b11 = $r23[i16];

        $s18 = (short) $b11;

        $s12 = $s18 & 255;

        $i19 = (int) $s12;

        $i13 = virtualinvoke $r24.<org.apache.lucene.util.automaton.ByteRunAutomaton: int step(int,int)>(i14, $i19);

        i14 = $i13;

        $z1 = <org.apache.lucene.index.AutomatonTermsEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        if $i13 >= 0 goto label3;

        $r33 = new java.lang.AssertionError;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state=");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.AssertionError: void <init>(java.lang.Object)>($r29);

        throw $r33;

     label3:
        i16 = i16 + 1;

        goto label2;

     label4:
        i17 = 0;

     label5:
        $r2 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.Transition[][] allTransitions>;

        $r3 = $r2[i14];

        $i1 = lengthof $r3;

        if i17 >= $i1 goto label7;

        $r15 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.Transition[][] allTransitions>;

        $r16 = $r15[i14];

        r17 = $r16[i17];

        $i5 = virtualinvoke r17.<org.apache.lucene.util.automaton.Transition: int getMin()>();

        $r18 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r19 = $r18.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b6 = $r19[i0];

        $s20 = (short) $b6;

        $s7 = $s20 & 255;

        $i21 = (int) $s7;

        if $i5 > $i21 goto label6;

        $r20 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r21 = $r20.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b8 = $r21[i0];

        $s22 = (short) $b8;

        $s9 = $s22 & 255;

        $i10 = virtualinvoke r17.<org.apache.lucene.util.automaton.Transition: int getMax()>();

        $i23 = (int) $s9;

        if $i23 > $i10 goto label6;

        i15 = virtualinvoke r17.<org.apache.lucene.util.automaton.Transition: int getMax()>();

        goto label7;

     label6:
        i17 = i17 + 1;

        goto label5;

     label7:
        if i15 == 255 goto label8;

        i15 = i15 + 1;

     label8:
        $i4 = i0 + 1;

        $r4 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef linearUpperBound>;

        $r5 = $r4.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i2 = lengthof $r5;

        if $i2 >= $i4 goto label9;

        $r14 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef linearUpperBound>;

        $r13 = newarray (byte)[$i4];

        $r14.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r13;

     label9:
        $r6 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r9 = $r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r7 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef linearUpperBound>;

        $r8 = $r7.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r8, 0, i0);

        $r10 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef linearUpperBound>;

        $r11 = $r10.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b3 = (byte) i15;

        $r11[i0] = $b3;

        $r12 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef linearUpperBound>;

        $r12.<org.apache.lucene.util.BytesRef: int length> = $i4;

        r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean linear> = 1;

        return;
    }

    private boolean nextString()
    {
        byte[] $r7, $r12;
        org.apache.lucene.util.IntsRef $r2, $r3;
        org.apache.lucene.index.AutomatonTermsEnum r0;
        byte $b6, $b11, $b17;
        int[] r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.util.BytesRef $r1, $r6, $r11, $r15;
        long $l3, $l4, $l10, $l15, $l16;
        short $s7, $s12, $s21, $s25;
        long[] $r10, $r14;
        int $i0, $i1, $i2, $i5, $i8, $i9, $i13, $i14, i18, i19, $i20, $i22, $i24, $i26;
        org.apache.lucene.util.automaton.ByteRunAutomaton $r5, $r8, $r9, $r13;

        r0 := @this: org.apache.lucene.index.AutomatonTermsEnum;

        i18 = 0;

        $r2 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.IntsRef savedStates>;

        $r1 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i0 = $r1.<org.apache.lucene.util.BytesRef: int length>;

        $i1 = $i0 + 1;

        virtualinvoke $r2.<org.apache.lucene.util.IntsRef: void grow(int)>($i1);

        $r3 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.IntsRef savedStates>;

        r4 = $r3.<org.apache.lucene.util.IntsRef: int[] ints>;

        $r5 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $i2 = virtualinvoke $r5.<org.apache.lucene.util.automaton.ByteRunAutomaton: int getInitialState()>();

        r4[0] = $i2;

     label1:
        $l3 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long curGen>;

        $l4 = $l3 + 1L;

        r0.<org.apache.lucene.index.AutomatonTermsEnum: long curGen> = $l4;

        r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean linear> = 0;

        i19 = r4[i18];

     label2:
        $r15 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i20 = $r15.<org.apache.lucene.util.BytesRef: int length>;

        if i18 >= $i20 goto label5;

        $r10 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long[] visited>;

        $l10 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long curGen>;

        $r10[i19] = $l10;

        $r13 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $r11 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r12 = $r11.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b11 = $r12[i18];

        $s21 = (short) $b11;

        $s12 = $s21 & 255;

        $i22 = (int) $s12;

        $i13 = virtualinvoke $r13.<org.apache.lucene.util.automaton.ByteRunAutomaton: int step(int,int)>(i19, $i22);

        $i24 = (int) -1;

        if $i13 != $i24 goto label3;

        goto label5;

     label3:
        $i14 = i18 + 1;

        r4[$i14] = $i13;

        $z3 = r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean finite>;

        if $z3 != 0 goto label4;

        $z4 = r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean linear>;

        if $z4 != 0 goto label4;

        $r14 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long[] visited>;

        $l16 = $r14[$i13];

        $l15 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long curGen>;

        $b17 = $l16 cmp $l15;

        if $b17 != 0 goto label4;

        specialinvoke r0.<org.apache.lucene.index.AutomatonTermsEnum: void setLinear(int)>(i18);

     label4:
        i19 = $i13;

        i18 = i18 + 1;

        goto label2;

     label5:
        $z0 = specialinvoke r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean nextString(int,int)>(i19, i18);

        if $z0 == 0 goto label6;

        return 1;

     label6:
        $i5 = specialinvoke r0.<org.apache.lucene.index.AutomatonTermsEnum: int backtrack(int)>(i18);

        i18 = $i5;

        if $i5 >= 0 goto label7;

        return 0;

     label7:
        $r8 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $i8 = r4[$i5];

        $r6 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r7 = $r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b6 = $r7[$i5];

        $s25 = (short) $b6;

        $s7 = $s25 & 255;

        $i26 = (int) $s7;

        $i9 = virtualinvoke $r8.<org.apache.lucene.util.automaton.ByteRunAutomaton: int step(int,int)>($i8, $i26);

        if $i9 < 0 goto label8;

        $r9 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $z2 = virtualinvoke $r9.<org.apache.lucene.util.automaton.ByteRunAutomaton: boolean isAccept(int)>($i9);

        if $z2 == 0 goto label8;

        return 1;

     label8:
        $z1 = r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean finite>;

        if $z1 != 0 goto label9;

        i18 = 0;

     label9:
        goto label1;
    }

    private boolean nextString(int, int)
    {
        org.apache.lucene.util.automaton.Transition[][] $r4, $r14;
        byte[] $r10, $r22, $r26;
        byte $b11, $b22, $b25, $b28, $b37;
        org.apache.lucene.util.automaton.Transition[] $r15, $r27;
        long $l2, $l13, $l23, $l24, $l35, $l36;
        short s31, $s38;
        org.apache.lucene.util.automaton.State $r11, $r16;
        org.apache.lucene.index.AutomatonTermsEnum r0;
        boolean $z0, $z1, $z2;
        org.apache.lucene.util.BytesRef $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r17, $r18, $r19, $r20, $r21, $r24, $r25;
        long[] $r3, $r13, $r23, $r29;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i26, $i27, i29, i30, i32, $i33, i34, $i39, $i40;
        org.apache.lucene.util.automaton.Transition r28, r30;
        org.apache.lucene.util.automaton.ByteRunAutomaton $r12;

        r0 := @this: org.apache.lucene.index.AutomatonTermsEnum;

        i29 := @parameter0: int;

        i0 := @parameter1: int;

        i30 = 0;

        $r1 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i1 = $r1.<org.apache.lucene.util.BytesRef: int length>;

        if i0 >= $i1 goto label1;

        $r25 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r26 = $r25.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b28 = $r26[i0];

        $s38 = (short) $b28;

        s31 = $s38 & 255;

        $i39 = (int) s31;

        i30 = $i39 + 1;

        $i40 = (int) s31;

        if $i40 != 255 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r2.<org.apache.lucene.util.BytesRef: int length> = i0;

        $r3 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long[] visited>;

        $l2 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long curGen>;

        $r3[i29] = $l2;

        $r4 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.Transition[][] allTransitions>;

        $r27 = $r4[i29];

        i32 = 0;

     label2:
        $i33 = lengthof $r27;

        if i32 >= $i33 goto label6;

        r28 = $r27[i32];

        $i3 = virtualinvoke r28.<org.apache.lucene.util.automaton.Transition: int getMax()>();

        if $i3 < i30 goto label5;

        $i4 = virtualinvoke r28.<org.apache.lucene.util.automaton.Transition: int getMin()>();

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(i30, $i4);

        $r6 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r5 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i6 = $r5.<org.apache.lucene.util.BytesRef: int length>;

        $i7 = $i6 + 1;

        virtualinvoke $r6.<org.apache.lucene.util.BytesRef: void grow(int)>($i7);

        $r7 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i8 = $r7.<org.apache.lucene.util.BytesRef: int length>;

        $i9 = $i8 + 1;

        $r7.<org.apache.lucene.util.BytesRef: int length> = $i9;

        $r8 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r10 = $r8.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r9 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i10 = $r9.<org.apache.lucene.util.BytesRef: int length>;

        $i12 = $i10 - 1;

        $b11 = (byte) $i5;

        $r10[$i12] = $b11;

        $r11 = virtualinvoke r28.<org.apache.lucene.util.automaton.Transition: org.apache.lucene.util.automaton.State getDest()>();

        i34 = virtualinvoke $r11.<org.apache.lucene.util.automaton.State: int getNumber()>();

     label3:
        $r29 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long[] visited>;

        $l35 = $r29[i34];

        $l36 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long curGen>;

        $b37 = $l35 cmp $l36;

        if $b37 == 0 goto label4;

        $r12 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $z0 = virtualinvoke $r12.<org.apache.lucene.util.automaton.ByteRunAutomaton: boolean isAccept(int)>(i34);

        if $z0 != 0 goto label4;

        $r13 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long[] visited>;

        $l13 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long curGen>;

        $r13[i34] = $l13;

        $r14 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.automaton.Transition[][] allTransitions>;

        $r15 = $r14[i34];

        r30 = $r15[0];

        $r16 = virtualinvoke r30.<org.apache.lucene.util.automaton.Transition: org.apache.lucene.util.automaton.State getDest()>();

        $i14 = virtualinvoke $r16.<org.apache.lucene.util.automaton.State: int getNumber()>();

        i34 = $i14;

        $r18 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r17 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i15 = $r17.<org.apache.lucene.util.BytesRef: int length>;

        $i16 = $i15 + 1;

        virtualinvoke $r18.<org.apache.lucene.util.BytesRef: void grow(int)>($i16);

        $r19 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i17 = $r19.<org.apache.lucene.util.BytesRef: int length>;

        $i18 = $i17 + 1;

        $r19.<org.apache.lucene.util.BytesRef: int length> = $i18;

        $r20 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r22 = $r20.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r21 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i19 = $r21.<org.apache.lucene.util.BytesRef: int length>;

        $i20 = $i19 - 1;

        $i21 = virtualinvoke r30.<org.apache.lucene.util.automaton.Transition: int getMin()>();

        $b22 = (byte) $i21;

        $r22[$i20] = $b22;

        $z1 = r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean finite>;

        if $z1 != 0 goto label3;

        $z2 = r0.<org.apache.lucene.index.AutomatonTermsEnum: boolean linear>;

        if $z2 != 0 goto label3;

        $r23 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long[] visited>;

        $l24 = $r23[$i14];

        $l23 = r0.<org.apache.lucene.index.AutomatonTermsEnum: long curGen>;

        $b25 = $l24 cmp $l23;

        if $b25 != 0 goto label3;

        $r24 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i26 = $r24.<org.apache.lucene.util.BytesRef: int length>;

        $i27 = $i26 - 1;

        specialinvoke r0.<org.apache.lucene.index.AutomatonTermsEnum: void setLinear(int)>($i27);

        goto label3;

     label4:
        return 1;

     label5:
        i32 = i32 + 1;

        goto label2;

     label6:
        return 0;
    }

    private int backtrack(int)
    {
        byte[] $r2, $r4;
        short s5, $s9;
        org.apache.lucene.index.AutomatonTermsEnum r0;
        byte $b1, $b2;
        int $i0, $i3, i4, i6, $i8, $i10, $i11, $i13;
        org.apache.lucene.util.BytesRef $r1, $r3, $r5;

        r0 := @this: org.apache.lucene.index.AutomatonTermsEnum;

        i4 := @parameter0: int;

     label1:
        $i0 = i4;

        $i8 = (int) -1;

        i4 = i4 + $i8;

        if $i0 <= 0 goto label3;

        $r1 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r2 = $r1.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b1 = $r2[i4];

        $s9 = (short) $b1;

        s5 = $s9 & 255;

        $i10 = (int) s5;

        i6 = $i10 + 1;

        $i11 = (int) s5;

        if $i11 == 255 goto label2;

        $r3 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $r4 = $r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b2 = (byte) i6;

        $r4[i4] = $b2;

        $r5 = r0.<org.apache.lucene.index.AutomatonTermsEnum: org.apache.lucene.util.BytesRef seekBytesRef>;

        $i3 = i4 + 1;

        $r5.<org.apache.lucene.util.BytesRef: int length> = $i3;

        return i4;

     label2:
        goto label1;

     label3:
        $i13 = (int) -1;

        return $i13;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/AutomatonTermsEnum;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.AutomatonTermsEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
