public class org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog extends org.wiztools.restclient.ui.EscapableDialog
{
    private static final java.lang.String[] contentTypeArr;
    public static final java.lang.String DEFAULT_CONTENT_TYPE;
    private static final java.lang.String[] charSetArr;
    public static final java.lang.String DEFAULT_CHARSET;
    public static final java.lang.String PARAM_CONTENT_TYPE_STR;
    public static final java.nio.charset.Charset PARAM_CHARSET;
    public static final org.wiztools.restclient.bean.ContentType PARAM_CONTENT_TYPE;
    private javax.swing.JComboBox jcb_content_type;
    private javax.swing.JComboBox jcb_charset;
    private java.lang.String contentType;
    private java.lang.String charset;
    private java.util.List listeners;

    public void <init>(org.wiztools.restclient.ui.RESTUserInterface)
    {
        org.wiztools.restclient.ui.RESTUserInterface r1;
        java.lang.String[] $r4, $r6;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;
        java.util.ArrayList $r7;
        javax.swing.JFrame $r2;
        javax.swing.JComboBox $r3, $r5, $r8, $r9;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        r1 := @parameter0: org.wiztools.restclient.ui.RESTUserInterface;

        $r2 = interfaceinvoke r1.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        specialinvoke r0.<org.wiztools.restclient.ui.EscapableDialog: void <init>(java.awt.Frame,boolean)>($r2, 1);

        $r3 = new javax.swing.JComboBox;

        $r4 = <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String[] contentTypeArr>;

        specialinvoke $r3.<javax.swing.JComboBox: void <init>(java.lang.Object[])>($r4);

        r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_content_type> = $r3;

        $r5 = new javax.swing.JComboBox;

        $r6 = <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String[] charSetArr>;

        specialinvoke $r5.<javax.swing.JComboBox: void <init>(java.lang.Object[])>($r6);

        r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_charset> = $r5;

        r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String contentType> = "text/plain";

        r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String charset> = "UTF-8";

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.util.List listeners> = $r7;

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: void setTitle(java.lang.String)>("Body Content-type");

        $r8 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_content_type>;

        virtualinvoke $r8.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>("text/plain");

        $r9 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_charset>;

        virtualinvoke $r9.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>("UTF-8");

        return;
    }

    protected void init()
    {
        javax.swing.border.Border $r25;
        java.awt.GridLayout $r8, $r14;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog$1 $r21;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog$2 $r23;
        javax.swing.JComboBox $r1, $r2, $r10, $r12, $r15, $r16, $r26, $r27;
        java.awt.BorderLayout $r4, $r6;
        java.awt.FlowLayout $r18;
        javax.swing.JRootPane $r20;
        javax.swing.JButton $r19, $r22;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;
        javax.swing.JLabel $r9, $r11;
        javax.swing.JPanel $r3, $r5, $r7, $r13, $r17, $r24;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_content_type>;

        virtualinvoke $r1.<javax.swing.JComboBox: void setEditable(boolean)>(1);

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_charset>;

        virtualinvoke $r2.<javax.swing.JComboBox: void setEditable(boolean)>(1);

        $r3 = new javax.swing.JPanel;

        specialinvoke $r3.<javax.swing.JPanel: void <init>()>();

        $r4 = new java.awt.BorderLayout;

        specialinvoke $r4.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke $r3.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r4);

        $r5 = new javax.swing.JPanel;

        specialinvoke $r5.<javax.swing.JPanel: void <init>()>();

        $r6 = new java.awt.BorderLayout;

        specialinvoke $r6.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke $r5.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r6);

        $r7 = new javax.swing.JPanel;

        specialinvoke $r7.<javax.swing.JPanel: void <init>()>();

        $r8 = new java.awt.GridLayout;

        specialinvoke $r8.<java.awt.GridLayout: void <init>(int,int,int,int)>(2, 1, 5, 5);

        virtualinvoke $r7.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r8);

        $r9 = new javax.swing.JLabel;

        specialinvoke $r9.<javax.swing.JLabel: void <init>(java.lang.String)>("Content-type: ");

        $r10 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_content_type>;

        virtualinvoke $r9.<javax.swing.JLabel: void setLabelFor(java.awt.Component)>($r10);

        $r11 = new javax.swing.JLabel;

        specialinvoke $r11.<javax.swing.JLabel: void <init>(java.lang.String)>("Charset: ");

        $r12 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_charset>;

        virtualinvoke $r11.<javax.swing.JLabel: void setLabelFor(java.awt.Component)>($r12);

        virtualinvoke $r7.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r9);

        virtualinvoke $r7.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r11);

        virtualinvoke $r5.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r7, "West");

        $r13 = new javax.swing.JPanel;

        specialinvoke $r13.<javax.swing.JPanel: void <init>()>();

        $r14 = new java.awt.GridLayout;

        specialinvoke $r14.<java.awt.GridLayout: void <init>(int,int,int,int)>(2, 1, 5, 5);

        virtualinvoke $r13.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r14);

        $r15 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_content_type>;

        virtualinvoke $r13.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r15);

        $r16 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_charset>;

        virtualinvoke $r13.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r16);

        virtualinvoke $r5.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r13, "Center");

        virtualinvoke $r3.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r5, "Center");

        $r17 = new javax.swing.JPanel;

        specialinvoke $r17.<javax.swing.JPanel: void <init>()>();

        $r18 = new java.awt.FlowLayout;

        specialinvoke $r18.<java.awt.FlowLayout: void <init>(int)>(1);

        virtualinvoke $r17.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r18);

        $r19 = new javax.swing.JButton;

        specialinvoke $r19.<javax.swing.JButton: void <init>(java.lang.String)>("Ok");

        virtualinvoke $r19.<javax.swing.JButton: void setMnemonic(char)>(111);

        $r20 = virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JRootPane getRootPane()>();

        virtualinvoke $r20.<javax.swing.JRootPane: void setDefaultButton(javax.swing.JButton)>($r19);

        $r21 = new org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog$1;

        specialinvoke $r21.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog$1: void <init>(org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog)>(r0);

        virtualinvoke $r19.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r21);

        $r22 = new javax.swing.JButton;

        specialinvoke $r22.<javax.swing.JButton: void <init>(java.lang.String)>("Cancel");

        virtualinvoke $r22.<javax.swing.JButton: void setMnemonic(char)>(99);

        $r23 = new org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog$2;

        specialinvoke $r23.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog$2: void <init>(org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog)>(r0);

        virtualinvoke $r22.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r23);

        virtualinvoke $r17.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r19);

        virtualinvoke $r17.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r22);

        virtualinvoke $r3.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r17, "South");

        $r24 = new javax.swing.JPanel;

        specialinvoke $r24.<javax.swing.JPanel: void <init>()>();

        $r25 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke $r24.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r25);

        virtualinvoke $r24.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r3);

        $r26 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_charset>;

        staticinvoke <org.jdesktop.swingx.autocomplete.AutoCompleteDecorator: void decorate(javax.swing.JComboBox)>($r26);

        $r27 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_content_type>;

        staticinvoke <org.jdesktop.swingx.autocomplete.AutoCompleteDecorator: void decorate(javax.swing.JComboBox)>($r27);

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: void setContentPane(java.awt.Container)>($r24);

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: void pack()>();

        return;
    }

    public void doEscape(java.awt.AWTEvent)
    {
        java.awt.AWTEvent r1;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        r1 := @parameter0: java.awt.AWTEvent;

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: void hideMe(boolean)>(0);

        return;
    }

    void hideMe(boolean)
    {
        java.lang.String $r1, $r3, $r7, $r10, $r15, $r16;
        javax.swing.JComboBox $r2, $r4, $r5, $r8;
        boolean z0, $z1;
        java.util.Iterator $r12;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;
        java.util.List $r11;
        java.lang.Object $r6, $r9, $r13;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener r14;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label3;

        $r5 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_content_type>;

        $r6 = virtualinvoke $r5.<javax.swing.JComboBox: java.lang.Object getSelectedItem()>();

        $r7 = (java.lang.String) $r6;

        r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String contentType> = $r7;

        $r8 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_charset>;

        $r9 = virtualinvoke $r8.<javax.swing.JComboBox: java.lang.Object getSelectedItem()>();

        $r10 = (java.lang.String) $r9;

        r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String charset> = $r10;

        $r11 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.util.List listeners>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener) $r13;

        $r16 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String contentType>;

        $r15 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String charset>;

        interfaceinvoke r14.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener: void changed(java.lang.String,java.lang.String)>($r16, $r15);

        goto label1;

     label2:
        goto label4;

     label3:
        $r2 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_content_type>;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String contentType>;

        virtualinvoke $r2.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>($r1);

        $r4 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_charset>;

        $r3 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String charset>;

        virtualinvoke $r4.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>($r3);

     label4:
        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: void setVisible(boolean)>(0);

        return;
    }

    java.lang.String getContentType()
    {
        java.lang.String $r1;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String contentType>;

        return $r1;
    }

    void setContentType(java.lang.String)
    {
        java.util.Iterator $r4;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;
        java.util.List $r3;
        java.lang.Object $r5;
        java.lang.String r1, $r7;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener r6;
        javax.swing.JComboBox $r2;
        boolean $z0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        r1 := @parameter0: java.lang.String;

        r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String contentType> = r1;

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_content_type>;

        virtualinvoke $r2.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>(r1);

        $r3 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.util.List listeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener) $r5;

        $r7 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String charset>;

        interfaceinvoke r6.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener: void changed(java.lang.String,java.lang.String)>(r1, $r7);

        goto label1;

     label2:
        return;
    }

    java.lang.String getCharsetString()
    {
        java.lang.String $r1;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String charset>;

        return $r1;
    }

    java.nio.charset.Charset getCharset()
    {
        java.nio.charset.Charset $r3;
        java.lang.String $r1, $r2;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;
        boolean $z0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String charset>;

        $z0 = staticinvoke <org.wiztools.commons.StringUtil: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String charset>;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);

        return $r3;
    }

    void setCharset(java.nio.charset.Charset)
    {
        java.lang.String $r2;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;
        java.nio.charset.Charset r1;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        r1 := @parameter0: java.nio.charset.Charset;

        $r2 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: void setCharset(java.lang.String)>($r2);

        return;
    }

    void setCharset(java.lang.String)
    {
        java.util.Iterator $r4;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;
        java.util.List $r3;
        java.lang.Object $r5;
        java.lang.String r1, $r7;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener r6;
        javax.swing.JComboBox $r2;
        boolean $z0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        r1 := @parameter0: java.lang.String;

        r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String charset> = r1;

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: javax.swing.JComboBox jcb_charset>;

        virtualinvoke $r2.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>(r1);

        $r3 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.util.List listeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener) $r5;

        $r7 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String contentType>;

        interfaceinvoke r6.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener: void changed(java.lang.String,java.lang.String)>($r7, r1);

        goto label1;

     label2:
        return;
    }

    public void addContentTypeCharSetChangeListener(org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener)
    {
        java.util.List $r2;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener r1;
        org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog r0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog;

        r1 := @parameter0: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetChangeListener;

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r10;
        java.lang.String[] $r12, $r16, $r19, r20, r21;
        java.util.ArrayList $r8;
        java.nio.charset.Charset $r0, $r2;
        org.wiztools.restclient.bean.ContentTypeBean $r1;
        int $i0, $i1, i2;
        java.lang.String $r9, r22;
        boolean $z0;
        java.util.Iterator $r14;
        java.util.Set $r13;
        java.io.IOException $r17, $r18;
        java.io.InputStreamReader $r7;
        java.lang.Class $r3;
        java.lang.Object $r15;
        java.lang.ClassLoader $r4;
        java.io.BufferedReader $r6;
        java.util.SortedMap $r11;
        java.io.InputStream $r5;

        <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String PARAM_CONTENT_TYPE_STR> = "application/x-www-form-urlencoded";

        <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String DEFAULT_CHARSET> = "UTF-8";

        <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String DEFAULT_CONTENT_TYPE> = "text/plain";

        $r0 = <org.wiztools.commons.Charsets: java.nio.charset.Charset UTF_8>;

        <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.nio.charset.Charset PARAM_CHARSET> = $r0;

        $r1 = new org.wiztools.restclient.bean.ContentTypeBean;

        $r2 = <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.nio.charset.Charset PARAM_CHARSET>;

        specialinvoke $r1.<org.wiztools.restclient.bean.ContentTypeBean: void <init>(java.lang.String,java.nio.charset.Charset)>("application/x-www-form-urlencoded", $r2);

        <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: org.wiztools.restclient.bean.ContentType PARAM_CONTENT_TYPE> = $r1;

        $r3 = class "Lorg/wiztools/restclient/ui/reqbody/BodyContentTypeDialog;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("org/wiztools/restclient/mime.types");

        $r6 = new java.io.BufferedReader;

        $r7 = new java.io.InputStreamReader;

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

     label01:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

     label02:
        $r9 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r9 == null goto label03;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label02;

     label03:
        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        r20 = newarray (java.lang.String)[$i0];

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r20);

        r21 = (java.lang.String[]) $r10;

     label04:
        goto label06;

     label05:
        $r18 := @caughtexception;

        $r19 = newarray (java.lang.String)[4];

        $r19[0] = "text/plain";

        $r19[1] = "application/xml";

        $r19[2] = "application/json";

        $r19[3] = "application/x-www-form-urlencoded";

        r21 = $r19;

     label06:
        virtualinvoke $r6.<java.io.BufferedReader: void close()>();

     label07:
        goto label09;

     label08:
        $r17 := @caughtexception;

     label09:
        <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String[] contentTypeArr> = r21;

        $r11 = staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>();

        $i1 = interfaceinvoke $r11.<java.util.Map: int size()>();

        $r12 = newarray (java.lang.String)[$i1];

        <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String[] charSetArr> = $r12;

        i2 = 0;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.lang.String) $r15;

        $r16 = <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.lang.String[] charSetArr>;

        $r16[i2] = r22;

        i2 = i2 + 1;

        goto label10;

     label11:
        return;

        catch java.io.IOException from label01 to label04 with label05;
        catch java.io.IOException from label06 to label07 with label08;
    }
}
