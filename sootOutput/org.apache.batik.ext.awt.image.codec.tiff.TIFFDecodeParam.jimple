public class org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam extends java.lang.Object implements org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam
{
    private boolean decodePaletteAsShorts;
    private java.lang.Long ifdOffset;
    private boolean convertJPEGYCbCrToRGB;

    public void <init>()
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam: boolean decodePaletteAsShorts> = 0;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam: java.lang.Long ifdOffset> = null;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam: boolean convertJPEGYCbCrToRGB> = 1;

        return;
    }

    public void setDecodePaletteAsShorts(boolean)
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam r0;
        boolean z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam: boolean decodePaletteAsShorts> = z0;

        return;
    }

    public boolean getDecodePaletteAsShorts()
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam: boolean decodePaletteAsShorts>;

        return $z0;
    }

    public byte decode16BitsTo8Bits(int)
    {
        byte $b3;
        int i0, $i1, $i2, $i5;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam;

        i0 := @parameter0: int;

        $i1 = i0 >> 8;

        $i5 = (int) 65535;

        $i2 = $i1 & $i5;

        $b3 = (byte) $i2;

        return $b3;
    }

    public byte decodeSigned16BitsTo8Bits(short)
    {
        short s0;
        byte $b3;
        int $i1, $i2, $i4, $i6;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam;

        s0 := @parameter0: short;

        $i4 = (int) s0;

        $i6 = (int) -32768;

        $i1 = $i4 + $i6;

        $i2 = $i1 >> 8;

        $b3 = (byte) $i2;

        return $b3;
    }

    public void setIFDOffset(long)
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam r0;
        long l0;
        java.lang.Long $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam;

        l0 := @parameter0: long;

        $r1 = new java.lang.Long;

        specialinvoke $r1.<java.lang.Long: void <init>(long)>(l0);

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam: java.lang.Long ifdOffset> = $r1;

        return;
    }

    public java.lang.Long getIFDOffset()
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam r0;
        java.lang.Long $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam: java.lang.Long ifdOffset>;

        return $r1;
    }

    public void setJPEGDecompressYCbCrToRGB(boolean)
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam r0;
        boolean z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam: boolean convertJPEGYCbCrToRGB> = z0;

        return;
    }

    public boolean getJPEGDecompressYCbCrToRGB()
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFDecodeParam: boolean convertJPEGYCbCrToRGB>;

        return $z0;
    }
}
