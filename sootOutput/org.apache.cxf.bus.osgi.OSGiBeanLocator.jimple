public class org.apache.cxf.bus.osgi.OSGiBeanLocator extends java.lang.Object implements org.apache.cxf.configuration.ConfiguredBeanLocator
{
    private static final java.util.logging.Logger LOG;
    final org.apache.cxf.configuration.ConfiguredBeanLocator cbl;
    final org.osgi.framework.BundleContext context;

    public void <init>(org.apache.cxf.configuration.ConfiguredBeanLocator, org.osgi.framework.BundleContext)
    {
        org.apache.cxf.configuration.ConfiguredBeanLocator r1;
        org.apache.cxf.bus.osgi.OSGiBeanLocator r0;
        org.osgi.framework.BundleContext r2;

        r0 := @this: org.apache.cxf.bus.osgi.OSGiBeanLocator;

        r1 := @parameter0: org.apache.cxf.configuration.ConfiguredBeanLocator;

        r2 := @parameter1: org.osgi.framework.BundleContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.bus.osgi.OSGiBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator cbl> = r1;

        r0.<org.apache.cxf.bus.osgi.OSGiBeanLocator: org.osgi.framework.BundleContext context> = r2;

        return;
    }

    public java.lang.Object getBeanOfType(java.lang.String, java.lang.Class)
    {
        org.apache.cxf.bus.osgi.OSGiBeanLocator r0;
        java.lang.Class r2;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r3;
        java.lang.Object $r4;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.bus.osgi.OSGiBeanLocator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.apache.cxf.bus.osgi.OSGiBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator cbl>;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.configuration.ConfiguredBeanLocator: java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)>(r1, r2);

        return $r4;
    }

    public java.util.Collection getBeansOfType(java.lang.Class)
    {
        java.util.List $r4;
        org.apache.cxf.bus.osgi.OSGiBeanLocator r0;
        java.util.Collection $r3;
        java.lang.Class r1;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.bus.osgi.OSGiBeanLocator;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.cxf.bus.osgi.OSGiBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator cbl>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.configuration.ConfiguredBeanLocator: java.util.Collection getBeansOfType(java.lang.Class)>(r1);

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r4 = specialinvoke r0.<org.apache.cxf.bus.osgi.OSGiBeanLocator: java.util.List getBeansFromOsgiService(java.lang.Class)>(r1);

        return $r4;

     label2:
        return $r3;
    }

    private java.util.List getBeansFromOsgiService(java.lang.Class)
    {
        org.apache.cxf.bus.osgi.OSGiBeanLocator r1;
        org.osgi.framework.ServiceReference[] $r5;
        java.util.ArrayList $r0;
        int i0, i1;
        java.lang.String $r4, $r17;
        org.osgi.framework.ServiceReference r6;
        java.util.logging.Logger $r12;
        org.osgi.framework.BundleContext $r3, $r7;
        java.lang.Exception $r10;
        java.lang.Class r2;
        java.lang.Object $r8, $r9;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16;

        r1 := @this: org.apache.cxf.bus.osgi.OSGiBeanLocator;

        r2 := @parameter0: java.lang.Class;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label1:
        $r3 = r1.<org.apache.cxf.bus.osgi.OSGiBeanLocator: org.osgi.framework.BundleContext context>;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r5 = interfaceinvoke $r3.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceReference[] getServiceReferences(java.lang.String,java.lang.String)>($r4, null);

        if $r5 == null goto label3;

        i0 = lengthof $r5;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r6 = $r5[i1];

        $r7 = r1.<org.apache.cxf.bus.osgi.OSGiBeanLocator: org.osgi.framework.BundleContext context>;

        $r8 = interfaceinvoke $r7.<org.osgi.framework.BundleContext: java.lang.Object getService(org.osgi.framework.ServiceReference)>(r6);

        $r9 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r8);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r12 = <org.apache.cxf.bus.osgi.OSGiBeanLocator: java.util.logging.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to find the Bean with type:");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from OSGi services and get error: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.logging.Logger: void info(java.lang.String)>($r17);

     label5:
        return $r0;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public boolean loadBeansOfType(java.lang.Class, org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)
    {
        org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener r2;
        org.apache.cxf.bus.osgi.OSGiBeanLocator r0;
        java.lang.Class r1;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.bus.osgi.OSGiBeanLocator;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener;

        $r3 = r0.<org.apache.cxf.bus.osgi.OSGiBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator cbl>;

        $z0 = interfaceinvoke $r3.<org.apache.cxf.configuration.ConfiguredBeanLocator: boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)>(r1, r2);

        return $z0;
    }

    public boolean hasConfiguredPropertyValue(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.cxf.bus.osgi.OSGiBeanLocator r0;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r4;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.bus.osgi.OSGiBeanLocator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.cxf.bus.osgi.OSGiBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator cbl>;

        $z0 = interfaceinvoke $r4.<org.apache.cxf.configuration.ConfiguredBeanLocator: boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $z0;
    }

    public java.util.List getBeanNamesOfType(java.lang.Class)
    {
        java.util.List $r3;
        org.apache.cxf.bus.osgi.OSGiBeanLocator r0;
        java.lang.Class r1;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r2;

        r0 := @this: org.apache.cxf.bus.osgi.OSGiBeanLocator;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.cxf.bus.osgi.OSGiBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator cbl>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.configuration.ConfiguredBeanLocator: java.util.List getBeanNamesOfType(java.lang.Class)>(r1);

        return $r3;
    }

    public boolean hasBeanOfName(java.lang.String)
    {
        org.apache.cxf.bus.osgi.OSGiBeanLocator r0;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.bus.osgi.OSGiBeanLocator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.bus.osgi.OSGiBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator cbl>;

        $z0 = interfaceinvoke $r2.<org.apache.cxf.configuration.ConfiguredBeanLocator: boolean hasBeanOfName(java.lang.String)>(r1);

        return $z0;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/bus/osgi/OSGiBeanLocator;");

        <org.apache.cxf.bus.osgi.OSGiBeanLocator: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
