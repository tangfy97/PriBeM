public class net.oauth.OAuth extends java.lang.Object
{
    public static final java.lang.String VERSION_1_0;
    public static final java.lang.String ENCODING;
    public static final java.lang.String FORM_ENCODED;
    public static final java.lang.String OAUTH_CONSUMER_KEY;
    public static final java.lang.String OAUTH_TOKEN;
    public static final java.lang.String OAUTH_TOKEN_SECRET;
    public static final java.lang.String OAUTH_SIGNATURE_METHOD;
    public static final java.lang.String OAUTH_SIGNATURE;
    public static final java.lang.String OAUTH_TIMESTAMP;
    public static final java.lang.String OAUTH_NONCE;
    public static final java.lang.String OAUTH_VERSION;
    public static final java.lang.String OAUTH_CALLBACK;
    public static final java.lang.String OAUTH_CALLBACK_CONFIRMED;
    public static final java.lang.String OAUTH_VERIFIER;
    public static final java.lang.String HMAC_SHA1;
    public static final java.lang.String RSA_SHA1;

    public void <init>()
    {
        net.oauth.OAuth r0;

        r0 := @this: net.oauth.OAuth;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isFormEncoded(java.lang.String)
    {
        int $i0;
        java.lang.String $r0, $r1, r2;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        if r2 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>(";");

        if $i0 < 0 goto label2;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r0 = "application/x-www-form-urlencoded";

        $r1 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        return $z0;
    }

    public static java.lang.String formEncode(java.lang.Iterable) throws java.io.IOException
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r0;
        java.lang.String $r2;
        java.lang.Iterable r1;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <net.oauth.OAuth: void formEncode(java.lang.Iterable,java.io.OutputStream)>(r1, $r0);

        $r2 = new java.lang.String;

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

        return $r2;
    }

    public static void formEncode(java.lang.Iterable, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r4;
        byte[] $r8, $r12;
        java.util.Map$Entry r3;
        java.util.Iterator $r1;
        java.lang.Iterable r0;
        java.lang.Object $r2, $r5, $r9;
        java.lang.String $r6, $r7, $r10, $r11;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.Iterable;

        r4 := @parameter1: java.io.OutputStream;

        if r0 == null goto label4;

        z1 = 1;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r2;

        if z1 == 0 goto label2;

        z1 = 0;

        goto label3;

     label2:
        virtualinvoke r4.<java.io.OutputStream: void write(int)>(38);

     label3:
        $r5 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = staticinvoke <net.oauth.OAuth: java.lang.String toString(java.lang.Object)>($r5);

        $r7 = staticinvoke <net.oauth.OAuth: java.lang.String percentEncode(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r4.<java.io.OutputStream: void write(byte[])>($r8);

        virtualinvoke r4.<java.io.OutputStream: void write(int)>(61);

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = staticinvoke <net.oauth.OAuth: java.lang.String toString(java.lang.Object)>($r9);

        $r11 = staticinvoke <net.oauth.OAuth: java.lang.String percentEncode(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r4.<java.io.OutputStream: void write(byte[])>($r12);

        goto label1;

     label4:
        return;
    }

    public static java.util.List decodeForm(java.lang.String)
    {
        java.lang.String[] $r2;
        java.util.ArrayList $r0;
        int i0, $i1, $i2, i3;
        java.lang.String r1, r3, $r4, $r5, r7, r8;
        net.oauth.OAuth$Parameter $r6;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $z0 = staticinvoke <net.oauth.OAuth: boolean isEmpty(java.lang.String)>(r1);

        if $z0 != 0 goto label4;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\&");

        i0 = lengthof $r2;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        r3 = $r2[i3];

        $i1 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(61);

        if $i1 >= 0 goto label2;

        r7 = staticinvoke <net.oauth.OAuth: java.lang.String decodePercent(java.lang.String)>(r3);

        r8 = null;

        goto label3;

     label2:
        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        r7 = staticinvoke <net.oauth.OAuth: java.lang.String decodePercent(java.lang.String)>($r4);

        $i2 = $i1 + 1;

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i2);

        r8 = staticinvoke <net.oauth.OAuth: java.lang.String decodePercent(java.lang.String)>($r5);

     label3:
        $r6 = new net.oauth.OAuth$Parameter;

        specialinvoke $r6.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>(r7, r8);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        i3 = i3 + 1;

        goto label1;

     label4:
        return $r0;
    }

    public static java.lang.String percentEncode(java.lang.Iterable)
    {
        java.util.Iterator $r2;
        java.lang.Iterable r1;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.Object $r4;
        java.lang.String $r3, $r5, $r6;
        boolean $z0;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label2:
        $r5 = staticinvoke <net.oauth.OAuth: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = staticinvoke <net.oauth.OAuth: java.lang.String percentEncode(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String percentEncode(java.lang.String)
    {
        java.lang.RuntimeException $r6;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r7;
        java.io.UnsupportedEncodingException $r5;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r0, "UTF-8");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("+", "%20");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("*", "%2A");

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%7E", "~");

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r5.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String decodePercent(java.lang.String)
    {
        java.lang.String r0, $r1, $r4;
        java.lang.RuntimeException $r3;
        java.io.UnsupportedEncodingException $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r0, "UTF-8");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.util.Map newMap(java.lang.Iterable)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.HashMap $r0;
        java.lang.Iterable r1;
        java.lang.Object $r3, $r5, $r7;
        java.lang.String $r6, $r8;
        boolean $z0, $z1;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        if r1 == null goto label3;

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = staticinvoke <net.oauth.OAuth: java.lang.String toString(java.lang.Object)>($r5);

        $z1 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z1 != 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = staticinvoke <net.oauth.OAuth: java.lang.String toString(java.lang.Object)>($r7);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public static transient java.util.List newList(java.lang.String[])
    {
        java.lang.String[] r1;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r3, $r4;
        net.oauth.OAuth$Parameter $r2;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.util.ArrayList;

        $i0 = lengthof r1;

        $i1 = $i0 / 2;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i1);

        i5 = 0;

     label1:
        $i3 = i5 + 1;

        $i2 = lengthof r1;

        if $i3 >= $i2 goto label2;

        $r2 = new net.oauth.OAuth$Parameter;

        $r4 = r1[i5];

        $i4 = i5 + 1;

        $r3 = r1[$i4];

        specialinvoke $r2.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>($r4, $r3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        i5 = i5 + 2;

        goto label1;

     label2:
        return $r0;
    }

    private static final java.lang.String toString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r1;
    }

    public static transient java.lang.String addParameters(java.lang.String, java.lang.String[]) throws java.io.IOException
    {
        java.util.List $r2;
        java.lang.String[] r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $r2 = staticinvoke <net.oauth.OAuth: java.util.List newList(java.lang.String[])>(r1);

        $r3 = staticinvoke <net.oauth.OAuth: java.lang.String addParameters(java.lang.String,java.lang.Iterable)>(r0, $r2);

        return $r3;
    }

    public static java.lang.String addParameters(java.lang.String, java.lang.Iterable) throws java.io.IOException
    {
        char $c2;
        java.lang.Iterable r0;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r1, r2, $r7;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Iterable;

        $r1 = staticinvoke <net.oauth.OAuth: java.lang.String formEncode(java.lang.Iterable)>(r0);

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 > 0 goto label2;

     label1:
        return r2;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("?");

        if $i1 >= 0 goto label3;

        $c2 = 63;

        goto label4;

     label3:
        $c2 = 38;

     label4:
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static boolean isEmpty(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static void <clinit>()
    {
        <net.oauth.OAuth: java.lang.String RSA_SHA1> = "RSA-SHA1";

        <net.oauth.OAuth: java.lang.String HMAC_SHA1> = "HMAC-SHA1";

        <net.oauth.OAuth: java.lang.String OAUTH_VERIFIER> = "oauth_verifier";

        <net.oauth.OAuth: java.lang.String OAUTH_CALLBACK_CONFIRMED> = "oauth_callback_confirmed";

        <net.oauth.OAuth: java.lang.String OAUTH_CALLBACK> = "oauth_callback";

        <net.oauth.OAuth: java.lang.String OAUTH_VERSION> = "oauth_version";

        <net.oauth.OAuth: java.lang.String OAUTH_NONCE> = "oauth_nonce";

        <net.oauth.OAuth: java.lang.String OAUTH_TIMESTAMP> = "oauth_timestamp";

        <net.oauth.OAuth: java.lang.String OAUTH_SIGNATURE> = "oauth_signature";

        <net.oauth.OAuth: java.lang.String OAUTH_SIGNATURE_METHOD> = "oauth_signature_method";

        <net.oauth.OAuth: java.lang.String OAUTH_TOKEN_SECRET> = "oauth_token_secret";

        <net.oauth.OAuth: java.lang.String OAUTH_TOKEN> = "oauth_token";

        <net.oauth.OAuth: java.lang.String OAUTH_CONSUMER_KEY> = "oauth_consumer_key";

        <net.oauth.OAuth: java.lang.String FORM_ENCODED> = "application/x-www-form-urlencoded";

        <net.oauth.OAuth: java.lang.String ENCODING> = "UTF-8";

        <net.oauth.OAuth: java.lang.String VERSION_1_0> = "1.0";

        return;
    }
}
