public abstract class org.apache.commons.lang.'enum'.Enum extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.util.Map EMPTY_MAP;
    private static java.util.Map cEnumClasses;
    private final java.lang.String iName;
    private final transient int iHashCode;
    protected transient java.lang.String iToString;
    static java.lang.Class class$org$apache$commons$lang$enum$Enum;
    static java.lang.Class class$org$apache$commons$lang$enum$ValuedEnum;

    protected void <init>(java.lang.String)
    {
        org.apache.commons.lang.'enum'.Enum r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Class $r2;
        java.lang.String r1;

        r0 := @this: org.apache.commons.lang.'enum'.Enum;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.lang.'enum'.Enum: java.lang.String iToString> = null;

        specialinvoke r0.<org.apache.commons.lang.'enum'.Enum: void init(java.lang.String)>(r1);

        r0.<org.apache.commons.lang.'enum'.Enum: java.lang.String iName> = r1;

        $r2 = virtualinvoke r0.<org.apache.commons.lang.'enum'.Enum: java.lang.Class getEnumClass()>();

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i1 = 7 + $i0;

        $i2 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        $i3 = 3 * $i2;

        $i4 = $i1 + $i3;

        r0.<org.apache.commons.lang.'enum'.Enum: int iHashCode> = $i4;

        return;
    }

    private void init(java.lang.String)
    {
        java.util.Map $r5, $r7, $r8, $r18;
        boolean $z0, $z1, z2;
        org.apache.commons.lang.'enum'.Enum r1;
        org.apache.commons.lang.'enum'.Enum$Entry $r16, $r19, r32;
        java.util.List $r9;
        java.lang.Throwable $r27;
        java.lang.StringBuffer $r11, $r12, $r13, $r14;
        java.lang.String r0, $r15;
        java.util.WeakHashMap $r17;
        java.lang.IllegalArgumentException $r10, $r20, $r25, $r26;
        java.lang.Class $r2, $r3, r4, $r21, $r22, $r23, $r24, r28, $r29, $r30, $r31;
        java.lang.Object $r6;

        r1 := @this: org.apache.commons.lang.'enum'.Enum;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label01;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Enum name must not be empty or null");

        throw $r26;

     label01:
        $r2 = virtualinvoke r1.<org.apache.commons.lang.'enum'.Enum: java.lang.Class getEnumClass()>();

        if $r2 != null goto label02;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("getEnumClass() must not be null");

        throw $r25;

     label02:
        r28 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        z2 = 0;

     label03:
        if r28 == null goto label09;

        $r24 = r28;

        $r21 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum>;

        if $r21 != null goto label04;

        $r29 = staticinvoke <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$(java.lang.String)>("org.apache.commons.lang.enum.Enum");

        <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum> = $r29;

        goto label05;

     label04:
        $r29 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum>;

     label05:
        if $r24 == $r29 goto label09;

        $r23 = r28;

        $r22 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$ValuedEnum>;

        if $r22 != null goto label06;

        $r30 = staticinvoke <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$(java.lang.String)>("org.apache.commons.lang.enum.ValuedEnum");

        <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$ValuedEnum> = $r30;

        goto label07;

     label06:
        $r30 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$ValuedEnum>;

     label07:
        if $r23 == $r30 goto label09;

        if r28 != $r2 goto label08;

        z2 = 1;

        goto label09;

     label08:
        r28 = virtualinvoke r28.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label03;

     label09:
        if z2 != 0 goto label10;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("getEnumClass() must return a superclass of this class");

        throw $r20;

     label10:
        $r3 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum>;

        if $r3 != null goto label11;

        $r31 = staticinvoke <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$(java.lang.String)>("org.apache.commons.lang.enum.Enum");

        <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum> = $r31;

        goto label12;

     label11:
        $r31 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum>;

     label12:
        r4 = $r31;

        entermonitor $r31;

     label13:
        $r5 = <org.apache.commons.lang.'enum'.Enum: java.util.Map cEnumClasses>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r19 = (org.apache.commons.lang.'enum'.Enum$Entry) $r6;

        r32 = $r19;

        if $r19 != null goto label14;

        $r16 = staticinvoke <org.apache.commons.lang.'enum'.Enum: org.apache.commons.lang.'enum'.Enum$Entry createEntry(java.lang.Class)>($r2);

        r32 = $r16;

        $r17 = new java.util.WeakHashMap;

        specialinvoke $r17.<java.util.WeakHashMap: void <init>()>();

        $r18 = <org.apache.commons.lang.'enum'.Enum: java.util.Map cEnumClasses>;

        interfaceinvoke $r17.<java.util.Map: void putAll(java.util.Map)>($r18);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r16);

        <org.apache.commons.lang.'enum'.Enum: java.util.Map cEnumClasses> = $r17;

     label14:
        exitmonitor r4;

     label15:
        goto label18;

     label16:
        $r27 := @caughtexception;

        exitmonitor r4;

     label17:
        throw $r27;

     label18:
        $r7 = r32.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.Map map>;

        $z1 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z1 == 0 goto label19;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The Enum name must be unique, \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' has already been added");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label19:
        $r8 = r32.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.Map map>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        $r9 = r32.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.List list>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;

        catch java.lang.Throwable from label13 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    protected java.lang.Object readResolve()
    {
        org.apache.commons.lang.'enum'.Enum r0;
        org.apache.commons.lang.'enum'.Enum$Entry r4;
        java.util.Map $r1, $r5;
        java.lang.Class $r2;
        java.lang.Object $r3, $r7;
        java.lang.String $r6;

        r0 := @this: org.apache.commons.lang.'enum'.Enum;

        $r1 = <org.apache.commons.lang.'enum'.Enum: java.util.Map cEnumClasses>;

        $r2 = virtualinvoke r0.<org.apache.commons.lang.'enum'.Enum: java.lang.Class getEnumClass()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (org.apache.commons.lang.'enum'.Enum$Entry) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = r4.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.Map map>;

        $r6 = virtualinvoke r0.<org.apache.commons.lang.'enum'.Enum: java.lang.String getName()>();

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        return $r7;
    }

    protected static org.apache.commons.lang.'enum'.Enum getEnum(java.lang.Class, java.lang.String)
    {
        java.util.Map $r3;
        org.apache.commons.lang.'enum'.Enum $r5;
        java.lang.Class r0;
        org.apache.commons.lang.'enum'.Enum$Entry $r1;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.lang.'enum'.Enum: org.apache.commons.lang.'enum'.Enum$Entry getEntry(java.lang.Class)>(r0);

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = $r1.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (org.apache.commons.lang.'enum'.Enum) $r4;

        return $r5;
    }

    protected static java.util.Map getEnumMap(java.lang.Class)
    {
        java.util.Map $r2, $r3;
        java.lang.Class r0;
        org.apache.commons.lang.'enum'.Enum$Entry $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.apache.commons.lang.'enum'.Enum: org.apache.commons.lang.'enum'.Enum$Entry getEntry(java.lang.Class)>(r0);

        if $r1 != null goto label1;

        $r3 = <org.apache.commons.lang.'enum'.Enum: java.util.Map EMPTY_MAP>;

        return $r3;

     label1:
        $r2 = $r1.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.Map unmodifiableMap>;

        return $r2;
    }

    protected static java.util.List getEnumList(java.lang.Class)
    {
        java.util.List $r2, $r3;
        java.lang.Class r0;
        org.apache.commons.lang.'enum'.Enum$Entry $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.apache.commons.lang.'enum'.Enum: org.apache.commons.lang.'enum'.Enum$Entry getEntry(java.lang.Class)>(r0);

        if $r1 != null goto label1;

        $r3 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r3;

     label1:
        $r2 = $r1.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.List unmodifiableList>;

        return $r2;
    }

    protected static java.util.Iterator iterator(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.apache.commons.lang.'enum'.Enum: java.util.List getEnumList(java.lang.Class)>(r0);

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    private static org.apache.commons.lang.'enum'.Enum$Entry getEntry(java.lang.Class)
    {
        org.apache.commons.lang.'enum'.Enum$Entry r4;
        java.lang.IllegalArgumentException $r5, $r6;
        java.util.Map $r2;
        java.lang.Class r0, $r1, $r7;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Enum Class must not be null");

        throw $r6;

     label1:
        $r1 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum>;

        if $r1 != null goto label2;

        $r7 = staticinvoke <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$(java.lang.String)>("org.apache.commons.lang.enum.Enum");

        <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum> = $r7;

        goto label3;

     label2:
        $r7 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum>;

     label3:
        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Class must be a subclass of Enum");

        throw $r5;

     label4:
        $r2 = <org.apache.commons.lang.'enum'.Enum: java.util.Map cEnumClasses>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (org.apache.commons.lang.'enum'.Enum$Entry) $r3;

        return r4;
    }

    private static org.apache.commons.lang.'enum'.Enum$Entry createEntry(java.lang.Class)
    {
        java.util.Map $r4, $r9, $r10;
        org.apache.commons.lang.'enum'.Enum$Entry $r0, r6;
        java.util.List $r7, $r8;
        java.lang.Class r1, $r2, $r3, $r11, $r12, r13, $r14, $r15;
        java.lang.Object $r5;

        r1 := @parameter0: java.lang.Class;

        $r0 = new org.apache.commons.lang.'enum'.Enum$Entry;

        specialinvoke $r0.<org.apache.commons.lang.'enum'.Enum$Entry: void <init>()>();

        r13 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

     label1:
        if r13 == null goto label7;

        $r12 = r13;

        $r2 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum>;

        if $r2 != null goto label2;

        $r14 = staticinvoke <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$(java.lang.String)>("org.apache.commons.lang.enum.Enum");

        <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum> = $r14;

        goto label3;

     label2:
        $r14 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$Enum>;

     label3:
        if $r12 == $r14 goto label7;

        $r11 = r13;

        $r3 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$ValuedEnum>;

        if $r3 != null goto label4;

        $r15 = staticinvoke <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$(java.lang.String)>("org.apache.commons.lang.enum.ValuedEnum");

        <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$ValuedEnum> = $r15;

        goto label5;

     label4:
        $r15 = <org.apache.commons.lang.'enum'.Enum: java.lang.Class class$org$apache$commons$lang$enum$ValuedEnum>;

     label5:
        if $r11 == $r15 goto label7;

        $r4 = <org.apache.commons.lang.'enum'.Enum: java.util.Map cEnumClasses>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        r6 = (org.apache.commons.lang.'enum'.Enum$Entry) $r5;

        if r6 == null goto label6;

        $r8 = $r0.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.List list>;

        $r7 = r6.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.List list>;

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $r10 = $r0.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.Map map>;

        $r9 = r6.<org.apache.commons.lang.'enum'.Enum$Entry: java.util.Map map>;

        interfaceinvoke $r10.<java.util.Map: void putAll(java.util.Map)>($r9);

        goto label7;

     label6:
        r13 = virtualinvoke r13.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label7:
        return $r0;
    }

    public final java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.commons.lang.'enum'.Enum r0;

        r0 := @this: org.apache.commons.lang.'enum'.Enum;

        $r1 = r0.<org.apache.commons.lang.'enum'.Enum: java.lang.String iName>;

        return $r1;
    }

    public java.lang.Class getEnumClass()
    {
        java.lang.Class $r1;
        org.apache.commons.lang.'enum'.Enum r0;

        r0 := @this: org.apache.commons.lang.'enum'.Enum;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    public final boolean equals(java.lang.Object)
    {
        java.lang.String $r5, $r7, $r8, $r9, $r11, $r12;
        boolean $z0, $z1, $z2;
        org.apache.commons.lang.'enum'.Enum r1, $r10;
        java.lang.Object r0;
        java.lang.Class $r2, $r3, $r4, $r6;

        r1 := @this: org.apache.commons.lang.'enum'.Enum;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != $r3 goto label3;

        $r12 = r1.<org.apache.commons.lang.'enum'.Enum: java.lang.String iName>;

        $r10 = (org.apache.commons.lang.'enum'.Enum) r0;

        $r11 = $r10.<org.apache.commons.lang.'enum'.Enum: java.lang.String iName>;

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        return $z2;

     label3:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r8 = r1.<org.apache.commons.lang.'enum'.Enum: java.lang.String iName>;

        $r9 = specialinvoke r1.<org.apache.commons.lang.'enum'.Enum: java.lang.String getNameInOtherClassLoader(java.lang.Object)>(r0);

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        return $z1;
    }

    public final int hashCode()
    {
        int $i0;
        org.apache.commons.lang.'enum'.Enum r0;

        r0 := @this: org.apache.commons.lang.'enum'.Enum;

        $i0 = r0.<org.apache.commons.lang.'enum'.Enum: int iHashCode>;

        return $i0;
    }

    public int compareTo(java.lang.Object)
    {
        java.lang.ClassCastException $r11;
        java.lang.StringBuffer $r12, $r13, $r16, $r17;
        int $i0, $i1;
        java.lang.String $r5, $r6, $r8, $r10, $r15, $r18, $r19, $r20;
        boolean $z0;
        org.apache.commons.lang.'enum'.Enum r1, $r4;
        java.lang.Object r0;
        java.lang.Class $r2, $r3, $r7, $r9, $r14;

        r1 := @this: org.apache.commons.lang.'enum'.Enum;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label2;

        $r19 = r1.<org.apache.commons.lang.'enum'.Enum: java.lang.String iName>;

        $r20 = specialinvoke r1.<org.apache.commons.lang.'enum'.Enum: java.lang.String getNameInOtherClassLoader(java.lang.Object)>(r0);

        $i1 = virtualinvoke $r19.<java.lang.String: int compareTo(java.lang.String)>($r20);

        return $i1;

     label2:
        $r11 = new java.lang.ClassCastException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Different enum class \'");

        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = staticinvoke <org.apache.commons.lang.ClassUtils: java.lang.String getShortClassName(java.lang.Class)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.ClassCastException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label3:
        $r6 = r1.<org.apache.commons.lang.'enum'.Enum: java.lang.String iName>;

        $r4 = (org.apache.commons.lang.'enum'.Enum) r0;

        $r5 = $r4.<org.apache.commons.lang.'enum'.Enum: java.lang.String iName>;

        $i0 = virtualinvoke $r6.<java.lang.String: int compareTo(java.lang.String)>($r5);

        return $i0;
    }

    private java.lang.String getNameInOtherClassLoader(java.lang.Object)
    {
        java.lang.IllegalStateException $r9;
        java.lang.IllegalAccessException $r6;
        java.lang.NoSuchMethodException $r7;
        org.apache.commons.lang.'enum'.Enum r8;
        java.lang.reflect.InvocationTargetException $r5;
        java.lang.Object r0, $r3;
        java.lang.Class $r1;
        java.lang.String r4;
        java.lang.reflect.Method $r2;

        r8 := @this: org.apache.commons.lang.'enum'.Enum;

        r0 := @parameter0: java.lang.Object;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getName", null);

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, null);

        r4 = (java.lang.String) $r3;

     label2:
        return r4;

     label3:
        $r7 := @caughtexception;

        goto label6;

     label4:
        $r6 := @caughtexception;

        goto label6;

     label5:
        $r5 := @caughtexception;

     label6:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This should not happen");

        throw $r9;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public java.lang.String toString()
    {
        org.apache.commons.lang.'enum'.Enum r0;
        java.lang.StringBuffer $r5, $r6, $r7, $r9, $r10;
        java.lang.Class $r3;
        java.lang.String $r1, $r2, $r4, $r8, $r11;

        r0 := @this: org.apache.commons.lang.'enum'.Enum;

        $r1 = r0.<org.apache.commons.lang.'enum'.Enum: java.lang.String iToString>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.commons.lang.'enum'.Enum: java.lang.Class getEnumClass()>();

        $r4 = staticinvoke <org.apache.commons.lang.ClassUtils: java.lang.String getShortClassName(java.lang.Class)>($r3);

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r8 = virtualinvoke r0.<org.apache.commons.lang.'enum'.Enum: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.commons.lang.'enum'.Enum: java.lang.String iToString> = $r11;

     label1:
        $r2 = r0.<org.apache.commons.lang.'enum'.Enum: java.lang.String iToString>;

        return $r2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.WeakHashMap $r2;
        java.util.Map $r1;

        <org.apache.commons.lang.'enum'.Enum: long serialVersionUID> = -487045951170455942L;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(0);

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r0);

        <org.apache.commons.lang.'enum'.Enum: java.util.Map EMPTY_MAP> = $r1;

        $r2 = new java.util.WeakHashMap;

        specialinvoke $r2.<java.util.WeakHashMap: void <init>()>();

        <org.apache.commons.lang.'enum'.Enum: java.util.Map cEnumClasses> = $r2;

        return;
    }
}
