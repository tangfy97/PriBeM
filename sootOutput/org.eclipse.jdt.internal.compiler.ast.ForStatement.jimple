public class org.eclipse.jdt.internal.compiler.ast.ForStatement extends org.eclipse.jdt.internal.compiler.ast.Statement
{
    public org.eclipse.jdt.internal.compiler.ast.Statement[] initializations;
    public org.eclipse.jdt.internal.compiler.ast.Expression condition;
    public org.eclipse.jdt.internal.compiler.ast.Statement[] increments;
    public org.eclipse.jdt.internal.compiler.ast.Statement action;
    public org.eclipse.jdt.internal.compiler.lookup.BlockScope scope;
    private org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel;
    private org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel;
    int preCondInitStateIndex;
    int preIncrementsInitStateIndex;
    int condIfTrueInitStateIndex;
    int mergedInitStateIndex;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Statement[], org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.Statement[], org.eclipse.jdt.internal.compiler.ast.Statement, boolean, int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] r1, r3;
        org.eclipse.jdt.internal.compiler.ast.Statement r4;
        org.eclipse.jdt.internal.compiler.ast.Expression r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11, $i13;
        boolean $z0, z1;
        org.eclipse.jdt.internal.compiler.ast.ForStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ForStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Statement[];

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Expression;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Statement[];

        r4 := @parameter3: org.eclipse.jdt.internal.compiler.ast.Statement;

        z1 := @parameter4: boolean;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Statement: void <init>()>();

        $i7 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preCondInitStateIndex> = $i7;

        $i9 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preIncrementsInitStateIndex> = $i9;

        $i11 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int condIfTrueInitStateIndex> = $i11;

        $i13 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int mergedInitStateIndex> = $i13;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int sourceStart> = i0;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int sourceEnd> = i1;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations> = r1;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition> = r2;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments> = r3;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action> = r4;

        $z0 = r4 instanceof org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        if $z0 == 0 goto label1;

        $i4 = r4.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits>;

        $i5 = $i4 | 1;

        r4.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits> = $i5;

     label1:
        if z1 == 0 goto label2;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int bits>;

        $i3 = $i2 | 536870912;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int bits> = $i3;

     label2:
        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r5, $r23, $r38, $r82;
        byte $b11;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r11;
        org.eclipse.jdt.internal.compiler.impl.Constant $r53, $r54, $r55, $r56, $r62, r63, $r65, r66;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r48;
        org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext r67, r73, r77, $r85, $r86, $r87, $r88;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4, $r12, $r22, $r26, $r28, $r31, $r34, $r43, $r44, $r45, $r50, $r52, $r59, $r75;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r9, $r15, $r19, $r20, $r37, $r47, r61, r69, $r76, r79, $r80;
        long $l10;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r16, $r17, $r29, $r30, $r39, $r40, $r41, $r42, $r68, r72, $r81;
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r3, $r18, $r24, $r25, $r57, $r58;
        org.eclipse.jdt.internal.compiler.ast.Statement $r27, $r32, $r46, $r60, $r71, $r74;
        org.eclipse.jdt.internal.compiler.ast.Expression $r6, $r7, $r8, $r51, $r64, $r70;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11, $z12, $z13, $z14;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r13, $r14, $r35, $r36, $r78, $r83, $r84;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, i12, i13, i14, $i15, $i16;
        org.eclipse.jdt.internal.compiler.ast.ForStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ForStatement;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r11 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r61 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r83 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r83.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel> = $r83;

        $r84 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r84.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel> = $r84;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        if $r3 == null goto label03;

        i12 = 0;

        $r57 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        i13 = lengthof $r57;

        goto label02;

     label01:
        $r58 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        $r60 = $r58[i12];

        $r59 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        r61 = virtualinvoke $r60.<org.eclipse.jdt.internal.compiler.ast.Statement: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r59, r11, r61);

        i12 = i12 + 1;

     label02:
        if i12 < i13 goto label01;

     label03:
        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i0 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r61);

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preCondInitStateIndex> = $i0;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $r6 != null goto label04;

        $r62 = null;

        goto label05;

     label04:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r62 = $r7.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

     label05:
        r63 = $r62;

        if $r62 == null goto label07;

        $r56 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r62 == $r56 goto label06;

        $z7 = virtualinvoke $r62.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z7 != 0 goto label07;

     label06:
        $z8 = 0;

        goto label08;

     label07:
        $z8 = 1;

     label08:
        z9 = $z8;

        if r63 == null goto label09;

        $r55 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if r63 == $r55 goto label09;

        $z6 = virtualinvoke r63.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z6 != 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z0 = $z10;

        $r64 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $r64 != null goto label11;

        $r65 = null;

        goto label12;

     label11:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r65 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

     label12:
        r66 = $r65;

        if $r65 == null goto label14;

        $r54 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r65 == $r54 goto label13;

        $z5 = virtualinvoke $r65.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z5 != 0 goto label14;

     label13:
        $z11 = 0;

        goto label15;

     label14:
        $z11 = 1;

     label15:
        z1 = $z11;

        if r66 == null goto label16;

        $r53 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if r66 == $r53 goto label16;

        $z4 = virtualinvoke r66.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z4 != 0 goto label16;

        $z12 = 1;

        goto label17;

     label16:
        $z12 = 0;

     label17:
        z2 = $z12;

        r67 = null;

        $r68 = virtualinvoke r61.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo nullInfoLessUnconditionalCopy()>();

        r69 = $r68;

        $r70 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $r70 == null goto label18;

        if z9 != 0 goto label18;

        $r51 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r52 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r85 = new org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext;

        $r50 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        specialinvoke $r85.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.lookup.Scope)>(r11, r61, r0, null, null, $r50);

        r67 = $r85;

        r69 = virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r52, $r85, $r68);

     label18:
        $r71 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r71 == null goto label19;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $z3 = virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean isEmptyBlock()>();

        if $z3 == 0 goto label24;

        $r48 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l10 = $r48.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        $b11 = $l10 cmp 3080192L;

        $i16 = (int) $b11;

        if $i16 > 0 goto label24;

     label19:
        if r67 == null goto label20;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke r67.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredFinalChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r31, r69);

     label20:
        if z9 == 0 goto label22;

        if r67 == null goto label21;

        virtualinvoke r67.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredNullChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r4, r69);

     label21:
        $r30 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        return $r30;

     label22:
        if z0 == 0 goto label23;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel> = null;

     label23:
        $r9 = virtualinvoke r69.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue()>();

        r72 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalCopy()>();

        $r86 = new org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel>;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        specialinvoke $r86.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.lookup.Scope)>(r11, r61, r0, $r14, $r13, $r12);

        r73 = $r86;

        goto label30;

     label24:
        $r87 = new org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel>;

        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        specialinvoke $r87.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.lookup.Scope)>(r11, r61, r0, $r36, $r35, $r34);

        r73 = $r87;

        $r37 = virtualinvoke r69.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue()>();

        $r38 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i5 = virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r37);

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int condIfTrueInitStateIndex> = $i5;

        if z0 == 0 goto label25;

        r72 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        goto label26;

     label25:
        $r39 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalCopy()>();

        r72 = $r39;

        if z2 == 0 goto label26;

        virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(1);

     label26:
        $r74 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $r75 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $z13 = virtualinvoke $r74.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean complainIfUnreachable(org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r72, $r75, 0);

        if $z13 != 0 goto label27;

        $r46 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $r45 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r47 = virtualinvoke $r46.<org.eclipse.jdt.internal.compiler.ast.Statement: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r45, $r87, r72);

        r72 = virtualinvoke $r47.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

     label27:
        $i7 = r72.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: int tagBits>;

        $r40 = $r87.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnContinue>;

        $i6 = $r40.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: int tagBits>;

        $i8 = $i7 & $i6;

        $i9 = $i8 & 1;

        if $i9 == 0 goto label28;

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel> = null;

        goto label30;

     label28:
        if r67 == null goto label29;

        $r44 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke r67.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredFinalChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r44, r69);

     label29:
        $r41 = $r87.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnContinue>;

        $r42 = virtualinvoke r72.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedWith(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r41);

        r72 = $r42;

        $r43 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r87.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredFinalChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r43, $r42);

     label30:
        $r76 = virtualinvoke r61.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        r77 = null;

        $r78 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        if $r78 == null goto label34;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        if $r18 == null goto label33;

        $r88 = new org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        specialinvoke $r88.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.lookup.Scope)>(r11, r61, r0, null, null, $r22);

        r77 = $r88;

        r79 = r72;

        $r23 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i3 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r72);

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preIncrementsInitStateIndex> = $i3;

        i14 = 0;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        i4 = lengthof $r24;

        goto label32;

     label31:
        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        $r27 = $r25[i14];

        $r26 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        r79 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.Statement: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r26, $r88, r79);

        i14 = i14 + 1;

     label32:
        if i14 < i4 goto label31;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r29 = virtualinvoke r79.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        r72 = $r29;

        virtualinvoke $r88.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredFinalChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r28, $r29);

     label33:
        $r19 = virtualinvoke $r76.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addPotentialInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r72);

        $r20 = virtualinvoke r69.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse()>();

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r20);

        goto label35;

     label34:
        $r15 = virtualinvoke r69.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse()>();

        virtualinvoke $r76.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r15);

     label35:
        if r67 == null goto label36;

        virtualinvoke r67.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredNullChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r4, r72);

     label36:
        virtualinvoke r73.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredNullChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r4, r72);

        if r77 == null goto label37;

        virtualinvoke r77.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredNullChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r4, r72);

     label37:
        $r16 = r73.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnBreak>;

        $i1 = $r16.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: int tagBits>;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label38;

        $r80 = r73.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnBreak>;

        goto label39;

     label38:
        $r17 = r73.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnBreak>;

        $r80 = virtualinvoke r61.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r17);

     label39:
        if z9 == 0 goto label40;

        $z14 = 0;

        goto label41;

     label40:
        $z14 = 1;

     label41:
        $r81 = staticinvoke <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedOptimizedBranches(org.eclipse.jdt.internal.compiler.flow.FlowInfo,boolean,org.eclipse.jdt.internal.compiler.flow.FlowInfo,boolean,boolean)>($r80, z1, $r76, z2, $z14);

        $r82 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i15 = virtualinvoke $r82.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r81);

        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int mergedInitStateIndex> = $i15;

        return $r81;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r19, $r20, $r30, $r31, $r38, $r39, $r46, $r51;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r13, $r14, $r21, $r25, $r27, $r41, $r43, $r45, $r49;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r2, $r16, $r23, $r24, $r33, $r47, $r48;
        org.eclipse.jdt.internal.compiler.ast.Statement $r26, $r28, $r32, $r35, $r50, $r52;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r4, $r10, $r17, $r18, $r22, $r29, $r34, $r36, $r37, $r42, $r44;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r7, $r8, $r9, $r11, $r12, $r15, $r40, $r53, $r54;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, i31, $i32, $i33, $i35, $i37, $i39, $i41, $i43, $i45;
        org.eclipse.jdt.internal.compiler.ast.ForStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ForStatement;

        r13 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int bits>;

        $i1 = $i0 & -2147483648;

        if $i1 != 0 goto label01;

        return;

     label01:
        i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        if $r2 == null goto label04;

        i29 = 0;

        $r47 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        i30 = lengthof $r47;

        goto label03;

     label02:
        $r48 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        $r50 = $r48[i29];

        $r49 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r50.<org.eclipse.jdt.internal.compiler.ast.Statement: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r49, r1);

        i29 = i29 + 1;

     label03:
        if i29 < i30 goto label02;

     label04:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $r3 != null goto label05;

        $r51 = null;

        goto label06;

     label05:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r51 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

     label06:
        if $r51 == null goto label07;

        $r46 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r51 == $r46 goto label07;

        $z1 = virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z1 != 0 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        if $z2 == 0 goto label11;

        $r44 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r43 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>($r43, r1, 0);

        $i23 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int bits>;

        $i24 = $i23 & 536870912;

        if $i24 == 0 goto label09;

        $r45 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void exitUserScope(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r45);

     label09:
        $i25 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int mergedInitStateIndex>;

        $i35 = (int) -1;

        if $i25 == $i35 goto label10;

        $i27 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int mergedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i27);

        $i28 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int mergedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i28);

     label10:
        $i26 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i2, $i26);

        return;

     label11:
        $r53 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r53.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $i3 = $r53.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int tagBits>;

        $i4 = $i3 | 2;

        $r53.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int tagBits> = $i4;

        $r54 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r54.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void initialize(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        if $r8 != null goto label12;

        virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $r36 == null goto label15;

        $r37 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r39 = $r37.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r38 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r39 != $r38 goto label15;

        $r42 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r41 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel>;

        virtualinvoke $r42.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>($r41, r1, null, $r40, 1);

        goto label15;

     label12:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void initialize(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $r10 == null goto label15;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r31 = $r29.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r30 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r31 != $r30 goto label15;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r32 == null goto label13;

        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $z0 = virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean isEmptyBlock()>();

        if $z0 == 0 goto label14;

     label13:
        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        if $r33 == null goto label15;

     label14:
        $i19 = $r54.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int tagBits>;

        $i20 = $i19 | 2;

        $r54.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int tagBits> = $i20;

        $i22 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r54);

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $i21 = $r34.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>($i22, $i21);

     label15:
        $r52 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r52 == null goto label17;

        $i17 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int condIfTrueInitStateIndex>;

        $i37 = (int) -1;

        if $i17 == $i37 goto label16;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int condIfTrueInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i18);

     label16:
        virtualinvoke $r53.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.ast.Statement: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r27, r1);

        goto label18;

     label17:
        virtualinvoke $r53.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

     label18:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preIncrementsInitStateIndex>;

        $i39 = (int) -1;

        if $i5 == $i39 goto label19;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preIncrementsInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i15);

        $i16 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preIncrementsInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i16);

     label19:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        if $r11 == null goto label25;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        if $r16 == null goto label22;

        i31 = 0;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        i14 = lengthof $r23;

        goto label21;

     label20:
        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        $r26 = $r24[i31];

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.ast.Statement: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r25, r1);

        i31 = i31 + 1;

     label21:
        if i31 < i14 goto label20;

     label22:
        $i12 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preCondInitStateIndex>;

        $i41 = (int) -1;

        if $i12 == $i41 goto label23;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preCondInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i13);

     label23:
        virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $r17 == null goto label24;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r20 = $r18.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r19 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r20 != $r19 goto label24;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>($r21, r1, $r53, null, 1);

        goto label26;

     label24:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r53);

        goto label26;

     label25:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preCondInitStateIndex>;

        $i43 = (int) -1;

        if $i6 == $i43 goto label26;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int preCondInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i11);

     label26:
        $i32 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int bits>;

        $i33 = $i32 & 536870912;

        if $i33 == 0 goto label27;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void exitUserScope(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r14);

     label27:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int mergedInitStateIndex>;

        $i45 = (int) -1;

        if $i7 == $i45 goto label28;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int mergedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i9);

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int mergedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i10);

     label28:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel>;

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        $i8 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i2, $i8);

        return;
    }

    public java.lang.StringBuffer printStatement(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r3, $r5, $r8, $r11, $r13, $r14;
        org.eclipse.jdt.internal.compiler.ast.Statement $r6, $r7, $r9, $r12;
        org.eclipse.jdt.internal.compiler.ast.Expression $r4, $r10;
        java.lang.StringBuffer r0, $r1;
        int i0, $i1, i2, $i3, i4, $i5;
        org.eclipse.jdt.internal.compiler.ast.ForStatement r2;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.ForStatement;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.ForStatement: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("for (");

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        if $r3 == null goto label04;

        i2 = 0;

        goto label03;

     label01:
        if i2 <= 0 goto label02;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label02:
        $r11 = r2.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        $r12 = $r11[i2];

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.Statement: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r0);

        i2 = i2 + 1;

     label03:
        $r13 = r2.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        $i3 = lengthof $r13;

        if i2 < $i3 goto label01;

     label04:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r4 = r2.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $r4 == null goto label05;

        $r10 = r2.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r0);

     label05:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r5 = r2.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        if $r5 == null goto label09;

        i4 = 0;

        goto label08;

     label06:
        if i4 <= 0 goto label07;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label07:
        $r8 = r2.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        $r9 = $r8[i4];

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Statement: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r0);

        i4 = i4 + 1;

     label08:
        $r14 = r2.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        $i5 = lengthof $r14;

        if i4 < $i5 goto label06;

     label09:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r6 != null goto label10;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        goto label11;

     label10:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r7 = r2.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $i1 = i0 + 1;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Statement: java.lang.StringBuffer printStatement(int,java.lang.StringBuffer)>($i1, r0);

     label11:
        return r0;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r2, $r4, $r8, $r9, $r18, $r19;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1, $r6, $r10, $r13, $r16, $r20, $r22;
        org.eclipse.jdt.internal.compiler.ast.Statement $r5, $r7, $r11, $r21;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r14, $r17;
        int $i0, $i1, i2, i3, i4, i5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r15;
        org.eclipse.jdt.internal.compiler.ast.ForStatement r0;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ForStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: int bits>;

        $i1 = $i0 & 536870912;

        if $i1 == 0 goto label01;

        $r22 = new org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        specialinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: void <init>(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1);

        goto label02;

     label01:
        $r22 = r1;

     label02:
        r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope> = $r22;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        if $r2 == null goto label05;

        i2 = 0;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        i3 = lengthof $r18;

        goto label04;

     label03:
        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        $r21 = $r19[i2];

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.ast.Statement: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r20);

        i2 = i2 + 1;

     label04:
        if i2 < i3 goto label03;

     label05:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $r3 == null goto label06;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r12 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BOOLEAN>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeExpecting(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r13, $r12);

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r16, $r15, $r15);

     label06:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        if $r4 == null goto label09;

        i4 = 0;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        i5 = lengthof $r8;

        goto label08;

     label07:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        $r11 = $r9[i4];

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.ast.Statement: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r10);

        i4 = i4 + 1;

     label08:
        if i4 < i5 goto label07;

     label09:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r5 == null goto label10;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Statement: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r6);

     label10:
        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r3, $r5, $r9, $r10, $r15, $r16;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2, $r7, $r11, $r13, $r17;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Statement $r6, $r8, $r12, $r18;
        org.eclipse.jdt.internal.compiler.ast.Expression $r4, $r14;
        int i0, i1, i2, i3;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.ForStatement r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ForStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.ForStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label8;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        if $r3 == null goto label3;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        i0 = lengthof $r15;

        i1 = 0;

        goto label2;

     label1:
        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] initializations>;

        $r18 = $r16[i1];

        $r17 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.ast.Statement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r17);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        if $r4 == null goto label4;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r13);

     label4:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        if $r5 == null goto label7;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        i2 = lengthof $r9;

        i3 = 0;

        goto label6;

     label5:
        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement[] increments>;

        $r12 = $r10[i3];

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.Statement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r11);

        i3 = i3 + 1;

     label6:
        if i3 < i2 goto label5;

     label7:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r6 == null goto label8;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.ForStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.Statement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r7);

     label8:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.ForStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
