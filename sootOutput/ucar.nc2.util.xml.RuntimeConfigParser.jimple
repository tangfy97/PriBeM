public class ucar.nc2.util.xml.RuntimeConfigParser extends java.lang.Object
{

    public void <init>()
    {
        ucar.nc2.util.xml.RuntimeConfigParser r0;

        r0 := @this: ucar.nc2.util.xml.RuntimeConfigParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void read(java.io.InputStream, java.lang.StringBuilder) throws java.io.IOException
    {
        org.jdom.input.SAXBuilder $r0;
        java.io.IOException $r6;
        org.jdom.Document $r2;
        org.jdom.JDOMException $r5;
        java.lang.StringBuilder r4;
        java.lang.String $r7;
        org.jdom.Element $r3;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r4 := @parameter1: java.lang.StringBuilder;

        $r0 = new org.jdom.input.SAXBuilder;

        specialinvoke $r0.<org.jdom.input.SAXBuilder: void <init>()>();

     label1:
        $r2 = virtualinvoke $r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>(r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.io.IOException;

        $r7 = virtualinvoke $r5.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        $r3 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        staticinvoke <ucar.nc2.util.xml.RuntimeConfigParser: void read(org.jdom.Element,java.lang.StringBuilder)>($r3, r4);

        return;

        catch org.jdom.JDOMException from label1 to label2 with label3;
    }

    public static void read(org.jdom.Element, java.lang.StringBuilder)
    {
        ucar.nc2.constants.FeatureType $r27;
        java.lang.StringBuilder r16, $r19, $r20, $r21, $r22, $r28, $r29, $r30, $r31, $r32, $r33, $r41, $r42, $r43, $r44, $r46, $r47, $r50, $r51, $r52, $r53, $r55, $r56, $r59, $r60, $r61, $r62, $r64, $r65, $r68, $r69, $r70, $r71, $r74, $r75, $r76, $r77, $r79, $r80, $r83, $r84, $r85, $r86, $r89, $r90, $r91, $r92, $r94, $r95, $r98, $r99, $r100, $r101, $r104, $r105, $r106, $r107, $r109, $r110, $r113, $r114, $r115, $r116;
        java.lang.ClassLoader $r12;
        java.lang.Object[] r15;
        java.lang.Class[] r118;
        org.jdom.Element r0, r3;
        java.lang.reflect.Method $r14;
        int $i0, i1;
        java.lang.Object $r2;
        java.lang.Class $r11, $r13;
        java.lang.Exception $r49, $r58, $r73, $r88, $r103;
        java.lang.Throwable $r40;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r17, $r18, $r23, $r24, $r25, $r26, $r34, $r35, $r36, $r37, $r38, $r39, $r45, $r48, $r54, $r57, $r63, $r66, $r72, $r78, $r81, $r87, $r93, $r96, $r102, $r108, $r111, $r117;
        java.lang.ClassNotFoundException $r67, $r82, $r97, $r112;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.List $r1;

        r0 := @parameter0: org.jdom.Element;

        r16 := @parameter1: java.lang.StringBuilder;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren()>();

        i1 = 0;

     label01:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label40;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (org.jdom.Element) $r2;

        $r4 = virtualinvoke r3.<org.jdom.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("ioServiceProvider");

        if $z0 == 0 goto label07;

        $r39 = virtualinvoke r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("class");

     label02:
        staticinvoke <ucar.nc2.NetcdfFile: void registerIOProvider(java.lang.String)>($r39);

     label03:
        goto label06;

     label04:
        $r112 := @caughtexception;

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoordSysBuilder class not found= ");

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; check your classpath\n");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117);

        goto label06;

     label05:
        $r103 := @caughtexception;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOServiceProvider ");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed= ");

        $r108 = virtualinvoke $r103.<java.lang.Exception: java.lang.String getMessage()>();

        $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

     label06:
        goto label39;

     label07:
        $r5 = virtualinvoke r3.<org.jdom.Element: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("coordSysBuilder");

        if $z1 == 0 goto label13;

        $r37 = virtualinvoke r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("convention");

        $r38 = virtualinvoke r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("class");

     label08:
        staticinvoke <ucar.nc2.dataset.CoordSysBuilder: void registerConvention(java.lang.String,java.lang.String)>($r37, $r38);

     label09:
        goto label12;

     label10:
        $r97 := @caughtexception;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoordSysBuilder class not found= ");

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; check your classpath\n");

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        goto label12;

     label11:
        $r88 := @caughtexception;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoordSysBuilder ");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed= ");

        $r93 = virtualinvoke $r88.<java.lang.Exception: java.lang.String getMessage()>();

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

     label12:
        goto label39;

     label13:
        $r6 = virtualinvoke r3.<org.jdom.Element: java.lang.String getName()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("coordTransBuilder");

        if $z2 == 0 goto label19;

        $r35 = virtualinvoke r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r36 = virtualinvoke r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("class");

     label14:
        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.String)>($r35, $r36);

     label15:
        goto label18;

     label16:
        $r82 := @caughtexception;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoordSysBuilder class not found= ");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; check your classpath\n");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        goto label18;

     label17:
        $r73 := @caughtexception;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoordTransBuilder ");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed= ");

        $r78 = virtualinvoke $r73.<java.lang.Exception: java.lang.String getMessage()>();

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

     label18:
        goto label39;

     label19:
        $r7 = virtualinvoke r3.<org.jdom.Element: java.lang.String getName()>();

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("typedDatasetFactory");

        if $z3 == 0 goto label25;

        $r24 = virtualinvoke r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("datatype");

        $r25 = virtualinvoke r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("class");

        $r26 = virtualinvoke $r24.<java.lang.String: java.lang.String toUpperCase()>();

        $r27 = staticinvoke <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType valueOf(java.lang.String)>($r26);

        if null != $r27 goto label20;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TypedDatasetFactory ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unknown datatype= ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        goto label39;

     label20:
        staticinvoke <ucar.nc2.dt.TypedDatasetFactory: void registerFactory(ucar.nc2.constants.FeatureType,java.lang.String)>($r27, $r25);

     label21:
        goto label24;

     label22:
        $r67 := @caughtexception;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoordSysBuilder class not found= ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; check your classpath\n");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        goto label24;

     label23:
        $r58 := @caughtexception;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TypedDatasetFactory ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed= ");

        $r63 = virtualinvoke $r58.<java.lang.Exception: java.lang.String getMessage()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

     label24:
        goto label39;

     label25:
        $r8 = virtualinvoke r3.<org.jdom.Element: java.lang.String getName()>();

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("table");

        if $z4 == 0 goto label34;

        $r17 = virtualinvoke r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r18 = virtualinvoke r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("filename");

        if $r17 == null goto label26;

        if $r18 != null goto label27;

     label26:
        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("table element must have both type and filename attributes\n");

        goto label39;

     label27:
        $z6 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GRIB1");

        if $z6 == 0 goto label28;

        staticinvoke <ucar.grib.grib1.GribPDSParamTable: boolean addParameterUserLookup(java.lang.String)>($r18);

        goto label31;

     label28:
        $z7 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GRIB2");

        if $z7 == 0 goto label29;

        staticinvoke <ucar.grib.grib2.ParameterTable: void addParametersUser(java.lang.String)>($r18);

        goto label31;

     label29:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown table type ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label30:
        goto label39;

     label31:
        goto label33;

     label32:
        $r49 := @caughtexception;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("table read failed on  ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r54 = virtualinvoke $r49.<java.lang.Exception: java.lang.String getMessage()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

     label33:
        goto label39;

     label34:
        $r9 = virtualinvoke r3.<org.jdom.Element: java.lang.String getName()>();

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("bufrtable");

        if $z5 == 0 goto label39;

        $r10 = virtualinvoke r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("filename");

        if $r10 != null goto label35;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bufrtable must have filename attribute\n");

        goto label39;

     label35:
        $r11 = class "Lucar/nc2/util/xml/RuntimeConfigParser;";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r13 = virtualinvoke $r12.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("ucar.nc2.iosp.bufr.tables.BufrTables");

        r118 = newarray (java.lang.Class)[1];

        r118[0] = class "Ljava/lang/String;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addLookupFile", r118);

        r15 = newarray (java.lang.Object)[1];

        r15[0] = $r10;

        virtualinvoke $r14.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r15);

     label36:
        goto label39;

     label37:
        $r40 := @caughtexception;

        $z8 = $r40 instanceof java.io.FileNotFoundException;

        if $z8 == 0 goto label38;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bufrtable read failed on  ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r45 = virtualinvoke $r40.<java.lang.Throwable: java.lang.String getMessage()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        goto label39;

     label38:
        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bufr.jar is not on classpath\n");

     label39:
        i1 = i1 + 1;

        goto label01;

     label40:
        return;

        catch java.lang.ClassNotFoundException from label02 to label03 with label04;
        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.ClassNotFoundException from label08 to label09 with label10;
        catch java.lang.Exception from label08 to label09 with label11;
        catch java.lang.ClassNotFoundException from label14 to label15 with label16;
        catch java.lang.Exception from label14 to label15 with label17;
        catch java.lang.ClassNotFoundException from label20 to label21 with label22;
        catch java.lang.Exception from label20 to label21 with label23;
        catch java.lang.Exception from label27 to label30 with label32;
        catch java.lang.Throwable from label35 to label36 with label37;
    }
}
