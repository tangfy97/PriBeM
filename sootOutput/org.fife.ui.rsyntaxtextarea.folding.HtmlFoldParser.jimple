public class org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser extends java.lang.Object implements org.fife.ui.rsyntaxtextarea.folding.FoldParser
{
    public static final int LANGUAGE_HTML;
    public static final int LANGUAGE_PHP;
    public static final int LANGUAGE_JSP;
    private final int language;
    private static final java.util.Set FOLDABLE_TAGS;
    private static final char[] MARKUP_CLOSING_TAG_START;
    private static final char[] MLC_START;
    private static final char[] MLC_END;
    private static final char[] PHP_START;
    private static final char[] PHP_END;
    private static final char[] JSP_START;
    private static final char[] JSP_END;
    private static final char[][] LANG_START;
    private static final char[][] LANG_END;
    private static final char[] JSP_COMMENT_START;
    private static final char[] JSP_COMMENT_END;

    public void <init>(int)
    {
        java.lang.IllegalArgumentException $r7;
        org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser r0;
        java.lang.StringBuffer $r3, $r4, $r6;
        int i0, $i2;
        java.lang.String $r5;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        if i0 >= $i2 goto label1;

        if i0 <= 1 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid language: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r7;

     label1:
        r0.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: int language> = i0;

        return;
    }

    public java.util.List getFolds(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)
    {
        char[][] $r22, $r24;
        org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser r4;
        javax.swing.text.BadLocationException $r28;
        java.util.ArrayList $r31;
        java.lang.String $r10;
        char[] $r5, $r12, $r13, $r14, $r16, $r18, $r20, $r23, $r25;
        org.fife.ui.rsyntaxtextarea.Token $r6, $r8, $r9, r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, z19, z20, z21;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r2;
        org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo $r33;
        java.util.Stack $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, $i31;
        org.fife.ui.rsyntaxtextarea.folding.Fold $r7, $r19, $r21, $r26, r29, $r34, $r35, $r36, $r37;

        r4 := @this: org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser;

        r2 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        $r32 = new java.util.Stack;

        specialinvoke $r32.<java.util.Stack: void <init>()>();

        z19 = 0;

        r29 = null;

        $i0 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

        z20 = 0;

        z21 = 0;

        $r33 = new org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo;

        specialinvoke $r33.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo: void <init>(org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$1)>(null);

     label01:
        i26 = 0;

     label02:
        if i26 >= $i0 goto label29;

        r30 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i26);

     label03:
        if r30 == null goto label28;

        $z0 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z0 == 0 goto label28;

        $i1 = r4.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: int language>;

        if $i1 < 0 goto label08;

        $i18 = r30.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i18 != 22 goto label08;

        $r22 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[][] LANG_START>;

        $i19 = r4.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: int language>;

        $r23 = $r22[$i19];

        $z16 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean startsWith(char[])>($r23);

        if $z16 == 0 goto label06;

        if r29 != null goto label04;

        $r34 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i25 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        specialinvoke $r34.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(0, r2, $i25);

        r29 = $r34;

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r34);

        goto label05;

     label04:
        $i24 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        r29 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(0, $i24);

     label05:
        z19 = 1;

        goto label08;

     label06:
        $r24 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[][] LANG_END>;

        $i20 = r4.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: int language>;

        $r25 = $r24[$i20];

        $z17 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean startsWith(char[])>($r25);

        if $z17 == 0 goto label08;

        $i22 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i21 = r30.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i23 = $i22 + $i21;

        i27 = $i23 - 1;

        virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>(i27);

        $r26 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

        $z18 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isOnSingleLine()>();

        if $z18 == 0 goto label07;

        staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: void removeFold(org.fife.ui.rsyntaxtextarea.folding.Fold,java.util.List)>(r29, $r31);

     label07:
        r29 = $r26;

        z19 = 0;

        r30 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        goto label03;

     label08:
        if z19 != 0 goto label27;

        $i2 = r30.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i2 != 2 goto label18;

        if z20 == 0 goto label10;

        $r20 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] MLC_END>;

        $z14 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean endsWith(char[])>($r20);

        if $z14 == 0 goto label27;

        $i16 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i15 = r30.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i17 = $i16 + $i15;

        i28 = $i17 - 1;

        virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>(i28);

        $r21 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

        $z15 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isOnSingleLine()>();

        if $z15 == 0 goto label09;

        staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: void removeFold(org.fife.ui.rsyntaxtextarea.folding.Fold,java.util.List)>(r29, $r31);

     label09:
        r29 = $r21;

        z20 = 0;

        goto label27;

     label10:
        if z21 == 0 goto label12;

        $r18 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] JSP_COMMENT_END>;

        $z12 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean endsWith(char[])>($r18);

        if $z12 == 0 goto label27;

        $i13 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i12 = r30.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i14 = $i13 + $i12;

        i29 = $i14 - 1;

        virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>(i29);

        $r19 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

        $z13 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isOnSingleLine()>();

        if $z13 == 0 goto label11;

        staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: void removeFold(org.fife.ui.rsyntaxtextarea.folding.Fold,java.util.List)>(r29, $r31);

     label11:
        r29 = $r19;

        z21 = 0;

        goto label27;

     label12:
        $r12 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] MLC_START>;

        $z8 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean startsWith(char[])>($r12);

        if $z8 == 0 goto label15;

        $r16 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] MLC_END>;

        $z11 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean endsWith(char[])>($r16);

        if $z11 != 0 goto label15;

        if r29 != null goto label13;

        $r35 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i11 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        specialinvoke $r35.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(1, r2, $i11);

        r29 = $r35;

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r35);

        goto label14;

     label13:
        $i10 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        r29 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(1, $i10);

     label14:
        z20 = 1;

        goto label27;

     label15:
        $i7 = r4.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: int language>;

        if $i7 != 1 goto label27;

        $r13 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] JSP_COMMENT_START>;

        $z9 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean startsWith(char[])>($r13);

        if $z9 == 0 goto label27;

        $r14 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] JSP_COMMENT_END>;

        $z10 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean endsWith(char[])>($r14);

        if $z10 != 0 goto label27;

        if r29 != null goto label16;

        $r36 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i9 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        specialinvoke $r36.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(1, r2, $i9);

        r29 = $r36;

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r36);

        goto label17;

     label16:
        $i8 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        r29 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(1, $i8);

     label17:
        z21 = 1;

        goto label27;

     label18:
        $z1 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean isSingleChar(int,char)>(25, 60);

        if $z1 == 0 goto label25;

        $r8 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        $z6 = staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: boolean isFoldableTag(org.fife.ui.rsyntaxtextarea.Token)>($r8);

        if $z6 == 0 goto label24;

        specialinvoke r4.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: void getTagCloseInfo(org.fife.ui.rsyntaxtextarea.Token,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int,org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo)>($r8, r2, i26, $r33);

        $i4 = staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo: int access$100(org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo)>($r33);

        $i31 = (int) -1;

        if $i4 != $i31 goto label20;

     label19:
        return $r31;

     label20:
        $r9 = staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo: org.fife.ui.rsyntaxtextarea.Token access$200(org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo)>($r33);

        $z7 = virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.Token: boolean isSingleChar(int,char)>(25, 62);

        if $z7 == 0 goto label23;

        if r29 != null goto label21;

        $r37 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i6 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        specialinvoke $r37.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(0, r2, $i6);

        r29 = $r37;

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r37);

        goto label22;

     label21:
        $i5 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        r29 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(0, $i5);

     label22:
        $r10 = virtualinvoke $r8.<org.fife.ui.rsyntaxtextarea.Token: java.lang.String getLexeme()>();

        virtualinvoke $r32.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r10);

     label23:
        r30 = $r9;

     label24:
        goto label27;

     label25:
        $r5 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] MARKUP_CLOSING_TAG_START>;

        $z2 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: boolean is(int,char[])>(25, $r5);

        if $z2 == 0 goto label27;

        if r29 == null goto label27;

        $r6 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        $z3 = staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: boolean isFoldableTag(org.fife.ui.rsyntaxtextarea.Token)>($r6);

        if $z3 == 0 goto label27;

        $z4 = staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: boolean isEndOfLastFold(java.util.Stack,org.fife.ui.rsyntaxtextarea.Token)>($r32, $r6);

        if $z4 == 0 goto label27;

        virtualinvoke $r32.<java.util.Stack: java.lang.Object pop()>();

        $i3 = r30.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>($i3);

        $r7 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

        $z5 = virtualinvoke r29.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isOnSingleLine()>();

        if $z5 == 0 goto label26;

        staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: void removeFold(org.fife.ui.rsyntaxtextarea.folding.Fold,java.util.List)>(r29, $r31);

     label26:
        r29 = $r7;

        r30 = $r6;

     label27:
        r30 = virtualinvoke r30.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        goto label03;

     label28:
        i26 = i26 + 1;

        goto label02;

     label29:
        goto label31;

     label30:
        $r28 := @caughtexception;

        virtualinvoke $r28.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label31:
        return $r31;

        catch javax.swing.text.BadLocationException from label01 to label19 with label30;
        catch javax.swing.text.BadLocationException from label20 to label29 with label30;
    }

    private void getTagCloseInfo(org.fife.ui.rsyntaxtextarea.Token, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, int, org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r2;
        org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo r0;
        org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser r4;
        int $i0, $i1, i2;
        org.fife.ui.rsyntaxtextarea.Token r1, $r3, r5;

        r4 := @this: org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        r2 := @parameter1: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        i2 := @parameter2: int;

        r0 := @parameter3: org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo: void reset()>();

        r5 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

     label1:
        if r5 == null goto label2;

        $i1 = r5.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i1 == 25 goto label2;

        r5 = virtualinvoke r5.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        goto label1;

     label2:
        if r5 == null goto label3;

        staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo: org.fife.ui.rsyntaxtextarea.Token access$202(org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo,org.fife.ui.rsyntaxtextarea.Token)>(r0, r5);

        staticinvoke <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo: int access$102(org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser$TagCloseInfo,int)>(r0, i2);

        goto label4;

     label3:
        i2 = i2 + 1;

        $i0 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

        if i2 >= $i0 goto label4;

        $r3 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i2);

        r5 = $r3;

        if $r3 != null goto label1;

     label4:
        return;
    }

    private static final boolean isEndOfLastFold(java.util.Stack, org.fife.ui.rsyntaxtextarea.Token)
    {
        java.lang.Object $r3;
        java.lang.String $r2, $r4;
        org.fife.ui.rsyntaxtextarea.Token r0;
        java.util.Stack r1;
        boolean $z0, $z1;

        r1 := @parameter0: java.util.Stack;

        r0 := @parameter1: org.fife.ui.rsyntaxtextarea.Token;

        if r0 == null goto label1;

        $z0 = virtualinvoke r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: java.lang.String getLexeme()>();

        $r3 = virtualinvoke r1.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (java.lang.String) $r3;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        return $z1;

     label1:
        return 0;
    }

    private static final boolean isFoldableTag(org.fife.ui.rsyntaxtextarea.Token)
    {
        java.util.Set $r1;
        java.lang.String $r2, $r3;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0, $z1;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        if r0 == null goto label1;

        $r1 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: java.lang.String getLexeme()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static final void removeFold(org.fife.ui.rsyntaxtextarea.folding.Fold, java.util.List)
    {
        java.util.List r1;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.folding.Fold;

        r1 := @parameter1: java.util.List;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean removeFromParent()>();

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>($i1);

     label1:
        return;
    }

    static void <clinit>()
    {
        char[][] $r14, $r17;
        java.util.Set $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41;
        java.util.HashSet $r24;
        java.lang.String $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r20, $r22;
        char[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r19, $r21, $r23;

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: int LANGUAGE_JSP> = 1;

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: int LANGUAGE_PHP> = 0;

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: int LANGUAGE_HTML> = -1;

        $r0 = "</";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] MARKUP_CLOSING_TAG_START> = $r1;

        $r2 = "<!--";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] MLC_START> = $r3;

        $r4 = "-->";

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] MLC_END> = $r5;

        $r6 = "<?";

        $r7 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] PHP_START> = $r7;

        $r8 = "?>";

        $r9 = virtualinvoke $r8.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] PHP_END> = $r9;

        $r10 = "<%";

        $r11 = virtualinvoke $r10.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] JSP_START> = $r11;

        $r12 = "%>";

        $r13 = virtualinvoke $r12.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] JSP_END> = $r13;

        $r14 = newarray (char[])[2];

        $r15 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] PHP_START>;

        $r14[0] = $r15;

        $r16 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] JSP_START>;

        $r14[1] = $r16;

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[][] LANG_START> = $r14;

        $r17 = newarray (char[])[2];

        $r18 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] PHP_END>;

        $r17[0] = $r18;

        $r19 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] JSP_END>;

        $r17[1] = $r19;

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[][] LANG_END> = $r17;

        $r20 = "<%--";

        $r21 = virtualinvoke $r20.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] JSP_COMMENT_START> = $r21;

        $r22 = "--%>";

        $r23 = virtualinvoke $r22.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: char[] JSP_COMMENT_END> = $r23;

        $r24 = new java.util.HashSet;

        specialinvoke $r24.<java.util.HashSet: void <init>()>();

        <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS> = $r24;

        $r25 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r25.<java.util.Set: boolean add(java.lang.Object)>("body");

        $r26 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r26.<java.util.Set: boolean add(java.lang.Object)>("canvas");

        $r27 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r27.<java.util.Set: boolean add(java.lang.Object)>("div");

        $r28 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r28.<java.util.Set: boolean add(java.lang.Object)>("form");

        $r29 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r29.<java.util.Set: boolean add(java.lang.Object)>("head");

        $r30 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>("html");

        $r31 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r31.<java.util.Set: boolean add(java.lang.Object)>("ol");

        $r32 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r32.<java.util.Set: boolean add(java.lang.Object)>("pre");

        $r33 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r33.<java.util.Set: boolean add(java.lang.Object)>("script");

        $r34 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r34.<java.util.Set: boolean add(java.lang.Object)>("span");

        $r35 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r35.<java.util.Set: boolean add(java.lang.Object)>("style");

        $r36 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r36.<java.util.Set: boolean add(java.lang.Object)>("table");

        $r37 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r37.<java.util.Set: boolean add(java.lang.Object)>("tfoot");

        $r38 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r38.<java.util.Set: boolean add(java.lang.Object)>("thead");

        $r39 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r39.<java.util.Set: boolean add(java.lang.Object)>("tr");

        $r40 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>("td");

        $r41 = <org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: java.util.Set FOLDABLE_TAGS>;

        interfaceinvoke $r41.<java.util.Set: boolean add(java.lang.Object)>("ul");

        return;
    }
}
