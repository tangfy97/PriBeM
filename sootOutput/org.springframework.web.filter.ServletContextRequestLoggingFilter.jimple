public class org.springframework.web.filter.ServletContextRequestLoggingFilter extends org.springframework.web.filter.AbstractRequestLoggingFilter
{

    public void <init>()
    {
        org.springframework.web.filter.ServletContextRequestLoggingFilter r0;

        r0 := @this: org.springframework.web.filter.ServletContextRequestLoggingFilter;

        specialinvoke r0.<org.springframework.web.filter.AbstractRequestLoggingFilter: void <init>()>();

        return;
    }

    protected void beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String)
    {
        org.springframework.web.filter.ServletContextRequestLoggingFilter r0;
        javax.servlet.http.HttpServletRequest r3;
        javax.servlet.ServletContext $r1;
        java.lang.String r2;

        r0 := @this: org.springframework.web.filter.ServletContextRequestLoggingFilter;

        r3 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.filter.ServletContextRequestLoggingFilter: javax.servlet.ServletContext getServletContext()>();

        interfaceinvoke $r1.<javax.servlet.ServletContext: void log(java.lang.String)>(r2);

        return;
    }

    protected void afterRequest(javax.servlet.http.HttpServletRequest, java.lang.String)
    {
        org.springframework.web.filter.ServletContextRequestLoggingFilter r0;
        javax.servlet.http.HttpServletRequest r3;
        javax.servlet.ServletContext $r1;
        java.lang.String r2;

        r0 := @this: org.springframework.web.filter.ServletContextRequestLoggingFilter;

        r3 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.filter.ServletContextRequestLoggingFilter: javax.servlet.ServletContext getServletContext()>();

        interfaceinvoke $r1.<javax.servlet.ServletContext: void log(java.lang.String)>(r2);

        return;
    }
}
