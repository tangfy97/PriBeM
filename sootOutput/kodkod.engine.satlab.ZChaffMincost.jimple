final class kodkod.engine.satlab.ZChaffMincost extends kodkod.engine.satlab.NativeSolver implements kodkod.engine.satlab.SATMinSolver
{

    static void <clinit>()
    {
        staticinvoke <kodkod.engine.satlab.ZChaffMincost: void loadLibrary(java.lang.String)>("zchaffmincost");

        return;
    }

    void <init>()
    {
        kodkod.engine.satlab.ZChaffMincost r0;
        long $l0;

        r0 := @this: kodkod.engine.satlab.ZChaffMincost;

        $l0 = staticinvoke <kodkod.engine.satlab.ZChaffMincost: long make()>();

        specialinvoke r0.<kodkod.engine.satlab.NativeSolver: void <init>(long)>($l0);

        return;
    }

    public void setCost(int, int)
    {
        long $l2;
        java.lang.IllegalArgumentException $r1;
        kodkod.engine.satlab.ZChaffMincost r0;
        int i0, i1;
        java.lang.StringBuilder $r2, $r3;
        java.lang.String $r4;

        r0 := @this: kodkod.engine.satlab.ZChaffMincost;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<kodkod.engine.satlab.ZChaffMincost: void validateVariable(int)>(i0);

        if i1 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalid cost: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label1:
        $l2 = virtualinvoke r0.<kodkod.engine.satlab.ZChaffMincost: long peer()>();

        specialinvoke r0.<kodkod.engine.satlab.ZChaffMincost: void setCost(long,int,int)>($l2, i0, i1);

        return;
    }

    public int costOf(int)
    {
        kodkod.engine.satlab.ZChaffMincost r0;
        int i0, $i2;
        long $l1;

        r0 := @this: kodkod.engine.satlab.ZChaffMincost;

        i0 := @parameter0: int;

        virtualinvoke r0.<kodkod.engine.satlab.ZChaffMincost: void validateVariable(int)>(i0);

        $l1 = virtualinvoke r0.<kodkod.engine.satlab.ZChaffMincost: long peer()>();

        $i2 = specialinvoke r0.<kodkod.engine.satlab.ZChaffMincost: int costOf(long,int)>($l1, i0);

        return $i2;
    }

    public java.lang.String toString()
    {
        kodkod.engine.satlab.ZChaffMincost r0;

        r0 := @this: kodkod.engine.satlab.ZChaffMincost;

        return "ZChaffMincost";
    }

    private static native long make();

    private native void setCost(long, int, int);

    private native int costOf(long, int);

    native void free(long);

    native void addVariables(long, int);

    native boolean addClause(long, int[]);

    native boolean solve(long);

    native boolean valueOf(long, int);
}
