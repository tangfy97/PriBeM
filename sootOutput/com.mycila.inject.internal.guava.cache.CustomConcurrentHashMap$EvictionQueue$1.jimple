class com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1 extends com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$AbstractReferenceEntry
{
    com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry nextEvictable;
    com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry previousEvictable;
    final com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue this$0;

    void <init>(com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue)
    {
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue r1;
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue;

        r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$AbstractReferenceEntry: void <init>()>();

        r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry nextEvictable> = r0;

        r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry previousEvictable> = r0;

        return;
    }

    public com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry getNextEvictable()
    {
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry $r1;
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1;

        $r1 = r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry nextEvictable>;

        return $r1;
    }

    public void setNextEvictable(com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry r1;
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry;

        r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry nextEvictable> = r1;

        return;
    }

    public com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable()
    {
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry $r1;
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1;

        $r1 = r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry previousEvictable>;

        return $r1;
    }

    public void setPreviousEvictable(com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry r1;
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry;

        r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EvictionQueue$1: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry previousEvictable> = r1;

        return;
    }
}
