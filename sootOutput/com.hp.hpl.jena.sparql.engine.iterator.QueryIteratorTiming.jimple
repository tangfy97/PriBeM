public class com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming extends com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorWrapper
{
    private static org.slf4j.Logger log;
    public static final int NotStarted;
    public static final int NotFinished;
    private com.hp.hpl.jena.sparql.util.Timer timer;
    private long milliseconds;

    public static com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming time(com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming $r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        $r0 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator)>(r1);

        return $r0;
    }

    private void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorWrapper: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator)>(r1);

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: com.hp.hpl.jena.sparql.util.Timer timer> = null;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: long milliseconds> = -2L;

        return;
    }

    protected boolean hasNextBinding()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: void start()>();

        $z0 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorWrapper: boolean hasNextBinding()>();

        return $z0;
    }

    protected com.hp.hpl.jena.sparql.engine.binding.Binding moveToNextBinding()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: void start()>();

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorWrapper: com.hp.hpl.jena.sparql.engine.binding.Binding moveToNextBinding()>();

        return $r1;
    }

    protected void closeIterator()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorWrapper: void closeIterator()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: void stop()>();

        return;
    }

    private void start()
    {
        com.hp.hpl.jena.sparql.util.Timer $r1, $r2, $r3;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: com.hp.hpl.jena.sparql.util.Timer timer>;

        if $r1 != null goto label1;

        $r2 = new com.hp.hpl.jena.sparql.util.Timer;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.util.Timer: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: com.hp.hpl.jena.sparql.util.Timer timer> = $r2;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: com.hp.hpl.jena.sparql.util.Timer timer>;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.util.Timer: void startTimer()>();

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: long milliseconds> = -1L;

     label1:
        return;
    }

    private void stop()
    {
        com.hp.hpl.jena.sparql.util.Timer $r1, $r2;
        org.slf4j.Logger $r3;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming r0;
        java.lang.Long $r4;
        long $l0, $l1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: com.hp.hpl.jena.sparql.util.Timer timer>;

        if $r1 != null goto label1;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: long milliseconds> = 0L;

        return;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: com.hp.hpl.jena.sparql.util.Timer timer>;

        $l0 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Timer: long endTimer()>();

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: long milliseconds> = $l0;

        $r3 = <com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: org.slf4j.Logger log>;

        $l1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: long milliseconds>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Execution: {} milliseconds", $r4);

        return;
    }

    public long getMillis()
    {
        long $l0;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming;

        $l0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: long milliseconds>;

        return $l0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: int NotFinished> = -1;

        <com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: int NotStarted> = -2;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/sparql/engine/iterator/QueryIteratorTiming;");

        <com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorTiming: org.slf4j.Logger log> = $r0;

        return;
    }
}
