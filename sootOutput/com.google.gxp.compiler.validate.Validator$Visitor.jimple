class com.google.gxp.compiler.validate.Validator$Visitor extends com.google.gxp.compiler.base.ExhaustiveExpressionVisitor implements com.google.gxp.compiler.base.CallVisitor, com.google.gxp.compiler.base.ImplementsVisitor
{
    private final com.google.gxp.compiler.alerts.AlertSink alertSink;
    private com.google.gxp.compiler.base.Template template;
    private final java.util.Deque varNames;

    void <init>(com.google.gxp.compiler.alerts.AlertSink)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.alerts.AlertSink r2, $r4;
        java.lang.Object $r3;
        java.util.ArrayDeque $r1;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r2 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: void <init>()>();

        r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Template template> = null;

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<com.google.gxp.compiler.validate.Validator$Visitor: java.util.Deque varNames> = $r1;

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (com.google.gxp.compiler.alerts.AlertSink) $r3;

        r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink> = $r4;

        return;
    }

    private void checkForDuplicateParams(java.lang.Iterable)
    {
        java.lang.Iterable r1;
        java.util.HashSet $r0;
        com.google.gxp.compiler.validate.DuplicateParameterNameError $r12;
        com.google.gxp.compiler.alerts.AlertSink $r9, $r13;
        com.google.gxp.compiler.base.Parameter r4;
        java.lang.String r11;
        boolean $z0, $z1, $z2, $z3, z4;
        java.util.Iterator $r2, $r6;
        java.util.Set $r5;
        com.google.gxp.compiler.validate.Validator$Visitor r7;
        com.google.gxp.compiler.validate.TooManyContentParametersError $r8;
        java.lang.Object $r3, $r10;

        r7 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        z4 = 0;

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.gxp.compiler.base.Parameter) $r3;

        $r5 = virtualinvoke r4.<com.google.gxp.compiler.base.Parameter: java.util.Set getNames()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r10;

        $z3 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>(r11);

        if $z3 == 0 goto label3;

        $r13 = r7.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r12 = new com.google.gxp.compiler.validate.DuplicateParameterNameError;

        specialinvoke $r12.<com.google.gxp.compiler.validate.DuplicateParameterNameError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r4, r11);

        interfaceinvoke $r13.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r12);

        goto label4;

     label3:
        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r11);

     label4:
        goto label2;

     label5:
        $z2 = virtualinvoke r4.<com.google.gxp.compiler.base.Parameter: boolean consumesContent()>();

        if $z2 == 0 goto label7;

        if z4 == 0 goto label6;

        $r9 = r7.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r8 = new com.google.gxp.compiler.validate.TooManyContentParametersError;

        specialinvoke $r8.<com.google.gxp.compiler.validate.TooManyContentParametersError: void <init>(com.google.gxp.compiler.base.Node)>(r4);

        interfaceinvoke $r9.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r8);

        goto label7;

     label6:
        z4 = 1;

     label7:
        goto label1;

     label8:
        return;
    }

    public com.google.gxp.compiler.base.Interface visitInterface(com.google.gxp.compiler.base.Interface)
    {
        com.google.gxp.compiler.validate.InterfaceParamHasDefaultValueError $r12;
        com.google.gxp.compiler.base.Expression $r8, $r9;
        java.util.Iterator $r4;
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        java.util.List $r2, $r3;
        com.google.gxp.compiler.alerts.AlertSink $r11, $r13;
        com.google.gxp.compiler.base.Parameter r7;
        com.google.gxp.compiler.validate.InterfaceParamHasConstructorError $r10;
        java.lang.Object $r6;
        com.google.gxp.compiler.base.Interface r1, $r5;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Interface;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.Interface: java.util.List getParameters()>();

        specialinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: void checkForDuplicateParams(java.lang.Iterable)>($r2);

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.Interface: java.util.List getParameters()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.google.gxp.compiler.base.Parameter) $r6;

        $r8 = virtualinvoke r7.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Expression getDefaultValue()>();

        if $r8 == null goto label2;

        $r13 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r12 = new com.google.gxp.compiler.validate.InterfaceParamHasDefaultValueError;

        specialinvoke $r12.<com.google.gxp.compiler.validate.InterfaceParamHasDefaultValueError: void <init>(com.google.gxp.compiler.base.Node)>(r7);

        interfaceinvoke $r13.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r12);

     label2:
        $r9 = virtualinvoke r7.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Expression getConstructor()>();

        if $r9 == null goto label3;

        $r11 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r10 = new com.google.gxp.compiler.validate.InterfaceParamHasConstructorError;

        specialinvoke $r10.<com.google.gxp.compiler.validate.InterfaceParamHasConstructorError: void <init>(com.google.gxp.compiler.base.Node)>(r7);

        interfaceinvoke $r11.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r10);

     label3:
        goto label1;

     label4:
        $r5 = specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.base.Interface visitInterface(com.google.gxp.compiler.base.Interface)>(r1);

        return $r5;
    }

    public com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.compiler.base.ImplementsDeclaration r19;
        java.util.Deque $r12;
        java.lang.Iterable $r5;
        com.google.gxp.compiler.alerts.AlertSink $r15, $r17;
        com.google.gxp.compiler.base.Parameter r18;
        java.lang.String $r13;
        com.google.gxp.compiler.base.Template r1, $r9;
        boolean $z0, $z1, $z2, $z3;
        com.google.gxp.compiler.base.Constructor $r2;
        java.util.Iterator $r6, $r8;
        com.google.gxp.compiler.validate.TemplateParamWithHasConstructorError $r14;
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        java.util.List $r3, $r4, $r7;
        com.google.gxp.compiler.validate.TemplateParamWithHasDefaultError $r16;
        java.lang.Object $r10, $r11;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Template;

        r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Template template> = r1;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.base.Constructor getConstructor()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.base.Constructor: java.util.List getParameters()>();

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.Template: java.util.List getParameters()>();

        $r5 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable)>($r3, $r4);

        specialinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: void checkForDuplicateParams(java.lang.Iterable)>($r5);

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r18 = (com.google.gxp.compiler.base.Parameter) $r11;

        $z2 = virtualinvoke r18.<com.google.gxp.compiler.base.Parameter: boolean hasDefaultFlag()>();

        if $z2 != 1 goto label2;

        $r17 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r16 = new com.google.gxp.compiler.validate.TemplateParamWithHasDefaultError;

        specialinvoke $r16.<com.google.gxp.compiler.validate.TemplateParamWithHasDefaultError: void <init>(com.google.gxp.compiler.base.Node)>(r18);

        interfaceinvoke $r17.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r16);

     label2:
        $z3 = virtualinvoke r18.<com.google.gxp.compiler.base.Parameter: boolean hasConstructorFlag()>();

        if $z3 != 1 goto label3;

        $r15 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r14 = new com.google.gxp.compiler.validate.TemplateParamWithHasConstructorError;

        specialinvoke $r14.<com.google.gxp.compiler.validate.TemplateParamWithHasConstructorError: void <init>(com.google.gxp.compiler.base.Node)>(r18);

        interfaceinvoke $r15.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r14);

     label3:
        $r12 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: java.util.Deque varNames>;

        $r13 = virtualinvoke r18.<com.google.gxp.compiler.base.Parameter: java.lang.String getPrimaryName()>();

        interfaceinvoke $r12.<java.util.Deque: void push(java.lang.Object)>($r13);

        goto label1;

     label4:
        $r7 = virtualinvoke r1.<com.google.gxp.compiler.base.Template: java.util.List getImplementsDeclarations()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.google.gxp.compiler.base.ImplementsDeclaration) $r10;

        virtualinvoke r19.<com.google.gxp.compiler.base.ImplementsDeclaration: java.lang.Object acceptImplementsVisitor(com.google.gxp.compiler.base.ImplementsVisitor)>(r0);

        goto label5;

     label6:
        $r9 = specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)>(r1);

        return $r9;
    }

    public com.google.gxp.compiler.base.Expression visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)
    {
        com.google.gxp.compiler.base.Expression $r6;
        com.google.gxp.compiler.base.AbbrExpression r1;
        java.util.Deque $r2, $r4, $r7;
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.alerts.AlertSink $r9;
        com.google.gxp.compiler.validate.ConflictingVarNameError $r8;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.AbbrExpression;

        $r2 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: java.util.Deque varNames>;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: java.lang.String getName()>();

        $z0 = interfaceinvoke $r2.<java.util.Deque: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r9 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r8 = new com.google.gxp.compiler.validate.ConflictingVarNameError;

        specialinvoke $r8.<com.google.gxp.compiler.validate.ConflictingVarNameError: void <init>(com.google.gxp.compiler.base.AbbrExpression)>(r1);

        interfaceinvoke $r9.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r8);

     label1:
        $r4 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: java.util.Deque varNames>;

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: java.lang.String getName()>();

        interfaceinvoke $r4.<java.util.Deque: void push(java.lang.Object)>($r5);

        $r6 = specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.base.Expression visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)>(r1);

        $r7 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: java.util.Deque varNames>;

        interfaceinvoke $r7.<java.util.Deque: java.lang.Object pop()>();

        return $r6;
    }

    private void validateAttributeBundles(com.google.gxp.compiler.base.Node, java.util.List, java.util.Map, java.util.Set)
    {
        com.google.gxp.compiler.alerts.common.MissingAttributeError $r12;
        com.google.gxp.compiler.validate.InvalidAttrBundleError $r20;
        com.google.gxp.compiler.base.Parameter $r19;
        java.util.Map r3, $r25;
        com.google.gxp.compiler.base.BundleType $r24;
        com.google.gxp.compiler.alerts.common.UnknownAttributeError $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Set $r4, $r26, r41;
        com.google.gxp.compiler.base.Type $r22, $r23;
        com.google.gxp.compiler.validate.MismatchedAttributeValidatorsError $r36;
        java.util.List r1;
        com.google.gxp.compiler.schema.AttributeValidator$Flag $r8;
        java.util.HashSet $r0;
        com.google.gxp.compiler.alerts.AlertSink $r14, $r21, $r37, $r44, $r48;
        com.google.gxp.compiler.base.Node r13;
        java.lang.String $r16, $r39, $r40, $r46, $r50, r51;
        com.google.gxp.compiler.base.Template $r18;
        java.util.Map$Entry r29, r52;
        com.google.gxp.compiler.validate.DuplicateAttributeError $r47;
        java.util.Iterator $r2, $r5, $r27;
        com.google.gxp.compiler.validate.Validator$Visitor r11;
        com.google.gxp.compiler.schema.AttributeValidator $r9, r32, $r34;
        java.lang.Object $r6, $r7, $r10, $r15, $r17, $r28, $r30, $r31, $r33, $r35, $r38, $r42, $r45, $r49;

        r11 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r13 := @parameter0: com.google.gxp.compiler.base.Node;

        r1 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Map;

        r41 := @parameter3: java.util.Set;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z7 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label10;

        $r17 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.lang.String) $r17;

        $r18 = r11.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Template template>;

        $r19 = virtualinvoke $r18.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.base.Parameter getParameterByPrimary(java.lang.String)>(r51);

        if $r19 == null goto label02;

        $r22 = virtualinvoke $r19.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Type getType()>();

        $z3 = $r22 instanceof com.google.gxp.compiler.base.BundleType;

        if $z3 != 0 goto label03;

     label02:
        $r21 = r11.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r20 = new com.google.gxp.compiler.validate.InvalidAttrBundleError;

        specialinvoke $r20.<com.google.gxp.compiler.validate.InvalidAttrBundleError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r13, r51);

        interfaceinvoke $r21.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r20);

        goto label01;

     label03:
        $r23 = virtualinvoke $r19.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Type getType()>();

        $r24 = (com.google.gxp.compiler.base.BundleType) $r23;

        $r25 = virtualinvoke $r24.<com.google.gxp.compiler.base.BundleType: java.util.Map getAttrMap()>();

        $r26 = interfaceinvoke $r25.<java.util.Map: java.util.Set entrySet()>();

        $r27 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r28;

        $r30 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r30);

        r32 = (com.google.gxp.compiler.schema.AttributeValidator) $r31;

        if r32 != null goto label06;

        $r42 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z6 = interfaceinvoke r41.<java.util.Set: boolean contains(java.lang.Object)>($r42);

        if $z6 == 0 goto label05;

        $r48 = r11.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r47 = new com.google.gxp.compiler.validate.DuplicateAttributeError;

        $r49 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r50 = (java.lang.String) $r49;

        specialinvoke $r47.<com.google.gxp.compiler.validate.DuplicateAttributeError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String,java.lang.String)>(r13, r51, $r50);

        interfaceinvoke $r48.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r47);

        goto label08;

     label05:
        $r44 = r11.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r43 = new com.google.gxp.compiler.alerts.common.UnknownAttributeError;

        $r45 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r46 = (java.lang.String) $r45;

        specialinvoke $r43.<com.google.gxp.compiler.alerts.common.UnknownAttributeError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r13, $r46);

        interfaceinvoke $r44.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r43);

        goto label08;

     label06:
        $r33 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r34 = (com.google.gxp.compiler.schema.AttributeValidator) $r33;

        $z5 = virtualinvoke r32.<com.google.gxp.compiler.schema.AttributeValidator: boolean equals(com.google.gxp.compiler.schema.AttributeValidator)>($r34);

        if $z5 != 0 goto label07;

        $r37 = r11.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r36 = new com.google.gxp.compiler.validate.MismatchedAttributeValidatorsError;

        $r38 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r39 = (java.lang.String) $r38;

        $r40 = virtualinvoke $r19.<com.google.gxp.compiler.base.Parameter: java.lang.String getPrimaryName()>();

        specialinvoke $r36.<com.google.gxp.compiler.validate.MismatchedAttributeValidatorsError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String,java.lang.String)>(r13, $r39, $r40);

        interfaceinvoke $r37.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r36);

        goto label08;

     label07:
        $r35 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r35);

     label08:
        goto label04;

     label09:
        goto label01;

     label10:
        $r4 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r52 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r52.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (com.google.gxp.compiler.schema.AttributeValidator) $r7;

        $r8 = <com.google.gxp.compiler.schema.AttributeValidator$Flag: com.google.gxp.compiler.schema.AttributeValidator$Flag REQUIRED>;

        $z1 = virtualinvoke $r9.<com.google.gxp.compiler.schema.AttributeValidator: boolean isFlagSet(com.google.gxp.compiler.schema.AttributeValidator$Flag)>($r8);

        if $z1 == 0 goto label12;

        $r10 = interfaceinvoke r52.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z2 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z2 != 0 goto label12;

        $r14 = r11.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r12 = new com.google.gxp.compiler.alerts.common.MissingAttributeError;

        $r15 = interfaceinvoke r52.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r15;

        specialinvoke $r12.<com.google.gxp.compiler.alerts.common.MissingAttributeError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r13, $r16);

        interfaceinvoke $r14.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r12);

     label12:
        goto label11;

     label13:
        return;
    }

    public com.google.gxp.compiler.base.Expression visitOutputElement(com.google.gxp.compiler.base.OutputElement)
    {
        com.google.gxp.compiler.base.Expression $r11, $r18;
        com.google.gxp.compiler.schema.AttributeValidator$Flag $r19;
        java.util.HashMap $r3;
        java.lang.AssertionError $r12;
        com.google.gxp.compiler.schema.ElementValidator $r1;
        com.google.gxp.compiler.alerts.AlertSink $r21;
        java.util.Map $r2;
        java.lang.String $r15;
        boolean $z0, $z1;
        com.google.gxp.compiler.base.Template $r9;
        java.util.Iterator $r7;
        java.util.Set $r4;
        com.google.gxp.compiler.reparent.Attribute r14;
        com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError $r20;
        com.google.gxp.com.google.common.collect.ImmutableSet $r5;
        com.google.gxp.compiler.validate.Validator$Visitor r8;
        java.util.List $r6, $r10;
        com.google.gxp.compiler.base.OutputElement r0;
        com.google.gxp.compiler.schema.AttributeValidator r17;
        java.lang.Object $r13, $r16;

        r8 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.OutputElement;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.ElementValidator getValidator()>();

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.schema.ElementValidator: java.util.Map getAttributeValidatorMap()>();

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r4);

        $r6 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: java.util.List getAttributes()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.google.gxp.compiler.reparent.Attribute) $r13;

        $r15 = virtualinvoke r14.<com.google.gxp.compiler.reparent.Attribute: java.lang.String getName()>();

        $r16 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r15);

        r17 = (com.google.gxp.compiler.schema.AttributeValidator) $r16;

        $r18 = virtualinvoke r14.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getCondition()>();

        if $r18 == null goto label2;

        $r19 = <com.google.gxp.compiler.schema.AttributeValidator$Flag: com.google.gxp.compiler.schema.AttributeValidator$Flag REQUIRED>;

        $z1 = virtualinvoke r17.<com.google.gxp.compiler.schema.AttributeValidator: boolean isFlagSet(com.google.gxp.compiler.schema.AttributeValidator$Flag)>($r19);

        if $z1 == 0 goto label2;

        $r21 = r8.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r20 = new com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError;

        specialinvoke $r20.<com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute)>(r0, r14);

        interfaceinvoke $r21.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r20);

     label2:
        goto label1;

     label3:
        $r9 = r8.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Template template>;

        if $r9 != null goto label4;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>("found output element without a template");

        throw $r12;

     label4:
        $r10 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: java.util.List getAttrBundles()>();

        specialinvoke r8.<com.google.gxp.compiler.validate.Validator$Visitor: void validateAttributeBundles(com.google.gxp.compiler.base.Node,java.util.List,java.util.Map,java.util.Set)>(r0, $r10, $r3, $r5);

        $r11 = specialinvoke r8.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.base.Expression visitOutputElement(com.google.gxp.compiler.base.OutputElement)>(r0);

        return $r11;
    }

    public com.google.gxp.compiler.base.Expression visitCall(com.google.gxp.compiler.base.Call)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r1;
        com.google.gxp.compiler.base.Expression $r3;
        java.lang.Object $r2;
        com.google.gxp.compiler.base.Call r0;

        r1 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.Call;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.Call: java.lang.Object acceptCallVisitor(com.google.gxp.compiler.base.CallVisitor)>(r1);

        $r3 = (com.google.gxp.compiler.base.Expression) $r2;

        return $r3;
    }

    public com.google.gxp.compiler.base.Call visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r1;
        com.google.gxp.compiler.base.ValidatedCall r0;
        com.google.gxp.compiler.base.Call $r2;

        r1 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.ValidatedCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.ValidatedCall: com.google.gxp.compiler.base.Call transformParams(com.google.gxp.compiler.base.ExhaustiveExpressionVisitor)>(r1);

        return $r2;
    }

    public com.google.gxp.compiler.base.Call visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r2;
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.base.UnboundCall r1;

        r2 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnboundCall;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public com.google.gxp.compiler.base.Call visitBoundCall(com.google.gxp.compiler.base.BoundCall)
    {
        com.google.gxp.compiler.alerts.common.MissingAttributeError $r25;
        java.util.Map $r8, $r19, $r36, $r57;
        com.google.gxp.compiler.base.BundleType r59;
        com.google.gxp.compiler.base.Callable $r1;
        java.util.Set $r6, $r9, $r37;
        com.google.gxp.compiler.base.Type $r55, $r56;
        com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError $r23, $r50;
        com.google.gxp.compiler.base.ValidatedCall $r16;
        com.google.gxp.compiler.base.Expression $r22, $r31, $r46;
        com.google.gxp.com.google.common.collect.ImmutableMap$Builder $r2;
        java.lang.String $r18, $r20, $r27, $r43;
        java.util.Map$Entry r40, r60;
        com.google.gxp.compiler.reparent.Attribute $r30, $r34, $r35, $r45, $r53, r63;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.google.gxp.compiler.base.FormalParameter r58, r62;
        com.google.gxp.com.google.common.collect.ImmutableSet $r7;
        com.google.gxp.compiler.base.AttrBundleParam r61;
        java.util.List $r4, $r12, $r14;
        com.google.gxp.com.google.common.collect.ImmutableMap $r13;
        com.google.gxp.compiler.schema.AttributeValidator$Flag $r48;
        java.util.HashMap $r3;
        com.google.gxp.compiler.alerts.AlertSink $r24, $r26, $r51;
        com.google.gxp.compiler.base.BoundCall r0;
        java.util.Iterator $r5, $r10, $r15, $r38;
        com.google.gxp.compiler.validate.Validator$Visitor r11;
        com.google.gxp.compiler.schema.AttributeValidator $r42, $r49;
        java.lang.Object $r17, $r21, $r28, $r29, $r32, $r33, $r39, $r41, $r44, $r47, $r52, $r54;

        r11 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.BoundCall;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.BoundCall: com.google.gxp.compiler.base.Callable getCallee()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMap: com.google.gxp.com.google.common.collect.ImmutableMap$Builder builder()>();

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        $r4 = interfaceinvoke $r1.<com.google.gxp.compiler.base.Callable: java.util.List getParameters()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r54 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r58 = (com.google.gxp.compiler.base.FormalParameter) $r54;

        $r55 = virtualinvoke r58.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        $z8 = $r55 instanceof com.google.gxp.compiler.base.BundleType;

        if $z8 == 0 goto label02;

        $r56 = virtualinvoke r58.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        r59 = (com.google.gxp.compiler.base.BundleType) $r56;

        $r57 = virtualinvoke r59.<com.google.gxp.compiler.base.BundleType: java.util.Map getAttrMap()>();

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>($r57);

     label02:
        goto label01;

     label03:
        $r6 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r7 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r6);

        $r8 = virtualinvoke r0.<com.google.gxp.compiler.base.BoundCall: java.util.Map getAttributes()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r28 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r60 = (java.util.Map$Entry) $r28;

        $r29 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r30 = (com.google.gxp.compiler.reparent.Attribute) $r29;

        $r31 = virtualinvoke $r30.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $z5 = $r31 instanceof com.google.gxp.compiler.base.AttrBundleParam;

        if $z5 == 0 goto label07;

        r61 = (com.google.gxp.compiler.base.AttrBundleParam) $r31;

        $r36 = virtualinvoke r61.<com.google.gxp.compiler.base.AttrBundleParam: java.util.Map getAttrs()>();

        $r37 = interfaceinvoke $r36.<java.util.Map: java.util.Set entrySet()>();

        $r38 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z6 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label07;

        $r39 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        r40 = (java.util.Map$Entry) $r39;

        $r41 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r42 = (com.google.gxp.compiler.schema.AttributeValidator) $r41;

        $r43 = virtualinvoke $r42.<com.google.gxp.compiler.schema.AttributeValidator: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r43);

        $r44 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r45 = (com.google.gxp.compiler.reparent.Attribute) $r44;

        $r46 = virtualinvoke $r45.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getCondition()>();

        if $r46 == null goto label06;

        $r47 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r49 = (com.google.gxp.compiler.schema.AttributeValidator) $r47;

        $r48 = <com.google.gxp.compiler.schema.AttributeValidator$Flag: com.google.gxp.compiler.schema.AttributeValidator$Flag REQUIRED>;

        $z7 = virtualinvoke $r49.<com.google.gxp.compiler.schema.AttributeValidator: boolean isFlagSet(com.google.gxp.compiler.schema.AttributeValidator$Flag)>($r48);

        if $z7 == 0 goto label06;

        $r51 = r11.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r50 = new com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError;

        $r52 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r53 = (com.google.gxp.compiler.reparent.Attribute) $r52;

        specialinvoke $r50.<com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute)>(r0, $r53);

        interfaceinvoke $r51.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r50);

     label06:
        goto label05;

     label07:
        $r32 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r33 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r34 = (com.google.gxp.compiler.reparent.Attribute) $r33;

        $r35 = virtualinvoke r11.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.reparent.Attribute visitAttribute(com.google.gxp.compiler.reparent.Attribute)>($r34);

        virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r32, $r35);

        goto label04;

     label08:
        $r12 = virtualinvoke r0.<com.google.gxp.compiler.base.BoundCall: java.util.List getAttrBundles()>();

        specialinvoke r11.<com.google.gxp.compiler.validate.Validator$Visitor: void validateAttributeBundles(com.google.gxp.compiler.base.Node,java.util.List,java.util.Map,java.util.Set)>(r0, $r12, $r3, $r7);

        $r13 = virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap build()>();

        $r14 = interfaceinvoke $r1.<com.google.gxp.compiler.base.Callable: java.util.List getParameters()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r17 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r62 = (com.google.gxp.compiler.base.FormalParameter) $r17;

        $z3 = virtualinvoke r62.<com.google.gxp.compiler.base.FormalParameter: boolean hasDefault()>();

        if $z3 != 0 goto label11;

        $r18 = virtualinvoke r62.<com.google.gxp.compiler.base.FormalParameter: java.lang.String getPrimaryName()>();

        $z4 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r18);

        if $z4 != 0 goto label10;

        $r26 = r11.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r25 = new com.google.gxp.compiler.alerts.common.MissingAttributeError;

        $r27 = virtualinvoke r62.<com.google.gxp.compiler.base.FormalParameter: java.lang.String getPrimaryName()>();

        specialinvoke $r25.<com.google.gxp.compiler.alerts.common.MissingAttributeError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r0, $r27);

        interfaceinvoke $r26.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r25);

        goto label11;

     label10:
        $r19 = virtualinvoke r0.<com.google.gxp.compiler.base.BoundCall: java.util.Map getAttributes()>();

        $r20 = virtualinvoke r62.<com.google.gxp.compiler.base.FormalParameter: java.lang.String getPrimaryName()>();

        $r21 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r20);

        r63 = (com.google.gxp.compiler.reparent.Attribute) $r21;

        if r63 == null goto label11;

        $r22 = virtualinvoke r63.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getCondition()>();

        if $r22 == null goto label11;

        $r24 = r11.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r23 = new com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError;

        specialinvoke $r23.<com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute)>(r0, r63);

        interfaceinvoke $r24.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r23);

     label11:
        goto label09;

     label12:
        $r16 = new com.google.gxp.compiler.base.ValidatedCall;

        specialinvoke $r16.<com.google.gxp.compiler.base.ValidatedCall: void <init>(com.google.gxp.compiler.base.Call,com.google.gxp.compiler.base.Callable,java.util.Map)>(r0, $r1, $r13);

        return $r16;
    }

    public com.google.gxp.compiler.base.Expression visitObjectConstant(com.google.gxp.compiler.base.ObjectConstant)
    {
        com.google.gxp.compiler.base.ObjectConstant r0;
        com.google.gxp.compiler.validate.Validator$Visitor r3;
        com.google.gxp.compiler.base.UnexpectedNodeException $r2;
        com.google.gxp.compiler.base.Type $r1;

        r3 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.ObjectConstant;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.ObjectConstant: com.google.gxp.compiler.base.Type getType()>();

        if $r1 != null goto label1;

        $r2 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r2.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r0);

        throw $r2;

     label1:
        return r0;
    }

    public java.lang.Void visitUnboundImplementsDeclaration(com.google.gxp.compiler.base.UnboundImplementsDeclaration)
    {
        com.google.gxp.compiler.base.UnboundImplementsDeclaration r1;
        com.google.gxp.compiler.validate.Validator$Visitor r2;
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;

        r2 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnboundImplementsDeclaration;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public java.lang.Void visitBoundImplementsDeclaration(com.google.gxp.compiler.base.BoundImplementsDeclaration)
    {
        com.google.gxp.compiler.base.Implementable $r4, $r6;
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r43;
        com.google.gxp.compiler.schema.Schema $r2, $r5;
        com.google.gxp.compiler.base.Parameter r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.google.gxp.compiler.base.BoundImplementsDeclaration r3;
        com.google.gxp.compiler.validate.SchemaMismatchError $r40;
        com.google.gxp.compiler.validate.ParamTypeMismatchError $r31;
        com.google.gxp.compiler.base.Type $r23, $r24;
        com.google.gxp.compiler.base.FormalParameter r16;
        java.util.List $r8, $r9, $r10, $r13, $r37, $r39;
        com.google.gxp.compiler.validate.ParamConstructorMismatchError $r26;
        com.google.gxp.compiler.base.Expression $r25, $r28;
        com.google.gxp.compiler.validate.ParamDefaultMismatchError $r29;
        com.google.gxp.compiler.alerts.AlertSink $r27, $r30, $r32, $r34, $r36, $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r17, $r18, $r21, $r22, $r44;
        com.google.gxp.compiler.validate.ParamNameMismatchError $r33;
        com.google.gxp.compiler.base.Template $r1, $r7, $r12, $r38, $r41;
        java.util.Iterator $r11, $r14;
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.validate.NumParamsMismatchError $r35;
        java.lang.Object $r15, $r19;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r3 := @parameter0: com.google.gxp.compiler.base.BoundImplementsDeclaration;

        $r1 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Template template>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r4 = virtualinvoke r3.<com.google.gxp.compiler.base.BoundImplementsDeclaration: com.google.gxp.compiler.base.Implementable getImplementable()>();

        $r5 = interfaceinvoke $r4.<com.google.gxp.compiler.base.Implementable: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z0 = virtualinvoke $r2.<com.google.gxp.compiler.schema.Schema: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r42 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r40 = new com.google.gxp.compiler.validate.SchemaMismatchError;

        $r41 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Template template>;

        $r43 = virtualinvoke $r41.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.base.TemplateName$FullyQualified getName()>();

        $r44 = virtualinvoke $r43.<com.google.gxp.compiler.base.TemplateName$FullyQualified: java.lang.String toString()>();

        specialinvoke $r40.<com.google.gxp.compiler.validate.SchemaMismatchError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r3, $r44);

        interfaceinvoke $r42.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r40);

     label1:
        $r6 = virtualinvoke r3.<com.google.gxp.compiler.base.BoundImplementsDeclaration: com.google.gxp.compiler.base.Implementable getImplementable()>();

        $r7 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Template template>;

        $r8 = virtualinvoke $r7.<com.google.gxp.compiler.base.Template: java.util.List getParameters()>();

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r9 = interfaceinvoke $r6.<com.google.gxp.compiler.base.Implementable: java.util.List getParameters()>();

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if $i0 == $i2 goto label2;

        $r36 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r35 = new com.google.gxp.compiler.validate.NumParamsMismatchError;

        $r37 = interfaceinvoke $r6.<com.google.gxp.compiler.base.Implementable: java.util.List getParameters()>();

        $i3 = interfaceinvoke $r37.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        $r38 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Template template>;

        $r39 = virtualinvoke $r38.<com.google.gxp.compiler.base.Template: java.util.List getParameters()>();

        $i5 = interfaceinvoke $r39.<java.util.List: int size()>();

        specialinvoke $r35.<com.google.gxp.compiler.validate.NumParamsMismatchError: void <init>(com.google.gxp.compiler.base.Node,int,int)>(r3, $i4, $i5);

        interfaceinvoke $r36.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r35);

        goto label8;

     label2:
        $r10 = interfaceinvoke $r6.<com.google.gxp.compiler.base.Implementable: java.util.List getParameters()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

        $r12 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Template template>;

        $r13 = virtualinvoke $r12.<com.google.gxp.compiler.base.Template: java.util.List getParameters()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label8;

        $r15 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r16 = (com.google.gxp.compiler.base.FormalParameter) $r15;

        $r17 = "this";

        $r18 = virtualinvoke r16.<com.google.gxp.compiler.base.FormalParameter: java.lang.String getPrimaryName()>();

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z1 != 0 goto label7;

        $r19 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.google.gxp.compiler.base.Parameter) $r19;

        $r21 = virtualinvoke r16.<com.google.gxp.compiler.base.FormalParameter: java.lang.String getPrimaryName()>();

        $r22 = virtualinvoke r20.<com.google.gxp.compiler.base.Parameter: java.lang.String getPrimaryName()>();

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z2 != 0 goto label4;

        $r34 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r33 = new com.google.gxp.compiler.validate.ParamNameMismatchError;

        specialinvoke $r33.<com.google.gxp.compiler.validate.ParamNameMismatchError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.FormalParameter,com.google.gxp.compiler.base.Parameter)>(r3, r16, r20);

        interfaceinvoke $r34.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r33);

        goto label3;

     label4:
        $r23 = virtualinvoke r16.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        $r24 = virtualinvoke r20.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Type getType()>();

        $z3 = virtualinvoke $r23.<com.google.gxp.compiler.base.Type: boolean matches(com.google.gxp.compiler.base.Type)>($r24);

        if $z3 != 0 goto label5;

        $r32 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r31 = new com.google.gxp.compiler.validate.ParamTypeMismatchError;

        specialinvoke $r31.<com.google.gxp.compiler.validate.ParamTypeMismatchError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.FormalParameter,com.google.gxp.compiler.base.Parameter)>(r3, r16, r20);

        interfaceinvoke $r32.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r31);

        goto label3;

     label5:
        $z4 = virtualinvoke r16.<com.google.gxp.compiler.base.FormalParameter: boolean hasDefault()>();

        if $z4 == 0 goto label6;

        $r28 = virtualinvoke r20.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Expression getDefaultValue()>();

        if $r28 != null goto label6;

        $r30 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r29 = new com.google.gxp.compiler.validate.ParamDefaultMismatchError;

        specialinvoke $r29.<com.google.gxp.compiler.validate.ParamDefaultMismatchError: void <init>(com.google.gxp.compiler.base.Parameter)>(r20);

        interfaceinvoke $r30.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r29);

     label6:
        $z6 = virtualinvoke r16.<com.google.gxp.compiler.base.FormalParameter: boolean hasConstructor()>();

        if $z6 == 0 goto label7;

        $r25 = virtualinvoke r20.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Expression getConstructor()>();

        if $r25 != null goto label7;

        $r27 = r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r26 = new com.google.gxp.compiler.validate.ParamConstructorMismatchError;

        specialinvoke $r26.<com.google.gxp.compiler.validate.ParamConstructorMismatchError: void <init>(com.google.gxp.compiler.base.Parameter)>(r20);

        interfaceinvoke $r27.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r26);

     label7:
        goto label3;

     label8:
        return null;
    }

    public java.lang.Void visitNativeImplementsDeclaration(com.google.gxp.compiler.base.NativeImplementsDeclaration)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.NativeImplementsDeclaration r1;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.NativeImplementsDeclaration;

        return null;
    }

    public volatile java.lang.Object visitTemplate(com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.Template r1, $r2;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Template;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitInterface(com.google.gxp.compiler.base.Interface)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.Interface r1, $r2;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Interface;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Interface visitInterface(com.google.gxp.compiler.base.Interface)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitOutputElement(com.google.gxp.compiler.base.OutputElement)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.OutputElement r1;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.OutputElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Expression visitOutputElement(com.google.gxp.compiler.base.OutputElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitObjectConstant(com.google.gxp.compiler.base.ObjectConstant)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.ObjectConstant r1;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ObjectConstant;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Expression visitObjectConstant(com.google.gxp.compiler.base.ObjectConstant)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCall(com.google.gxp.compiler.base.Call)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.Call r1;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Call;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Expression visitCall(com.google.gxp.compiler.base.Call)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.AbbrExpression r1;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.AbbrExpression;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Expression visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.ValidatedCall r1;
        com.google.gxp.compiler.base.Call $r2;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ValidatedCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Call visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitBoundCall(com.google.gxp.compiler.base.BoundCall)
    {
        com.google.gxp.compiler.base.BoundCall r1;
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.Call $r2;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.BoundCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Call visitBoundCall(com.google.gxp.compiler.base.BoundCall)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.UnboundCall r1;
        com.google.gxp.compiler.base.Call $r2;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnboundCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: com.google.gxp.compiler.base.Call visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitNativeImplementsDeclaration(com.google.gxp.compiler.base.NativeImplementsDeclaration)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        java.lang.Void $r2;
        com.google.gxp.compiler.base.NativeImplementsDeclaration r1;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.NativeImplementsDeclaration;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: java.lang.Void visitNativeImplementsDeclaration(com.google.gxp.compiler.base.NativeImplementsDeclaration)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitBoundImplementsDeclaration(com.google.gxp.compiler.base.BoundImplementsDeclaration)
    {
        com.google.gxp.compiler.base.BoundImplementsDeclaration r1;
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        java.lang.Void $r2;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.BoundImplementsDeclaration;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: java.lang.Void visitBoundImplementsDeclaration(com.google.gxp.compiler.base.BoundImplementsDeclaration)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitUnboundImplementsDeclaration(com.google.gxp.compiler.base.UnboundImplementsDeclaration)
    {
        com.google.gxp.compiler.validate.Validator$Visitor r0;
        com.google.gxp.compiler.base.UnboundImplementsDeclaration r1;
        java.lang.Void $r2;

        r0 := @this: com.google.gxp.compiler.validate.Validator$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnboundImplementsDeclaration;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.validate.Validator$Visitor: java.lang.Void visitUnboundImplementsDeclaration(com.google.gxp.compiler.base.UnboundImplementsDeclaration)>(r1);

        return $r2;
    }
}
