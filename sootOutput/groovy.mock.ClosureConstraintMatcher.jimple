public class groovy.mock.ClosureConstraintMatcher extends java.lang.Object implements com.mockobjects.constraint.Constraint
{
    private final groovy.lang.Closure closure;
    private java.lang.String message;

    public void <init>(groovy.lang.Closure)
    {
        groovy.mock.ClosureConstraintMatcher r0;
        groovy.lang.Closure r1;

        r0 := @this: groovy.mock.ClosureConstraintMatcher;

        r1 := @parameter0: groovy.lang.Closure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovy.mock.ClosureConstraintMatcher: java.lang.String message> = "closure";

        r0.<groovy.mock.ClosureConstraintMatcher: groovy.lang.Closure closure> = r1;

        return;
    }

    public boolean eval(java.lang.Object)
    {
        java.lang.Object[] $r2, $r3;
        groovy.mock.ClosureConstraintMatcher r0;
        groovy.lang.Closure $r4;
        java.lang.Object r1;
        java.lang.AssertionError $r5;
        java.lang.String $r6;

        r0 := @this: groovy.mock.ClosureConstraintMatcher;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r4 = r0.<groovy.mock.ClosureConstraintMatcher: groovy.lang.Closure closure>;

        $r2 = (java.lang.Object[]) r1;

        $r3 = (java.lang.Object[]) $r2;

        virtualinvoke $r4.<groovy.lang.Closure: java.lang.Object call(java.lang.Object[])>($r3);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<java.lang.AssertionError: java.lang.String getMessage()>();

        r0.<groovy.mock.ClosureConstraintMatcher: java.lang.String message> = $r6;

        return 0;

        catch java.lang.AssertionError from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        groovy.mock.ClosureConstraintMatcher r0;
        java.lang.String $r1;

        r0 := @this: groovy.mock.ClosureConstraintMatcher;

        $r1 = r0.<groovy.mock.ClosureConstraintMatcher: java.lang.String message>;

        return $r1;
    }
}
