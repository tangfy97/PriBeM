public class org.bouncycastle.crypto.tls.Certificate extends java.lang.Object
{
    protected org.bouncycastle.asn1.x509.X509CertificateStructure[] certs;

    protected static org.bouncycastle.crypto.tls.Certificate parse(java.io.InputStream) throws java.io.IOException
    {
        byte[] r6;
        org.bouncycastle.asn1.DERObject $r9;
        org.bouncycastle.asn1.ASN1InputStream $r8;
        java.util.Vector $r1;
        java.io.ByteArrayInputStream $r7;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        org.bouncycastle.asn1.x509.X509CertificateStructure[] r2;
        java.lang.IllegalArgumentException $r11;
        org.bouncycastle.crypto.tls.Certificate $r3;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r5, $r10;
        java.lang.Object $r4;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        i5 = staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: int readUint24(java.io.InputStream)>(r0);

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

     label1:
        if i5 <= 0 goto label3;

        $i2 = staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: int readUint24(java.io.InputStream)>(r0);

        $i3 = 3 + $i2;

        i5 = i5 - $i3;

        r6 = newarray (byte)[$i2];

        staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: void readFully(byte[],java.io.InputStream)>(r6, r0);

        $r7 = new java.io.ByteArrayInputStream;

        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>(r6);

        $r8 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r8.<org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>($r7);

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r10 = staticinvoke <org.bouncycastle.asn1.x509.X509CertificateStructure: org.bouncycastle.asn1.x509.X509CertificateStructure getInstance(java.lang.Object)>($r9);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r10);

        $i4 = virtualinvoke $r7.<java.io.ByteArrayInputStream: int available()>();

        if $i4 <= 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sorry, there is garbage data left after the certificate");

        throw $r11;

     label2:
        goto label1;

     label3:
        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        r2 = newarray (org.bouncycastle.asn1.x509.X509CertificateStructure)[$i0];

        i6 = 0;

     label4:
        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if i6 >= $i1 goto label5;

        $r4 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i6);

        $r5 = (org.bouncycastle.asn1.x509.X509CertificateStructure) $r4;

        r2[i6] = $r5;

        i6 = i6 + 1;

        goto label4;

     label5:
        $r3 = new org.bouncycastle.crypto.tls.Certificate;

        specialinvoke $r3.<org.bouncycastle.crypto.tls.Certificate: void <init>(org.bouncycastle.asn1.x509.X509CertificateStructure[])>(r2);

        return $r3;
    }

    private void <init>(org.bouncycastle.asn1.x509.X509CertificateStructure[])
    {
        org.bouncycastle.crypto.tls.Certificate r0;
        org.bouncycastle.asn1.x509.X509CertificateStructure[] r1;

        r0 := @this: org.bouncycastle.crypto.tls.Certificate;

        r1 := @parameter0: org.bouncycastle.asn1.x509.X509CertificateStructure[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.tls.Certificate: org.bouncycastle.asn1.x509.X509CertificateStructure[] certs> = r1;

        return;
    }

    public org.bouncycastle.asn1.x509.X509CertificateStructure[] getCerts()
    {
        org.bouncycastle.crypto.tls.Certificate r0;
        org.bouncycastle.asn1.x509.X509CertificateStructure[] $r1, r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: org.bouncycastle.crypto.tls.Certificate;

        $r1 = r0.<org.bouncycastle.crypto.tls.Certificate: org.bouncycastle.asn1.x509.X509CertificateStructure[] certs>;

        $i0 = lengthof $r1;

        r2 = newarray (org.bouncycastle.asn1.x509.X509CertificateStructure)[$i0];

        $r4 = r0.<org.bouncycastle.crypto.tls.Certificate: org.bouncycastle.asn1.x509.X509CertificateStructure[] certs>;

        $r3 = r0.<org.bouncycastle.crypto.tls.Certificate: org.bouncycastle.asn1.x509.X509CertificateStructure[] certs>;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i1);

        return r2;
    }
}
