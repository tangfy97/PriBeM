public class org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver extends java.lang.Object implements org.springframework.context.'annotation'.ScopeMetadataResolver
{
    private final java.util.Map scopeMap;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver r0;

        r0 := @this: org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver: java.util.Map scopeMap> = $r1;

        virtualinvoke r0.<org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver: void registerScope(java.lang.String,java.lang.String)>("javax.inject.Singleton", "singleton");

        return;
    }

    public final void registerScope(java.lang.Class, java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Class r1;
        java.lang.String $r3, r4;
        org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver r0;

        r0 := @this: org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.String;

        $r2 = r0.<org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver: java.util.Map scopeMap>;

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r4);

        return;
    }

    public final void registerScope(java.lang.String, java.lang.String)
    {
        java.util.Map $r3;
        java.lang.String r1, r2;
        org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver r0;

        r0 := @this: org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver: java.util.Map scopeMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    protected java.lang.String resolveScopeName(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;
        org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver r0;

        r0 := @this: org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver: java.util.Map scopeMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public org.springframework.context.'annotation'.ScopeMetadata resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)
    {
        java.lang.IllegalStateException $r12, $r16;
        org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition r2;
        org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver r10;
        org.springframework.context.'annotation'.ScopeMetadata $r0;
        org.springframework.beans.factory.config.BeanDefinition r1;
        java.lang.String r7, $r11, $r15, $r18, $r24, r25;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r5;
        org.springframework.core.type.AnnotationMetadata $r3, $r8;
        java.util.Set $r4, $r9;
        java.lang.Object $r6;
        java.lang.StringBuilder $r13, $r14, $r17, $r19, $r20, $r21, $r22, $r23;

        r10 := @this: org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver;

        r1 := @parameter0: org.springframework.beans.factory.config.BeanDefinition;

        $r0 = new org.springframework.context.'annotation'.ScopeMetadata;

        specialinvoke $r0.<org.springframework.context.'annotation'.ScopeMetadata: void <init>()>();

        virtualinvoke $r0.<org.springframework.context.'annotation'.ScopeMetadata: void setScopeName(java.lang.String)>("prototype");

        $z0 = r1 instanceof org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition;

        if $z0 == 0 goto label5;

        r2 = (org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition) r1;

        $r3 = interfaceinvoke r2.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        $r4 = interfaceinvoke $r3.<org.springframework.core.type.AnnotationMetadata: java.util.Set getAnnotationTypes()>();

        r25 = null;

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r2.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        $r9 = interfaceinvoke $r8.<org.springframework.core.type.AnnotationMetadata: java.util.Set getMetaAnnotationTypes(java.lang.String)>(r7);

        $z1 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>("javax.inject.Scope");

        if $z1 == 0 goto label4;

        if r25 == null goto label2;

        $r16 = new java.lang.IllegalStateException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found ambiguous scope annotations on bean class [");

        $r18 = interfaceinvoke r1.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r16;

     label2:
        r25 = r7;

        $r11 = virtualinvoke r10.<org.springframework.context.'annotation'.Jsr330ScopeMetadataResolver: java.lang.String resolveScopeName(java.lang.String)>(r7);

        if $r11 != null goto label3;

        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unsupported scope annotation - not mapped onto Spring scope name: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r12;

     label3:
        virtualinvoke $r0.<org.springframework.context.'annotation'.ScopeMetadata: void setScopeName(java.lang.String)>($r11);

     label4:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

     label5:
        return $r0;
    }
}
