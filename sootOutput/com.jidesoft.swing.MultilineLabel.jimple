public class com.jidesoft.swing.MultilineLabel extends javax.swing.JTextArea
{

    public void <init>()
    {
        com.jidesoft.swing.MultilineLabel r0;

        r0 := @this: com.jidesoft.swing.MultilineLabel;

        specialinvoke r0.<javax.swing.JTextArea: void <init>()>();

        specialinvoke r0.<com.jidesoft.swing.MultilineLabel: void initComponents()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        com.jidesoft.swing.MultilineLabel r0;
        java.lang.String r1;

        r0 := @this: com.jidesoft.swing.MultilineLabel;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.swing.JTextArea: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<com.jidesoft.swing.MultilineLabel: void initComponents()>();

        return;
    }

    private void initComponents()
    {
        com.jidesoft.swing.MultilineLabel r0;

        r0 := @this: com.jidesoft.swing.MultilineLabel;

        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void adjustUI()>();

        return;
    }

    public void updateUI()
    {
        com.jidesoft.swing.MultilineLabel r0;

        r0 := @this: com.jidesoft.swing.MultilineLabel;

        specialinvoke r0.<javax.swing.JTextArea: void updateUI()>();

        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void adjustUI()>();

        return;
    }

    protected void adjustUI()
    {
        java.awt.Color $r2, $r3;
        com.jidesoft.swing.MultilineLabel r0;
        java.awt.Font $r4, $r5;
        com.jidesoft.swing.MultilineLabel$1 $r1;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.MultilineLabel;

        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void setLineWrap(boolean)>(1);

        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void setWrapStyleWord(boolean)>(1);

        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void setEditable(boolean)>(0);

        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void setRequestFocusEnabled(boolean)>(0);

        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void setFocusable(boolean)>(0);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void setComponentTransparent(javax.swing.JComponent)>(r0);

        $r1 = new com.jidesoft.swing.MultilineLabel$1;

        specialinvoke $r1.<com.jidesoft.swing.MultilineLabel$1: void <init>(com.jidesoft.swing.MultilineLabel)>(r0);

        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void setCaret(javax.swing.text.Caret)>($r1);

        staticinvoke <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>(r0, "Label.border");

        $r2 = virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: java.awt.Color getForeground()>();

        if $r2 == null goto label1;

        $z1 = $r2 instanceof javax.swing.plaf.UIResource;

        if $z1 == 0 goto label2;

     label1:
        $r3 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Label.foreground");

        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void setForeground(java.awt.Color)>($r3);

     label2:
        $r5 = virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: java.awt.Font getFont()>();

        if $r5 == null goto label3;

        $z0 = $r5 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label4;

     label3:
        $r4 = staticinvoke <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>("Label.font");

        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void setFont(java.awt.Font)>($r4);

     label4:
        virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: void setBackground(java.awt.Color)>(null);

        return;
    }

    public java.awt.Dimension getMinimumSize()
    {
        com.jidesoft.swing.MultilineLabel r0;
        java.awt.Dimension $r1;

        r0 := @this: com.jidesoft.swing.MultilineLabel;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.MultilineLabel: java.awt.Dimension getPreferredSize()>();

        return $r1;
    }
}
