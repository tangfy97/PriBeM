public final class org.sat4j.core.Vec extends java.lang.Object implements org.sat4j.specs.IVec
{
    private static final long serialVersionUID;
    private int nbelem;
    private java.lang.Object[] myarray;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.sat4j.core.Vec r0;

        r0 := @this: org.sat4j.core.Vec;

        specialinvoke r0.<org.sat4j.core.Vec: void <init>(int)>(5);

        return;
    }

    public void <init>(java.lang.Object[])
    {
        int $i0;
        org.sat4j.core.Vec r0;
        java.lang.Object[] r1;

        r0 := @this: org.sat4j.core.Vec;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.sat4j.core.Vec: java.lang.Object[] myarray> = r1;

        $i0 = lengthof r1;

        r0.<org.sat4j.core.Vec: int nbelem> = $i0;

        return;
    }

    public void <init>(int)
    {
        java.lang.Object[] $r1, $r2;
        int i0;
        org.sat4j.core.Vec r0;

        r0 := @this: org.sat4j.core.Vec;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Object)[i0];

        $r2 = (java.lang.Object[]) $r1;

        r0.<org.sat4j.core.Vec: java.lang.Object[] myarray> = $r2;

        return;
    }

    public void <init>(int, java.lang.Object)
    {
        java.lang.Object[] $r1, $r2, $r4;
        int i0, i1;
        org.sat4j.core.Vec r0;
        java.lang.Object r3;

        r0 := @this: org.sat4j.core.Vec;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Object)[i0];

        $r2 = (java.lang.Object[]) $r1;

        r0.<org.sat4j.core.Vec: java.lang.Object[] myarray> = $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r4[i1] = r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<org.sat4j.core.Vec: int nbelem> = i0;

        return;
    }

    public int size()
    {
        int $i0;
        org.sat4j.core.Vec r0;

        r0 := @this: org.sat4j.core.Vec;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        return $i0;
    }

    public void shrink(int)
    {
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, i3, $i5;
        org.sat4j.core.Vec r0;

        r0 := @this: org.sat4j.core.Vec;

        i3 := @parameter0: int;

     label1:
        $i0 = i3;

        $i5 = (int) -1;

        i3 = i3 + $i5;

        if $i0 <= 0 goto label2;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i1 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i2 = $i1 - 1;

        r0.<org.sat4j.core.Vec: int nbelem> = $i2;

        $r1[$i2] = null;

        goto label1;

     label2:
        return;
    }

    public void shrinkTo(int)
    {
        java.lang.Object[] $r1;
        int i0, $i1, i2, $i4;
        org.sat4j.core.Vec r0;

        r0 := @this: org.sat4j.core.Vec;

        i0 := @parameter0: int;

        i2 = r0.<org.sat4j.core.Vec: int nbelem>;

     label1:
        if i2 <= i0 goto label2;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i1 = i2 - 1;

        $r1[$i1] = null;

        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label1;

     label2:
        r0.<org.sat4j.core.Vec: int nbelem> = i0;

        return;
    }

    public void pop()
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        org.sat4j.core.Vec r0;

        r0 := @this: org.sat4j.core.Vec;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i1 = $i0 - 1;

        r0.<org.sat4j.core.Vec: int nbelem> = $i1;

        $r1[$i1] = null;

        return;
    }

    public void growTo(int, java.lang.Object)
    {
        java.lang.Object[] $r2;
        int i0, i1;
        org.sat4j.core.Vec r0;
        java.lang.Object r1;

        r0 := @this: org.sat4j.core.Vec;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.sat4j.core.Vec: void ensure(int)>(i0);

        i1 = r0.<org.sat4j.core.Vec: int nbelem>;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r2[i1] = r1;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<org.sat4j.core.Vec: int nbelem> = i0;

        return;
    }

    public void ensure(int)
    {
        java.lang.Object[] $r1, $r2, r3, $r4;
        org.sat4j.core.Vec r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.sat4j.core.Vec;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label1;

        $i2 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i3 = $i2 * 2;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i3);

        $r2 = newarray (java.lang.Object)[$i4];

        r3 = (java.lang.Object[]) $r2;

        $r4 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i5 = r0.<org.sat4j.core.Vec: int nbelem>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r3, 0, $i5);

        r0.<org.sat4j.core.Vec: java.lang.Object[] myarray> = r3;

     label1:
        return;
    }

    public org.sat4j.specs.IVec push(java.lang.Object)
    {
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3;
        org.sat4j.core.Vec r0;
        java.lang.Object r2;

        r0 := @this: org.sat4j.core.Vec;

        r2 := @parameter0: java.lang.Object;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i1 = $i0 + 1;

        virtualinvoke r0.<org.sat4j.core.Vec: void ensure(int)>($i1);

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i2 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i3 = $i2 + 1;

        r0.<org.sat4j.core.Vec: int nbelem> = $i3;

        $r1[$i2] = r2;

        return r0;
    }

    public void unsafePush(java.lang.Object)
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        org.sat4j.core.Vec r0;
        java.lang.Object r2;

        r0 := @this: org.sat4j.core.Vec;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i1 = $i0 + 1;

        r0.<org.sat4j.core.Vec: int nbelem> = $i1;

        $r1[$i0] = r2;

        return;
    }

    public void insertFirst(java.lang.Object)
    {
        java.lang.Object[] $r2, $r4;
        int $i0;
        org.sat4j.core.Vec r0;
        java.lang.Object r1, $r3;

        r0 := @this: org.sat4j.core.Vec;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r3 = $r2[0];

        virtualinvoke r0.<org.sat4j.core.Vec: org.sat4j.specs.IVec push(java.lang.Object)>($r3);

        $r4 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r4[0] = r1;

        return;

     label1:
        virtualinvoke r0.<org.sat4j.core.Vec: org.sat4j.specs.IVec push(java.lang.Object)>(r1);

        return;
    }

    public void insertFirstWithShifting(java.lang.Object)
    {
        java.lang.Object[] $r2, $r3, $r5;
        org.sat4j.core.Vec r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8;
        java.lang.Object r1, $r4;

        r0 := @this: org.sat4j.core.Vec;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        if $i0 <= 0 goto label3;

        $i1 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i2 = $i1 + 1;

        virtualinvoke r0.<org.sat4j.core.Vec: void ensure(int)>($i2);

        i6 = r0.<org.sat4j.core.Vec: int nbelem>;

     label1:
        if i6 <= 0 goto label2;

        $r5 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r3 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i5 = i6 - 1;

        $r4 = $r3[$i5];

        $r5[i6] = $r4;

        $i8 = (int) -1;

        i6 = i6 + $i8;

        goto label1;

     label2:
        $r2 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r2[0] = r1;

        $i3 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i4 = $i3 + 1;

        r0.<org.sat4j.core.Vec: int nbelem> = $i4;

        return;

     label3:
        virtualinvoke r0.<org.sat4j.core.Vec: org.sat4j.specs.IVec push(java.lang.Object)>(r1);

        return;
    }

    public void clear()
    {
        int $i0;
        org.sat4j.core.Vec r0;
        java.lang.Object[] $r1;

        r0 := @this: org.sat4j.core.Vec;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>($r1, 0, $i0, null);

        r0.<org.sat4j.core.Vec: int nbelem> = 0;

        return;
    }

    public java.lang.Object last()
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        org.sat4j.core.Vec r0;
        java.lang.Object $r2;

        r0 := @this: org.sat4j.core.Vec;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i1 = $i0 - 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    public java.lang.Object get(int)
    {
        java.lang.Object[] $r1;
        int i0;
        org.sat4j.core.Vec r0;
        java.lang.Object $r2;

        r0 := @this: org.sat4j.core.Vec;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r2 = $r1[i0];

        return $r2;
    }

    public void set(int, java.lang.Object)
    {
        java.lang.Object[] $r2;
        int i0;
        org.sat4j.core.Vec r0;
        java.lang.Object r1;

        r0 := @this: org.sat4j.core.Vec;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r2[i0] = r1;

        return;
    }

    public void remove(java.lang.Object)
    {
        java.lang.Object[] $r1, $r4, $r5, $r6;
        org.sat4j.core.Vec r0;
        java.lang.AssertionError $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0;
        java.lang.Object r2, $r3;

        r0 := @this: org.sat4j.core.Vec;

        r2 := @parameter0: java.lang.Object;

        i7 = 0;

     label1:
        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r3 = $r1[i7];

        if $r3 == r2 goto label3;

        $z0 = <org.sat4j.core.Vec: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i6 = virtualinvoke r0.<org.sat4j.core.Vec: int size()>();

        if i7 < $i6 goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        $r4 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i0 = i7 + 1;

        $r5 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i1 = virtualinvoke r0.<org.sat4j.core.Vec: int size()>();

        $i2 = $i1 - i7;

        $i3 = $i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i0, $r5, i7, $i3);

        $r6 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i4 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i5 = $i4 - 1;

        r0.<org.sat4j.core.Vec: int nbelem> = $i5;

        $r6[$i5] = null;

        return;
    }

    public java.lang.Object delete(int)
    {
        java.lang.Object[] $r1, $r3, $r4, $r6;
        org.sat4j.core.Vec r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2, $r5;

        r0 := @this: org.sat4j.core.Vec;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        r2 = $r1[i0];

        $r3 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r4 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i1 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i2 = $i1 - 1;

        r0.<org.sat4j.core.Vec: int nbelem> = $i2;

        $r5 = $r4[$i2];

        $r3[i0] = $r5;

        $r6 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i3 = r0.<org.sat4j.core.Vec: int nbelem>;

        $r6[$i3] = null;

        return r2;
    }

    public void copyTo(org.sat4j.specs.IVec)
    {
        java.lang.Object[] $r3, $r4;
        org.sat4j.core.Vec r1, r2;
        int $i0, $i1, i2, $i3, $i4;
        org.sat4j.specs.IVec r0;

        r2 := @this: org.sat4j.core.Vec;

        r0 := @parameter0: org.sat4j.specs.IVec;

        r1 = (org.sat4j.core.Vec) r0;

        $i1 = r2.<org.sat4j.core.Vec: int nbelem>;

        $i0 = r1.<org.sat4j.core.Vec: int nbelem>;

        i2 = $i1 + $i0;

        interfaceinvoke r0.<org.sat4j.specs.IVec: void ensure(int)>(i2);

        $r4 = r2.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r3 = r1.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i4 = r1.<org.sat4j.core.Vec: int nbelem>;

        $i3 = r2.<org.sat4j.core.Vec: int nbelem>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, $i4, $i3);

        r1.<org.sat4j.core.Vec: int nbelem> = i2;

        return;
    }

    public void copyTo(java.lang.Object[])
    {
        java.lang.Object[] r1, $r2;
        int $i0;
        org.sat4j.core.Vec r0;

        r0 := @this: org.sat4j.core.Vec;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0);

        return;
    }

    public void moveTo(org.sat4j.specs.IVec)
    {
        org.sat4j.core.Vec r0;
        org.sat4j.specs.IVec r1;

        r0 := @this: org.sat4j.core.Vec;

        r1 := @parameter0: org.sat4j.specs.IVec;

        virtualinvoke r0.<org.sat4j.core.Vec: void copyTo(org.sat4j.specs.IVec)>(r1);

        virtualinvoke r0.<org.sat4j.core.Vec: void clear()>();

        return;
    }

    public void moveTo(int, int)
    {
        java.lang.Object[] $r1, $r3, $r4;
        int i0, i1;
        org.sat4j.core.Vec r0;
        java.lang.Object $r2;

        r0 := @this: org.sat4j.core.Vec;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == i1 goto label1;

        $r3 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r2 = $r1[i1];

        $r3[i0] = $r2;

        $r4 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r4[i1] = null;

     label1:
        return;
    }

    public java.lang.Object[] toArray()
    {
        org.sat4j.core.Vec r0;
        java.lang.Object[] $r1;

        r0 := @this: org.sat4j.core.Vec;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r3, $r5;
        org.sat4j.core.Vec r1;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r4, $r6;
        java.lang.String $r2;

        r1 := @this: org.sat4j.core.Vec;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i5 = 0;

     label1:
        $i0 = r1.<org.sat4j.core.Vec: int nbelem>;

        $i1 = $i0 - 1;

        if i5 >= $i1 goto label2;

        $r5 = r1.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r6 = $r5[i5];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        i5 = i5 + 1;

        goto label1;

     label2:
        $i2 = r1.<org.sat4j.core.Vec: int nbelem>;

        if $i2 <= 0 goto label3;

        $r3 = r1.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i3 = r1.<org.sat4j.core.Vec: int nbelem>;

        $i4 = $i3 - 1;

        $r4 = $r3[$i4];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    void selectionSort(int, int, java.util.Comparator)
    {
        java.lang.Object[] $r1, $r3, $r5, $r6, $r8, $r9;
        org.sat4j.core.Vec r0;
        int i0, i1, $i2, $i3, i4, i5, i6;
        java.lang.Object r2, $r4, $r10, $r11;
        java.util.Comparator r7;

        r0 := @this: org.sat4j.core.Vec;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: java.util.Comparator;

        i4 = i0;

     label1:
        $i2 = i1 - 1;

        if i4 >= $i2 goto label5;

        i5 = i4;

        i6 = i4 + 1;

     label2:
        if i6 >= i1 goto label4;

        $r8 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r11 = $r8[i6];

        $r9 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r10 = $r9[i5];

        $i3 = interfaceinvoke r7.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r11, $r10);

        if $i3 >= 0 goto label3;

        i5 = i6;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        r2 = $r1[i4];

        $r5 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r3 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r4 = $r3[i5];

        $r5[i4] = $r4;

        $r6 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r6[i5] = r2;

        i4 = i4 + 1;

        goto label1;

     label5:
        return;
    }

    void sort(int, int, java.util.Comparator)
    {
        java.lang.Object[] $r1, $r4, $r6, $r8, $r10, $r11, $r12;
        org.sat4j.core.Vec r0;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, $i8, $i10;
        java.lang.Object r2, $r5, r7, $r9, $r13;
        java.util.Comparator r3;

        r0 := @this: org.sat4j.core.Vec;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r3 := @parameter2: java.util.Comparator;

        i2 = i0 - i1;

        if i2 > 15 goto label1;

        virtualinvoke r0.<org.sat4j.core.Vec: void selectionSort(int,int,java.util.Comparator)>(i1, i0, r3);

        goto label6;

     label1:
        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $i3 = i2 / 2;

        $i4 = $i3 + i1;

        r2 = $r1[$i4];

        i6 = i1 - 1;

        i7 = i0;

     label2:
        i6 = i6 + 1;

        $r12 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r13 = $r12[i6];

        $i8 = interfaceinvoke r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r13, r2);

        if $i8 < 0 goto label2;

     label3:
        $i10 = (int) -1;

        i7 = i7 + $i10;

        $r4 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r5 = $r4[i7];

        $i5 = interfaceinvoke r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $i5 < 0 goto label3;

        if i6 < i7 goto label4;

        goto label5;

     label4:
        $r6 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        r7 = $r6[i6];

        $r10 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r8 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r9 = $r8[i7];

        $r10[i6] = $r9;

        $r11 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r11[i7] = r7;

        goto label2;

     label5:
        virtualinvoke r0.<org.sat4j.core.Vec: void sort(int,int,java.util.Comparator)>(i1, i6, r3);

        virtualinvoke r0.<org.sat4j.core.Vec: void sort(int,int,java.util.Comparator)>(i6, i0, r3);

     label6:
        return;
    }

    public void sort(java.util.Comparator)
    {
        int $i0;
        org.sat4j.core.Vec r0;
        java.util.Comparator r1;

        r0 := @this: org.sat4j.core.Vec;

        r1 := @parameter0: java.util.Comparator;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        virtualinvoke r0.<org.sat4j.core.Vec: void sort(int,int,java.util.Comparator)>(0, $i0, r1);

        return;
    }

    public void sortUnique(java.util.Comparator)
    {
        java.lang.Object[] $r2, $r3, $r5, $r7;
        org.sat4j.core.Vec r0;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object $r4, $r6, r8;
        java.util.Comparator r1;

        r0 := @this: org.sat4j.core.Vec;

        r1 := @parameter0: java.util.Comparator;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<org.sat4j.core.Vec: int nbelem>;

        virtualinvoke r0.<org.sat4j.core.Vec: void sort(int,int,java.util.Comparator)>(0, $i1, r1);

        i4 = 1;

        $r2 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        r8 = $r2[0];

        i5 = 1;

     label2:
        $i2 = r0.<org.sat4j.core.Vec: int nbelem>;

        if i5 >= $i2 goto label4;

        $r3 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r4 = $r3[i5];

        $i3 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r8, $r4);

        if $i3 >= 0 goto label3;

        $r7 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r5 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r6 = $r5[i5];

        $r7[i4] = $r6;

        r8 = $r6;

        i4 = i4 + 1;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        r0.<org.sat4j.core.Vec: int nbelem> = i4;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.sat4j.core.Vec r2;
        int $i0, $i1, $i2, i3;
        java.lang.Object r0, $r3, $r4;
        org.sat4j.specs.IVec r1;
        boolean $z0, $z1;

        r2 := @this: org.sat4j.core.Vec;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.sat4j.specs.IVec;

        if $z0 == 0 goto label5;

        r1 = (org.sat4j.specs.IVec) r0;

        $i0 = interfaceinvoke r1.<org.sat4j.specs.IVec: int size()>();

        $i1 = virtualinvoke r2.<org.sat4j.core.Vec: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        i3 = 0;

     label2:
        $i2 = virtualinvoke r2.<org.sat4j.core.Vec: int size()>();

        if i3 >= $i2 goto label4;

        $r3 = interfaceinvoke r1.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i3);

        $r4 = virtualinvoke r2.<org.sat4j.core.Vec: java.lang.Object get(int)>(i3);

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 1;

     label5:
        return 0;
    }

    public int hashCode()
    {
        java.lang.Object[] $r1;
        org.sat4j.core.Vec r0;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object $r2;

        r0 := @this: org.sat4j.core.Vec;

        i4 = 0;

        i5 = 0;

     label1:
        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        if i5 >= $i0 goto label2;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r2 = $r1[i5];

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i2 = r0.<org.sat4j.core.Vec: int nbelem>;

        $i3 = $i1 / $i2;

        i4 = i4 + $i3;

        i5 = i5 + 1;

        goto label1;

     label2:
        return i4;
    }

    public java.util.Iterator iterator()
    {
        org.sat4j.core.Vec r1;
        org.sat4j.core.Vec$1 $r0;

        r1 := @this: org.sat4j.core.Vec;

        $r0 = new org.sat4j.core.Vec$1;

        specialinvoke $r0.<org.sat4j.core.Vec$1: void <init>(org.sat4j.core.Vec)>(r1);

        return $r0;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.sat4j.core.Vec r0;
        boolean $z0;

        r0 := @this: org.sat4j.core.Vec;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object[] $r1;
        int $i0, i1;
        org.sat4j.core.Vec r0;
        java.lang.Object r2, $r3;
        boolean $z0;

        r0 := @this: org.sat4j.core.Vec;

        r2 := @parameter0: java.lang.Object;

        i1 = 0;

     label1:
        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        if i1 >= $i0 goto label3;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r3 = $r1[i1];

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public int indexOf(java.lang.Object)
    {
        java.lang.Object[] $r1;
        org.sat4j.core.Vec r0;
        int $i0, i1, $i3;
        java.lang.Object r2, $r3;
        boolean $z0;

        r0 := @this: org.sat4j.core.Vec;

        r2 := @parameter0: java.lang.Object;

        i1 = 0;

     label1:
        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        if i1 >= $i0 goto label3;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        $r3 = $r1[i1];

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    static int access$000(org.sat4j.core.Vec)
    {
        int $i0;
        org.sat4j.core.Vec r0;

        r0 := @parameter0: org.sat4j.core.Vec;

        $i0 = r0.<org.sat4j.core.Vec: int nbelem>;

        return $i0;
    }

    static java.lang.Object[] access$100(org.sat4j.core.Vec)
    {
        org.sat4j.core.Vec r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: org.sat4j.core.Vec;

        $r1 = r0.<org.sat4j.core.Vec: java.lang.Object[] myarray>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.core.Vec: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/core/Vec;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.core.Vec: boolean $assertionsDisabled> = $z1;

        return;
    }
}
