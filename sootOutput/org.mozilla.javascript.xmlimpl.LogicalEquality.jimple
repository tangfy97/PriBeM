public class org.mozilla.javascript.xmlimpl.LogicalEquality extends java.lang.Object
{

    public void <init>()
    {
        org.mozilla.javascript.xmlimpl.LogicalEquality r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.LogicalEquality;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean nodesEqual(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0, r1;
        org.apache.xmlbeans.XmlCursor$TokenType $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r1 := @parameter1: org.apache.xmlbeans.XmlCursor;

        z8 = 0;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label2:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        if $r2 != $r3 goto label8;

        $z2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isEnddoc()>();

        if $z2 == 0 goto label3;

        z8 = 1;

        goto label8;

     label3:
        $z3 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z3 == 0 goto label4;

        z8 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean attributesEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>(r0, r1);

        goto label8;

     label4:
        $z4 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z4 == 0 goto label5;

        z8 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean textNodesEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>(r0, r1);

        goto label8;

     label5:
        $z5 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isComment()>();

        if $z5 == 0 goto label6;

        z8 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean commentsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>(r0, r1);

        goto label8;

     label6:
        $z6 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z6 == 0 goto label7;

        z8 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean processingInstructionsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>(r0, r1);

        goto label8;

     label7:
        $z7 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z7 == 0 goto label8;

        z8 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean elementsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>(r0, r1);

     label8:
        return z8;
    }

    private static boolean elementsEqual(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0, r2;
        org.apache.xmlbeans.XmlCursor$TokenType $r4, $r5;
        javax.xml.namespace.QName $r1, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r2 := @parameter1: org.apache.xmlbeans.XmlCursor;

        z8 = 1;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r3 = interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $z0 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean qnamesEqual(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r1, $r3);

        if $z0 != 0 goto label01;

        z8 = 0;

        goto label12;

     label01:
        staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: void nextToken(org.apache.xmlbeans.XmlCursor)>(r0);

        staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: void nextToken(org.apache.xmlbeans.XmlCursor)>(r2);

     label02:
        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $r5 = interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        if $r4 == $r5 goto label03;

        z8 = 0;

        goto label12;

     label03:
        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isEnd()>();

        if $z1 == 0 goto label04;

        goto label12;

     label04:
        $z2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isEnddoc()>();

        if $z2 == 0 goto label05;

        goto label12;

     label05:
        $z3 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z3 == 0 goto label06;

        z8 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean attributeListsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>(r0, r2);

        goto label11;

     label06:
        $z4 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z4 == 0 goto label07;

        z8 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean textNodesEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>(r0, r2);

        goto label10;

     label07:
        $z5 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isComment()>();

        if $z5 == 0 goto label08;

        z8 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean commentsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>(r0, r2);

        goto label10;

     label08:
        $z6 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z6 == 0 goto label09;

        z8 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean processingInstructionsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>(r0, r2);

        goto label10;

     label09:
        $z7 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z7 == 0 goto label10;

        z8 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean elementsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>(r0, r2);

     label10:
        staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: void nextToken(org.apache.xmlbeans.XmlCursor)>(r0);

        staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: void nextToken(org.apache.xmlbeans.XmlCursor)>(r2);

     label11:
        if z8 != 0 goto label02;

     label12:
        return z8;
    }

    private static boolean attributeListsEqual(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0, r2;
        int $i0, $i1;
        java.lang.String r9, r11;
        boolean $z0, $z1, $z2, z3, z4, z5;
        java.util.Iterator $r6, $r7;
        java.util.Set $r4, $r5;
        java.util.TreeMap $r1, $r3;
        java.lang.Object $r8, $r10, $r12, $r14;
        javax.xml.namespace.QName r13, r15;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r2 := @parameter1: org.apache.xmlbeans.XmlCursor;

        z3 = 1;

        z5 = 1;

        z4 = 1;

        $r1 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: java.util.TreeMap loadAttributeMap(org.apache.xmlbeans.XmlCursor)>(r0);

        $r3 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: java.util.TreeMap loadAttributeMap(org.apache.xmlbeans.XmlCursor)>(r2);

        $i0 = virtualinvoke $r1.<java.util.TreeMap: int size()>();

        $i1 = virtualinvoke $r3.<java.util.TreeMap: int size()>();

        if $i0 == $i1 goto label1;

        z3 = 0;

        z5 = 0;

        goto label4;

     label1:
        $r4 = virtualinvoke $r1.<java.util.TreeMap: java.util.Set keySet()>();

        $r5 = virtualinvoke $r3.<java.util.TreeMap: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $r7 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        if z4 == 0 goto label4;

        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r10;

        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z1 != 0 goto label3;

        z3 = 0;

        z5 = 0;

        z4 = 0;

        goto label2;

     label3:
        $r12 = virtualinvoke $r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r9);

        r13 = (javax.xml.namespace.QName) $r12;

        $r14 = virtualinvoke $r3.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r11);

        r15 = (javax.xml.namespace.QName) $r14;

        $z2 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean qnamesEqual(javax.xml.namespace.QName,javax.xml.namespace.QName)>(r13, r15);

        if $z2 != 0 goto label2;

        z3 = 0;

        z5 = 0;

        z4 = 0;

        goto label2;

     label4:
        return z5;
    }

    private static java.util.TreeMap loadAttributeMap(org.apache.xmlbeans.XmlCursor)
    {
        java.util.TreeMap $r0;
        org.apache.xmlbeans.XmlCursor r1;
        java.lang.String $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r1 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $r0 = new java.util.TreeMap;

        specialinvoke $r0.<java.util.TreeMap: void <init>()>();

     label1:
        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        virtualinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: void nextToken(org.apache.xmlbeans.XmlCursor)>(r1);

        goto label1;

     label2:
        return $r0;
    }

    private static boolean attributesEqual(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0, r1;
        javax.xml.namespace.QName $r2, $r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r1 := @parameter1: org.apache.xmlbeans.XmlCursor;

        z4 = 0;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z1 == 0 goto label1;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $z2 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean qnamesEqual(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r2, $r3);

        if $z2 == 0 goto label1;

        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label1;

        z4 = 1;

     label1:
        return z4;
    }

    private static boolean textNodesEqual(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2, z3;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r1 := @parameter1: org.apache.xmlbeans.XmlCursor;

        z3 = 0;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z1 == 0 goto label1;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: java.lang.String getChars()>();

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getChars()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label1;

        z3 = 1;

     label1:
        return z3;
    }

    private static boolean commentsEqual(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2, z3;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r1 := @parameter1: org.apache.xmlbeans.XmlCursor;

        z3 = 0;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isComment()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean isComment()>();

        if $z1 == 0 goto label1;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label1;

        z3 = 1;

     label1:
        return z3;
    }

    private static boolean processingInstructionsEqual(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0, r1;
        javax.xml.namespace.QName $r2, $r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r1 := @parameter1: org.apache.xmlbeans.XmlCursor;

        z4 = 0;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z1 == 0 goto label1;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $z2 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean qnamesEqual(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r2, $r3);

        if $z2 == 0 goto label1;

        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label1;

        z4 = 1;

     label1:
        return z4;
    }

    private static boolean qnamesEqual(javax.xml.namespace.QName, javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r0, r2;
        java.lang.String $r1, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r5 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static void nextToken(org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0;
        int $i0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

     label1:
        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: java.lang.String getChars()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        goto label3;

     label3:
        return;
    }
}
