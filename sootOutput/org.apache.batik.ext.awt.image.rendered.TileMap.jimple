public class org.apache.batik.ext.awt.image.rendered.TileMap extends java.lang.Object implements org.apache.batik.ext.awt.image.rendered.TileStore
{
    private static final boolean DEBUG;
    private static final boolean COUNT;
    private java.util.HashMap rasters;
    private org.apache.batik.ext.awt.image.rendered.TileGenerator source;
    private org.apache.batik.ext.awt.image.rendered.LRUCache cache;
    static int requests;
    static int misses;
    static java.lang.Class class$org$apache$batik$ext$awt$image$rendered$TileMap;

    public void <init>(org.apache.batik.ext.awt.image.rendered.TileGenerator, org.apache.batik.ext.awt.image.rendered.LRUCache)
    {
        org.apache.batik.ext.awt.image.rendered.TileMap r0;
        org.apache.batik.ext.awt.image.rendered.TileGenerator r3;
        java.util.HashMap $r1;
        org.apache.batik.ext.awt.image.rendered.LRUCache r2;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.TileMap;

        r3 := @parameter0: org.apache.batik.ext.awt.image.rendered.TileGenerator;

        r2 := @parameter1: org.apache.batik.ext.awt.image.rendered.LRUCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.rendered.TileMap: java.util.HashMap rasters> = $r1;

        r0.<org.apache.batik.ext.awt.image.rendered.TileMap: org.apache.batik.ext.awt.image.rendered.TileGenerator source> = null;

        r0.<org.apache.batik.ext.awt.image.rendered.TileMap: org.apache.batik.ext.awt.image.rendered.LRUCache cache> = null;

        r0.<org.apache.batik.ext.awt.image.rendered.TileMap: org.apache.batik.ext.awt.image.rendered.LRUCache cache> = r2;

        r0.<org.apache.batik.ext.awt.image.rendered.TileMap: org.apache.batik.ext.awt.image.rendered.TileGenerator source> = r3;

        return;
    }

    public void setTile(int, int, java.awt.image.Raster)
    {
        org.apache.batik.ext.awt.image.rendered.TileMap r2;
        java.awt.Point $r0;
        java.util.HashMap $r3, $r7, $r8;
        org.apache.batik.ext.awt.image.rendered.LRUCache $r5, $r11;
        org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember $r6, $r10, r12;
        int i0, i1;
        java.awt.image.Raster r1;
        java.lang.Object $r4, $r9;

        r2 := @this: org.apache.batik.ext.awt.image.rendered.TileMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.awt.image.Raster;

        $r0 = new java.awt.Point;

        specialinvoke $r0.<java.awt.Point: void <init>(int,int)>(i0, i1);

        if r1 != null goto label2;

        $r8 = r2.<org.apache.batik.ext.awt.image.rendered.TileMap: java.util.HashMap rasters>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r0);

        if $r9 == null goto label1;

        $r11 = r2.<org.apache.batik.ext.awt.image.rendered.TileMap: org.apache.batik.ext.awt.image.rendered.LRUCache cache>;

        $r10 = (org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember) $r9;

        virtualinvoke $r11.<org.apache.batik.ext.awt.image.rendered.LRUCache: void remove(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>($r10);

     label1:
        return;

     label2:
        $r3 = r2.<org.apache.batik.ext.awt.image.rendered.TileMap: java.util.HashMap rasters>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        if $r4 != null goto label3;

        $r6 = new org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember;

        specialinvoke $r6.<org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember: void <init>(org.apache.batik.ext.awt.image.rendered.TileMap,java.awt.Point,java.awt.image.Raster)>(r2, $r0, r1);

        r12 = $r6;

        $r7 = r2.<org.apache.batik.ext.awt.image.rendered.TileMap: java.util.HashMap rasters>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r6);

        goto label4;

     label3:
        r12 = (org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember) $r4;

        virtualinvoke r12.<org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember: void setRaster(java.awt.image.Raster)>(r1);

     label4:
        $r5 = r2.<org.apache.batik.ext.awt.image.rendered.TileMap: org.apache.batik.ext.awt.image.rendered.LRUCache cache>;

        virtualinvoke $r5.<org.apache.batik.ext.awt.image.rendered.LRUCache: void add(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(r12);

        return;
    }

    public java.awt.image.Raster getTileNoCompute(int, int)
    {
        org.apache.batik.ext.awt.image.rendered.TileMap r1;
        java.awt.Point $r0;
        java.util.HashMap $r2;
        org.apache.batik.ext.awt.image.rendered.LRUCache $r6;
        org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember r4;
        int i0, i1;
        java.awt.image.Raster $r5;
        java.lang.Object $r3;

        r1 := @this: org.apache.batik.ext.awt.image.rendered.TileMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.awt.Point;

        specialinvoke $r0.<java.awt.Point: void <init>(int,int)>(i0, i1);

        $r2 = r1.<org.apache.batik.ext.awt.image.rendered.TileMap: java.util.HashMap rasters>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        if $r3 != null goto label1;

        return null;

     label1:
        r4 = (org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember) $r3;

        $r5 = virtualinvoke r4.<org.apache.batik.ext.awt.image.rendered.TileLRUMember: java.awt.image.Raster retrieveRaster()>();

        if $r5 == null goto label2;

        $r6 = r1.<org.apache.batik.ext.awt.image.rendered.TileMap: org.apache.batik.ext.awt.image.rendered.LRUCache cache>;

        virtualinvoke $r6.<org.apache.batik.ext.awt.image.rendered.LRUCache: void add(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(r4);

     label2:
        return $r5;
    }

    public java.awt.image.Raster getTile(int, int)
    {
        org.apache.batik.ext.awt.image.rendered.TileMap r1;
        java.awt.Point $r0;
        java.util.HashMap $r2, $r7;
        org.apache.batik.ext.awt.image.rendered.LRUCache $r10;
        org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember $r6, r9;
        org.apache.batik.ext.awt.image.rendered.TileGenerator $r4;
        int i0, i1;
        java.awt.image.Raster $r5, r8;
        java.lang.Object $r3;
        boolean $z0;

        r1 := @this: org.apache.batik.ext.awt.image.rendered.TileMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r8 = null;

        $r0 = new java.awt.Point;

        specialinvoke $r0.<java.awt.Point: void <init>(int,int)>(i0, i1);

        $r2 = r1.<org.apache.batik.ext.awt.image.rendered.TileMap: java.util.HashMap rasters>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        r9 = null;

        if $r3 == null goto label1;

        r9 = (org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember) $r3;

        r8 = virtualinvoke r9.<org.apache.batik.ext.awt.image.rendered.TileLRUMember: java.awt.image.Raster retrieveRaster()>();

     label1:
        if r8 != null goto label4;

        $r4 = r1.<org.apache.batik.ext.awt.image.rendered.TileMap: org.apache.batik.ext.awt.image.rendered.TileGenerator source>;

        $r5 = interfaceinvoke $r4.<org.apache.batik.ext.awt.image.rendered.TileGenerator: java.awt.image.Raster genTile(int,int)>(i0, i1);

        r8 = $r5;

        $z0 = staticinvoke <org.apache.batik.util.HaltingThread: boolean hasBeenHalted()>();

        if $z0 == 0 goto label2;

        return $r5;

     label2:
        if r9 == null goto label3;

        virtualinvoke r9.<org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember: void setRaster(java.awt.image.Raster)>($r5);

        goto label4;

     label3:
        $r6 = new org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember;

        specialinvoke $r6.<org.apache.batik.ext.awt.image.rendered.TileMap$TileMapLRUMember: void <init>(org.apache.batik.ext.awt.image.rendered.TileMap,java.awt.Point,java.awt.image.Raster)>(r1, $r0, $r5);

        r9 = $r6;

        $r7 = r1.<org.apache.batik.ext.awt.image.rendered.TileMap: java.util.HashMap rasters>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r6);

     label4:
        $r10 = r1.<org.apache.batik.ext.awt.image.rendered.TileMap: org.apache.batik.ext.awt.image.rendered.LRUCache cache>;

        virtualinvoke $r10.<org.apache.batik.ext.awt.image.rendered.LRUCache: void add(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(r9);

        return r8;
    }

    static java.util.HashMap access$000(org.apache.batik.ext.awt.image.rendered.TileMap)
    {
        org.apache.batik.ext.awt.image.rendered.TileMap r0;
        java.util.HashMap $r1;

        r0 := @parameter0: org.apache.batik.ext.awt.image.rendered.TileMap;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.TileMap: java.util.HashMap rasters>;

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    public static void <clinit>()
    {
        <org.apache.batik.ext.awt.image.rendered.TileMap: boolean COUNT> = 0;

        <org.apache.batik.ext.awt.image.rendered.TileMap: boolean DEBUG> = 0;

        return;
    }
}
