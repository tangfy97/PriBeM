final class org.apache.poi.ss.formula.functions.NumericFunction$36 extends org.apache.poi.ss.formula.functions.Fixed3ArgFunction
{
    private static final double DEFAULT_RETURN_RESULT;
    private final long[] FACTORIALS;

    void <init>()
    {
        long[] $r1;
        org.apache.poi.ss.formula.functions.NumericFunction$36 r0;

        r0 := @this: org.apache.poi.ss.formula.functions.NumericFunction$36;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.Fixed3ArgFunction: void <init>()>();

        $r1 = newarray (long)[21];

        $r1[0] = 1L;

        $r1[1] = 1L;

        $r1[2] = 2L;

        $r1[3] = 6L;

        $r1[4] = 24L;

        $r1[5] = 120L;

        $r1[6] = 720L;

        $r1[7] = 5040L;

        $r1[8] = 40320L;

        $r1[9] = 362880L;

        $r1[10] = 3628800L;

        $r1[11] = 39916800L;

        $r1[12] = 479001600L;

        $r1[13] = 6227020800L;

        $r1[14] = 87178291200L;

        $r1[15] = 1307674368000L;

        $r1[16] = 20922789888000L;

        $r1[17] = 355687428096000L;

        $r1[18] = 6402373705728000L;

        $r1[19] = 121645100408832000L;

        $r1[20] = 2432902008176640000L;

        r0.<org.apache.poi.ss.formula.functions.NumericFunction$36: long[] FACTORIALS> = $r1;

        return;
    }

    private boolean isDefaultResult(double, double)
    {
        byte $b0, $b1;
        org.apache.poi.ss.formula.functions.NumericFunction$36 r0;
        double d0, d1;

        r0 := @this: org.apache.poi.ss.formula.functions.NumericFunction$36;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $b1 = d1 cmpl 0.0;

        if $b1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean checkArgument(double) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        byte $b0;
        org.apache.poi.ss.formula.eval.ErrorEval $r1;
        int $i1;
        org.apache.poi.ss.formula.eval.EvaluationException $r3;
        org.apache.poi.ss.formula.functions.NumericFunction$36 r2;
        double d0;

        r2 := @this: org.apache.poi.ss.formula.functions.NumericFunction$36;

        d0 := @parameter0: double;

        staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: void checkValue(double)>(d0);

        $b0 = d0 cmpg 0.0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $r3 = new org.apache.poi.ss.formula.eval.EvaluationException;

        $r1 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval NUM_ERROR>;

        specialinvoke $r3.<org.apache.poi.ss.formula.eval.EvaluationException: void <init>(org.apache.poi.ss.formula.eval.ErrorEval)>($r1);

        throw $r3;

     label1:
        return 1;
    }

    private double probability(int, double)
    {
        long $l1;
        org.apache.poi.ss.formula.functions.NumericFunction$36 r0;
        int i0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: org.apache.poi.ss.formula.functions.NumericFunction$36;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $d1 = (double) i0;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, $d1);

        $d3 = neg d0;

        $d4 = staticinvoke <java.lang.Math: double exp(double)>($d3);

        $d5 = $d2 * $d4;

        $l1 = virtualinvoke r0.<org.apache.poi.ss.formula.functions.NumericFunction$36: long factorial(int)>(i0);

        $d6 = (double) $l1;

        $d7 = $d5 / $d6;

        return $d7;
    }

    private double cumulativeProbability(int, double)
    {
        int i0, i1;
        org.apache.poi.ss.formula.functions.NumericFunction$36 r0;
        double d0, $d1, d2;

        r0 := @this: org.apache.poi.ss.formula.functions.NumericFunction$36;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d2 = 0.0;

        i1 = 0;

     label1:
        if i1 > i0 goto label2;

        $d1 = specialinvoke r0.<org.apache.poi.ss.formula.functions.NumericFunction$36: double probability(int,double)>(i1, d0);

        d2 = d2 + $d1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d2;
    }

    public long factorial(int)
    {
        long[] $r2;
        int i0;
        long $l1;
        java.lang.IllegalArgumentException $r0;
        org.apache.poi.ss.formula.functions.NumericFunction$36 r1;

        r1 := @this: org.apache.poi.ss.formula.functions.NumericFunction$36;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 20 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Valid argument should be in the range [0..20]");

        throw $r0;

     label2:
        $r2 = r1.<org.apache.poi.ss.formula.functions.NumericFunction$36: long[] FACTORIALS>;

        $l1 = $r2[i0];

        return $l1;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(int, int, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r8;
        int i0, i1, $i2, $i3;
        org.apache.poi.ss.formula.eval.EvaluationException $r7;
        org.apache.poi.ss.formula.eval.BoolEval $r1;
        boolean $z0, $z1;
        double $d0, $d1, d2;
        org.apache.poi.ss.formula.functions.NumericFunction$36 r4;
        org.apache.poi.ss.formula.eval.ValueEval r0, r2, r3;
        org.apache.poi.ss.formula.eval.NumberEval $r5, $r6;

        r4 := @this: org.apache.poi.ss.formula.functions.NumericFunction$36;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: org.apache.poi.ss.formula.eval.ValueEval;

        r3 := @parameter3: org.apache.poi.ss.formula.eval.ValueEval;

        r0 := @parameter4: org.apache.poi.ss.formula.eval.ValueEval;

        $r1 = (org.apache.poi.ss.formula.eval.BoolEval) r0;

        $z0 = virtualinvoke $r1.<org.apache.poi.ss.formula.eval.BoolEval: boolean getBooleanValue()>();

     label1:
        $d0 = staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r2, i0, i1);

        $d1 = staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r3, i0, i1);

        $z1 = specialinvoke r4.<org.apache.poi.ss.formula.functions.NumericFunction$36: boolean isDefaultResult(double,double)>($d0, $d1);

        if $z1 == 0 goto label3;

        $r6 = new org.apache.poi.ss.formula.eval.NumberEval;

        specialinvoke $r6.<org.apache.poi.ss.formula.eval.NumberEval: void <init>(double)>(1.0);

     label2:
        return $r6;

     label3:
        specialinvoke r4.<org.apache.poi.ss.formula.functions.NumericFunction$36: boolean checkArgument(double)>($d0);

        specialinvoke r4.<org.apache.poi.ss.formula.functions.NumericFunction$36: boolean checkArgument(double)>($d1);

        if $z0 == 0 goto label4;

        $i3 = (int) $d0;

        d2 = specialinvoke r4.<org.apache.poi.ss.formula.functions.NumericFunction$36: double cumulativeProbability(int,double)>($i3, $d1);

        goto label5;

     label4:
        $i2 = (int) $d0;

        d2 = specialinvoke r4.<org.apache.poi.ss.formula.functions.NumericFunction$36: double probability(int,double)>($i2, $d1);

     label5:
        staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: void checkValue(double)>(d2);

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.ErrorEval getErrorEval()>();

        return $r8;

     label8:
        $r5 = new org.apache.poi.ss.formula.eval.NumberEval;

        specialinvoke $r5.<org.apache.poi.ss.formula.eval.NumberEval: void <init>(double)>(d2);

        return $r5;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label2 with label7;
        catch org.apache.poi.ss.formula.eval.EvaluationException from label3 to label6 with label7;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ss.formula.functions.NumericFunction$36: double DEFAULT_RETURN_RESULT> = 1.0;

        return;
    }
}
