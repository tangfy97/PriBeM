public final class org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexer$KnownWavelet extends java.lang.Object
{
    public final org.waveprotocol.wave.model.wave.data.ObservableWaveletData snapshot;
    public final org.waveprotocol.wave.model.version.HashedVersion committedVersion;
    public final org.waveprotocol.wave.concurrencycontrol.channel.Accessibility accessibility;

    public void <init>(org.waveprotocol.wave.model.wave.data.ObservableWaveletData, org.waveprotocol.wave.model.version.HashedVersion, org.waveprotocol.wave.concurrencycontrol.channel.Accessibility)
    {
        org.waveprotocol.wave.concurrencycontrol.channel.Accessibility r3;
        org.waveprotocol.wave.model.wave.data.ObservableWaveletData r1;
        org.waveprotocol.wave.model.version.HashedVersion r2;
        org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexer$KnownWavelet r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexer$KnownWavelet;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.ObservableWaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        r3 := @parameter2: org.waveprotocol.wave.concurrencycontrol.channel.Accessibility;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexer$KnownWavelet: org.waveprotocol.wave.model.wave.data.ObservableWaveletData snapshot> = r1;

        r0.<org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexer$KnownWavelet: org.waveprotocol.wave.model.version.HashedVersion committedVersion> = r2;

        r0.<org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexer$KnownWavelet: org.waveprotocol.wave.concurrencycontrol.channel.Accessibility accessibility> = r3;

        return;
    }
}
