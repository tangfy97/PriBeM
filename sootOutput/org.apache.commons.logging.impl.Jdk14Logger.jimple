public class org.apache.commons.logging.impl.Jdk14Logger extends java.lang.Object implements org.apache.commons.logging.Log, java.io.Serializable
{
    protected static final java.util.logging.Level dummyLevel;
    protected transient java.util.logging.Logger logger;
    protected java.lang.String name;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        java.util.logging.Logger $r2;
        org.apache.commons.logging.impl.Jdk14Logger r0;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger logger> = null;

        r0.<org.apache.commons.logging.impl.Jdk14Logger: java.lang.String name> = null;

        r0.<org.apache.commons.logging.impl.Jdk14Logger: java.lang.String name> = r1;

        $r2 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>();

        r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger logger> = $r2;

        return;
    }

    private void log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r3, r5;
        java.util.logging.Logger $r1;
        java.util.logging.Level r2;
        java.lang.StackTraceElement[] $r4;
        int $i0;
        java.lang.StackTraceElement r7;
        java.lang.String r6, r8, r9;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r2 := @parameter0: java.util.logging.Level;

        r6 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Throwable;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>();

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>(r2);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        r8 = "unknown";

        r9 = "unknown";

        if $r4 == null goto label1;

        $i0 = lengthof $r4;

        if $i0 <= 2 goto label1;

        r7 = $r4[2];

        r8 = virtualinvoke r7.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        r9 = virtualinvoke r7.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

     label1:
        if r5 != null goto label2;

        virtualinvoke $r1.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>(r2, r8, r9, r6);

        goto label3;

     label2:
        virtualinvoke $r1.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>(r2, r8, r9, r6, r5);

     label3:
        return;
    }

    public void debug(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void debug(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, r4);

        return;
    }

    public void error(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void error(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, r4);

        return;
    }

    public void fatal(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void fatal(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, r4);

        return;
    }

    public java.util.logging.Logger getLogger()
    {
        java.lang.String $r3;
        java.util.logging.Logger $r1, $r2, $r4;
        org.apache.commons.logging.impl.Jdk14Logger r0;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        $r1 = r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger logger>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.commons.logging.impl.Jdk14Logger: java.lang.String name>;

        $r4 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r3);

        r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger logger> = $r4;

     label1:
        $r2 = r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger logger>;

        return $r2;
    }

    public void info(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void info(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, r4);

        return;
    }

    public boolean isDebugEnabled()
    {
        java.util.logging.Logger $r1;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public boolean isErrorEnabled()
    {
        java.util.logging.Logger $r1;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public boolean isFatalEnabled()
    {
        java.util.logging.Logger $r1;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public boolean isInfoEnabled()
    {
        java.util.logging.Logger $r1;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public boolean isTraceEnabled()
    {
        java.util.logging.Logger $r1;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public boolean isWarnEnabled()
    {
        java.util.logging.Logger $r1;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public void trace(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void trace(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, r4);

        return;
    }

    public void warn(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void warn(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Jdk14Logger r0;
        java.util.logging.Level $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk14Logger;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, r4);

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Level $r0;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        <org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Level dummyLevel> = $r0;

        return;
    }
}
