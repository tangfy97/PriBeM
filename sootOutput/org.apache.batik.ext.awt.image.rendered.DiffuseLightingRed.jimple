public class org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed extends org.apache.batik.ext.awt.image.rendered.AbstractRed
{
    private double kd;
    private org.apache.batik.ext.awt.image.Light light;
    private org.apache.batik.ext.awt.image.rendered.BumpMap bumpMap;
    private double scaleX;
    private double scaleY;
    private java.awt.Rectangle litRegion;
    private boolean linear;

    public void <init>(double, org.apache.batik.ext.awt.image.Light, org.apache.batik.ext.awt.image.rendered.BumpMap, java.awt.Rectangle, double, double, boolean)
    {
        java.awt.Rectangle r3;
        org.apache.batik.ext.awt.image.rendered.BumpMap r2;
        org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed r0;
        java.awt.image.SampleModel $r4;
        org.apache.batik.ext.awt.image.Light r1;
        java.awt.image.ColorModel r5;
        int $i0, $i1, $i2, $i3;
        double d0, d1, d2;
        boolean z0;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.batik.ext.awt.image.Light;

        r2 := @parameter2: org.apache.batik.ext.awt.image.rendered.BumpMap;

        r3 := @parameter3: java.awt.Rectangle;

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        z0 := @parameter6: boolean;

        specialinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: double kd> = d0;

        r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: org.apache.batik.ext.awt.image.Light light> = r1;

        r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: org.apache.batik.ext.awt.image.rendered.BumpMap bumpMap> = r2;

        r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: java.awt.Rectangle litRegion> = r3;

        r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: double scaleX> = d1;

        r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: double scaleY> = d2;

        r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: boolean linear> = z0;

        if z0 == 0 goto label1;

        r5 = <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel Linear_sRGB_Pre>;

        goto label2;

     label1:
        r5 = <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel sRGB_Pre>;

     label2:
        $i1 = r3.<java.awt.Rectangle: int width>;

        $i0 = r3.<java.awt.Rectangle: int height>;

        $r4 = virtualinvoke r5.<java.awt.image.ColorModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>($i1, $i0);

        $i3 = r3.<java.awt.Rectangle: int x>;

        $i2 = r3.<java.awt.Rectangle: int y>;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: void init(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,java.awt.image.ColorModel,java.awt.image.SampleModel,int,int,java.util.Map)>(null, r3, r5, $r4, $i3, $i2, null);

        return;
    }

    public java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)
    {
        java.awt.image.SampleModel $r8;
        java.awt.image.DataBufferInt r5;
        short $s27, $s29, $s31, $s43, $s45, $s47;
        int[] r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, $i28, $i30, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41, i42, $i44, $i46, $i48, $i49, $i50, $i51, $i52, $i53, $i55, $i57, $i59, $i61, $i63, $i65;
        java.awt.image.WritableRaster r3;
        org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed r0;
        double[][][] $r11;
        double[][] r16, r17, r20;
        double[] $r2, r15, r18, r19, r21;
        java.awt.image.SinglePixelPackedSampleModel r9;
        org.apache.batik.ext.awt.image.Light $r1, $r12, $r13, $r14;
        int[][] $r6;
        boolean $z0, $z1;
        java.awt.image.DataBuffer $r4;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, d49, d50;
        org.apache.batik.ext.awt.image.rendered.BumpMap $r10;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed;

        r3 := @parameter0: java.awt.image.WritableRaster;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: org.apache.batik.ext.awt.image.Light light>;

        $z0 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: boolean linear>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.ext.awt.image.Light: double[] getColor(boolean)>($z0);

        $i0 = virtualinvoke r3.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke r3.<java.awt.image.Raster: int getHeight()>();

        $i2 = virtualinvoke r3.<java.awt.image.Raster: int getMinX()>();

        $i3 = virtualinvoke r3.<java.awt.image.Raster: int getMinY()>();

        $r4 = virtualinvoke r3.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r5 = (java.awt.image.DataBufferInt) $r4;

        $r6 = virtualinvoke r5.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        r7 = $r6[0];

        $r8 = virtualinvoke r3.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r9 = (java.awt.image.SinglePixelPackedSampleModel) $r8;

        $i4 = virtualinvoke r5.<java.awt.image.DataBuffer: int getOffset()>();

        $i5 = virtualinvoke r3.<java.awt.image.Raster: int getSampleModelTranslateX()>();

        $i6 = $i2 - $i5;

        $i7 = virtualinvoke r3.<java.awt.image.Raster: int getSampleModelTranslateY()>();

        $i8 = $i3 - $i7;

        $i9 = virtualinvoke r9.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>($i6, $i8);

        i10 = $i4 + $i9;

        $i11 = virtualinvoke r9.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        i12 = $i11 - $i0;

        i21 = i10;

        $d1 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: double scaleX>;

        $d0 = (double) $i2;

        d2 = $d1 * $d0;

        $d4 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: double scaleY>;

        $d3 = (double) $i3;

        d5 = $d4 * $d3;

        $r10 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: org.apache.batik.ext.awt.image.rendered.BumpMap bumpMap>;

        $r11 = virtualinvoke $r10.<org.apache.batik.ext.awt.image.rendered.BumpMap: double[][][] getNormalArray(int,int,int,int)>($i2, $i3, $i0, $i1);

        $r12 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: org.apache.batik.ext.awt.image.Light light>;

        $z1 = interfaceinvoke $r12.<org.apache.batik.ext.awt.image.Light: boolean isConstant()>();

        if $z1 != 0 goto label14;

        r16 = newmultiarray (double)[$i0][3];

        i22 = 0;

        goto label13;

     label01:
        r17 = $r11[i22];

        $r14 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: org.apache.batik.ext.awt.image.Light light>;

        $d26 = (double) i22;

        $d25 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: double scaleY>;

        $d27 = $d26 * $d25;

        $d29 = d5 + $d27;

        $d28 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: double scaleX>;

        interfaceinvoke $r14.<org.apache.batik.ext.awt.image.Light: double[][] getLightRow(double,double,double,int,double[][],double[][])>(d2, $d29, $d28, $i0, r17, r16);

        i23 = 0;

        goto label12;

     label02:
        r18 = r17[i23];

        r15 = r16[i23];

        $d30 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: double kd>;

        $d42 = 255.0 * $d30;

        $d32 = r18[0];

        $d31 = r15[0];

        $d36 = $d32 * $d31;

        $d34 = r18[1];

        $d33 = r15[1];

        $d35 = $d34 * $d33;

        $d40 = $d36 + $d35;

        $d38 = r18[2];

        $d37 = r15[2];

        $d39 = $d38 * $d37;

        $d41 = $d40 + $d39;

        d49 = $d42 * $d41;

        $d43 = $r2[0];

        $d44 = d49 * $d43;

        i24 = (int) $d44;

        $d45 = $r2[1];

        $d46 = d49 * $d45;

        i25 = (int) $d46;

        $d47 = $r2[2];

        $d48 = d49 * $d47;

        i26 = (int) $d48;

        $i55 = (int) -256;

        $i17 = i24 & $i55;

        if $i17 == 0 goto label05;

        $i20 = i24 & -2147483648;

        if $i20 == 0 goto label03;

        $s27 = 0;

        goto label04;

     label03:
        $s27 = 255;

     label04:
        i24 = $s27;

     label05:
        $i57 = (int) -256;

        $i28 = i25 & $i57;

        if $i28 == 0 goto label08;

        $i19 = i25 & -2147483648;

        if $i19 == 0 goto label06;

        $s29 = 0;

        goto label07;

     label06:
        $s29 = 255;

     label07:
        i25 = $s29;

     label08:
        $i59 = (int) -256;

        $i30 = i26 & $i59;

        if $i30 == 0 goto label11;

        $i18 = i26 & -2147483648;

        if $i18 == 0 goto label09;

        $s31 = 0;

        goto label10;

     label09:
        $s31 = 255;

     label10:
        i26 = $s31;

     label11:
        $i32 = i21;

        i21 = i21 + 1;

        $i33 = i24 << 16;

        $i34 = -16777216 | $i33;

        $i35 = i25 << 8;

        $i36 = $i34 | $i35;

        $i37 = $i36 | i26;

        r7[$i32] = $i37;

        i23 = i23 + 1;

     label12:
        if i23 < $i0 goto label02;

        i21 = i21 + i12;

        i22 = i22 + 1;

     label13:
        if i22 < $i1 goto label01;

        goto label28;

     label14:
        r19 = newarray (double)[3];

        $r13 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: org.apache.batik.ext.awt.image.Light light>;

        interfaceinvoke $r13.<org.apache.batik.ext.awt.image.Light: void getLight(double,double,double,double[])>(0.0, 0.0, 0.0, r19);

        i38 = 0;

        goto label27;

     label15:
        r20 = $r11[i38];

        i39 = 0;

        goto label26;

     label16:
        r21 = r20[i39];

        $d6 = r0.<org.apache.batik.ext.awt.image.rendered.DiffuseLightingRed: double kd>;

        $d18 = 255.0 * $d6;

        $d8 = r21[0];

        $d7 = r19[0];

        $d12 = $d8 * $d7;

        $d10 = r21[1];

        $d9 = r19[1];

        $d11 = $d10 * $d9;

        $d16 = $d12 + $d11;

        $d14 = r21[2];

        $d13 = r19[2];

        $d15 = $d14 * $d13;

        $d17 = $d16 + $d15;

        d50 = $d18 * $d17;

        $d19 = $r2[0];

        $d20 = d50 * $d19;

        i40 = (int) $d20;

        $d21 = $r2[1];

        $d22 = d50 * $d21;

        i41 = (int) $d22;

        $d23 = $r2[2];

        $d24 = d50 * $d23;

        i42 = (int) $d24;

        $i61 = (int) -256;

        $i13 = i40 & $i61;

        if $i13 == 0 goto label19;

        $i16 = i40 & -2147483648;

        if $i16 == 0 goto label17;

        $s43 = 0;

        goto label18;

     label17:
        $s43 = 255;

     label18:
        i40 = $s43;

     label19:
        $i63 = (int) -256;

        $i44 = i41 & $i63;

        if $i44 == 0 goto label22;

        $i15 = i41 & -2147483648;

        if $i15 == 0 goto label20;

        $s45 = 0;

        goto label21;

     label20:
        $s45 = 255;

     label21:
        i41 = $s45;

     label22:
        $i65 = (int) -256;

        $i46 = i42 & $i65;

        if $i46 == 0 goto label25;

        $i14 = i42 & -2147483648;

        if $i14 == 0 goto label23;

        $s47 = 0;

        goto label24;

     label23:
        $s47 = 255;

     label24:
        i42 = $s47;

     label25:
        $i48 = i21;

        i21 = i21 + 1;

        $i49 = i40 << 16;

        $i50 = -16777216 | $i49;

        $i51 = i41 << 8;

        $i52 = $i50 | $i51;

        $i53 = $i52 | i42;

        r7[$i48] = $i53;

        i39 = i39 + 1;

     label26:
        if i39 < $i0 goto label16;

        i21 = i21 + i12;

        i38 = i38 + 1;

     label27:
        if i38 < $i1 goto label15;

     label28:
        return r3;
    }
}
