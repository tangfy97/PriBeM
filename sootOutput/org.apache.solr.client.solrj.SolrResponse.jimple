public abstract class org.apache.solr.client.solrj.SolrResponse extends java.lang.Object implements java.io.Serializable
{

    public void <init>()
    {
        org.apache.solr.client.solrj.SolrResponse r0;

        r0 := @this: org.apache.solr.client.solrj.SolrResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract long getElapsedTime();

    public abstract void setResponse(org.apache.solr.common.util.NamedList);

    public abstract org.apache.solr.common.util.NamedList getResponse();

    public static byte[] serializable(org.apache.solr.client.solrj.SolrResponse)
    {
        byte[] $r3;
        org.apache.solr.common.SolrException $r5;
        java.io.ByteArrayOutputStream $r0;
        java.io.ObjectOutputStream $r1;
        org.apache.solr.client.solrj.SolrResponse r2;
        org.apache.solr.common.SolrException$ErrorCode $r6;
        java.lang.Exception $r4;

        r2 := @parameter0: org.apache.solr.client.solrj.SolrResponse;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.ObjectOutputStream;

        specialinvoke $r1.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r0);

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r2);

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.solr.common.SolrException;

        $r6 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVER_ERROR>;

        specialinvoke $r5.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.Throwable)>($r6, $r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.apache.solr.client.solrj.SolrResponse deserialize(byte[])
    {
        byte[] r1;
        java.io.ObjectInputStream $r2;
        org.apache.solr.common.SolrException$ErrorCode $r7;
        java.lang.Exception $r5;
        org.apache.solr.common.SolrException $r6;
        java.io.ByteArrayInputStream $r0;
        java.lang.Object $r3;
        org.apache.solr.client.solrj.SolrResponse $r4;

        r1 := @parameter0: byte[];

     label1:
        $r0 = new java.io.ByteArrayInputStream;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        $r2 = new java.io.ObjectInputStream;

        specialinvoke $r2.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r0);

        $r3 = virtualinvoke $r2.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r4 = (org.apache.solr.client.solrj.SolrResponse) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.solr.common.SolrException;

        $r7 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVER_ERROR>;

        specialinvoke $r6.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
