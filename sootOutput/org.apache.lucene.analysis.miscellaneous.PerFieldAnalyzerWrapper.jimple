public final class org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper extends org.apache.lucene.analysis.AnalyzerWrapper
{
    private final org.apache.lucene.analysis.Analyzer defaultAnalyzer;
    private final java.util.Map fieldAnalyzers;

    public void <init>(org.apache.lucene.analysis.Analyzer)
    {
        org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper r0;
        org.apache.lucene.analysis.Analyzer r1;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper;

        r1 := @parameter0: org.apache.lucene.analysis.Analyzer;

        specialinvoke r0.<org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper: void <init>(org.apache.lucene.analysis.Analyzer,java.util.Map)>(r1, null);

        return;
    }

    public void <init>(org.apache.lucene.analysis.Analyzer, java.util.Map)
    {
        org.apache.lucene.analysis.Analyzer r1;
        java.util.Map r2, $r3;
        org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper r0;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper;

        r1 := @parameter0: org.apache.lucene.analysis.Analyzer;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.AnalyzerWrapper: void <init>()>();

        r0.<org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper: org.apache.lucene.analysis.Analyzer defaultAnalyzer> = r1;

        if r2 == null goto label1;

        $r3 = r2;

        goto label2;

     label1:
        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label2:
        r0.<org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper: java.util.Map fieldAnalyzers> = $r3;

        return;
    }

    protected org.apache.lucene.analysis.Analyzer getWrappedAnalyzer(java.lang.String)
    {
        java.util.Map $r2;
        org.apache.lucene.analysis.Analyzer r4, $r5;
        org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper: java.util.Map fieldAnalyzers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.lucene.analysis.Analyzer) $r3;

        if r4 == null goto label1;

        $r5 = r4;

        goto label2;

     label1:
        $r5 = r0.<org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper: org.apache.lucene.analysis.Analyzer defaultAnalyzer>;

     label2:
        return $r5;
    }

    protected org.apache.lucene.analysis.Analyzer$TokenStreamComponents wrapComponents(java.lang.String, org.apache.lucene.analysis.Analyzer$TokenStreamComponents)
    {
        org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper r1;
        java.lang.String r2;
        org.apache.lucene.analysis.Analyzer$TokenStreamComponents r0;

        r1 := @this: org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.lucene.analysis.Analyzer$TokenStreamComponents;

        return r0;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.analysis.Analyzer $r6;
        org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper r2;
        java.util.Map $r3;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PerFieldAnalyzerWrapper(");

        $r3 = r2.<org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper: java.util.Map fieldAnalyzers>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", default=");

        $r6 = r2.<org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper: org.apache.lucene.analysis.Analyzer defaultAnalyzer>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
