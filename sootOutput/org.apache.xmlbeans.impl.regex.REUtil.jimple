public final class org.apache.xmlbeans.impl.regex.REUtil extends java.lang.Object
{
    static final int CACHESIZE;
    static final org.apache.xmlbeans.impl.regex.RegularExpression[] regexCache;

    private void <init>()
    {
        org.apache.xmlbeans.impl.regex.REUtil r0;

        r0 := @this: org.apache.xmlbeans.impl.regex.REUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static final int composeFromSurrogates(int, int)
    {
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i8, $i10;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $i8 = (int) 55296;

        $i1 = i0 - $i8;

        $i2 = $i1 << 10;

        $i4 = 65536 + $i2;

        $i5 = $i4 + i3;

        $i10 = (int) 56320;

        $i6 = $i5 - $i10;

        return $i6;
    }

    static final boolean isLowSurrogate(int)
    {
        int i0, $i1, $i3, $i5;
        boolean $z0;

        i0 := @parameter0: int;

        $i3 = (int) 64512;

        $i1 = i0 & $i3;

        $i5 = (int) 56320;

        if $i1 != $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static final boolean isHighSurrogate(int)
    {
        int i0, $i1, $i3, $i5;
        boolean $z0;

        i0 := @parameter0: int;

        $i3 = (int) 64512;

        $i1 = i0 & $i3;

        $i5 = (int) 55296;

        if $i1 != $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static final java.lang.String decomposeToSurrogates(int)
    {
        char $c2, $c5;
        int $i0, $i1, $i3, $i4, i6, i7, $i9, $i11;
        char[] r0;
        java.lang.String $r2;

        i6 := @parameter0: int;

        r0 = newarray (char)[2];

        i7 = i6 - 65536;

        $i0 = i7 >> 10;

        $i9 = (int) 55296;

        $i1 = $i0 + $i9;

        $c2 = (char) $i1;

        r0[0] = $c2;

        $i3 = i7 & 1023;

        $i11 = (int) 56320;

        $i4 = $i3 + $i11;

        $c5 = (char) $i4;

        r0[1] = $c5;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r0);

        return $r2;
    }

    static final java.lang.String substring(java.text.CharacterIterator, int, int)
    {
        java.text.CharacterIterator r2;
        char $c5;
        int i0, i1, $i2, $i3, $i4, i6;
        char[] r0;
        java.lang.String $r1;

        r2 := @parameter0: java.text.CharacterIterator;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $i2 = i0 - i1;

        r0 = newarray (char)[$i2];

        i6 = 0;

     label1:
        $i3 = lengthof r0;

        if i6 >= $i3 goto label2;

        $i4 = i6 + i1;

        $c5 = interfaceinvoke r2.<java.text.CharacterIterator: char setIndex(int)>($i4);

        r0[i6] = $c5;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);

        return $r1;
    }

    static final int getOptionValue(int)
    {
        int i0;
        short s1;

        i0 := @parameter0: int;

        s1 = 0;

        lookupswitch(i0)
        {
            case 44: goto label10;
            case 70: goto label07;
            case 72: goto label08;
            case 88: goto label09;
            case 105: goto label01;
            case 109: goto label02;
            case 115: goto label03;
            case 117: goto label05;
            case 119: goto label06;
            case 120: goto label04;
            default: goto label11;
        };

     label01:
        s1 = 2;

        goto label11;

     label02:
        s1 = 8;

        goto label11;

     label03:
        s1 = 4;

        goto label11;

     label04:
        s1 = 16;

        goto label11;

     label05:
        s1 = 32;

        goto label11;

     label06:
        s1 = 64;

        goto label11;

     label07:
        s1 = 256;

        goto label11;

     label08:
        s1 = 128;

        goto label11;

     label09:
        s1 = 512;

        goto label11;

     label10:
        s1 = 1024;

        goto label11;

     label11:
        return s1;
    }

    static final int parseOptions(java.lang.String) throws org.apache.xmlbeans.impl.regex.ParseException
    {
        char $c1;
        org.apache.xmlbeans.impl.regex.ParseException $r8;
        java.lang.StringBuffer $r3, $r5, $r7;
        int $i0, $i2, i3, i4, $i5, $i7;
        java.lang.String r0, $r4, $r6;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 0;

        i4 = 0;

     label2:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c1;

        $i2 = staticinvoke <org.apache.xmlbeans.impl.regex.REUtil: int getOptionValue(int)>($i5);

        if $i2 != 0 goto label3;

        $r8 = new org.apache.xmlbeans.impl.regex.ParseException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown Option: ");

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i4);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $i7 = (int) -1;

        specialinvoke $r8.<org.apache.xmlbeans.impl.regex.ParseException: void <init>(java.lang.String,int)>($r6, $i7);

        throw $r8;

     label3:
        i3 = i3 | $i2;

        i4 = i4 + 1;

        goto label2;

     label4:
        return i3;
    }

    static final java.lang.String createOptionString(int)
    {
        java.lang.StringBuffer $r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r1, $r2;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(9);

        $i1 = i0 & 256;

        if $i1 == 0 goto label01;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(70);

     label01:
        $i2 = i0 & 128;

        if $i2 == 0 goto label02;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(72);

     label02:
        $i3 = i0 & 512;

        if $i3 == 0 goto label03;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(88);

     label03:
        $i4 = i0 & 2;

        if $i4 == 0 goto label04;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(105);

     label04:
        $i5 = i0 & 8;

        if $i5 == 0 goto label05;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(109);

     label05:
        $i6 = i0 & 4;

        if $i6 == 0 goto label06;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(115);

     label06:
        $i7 = i0 & 32;

        if $i7 == 0 goto label07;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(117);

     label07:
        $i8 = i0 & 64;

        if $i8 == 0 goto label08;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(119);

     label08:
        $i9 = i0 & 16;

        if $i9 == 0 goto label09;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(120);

     label09:
        $i10 = i0 & 1024;

        if $i10 == 0 goto label10;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label10:
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String intern()>();

        return $r2;
    }

    static java.lang.String stripExtendedComment(java.lang.String)
    {
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i6, i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.String r0, $r2;
        char $c2, $c3, $c4, $c5, $c7, $c9;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i0);

        i8 = 0;

     label1:
        if i8 >= $i0 goto label9;

        $i1 = i8;

        i8 = i8 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1);

        $i10 = (int) $c2;

        if $i10 == 9 goto label1;

        $i11 = (int) $c2;

        if $i11 == 10 goto label1;

        $i12 = (int) $c2;

        if $i12 == 12 goto label1;

        $i13 = (int) $c2;

        if $i13 == 13 goto label1;

        $i14 = (int) $c2;

        if $i14 != 32 goto label2;

        goto label1;

     label2:
        $i15 = (int) $c2;

        if $i15 != 35 goto label4;

     label3:
        if i8 >= $i0 goto label1;

        $i6 = i8;

        i8 = i8 + 1;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i16 = (int) $c7;

        if $i16 == 13 goto label1;

        $i17 = (int) $c7;

        if $i17 != 10 goto label3;

        goto label1;

     label4:
        $i18 = (int) $c2;

        if $i18 != 92 goto label7;

        if i8 >= $i0 goto label7;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $i19 = (int) $c4;

        if $i19 == 35 goto label5;

        $i20 = (int) $c4;

        if $i20 == 9 goto label5;

        $i21 = (int) $c4;

        if $i21 == 10 goto label5;

        $i22 = (int) $c4;

        if $i22 == 12 goto label5;

        $i23 = (int) $c4;

        if $i23 == 13 goto label5;

        $i24 = (int) $c4;

        if $i24 != 32 goto label6;

     label5:
        $c9 = (char) $c4;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        i8 = i8 + 1;

        goto label8;

     label6:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        $c5 = (char) $c4;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        i8 = i8 + 1;

        goto label8;

     label7:
        $c3 = (char) $c2;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label8:
        goto label1;

     label9:
        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Exception $r69;
        java.lang.StringBuffer $r4, $r5, $r10, $r11, $r12, $r16, $r17, $r18, $r19, $r23, $r25, $r26, $r33, $r35, $r46, $r48, $r51, $r52, $r54, $r55, $r57, $r58, $r60, $r61, $r63, $r64, $r66, $r67, $r73, $r75, $r79, $r80, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r97, $r99, $r100, $r101, $r102, $r103;
        java.lang.String $r6, $r13, $r20, $r24, $r27, $r30, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r47, $r49, $r74, $r76, $r81, r85, r86, r87;
        org.apache.xmlbeans.impl.regex.RegularExpression $r96;
        org.apache.xmlbeans.impl.regex.Match $r98;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.regex.ParseException $r70;
        java.lang.String[] r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, i8, $i9, i10, i11, $i12;
        java.io.PrintStream $r3, $r9, $r15, $r22, $r28, $r29, $r32, $r45, $r68, $r72, $r78, $r82, $r83, $r84;
        char $c6;

        r0 := @parameter0: java.lang.String[];

        r85 = null;

     label01:
        r86 = "";

        r87 = null;

        $i0 = lengthof r0;

        if $i0 != 0 goto label02;

        $r68 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>("Error:Usage: java REUtil -i|-m|-s|-u|-w|-X regularExpression String");

        staticinvoke <java.lang.System: void exit(int)>(0);

     label02:
        i8 = 0;

     label03:
        $i9 = lengthof r0;

        if i8 >= $i9 goto label15;

        $r30 = r0[i8];

        $i5 = virtualinvoke $r30.<java.lang.String: int length()>();

        if $i5 == 0 goto label04;

        $r37 = r0[i8];

        $c6 = virtualinvoke $r37.<java.lang.String: char charAt(int)>(0);

        $i12 = (int) $c6;

        if $i12 == 45 goto label07;

     label04:
        if r85 != null goto label05;

        r85 = r0[i8];

        goto label14;

     label05:
        if r87 != null goto label06;

        r87 = r0[i8];

        goto label14;

     label06:
        $r32 = <java.lang.System: java.io.PrintStream err>;

        $r88 = new java.lang.StringBuffer;

        specialinvoke $r88.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unnecessary: ");

        $r34 = r0[i8];

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36);

        goto label14;

     label07:
        $r38 = r0[i8];

        $z0 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>("-i");

        if $z0 == 0 goto label08;

        $r89 = new java.lang.StringBuffer;

        specialinvoke $r89.<java.lang.StringBuffer: void <init>()>();

        $r66 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r86);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("i");

        r86 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label14;

     label08:
        $r39 = r0[i8];

        $z1 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>("-m");

        if $z1 == 0 goto label09;

        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

        $r63 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r86);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("m");

        r86 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label14;

     label09:
        $r40 = r0[i8];

        $z2 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z2 == 0 goto label10;

        $r91 = new java.lang.StringBuffer;

        specialinvoke $r91.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r86);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        r86 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label14;

     label10:
        $r41 = r0[i8];

        $z3 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>("-u");

        if $z3 == 0 goto label11;

        $r92 = new java.lang.StringBuffer;

        specialinvoke $r92.<java.lang.StringBuffer: void <init>()>();

        $r57 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r86);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("u");

        r86 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label14;

     label11:
        $r42 = r0[i8];

        $z4 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>("-w");

        if $z4 == 0 goto label12;

        $r93 = new java.lang.StringBuffer;

        specialinvoke $r93.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r86);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("w");

        r86 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label14;

     label12:
        $r43 = r0[i8];

        $z5 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("-X");

        if $z5 == 0 goto label13;

        $r94 = new java.lang.StringBuffer;

        specialinvoke $r94.<java.lang.StringBuffer: void <init>()>();

        $r51 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r86);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("X");

        r86 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label14;

     label13:
        $r45 = <java.lang.System: java.io.PrintStream err>;

        $r95 = new java.lang.StringBuffer;

        specialinvoke $r95.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown option: ");

        $r47 = r0[i8];

        $r48 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r49);

     label14:
        i8 = i8 + 1;

        goto label03;

     label15:
        $r96 = new org.apache.xmlbeans.impl.regex.RegularExpression;

        specialinvoke $r96.<org.apache.xmlbeans.impl.regex.RegularExpression: void <init>(java.lang.String,java.lang.String)>(r85, r86);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r97 = new java.lang.StringBuffer;

        specialinvoke $r97.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RegularExpression: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r96);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r98 = new org.apache.xmlbeans.impl.regex.Match;

        specialinvoke $r98.<org.apache.xmlbeans.impl.regex.Match: void <init>()>();

        virtualinvoke $r96.<org.apache.xmlbeans.impl.regex.RegularExpression: boolean matches(java.lang.String,org.apache.xmlbeans.impl.regex.Match)>(r87, $r98);

        i10 = 0;

     label16:
        $i1 = virtualinvoke $r98.<org.apache.xmlbeans.impl.regex.Match: int getNumberOfGroups()>();

        if i10 >= $i1 goto label21;

        if i10 != 0 goto label17;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r29.<java.io.PrintStream: void print(java.lang.String)>("Matched range for the whole pattern: ");

        goto label18;

     label17:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r99 = new java.lang.StringBuffer;

        specialinvoke $r99.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>($r13);

     label18:
        $i2 = virtualinvoke $r98.<org.apache.xmlbeans.impl.regex.Match: int getBeginning(int)>(i10);

        if $i2 >= 0 goto label19;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("-1");

        goto label20;

     label19:
        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r100 = new java.lang.StringBuffer;

        specialinvoke $r100.<java.lang.StringBuffer: void <init>()>();

        $i3 = virtualinvoke $r98.<org.apache.xmlbeans.impl.regex.Match: int getBeginning(int)>(i10);

        $r16 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $i4 = virtualinvoke $r98.<org.apache.xmlbeans.impl.regex.Match: int getEnd(int)>(i10);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void print(java.lang.String)>($r20);

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r101 = new java.lang.StringBuffer;

        specialinvoke $r101.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r24 = virtualinvoke $r98.<org.apache.xmlbeans.impl.regex.Match: java.lang.String getCapturedText(int)>(i10);

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label20:
        i10 = i10 + 1;

        goto label16;

     label21:
        goto label28;

     label22:
        $r70 := @caughtexception;

        if r85 != null goto label23;

        virtualinvoke $r70.<org.apache.xmlbeans.impl.regex.ParseException: void printStackTrace()>();

        goto label26;

     label23:
        $r72 = <java.lang.System: java.io.PrintStream err>;

        $r102 = new java.lang.StringBuffer;

        specialinvoke $r102.<java.lang.StringBuffer: void <init>()>();

        $r73 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.apache.xerces.utils.regex.ParseException: ");

        $r74 = virtualinvoke $r70.<org.apache.xmlbeans.impl.regex.ParseException: java.lang.String getMessage()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>($r76);

        $r78 = <java.lang.System: java.io.PrintStream err>;

        $r103 = new java.lang.StringBuffer;

        specialinvoke $r103.<java.lang.StringBuffer: void <init>()>();

        $r79 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("        ");

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r85);

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>($r81);

        $i7 = virtualinvoke $r70.<org.apache.xmlbeans.impl.regex.ParseException: int getLocation()>();

        if $i7 < 0 goto label26;

        $r82 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r82.<java.io.PrintStream: void print(java.lang.String)>("        ");

        i11 = 0;

     label24:
        if i11 >= $i7 goto label25;

        $r84 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r84.<java.io.PrintStream: void print(java.lang.String)>("-");

        i11 = i11 + 1;

        goto label24;

     label25:
        $r83 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>("^");

     label26:
        goto label28;

     label27:
        $r69 := @caughtexception;

        virtualinvoke $r69.<java.lang.Exception: void printStackTrace()>();

     label28:
        return;

        catch org.apache.xmlbeans.impl.regex.ParseException from label01 to label21 with label22;
        catch java.lang.Exception from label01 to label21 with label27;
    }

    public static org.apache.xmlbeans.impl.regex.RegularExpression createRegex(java.lang.String, java.lang.String) throws org.apache.xmlbeans.impl.regex.ParseException
    {
        org.apache.xmlbeans.impl.regex.RegularExpression r11, r13, $r14;
        java.lang.Throwable $r12;
        int $i0, i1, $i3;
        java.lang.String r0, r3;
        boolean $z0;
        org.apache.xmlbeans.impl.regex.RegularExpression[] $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r13 = null;

        $i0 = staticinvoke <org.apache.xmlbeans.impl.regex.REUtil: int parseOptions(java.lang.String)>(r0);

        $r1 = <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression[] regexCache>;

        entermonitor $r1;

     label01:
        i1 = 0;

     label02:
        if i1 >= 20 goto label05;

        $r10 = <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression[] regexCache>;

        r11 = $r10[i1];

        if r11 != null goto label03;

        $i3 = (int) -1;

        i1 = $i3;

        goto label05;

     label03:
        $z0 = virtualinvoke r11.<org.apache.xmlbeans.impl.regex.RegularExpression: boolean equals(java.lang.String,int)>(r3, $i0);

        if $z0 == 0 goto label04;

        r13 = r11;

        goto label05;

     label04:
        i1 = i1 + 1;

        goto label02;

     label05:
        if r13 == null goto label06;

        if i1 == 0 goto label07;

        $r8 = <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression[] regexCache>;

        $r7 = <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression[] regexCache>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 1, i1);

        $r9 = <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression[] regexCache>;

        $r9[0] = r13;

        goto label07;

     label06:
        $r14 = new org.apache.xmlbeans.impl.regex.RegularExpression;

        specialinvoke $r14.<org.apache.xmlbeans.impl.regex.RegularExpression: void <init>(java.lang.String,java.lang.String)>(r3, r0);

        r13 = $r14;

        $r5 = <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression[] regexCache>;

        $r4 = <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression[] regexCache>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 1, 19);

        $r6 = <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression[] regexCache>;

        $r6[0] = $r14;

     label07:
        exitmonitor $r1;

     label08:
        goto label11;

     label09:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r12;

     label11:
        return r13;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static boolean matches(java.lang.String, java.lang.String) throws org.apache.xmlbeans.impl.regex.ParseException
    {
        org.apache.xmlbeans.impl.regex.RegularExpression $r1;
        java.lang.String r0, r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression createRegex(java.lang.String,java.lang.String)>(r0, null);

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.regex.RegularExpression: boolean matches(java.lang.String)>(r2);

        return $z0;
    }

    public static boolean matches(java.lang.String, java.lang.String, java.lang.String) throws org.apache.xmlbeans.impl.regex.ParseException
    {
        org.apache.xmlbeans.impl.regex.RegularExpression $r2;
        java.lang.String r0, r1, r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression createRegex(java.lang.String,java.lang.String)>(r0, r1);

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.regex.RegularExpression: boolean matches(java.lang.String)>(r3);

        return $z0;
    }

    public static java.lang.String quoteMeta(java.lang.String)
    {
        java.lang.StringBuffer r4, $r6;
        int $i0, $i2, $i4, $i5, $i6, i7, $i9;
        java.lang.String r0, $r1, $r3, $r5;
        char $c1, $c3, $c8;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r4 = null;

        i7 = 0;

     label1:
        if i7 >= $i0 goto label5;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $r1 = ".*+?{[()|\\^$";

        $i9 = (int) $c1;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($i9);

        if $i2 < 0 goto label3;

        if r4 != null goto label2;

        $r6 = new java.lang.StringBuffer;

        $i4 = $i0 - i7;

        $i5 = $i4 * 2;

        $i6 = i7 + $i5;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(int)>($i6);

        r4 = $r6;

        if i7 <= 0 goto label2;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i7);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label2:
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        $c8 = (char) $c1;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        goto label4;

     label3:
        if r4 == null goto label4;

        $c3 = (char) $c1;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        if r4 == null goto label6;

        $r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label7;

     label6:
        $r5 = r0;

     label7:
        return $r5;
    }

    static void dumpString(java.lang.String)
    {
        java.io.PrintStream $r1, $r2, $r4;
        char $c1;
        int $i0, i2, $i3;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label2;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>($r3);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>(" ");

        i2 = i2 + 1;

        goto label1;

     label2:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.impl.regex.RegularExpression[] $r0;

        <org.apache.xmlbeans.impl.regex.REUtil: int CACHESIZE> = 20;

        $r0 = newarray (org.apache.xmlbeans.impl.regex.RegularExpression)[20];

        <org.apache.xmlbeans.impl.regex.REUtil: org.apache.xmlbeans.impl.regex.RegularExpression[] regexCache> = $r0;

        return;
    }
}
