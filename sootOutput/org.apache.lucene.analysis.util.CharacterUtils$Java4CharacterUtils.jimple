final class org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils extends org.apache.lucene.analysis.util.CharacterUtils
{

    void <init>()
    {
        org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils r0;

        r0 := @this: org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils;

        specialinvoke r0.<org.apache.lucene.analysis.util.CharacterUtils: void <init>()>();

        return;
    }

    public int codePointAt(char[], int)
    {
        org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils r1;
        int i0, $i2;
        char[] r0;
        char $c1;

        r1 := @this: org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        $c1 = r0[i0];

        $i2 = (int) $c1;

        return $i2;
    }

    public int codePointAt(java.lang.CharSequence, int)
    {
        org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils r1;
        java.lang.CharSequence r0;
        int i0, $i2;
        char $c1;

        r1 := @this: org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);

        $i2 = (int) $c1;

        return $i2;
    }

    public int codePointAt(char[], int, int)
    {
        org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils r2;
        java.lang.IndexOutOfBoundsException $r3;
        int i0, i1, $i3;
        char[] r0;
        char $c2;

        r2 := @this: org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 < i1 goto label1;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("offset must be less than limit");

        throw $r3;

     label1:
        $c2 = r0[i0];

        $i3 = (int) $c2;

        return $i3;
    }

    public boolean fill(org.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer, java.io.Reader) throws java.io.IOException
    {
        org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils r3;
        int $i0, $i2;
        char[] $r2;
        java.io.Reader r1;
        org.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer r0;

        r3 := @this: org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils;

        r0 := @parameter0: org.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer;

        r1 := @parameter1: java.io.Reader;

        staticinvoke <org.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer: int access$102(org.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer,int)>(r0, 0);

        $r2 = staticinvoke <org.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer: char[] access$000(org.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer)>(r0);

        $i0 = virtualinvoke r1.<java.io.Reader: int read(char[])>($r2);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return 0;

     label1:
        staticinvoke <org.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer: int access$202(org.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer,int)>(r0, $i0);

        return 1;
    }
}
