public abstract class org.apache.xmlbeans.impl.values.JavaStringHolderEx extends org.apache.xmlbeans.impl.values.JavaStringHolder
{
    private org.apache.xmlbeans.SchemaType _schemaType;

    public org.apache.xmlbeans.SchemaType schemaType()
    {
        org.apache.xmlbeans.SchemaType $r1;
        org.apache.xmlbeans.impl.values.JavaStringHolderEx r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaStringHolderEx;

        $r1 = r0.<org.apache.xmlbeans.impl.values.JavaStringHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        return $r1;
    }

    public void <init>(org.apache.xmlbeans.SchemaType, boolean)
    {
        org.apache.xmlbeans.SchemaType r1;
        org.apache.xmlbeans.impl.values.JavaStringHolderEx r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaStringHolderEx;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaStringHolder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.JavaStringHolderEx: org.apache.xmlbeans.SchemaType _schemaType> = r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaStringHolderEx: void initComplexType(boolean,boolean)>(z0, 0);

        return;
    }

    protected int get_wscanon_rule()
    {
        int $i0;
        org.apache.xmlbeans.SchemaType $r1;
        org.apache.xmlbeans.impl.values.JavaStringHolderEx r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaStringHolderEx;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaStringHolderEx: org.apache.xmlbeans.SchemaType schemaType()>();

        $i0 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: int getWhiteSpaceRule()>();

        return $i0;
    }

    protected void set_text(java.lang.String)
    {
        org.apache.xmlbeans.impl.common.ValidationContext $r2;
        java.lang.String r1;
        org.apache.xmlbeans.SchemaType $r3;
        org.apache.xmlbeans.impl.values.JavaStringHolderEx r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaStringHolderEx;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaStringHolderEx: boolean _validateOnSet()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.values.JavaStringHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r2 = <org.apache.xmlbeans.impl.values.JavaStringHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaStringHolderEx: void validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r1, $r3, $r2);

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaStringHolder: void set_text(java.lang.String)>(r1);

        return;
    }

    protected boolean is_defaultable_ws(java.lang.String)
    {
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r4;
        org.apache.xmlbeans.impl.common.ValidationContext $r2;
        java.lang.String r0;
        org.apache.xmlbeans.SchemaType $r3;
        org.apache.xmlbeans.impl.values.JavaStringHolderEx r1;

        r1 := @this: org.apache.xmlbeans.impl.values.JavaStringHolderEx;

        r0 := @parameter0: java.lang.String;

     label1:
        $r3 = r1.<org.apache.xmlbeans.impl.values.JavaStringHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r2 = <org.apache.xmlbeans.impl.values.JavaStringHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaStringHolderEx: void validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, $r3, $r2);

     label2:
        return 0;

     label3:
        $r4 := @caughtexception;

        return 1;

        catch org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException from label1 to label2 with label3;
    }

    public static void validateLexical(java.lang.String, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r11, $r17, $r23;
        java.lang.Integer $r14, $r15, $r20, $r21, $r26, $r27;
        java.math.BigInteger $r12, $r18, $r24;
        org.apache.xmlbeans.SchemaType r0;
        boolean $z0, $z1;
        org.apache.xmlbeans.XmlAnySimpleType $r2, $r3, $r4, $r9;
        java.lang.Object[] $r7, $r13, $r19, $r25, $r29;
        org.apache.xmlbeans.XmlAnySimpleType[] $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.lang.String r1, $r8, $r10, $r16, $r22, $r28, $r30;
        org.apache.xmlbeans.impl.common.ValidationContext r6;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.xmlbeans.SchemaType;

        r6 := @parameter2: org.apache.xmlbeans.impl.common.ValidationContext;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean matchPatternFacet(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r29 = newarray (java.lang.Object)[3];

        $r29[0] = "string";

        $r29[1] = r1;

        $r30 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r29[2] = $r30;

        interfaceinvoke r6.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-datatype-valid.1.1", $r29);

        return;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(0);

        if $r2 == null goto label2;

        $r23 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r2;

        $r24 = virtualinvoke $r23.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigInteger bigIntegerValue()>();

        $i7 = virtualinvoke $r24.<java.math.BigInteger: int intValue()>();

        $i8 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i8 == $i7 goto label2;

        $r25 = newarray (java.lang.Object)[4];

        $r25[0] = "string";

        $r26 = new java.lang.Integer;

        $i9 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r26.<java.lang.Integer: void <init>(int)>($i9);

        $r25[1] = $r26;

        $r27 = new java.lang.Integer;

        specialinvoke $r27.<java.lang.Integer: void <init>(int)>($i7);

        $r25[2] = $r27;

        $r28 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r25[3] = $r28;

        interfaceinvoke r6.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-length-valid.1.1", $r25);

        return;

     label2:
        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(1);

        if $r3 == null goto label3;

        $r17 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r3;

        $r18 = virtualinvoke $r17.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigInteger bigIntegerValue()>();

        $i4 = virtualinvoke $r18.<java.math.BigInteger: int intValue()>();

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 >= $i4 goto label3;

        $r19 = newarray (java.lang.Object)[4];

        $r19[0] = "string";

        $r20 = new java.lang.Integer;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>($i6);

        $r19[1] = $r20;

        $r21 = new java.lang.Integer;

        specialinvoke $r21.<java.lang.Integer: void <init>(int)>($i4);

        $r19[2] = $r21;

        $r22 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r19[3] = $r22;

        interfaceinvoke r6.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-minLength-valid.1.1", $r19);

        return;

     label3:
        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(2);

        if $r4 == null goto label4;

        $r11 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r4;

        $r12 = virtualinvoke $r11.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigInteger bigIntegerValue()>();

        $i1 = virtualinvoke $r12.<java.math.BigInteger: int intValue()>();

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 <= $i1 goto label4;

        $r13 = newarray (java.lang.Object)[4];

        $r13[0] = "string";

        $r14 = new java.lang.Integer;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r14.<java.lang.Integer: void <init>(int)>($i3);

        $r13[1] = $r14;

        $r15 = new java.lang.Integer;

        specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i1);

        $r13[2] = $r15;

        $r16 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r13[3] = $r16;

        interfaceinvoke r6.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-maxLength-valid.1.1", $r13);

        return;

     label4:
        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType[] getEnumerationValues()>();

        if $r5 == null goto label8;

        i10 = 0;

     label5:
        $i0 = lengthof $r5;

        if i10 >= $i0 goto label7;

        $r9 = $r5[i10];

        $r10 = interfaceinvoke $r9.<org.apache.xmlbeans.XmlAnySimpleType: java.lang.String getStringValue()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label6;

        return;

     label6:
        i10 = i10 + 1;

        goto label5;

     label7:
        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = "string";

        $r7[1] = r1;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r7[2] = $r8;

        interfaceinvoke r6.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-enumeration-valid", $r7);

     label8:
        return;
    }

    protected void validate_simpleval(java.lang.String, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        org.apache.xmlbeans.impl.common.ValidationContext r3;
        java.lang.String $r1, r4;
        org.apache.xmlbeans.SchemaType $r2;
        org.apache.xmlbeans.impl.values.JavaStringHolderEx r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaStringHolderEx;

        r4 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.xmlbeans.impl.common.ValidationContext;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaStringHolderEx: java.lang.String stringValue()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaStringHolderEx: org.apache.xmlbeans.SchemaType schemaType()>();

        staticinvoke <org.apache.xmlbeans.impl.values.JavaStringHolderEx: void validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>($r1, $r2, r3);

        return;
    }
}
