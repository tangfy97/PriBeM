final class com.mycila.inject.internal.guava.io.CharStreams$1 extends java.lang.Object implements com.mycila.inject.internal.guava.io.InputSupplier
{
    final java.lang.String val$value;

    void <init>(java.lang.String)
    {
        com.mycila.inject.internal.guava.io.CharStreams$1 r0;
        java.lang.String r1;

        r0 := @this: com.mycila.inject.internal.guava.io.CharStreams$1;

        r1 := @parameter0: java.lang.String;

        r0.<com.mycila.inject.internal.guava.io.CharStreams$1: java.lang.String val$value> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.io.StringReader getInput()
    {
        com.mycila.inject.internal.guava.io.CharStreams$1 r1;
        java.lang.String $r2;
        java.io.StringReader $r0;

        r1 := @this: com.mycila.inject.internal.guava.io.CharStreams$1;

        $r0 = new java.io.StringReader;

        $r2 = r1.<com.mycila.inject.internal.guava.io.CharStreams$1: java.lang.String val$value>;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>($r2);

        return $r0;
    }

    public volatile java.lang.Object getInput() throws java.io.IOException
    {
        com.mycila.inject.internal.guava.io.CharStreams$1 r0;
        java.io.StringReader $r1;

        r0 := @this: com.mycila.inject.internal.guava.io.CharStreams$1;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.io.CharStreams$1: java.io.StringReader getInput()>();

        return $r1;
    }
}
