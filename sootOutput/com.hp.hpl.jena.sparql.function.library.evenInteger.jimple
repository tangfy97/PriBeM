public class com.hp.hpl.jena.sparql.function.library.evenInteger extends com.hp.hpl.jena.sparql.function.FunctionBase1
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.function.library.evenInteger r0;

        r0 := @this: com.hp.hpl.jena.sparql.function.library.evenInteger;

        specialinvoke r0.<com.hp.hpl.jena.sparql.function.FunctionBase1: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue exec(com.hp.hpl.jena.sparql.expr.NodeValue)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue r0, $r2;
        com.hp.hpl.jena.sparql.function.library.evenInteger r8;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r10;
        int $i0, $i2;
        java.math.BigInteger $r1;
        java.lang.StringBuilder $r5, $r6, $r9;
        java.lang.String $r7;
        boolean $z0, $z1;

        r8 := @this: com.hp.hpl.jena.sparql.function.library.evenInteger;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.NodeValue;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: boolean isInteger()>();

        if $z0 != 0 goto label1;

        $r10 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("evenInteger: Not an intger: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r7);

        throw $r10;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: java.math.BigInteger getInteger()>();

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int getLowestSetBit()>();

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        if $i0 == 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r2 = staticinvoke <com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.sparql.expr.NodeValue makeNodeBoolean(boolean)>($z1);

        return $r2;
    }
}
