public class org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner extends java.lang.Object implements java.lang.Runnable
{
    java.lang.Process process;
    private boolean finished;

    public void <init>(java.lang.Process)
    {
        org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner r0;
        java.lang.Process r1;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner;

        r1 := @parameter0: java.lang.Process;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner: java.lang.Process process> = r1;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r2;
        java.lang.Process $r1;
        java.lang.InterruptedException $r3;
        org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner r0;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner;

     label1:
        $r1 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner: java.lang.Process process>;

        virtualinvoke $r1.<java.lang.Process: int waitFor()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        entermonitor r0;

     label5:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner: boolean finished> = 1;

        exitmonitor r0;

     label6:
        goto label9;

     label7:
        $r2 := @caughtexception;

        exitmonitor r0;

     label8:
        throw $r2;

     label9:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public synchronized void waitForOrKill(long)
    {
        java.lang.Process $r1;
        java.lang.InterruptedException $r2;
        long l0;
        org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner r0;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner;

        l0 := @parameter0: long;

        $z0 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner: boolean finished>;

        if $z0 != 0 goto label5;

     label1:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(l0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        $z1 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner: boolean finished>;

        if $z1 != 0 goto label5;

        $r1 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$ProcessRunner: java.lang.Process process>;

        virtualinvoke $r1.<java.lang.Process: void destroy()>();

     label5:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
