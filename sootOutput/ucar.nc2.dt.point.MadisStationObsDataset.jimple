public class ucar.nc2.dt.point.MadisStationObsDataset extends ucar.nc2.dt.point.StationObsDatasetImpl implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private ucar.nc2.Structure recordVar;
    private ucar.nc2.dt.point.RecordDatasetHelper recordHelper;
    private java.lang.String obsTimeVName;
    private java.lang.String nomTimeVName;
    private java.lang.String stnIdVName;
    private java.lang.String stnDescVName;
    private java.lang.String altVName;
    private boolean debug;
    private boolean debugLinks;

    public static boolean isValidFile(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r7, $r8, $r9;
        ucar.nc2.Variable $r1, $r2, $r3, $r4, $r5, $r6;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r10;
        boolean $z0, $z1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("staticIds");

        if $r1 != null goto label01;

        return 0;

     label01:
        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("nStaticIds");

        if $r2 != null goto label02;

        return 0;

     label02:
        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("lastRecord");

        if $r3 != null goto label03;

        return 0;

     label03:
        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("prevRecord");

        if $r4 != null goto label04;

        return 0;

     label04:
        $r5 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("latitude");

        if $r5 != null goto label05;

        return 0;

     label05:
        $r6 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("longitude");

        if $r6 != null goto label06;

        return 0;

     label06:
        $z0 = virtualinvoke r0.<ucar.nc2.NetcdfFile: boolean hasUnlimitedDimension()>();

        if $z0 != 0 goto label07;

        return 0;

     label07:
        $r7 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("timeVariables");

        if $r7 != null goto label08;

        return 0;

     label08:
        $r8 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("idVariables");

        if $r8 != null goto label09;

        return 0;

     label09:
        $r9 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("title");

        if $r9 == null goto label10;

        $r10 = virtualinvoke $r9.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("MADIS ACARS data");

        if $z1 == 0 goto label10;

        return 0;

     label10:
        return 1;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dt.point.MadisStationObsDataset r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.point.MadisStationObsDataset: boolean isValidFile(ucar.nc2.NetcdfFile)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dt.point.MadisStationObsDataset $r0, r2;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r2 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.point.MadisStationObsDataset;

        specialinvoke $r0.<ucar.nc2.dt.point.MadisStationObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.point.MadisStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>()>();

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: boolean debug> = 0;

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: boolean debugLinks> = 0;

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dt.point.MadisStationObsDataset r0;
        java.util.Map $r62, $r66;
        java.lang.StringBuilder $r45, $r47, $r49, $r50, $r51, $r68, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r78, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r88, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r99, $r101, $r104, $r114, $r116, $r117, $r118, $r119, $r120;
        java.util.StringTokenizer $r3, $r7;
        java.lang.StringBuffer $r14, $r69, $r79, $r89, $r115;
        ucar.ma2.Array $r29, $r31, $r39;
        ucar.ma2.ArrayInt$D1 $r106, $r107;
        ucar.ma2.InvalidRangeException $r113;
        java.util.Date $r42, $r44;
        ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl $r64, $r98;
        ucar.ma2.MAMath$MinMax $r40;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        ucar.nc2.Variable $r5, $r11, $r12, $r28, $r30, $r32, $r35, $r38, $r109, $r111;
        java.io.PrintStream $r46, $r100, $r108, $r110, $r112;
        java.lang.Object $r63;
        ucar.nc2.Structure $r36, $r53;
        java.lang.String $r2, $r4, $r6, $r8, $r9, $r10, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r37, $r52, $r55, $r56, $r57, $r58, $r59, $r60, $r77, $r87, $r97, $r103, $r105, $r121, $r122;
        ucar.nc2.units.DateUnit $r27, $r41, $r43;
        ucar.nc2.dataset.NetcdfDataset r1, $r102;
        ucar.ma2.StructureData $r54;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r15, $r48, $r67;
        float $f0, $f1, $f2;
        java.util.HashMap $r33;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        ucar.nc2.dt.point.RecordDatasetHelper $r13, $r20, $r26, $r34, $r61, $r65;

        r0 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: boolean debug> = 0;

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: boolean debugLinks> = 0;

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String altVName> = "elevation";

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "timeVariables", null);

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, ", ");

        $r4 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String obsTimeVName> = $r4;

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("timeNominal");

        if $r5 == null goto label01;

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String nomTimeVName> = "timeNominal";

     label01:
        $r6 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "idVariables", null);

        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r6, ", ");

        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnIdVName> = $r8;

        $r9 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnIdVName>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("stationName");

        if $z0 == 0 goto label03;

        $r111 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("locationName");

        if $r111 == null goto label02;

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnDescVName> = "locationName";

     label02:
        $z6 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: boolean debug>;

        if $z6 == 0 goto label08;

        $r112 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r112.<java.io.PrintStream: void println(java.lang.String)>("filetype 1 (metars)");

        goto label08;

     label03:
        $r10 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnIdVName>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("latitude");

        if $z1 == 0 goto label05;

        $r109 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("en_tailNumber");

        if $r109 == null goto label04;

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnIdVName> = "en_tailNumber";

     label04:
        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String altVName> = "altitude";

        $z5 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: boolean debug>;

        if $z5 == 0 goto label08;

        $r110 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r110.<java.io.PrintStream: void println(java.lang.String)>("filetype 3 (acars)");

        goto label08;

     label05:
        $r11 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("stationId");

        if $r11 == null goto label06;

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnIdVName> = "stationId";

     label06:
        $r12 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("stationName");

        if $r12 == null goto label07;

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnDescVName> = "stationName";

     label07:
        $z2 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: boolean debug>;

        if $z2 == 0 goto label08;

        $r108 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r108.<java.io.PrintStream: void println(java.lang.String)>("filetype 2 (mesonet)");

     label08:
        $z7 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: boolean debug>;

        if $z7 == 0 goto label09;

        $r100 = <java.lang.System: java.io.PrintStream out>;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title= ");

        $r102 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r103 = virtualinvoke $r102.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "title", null);

        $r104 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r100.<java.io.PrintStream: void println(java.lang.String)>($r105);

     label09:
        $r13 = new ucar.nc2.dt.point.RecordDatasetHelper;

        $r17 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String obsTimeVName>;

        $r16 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String nomTimeVName>;

        $r15 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.util.List dataVariables>;

        $r14 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.StringBuffer parseInfo>;

        specialinvoke $r13.<ucar.nc2.dt.point.RecordDatasetHelper: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,java.util.List,java.lang.StringBuffer)>(r1, $r17, $r16, $r15, $r14);

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper> = $r13;

        $r20 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r19 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnIdVName>;

        $r18 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnDescVName>;

        virtualinvoke $r20.<ucar.nc2.dt.point.RecordDatasetHelper: void setStationInfo(java.lang.String,java.lang.String)>($r19, $r18);

        $r21 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String obsTimeVName>;

        virtualinvoke r0.<ucar.nc2.dt.point.MadisStationObsDataset: void removeDataVariable(java.lang.String)>($r21);

        $r22 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String nomTimeVName>;

        virtualinvoke r0.<ucar.nc2.dt.point.MadisStationObsDataset: void removeDataVariable(java.lang.String)>($r22);

        virtualinvoke r0.<ucar.nc2.dt.point.MadisStationObsDataset: void removeDataVariable(java.lang.String)>("latitude");

        virtualinvoke r0.<ucar.nc2.dt.point.MadisStationObsDataset: void removeDataVariable(java.lang.String)>("longitude");

        $r23 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String altVName>;

        virtualinvoke r0.<ucar.nc2.dt.point.MadisStationObsDataset: void removeDataVariable(java.lang.String)>($r23);

        virtualinvoke r0.<ucar.nc2.dt.point.MadisStationObsDataset: void removeDataVariable(java.lang.String)>("prevRecord");

        $r24 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnIdVName>;

        virtualinvoke r0.<ucar.nc2.dt.point.MadisStationObsDataset: void removeDataVariable(java.lang.String)>($r24);

        $r25 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnDescVName>;

        virtualinvoke r0.<ucar.nc2.dt.point.MadisStationObsDataset: void removeDataVariable(java.lang.String)>($r25);

        $r26 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r27 = $r26.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit>;

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.units.DateUnit timeUnit> = $r27;

        $r28 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("lastRecord");

        $r29 = virtualinvoke $r28.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r106 = (ucar.ma2.ArrayInt$D1) $r29;

        $r30 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("inventory");

        $r31 = virtualinvoke $r30.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r107 = (ucar.ma2.ArrayInt$D1) $r31;

        $r32 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("nStaticIds");

        $i0 = virtualinvoke $r32.<ucar.nc2.Variable: int readScalarInt()>();

        $r34 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r33 = new java.util.HashMap;

        $i1 = 2 * $i0;

        specialinvoke $r33.<java.util.HashMap: void <init>(int)>($i1);

        $r34.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash> = $r33;

        $r35 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("record");

        $r36 = (ucar.nc2.Structure) $r35;

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.Structure recordVar> = $r36;

        i6 = 0;

     label10:
        if i6 >= $i0 goto label20;

        $i3 = virtualinvoke $r106.<ucar.ma2.ArrayInt$D1: int get(int)>(i6);

        $i4 = virtualinvoke $r107.<ucar.ma2.ArrayInt$D1: int get(int)>(i6);

        if $i3 >= 0 goto label11;

        goto label19;

     label11:
        $r53 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.Structure recordVar>;

        $r54 = virtualinvoke $r53.<ucar.nc2.Structure: ucar.ma2.StructureData readStructure(int)>($i3);

     label12:
        goto label14;

     label13:
        $r113 := @caughtexception;

        $r115 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.StringBuffer parseInfo>;

        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid lastValue=");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for station at index ");

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r115.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r121);

        goto label19;

     label14:
        $r55 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnIdVName>;

        $r56 = virtualinvoke $r54.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.String: java.lang.String trim()>();

        $r58 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnDescVName>;

        if $r58 != null goto label15;

        $r122 = null;

        goto label16;

     label15:
        $r59 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnDescVName>;

        $r122 = virtualinvoke $r54.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r59);

     label16:
        $f0 = virtualinvoke $r54.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>("latitude");

        $f1 = virtualinvoke $r54.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>("longitude");

        $r60 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String altVName>;

        $f2 = virtualinvoke $r54.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>($r60);

        $r61 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r62 = $r61.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash>;

        $r63 = interfaceinvoke $r62.<java.util.Map: java.lang.Object get(java.lang.Object)>($r57);

        $r98 = (ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl) $r63;

        if $r98 == null goto label18;

        $z4 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: boolean debugLinks>;

        if $z4 == 0 goto label17;

        $r69 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.StringBuffer parseInfo>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already have=");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for station at index ");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastRecord= ");

        $i5 = staticinvoke <ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl: int access$000(ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl)>($r98);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r77);

        $r79 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.StringBuffer parseInfo>;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  old lat=");

        $d5 = virtualinvoke $r98.<ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl: double getLatitude()>();

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lon= ");

        $d6 = virtualinvoke $r98.<ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl: double getLongitude()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d6);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" alt= ");

        $d7 = virtualinvoke $r98.<ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl: double getAltitude()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d7);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r87);

        $r89 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.StringBuffer parseInfo>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  new lat=");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lon= ");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" alt= ");

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r97);

     label17:
        staticinvoke <ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl: void access$100(ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl,int,int)>($r98, $i3, $i4);

        goto label19;

     label18:
        $r64 = new ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl;

        $d4 = (double) $f0;

        $d3 = (double) $f1;

        $d2 = (double) $f2;

        specialinvoke $r64.<ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl: void <init>(ucar.nc2.dt.point.MadisStationObsDataset,java.lang.String,java.lang.String,double,double,double,int,int,ucar.nc2.dt.point.MadisStationObsDataset$1)>(r0, $r57, $r122, $d4, $d3, $d2, $i3, $i4, null);

        $r65 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r66 = $r65.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash>;

        interfaceinvoke $r66.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, $r64);

        $r67 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.util.List stations>;

        interfaceinvoke $r67.<java.util.List: boolean add(java.lang.Object)>($r64);

     label19:
        i6 = i6 + 1;

        goto label10;

     label20:
        $z3 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: boolean debug>;

        if $z3 == 0 goto label21;

        $r46 = <java.lang.System: java.io.PrintStream out>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("total stations ");

        $r48 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.util.List stations>;

        $i2 = interfaceinvoke $r48.<java.util.List: int size()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be = ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r52);

     label21:
        $r37 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String obsTimeVName>;

        $r38 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r40 = staticinvoke <ucar.ma2.MAMath: ucar.ma2.MAMath$MinMax getMinMax(ucar.ma2.Array)>($r39);

        $r41 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = $r40.<ucar.ma2.MAMath$MinMax: double min>;

        $r42 = virtualinvoke $r41.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.util.Date startDate> = $r42;

        $r43 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.units.DateUnit timeUnit>;

        $d1 = $r40.<ucar.ma2.MAMath$MinMax: double max>;

        $r44 = virtualinvoke $r43.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d1);

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.util.Date endDate> = $r44;

        virtualinvoke r0.<ucar.nc2.dt.point.MadisStationObsDataset: void setBoundingBox()>();

        return;

        catch ucar.ma2.InvalidRangeException from label11 to label12 with label13;
    }

    protected void setTimeUnits()
    {
        ucar.nc2.dt.point.MadisStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        return;
    }

    protected void setStartDate()
    {
        ucar.nc2.dt.point.MadisStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        return;
    }

    protected void setEndDate()
    {
        ucar.nc2.dt.point.MadisStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        return;
    }

    protected void setBoundingBox()
    {
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.dt.point.StationDatasetHelper $r1;
        ucar.nc2.dt.point.MadisStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.StationDatasetHelper stationHelper>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.StationDatasetHelper: ucar.unidata.geoloc.LatLonRect getBoundingBox()>();

        r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.unidata.geoloc.LatLonRect boundingBox> = $r2;

        return;
    }

    public java.util.List getData(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.StationObsDatatype $r2;
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dt.point.MadisStationObsDataset r1;
        int $i0, i1;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        r3 := @parameter0: ucar.nc2.util.CancelTask;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<ucar.nc2.dt.point.MadisStationObsDataset: int getDataCount()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r1.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.StationObsDatatype makeObs(int)>(i1);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        if r3 == null goto label2;

        $z0 = interfaceinvoke r3.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    protected ucar.nc2.dt.StationObsDatatype makeObs(int) throws java.io.IOException
    {
        ucar.unidata.geoloc.Station r8;
        ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs $r12;
        ucar.nc2.Structure $r1;
        ucar.ma2.StructureData $r2;
        ucar.nc2.dt.point.MadisStationObsDataset r0;
        java.util.Map $r6;
        int i0;
        java.lang.String $r3, $r4, $r9, $r10, $r11, $r16;
        double $d0, $d1;
        java.io.IOException $r15;
        ucar.nc2.dt.point.RecordDatasetHelper $r5, $r13;
        ucar.ma2.InvalidRangeException $r14;
        float $f0, $f1;
        java.lang.Object $r7;

        r0 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.Structure recordVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Structure: ucar.ma2.StructureData readStructure(int)>(i0);

        $r3 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String stnIdVName>;

        $r4 = virtualinvoke $r2.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r3);

        $r5 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r6 = $r5.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r8 = (ucar.unidata.geoloc.Station) $r7;

        $r9 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String obsTimeVName>;

        $f0 = virtualinvoke $r2.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>($r9);

        $r10 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String nomTimeVName>;

        if $r10 != null goto label2;

        $f1 = $f0;

        goto label3;

     label2:
        $r11 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String nomTimeVName>;

        $f1 = virtualinvoke $r2.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>($r11);

     label3:
        $r12 = new ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs;

        $r13 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $d1 = (double) $f0;

        $d0 = (double) $f1;

        specialinvoke $r12.<ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs: void <init>(ucar.nc2.dt.point.RecordDatasetHelper,ucar.unidata.geoloc.Station,double,double,int)>($r13, r8, $d1, $d0, i0);

     label4:
        return $r12;

     label5:
        $r14 := @caughtexception;

        virtualinvoke $r14.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r15 = new java.io.IOException;

        $r16 = virtualinvoke $r14.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r15;

        catch ucar.ma2.InvalidRangeException from label1 to label4 with label5;
    }

    public java.util.List getData(ucar.unidata.geoloc.Station, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.List $r2;
        ucar.nc2.util.CancelTask r4;
        ucar.nc2.dt.point.MadisStationObsDataset r3;
        ucar.unidata.geoloc.Station r0;
        ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl $r1;

        r3 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        r4 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = (ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl) r0;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.MadisStationObsDataset$MadisStationImpl: java.util.List getObservations()>();

        return $r2;
    }

    public int getDataCount()
    {
        ucar.nc2.dt.point.MadisStationObsDataset r0;
        int $i0;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension getUnlimitedDimension()>();

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        return $i0;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(int) throws java.io.IOException
    {
        ucar.nc2.dataset.StructureDS $r3;
        ucar.nc2.dt.point.MadisStationObsDataset r1;
        int i0;
        ucar.nc2.dt.point.MadisStationObsDataset$MadisDatatypeIterator $r0;
        ucar.nc2.dt.point.RecordDatasetHelper $r2;

        r1 := @this: ucar.nc2.dt.point.MadisStationObsDataset;

        i0 := @parameter0: int;

        $r0 = new ucar.nc2.dt.point.MadisStationObsDataset$MadisDatatypeIterator;

        $r2 = r1.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r3 = $r2.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        specialinvoke $r0.<ucar.nc2.dt.point.MadisStationObsDataset$MadisDatatypeIterator: void <init>(ucar.nc2.dt.point.MadisStationObsDataset,ucar.nc2.Structure,int)>(r1, $r3, i0);

        return $r0;
    }

    static ucar.nc2.Structure access$300(ucar.nc2.dt.point.MadisStationObsDataset)
    {
        ucar.nc2.dt.point.MadisStationObsDataset r0;
        ucar.nc2.Structure $r1;

        r0 := @parameter0: ucar.nc2.dt.point.MadisStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.Structure recordVar>;

        return $r1;
    }

    static java.lang.String access$400(ucar.nc2.dt.point.MadisStationObsDataset)
    {
        java.lang.String $r1;
        ucar.nc2.dt.point.MadisStationObsDataset r0;

        r0 := @parameter0: ucar.nc2.dt.point.MadisStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String obsTimeVName>;

        return $r1;
    }

    static java.lang.String access$500(ucar.nc2.dt.point.MadisStationObsDataset)
    {
        java.lang.String $r1;
        ucar.nc2.dt.point.MadisStationObsDataset r0;

        r0 := @parameter0: ucar.nc2.dt.point.MadisStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: java.lang.String nomTimeVName>;

        return $r1;
    }

    static ucar.nc2.dt.point.RecordDatasetHelper access$600(ucar.nc2.dt.point.MadisStationObsDataset)
    {
        ucar.nc2.dt.point.MadisStationObsDataset r0;
        ucar.nc2.dt.point.RecordDatasetHelper $r1;

        r0 := @parameter0: ucar.nc2.dt.point.MadisStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.MadisStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        return $r1;
    }
}
