public final class org.apache.lucene.document.Document extends java.lang.Object implements java.lang.Iterable
{
    private final java.util.List fields;
    private static final java.lang.String[] NO_STRINGS;

    public void <init>()
    {
        org.apache.lucene.document.Document r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.lucene.document.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.document.Document: java.util.List fields> = $r1;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.lucene.document.Document r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.lucene.document.Document;

        $r1 = r0.<org.apache.lucene.document.Document: java.util.List fields>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public final void add(org.apache.lucene.index.IndexableField)
    {
        org.apache.lucene.document.Document r0;
        java.util.List $r2;
        org.apache.lucene.index.IndexableField r1;

        r0 := @this: org.apache.lucene.document.Document;

        r1 := @parameter0: org.apache.lucene.index.IndexableField;

        $r2 = r0.<org.apache.lucene.document.Document: java.util.List fields>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void removeField(java.lang.String)
    {
        java.util.Iterator $r2;
        org.apache.lucene.index.IndexableField r4;
        org.apache.lucene.document.Document r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.document.Document;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.document.Document: java.util.List fields>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.index.IndexableField) $r3;

        $r5 = interfaceinvoke r4.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        return;

     label2:
        goto label1;

     label3:
        return;
    }

    public final void removeFields(java.lang.String)
    {
        java.util.Iterator $r2;
        org.apache.lucene.index.IndexableField r4;
        org.apache.lucene.document.Document r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.document.Document;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.document.Document: java.util.List fields>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.index.IndexableField) $r3;

        $r5 = interfaceinvoke r4.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    public final org.apache.lucene.util.BytesRef[] getBinaryValues(java.lang.String)
    {
        java.lang.Object[] $r5;
        java.util.Iterator $r3;
        org.apache.lucene.util.BytesRef $r11;
        org.apache.lucene.index.IndexableField r8;
        java.util.ArrayList $r0;
        org.apache.lucene.document.Document r1;
        java.util.List $r2;
        int $i0;
        org.apache.lucene.util.BytesRef[] $r4, $r6;
        java.lang.Object $r7;
        java.lang.String $r9, r10;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.document.Document;

        r10 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.lucene.document.Document: java.util.List fields>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.lucene.index.IndexableField) $r7;

        $r9 = interfaceinvoke r8.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r8.<org.apache.lucene.index.IndexableField: org.apache.lucene.util.BytesRef binaryValue()>();

        if $r11 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

     label2:
        goto label1;

     label3:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r4 = newarray (org.apache.lucene.util.BytesRef)[$i0];

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.lucene.util.BytesRef[]) $r5;

        return $r6;
    }

    public final org.apache.lucene.util.BytesRef getBinaryValue(java.lang.String)
    {
        java.util.Iterator $r2;
        org.apache.lucene.util.BytesRef $r7;
        org.apache.lucene.index.IndexableField r4;
        org.apache.lucene.document.Document r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.document.Document;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.document.Document: java.util.List fields>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.index.IndexableField) $r3;

        $r5 = interfaceinvoke r4.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r4.<org.apache.lucene.index.IndexableField: org.apache.lucene.util.BytesRef binaryValue()>();

        if $r7 == null goto label2;

        return $r7;

     label2:
        goto label1;

     label3:
        return null;
    }

    public final org.apache.lucene.index.IndexableField getField(java.lang.String)
    {
        java.util.Iterator $r2;
        org.apache.lucene.index.IndexableField r4;
        org.apache.lucene.document.Document r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.document.Document;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.document.Document: java.util.List fields>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.index.IndexableField) $r3;

        $r5 = interfaceinvoke r4.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.lucene.index.IndexableField[] getFields(java.lang.String)
    {
        java.lang.Object[] $r5;
        java.util.Iterator $r3;
        org.apache.lucene.index.IndexableField r8;
        java.util.ArrayList $r0;
        org.apache.lucene.document.Document r1;
        java.util.List $r2;
        org.apache.lucene.index.IndexableField[] $r4, $r6;
        int $i0;
        java.lang.Object $r7;
        java.lang.String $r9, r10;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.document.Document;

        r10 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.lucene.document.Document: java.util.List fields>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.lucene.index.IndexableField) $r7;

        $r9 = interfaceinvoke r8.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r8);

     label2:
        goto label1;

     label3:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r4 = newarray (org.apache.lucene.index.IndexableField)[$i0];

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.lucene.index.IndexableField[]) $r5;

        return $r6;
    }

    public final java.util.List getFields()
    {
        org.apache.lucene.document.Document r0;
        java.util.List $r1;

        r0 := @this: org.apache.lucene.document.Document;

        $r1 = r0.<org.apache.lucene.document.Document: java.util.List fields>;

        return $r1;
    }

    public final java.lang.String[] getValues(java.lang.String)
    {
        java.lang.Object[] $r5;
        org.apache.lucene.index.IndexableField r9;
        java.lang.String[] $r4, $r6, $r7;
        java.util.ArrayList $r0;
        org.apache.lucene.document.Document r1;
        int $i0, $i1;
        java.lang.String $r10, r11, $r12, $r13;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.util.List $r2;
        java.lang.Object $r8;

        r1 := @this: org.apache.lucene.document.Document;

        r11 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.lucene.document.Document: java.util.List fields>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.lucene.index.IndexableField) $r8;

        $r10 = interfaceinvoke r9.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z1 == 0 goto label2;

        $r12 = interfaceinvoke r9.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        if $r12 == null goto label2;

        $r13 = interfaceinvoke r9.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

     label2:
        goto label1;

     label3:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 != 0 goto label4;

        $r7 = <org.apache.lucene.document.Document: java.lang.String[] NO_STRINGS>;

        return $r7;

     label4:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i1];

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        return $r6;
    }

    public final java.lang.String get(java.lang.String)
    {
        java.util.Iterator $r2;
        org.apache.lucene.index.IndexableField r4;
        org.apache.lucene.document.Document r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r5, r6, $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.document.Document;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.document.Document: java.util.List fields>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.index.IndexableField) $r3;

        $r5 = interfaceinvoke r4.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r4.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        if $r7 == null goto label2;

        $r8 = interfaceinvoke r4.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        return $r8;

     label2:
        goto label1;

     label3:
        return null;
    }

    public final java.lang.String toString()
    {
        org.apache.lucene.index.IndexableField r6;
        org.apache.lucene.document.Document r1;
        java.util.List $r2, $r4, $r8;
        int $i0, $i1, $i2, i3;
        java.lang.StringBuilder $r0;
        java.lang.Object $r5;
        java.lang.String $r3, $r7;

        r1 := @this: org.apache.lucene.document.Document;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document<");

        i3 = 0;

     label1:
        $r2 = r1.<org.apache.lucene.document.Document: java.util.List fields>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i3 >= $i0 goto label3;

        $r4 = r1.<org.apache.lucene.document.Document: java.util.List fields>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        r6 = (org.apache.lucene.index.IndexableField) $r5;

        $r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = r1.<org.apache.lucene.document.Document: java.util.List fields>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i3 == $i2 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[0];

        <org.apache.lucene.document.Document: java.lang.String[] NO_STRINGS> = $r0;

        return;
    }
}
