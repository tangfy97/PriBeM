class nu.xom.jaxen.expr.DefaultLessThanEqualExpr extends nu.xom.jaxen.expr.DefaultRelationalExpr
{
    private static final long serialVersionUID;

    void <init>(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr)
    {
        nu.xom.jaxen.expr.DefaultLessThanEqualExpr r0;
        nu.xom.jaxen.expr.Expr r1, r2;

        r0 := @this: nu.xom.jaxen.expr.DefaultLessThanEqualExpr;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        specialinvoke r0.<nu.xom.jaxen.expr.DefaultRelationalExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return;
    }

    public java.lang.String getOperator()
    {
        nu.xom.jaxen.expr.DefaultLessThanEqualExpr r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultLessThanEqualExpr;

        return "<=";
    }

    protected boolean evaluateDoubleDouble(java.lang.Double, java.lang.Double)
    {
        nu.xom.jaxen.expr.DefaultLessThanEqualExpr r2;
        java.lang.Double r0, r1;
        int $i0;
        boolean $z0;

        r2 := @this: nu.xom.jaxen.expr.DefaultLessThanEqualExpr;

        r0 := @parameter0: java.lang.Double;

        r1 := @parameter1: java.lang.Double;

        $i0 = virtualinvoke r0.<java.lang.Double: int compareTo(java.lang.Double)>(r1);

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void <clinit>()
    {
        <nu.xom.jaxen.expr.DefaultLessThanEqualExpr: long serialVersionUID> = 7980276649555334242L;

        return;
    }
}
