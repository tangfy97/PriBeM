public class org.apache.http.impl.cookie.NetscapeDraftHeaderParser extends java.lang.Object
{
    public static final org.apache.http.impl.cookie.NetscapeDraftHeaderParser DEFAULT;

    public void <init>()
    {
        org.apache.http.impl.cookie.NetscapeDraftHeaderParser r0;

        r0 := @this: org.apache.http.impl.cookie.NetscapeDraftHeaderParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor) throws org.apache.http.ParseException
    {
        java.lang.Object[] $r9;
        org.apache.http.message.BasicHeaderElement $r5;
        org.apache.http.NameValuePair[] $r8, $r10;
        java.util.ArrayList $r4;
        int $i0;
        java.lang.String $r6, $r7;
        boolean $z0;
        org.apache.http.impl.cookie.NetscapeDraftHeaderParser r2;
        java.lang.IllegalArgumentException $r12, $r13;
        org.apache.http.util.CharArrayBuffer r0;
        org.apache.http.NameValuePair $r3, $r11;
        org.apache.http.message.ParserCursor r1;

        r2 := @this: org.apache.http.impl.cookie.NetscapeDraftHeaderParser;

        r0 := @parameter0: org.apache.http.util.CharArrayBuffer;

        r1 := @parameter1: org.apache.http.message.ParserCursor;

        if r0 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Char array buffer may not be null");

        throw $r13;

     label1:
        if r1 != null goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parser cursor may not be null");

        throw $r12;

     label2:
        $r3 = specialinvoke r2.<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>(r0, r1);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label3:
        $z0 = virtualinvoke r1.<org.apache.http.message.ParserCursor: boolean atEnd()>();

        if $z0 != 0 goto label4;

        $r11 = specialinvoke r2.<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>(r0, r1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label3;

     label4:
        $r5 = new org.apache.http.message.BasicHeaderElement;

        $r6 = interfaceinvoke $r3.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r7 = interfaceinvoke $r3.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r8 = newarray (org.apache.http.NameValuePair)[$i0];

        $r9 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (org.apache.http.NameValuePair[]) $r9;

        specialinvoke $r5.<org.apache.http.message.BasicHeaderElement: void <init>(java.lang.String,java.lang.String,org.apache.http.NameValuePair[])>($r6, $r7, $r10);

        return $r5;
    }

    private org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)
    {
        org.apache.http.message.BasicNameValuePair $r7, $r8;
        int $i0, $i1, $i2, i7, i8, i9, $i10, $i11, $i12, $i14;
        java.lang.String $r2, r6;
        boolean $z0, $z1, z2, z3, z4;
        org.apache.http.impl.cookie.NetscapeDraftHeaderParser r5;
        char $c3, $c4, $c5, $c6;
        org.apache.http.util.CharArrayBuffer r1;
        org.apache.http.message.ParserCursor r0;

        r5 := @this: org.apache.http.impl.cookie.NetscapeDraftHeaderParser;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        r0 := @parameter1: org.apache.http.message.ParserCursor;

        z2 = 0;

        z4 = 0;

        z3 = 0;

        i7 = virtualinvoke r0.<org.apache.http.message.ParserCursor: int getPos()>();

        $i0 = virtualinvoke r0.<org.apache.http.message.ParserCursor: int getPos()>();

        $i1 = virtualinvoke r0.<org.apache.http.message.ParserCursor: int getUpperBound()>();

     label01:
        if i7 >= $i1 goto label04;

        $c6 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i7);

        $i10 = (int) $c6;

        if $i10 != 61 goto label02;

        goto label04;

     label02:
        $i11 = (int) $c6;

        if $i11 != 59 goto label03;

        z2 = 1;

        z4 = 1;

        z3 = 1;

        goto label04;

     label03:
        i7 = i7 + 1;

        goto label01;

     label04:
        if i7 != $i1 goto label05;

        z2 = 1;

        z4 = 1;

        z3 = 1;

        r6 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>($i0, $i1);

        goto label06;

     label05:
        r6 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>($i0, i7);

        i7 = i7 + 1;

     label06:
        if z4 == 0 goto label07;

        virtualinvoke r0.<org.apache.http.message.ParserCursor: void updatePos(int)>(i7);

        $r7 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r7.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(r6, null);

        return $r7;

     label07:
        i8 = i7;

     label08:
        if i7 >= $i1 goto label10;

        $c5 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i7);

        $i12 = (int) $c5;

        if $i12 != 59 goto label09;

        z2 = 1;

        z3 = 1;

        goto label10;

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        i9 = i7;

     label11:
        if i8 >= i9 goto label12;

        $c4 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i8);

        $z1 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c4);

        if $z1 == 0 goto label12;

        i8 = i8 + 1;

        goto label11;

     label12:
        if i9 <= i8 goto label13;

        $i2 = i9 - 1;

        $c3 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: char charAt(int)>($i2);

        $z0 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c3);

        if $z0 == 0 goto label13;

        $i14 = (int) -1;

        i9 = i9 + $i14;

        goto label12;

     label13:
        $r2 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substring(int,int)>(i8, i9);

        if z3 == 0 goto label14;

        i7 = i7 + 1;

     label14:
        virtualinvoke r0.<org.apache.http.message.ParserCursor: void updatePos(int)>(i7);

        $r8 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r8.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(r6, $r2);

        return $r8;
    }

    static void <clinit>()
    {
        org.apache.http.impl.cookie.NetscapeDraftHeaderParser $r0;

        $r0 = new org.apache.http.impl.cookie.NetscapeDraftHeaderParser;

        specialinvoke $r0.<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: void <init>()>();

        <org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.impl.cookie.NetscapeDraftHeaderParser DEFAULT> = $r0;

        return;
    }
}
