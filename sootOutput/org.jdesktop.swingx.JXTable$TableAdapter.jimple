public class org.jdesktop.swingx.JXTable$TableAdapter extends org.jdesktop.swingx.decorator.ComponentAdapter
{
    private final org.jdesktop.swingx.JXTable table;

    public void <init>(org.jdesktop.swingx.JXTable)
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        org.jdesktop.swingx.JXTable r1;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        r1 := @parameter0: org.jdesktop.swingx.JXTable;

        specialinvoke r0.<org.jdesktop.swingx.decorator.ComponentAdapter: void <init>(javax.swing.JComponent)>(r1);

        r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table> = r1;

        return;
    }

    public org.jdesktop.swingx.JXTable getTable()
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        org.jdesktop.swingx.JXTable $r1;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        return $r1;
    }

    public java.lang.String getColumnName(int)
    {
        javax.swing.table.TableColumn $r1;
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int i0;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXTable$TableAdapter: javax.swing.table.TableColumn getColumnByModelIndex(int)>(i0);

        if $r1 != null goto label1;

        $r3 = "";

        goto label2;

     label1:
        $r2 = virtualinvoke $r1.<javax.swing.table.TableColumn: java.lang.Object getHeaderValue()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r3;
    }

    protected javax.swing.table.TableColumn getColumnByModelIndex(int)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String $r7;
        boolean $z0;
        java.util.Iterator $r10;
        javax.swing.table.TableColumn r12;
        java.lang.IllegalArgumentException $r0;
        org.jdesktop.swingx.JXTable $r8;
        java.util.List $r9;
        org.jdesktop.swingx.JXTable$TableAdapter r3;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6;
        java.lang.Object $r11;

        r3 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = virtualinvoke r3.<org.jdesktop.swingx.JXTable$TableAdapter: int getColumnCount()>();

        if i0 < $i2 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid column index, must be positive and less than ");

        $i1 = virtualinvoke r3.<org.jdesktop.swingx.JXTable$TableAdapter: int getColumnCount()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r0;

     label2:
        $r8 = r3.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $r9 = virtualinvoke $r8.<org.jdesktop.swingx.JXTable: java.util.List getColumns(boolean)>(1);

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (javax.swing.table.TableColumn) $r11;

        $i3 = virtualinvoke r12.<javax.swing.table.TableColumn: int getModelIndex()>();

        if $i3 != i0 goto label4;

        return r12;

     label4:
        goto label3;

     label5:
        return null;
    }

    public java.lang.Object getColumnIdentifierAt(int)
    {
        javax.swing.table.TableColumn $r6;
        java.lang.ArrayIndexOutOfBoundsException $r0;
        int i0, $i1;
        org.jdesktop.swingx.JXTable$TableAdapter r5;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.Object $r7;
        java.lang.String $r4;

        r5 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r5.<org.jdesktop.swingx.JXTable$TableAdapter: int getColumnCount()>();

        if i0 < $i1 goto label2;

     label1:
        $r0 = new java.lang.ArrayIndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid column index: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        $r6 = virtualinvoke r5.<org.jdesktop.swingx.JXTable$TableAdapter: javax.swing.table.TableColumn getColumnByModelIndex(int)>(i0);

        if $r6 == null goto label3;

        $r7 = virtualinvoke $r6.<javax.swing.table.TableColumn: java.lang.Object getIdentifier()>();

        goto label4;

     label3:
        $r7 = null;

     label4:
        return $r7;
    }

    public int getColumnIndex(java.lang.Object)
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int $i0, $i2;
        java.lang.Object r1;
        org.jdesktop.swingx.table.TableColumnExt $r3;
        org.jdesktop.swingx.JXTable $r2;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXTable: org.jdesktop.swingx.table.TableColumnExt getColumnExt(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<javax.swing.table.TableColumn: int getModelIndex()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public int getColumnCount()
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int $i0;
        org.jdesktop.swingx.JXTable $r1;
        javax.swing.table.TableModel $r2;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: javax.swing.table.TableModel getModel()>();

        $i0 = interfaceinvoke $r2.<javax.swing.table.TableModel: int getColumnCount()>();

        return $i0;
    }

    public int getRowCount()
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int $i0;
        org.jdesktop.swingx.JXTable $r1;
        javax.swing.table.TableModel $r2;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: javax.swing.table.TableModel getModel()>();

        $i0 = interfaceinvoke $r2.<javax.swing.table.TableModel: int getRowCount()>();

        return $i0;
    }

    public java.lang.Object getValueAt(int, int)
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int i0, i1;
        java.lang.Object $r3;
        org.jdesktop.swingx.JXTable $r1;
        javax.swing.table.TableModel $r2;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: javax.swing.table.TableModel getModel()>();

        $r3 = interfaceinvoke $r2.<javax.swing.table.TableModel: java.lang.Object getValueAt(int,int)>(i0, i1);

        return $r3;
    }

    public boolean isCellEditable(int, int)
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int i0, i1;
        org.jdesktop.swingx.JXTable $r1;
        javax.swing.table.TableModel $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: javax.swing.table.TableModel getModel()>();

        $z0 = interfaceinvoke $r2.<javax.swing.table.TableModel: boolean isCellEditable(int,int)>(i0, i1);

        return $z0;
    }

    public boolean isTestable(int)
    {
        javax.swing.table.TableColumn $r1;
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int i0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXTable$TableAdapter: javax.swing.table.TableColumn getColumnByModelIndex(int)>(i0);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getStringAt(int, int)
    {
        org.jdesktop.swingx.sort.StringValueRegistry $r2;
        org.jdesktop.swingx.JXTable $r1;
        org.jdesktop.swingx.renderer.StringValue $r3;
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int i0, i1;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: org.jdesktop.swingx.sort.StringValueRegistry getStringValueRegistry()>();

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.sort.StringValueRegistry: org.jdesktop.swingx.renderer.StringValue getStringValue(int,int)>(i0, i1);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXTable$TableAdapter: java.lang.Object getValueAt(int,int)>(i0, i1);

        $r5 = interfaceinvoke $r3.<org.jdesktop.swingx.renderer.StringValue: java.lang.String getString(java.lang.Object)>($r4);

        return $r5;
    }

    public java.awt.Rectangle getCellBounds()
    {
        java.awt.Rectangle $r2;
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int $i0, $i1;
        org.jdesktop.swingx.JXTable $r1;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $i1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: int row>;

        $i0 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: int column>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: java.awt.Rectangle getCellRect(int,int,boolean)>($i1, $i0, 0);

        return $r2;
    }

    public boolean isEditable()
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int $i0, $i1;
        org.jdesktop.swingx.JXTable $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $i1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: int row>;

        $i0 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: int column>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: boolean isCellEditable(int,int)>($i1, $i0);

        return $z0;
    }

    public boolean isSelected()
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int $i0, $i1;
        org.jdesktop.swingx.JXTable $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $i1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: int row>;

        $i0 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: int column>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: boolean isCellSelected(int,int)>($i1, $i0);

        return $z0;
    }

    public boolean hasFocus()
    {
        javax.swing.ListSelectionModel $r2, $r5;
        javax.swing.table.TableColumnModel $r4;
        int $i0, $i1, $i2, $i3;
        boolean z0, $z1, $z2, $z3, $z4;
        org.jdesktop.swingx.JXTable $r1, $r3, $r6;
        org.jdesktop.swingx.JXTable$TableAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: javax.swing.ListSelectionModel getSelectionModel()>();

        $i0 = interfaceinvoke $r2.<javax.swing.ListSelectionModel: int getLeadSelectionIndex()>();

        $i1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: int row>;

        if $i0 != $i1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $r3 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXTable: javax.swing.table.TableColumnModel getColumnModel()>();

        $r5 = interfaceinvoke $r4.<javax.swing.table.TableColumnModel: javax.swing.ListSelectionModel getSelectionModel()>();

        $i2 = interfaceinvoke $r5.<javax.swing.ListSelectionModel: int getLeadSelectionIndex()>();

        $i3 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: int column>;

        if $i2 != $i3 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        $r6 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $z1 = virtualinvoke $r6.<org.jdesktop.swingx.JXTable: boolean isFocusOwner()>();

        if $z1 == 0 goto label5;

        if z0 == 0 goto label5;

        if $z3 == 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    public int convertColumnIndexToView(int)
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int i0, $i1;
        org.jdesktop.swingx.JXTable $r1;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $i1 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: int convertColumnIndexToView(int)>(i0);

        return $i1;
    }

    public int convertColumnIndexToModel(int)
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int i0, $i1;
        org.jdesktop.swingx.JXTable $r1;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $i1 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: int convertColumnIndexToModel(int)>(i0);

        return $i1;
    }

    public int convertRowIndexToView(int)
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int i0, $i1;
        org.jdesktop.swingx.JXTable $r1;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $i1 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: int convertRowIndexToView(int)>(i0);

        return $i1;
    }

    public int convertRowIndexToModel(int)
    {
        org.jdesktop.swingx.JXTable$TableAdapter r0;
        int i0, $i1;
        org.jdesktop.swingx.JXTable $r1;

        r0 := @this: org.jdesktop.swingx.JXTable$TableAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.JXTable$TableAdapter: org.jdesktop.swingx.JXTable table>;

        $i1 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: int convertRowIndexToModel(int)>(i0);

        return $i1;
    }
}
