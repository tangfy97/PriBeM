public class org.apache.cxf.extension.RegistryImpl extends java.lang.Object implements org.apache.cxf.extension.Registry
{
    protected final java.util.Map entries;

    protected void <init>()
    {
        org.apache.cxf.extension.RegistryImpl r0;

        r0 := @this: org.apache.cxf.extension.RegistryImpl;

        specialinvoke r0.<org.apache.cxf.extension.RegistryImpl: void <init>(java.util.Map)>(null);

        return;
    }

    protected void <init>(java.util.Map)
    {
        org.apache.cxf.extension.RegistryImpl r0;
        java.util.Map r3;
        java.util.concurrent.ConcurrentHashMap $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.extension.RegistryImpl;

        r3 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if null != r3 goto label1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(16, 0.75F, 4);

        r3 = $r2;

        goto label2;

     label1:
        $z0 = r3 instanceof java.util.concurrent.ConcurrentHashMap;

        if $z0 != 0 goto label2;

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>(java.util.Map)>(r3);

        r3 = $r1;

     label2:
        r0.<org.apache.cxf.extension.RegistryImpl: java.util.Map entries> = r3;

        return;
    }

    protected void loadDynamic()
    {
        org.apache.cxf.extension.RegistryImpl r0;

        r0 := @this: org.apache.cxf.extension.RegistryImpl;

        return;
    }

    public void register(java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.extension.RegistryImpl r0;
        java.util.Map $r3;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.cxf.extension.RegistryImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.cxf.extension.RegistryImpl: java.util.Map entries>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void unregister(java.lang.Object)
    {
        org.apache.cxf.extension.RegistryImpl r0;
        java.lang.Object r1;
        java.util.Map $r2;

        r0 := @this: org.apache.cxf.extension.RegistryImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.extension.RegistryImpl: java.util.Map entries>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.cxf.extension.RegistryImpl r0;
        java.util.Map $r2;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.cxf.extension.RegistryImpl;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.cxf.extension.RegistryImpl: void loadDynamic()>();

        $r2 = r0.<org.apache.cxf.extension.RegistryImpl: java.util.Map entries>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }
}
