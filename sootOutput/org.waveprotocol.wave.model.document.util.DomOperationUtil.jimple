public final class org.waveprotocol.wave.model.document.util.DomOperationUtil extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.wave.model.document.util.DomOperationUtil r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.DomOperationUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void buildDomInitializationFromSubtree(org.waveprotocol.wave.model.document.ReadableDocument, java.lang.Object, org.waveprotocol.wave.model.document.operation.DocInitializationCursor)
    {
        org.waveprotocol.wave.model.document.ReadableDocument r0;
        org.waveprotocol.wave.model.document.operation.DocInitializationCursor r3;
        java.lang.Object r1, $r2, $r4;

        r0 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        r1 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.waveprotocol.wave.model.document.operation.DocInitializationCursor;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object asText(java.lang.Object)>(r1);

        if $r2 != null goto label1;

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object asElement(java.lang.Object)>(r1);

        staticinvoke <org.waveprotocol.wave.model.document.util.DomOperationUtil: void buildDomInitializationFromElement(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object,org.waveprotocol.wave.model.document.operation.DocInitializationCursor,boolean)>(r0, $r4, r3, 1);

        goto label2;

     label1:
        staticinvoke <org.waveprotocol.wave.model.document.util.DomOperationUtil: void buildDomInitializationFromTextNode(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object,org.waveprotocol.wave.model.document.operation.DocInitializationCursor)>(r0, $r2, r3);

     label2:
        return;
    }

    public static void buildDomInitializationFromTextNode(org.waveprotocol.wave.model.document.ReadableDocument, java.lang.Object, org.waveprotocol.wave.model.document.operation.DocInitializationCursor)
    {
        org.waveprotocol.wave.model.document.ReadableDocument r1;
        org.waveprotocol.wave.model.document.operation.DocInitializationCursor r0;
        java.lang.Object r2;
        java.lang.String $r3;

        r1 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        r2 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.waveprotocol.wave.model.document.operation.DocInitializationCursor;

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.String getData(java.lang.Object)>(r2);

        interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocInitializationCursor: void characters(java.lang.String)>($r3);

        return;
    }

    public static void buildDomInitializationFromElement(org.waveprotocol.wave.model.document.ReadableDocument, java.lang.Object, org.waveprotocol.wave.model.document.operation.DocInitializationCursor, boolean)
    {
        org.waveprotocol.wave.model.document.ReadableDocument r1;
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl $r4;
        java.util.Map $r5;
        org.waveprotocol.wave.model.document.operation.DocInitializationCursor r0;
        java.lang.Object r2, r6;
        java.lang.String $r3;
        boolean z0;

        r1 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        r2 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.waveprotocol.wave.model.document.operation.DocInitializationCursor;

        z0 := @parameter3: boolean;

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.String getTagName(java.lang.Object)>(r2);

        $r4 = new org.waveprotocol.wave.model.document.operation.impl.AttributesImpl;

        $r5 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.ReadableDocument: java.util.Map getAttributes(java.lang.Object)>(r2);

        specialinvoke $r4.<org.waveprotocol.wave.model.document.operation.impl.AttributesImpl: void <init>(java.util.Map)>($r5);

        interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocInitializationCursor: void elementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>($r3, $r4);

        if z0 == 0 goto label2;

        r6 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object getFirstChild(java.lang.Object)>(r2);

     label1:
        if r6 == null goto label2;

        staticinvoke <org.waveprotocol.wave.model.document.util.DomOperationUtil: void buildDomInitializationFromSubtree(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object,org.waveprotocol.wave.model.document.operation.DocInitializationCursor)>(r1, r6, r0);

        r6 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object getNextSibling(java.lang.Object)>(r6);

        goto label1;

     label2:
        interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocInitializationCursor: void elementEnd()>();

        return;
    }
}
