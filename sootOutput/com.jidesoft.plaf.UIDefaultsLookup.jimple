public class com.jidesoft.plaf.UIDefaultsLookup extends java.lang.Object
{
    private static java.util.logging.Logger LOGGER;
    private static boolean _debug;
    private static boolean _trace;

    public void <init>()
    {
        com.jidesoft.plaf.UIDefaultsLookup r0;

        r0 := @this: com.jidesoft.plaf.UIDefaultsLookup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setDebug(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.jidesoft.plaf.UIDefaultsLookup: boolean _debug> = z0;

        return;
    }

    public static void setTrace(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.jidesoft.plaf.UIDefaultsLookup: boolean _trace> = z0;

        return;
    }

    public static void put(javax.swing.UIDefaults, java.lang.String, java.lang.Object)
    {
        java.util.HashMap $r3;
        java.util.logging.Level $r4;
        java.util.Map $r7;
        java.lang.String r1, $r16;
        boolean $z0, $z1, $z2;
        javax.swing.UIDefaults r0;
        java.util.logging.Logger $r5, $r9;
        java.lang.Object $r2, r6, r18, $r19, r20;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.Class $r17;

        r0 := @parameter0: javax.swing.UIDefaults;

        r1 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Object;

        $r2 = virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object get(java.lang.Object)>(r1);

        r18 = $r2;

        if $r2 == null goto label1;

        $z1 = $r2 instanceof java.util.Map;

        if $z1 != 0 goto label2;

     label1:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r18 = $r3;

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

     label2:
        $r19 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("ClassLoader");

        r20 = $r19;

        $z2 = $r19 instanceof java.lang.ClassLoader;

        if $z2 != 0 goto label3;

        $r17 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        r20 = virtualinvoke $r17.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label3:
        $r5 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r4 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r5.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);

        if $z0 == 0 goto label4;

        $r9 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Put ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.logging.Logger: void fine(java.lang.String)>($r16);

     label4:
        $r7 = (java.util.Map) r18;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, r6);

        return;
    }

    static java.lang.ClassLoader getCallerClassLoader()
    {
        java.lang.StackTraceElement[] $r2;
        java.lang.Thread $r1;
        java.lang.Object $r0;
        java.lang.StackTraceElement $r3;
        java.lang.Class $r5;
        java.lang.ClassNotFoundException $r8;
        java.lang.String $r4;
        java.lang.ClassLoader $r6, $r7;
        boolean $z0;

        $r0 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("ClassLoader");

        $z0 = $r0 instanceof java.lang.ClassLoader;

        if $z0 == 0 goto label1;

        $r7 = (java.lang.ClassLoader) $r0;

        return $r7;

     label1:
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r3 = $r2[3];

        $r4 = virtualinvoke $r3.<java.lang.StackTraceElement: java.lang.String getClassName()>();

     label2:
        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label3:
        return $r6;

     label4:
        $r8 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    public static java.lang.Object get(java.lang.Object)
    {
        java.util.Map r3;
        java.util.Set $r57;
        java.lang.Exception $r68;
        java.lang.StringBuilder $r12, $r14, $r15, $r16, $r18, $r25, $r27, $r28, $r35, $r37, $r38, $r39, $r40, $r44, $r46, $r47, $r48, $r49, $r51, $r53, $r54, $r55, $r60, $r62, $r63, $r64, $r66;
        java.lang.ClassLoader $r6, $r8, $r17, $r30, $r31, r69;
        java.lang.String $r2, $r19, $r29, $r41, $r50, $r56, $r67;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Collection $r20;
        java.util.logging.Logger $r5, $r11, $r13, $r24, $r26, $r34, $r36, $r43, $r45, $r52, $r61;
        java.util.logging.Level $r4, $r10, $r23, $r33, $r42;
        int $i0;
        java.util.Iterator $r21, $r58;
        java.lang.Object r0, $r1, $r7, $r9, $r22, $r32, $r59, $r65, r70;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>(r0);

        staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: void log(java.lang.Object,java.lang.Object,java.util.Locale)>($r1, r0, null);

        $z0 = $r1 instanceof java.util.Map;

        if $z0 == 0 goto label12;

        $r2 = "Theme.painter";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label12;

        r3 = (java.util.Map) $r1;

        $r5 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r4 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r5.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);

        if $z2 == 0 goto label02;

        $r52 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from a map");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.util.logging.Logger: void fine(java.lang.String)>($r56);

        $r57 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();

        $r58 = interfaceinvoke $r57.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z7 = interfaceinvoke $r58.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label02;

        $r59 = interfaceinvoke $r58.<java.util.Iterator: java.lang.Object next()>();

        $r61 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r59);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r65 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r59);

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r61.<java.util.logging.Logger: void fine(java.lang.String)>($r67);

        goto label01;

     label02:
        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.ClassLoader getCallerClassLoader()>();

        r69 = $r6;

        $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r70 = $r7;

        if $r7 == null goto label03;

        $r43 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r42 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z6 = virtualinvoke $r43.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r42);

        if $z6 == 0 goto label03;

        $r45 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tGetting ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using CallerClassLoader");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.util.logging.Logger: void fine(java.lang.String)>($r50);

     label03:
        if r70 != null goto label04;

        $r30 = virtualinvoke r69.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        if $r30 == null goto label04;

        $r31 = virtualinvoke r69.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        r69 = $r31;

        $r32 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r31);

        r70 = $r32;

        if $r32 == null goto label03;

        $r34 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r33 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z5 = virtualinvoke $r34.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r33);

        if $z5 == 0 goto label04;

        $r36 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tGetting ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using one of the parent ClassLoader ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.util.logging.Logger: void fine(java.lang.String)>($r41);

        goto label04;

     label04:
        if r70 == null goto label06;

     label05:
        return r70;

     label06:
        goto label08;

     label07:
        $r68 := @caughtexception;

     label08:
        $i0 = interfaceinvoke r3.<java.util.Map: int size()>();

        if $i0 != 1 goto label10;

        $r20 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>();

        $r21 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        $r24 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r23 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z4 = virtualinvoke $r24.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r23);

        if $z4 == 0 goto label09;

        $r26 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed...getting the only one ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.util.logging.Logger: void fine(java.lang.String)>($r29);

     label09:
        return $r22;

     label10:
        $r8 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.ClassLoader getUIManagerClassLoader()>();

        $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r11 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r10 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z3 = virtualinvoke $r11.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r10);

        if $z3 == 0 goto label11;

        $r13 = <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed...getting ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using UIManagerClassLoader ");

        $r17 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.ClassLoader getUIManagerClassLoader()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.util.logging.Logger: void fine(java.lang.String)>($r19);

     label11:
        return $r9;

     label12:
        return $r1;

        catch java.lang.Exception from label02 to label05 with label07;
    }

    public static java.lang.Object get(java.lang.Object, java.util.Locale)
    {
        java.lang.Object r0, $r2;
        java.util.Locale r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: void log(java.lang.Object,java.lang.Object,java.util.Locale)>($r2, r0, r1);

        return $r2;
    }

    private static void log(java.lang.Object, java.lang.Object, java.util.Locale)
    {
        java.util.Locale r6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r8, $r11, $r12, $r14, $r15, $r17, $r19, $r20, $r21, $r22, $r24, $r26, $r27, $r28, $r29;
        java.lang.String $r10, $r13, $r16, $r23, $r30, $r31, $r32, $r33;
        java.io.PrintStream $r2, $r18, $r25;
        java.lang.Object r0, r4;
        java.lang.Class $r9;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.util.Locale;

        $z0 = <com.jidesoft.plaf.UIDefaultsLookup: boolean _debug>;

        if $z0 == 0 goto label3;

        if r0 != null goto label3;

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        if r6 != null goto label1;

        $r31 = "";

        goto label2;

     label1:
        $r31 = virtualinvoke r6.<java.util.Locale: java.lang.String toString()>();

     label2:
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \" ==> null ------------------------");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r30);

        goto label9;

     label3:
        $z1 = <com.jidesoft.plaf.UIDefaultsLookup: boolean _trace>;

        if $z1 == 0 goto label9;

        if r0 != null goto label6;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        if r6 != null goto label4;

        $r32 = "";

        goto label5;

     label4:
        $r32 = virtualinvoke r6.<java.util.Locale: java.lang.String toString()>();

     label5:
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \" ==> null ------------------------");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23);

        goto label9;

     label6:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        if r6 != null goto label7;

        $r33 = "";

        goto label8;

     label7:
        $r33 = virtualinvoke r6.<java.util.Locale: java.lang.String toString()>();

     label8:
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \" ==> ");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r13 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: java.lang.String toString(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label9:
        return;
    }

    public static java.awt.Font getFont(java.lang.Object)
    {
        java.awt.Font $r2;
        java.lang.Object r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r1 instanceof java.awt.Font;

        if $z0 == 0 goto label1;

        $r2 = (java.awt.Font) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.awt.Font getFont(java.lang.Object, java.util.Locale)
    {
        java.util.Locale r1;
        java.awt.Font $r3;
        java.lang.Object r0, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        $z0 = $r2 instanceof java.awt.Font;

        if $z0 == 0 goto label1;

        $r3 = (java.awt.Font) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public static java.awt.Color getColor(java.lang.Object)
    {
        java.awt.Color $r2;
        java.lang.Object r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r1 instanceof java.awt.Color;

        if $z0 == 0 goto label1;

        $r2 = (java.awt.Color) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.awt.Color getColor(java.lang.Object, java.util.Locale)
    {
        java.awt.Color $r3;
        java.util.Locale r1;
        java.lang.Object r0, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        $z0 = $r2 instanceof java.awt.Color;

        if $z0 == 0 goto label1;

        $r3 = (java.awt.Color) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public static javax.swing.Icon getIcon(java.lang.Object)
    {
        java.lang.Object r0, $r1;
        javax.swing.Icon $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r1 instanceof javax.swing.Icon;

        if $z0 == 0 goto label1;

        $r2 = (javax.swing.Icon) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static javax.swing.Icon getIcon(java.lang.Object, java.util.Locale)
    {
        java.util.Locale r1;
        java.lang.Object r0, $r2;
        javax.swing.Icon $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        $z0 = $r2 instanceof javax.swing.Icon;

        if $z0 == 0 goto label1;

        $r3 = (javax.swing.Icon) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public static javax.swing.border.Border getBorder(java.lang.Object)
    {
        java.lang.Object r0, $r1;
        boolean $z0;
        javax.swing.border.Border $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r1 instanceof javax.swing.border.Border;

        if $z0 == 0 goto label1;

        $r2 = (javax.swing.border.Border) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static javax.swing.border.Border getBorder(java.lang.Object, java.util.Locale)
    {
        java.util.Locale r1;
        java.lang.Object r0, $r2;
        boolean $z0;
        javax.swing.border.Border $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        $z0 = $r2 instanceof javax.swing.border.Border;

        if $z0 == 0 goto label1;

        $r3 = (javax.swing.border.Border) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public static java.lang.String getString(java.lang.Object)
    {
        java.lang.Object r0, $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.String) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.lang.String getString(java.lang.Object, java.util.Locale)
    {
        java.util.Locale r1;
        java.lang.Object r0, $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.String) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public static int getInt(java.lang.Object)
    {
        int $i0;
        java.lang.Object r0, $r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r1 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public static int getInt(java.lang.Object, java.util.Locale)
    {
        java.util.Locale r1;
        int $i0;
        java.lang.Object r0, $r2;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        $z0 = $r2 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public static boolean getBoolean(java.lang.Object)
    {
        java.lang.Boolean $r2;
        java.lang.Object r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.Boolean) $r1;

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean getBoolean(java.lang.Object, boolean)
    {
        java.lang.Boolean $r2;
        java.lang.Object r0, $r1;
        boolean $z0, z1, $z2;

        r0 := @parameter0: java.lang.Object;

        z1 := @parameter1: boolean;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.Boolean) $r1;

        $z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        goto label2;

     label1:
        $z2 = z1;

     label2:
        return $z2;
    }

    public static boolean getBoolean(java.lang.Object, java.util.Locale)
    {
        java.util.Locale r1;
        java.lang.Boolean $r3;
        java.lang.Object r0, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        $z0 = $r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Boolean) $r2;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static java.awt.Insets getInsets(java.lang.Object)
    {
        java.awt.Insets $r2;
        java.lang.Object r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r1 instanceof java.awt.Insets;

        if $z0 == 0 goto label1;

        $r2 = (java.awt.Insets) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.awt.Insets getInsets(java.lang.Object, java.util.Locale)
    {
        java.awt.Insets $r3;
        java.util.Locale r1;
        java.lang.Object r0, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        $z0 = $r2 instanceof java.awt.Insets;

        if $z0 == 0 goto label1;

        $r3 = (java.awt.Insets) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public static java.awt.Dimension getDimension(java.lang.Object)
    {
        java.awt.Dimension $r2;
        java.lang.Object r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r1 instanceof java.awt.Dimension;

        if $z0 == 0 goto label1;

        $r2 = (java.awt.Dimension) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.awt.Dimension getDimension(java.lang.Object, java.util.Locale)
    {
        java.awt.Dimension $r3;
        java.util.Locale r1;
        java.lang.Object r0, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object,java.util.Locale)>(r0, r1);

        $z0 = $r2 instanceof java.awt.Dimension;

        if $z0 == 0 goto label1;

        $r3 = (java.awt.Dimension) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/jidesoft/plaf/UIDefaultsLookup;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.jidesoft.plaf.UIDefaultsLookup: java.util.logging.Logger LOGGER> = $r2;

        <com.jidesoft.plaf.UIDefaultsLookup: boolean _debug> = 0;

        <com.jidesoft.plaf.UIDefaultsLookup: boolean _trace> = 0;

        return;
    }
}
