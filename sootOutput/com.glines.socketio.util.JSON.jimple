public final class com.glines.socketio.util.JSON extends java.lang.Object
{
    private static final int BUFFER;

    private void <init>()
    {
        com.glines.socketio.util.JSON r0;

        r0 := @this: com.glines.socketio.util.JSON;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String toString(java.lang.Object)
    {
        java.lang.StringBuilder $r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r1 := @parameter0: java.lang.Object;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(1024);

        staticinvoke <com.glines.socketio.util.JSON: void append(java.lang.Appendable,java.lang.Object)>($r0, r1);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toString(java.util.Map)
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        java.util.Map r1;

        r1 := @parameter0: java.util.Map;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(1024);

        staticinvoke <com.glines.socketio.util.JSON: void appendMap(java.lang.Appendable,java.util.Map)>($r0, r1);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toString(java.lang.Object[])
    {
        java.lang.StringBuilder $r0;
        java.lang.Object[] r1;
        java.lang.String $r2;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(1024);

        staticinvoke <com.glines.socketio.util.JSON: void appendArray(java.lang.Appendable,java.lang.Object)>($r0, r1);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.Object parse(java.lang.String)
    {
        com.glines.socketio.util.JSON$StringSource $r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.glines.socketio.util.JSON$StringSource;

        specialinvoke $r0.<com.glines.socketio.util.JSON$StringSource: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parse(com.glines.socketio.util.JSON$Source,boolean)>($r0, 0);

        return $r2;
    }

    public static java.lang.Object parse(java.lang.String, boolean)
    {
        com.glines.socketio.util.JSON$StringSource $r0;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean z0;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new com.glines.socketio.util.JSON$StringSource;

        specialinvoke $r0.<com.glines.socketio.util.JSON$StringSource: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parse(com.glines.socketio.util.JSON$Source,boolean)>($r0, z0);

        return $r2;
    }

    public static java.lang.Object parse(java.io.Reader) throws java.io.IOException
    {
        java.lang.Object $r2;
        java.io.Reader r1;
        com.glines.socketio.util.JSON$ReaderSource $r0;

        r1 := @parameter0: java.io.Reader;

        $r0 = new com.glines.socketio.util.JSON$ReaderSource;

        specialinvoke $r0.<com.glines.socketio.util.JSON$ReaderSource: void <init>(java.io.Reader)>(r1);

        $r2 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parse(com.glines.socketio.util.JSON$Source,boolean)>($r0, 0);

        return $r2;
    }

    public static java.lang.Object parse(java.io.Reader, boolean) throws java.io.IOException
    {
        com.glines.socketio.util.JSON$ReaderSource $r0;
        java.lang.Object $r2;
        java.io.Reader r1;
        boolean z0;

        r1 := @parameter0: java.io.Reader;

        z0 := @parameter1: boolean;

        $r0 = new com.glines.socketio.util.JSON$ReaderSource;

        specialinvoke $r0.<com.glines.socketio.util.JSON$ReaderSource: void <init>(java.io.Reader)>(r1);

        $r2 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parse(com.glines.socketio.util.JSON$Source,boolean)>($r0, z0);

        return $r2;
    }

    public static void append(java.lang.Appendable, java.lang.Object)
    {
        java.util.Map $r9;
        java.lang.Boolean $r6;
        java.lang.String $r3, $r4, $r5;
        com.glines.socketio.util.JSON$Generator $r10;
        java.lang.Number $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Appendable r2;
        java.util.Collection $r8;
        java.io.IOException $r12;
        java.lang.RuntimeException $r13;
        java.lang.Object r0;
        java.lang.Class $r1;
        com.glines.socketio.util.JSON$Convertible $r11;

        r2 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: java.lang.Object;

     label01:
        if r0 != null goto label02;

        interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("null");

        goto label14;

     label02:
        $z0 = r0 instanceof com.glines.socketio.util.JSON$Convertible;

        if $z0 == 0 goto label03;

        $r11 = (com.glines.socketio.util.JSON$Convertible) r0;

        staticinvoke <com.glines.socketio.util.JSON: void appendJSON(java.lang.Appendable,com.glines.socketio.util.JSON$Convertible)>(r2, $r11);

        goto label14;

     label03:
        $z1 = r0 instanceof com.glines.socketio.util.JSON$Generator;

        if $z1 == 0 goto label04;

        $r10 = (com.glines.socketio.util.JSON$Generator) r0;

        staticinvoke <com.glines.socketio.util.JSON: void appendJSON(java.lang.Appendable,com.glines.socketio.util.JSON$Generator)>(r2, $r10);

        goto label14;

     label04:
        $z2 = r0 instanceof java.util.Map;

        if $z2 == 0 goto label05;

        $r9 = (java.util.Map) r0;

        staticinvoke <com.glines.socketio.util.JSON: void appendMap(java.lang.Appendable,java.util.Map)>(r2, $r9);

        goto label14;

     label05:
        $z3 = r0 instanceof java.util.Collection;

        if $z3 == 0 goto label06;

        $r8 = (java.util.Collection) r0;

        staticinvoke <com.glines.socketio.util.JSON: void appendArray(java.lang.Appendable,java.util.Collection)>(r2, $r8);

        goto label14;

     label06:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z4 == 0 goto label07;

        staticinvoke <com.glines.socketio.util.JSON: void appendArray(java.lang.Appendable,java.lang.Object)>(r2, r0);

        goto label14;

     label07:
        $z5 = r0 instanceof java.lang.Number;

        if $z5 == 0 goto label08;

        $r7 = (java.lang.Number) r0;

        staticinvoke <com.glines.socketio.util.JSON: void appendNumber(java.lang.Appendable,java.lang.Number)>(r2, $r7);

        goto label14;

     label08:
        $z6 = r0 instanceof java.lang.Boolean;

        if $z6 == 0 goto label09;

        $r6 = (java.lang.Boolean) r0;

        staticinvoke <com.glines.socketio.util.JSON: void appendBoolean(java.lang.Appendable,java.lang.Boolean)>(r2, $r6);

        goto label14;

     label09:
        $z7 = r0 instanceof java.lang.Character;

        if $z7 == 0 goto label10;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.glines.socketio.util.JSON: void appendString(java.lang.Appendable,java.lang.String)>(r2, $r5);

        goto label14;

     label10:
        $z8 = r0 instanceof java.lang.String;

        if $z8 == 0 goto label11;

        $r4 = (java.lang.String) r0;

        staticinvoke <com.glines.socketio.util.JSON: void appendString(java.lang.Appendable,java.lang.String)>(r2, $r4);

        goto label14;

     label11:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.glines.socketio.util.JSON: void appendString(java.lang.Appendable,java.lang.String)>(r2, $r3);

     label12:
        goto label14;

     label13:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label14:
        return;

        catch java.io.IOException from label01 to label12 with label13;
    }

    public static void appendNull(java.lang.Appendable)
    {
        java.io.IOException $r1;
        java.lang.RuntimeException $r2;
        java.lang.Appendable r0;

        r0 := @parameter0: java.lang.Appendable;

     label1:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("null");

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1);

        throw $r2;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void appendJSON(java.lang.Appendable, com.glines.socketio.util.JSON$Convertible)
    {
        com.glines.socketio.util.JSON$Convertible r2;
        com.glines.socketio.util.JSON$ConvertableOutput $r0;
        java.lang.Appendable r1;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: com.glines.socketio.util.JSON$Convertible;

        $r0 = new com.glines.socketio.util.JSON$ConvertableOutput;

        specialinvoke $r0.<com.glines.socketio.util.JSON$ConvertableOutput: void <init>(java.lang.Appendable,com.glines.socketio.util.JSON$ConvertableOutput)>(r1, null);

        interfaceinvoke r2.<com.glines.socketio.util.JSON$Convertible: void toJSON(com.glines.socketio.util.JSON$Output)>($r0);

        virtualinvoke $r0.<com.glines.socketio.util.JSON$ConvertableOutput: void complete()>();

        return;
    }

    public static void appendJSON(java.lang.Appendable, com.glines.socketio.util.JSON$Generator)
    {
        com.glines.socketio.util.JSON$Generator r0;
        java.lang.Appendable r1;

        r1 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: com.glines.socketio.util.JSON$Generator;

        interfaceinvoke r0.<com.glines.socketio.util.JSON$Generator: void addJSON(java.lang.Appendable)>(r1);

        return;
    }

    public static void appendMap(java.lang.Appendable, java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.lang.Appendable r1;
        java.util.Set $r2;
        java.io.IOException $r9;
        java.lang.RuntimeException $r10;
        java.util.Map r0;
        java.lang.Object $r4, $r6, $r8;
        java.lang.String $r7;
        boolean $z0, $z1;

        r1 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: java.util.Map;

     label1:
        if r0 != null goto label3;

        staticinvoke <com.glines.socketio.util.JSON: void appendNull(java.lang.Appendable)>(r1);

     label2:
        return;

     label3:
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(123);

        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label5;

     label4:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.glines.socketio.util.JSON: void quote(java.lang.Appendable,java.lang.String)>(r1, $r7);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(58);

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <com.glines.socketio.util.JSON: void append(java.lang.Appendable,java.lang.Object)>(r1, $r8);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(44);

     label5:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label4;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(125);

     label6:
        goto label8;

     label7:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label6 with label7;
    }

    public static void appendArray(java.lang.Appendable, java.util.Collection)
    {
        java.util.Iterator $r2;
        java.lang.Appendable r1;
        java.util.Collection r0;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;
        java.lang.Object $r3;
        boolean z0, $z1;

        r1 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: java.util.Collection;

     label1:
        if r0 != null goto label3;

        staticinvoke <com.glines.socketio.util.JSON: void appendNull(java.lang.Appendable)>(r1);

     label2:
        return;

     label3:
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(91);

        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

        z0 = 1;

        goto label6;

     label4:
        if z0 != 0 goto label5;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(44);

     label5:
        z0 = 0;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <com.glines.socketio.util.JSON: void append(java.lang.Appendable,java.lang.Object)>(r1, $r3);

     label6:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label4;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(93);

     label7:
        goto label9;

     label8:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label7 with label8;
    }

    public static void appendArray(java.lang.Appendable, java.lang.Object)
    {
        java.lang.Appendable r1;
        int $i0, i1;
        java.lang.Object r0, $r2;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;

        r1 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: java.lang.Object;

     label1:
        if r0 != null goto label3;

        staticinvoke <com.glines.socketio.util.JSON: void appendNull(java.lang.Appendable)>(r1);

     label2:
        return;

     label3:
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(91);

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        i1 = 0;

        goto label6;

     label4:
        if i1 == 0 goto label5;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(44);

     label5:
        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i1);

        staticinvoke <com.glines.socketio.util.JSON: void append(java.lang.Appendable,java.lang.Object)>(r1, $r2);

        i1 = i1 + 1;

     label6:
        if i1 < $i0 goto label4;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(93);

     label7:
        goto label9;

     label8:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label7 with label8;
    }

    public static void appendBoolean(java.lang.Appendable, java.lang.Boolean)
    {
        java.lang.Appendable r1;
        java.lang.Boolean r0;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String $r4;
        boolean $z0;

        r1 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: java.lang.Boolean;

     label1:
        if r0 != null goto label3;

        staticinvoke <com.glines.socketio.util.JSON: void appendNull(java.lang.Appendable)>(r1);

     label2:
        return;

     label3:
        $z0 = virtualinvoke r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label4;

        $r4 = "true";

        goto label5;

     label4:
        $r4 = "false";

     label5:
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label6 with label7;
    }

    public static void appendNumber(java.lang.Appendable, java.lang.Number)
    {
        java.lang.Appendable r1;
        java.io.IOException $r3;
        java.lang.String $r2;
        java.lang.RuntimeException $r4;
        java.lang.Number r0;

        r1 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: java.lang.Number;

     label1:
        if r0 != null goto label3;

        staticinvoke <com.glines.socketio.util.JSON: void appendNull(java.lang.Appendable)>(r1);

     label2:
        return;

     label3:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public static void appendString(java.lang.Appendable, java.lang.String)
    {
        java.lang.String r0;
        java.lang.Appendable r1;

        r1 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        staticinvoke <com.glines.socketio.util.JSON: void appendNull(java.lang.Appendable)>(r1);

        return;

     label1:
        staticinvoke <com.glines.socketio.util.JSON: void quote(java.lang.Appendable,java.lang.String)>(r1, r0);

        return;
    }

    protected static java.lang.String toString(char[], int, int)
    {
        int i0, i1;
        char[] r1;
        java.lang.String $r0;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        return $r0;
    }

    protected static java.util.Map newMap()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        return $r0;
    }

    protected static java.lang.Object[] newArray(int)
    {
        int i0;
        java.lang.Object[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.Object)[i0];

        return $r0;
    }

    protected static java.lang.Object convertTo(java.lang.Class, java.util.Map)
    {
        java.lang.RuntimeException $r5;
        java.lang.Exception $r4;
        java.util.Map r1;
        java.lang.Class r0, $r2;
        java.lang.Object $r3;
        com.glines.socketio.util.JSON$Convertible r6;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.util.Map;

        if r0 == null goto label4;

        $r2 = class "Lcom/glines/socketio/util/JSON$Convertible;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label4;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        r6 = (com.glines.socketio.util.JSON$Convertible) $r3;

        interfaceinvoke r6.<com.glines.socketio.util.JSON$Convertible: void fromJSON(java.util.Map)>(r1);

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        return r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.Object parse(com.glines.socketio.util.JSON$Source, boolean)
    {
        byte b1, b2, b3, b4, b5, b6, b7, b8;
        int $i9, $i10, $i11, $i12, $i13;
        boolean z0, $z1, $z2;
        com.glines.socketio.util.JSON$Source r0;
        char $c0;
        java.lang.Object $r1, r2;

        r0 := @parameter0: com.glines.socketio.util.JSON$Source;

        z0 := @parameter1: boolean;

        b1 = 0;

        b8 = 0;

        b7 = 0;

        b6 = 0;

        b5 = 0;

        if z0 != 0 goto label01;

        $r1 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parse(com.glines.socketio.util.JSON$Source)>(r0);

        return $r1;

     label01:
        b2 = 1;

        b4 = 1;

        b3 = 1;

        r2 = null;

        goto label18;

     label02:
        $c0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char peek()>();

        if b5 != 1 goto label06;

        $i9 = (int) $c0;

        lookupswitch($i9)
        {
            case 42: goto label04;
            case 47: goto label03;
            default: goto label05;
        };

     label03:
        b1 = -1;

        b8 = -1;

        b7 = -1;

        b6 = -1;

        b5 = -1;

        goto label17;

     label04:
        b1 = 2;

        b8 = 2;

        b7 = 2;

        b6 = 2;

        b5 = 2;

        if b3 != 1 goto label17;

        b1 = 0;

        b8 = 0;

        b7 = 0;

        b6 = 0;

        b5 = 0;

        b2 = 2;

        b4 = 2;

        b3 = 2;

     label05:
        goto label17;

     label06:
        if b6 <= 1 goto label11;

        $i10 = (int) $c0;

        lookupswitch($i10)
        {
            case 42: goto label07;
            case 47: goto label08;
            default: goto label10;
        };

     label07:
        b1 = 3;

        b8 = 3;

        b7 = 3;

        b6 = 3;

        b5 = 3;

        goto label17;

     label08:
        if b7 != 3 goto label09;

        b1 = 0;

        b8 = 0;

        b7 = 0;

        b6 = 0;

        b5 = 0;

        if b4 != 2 goto label17;

        return r2;

     label09:
        b1 = 2;

        b8 = 2;

        b7 = 2;

        b6 = 2;

        b5 = 2;

        goto label17;

     label10:
        b1 = 2;

        b8 = 2;

        b7 = 2;

        b6 = 2;

        b5 = 2;

        goto label17;

     label11:
        if b8 >= 0 goto label14;

        $i11 = (int) $c0;

        tableswitch($i11)
        {
            case 10: goto label12;
            case 11: goto label13;
            case 12: goto label13;
            case 13: goto label12;
            default: goto label13;
        };

     label12:
        b1 = 0;

        b8 = 0;

        b7 = 0;

        b6 = 0;

        b5 = 0;

     label13:
        goto label17;

     label14:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z1 != 0 goto label17;

        $i12 = (int) $c0;

        if $i12 != 47 goto label15;

        b1 = 1;

        b8 = 1;

        b7 = 1;

        b6 = 1;

        b5 = 1;

        goto label17;

     label15:
        $i13 = (int) $c0;

        if $i13 != 42 goto label16;

        b1 = 3;

        b8 = 3;

        b7 = 3;

        b6 = 3;

        b5 = 3;

        goto label17;

     label16:
        if r2 != null goto label17;

        r2 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parse(com.glines.socketio.util.JSON$Source)>(r0);

        goto label18;

     label17:
        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

     label18:
        $z2 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z2 != 0 goto label02;

        return r2;
    }

    public static java.lang.Object parse(com.glines.socketio.util.JSON$Source)
    {
        byte b1, b2, b3, b4, b5;
        int $i6, $i7, $i8, $i9;
        java.lang.Boolean $r2, $r3;
        java.lang.String $r6;
        java.lang.Number $r5, $r8;
        boolean $z0, $z1, $z2;
        com.glines.socketio.util.JSON$Source r0;
        char $c0;
        java.lang.Object $r1, $r4, $r7;

        r0 := @parameter0: com.glines.socketio.util.JSON$Source;

        b1 = 0;

        b5 = 0;

        b4 = 0;

        b3 = 0;

        b2 = 0;

        goto label28;

     label01:
        $c0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char peek()>();

        if b5 != 1 goto label05;

        $i6 = (int) $c0;

        lookupswitch($i6)
        {
            case 42: goto label03;
            case 47: goto label02;
            default: goto label04;
        };

     label02:
        b1 = -1;

        b5 = -1;

        b4 = -1;

        b3 = -1;

        b2 = -1;

        goto label27;

     label03:
        b1 = 2;

        b5 = 2;

        b4 = 2;

        b3 = 2;

        b2 = 2;

     label04:
        goto label27;

     label05:
        if b2 <= 1 goto label10;

        $i7 = (int) $c0;

        lookupswitch($i7)
        {
            case 42: goto label06;
            case 47: goto label07;
            default: goto label09;
        };

     label06:
        b1 = 3;

        b5 = 3;

        b4 = 3;

        b3 = 3;

        b2 = 3;

        goto label27;

     label07:
        if b4 != 3 goto label08;

        b1 = 0;

        b5 = 0;

        b4 = 0;

        b3 = 0;

        b2 = 0;

        goto label27;

     label08:
        b1 = 2;

        b5 = 2;

        b4 = 2;

        b3 = 2;

        b2 = 2;

        goto label27;

     label09:
        b1 = 2;

        b5 = 2;

        b4 = 2;

        b3 = 2;

        b2 = 2;

        goto label27;

     label10:
        if b3 >= 0 goto label13;

        $i8 = (int) $c0;

        tableswitch($i8)
        {
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label12;
            case 13: goto label11;
            default: goto label12;
        };

     label11:
        b1 = 0;

        b5 = 0;

        b4 = 0;

        b3 = 0;

        b2 = 0;

        goto label27;

     label12:
        goto label27;

     label13:
        $i9 = (int) $c0;

        lookupswitch($i9)
        {
            case 34: goto label16;
            case 45: goto label17;
            case 47: goto label23;
            case 78: goto label22;
            case 91: goto label15;
            case 102: goto label20;
            case 110: goto label18;
            case 116: goto label19;
            case 117: goto label21;
            case 123: goto label14;
            default: goto label24;
        };

     label14:
        $r1 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parseObject(com.glines.socketio.util.JSON$Source)>(r0);

        return $r1;

     label15:
        $r4 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parseArray(com.glines.socketio.util.JSON$Source)>(r0);

        return $r4;

     label16:
        $r6 = staticinvoke <com.glines.socketio.util.JSON: java.lang.String parseString(com.glines.socketio.util.JSON$Source)>(r0);

        return $r6;

     label17:
        $r5 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Number parseNumber(com.glines.socketio.util.JSON$Source)>(r0);

        return $r5;

     label18:
        staticinvoke <com.glines.socketio.util.JSON: void complete(java.lang.String,com.glines.socketio.util.JSON$Source)>("null", r0);

        return null;

     label19:
        staticinvoke <com.glines.socketio.util.JSON: void complete(java.lang.String,com.glines.socketio.util.JSON$Source)>("true", r0);

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r2;

     label20:
        staticinvoke <com.glines.socketio.util.JSON: void complete(java.lang.String,com.glines.socketio.util.JSON$Source)>("false", r0);

        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r3;

     label21:
        staticinvoke <com.glines.socketio.util.JSON: void complete(java.lang.String,com.glines.socketio.util.JSON$Source)>("undefined", r0);

        return null;

     label22:
        staticinvoke <com.glines.socketio.util.JSON: void complete(java.lang.String,com.glines.socketio.util.JSON$Source)>("NaN", r0);

        return null;

     label23:
        b1 = 1;

        b5 = 1;

        b4 = 1;

        b3 = 1;

        b2 = 1;

        goto label27;

     label24:
        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        if $z0 == 0 goto label25;

        $r8 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Number parseNumber(com.glines.socketio.util.JSON$Source)>(r0);

        return $r8;

     label25:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z1 == 0 goto label26;

        goto label27;

     label26:
        $r7 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object handleUnknown(com.glines.socketio.util.JSON$Source,char)>(r0, $c0);

        return $r7;

     label27:
        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

     label28:
        $z2 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z2 != 0 goto label01;

        return null;
    }

    protected static java.lang.Object handleUnknown(com.glines.socketio.util.JSON$Source, char)
    {
        java.lang.IllegalStateException $r10;
        com.glines.socketio.util.JSON$Source r6;
        char c0;
        int $i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r9;
        java.lang.String $r8;

        r6 := @parameter0: com.glines.socketio.util.JSON$Source;

        c0 := @parameter1: char;

        $r10 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("unknown char \'");

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'(");

        $i1 = (int) c0;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r10;
    }

    private static java.lang.Object parseObject(com.glines.socketio.util.JSON$Source)
    {
        java.lang.IllegalStateException $r12;
        java.util.Map $r1;
        java.lang.Thread $r4;
        int $i3, $i4, $i5;
        java.lang.String $r2, $r11;
        boolean $z0;
        com.glines.socketio.util.JSON$Source r0;
        char $c0, $c1, c2;
        java.lang.Object $r3, $r7, $r10;
        java.lang.Class $r6;
        java.lang.ClassNotFoundException $r9;
        java.lang.ClassLoader $r5;

        r0 := @parameter0: com.glines.socketio.util.JSON$Source;

        $c0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $i3 = (int) $c0;

        if $i3 == 123 goto label01;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>()>();

        throw $r12;

     label01:
        $r1 = staticinvoke <com.glines.socketio.util.JSON: java.util.Map newMap()>();

        c2 = staticinvoke <com.glines.socketio.util.JSON: char seekTo(java.lang.String,com.glines.socketio.util.JSON$Source)>("\"}", r0);

        goto label05;

     label02:
        $i4 = (int) c2;

        if $i4 != 125 goto label03;

        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        goto label06;

     label03:
        $r2 = staticinvoke <com.glines.socketio.util.JSON: java.lang.String parseString(com.glines.socketio.util.JSON$Source)>(r0);

        staticinvoke <com.glines.socketio.util.JSON: void seekTo(char,com.glines.socketio.util.JSON$Source)>(58, r0);

        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $r3 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parse(com.glines.socketio.util.JSON$Source)>(r0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        staticinvoke <com.glines.socketio.util.JSON: char seekTo(java.lang.String,com.glines.socketio.util.JSON$Source)>(",}", r0);

        $c1 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $i5 = (int) $c1;

        if $i5 != 125 goto label04;

        goto label06;

     label04:
        c2 = staticinvoke <com.glines.socketio.util.JSON: char seekTo(java.lang.String,com.glines.socketio.util.JSON$Source)>("\"}", r0);

     label05:
        $z0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z0 != 0 goto label02;

     label06:
        $r10 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("class");

        $r11 = (java.lang.String) $r10;

        if $r11 == null goto label10;

     label07:
        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r11);

        $r7 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object convertTo(java.lang.Class,java.util.Map)>($r6, $r1);

     label08:
        return $r7;

     label09:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.ClassNotFoundException: void printStackTrace()>();

     label10:
        return $r1;

        catch java.lang.ClassNotFoundException from label07 to label08 with label09;
    }

    protected static java.lang.Object parseArray(com.glines.socketio.util.JSON$Source)
    {
        java.lang.IllegalStateException $r13, $r14, $r16;
        java.lang.Object[] $r1, $r2, $r3, $r4;
        java.util.ArrayList r11, $r15;
        int $i2, $i3, i4, $i5, $i6;
        boolean $z0, z1, $z2;
        com.glines.socketio.util.JSON$Source r0;
        char $c0, $c1;
        java.lang.Object $r6, $r8, r12;

        r0 := @parameter0: com.glines.socketio.util.JSON$Source;

        $c0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $i5 = (int) $c0;

        if $i5 == 91 goto label01;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>()>();

        throw $r13;

     label01:
        i4 = 0;

        r11 = null;

        r12 = null;

        z1 = 1;

        goto label13;

     label02:
        $c1 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char peek()>();

        $i6 = (int) $c1;

        lookupswitch($i6)
        {
            case 44: goto label07;
            case 93: goto label03;
            default: goto label09;
        };

     label03:
        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        tableswitch(i4)
        {
            case 0: goto label04;
            case 1: goto label05;
            default: goto label06;
        };

     label04:
        $r2 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object[] newArray(int)>(0);

        return $r2;

     label05:
        $r1 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object[] newArray(int)>(1);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r1, 0, r12);

        return $r1;

     label06:
        $i2 = virtualinvoke r11.<java.util.ArrayList: int size()>();

        $r3 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object[] newArray(int)>($i2);

        $r4 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        return $r4;

     label07:
        if z1 == 0 goto label08;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>()>();

        throw $r14;

     label08:
        z1 = 1;

        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        goto label13;

     label09:
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 == 0 goto label10;

        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        goto label13;

     label10:
        z1 = 0;

        $i3 = i4;

        i4 = i4 + 1;

        if $i3 != 0 goto label11;

        r12 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parse(com.glines.socketio.util.JSON$Source)>(r0);

        goto label13;

     label11:
        if r11 != null goto label12;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r11 = $r15;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        $r8 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parse(com.glines.socketio.util.JSON$Source)>(r0);

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        r12 = null;

        goto label13;

     label12:
        $r6 = staticinvoke <com.glines.socketio.util.JSON: java.lang.Object parse(com.glines.socketio.util.JSON$Source)>(r0);

        virtualinvoke r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        r12 = null;

     label13:
        $z2 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z2 != 0 goto label02;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unexpected end of array");

        throw $r16;
    }

    protected static java.lang.String parseString(com.glines.socketio.util.JSON$Source)
    {
        byte $b3, $b4, $b7, $b8, $b12, $b13, $b17, $b18, $b24, $b25, $b28, $b29, $b33, $b34, $b38, $b39;
        com.glines.socketio.util.JSON$Source r0;
        java.lang.StringBuilder r8, r9, $r11, $r12;
        java.lang.String $r3, $r4, $r6;
        char[] $r1;
        java.lang.IllegalStateException $r10;
        boolean z0, $z1, $z2, z3, z4;
        int $i5, $i9, $i10, $i14, $i15, $i19, $i20, $i22, $i26, $i30, $i31, $i35, $i36, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, i53, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70;
        char $c0, $c1, $c2, $c6, $c11, $c16, $c21, $c23, $c27, $c32, $c37, c54, c55;

        r0 := @parameter0: com.glines.socketio.util.JSON$Source;

        $c0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $i56 = (int) $c0;

        if $i56 == 34 goto label01;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        throw $r10;

     label01:
        z0 = 0;

        z4 = 0;

        z3 = 0;

        r8 = null;

        $r1 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char[] scratchBuffer()>();

        if $r1 == null goto label19;

        i53 = 0;

        goto label17;

     label02:
        $i20 = lengthof $r1;

        if i53 < $i20 goto label03;

        $r11 = new java.lang.StringBuilder;

        $i51 = lengthof $r1;

        $i52 = $i51 * 2;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(int)>($i52);

        r8 = $r11;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, 0, i53);

        goto label18;

     label03:
        $c21 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        if z4 == 0 goto label14;

        z0 = 0;

        z4 = 0;

        z3 = 0;

        $i57 = (int) $c21;

        lookupswitch($i57)
        {
            case 34: goto label04;
            case 47: goto label06;
            case 92: goto label05;
            case 98: goto label07;
            case 102: goto label08;
            case 110: goto label09;
            case 114: goto label10;
            case 116: goto label11;
            case 117: goto label12;
            default: goto label13;
        };

     label04:
        $i49 = i53;

        i53 = i53 + 1;

        $r1[$i49] = 34;

        goto label17;

     label05:
        $i47 = i53;

        i53 = i53 + 1;

        $r1[$i47] = 92;

        goto label17;

     label06:
        $i48 = i53;

        i53 = i53 + 1;

        $r1[$i48] = 47;

        goto label17;

     label07:
        $i46 = i53;

        i53 = i53 + 1;

        $r1[$i46] = 8;

        goto label17;

     label08:
        $i45 = i53;

        i53 = i53 + 1;

        $r1[$i45] = 12;

        goto label17;

     label09:
        $i44 = i53;

        i53 = i53 + 1;

        $r1[$i44] = 10;

        goto label17;

     label10:
        $i43 = i53;

        i53 = i53 + 1;

        $r1[$i43] = 13;

        goto label17;

     label11:
        $i42 = i53;

        i53 = i53 + 1;

        $r1[$i42] = 9;

        goto label17;

     label12:
        $c23 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $b24 = (byte) $c23;

        $b25 = staticinvoke <com.glines.socketio.util.JSON: byte convertHexDigit(byte)>($b24);

        $i58 = (int) $b25;

        $i26 = $i58 << 12;

        $c27 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $b28 = (byte) $c27;

        $b29 = staticinvoke <com.glines.socketio.util.JSON: byte convertHexDigit(byte)>($b28);

        $i59 = (int) $b29;

        $i30 = $i59 << 8;

        $i31 = $i26 + $i30;

        $c32 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $b33 = (byte) $c32;

        $b34 = staticinvoke <com.glines.socketio.util.JSON: byte convertHexDigit(byte)>($b33);

        $i60 = (int) $b34;

        $i35 = $i60 << 4;

        $i36 = $i31 + $i35;

        $c37 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $b38 = (byte) $c37;

        $b39 = staticinvoke <com.glines.socketio.util.JSON: byte convertHexDigit(byte)>($b38);

        $i61 = (int) $b39;

        $i40 = $i36 + $i61;

        c54 = (char) $i40;

        $i41 = i53;

        i53 = i53 + 1;

        $r1[$i41] = c54;

        goto label17;

     label13:
        $i50 = i53;

        i53 = i53 + 1;

        $r1[$i50] = $c21;

        goto label17;

     label14:
        $i62 = (int) $c21;

        if $i62 != 92 goto label15;

        z0 = 1;

        z4 = 1;

        z3 = 1;

        goto label17;

     label15:
        $i63 = (int) $c21;

        if $i63 != 34 goto label16;

        $r4 = staticinvoke <com.glines.socketio.util.JSON: java.lang.String toString(char[],int,int)>($r1, 0, i53);

        return $r4;

     label16:
        $i22 = i53;

        i53 = i53 + 1;

        $r1[$i22] = $c21;

     label17:
        $z1 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z1 != 0 goto label02;

     label18:
        if r8 != null goto label20;

        $r6 = staticinvoke <com.glines.socketio.util.JSON: java.lang.String toString(char[],int,int)>($r1, 0, i53);

        return $r6;

     label19:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(int)>(1024);

        r8 = $r12;

     label20:
        r9 = r8;

        goto label35;

     label21:
        $c1 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        if z3 == 0 goto label32;

        z0 = 0;

        z3 = 0;

        $i64 = (int) $c1;

        lookupswitch($i64)
        {
            case 34: goto label22;
            case 47: goto label24;
            case 92: goto label23;
            case 98: goto label25;
            case 102: goto label26;
            case 110: goto label27;
            case 114: goto label28;
            case 116: goto label29;
            case 117: goto label30;
            default: goto label31;
        };

     label22:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        goto label35;

     label23:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        goto label35;

     label24:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        goto label35;

     label25:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8);

        goto label35;

     label26:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(12);

        goto label35;

     label27:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label35;

     label28:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

        goto label35;

     label29:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        goto label35;

     label30:
        $c2 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $b3 = (byte) $c2;

        $b4 = staticinvoke <com.glines.socketio.util.JSON: byte convertHexDigit(byte)>($b3);

        $i65 = (int) $b4;

        $i5 = $i65 << 12;

        $c6 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $b7 = (byte) $c6;

        $b8 = staticinvoke <com.glines.socketio.util.JSON: byte convertHexDigit(byte)>($b7);

        $i66 = (int) $b8;

        $i9 = $i66 << 8;

        $i10 = $i5 + $i9;

        $c11 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $b12 = (byte) $c11;

        $b13 = staticinvoke <com.glines.socketio.util.JSON: byte convertHexDigit(byte)>($b12);

        $i67 = (int) $b13;

        $i14 = $i67 << 4;

        $i15 = $i10 + $i14;

        $c16 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $b17 = (byte) $c16;

        $b18 = staticinvoke <com.glines.socketio.util.JSON: byte convertHexDigit(byte)>($b17);

        $i68 = (int) $b18;

        $i19 = $i15 + $i68;

        c55 = (char) $i19;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c55);

        goto label35;

     label31:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label35;

     label32:
        $i69 = (int) $c1;

        if $i69 != 92 goto label33;

        z0 = 1;

        z3 = 1;

        goto label35;

     label33:
        $i70 = (int) $c1;

        if $i70 != 34 goto label34;

        goto label36;

     label34:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

     label35:
        $z2 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z2 != 0 goto label21;

     label36:
        $r3 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.Number parseNumber(com.glines.socketio.util.JSON$Source)
    {
        java.lang.IllegalStateException $r7;
        java.lang.Double $r9;
        long $l2, $l3, l6, $l7;
        byte $b5;
        java.lang.Long $r4;
        int $i1, $i8, $i9, $i10;
        java.lang.String $r3;
        boolean $z0, z1, $z2, z3, z4;
        com.glines.socketio.util.JSON$Source r0;
        char $c0, $c4;
        java.lang.StringBuilder r6, $r8;

        r0 := @parameter0: com.glines.socketio.util.JSON$Source;

        z1 = 0;

        z4 = 0;

        z3 = 0;

        l6 = 0L;

        r6 = null;

        goto label08;

     label01:
        $c0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char peek()>();

        $i8 = (int) $c0;

        lookupswitch($i8)
        {
            case 43: goto label03;
            case 45: goto label03;
            case 46: goto label05;
            case 48: goto label02;
            case 49: goto label02;
            case 50: goto label02;
            case 51: goto label02;
            case 52: goto label02;
            case 53: goto label02;
            case 54: goto label02;
            case 55: goto label02;
            case 56: goto label02;
            case 57: goto label02;
            case 69: goto label05;
            case 101: goto label05;
            default: goto label07;
        };

     label02:
        $l3 = l6 * 10L;

        $i9 = (int) $c0;

        $i1 = $i9 - 48;

        $l2 = (long) $i1;

        l6 = $l3 + $l2;

        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        goto label08;

     label03:
        $b5 = l6 cmp 0L;

        if $b5 == 0 goto label04;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("bad number");

        throw $r7;

     label04:
        z1 = 1;

        z4 = 1;

        z3 = 1;

        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        goto label08;

     label05:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(16);

        r6 = $r8;

        if z4 == 0 goto label06;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label06:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        goto label09;

     label07:
        goto label09;

     label08:
        $z2 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z2 != 0 goto label01;

     label09:
        if r6 != null goto label15;

        if z3 == 0 goto label10;

        $l7 = -1L * l6;

        goto label11;

     label10:
        $l7 = l6;

     label11:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        return $r4;

     label12:
        $c4 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char peek()>();

        $i10 = (int) $c4;

        lookupswitch($i10)
        {
            case 43: goto label13;
            case 45: goto label13;
            case 46: goto label13;
            case 48: goto label13;
            case 49: goto label13;
            case 50: goto label13;
            case 51: goto label13;
            case 52: goto label13;
            case 53: goto label13;
            case 54: goto label13;
            case 55: goto label13;
            case 56: goto label13;
            case 57: goto label13;
            case 69: goto label13;
            case 101: goto label13;
            default: goto label14;
        };

     label13:
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        goto label15;

     label14:
        goto label16;

     label15:
        $z0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z0 != 0 goto label12;

     label16:
        $r9 = new java.lang.Double;

        $r3 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.Double: void <init>(java.lang.String)>($r3);

        return $r9;
    }

    protected static void seekTo(char, com.glines.socketio.util.JSON$Source)
    {
        java.lang.IllegalStateException $r14, $r16;
        int $i2, $i3;
        java.lang.String $r7, $r12;
        boolean $z0, $z1;
        com.glines.socketio.util.JSON$Source r0;
        char $c0, c1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r10, $r11, $r13, $r15;

        c1 := @parameter0: char;

        r0 := @parameter1: com.glines.socketio.util.JSON$Source;

        goto label4;

     label1:
        $c0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char peek()>();

        $i2 = (int) $c0;

        $i3 = (int) c1;

        if $i2 != $i3 goto label2;

        return;

     label2:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z1 != 0 goto label3;

        $r14 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unexpected \'");

        $r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while seeking \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r14;

     label3:
        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

     label4:
        $z0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r16 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected \'");

        $r10 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r16;
    }

    protected static char seekTo(java.lang.String, com.glines.socketio.util.JSON$Source)
    {
        java.lang.IllegalStateException $r15, $r17;
        int $i1, $i2;
        java.lang.String r1, $r8, $r13;
        boolean $z0, $z1;
        com.glines.socketio.util.JSON$Source r0;
        char $c0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r11, $r12, $r14, $r16;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: com.glines.socketio.util.JSON$Source;

        goto label4;

     label1:
        $c0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char peek()>();

        $i2 = (int) $c0;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($i2);

        if $i1 < 0 goto label2;

        return $c0;

     label2:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z1 != 0 goto label3;

        $r15 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unexpected \'");

        $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' while seeking one of \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r15;

     label3:
        interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

     label4:
        $z0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r17 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected one of \'");

        $r11 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r17;
    }

    protected static void complete(java.lang.String, com.glines.socketio.util.JSON$Source)
    {
        java.lang.IllegalStateException $r15, $r17;
        int $i0, $i1, $i3, i5, $i6, $i7;
        java.lang.String r1, $r6, $r13;
        boolean $z0;
        com.glines.socketio.util.JSON$Source r0;
        char $c2, $c4;
        java.lang.StringBuilder $r4, $r5, $r9, $r10, $r11, $r12, $r14, $r16;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: com.glines.socketio.util.JSON$Source;

        i5 = 0;

        goto label2;

     label1:
        $c2 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: char next()>();

        $i3 = i5;

        i5 = i5 + 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        $i6 = (int) $c2;

        $i7 = (int) $c4;

        if $i6 == $i7 goto label2;

        $r15 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unexpected \'");

        $r9 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while seeking  \"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r15;

     label2:
        $z0 = interfaceinvoke r0.<com.glines.socketio.util.JSON$Source: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 < $i1 goto label1;

     label3:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 >= $i0 goto label4;

        $r17 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected \"");

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r17;

     label4:
        return;
    }

    private static void quote(java.lang.Appendable, java.lang.String)
    {
        java.lang.Appendable r0;
        char $c0;
        java.io.IOException $r4;
        java.lang.RuntimeException $r6;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1, $r2, $r3;

        r0 := @parameter0: java.lang.Appendable;

        r1 := @parameter1: java.lang.String;

     label01:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(34);

        i1 = 0;

        goto label14;

     label02:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        $i3 = (int) $c0;

        lookupswitch($i3)
        {
            case 8: goto label09;
            case 9: goto label07;
            case 10: goto label05;
            case 12: goto label08;
            case 13: goto label06;
            case 34: goto label03;
            case 92: goto label04;
            default: goto label10;
        };

     label03:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\\"");

        goto label13;

     label04:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\\\");

        goto label13;

     label05:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\n");

        goto label13;

     label06:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\r");

        goto label13;

     label07:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\t");

        goto label13;

     label08:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\f");

        goto label13;

     label09:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\b");

        goto label13;

     label10:
        $i4 = (int) $c0;

        if $i4 >= 16 goto label11;

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\u000");

        $i5 = (int) $c0;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i5, 16);

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        goto label13;

     label11:
        $i6 = (int) $c0;

        if $i6 > 31 goto label12;

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\u00");

        $i7 = (int) $c0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i7, 16);

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

        goto label13;

     label12:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>($c0);

     label13:
        i1 = i1 + 1;

     label14:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i1 < $i2 goto label02;

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(34);

     label15:
        goto label17;

     label16:
        $r4 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r6;

     label17:
        return;

        catch java.io.IOException from label01 to label15 with label16;
    }

    private static byte convertHexDigit(byte)
    {
        byte b0, $b3, $b6, $b8;
        int $i1, $i2, $i4, $i5, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;

        b0 := @parameter0: byte;

        $i9 = (int) b0;

        if $i9 < 48 goto label1;

        $i10 = (int) b0;

        if $i10 > 57 goto label1;

        $i11 = (int) b0;

        $i7 = $i11 - 48;

        $b8 = (byte) $i7;

        return $b8;

     label1:
        $i12 = (int) b0;

        if $i12 < 97 goto label2;

        $i13 = (int) b0;

        if $i13 > 102 goto label2;

        $i14 = (int) b0;

        $i4 = $i14 - 97;

        $i5 = $i4 + 10;

        $b6 = (byte) $i5;

        return $b6;

     label2:
        $i15 = (int) b0;

        if $i15 < 65 goto label3;

        $i16 = (int) b0;

        if $i16 > 70 goto label3;

        $i17 = (int) b0;

        $i1 = $i17 - 65;

        $i2 = $i1 + 10;

        $b3 = (byte) $i2;

        return $b3;

     label3:
        return 0;
    }

    static void access$0(java.lang.Appendable, java.lang.String)
    {
        java.lang.String r1;
        java.lang.Appendable r0;

        r0 := @parameter0: java.lang.Appendable;

        r1 := @parameter1: java.lang.String;

        staticinvoke <com.glines.socketio.util.JSON: void quote(java.lang.Appendable,java.lang.String)>(r0, r1);

        return;
    }

    public static void <clinit>()
    {
        <com.glines.socketio.util.JSON: int BUFFER> = 1024;

        return;
    }
}
