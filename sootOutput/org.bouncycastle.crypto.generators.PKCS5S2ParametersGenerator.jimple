public class org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator extends org.bouncycastle.crypto.PBEParametersGenerator
{
    private org.bouncycastle.crypto.Mac hMac;

    public void <init>()
    {
        org.bouncycastle.crypto.macs.HMac $r1;
        org.bouncycastle.crypto.digests.SHA1Digest $r2;
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator r0;

        r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        specialinvoke r0.<org.bouncycastle.crypto.PBEParametersGenerator: void <init>()>();

        $r1 = new org.bouncycastle.crypto.macs.HMac;

        $r2 = new org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r2.<org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r1.<org.bouncycastle.crypto.macs.HMac: void <init>(org.bouncycastle.crypto.Digest)>($r2);

        r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac> = $r1;

        return;
    }

    private void F(byte[], byte[], int, byte[], byte[], int)
    {
        byte[] r2, r4, r6, r7, r10;
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator r0;
        byte $b8, $b9, $b10, $b11;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, $i7, $i12, i13, i14;
        org.bouncycastle.crypto.Mac $r1, $r5, $r8, $r9, $r11, $r12, $r13, $r15;
        org.bouncycastle.crypto.params.KeyParameter $r3;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        r4 := @parameter0: byte[];

        r6 := @parameter1: byte[];

        i4 := @parameter2: int;

        r7 := @parameter3: byte[];

        r10 := @parameter4: byte[];

        i2 := @parameter5: int;

        $r1 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.Mac: int getMacSize()>();

        r2 = newarray (byte)[$i0];

        $r3 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r3.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>(r4);

        $r5 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.Mac: void init(org.bouncycastle.crypto.CipherParameters)>($r3);

        if r6 == null goto label1;

        $r15 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        $i12 = lengthof r6;

        interfaceinvoke $r15.<org.bouncycastle.crypto.Mac: void update(byte[],int,int)>(r6, 0, $i12);

     label1:
        $r8 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        $i1 = lengthof r7;

        interfaceinvoke $r8.<org.bouncycastle.crypto.Mac: void update(byte[],int,int)>(r7, 0, $i1);

        $r9 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        interfaceinvoke $r9.<org.bouncycastle.crypto.Mac: int doFinal(byte[],int)>(r2, 0);

        $i3 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r10, i2, $i3);

        if i4 != 0 goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("iteration count must be at least 1.");

        throw $r14;

     label2:
        i13 = 1;

     label3:
        if i13 >= i4 goto label6;

        $r11 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        interfaceinvoke $r11.<org.bouncycastle.crypto.Mac: void init(org.bouncycastle.crypto.CipherParameters)>($r3);

        $r12 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        $i5 = lengthof r2;

        interfaceinvoke $r12.<org.bouncycastle.crypto.Mac: void update(byte[],int,int)>(r2, 0, $i5);

        $r13 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        interfaceinvoke $r13.<org.bouncycastle.crypto.Mac: int doFinal(byte[],int)>(r2, 0);

        i14 = 0;

     label4:
        $i6 = lengthof r2;

        if i14 == $i6 goto label5;

        $i7 = i2 + i14;

        $b9 = r10[$i7];

        $b8 = r2[i14];

        $b10 = $b9 ^ $b8;

        $b11 = (byte) $b10;

        r10[$i7] = $b11;

        i14 = i14 + 1;

        goto label4;

     label5:
        i13 = i13 + 1;

        goto label3;

     label6:
        return;
    }

    private void intToOctet(byte[], int)
    {
        byte[] r0;
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator r1;
        byte $b2, $b4, $b6, $b7;
        int i0, $i1, $i3, $i5;

        r1 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 >>> 24;

        $b2 = (byte) $i1;

        r0[0] = $b2;

        $i3 = i0 >>> 16;

        $b4 = (byte) $i3;

        r0[1] = $b4;

        $i5 = i0 >>> 8;

        $b6 = (byte) $i5;

        r0[2] = $b6;

        $b7 = (byte) i0;

        r0[3] = $b7;

        return;
    }

    private byte[] generateDerivedKey(int)
    {
        byte[] r2, r3, $r4, $r5;
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator r0;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9;
        org.bouncycastle.crypto.Mac $r1;

        r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        i1 := @parameter0: int;

        $r1 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.Mac: int getMacSize()>();

        $i2 = i1 + $i0;

        $i3 = $i2 - 1;

        i4 = $i3 / $i0;

        r2 = newarray (byte)[4];

        $i5 = i4 * $i0;

        r3 = newarray (byte)[$i5];

        i9 = 1;

     label1:
        if i9 > i4 goto label2;

        specialinvoke r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: void intToOctet(byte[],int)>(r2, i9);

        $r5 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: byte[] password>;

        $r4 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: byte[] salt>;

        $i8 = r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: int iterationCount>;

        $i6 = i9 - 1;

        $i7 = $i6 * $i0;

        specialinvoke r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: void F(byte[],byte[],int,byte[],byte[],int)>($r5, $r4, $i8, r2, r3, $i7);

        i9 = i9 + 1;

        goto label1;

     label2:
        return r3;
    }

    public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)
    {
        byte[] $r1;
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator r0;
        int i0, i1;
        org.bouncycastle.crypto.params.KeyParameter $r2;

        r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        i0 := @parameter0: int;

        i1 = i0 / 8;

        $r1 = specialinvoke r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: byte[] generateDerivedKey(int)>(i1);

        $r2 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r2.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r1, 0, i1);

        return $r2;
    }

    public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int, int)
    {
        byte[] $r1;
        org.bouncycastle.crypto.params.ParametersWithIV $r2;
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator r0;
        int $i0, i1, i2, i3, i4;
        org.bouncycastle.crypto.params.KeyParameter $r3;

        r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i3 = i1 / 8;

        i4 = i2 / 8;

        $i0 = i3 + i4;

        $r1 = specialinvoke r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: byte[] generateDerivedKey(int)>($i0);

        $r2 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r3 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r3.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r1, 0, i3);

        specialinvoke $r2.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[],int,int)>($r3, $r1, i3, i4);

        return $r2;
    }

    public org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)
    {
        int i0;
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator r0;
        org.bouncycastle.crypto.CipherParameters $r1;

        r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)>(i0);

        return $r1;
    }
}
