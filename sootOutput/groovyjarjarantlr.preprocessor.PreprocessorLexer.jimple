public class groovyjarjarantlr.preprocessor.PreprocessorLexer extends groovyjarjarantlr.CharScanner implements groovyjarjarantlr.preprocessor.PreprocessorTokenTypes, groovyjarjarantlr.TokenStream
{
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_0;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_1;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_2;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_3;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_4;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_5;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_6;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_7;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_8;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_9;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_10;

    public void <init>(java.io.InputStream)
    {
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.ByteBuffer $r1;
        java.io.InputStream r2;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new groovyjarjarantlr.ByteBuffer;

        specialinvoke $r1.<groovyjarjarantlr.ByteBuffer: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void <init>(groovyjarjarantlr.InputBuffer)>($r1);

        return;
    }

    public void <init>(java.io.Reader)
    {
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.CharBuffer $r1;
        java.io.Reader r2;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        r2 := @parameter0: java.io.Reader;

        $r1 = new groovyjarjarantlr.CharBuffer;

        specialinvoke $r1.<groovyjarjarantlr.CharBuffer: void <init>(java.io.Reader)>(r2);

        specialinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void <init>(groovyjarjarantlr.InputBuffer)>($r1);

        return;
    }

    public void <init>(groovyjarjarantlr.InputBuffer)
    {
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.LexerSharedInputState $r1;
        groovyjarjarantlr.InputBuffer r2;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        r2 := @parameter0: groovyjarjarantlr.InputBuffer;

        $r1 = new groovyjarjarantlr.LexerSharedInputState;

        specialinvoke $r1.<groovyjarjarantlr.LexerSharedInputState: void <init>(groovyjarjarantlr.InputBuffer)>(r2);

        specialinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void <init>(groovyjarjarantlr.LexerSharedInputState)>($r1);

        return;
    }

    public void <init>(groovyjarjarantlr.LexerSharedInputState)
    {
        groovyjarjarantlr.ANTLRHashString $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30;
        java.lang.Integer $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.LexerSharedInputState r1;
        java.util.Hashtable $r2, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        r1 := @parameter0: groovyjarjarantlr.LexerSharedInputState;

        specialinvoke r0.<groovyjarjarantlr.CharScanner: void <init>(groovyjarjarantlr.LexerSharedInputState)>(r1);

        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: boolean caseSensitiveLiterals> = 1;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void setCaseSensitive(boolean)>(1);

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals> = $r2;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals>;

        $r3 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r3.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("public", r0);

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(18);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r7 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals>;

        $r6 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r6.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("class", r0);

        $r8 = new java.lang.Integer;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>(8);

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

        $r10 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals>;

        $r9 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r9.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("throws", r0);

        $r11 = new java.lang.Integer;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(23);

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);

        $r13 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals>;

        $r12 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r12.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("catch", r0);

        $r14 = new java.lang.Integer;

        specialinvoke $r14.<java.lang.Integer: void <init>(int)>(26);

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r14);

        $r16 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals>;

        $r15 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r15.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("private", r0);

        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>(17);

        virtualinvoke $r16.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r17);

        $r19 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals>;

        $r18 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r18.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("extends", r0);

        $r20 = new java.lang.Integer;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>(10);

        virtualinvoke $r19.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r20);

        $r22 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals>;

        $r21 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r21.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("protected", r0);

        $r23 = new java.lang.Integer;

        specialinvoke $r23.<java.lang.Integer: void <init>(int)>(16);

        virtualinvoke $r22.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r23);

        $r25 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals>;

        $r24 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r24.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("returns", r0);

        $r26 = new java.lang.Integer;

        specialinvoke $r26.<java.lang.Integer: void <init>(int)>(21);

        virtualinvoke $r25.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r26);

        $r28 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals>;

        $r27 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r27.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("tokens", r0);

        $r29 = new java.lang.Integer;

        specialinvoke $r29.<java.lang.Integer: void <init>(int)>(4);

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r29);

        $r31 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.util.Hashtable literals>;

        $r30 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r30.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("exception", r0);

        $r32 = new java.lang.Integer;

        specialinvoke $r32.<java.lang.Integer: void <init>(int)>(25);

        virtualinvoke $r31.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r32);

        return;
    }

    public groovyjarjarantlr.Token nextToken() throws groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.TokenStreamIOException $r19;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.Token $r1, $r2, $r3, $r6, $r16;
        boolean $z0, $z1;
        groovyjarjarantlr.collections.impl.BitSet $r7;
        groovyjarjarantlr.CharStreamException $r8;
        groovyjarjarantlr.RecognitionException $r14;
        groovyjarjarantlr.CharStreamIOException $r12;
        groovyjarjarantlr.TokenStreamRecognitionException $r18;
        int $i1, $i2, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i16;
        java.lang.String $r5, $r10;
        char $c0, $c3, $c4, $c5, $c6, $c9;
        java.io.IOException $r13;
        groovyjarjarantlr.NoViableAltForCharException $r17;
        groovyjarjarantlr.TokenStreamException $r20;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

     label01:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void resetText()>();

     label02:
        $c0 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i10 = (int) $c0;

        tableswitch($i10)
        {
            case 9: goto label04;
            case 10: goto label04;
            case 11: goto label17;
            case 12: goto label17;
            case 13: goto label04;
            case 14: goto label17;
            case 15: goto label17;
            case 16: goto label17;
            case 17: goto label17;
            case 18: goto label17;
            case 19: goto label17;
            case 20: goto label17;
            case 21: goto label17;
            case 22: goto label17;
            case 23: goto label17;
            case 24: goto label17;
            case 25: goto label17;
            case 26: goto label17;
            case 27: goto label17;
            case 28: goto label17;
            case 29: goto label17;
            case 30: goto label17;
            case 31: goto label17;
            case 32: goto label04;
            case 33: goto label09;
            case 34: goto label07;
            case 35: goto label17;
            case 36: goto label17;
            case 37: goto label17;
            case 38: goto label17;
            case 39: goto label08;
            case 40: goto label17;
            case 41: goto label13;
            case 42: goto label17;
            case 43: goto label17;
            case 44: goto label11;
            case 45: goto label17;
            case 46: goto label17;
            case 47: goto label05;
            case 48: goto label17;
            case 49: goto label17;
            case 50: goto label17;
            case 51: goto label17;
            case 52: goto label17;
            case 53: goto label17;
            case 54: goto label17;
            case 55: goto label17;
            case 56: goto label17;
            case 57: goto label17;
            case 58: goto label03;
            case 59: goto label10;
            case 60: goto label17;
            case 61: goto label15;
            case 62: goto label17;
            case 63: goto label17;
            case 64: goto label17;
            case 65: goto label14;
            case 66: goto label14;
            case 67: goto label14;
            case 68: goto label14;
            case 69: goto label14;
            case 70: goto label14;
            case 71: goto label14;
            case 72: goto label14;
            case 73: goto label14;
            case 74: goto label14;
            case 75: goto label14;
            case 76: goto label14;
            case 77: goto label14;
            case 78: goto label14;
            case 79: goto label14;
            case 80: goto label14;
            case 81: goto label14;
            case 82: goto label14;
            case 83: goto label14;
            case 84: goto label14;
            case 85: goto label14;
            case 86: goto label14;
            case 87: goto label14;
            case 88: goto label14;
            case 89: goto label14;
            case 90: goto label14;
            case 91: goto label16;
            case 92: goto label17;
            case 93: goto label17;
            case 94: goto label17;
            case 95: goto label14;
            case 96: goto label17;
            case 97: goto label14;
            case 98: goto label14;
            case 99: goto label14;
            case 100: goto label14;
            case 101: goto label14;
            case 102: goto label14;
            case 103: goto label14;
            case 104: goto label14;
            case 105: goto label14;
            case 106: goto label14;
            case 107: goto label14;
            case 108: goto label14;
            case 109: goto label14;
            case 110: goto label14;
            case 111: goto label14;
            case 112: goto label14;
            case 113: goto label14;
            case 114: goto label14;
            case 115: goto label14;
            case 116: goto label14;
            case 117: goto label14;
            case 118: goto label14;
            case 119: goto label14;
            case 120: goto label14;
            case 121: goto label14;
            case 122: goto label14;
            case 123: goto label06;
            case 124: goto label17;
            case 125: goto label12;
            default: goto label17;
        };

     label03:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mRULE_BLOCK(boolean)>(1);

        goto label21;

     label04:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(1);

        goto label21;

     label05:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCOMMENT(boolean)>(1);

        goto label21;

     label06:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mACTION(boolean)>(1);

        goto label21;

     label07:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSTRING_LITERAL(boolean)>(1);

        goto label21;

     label08:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCHAR_LITERAL(boolean)>(1);

        goto label21;

     label09:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mBANG(boolean)>(1);

        goto label21;

     label10:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSEMI(boolean)>(1);

        goto label21;

     label11:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCOMMA(boolean)>(1);

        goto label21;

     label12:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mRCURLY(boolean)>(1);

        goto label21;

     label13:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mRPAREN(boolean)>(1);

        goto label21;

     label14:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mID_OR_KEYWORD(boolean)>(1);

        goto label21;

     label15:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mASSIGN_RHS(boolean)>(1);

        goto label21;

     label16:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mARG_ACTION(boolean)>(1);

        goto label21;

     label17:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i11 = (int) $c3;

        if $i11 != 40 goto label18;

        $r7 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i12 = (int) $c9;

        $z0 = virtualinvoke $r7.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i12);

        if $z0 == 0 goto label18;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSUBRULE_BLOCK(boolean)>(1);

        goto label21;

     label18:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i13 = (int) $c4;

        if $i13 != 40 goto label19;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mLPAREN(boolean)>(1);

        goto label21;

     label19:
        $c5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i14 = (int) $c5;

        $i16 = (int) 65535;

        if $i14 != $i16 goto label20;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void uponEOF()>();

        $r6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(1);

        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = $r6;

        goto label21;

     label20:
        $r17 = new groovyjarjarantlr.NoViableAltForCharException;

        $c6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r17.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c6, $r5, $i7, $i8);

        throw $r17;

     label21:
        $r16 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken>;

        if $r16 != null goto label23;

     label22:
        goto label01;

     label23:
        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken>;

        $i1 = virtualinvoke $r1.<groovyjarjarantlr.Token: int getType()>();

        $i2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int testLiteralsTable(int)>($i1);

        $r2 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken>;

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setType(int)>($i2);

        $r3 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken>;

     label24:
        return $r3;

     label25:
        $r14 := @caughtexception;

        $r18 = new groovyjarjarantlr.TokenStreamRecognitionException;

        specialinvoke $r18.<groovyjarjarantlr.TokenStreamRecognitionException: void <init>(groovyjarjarantlr.RecognitionException)>($r14);

        throw $r18;

     label26:
        $r8 := @caughtexception;

        $z1 = $r8 instanceof groovyjarjarantlr.CharStreamIOException;

        if $z1 == 0 goto label27;

        $r19 = new groovyjarjarantlr.TokenStreamIOException;

        $r12 = (groovyjarjarantlr.CharStreamIOException) $r8;

        $r13 = $r12.<groovyjarjarantlr.CharStreamIOException: java.io.IOException io>;

        specialinvoke $r19.<groovyjarjarantlr.TokenStreamIOException: void <init>(java.io.IOException)>($r13);

        throw $r19;

     label27:
        $r20 = new groovyjarjarantlr.TokenStreamException;

        $r10 = virtualinvoke $r8.<groovyjarjarantlr.CharStreamException: java.lang.String getMessage()>();

        specialinvoke $r20.<groovyjarjarantlr.TokenStreamException: void <init>(java.lang.String)>($r10);

        throw $r20;

        catch groovyjarjarantlr.RecognitionException from label02 to label22 with label25;
        catch groovyjarjarantlr.RecognitionException from label23 to label24 with label25;
        catch groovyjarjarantlr.CharStreamException from label02 to label22 with label26;
        catch groovyjarjarantlr.CharStreamException from label23 to label24 with label26;
        catch groovyjarjarantlr.CharStreamException from label25 to label26 with label26;
    }

    public final void mRULE_BLOCK(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        java.lang.String $r5, $r14, $r18, $r25, $r34;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r8, $r10, $r15, $r16, $r20, $r21, $r22, $r23, $r27, $r28;
        char[] $r9;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.Token $r6, r29;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r3, $r11, $r12, $r19, $r26;
        int $i0, $i4, $i5, $i7, $i8, $i12, $i13, $i15, $i17, $i18, $i20, $i21, $i23, $i24, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38;
        char $c1, $c2, $c3, $c6, $c9, $c10, $c11, $c14, $c16, $c19, $c22, $c25, $c27;
        groovyjarjarantlr.NoViableAltForCharException $r30, $r31, $r32, $r33;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z2 := @parameter0: boolean;

        r29 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(58);

        $r2 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i28 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i28);

        if $z0 == 0 goto label01;

        $r26 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        $c25 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i29 = (int) $c25;

        $z6 = virtualinvoke $r26.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i29);

        if $z6 == 0 goto label01;

        $r27 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i26 = virtualinvoke $r27.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        $r28 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r28.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i26);

        goto label03;

     label01:
        $r3 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i30 = (int) $c2;

        $z1 = virtualinvoke $r3.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i30);

        if $z1 == 0 goto label02;

        goto label03;

     label02:
        $r30 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r30.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r5, $i4, $i5);

        throw $r30;

     label03:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mALT(boolean)>(0);

        $c6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i31 = (int) $c6;

        lookupswitch($i31)
        {
            case 9: goto label04;
            case 10: goto label04;
            case 13: goto label04;
            case 32: goto label04;
            case 59: goto label05;
            case 124: goto label05;
            default: goto label06;
        };

     label04:
        $r22 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i21 = virtualinvoke $r22.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        $r23 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r23.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i21);

        goto label07;

     label05:
        goto label07;

     label06:
        $r31 = new groovyjarjarantlr.NoViableAltForCharException;

        $c22 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r25 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i23 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i24 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r31.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c22, $r25, $i23, $i24);

        throw $r31;

     label07:
        $c27 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i32 = (int) $c27;

        if $i32 != 124 goto label14;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(124);

        $r11 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i33 = (int) $c9;

        $z3 = virtualinvoke $r11.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i33);

        if $z3 == 0 goto label08;

        $r19 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        $c19 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i34 = (int) $c19;

        $z5 = virtualinvoke $r19.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i34);

        if $z5 == 0 goto label08;

        $r20 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i20 = virtualinvoke $r20.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        $r21 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r21.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i20);

        goto label10;

     label08:
        $r12 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i35 = (int) $c10;

        $z4 = virtualinvoke $r12.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i35);

        if $z4 == 0 goto label09;

        goto label10;

     label09:
        $r32 = new groovyjarjarantlr.NoViableAltForCharException;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i13 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r32.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c11, $r14, $i12, $i13);

        throw $r32;

     label10:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mALT(boolean)>(0);

        $c14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i36 = (int) $c14;

        lookupswitch($i36)
        {
            case 9: goto label11;
            case 10: goto label11;
            case 13: goto label11;
            case 32: goto label11;
            case 59: goto label12;
            case 124: goto label12;
            default: goto label13;
        };

     label11:
        $r15 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i15 = virtualinvoke $r15.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        $r16 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r16.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i15);

        goto label07;

     label12:
        goto label07;

     label13:
        $r33 = new groovyjarjarantlr.NoViableAltForCharException;

        $c16 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r18 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i17 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i18 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r33.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c16, $r18, $i17, $i18);

        throw $r33;

     label14:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(59);

        if z2 == 0 goto label15;

        if null != null goto label15;

        $i38 = (int) -1;

        if 22 == $i38 goto label15;

        $r6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(22);

        r29 = $r6;

        $r34 = new java.lang.String;

        $r8 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r10 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r10.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i8 = $i7 - $i0;

        specialinvoke $r34.<java.lang.String: void <init>(char[],int,int)>($r9, $i0, $i8);

        virtualinvoke $r6.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r34);

     label15:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r29;

        return;
    }

    public final void mWS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i16, $i18, $i20;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        java.lang.String $r3, $r11;
        groovyjarjarantlr.Token $r4, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        char $c1, $c2, $c3, $c4, $c5;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r7;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        i10 = 0;

     label1:
        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i11 = (int) $c1;

        if $i11 != 32 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(32);

        goto label7;

     label2:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i12 = (int) $c2;

        if $i12 != 9 goto label3;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(9);

        goto label7;

     label3:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i13 = (int) $c3;

        if $i13 == 10 goto label4;

        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i14 = (int) $c4;

        if $i14 != 13 goto label5;

     label4:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mNEWLINE(boolean)>(0);

        goto label7;

     label5:
        if i10 < 1 goto label6;

        goto label8;

     label6:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c5, $r3, $i6, $i7);

        throw $r10;

     label7:
        i10 = i10 + 1;

        goto label1;

     label8:
        if z0 == 0 goto label9;

        if null != null goto label9;

        $i16 = (int) -1;

        $i18 = (int) -1;

        if $i16 == $i18 goto label9;

        $i20 = (int) -1;

        $r4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>($i20);

        r9 = $r4;

        $r11 = new java.lang.String;

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i8 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i9 = $i8 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i9);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label9:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    protected final void mALT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i6, $i7, $i8, $i10;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean $z0, z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        char $c1, $c4, $c5;
        groovyjarjarantlr.collections.impl.BitSet $r2;
        char[] $r6;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z1 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

     label1:
        $r2 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_3>;

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i6 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i6);

        if $z0 == 0 goto label2;

        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i7 = (int) $c4;

        if $i7 < 3 goto label2;

        $c5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i8 = (int) $c5;

        if $i8 > 255 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mELEMENT(boolean)>(0);

        goto label1;

     label2:
        if z1 == 0 goto label3;

        if null != null goto label3;

        $i10 = (int) -1;

        if 27 == $i10 goto label3;

        $r3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(27);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label3:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mSUBRULE_BLOCK(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        java.lang.String $r5, $r12, $r17, $r20, $r28;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r8, $r10;
        char[] $r9;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.Token $r6, r22;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r3, $r13, $r14, $r15, $r18, $r21, $r23;
        int $i0, $i4, $i5, $i11, $i12, $i15, $i16, $i22, $i23, $i26, $i27, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i46;
        char $c1, $c2, $c3, $c6, $c7, $c8, $c9, $c10, $c13, $c14, $c17, $c18, $c19, $c20, $c21, $c24, $c25, $c28, $c29;
        groovyjarjarantlr.NoViableAltForCharException $r24, $r25, $r26, $r27;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z2 := @parameter0: boolean;

        r22 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(40);

        $r2 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i30 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i30);

        if $z0 == 0 goto label01;

        $r21 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c28 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i31 = (int) $c28;

        $z7 = virtualinvoke $r21.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i31);

        if $z7 == 0 goto label01;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        goto label03;

     label01:
        $r3 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i32 = (int) $c2;

        $z1 = virtualinvoke $r3.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i32);

        if $z1 == 0 goto label02;

        goto label03;

     label02:
        $r24 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r24.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r5, $i4, $i5);

        throw $r24;

     label03:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mALT(boolean)>(0);

     label04:
        $r23 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4>;

        $c29 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i33 = (int) $c29;

        $z8 = virtualinvoke $r23.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i33);

        if $z8 == 0 goto label12;

        $r13 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c17 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i34 = (int) $c17;

        $z3 = virtualinvoke $r13.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i34);

        if $z3 == 0 goto label12;

        $c18 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i35 = (int) $c18;

        lookupswitch($i35)
        {
            case 9: goto label05;
            case 10: goto label05;
            case 13: goto label05;
            case 32: goto label05;
            case 124: goto label06;
            default: goto label07;
        };

     label05:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        goto label08;

     label06:
        goto label08;

     label07:
        $r25 = new groovyjarjarantlr.NoViableAltForCharException;

        $c25 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r20 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i26 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i27 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r25.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c25, $r20, $i26, $i27);

        throw $r25;

     label08:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(124);

        $r14 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c19 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i36 = (int) $c19;

        $z4 = virtualinvoke $r14.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i36);

        if $z4 == 0 goto label09;

        $r18 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c24 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i37 = (int) $c24;

        $z6 = virtualinvoke $r18.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i37);

        if $z6 == 0 goto label09;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        goto label11;

     label09:
        $r15 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c20 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i38 = (int) $c20;

        $z5 = virtualinvoke $r15.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i38);

        if $z5 == 0 goto label10;

        goto label11;

     label10:
        $r26 = new groovyjarjarantlr.NoViableAltForCharException;

        $c21 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r17 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i22 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i23 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r26.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c21, $r17, $i22, $i23);

        throw $r26;

     label11:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mALT(boolean)>(0);

        goto label04;

     label12:
        $c6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i39 = (int) $c6;

        lookupswitch($i39)
        {
            case 9: goto label13;
            case 10: goto label13;
            case 13: goto label13;
            case 32: goto label13;
            case 41: goto label14;
            default: goto label15;
        };

     label13:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        goto label16;

     label14:
        goto label16;

     label15:
        $r27 = new groovyjarjarantlr.NoViableAltForCharException;

        $c14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i15 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i16 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r27.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c14, $r12, $i15, $i16);

        throw $r27;

     label16:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(41);

        $c7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i40 = (int) $c7;

        if $i40 != 61 goto label17;

        $c13 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i41 = (int) $c13;

        if $i41 != 62 goto label17;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(java.lang.String)>("=>");

        goto label20;

     label17:
        $c8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i42 = (int) $c8;

        if $i42 != 42 goto label18;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(42);

        goto label20;

     label18:
        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i43 = (int) $c9;

        if $i43 != 43 goto label19;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(43);

        goto label20;

     label19:
        $c10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i44 = (int) $c10;

        if $i44 != 63 goto label20;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(63);

     label20:
        if z2 == 0 goto label21;

        if null != null goto label21;

        $i46 = (int) -1;

        if 6 == $i46 goto label21;

        $r6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(6);

        r22 = $r6;

        $r28 = new java.lang.String;

        $r8 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r10 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i11 = virtualinvoke $r10.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i12 = $i11 - $i0;

        specialinvoke $r28.<java.lang.String: void <init>(char[],int,int)>($r9, $i0, $i12);

        virtualinvoke $r6.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r28);

     label21:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r22;

        return;
    }

    protected final void mELEMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i6, $i7, $i8, $i9, $i11;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        java.lang.String $r9, $r13;
        groovyjarjarantlr.Token $r2, r11;
        boolean z0, $z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c4, $c5;
        groovyjarjarantlr.collections.impl.BitSet $r7, $r10;
        groovyjarjarantlr.NoViableAltForCharException $r12;
        char[] $r5;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r11 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i8 = (int) $c1;

        lookupswitch($i8)
        {
            case 10: goto label06;
            case 13: goto label06;
            case 34: goto label03;
            case 39: goto label04;
            case 40: goto label05;
            case 47: goto label01;
            case 123: goto label02;
            default: goto label07;
        };

     label01:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCOMMENT(boolean)>(0);

        goto label09;

     label02:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mACTION(boolean)>(0);

        goto label09;

     label03:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSTRING_LITERAL(boolean)>(0);

        goto label09;

     label04:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCHAR_LITERAL(boolean)>(0);

        goto label09;

     label05:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSUBRULE_BLOCK(boolean)>(0);

        goto label09;

     label06:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mNEWLINE(boolean)>(0);

        goto label09;

     label07:
        $r7 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_5>;

        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i9 = (int) $c4;

        $z1 = virtualinvoke $r7.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i9);

        if $z1 == 0 goto label08;

        $r10 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_5>;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r10);

        goto label09;

     label08:
        $r12 = new groovyjarjarantlr.NoViableAltForCharException;

        $c5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r12.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c5, $r9, $i6, $i7);

        throw $r12;

     label09:
        if z0 == 0 goto label10;

        if null != null goto label10;

        $i11 = (int) -1;

        if 28 == $i11 goto label10;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(28);

        r11 = $r2;

        $r13 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r13.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r13);

     label10:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r11;

        return;
    }

    public final void mCOMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i13, $i15, $i17, $i19;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        java.lang.String $r3, $r11;
        groovyjarjarantlr.Token $r4, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        char $c1, $c2, $c3, $c6, $c9;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r7;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i10 = (int) $c1;

        if $i10 != 47 goto label1;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i11 = (int) $c9;

        if $i11 != 47 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSL_COMMENT(boolean)>(0);

        goto label3;

     label1:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i12 = (int) $c2;

        if $i12 != 47 goto label2;

        $c6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i13 = (int) $c6;

        if $i13 != 42 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mML_COMMENT(boolean)>(0);

        goto label3;

     label2:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r3, $i4, $i5);

        throw $r10;

     label3:
        if z0 == 0 goto label4;

        if null != null goto label4;

        $i15 = (int) -1;

        $i17 = (int) -1;

        if $i15 == $i17 goto label4;

        $i19 = (int) -1;

        $r4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>($i19);

        r9 = $r4;

        $r11 = new java.lang.String;

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i8 = $i7 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i8);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label4:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    public final void mACTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.Token $r2, r8;
        boolean z0, $z1;
        groovyjarjarantlr.collections.impl.BitSet $r7;
        int $i0, $i5, $i6, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44;
        java.lang.String $r9;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c2, $c3, $c4, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c22;
        char[] $r5;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(123);

     label01:
        $c19 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i23 = (int) $c19;

        if $i23 != 125 goto label02;

        goto label10;

     label02:
        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i24 = (int) $c1;

        if $i24 == 10 goto label03;

        $c18 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i25 = (int) $c18;

        if $i25 != 13 goto label04;

     label03:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i26 = (int) $c2;

        if $i26 < 3 goto label04;

        $c17 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i27 = (int) $c17;

        if $i27 > 255 goto label04;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mNEWLINE(boolean)>(0);

        goto label01;

     label04:
        $c20 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i28 = (int) $c20;

        if $i28 != 123 goto label05;

        $c15 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i29 = (int) $c15;

        if $i29 < 3 goto label05;

        $c16 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i30 = (int) $c16;

        if $i30 > 255 goto label05;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mACTION(boolean)>(0);

        goto label01;

     label05:
        $c21 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i31 = (int) $c21;

        if $i31 != 39 goto label06;

        $r7 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_6>;

        $c14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i32 = (int) $c14;

        $z1 = virtualinvoke $r7.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i32);

        if $z1 == 0 goto label06;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCHAR_LITERAL(boolean)>(0);

        goto label01;

     label06:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i33 = (int) $c3;

        if $i33 != 47 goto label08;

        $c12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i34 = (int) $c12;

        if $i34 == 42 goto label07;

        $c13 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i35 = (int) $c13;

        if $i35 != 47 goto label08;

     label07:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCOMMENT(boolean)>(0);

        goto label01;

     label08:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i36 = (int) $c4;

        if $i36 != 34 goto label09;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i37 = (int) $c10;

        if $i37 < 3 goto label09;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i38 = (int) $c11;

        if $i38 > 255 goto label09;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSTRING_LITERAL(boolean)>(0);

        goto label01;

     label09:
        $c22 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i39 = (int) $c22;

        if $i39 < 3 goto label10;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i40 = (int) $c7;

        if $i40 > 255 goto label10;

        $c8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i41 = (int) $c8;

        if $i41 < 3 goto label10;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i42 = (int) $c9;

        if $i42 > 255 goto label10;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchNot(char)>(65535);

        goto label01;

     label10:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(125);

        if z0 == 0 goto label11;

        if null != null goto label11;

        $i44 = (int) -1;

        if 7 == $i44 goto label11;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(7);

        r8 = $r2;

        $r9 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i5 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i6 = $i5 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i6);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label11:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mSTRING_LITERAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i5, $i6, $i8;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean $z0, z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        char $c1, $c4;
        groovyjarjarantlr.collections.impl.BitSet $r2;
        char[] $r6;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z1 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(34);

     label1:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i5 = (int) $c4;

        if $i5 != 92 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mESC(boolean)>(0);

        goto label1;

     label2:
        $r2 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_7>;

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i6 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i6);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchNot(char)>(34);

        goto label1;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(34);

        if z1 == 0 goto label4;

        if null != null goto label4;

        $i8 = (int) -1;

        if 39 == $i8 goto label4;

        $r3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(39);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label4:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mCHAR_LITERAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        java.lang.String $r4, $r12;
        groovyjarjarantlr.Token $r5, r10;
        boolean $z0, z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r7, $r9;
        char $c1, $c2, $c3;
        groovyjarjarantlr.collections.impl.BitSet $r2;
        groovyjarjarantlr.NoViableAltForCharException $r11;
        char[] $r8;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z1 := @parameter0: boolean;

        r10 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(39);

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i8 = (int) $c1;

        if $i8 != 92 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mESC(boolean)>(0);

        goto label3;

     label1:
        $r2 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_8>;

        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i9 = (int) $c2;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i9);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchNot(char)>(39);

        goto label3;

     label2:
        $r11 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r11.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r4, $i4, $i5);

        throw $r11;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(39);

        if z1 == 0 goto label4;

        if null != null goto label4;

        $i11 = (int) -1;

        if 38 == $i11 goto label4;

        $r5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(38);

        r10 = $r5;

        $r12 = new java.lang.String;

        $r7 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r9 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r12.<java.lang.String: void <init>(char[],int,int)>($r8, $i0, $i7);

        virtualinvoke $r5.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r12);

     label4:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r10;

        return;
    }

    protected final void mNEWLINE(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i15;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        java.lang.String $r3, $r11;
        groovyjarjarantlr.Token $r4, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        char $c1, $c2, $c3, $c4, $c9;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r7;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i10 = (int) $c1;

        if $i10 != 13 goto label1;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i11 = (int) $c9;

        if $i11 != 10 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(10);

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void newline()>();

        goto label4;

     label1:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i12 = (int) $c2;

        if $i12 != 13 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void newline()>();

        goto label4;

     label2:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i13 = (int) $c3;

        if $i13 != 10 goto label3;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(10);

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void newline()>();

        goto label4;

     label3:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c4, $r3, $i5, $i6);

        throw $r10;

     label4:
        if z0 == 0 goto label5;

        if null != null goto label5;

        $i15 = (int) -1;

        if 34 == $i15 goto label5;

        $r4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(34);

        r9 = $r4;

        $r11 = new java.lang.String;

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i8 = $i7 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i8);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label5:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    public final void mBANG(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(33);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 19 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(19);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSEMI(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(59);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 11 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(11);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCOMMA(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(44);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 24 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(24);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRCURLY(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(125);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 15 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(15);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLPAREN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(40);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 29 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(29);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRPAREN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(41);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 30 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(30);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mID_OR_KEYWORD(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        java.lang.String $r8, $r9, $r10, $r14, $r19, $r24;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        char[] $r6;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.Token $r3, r16, r17;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r11, $r12, $r15, $r20, $r21;
        int $i0, $i2, $i3, $i14, $i15, i17, $i19, $i20, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i43;
        char $c1, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c16, $c18, $c21, $c22, $c23, $c24, $c25;
        groovyjarjarantlr.NoViableAltForCharException $r22, $r23;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z1 := @parameter0: boolean;

        r16 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mID(boolean)>(1);

        r17 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken>;

        i17 = virtualinvoke r17.<groovyjarjarantlr.Token: int getType()>();

        $r2 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_9>;

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i26 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i26);

        if $z0 == 0 goto label12;

        $c6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i27 = (int) $c6;

        if $i27 < 3 goto label12;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i28 = (int) $c7;

        if $i28 > 255 goto label12;

        $r10 = virtualinvoke r17.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("header");

        if $z4 == 0 goto label12;

        $r11 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i29 = (int) $c8;

        $z5 = virtualinvoke $r11.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i29);

        if $z5 == 0 goto label01;

        $r15 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_9>;

        $c16 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i30 = (int) $c16;

        $z7 = virtualinvoke $r15.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i30);

        if $z7 == 0 goto label01;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        goto label03;

     label01:
        $r12 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_9>;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i31 = (int) $c9;

        $z6 = virtualinvoke $r12.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i31);

        if $z6 == 0 goto label02;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i32 = (int) $c10;

        if $i32 < 3 goto label02;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i33 = (int) $c11;

        if $i33 > 255 goto label02;

        goto label03;

     label02:
        $r22 = new groovyjarjarantlr.NoViableAltForCharException;

        $c18 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r19 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i19 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i20 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r22.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c18, $r19, $i19, $i20);

        throw $r22;

     label03:
        $c12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i34 = (int) $c12;

        lookupswitch($i34)
        {
            case 9: goto label05;
            case 10: goto label05;
            case 13: goto label05;
            case 32: goto label05;
            case 34: goto label04;
            case 47: goto label05;
            case 123: goto label05;
            default: goto label06;
        };

     label04:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSTRING_LITERAL(boolean)>(0);

        goto label07;

     label05:
        goto label07;

     label06:
        $r23 = new groovyjarjarantlr.NoViableAltForCharException;

        $c13 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i15 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r23.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c13, $r14, $i14, $i15);

        throw $r23;

     label07:
        $c21 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i35 = (int) $c21;

        lookupswitch($i35)
        {
            case 9: goto label08;
            case 10: goto label08;
            case 13: goto label08;
            case 32: goto label08;
            case 47: goto label09;
            default: goto label10;
        };

     label08:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        goto label07;

     label09:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCOMMENT(boolean)>(0);

        goto label07;

     label10:
        goto label11;

     label11:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mACTION(boolean)>(0);

        i17 = 5;

        goto label24;

     label12:
        $r20 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_10>;

        $c22 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i36 = (int) $c22;

        $z8 = virtualinvoke $r20.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i36);

        if $z8 == 0 goto label18;

        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i37 = (int) $c4;

        if $i37 < 3 goto label18;

        $c5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i38 = (int) $c5;

        if $i38 > 255 goto label18;

        $r9 = virtualinvoke r17.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("tokens");

        if $z3 == 0 goto label18;

     label13:
        $c23 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i39 = (int) $c23;

        lookupswitch($i39)
        {
            case 9: goto label14;
            case 10: goto label14;
            case 13: goto label14;
            case 32: goto label14;
            case 47: goto label15;
            default: goto label16;
        };

     label14:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        goto label13;

     label15:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCOMMENT(boolean)>(0);

        goto label13;

     label16:
        goto label17;

     label17:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCURLY_BLOCK_SCARF(boolean)>(0);

        i17 = 12;

        goto label24;

     label18:
        $r21 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_10>;

        $c24 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i40 = (int) $c24;

        $z9 = virtualinvoke $r21.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i40);

        if $z9 == 0 goto label24;

        $r8 = virtualinvoke r17.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("options");

        if $z2 == 0 goto label24;

     label19:
        $c25 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i41 = (int) $c25;

        lookupswitch($i41)
        {
            case 9: goto label20;
            case 10: goto label20;
            case 13: goto label20;
            case 32: goto label20;
            case 47: goto label21;
            default: goto label22;
        };

     label20:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mWS(boolean)>(0);

        goto label19;

     label21:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCOMMENT(boolean)>(0);

        goto label19;

     label22:
        goto label23;

     label23:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(123);

        i17 = 13;

     label24:
        if z1 == 0 goto label25;

        if null != null goto label25;

        $i43 = (int) -1;

        if i17 == $i43 goto label25;

        $r3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(i17);

        r16 = $r3;

        $r24 = new java.lang.String;

        $r5 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r24.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r24);

     label25:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r16;

        return;
    }

    protected final void mID(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i14;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        java.lang.String $r12, $r15, $r16;
        groovyjarjarantlr.Token $r6, r13;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r3, $r5, $r8, $r10;
        char $c1, $c7, $c10;
        groovyjarjarantlr.NoViableAltForCharException $r14;
        char[] $r4, $r9;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r13 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i11 = (int) $c1;

        tableswitch($i11)
        {
            case 65: goto label02;
            case 66: goto label02;
            case 67: goto label02;
            case 68: goto label02;
            case 69: goto label02;
            case 70: goto label02;
            case 71: goto label02;
            case 72: goto label02;
            case 73: goto label02;
            case 74: goto label02;
            case 75: goto label02;
            case 76: goto label02;
            case 77: goto label02;
            case 78: goto label02;
            case 79: goto label02;
            case 80: goto label02;
            case 81: goto label02;
            case 82: goto label02;
            case 83: goto label02;
            case 84: goto label02;
            case 85: goto label02;
            case 86: goto label02;
            case 87: goto label02;
            case 88: goto label02;
            case 89: goto label02;
            case 90: goto label02;
            case 91: goto label04;
            case 92: goto label04;
            case 93: goto label04;
            case 94: goto label04;
            case 95: goto label03;
            case 96: goto label04;
            case 97: goto label01;
            case 98: goto label01;
            case 99: goto label01;
            case 100: goto label01;
            case 101: goto label01;
            case 102: goto label01;
            case 103: goto label01;
            case 104: goto label01;
            case 105: goto label01;
            case 106: goto label01;
            case 107: goto label01;
            case 108: goto label01;
            case 109: goto label01;
            case 110: goto label01;
            case 111: goto label01;
            case 112: goto label01;
            case 113: goto label01;
            case 114: goto label01;
            case 115: goto label01;
            case 116: goto label01;
            case 117: goto label01;
            case 118: goto label01;
            case 119: goto label01;
            case 120: goto label01;
            case 121: goto label01;
            case 122: goto label01;
            default: goto label04;
        };

     label01:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(97, 122);

        goto label05;

     label02:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(65, 90);

        goto label05;

     label03:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(95);

        goto label05;

     label04:
        $r14 = new groovyjarjarantlr.NoViableAltForCharException;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r14.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c7, $r12, $i8, $i9);

        throw $r14;

     label05:
        $c10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i12 = (int) $c10;

        tableswitch($i12)
        {
            case 48: goto label09;
            case 49: goto label09;
            case 50: goto label09;
            case 51: goto label09;
            case 52: goto label09;
            case 53: goto label09;
            case 54: goto label09;
            case 55: goto label09;
            case 56: goto label09;
            case 57: goto label09;
            case 58: goto label10;
            case 59: goto label10;
            case 60: goto label10;
            case 61: goto label10;
            case 62: goto label10;
            case 63: goto label10;
            case 64: goto label10;
            case 65: goto label07;
            case 66: goto label07;
            case 67: goto label07;
            case 68: goto label07;
            case 69: goto label07;
            case 70: goto label07;
            case 71: goto label07;
            case 72: goto label07;
            case 73: goto label07;
            case 74: goto label07;
            case 75: goto label07;
            case 76: goto label07;
            case 77: goto label07;
            case 78: goto label07;
            case 79: goto label07;
            case 80: goto label07;
            case 81: goto label07;
            case 82: goto label07;
            case 83: goto label07;
            case 84: goto label07;
            case 85: goto label07;
            case 86: goto label07;
            case 87: goto label07;
            case 88: goto label07;
            case 89: goto label07;
            case 90: goto label07;
            case 91: goto label10;
            case 92: goto label10;
            case 93: goto label10;
            case 94: goto label10;
            case 95: goto label08;
            case 96: goto label10;
            case 97: goto label06;
            case 98: goto label06;
            case 99: goto label06;
            case 100: goto label06;
            case 101: goto label06;
            case 102: goto label06;
            case 103: goto label06;
            case 104: goto label06;
            case 105: goto label06;
            case 106: goto label06;
            case 107: goto label06;
            case 108: goto label06;
            case 109: goto label06;
            case 110: goto label06;
            case 111: goto label06;
            case 112: goto label06;
            case 113: goto label06;
            case 114: goto label06;
            case 115: goto label06;
            case 116: goto label06;
            case 117: goto label06;
            case 118: goto label06;
            case 119: goto label06;
            case 120: goto label06;
            case 121: goto label06;
            case 122: goto label06;
            default: goto label10;
        };

     label06:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(97, 122);

        goto label05;

     label07:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(65, 90);

        goto label05;

     label08:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(95);

        goto label05;

     label09:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(48, 57);

        goto label05;

     label10:
        goto label11;

     label11:
        $r15 = new java.lang.String;

        $r3 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r4 = virtualinvoke $r3.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r5 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r15.<java.lang.String: void <init>(char[],int,int)>($r4, $i0, $i3);

        $i4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int testLiteralsTable(java.lang.String,int)>($r15, 9);

        if z0 == 0 goto label12;

        if null != null goto label12;

        $i14 = (int) -1;

        if $i4 == $i14 goto label12;

        $r6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>($i4);

        r13 = $r6;

        $r16 = new java.lang.String;

        $r8 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r10 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i5 = virtualinvoke $r10.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i6 = $i5 - $i0;

        specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>($r9, $i0, $i6);

        virtualinvoke $r6.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r16);

     label12:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r13;

        return;
    }

    protected final void mCURLY_BLOCK_SCARF(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.Token $r2, r8;
        boolean z0, $z1;
        groovyjarjarantlr.collections.impl.BitSet $r7;
        int $i0, $i5, $i6, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38;
        java.lang.String $r9;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c2, $c3, $c4, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19;
        char[] $r5;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(123);

     label01:
        $c17 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i20 = (int) $c17;

        if $i20 != 125 goto label02;

        goto label09;

     label02:
        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i21 = (int) $c1;

        if $i21 == 10 goto label03;

        $c16 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i22 = (int) $c16;

        if $i22 != 13 goto label04;

     label03:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i23 = (int) $c2;

        if $i23 < 3 goto label04;

        $c15 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i24 = (int) $c15;

        if $i24 > 255 goto label04;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mNEWLINE(boolean)>(0);

        goto label01;

     label04:
        $c18 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i25 = (int) $c18;

        if $i25 != 34 goto label05;

        $c13 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i26 = (int) $c13;

        if $i26 < 3 goto label05;

        $c14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i27 = (int) $c14;

        if $i27 > 255 goto label05;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSTRING_LITERAL(boolean)>(0);

        goto label01;

     label05:
        $c19 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i28 = (int) $c19;

        if $i28 != 39 goto label06;

        $r7 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_6>;

        $c12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i29 = (int) $c12;

        $z1 = virtualinvoke $r7.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i29);

        if $z1 == 0 goto label06;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCHAR_LITERAL(boolean)>(0);

        goto label01;

     label06:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i30 = (int) $c3;

        if $i30 != 47 goto label08;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i31 = (int) $c10;

        if $i31 == 42 goto label07;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i32 = (int) $c11;

        if $i32 != 47 goto label08;

     label07:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCOMMENT(boolean)>(0);

        goto label01;

     label08:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i33 = (int) $c4;

        if $i33 < 3 goto label09;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i34 = (int) $c7;

        if $i34 > 255 goto label09;

        $c8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i35 = (int) $c8;

        if $i35 < 3 goto label09;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i36 = (int) $c9;

        if $i36 > 255 goto label09;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchNot(char)>(65535);

        goto label01;

     label09:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(125);

        if z0 == 0 goto label10;

        if null != null goto label10;

        $i38 = (int) -1;

        if 32 == $i38 goto label10;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(32);

        r8 = $r2;

        $r9 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i5 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i6 = $i5 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i6);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label10:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mASSIGN_RHS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.Token $r4, r10;
        boolean z0, $z1;
        groovyjarjarantlr.collections.impl.BitSet $r9;
        int $i0, $i1, $i5, $i6, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33;
        java.lang.String $r11;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r2, $r3, $r6, $r8;
        char $c2, $c3, $c4, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17;
        char[] $r7;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r10 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $r2 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r2.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(61);

        $r3 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r3.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i1);

     label1:
        $c15 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i18 = (int) $c15;

        if $i18 != 59 goto label2;

        goto label7;

     label2:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i19 = (int) $c2;

        if $i19 != 34 goto label3;

        $c13 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i20 = (int) $c13;

        if $i20 < 3 goto label3;

        $c14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i21 = (int) $c14;

        if $i21 > 255 goto label3;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSTRING_LITERAL(boolean)>(0);

        goto label1;

     label3:
        $c16 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i22 = (int) $c16;

        if $i22 != 39 goto label4;

        $r9 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_6>;

        $c12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i23 = (int) $c12;

        $z1 = virtualinvoke $r9.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i23);

        if $z1 == 0 goto label4;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCHAR_LITERAL(boolean)>(0);

        goto label1;

     label4:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i24 = (int) $c3;

        if $i24 == 10 goto label5;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i25 = (int) $c11;

        if $i25 != 13 goto label6;

     label5:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i26 = (int) $c4;

        if $i26 < 3 goto label6;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i27 = (int) $c10;

        if $i27 > 255 goto label6;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mNEWLINE(boolean)>(0);

        goto label1;

     label6:
        $c17 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i28 = (int) $c17;

        if $i28 < 3 goto label7;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i29 = (int) $c7;

        if $i29 > 255 goto label7;

        $c8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i30 = (int) $c8;

        if $i30 < 3 goto label7;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i31 = (int) $c9;

        if $i31 > 255 goto label7;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchNot(char)>(65535);

        goto label1;

     label7:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(59);

        if z0 == 0 goto label8;

        if null != null goto label8;

        $i33 = (int) -1;

        if 14 == $i33 goto label8;

        $r4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(14);

        r10 = $r4;

        $r11 = new java.lang.String;

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i5 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i6 = $i5 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i6);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label8:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r10;

        return;
    }

    protected final void mSL_COMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i9, $i10, $i11, $i12, $i13, $i14, $i16;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c4, $c5, $c6, $c7, $c8;
        char[] $r5;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(java.lang.String)>("//");

     label1:
        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i9 = (int) $c1;

        if $i9 == 10 goto label3;

        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i10 = (int) $c4;

        if $i10 != 13 goto label2;

        goto label3;

     label2:
        $c5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i11 = (int) $c5;

        if $i11 < 3 goto label3;

        $c6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i12 = (int) $c6;

        if $i12 > 255 goto label3;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i13 = (int) $c7;

        if $i13 < 3 goto label3;

        $c8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i14 = (int) $c8;

        if $i14 > 255 goto label3;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchNot(char)>(65535);

        goto label1;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mNEWLINE(boolean)>(0);

        if z0 == 0 goto label4;

        if null != null goto label4;

        $i16 = (int) -1;

        if 36 == $i16 goto label4;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(36);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label4:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    protected final void mML_COMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;
        int $i0, $i3, $i4, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24;
        java.lang.String $r8;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c2, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12;
        char[] $r5;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(java.lang.String)>("/*");

     label1:
        $c11 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i13 = (int) $c11;

        if $i13 != 42 goto label2;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i14 = (int) $c10;

        if $i14 != 47 goto label2;

        goto label5;

     label2:
        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i15 = (int) $c1;

        if $i15 == 10 goto label3;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i16 = (int) $c9;

        if $i16 != 13 goto label4;

     label3:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i17 = (int) $c2;

        if $i17 < 3 goto label4;

        $c8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i18 = (int) $c8;

        if $i18 > 255 goto label4;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mNEWLINE(boolean)>(0);

        goto label1;

     label4:
        $c12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i19 = (int) $c12;

        if $i19 < 3 goto label5;

        $c5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i20 = (int) $c5;

        if $i20 > 255 goto label5;

        $c6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i21 = (int) $c6;

        if $i21 < 3 goto label5;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i22 = (int) $c7;

        if $i22 > 255 goto label5;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchNot(char)>(65535);

        goto label1;

     label5:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(java.lang.String)>("*/");

        if z0 == 0 goto label6;

        if null != null goto label6;

        $i24 = (int) -1;

        if 37 == $i24 goto label6;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(37);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i3 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i4 = $i3 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i4);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label6:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    protected final void mESC(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        java.lang.String $r8, $r10, $r12, $r14, $r20;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char[] $r5;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.Token $r2, r15;
        boolean z0;
        int $i0, $i2, $i3, $i6, $i7, $i14, $i15, $i22, $i23, $i29, $i30, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54;
        char $c1, $c4, $c5, $c8, $c9, $c10, $c11, $c12, $c13, $c16, $c17, $c18, $c19, $c20, $c21, $c24, $c25, $c26, $c27, $c28, $c31, $c32, $c33;
        groovyjarjarantlr.NoViableAltForCharException $r16, $r17, $r18, $r19;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r15 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(92);

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i34 = (int) $c1;

        lookupswitch($i34)
        {
            case 34: goto label08;
            case 39: goto label09;
            case 48: goto label11;
            case 49: goto label11;
            case 50: goto label11;
            case 51: goto label11;
            case 52: goto label16;
            case 53: goto label16;
            case 54: goto label16;
            case 55: goto label16;
            case 92: goto label10;
            case 97: goto label07;
            case 98: goto label04;
            case 102: goto label05;
            case 110: goto label01;
            case 114: goto label02;
            case 116: goto label03;
            case 117: goto label19;
            case 119: goto label06;
            default: goto label20;
        };

     label01:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(110);

        goto label21;

     label02:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(114);

        goto label21;

     label03:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(116);

        goto label21;

     label04:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(98);

        goto label21;

     label05:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(102);

        goto label21;

     label06:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(119);

        goto label21;

     label07:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(97);

        goto label21;

     label08:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(34);

        goto label21;

     label09:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(39);

        goto label21;

     label10:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(92);

        goto label21;

     label11:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(48, 51);

        $c12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i35 = (int) $c12;

        if $i35 < 48 goto label14;

        $c17 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i36 = (int) $c17;

        if $i36 > 57 goto label14;

        $c18 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i37 = (int) $c18;

        if $i37 < 3 goto label14;

        $c19 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i38 = (int) $c19;

        if $i38 > 255 goto label14;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mDIGIT(boolean)>(0);

        $c20 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i39 = (int) $c20;

        if $i39 < 48 goto label12;

        $c25 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i40 = (int) $c25;

        if $i40 > 57 goto label12;

        $c26 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i41 = (int) $c26;

        if $i41 < 3 goto label12;

        $c27 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i42 = (int) $c27;

        if $i42 > 255 goto label12;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mDIGIT(boolean)>(0);

        goto label21;

     label12:
        $c31 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i43 = (int) $c31;

        if $i43 < 3 goto label13;

        $c24 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i44 = (int) $c24;

        if $i44 > 255 goto label13;

        goto label21;

     label13:
        $r16 = new groovyjarjarantlr.NoViableAltForCharException;

        $c21 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i22 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i23 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r16.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c21, $r12, $i22, $i23);

        throw $r16;

     label14:
        $c32 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i45 = (int) $c32;

        if $i45 < 3 goto label15;

        $c16 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i46 = (int) $c16;

        if $i46 > 255 goto label15;

        goto label21;

     label15:
        $r17 = new groovyjarjarantlr.NoViableAltForCharException;

        $c13 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i15 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r17.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c13, $r10, $i14, $i15);

        throw $r17;

     label16:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(52, 55);

        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i47 = (int) $c4;

        if $i47 < 48 goto label17;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i48 = (int) $c9;

        if $i48 > 57 goto label17;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i49 = (int) $c10;

        if $i49 < 3 goto label17;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i50 = (int) $c11;

        if $i50 > 255 goto label17;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mDIGIT(boolean)>(0);

        goto label21;

     label17:
        $c33 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i51 = (int) $c33;

        if $i51 < 3 goto label18;

        $c8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i52 = (int) $c8;

        if $i52 > 255 goto label18;

        goto label21;

     label18:
        $r18 = new groovyjarjarantlr.NoViableAltForCharException;

        $c5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r18.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c5, $r8, $i6, $i7);

        throw $r18;

     label19:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(117);

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mXDIGIT(boolean)>(0);

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mXDIGIT(boolean)>(0);

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mXDIGIT(boolean)>(0);

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mXDIGIT(boolean)>(0);

        goto label21;

     label20:
        $r19 = new groovyjarjarantlr.NoViableAltForCharException;

        $c28 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i29 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i30 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r19.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c28, $r14, $i29, $i30);

        throw $r19;

     label21:
        if z0 == 0 goto label22;

        if null != null goto label22;

        $i54 = (int) -1;

        if 40 == $i54 goto label22;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(40);

        r15 = $r2;

        $r20 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r20.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r20);

     label22:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r15;

        return;
    }

    protected final void mDIGIT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(48, 57);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 41 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(41);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    protected final void mXDIGIT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i5, $i6, $i7, $i9;
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        java.lang.String $r8, $r11;
        groovyjarjarantlr.Token $r2, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c4;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r5;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i7 = (int) $c1;

        tableswitch($i7)
        {
            case 48: goto label1;
            case 49: goto label1;
            case 50: goto label1;
            case 51: goto label1;
            case 52: goto label1;
            case 53: goto label1;
            case 54: goto label1;
            case 55: goto label1;
            case 56: goto label1;
            case 57: goto label1;
            case 58: goto label4;
            case 59: goto label4;
            case 60: goto label4;
            case 61: goto label4;
            case 62: goto label4;
            case 63: goto label4;
            case 64: goto label4;
            case 65: goto label3;
            case 66: goto label3;
            case 67: goto label3;
            case 68: goto label3;
            case 69: goto label3;
            case 70: goto label3;
            case 71: goto label4;
            case 72: goto label4;
            case 73: goto label4;
            case 74: goto label4;
            case 75: goto label4;
            case 76: goto label4;
            case 77: goto label4;
            case 78: goto label4;
            case 79: goto label4;
            case 80: goto label4;
            case 81: goto label4;
            case 82: goto label4;
            case 83: goto label4;
            case 84: goto label4;
            case 85: goto label4;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label4;
            case 89: goto label4;
            case 90: goto label4;
            case 91: goto label4;
            case 92: goto label4;
            case 93: goto label4;
            case 94: goto label4;
            case 95: goto label4;
            case 96: goto label4;
            case 97: goto label2;
            case 98: goto label2;
            case 99: goto label2;
            case 100: goto label2;
            case 101: goto label2;
            case 102: goto label2;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(48, 57);

        goto label5;

     label2:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(97, 102);

        goto label5;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchRange(char,char)>(65, 70);

        goto label5;

     label4:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: java.lang.String getFilename()>();

        $i5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getLine()>();

        $i6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c4, $r8, $i5, $i6);

        throw $r10;

     label5:
        if z0 == 0 goto label6;

        if null != null goto label6;

        $i9 = (int) -1;

        if 42 == $i9 goto label6;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(42);

        r9 = $r2;

        $r11 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label6:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    public final void mARG_ACTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.preprocessor.PreprocessorLexer r0;
        groovyjarjarantlr.Token $r2, r8;
        boolean z0, $z1;
        groovyjarjarantlr.collections.impl.BitSet $r7;
        int $i0, $i4, $i5, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38;
        java.lang.String $r9;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c2, $c3, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19;
        char[] $r5;

        r0 := @this: groovyjarjarantlr.preprocessor.PreprocessorLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(91);

     label1:
        $c16 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i20 = (int) $c16;

        if $i20 != 93 goto label2;

        goto label8;

     label2:
        $c1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i21 = (int) $c1;

        if $i21 != 91 goto label3;

        $c14 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i22 = (int) $c14;

        if $i22 < 3 goto label3;

        $c15 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i23 = (int) $c15;

        if $i23 > 255 goto label3;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mARG_ACTION(boolean)>(0);

        goto label1;

     label3:
        $c17 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i24 = (int) $c17;

        if $i24 == 10 goto label4;

        $c13 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i25 = (int) $c13;

        if $i25 != 13 goto label5;

     label4:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i26 = (int) $c2;

        if $i26 < 3 goto label5;

        $c12 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i27 = (int) $c12;

        if $i27 > 255 goto label5;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mNEWLINE(boolean)>(0);

        goto label1;

     label5:
        $c18 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i28 = (int) $c18;

        if $i28 != 39 goto label6;

        $r7 = <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_6>;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i29 = (int) $c11;

        $z1 = virtualinvoke $r7.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i29);

        if $z1 == 0 goto label6;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mCHAR_LITERAL(boolean)>(0);

        goto label1;

     label6:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i30 = (int) $c3;

        if $i30 != 34 goto label7;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i31 = (int) $c9;

        if $i31 < 3 goto label7;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i32 = (int) $c10;

        if $i32 > 255 goto label7;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void mSTRING_LITERAL(boolean)>(0);

        goto label1;

     label7:
        $c19 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i33 = (int) $c19;

        if $i33 < 3 goto label8;

        $c6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(1);

        $i34 = (int) $c6;

        if $i34 > 255 goto label8;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i35 = (int) $c7;

        if $i35 < 3 goto label8;

        $c8 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: char LA(int)>(2);

        $i36 = (int) $c8;

        if $i36 > 255 goto label8;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void matchNot(char)>(65535);

        goto label1;

     label8:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void match(char)>(93);

        if z0 == 0 goto label9;

        if null != null goto label9;

        $i38 = (int) -1;

        if 20 == $i38 goto label9;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token makeToken(int)>(20);

        r8 = $r2;

        $r9 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i4 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i5 = $i4 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i5);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label9:
        r0.<groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    private static final long[] mk_tokenSet_0()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -576460752303423496L;

        i0 = 1;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_1()
    {
        long[] $r0;

        $r0 = newarray (long)[5];

        $r0[0] = 4294977024L;

        $r0[1] = 0L;

        $r0[2] = 0L;

        $r0[3] = 0L;

        $r0[4] = 0L;

        return $r0;
    }

    private static final long[] mk_tokenSet_2()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -2199023255560L;

        i0 = 1;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_3()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -576462951326679048L;

        i0 = 1;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_4()
    {
        long[] $r0;

        $r0 = newarray (long)[5];

        $r0[0] = 4294977024L;

        $r0[1] = 1152921504606846976L;

        $r0[2] = 0L;

        $r0[3] = 0L;

        $r0[4] = 0L;

        return $r0;
    }

    private static final long[] mk_tokenSet_5()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -576605355262354440L;

        r0[1] = -576460752303423489L;

        i0 = 2;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_6()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -549755813896L;

        i0 = 1;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_7()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -17179869192L;

        r0[1] = -268435457L;

        i0 = 2;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_8()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -549755813896L;

        r0[1] = -268435457L;

        i0 = 2;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_9()
    {
        long[] $r0;

        $r0 = newarray (long)[5];

        $r0[0] = 140758963201536L;

        $r0[1] = 576460752303423488L;

        $r0[2] = 0L;

        $r0[3] = 0L;

        $r0[4] = 0L;

        return $r0;
    }

    private static final long[] mk_tokenSet_10()
    {
        long[] $r0;

        $r0 = newarray (long)[5];

        $r0[0] = 140741783332352L;

        $r0[1] = 576460752303423488L;

        $r0[2] = 0L;

        $r0[3] = 0L;

        $r0[4] = 0L;

        return $r0;
    }

    static void <clinit>()
    {
        long[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21;
        groovyjarjarantlr.collections.impl.BitSet $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;

        $r0 = new groovyjarjarantlr.collections.impl.BitSet;

        $r1 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_0()>();

        specialinvoke $r0.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r1);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0> = $r0;

        $r2 = new groovyjarjarantlr.collections.impl.BitSet;

        $r3 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_1()>();

        specialinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r3);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1> = $r2;

        $r4 = new groovyjarjarantlr.collections.impl.BitSet;

        $r5 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_2()>();

        specialinvoke $r4.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r5);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2> = $r4;

        $r6 = new groovyjarjarantlr.collections.impl.BitSet;

        $r7 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_3()>();

        specialinvoke $r6.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r7);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_3> = $r6;

        $r8 = new groovyjarjarantlr.collections.impl.BitSet;

        $r9 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_4()>();

        specialinvoke $r8.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r9);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4> = $r8;

        $r10 = new groovyjarjarantlr.collections.impl.BitSet;

        $r11 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_5()>();

        specialinvoke $r10.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r11);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_5> = $r10;

        $r12 = new groovyjarjarantlr.collections.impl.BitSet;

        $r13 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_6()>();

        specialinvoke $r12.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r13);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_6> = $r12;

        $r14 = new groovyjarjarantlr.collections.impl.BitSet;

        $r15 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_7()>();

        specialinvoke $r14.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r15);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_7> = $r14;

        $r16 = new groovyjarjarantlr.collections.impl.BitSet;

        $r17 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_8()>();

        specialinvoke $r16.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r17);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_8> = $r16;

        $r18 = new groovyjarjarantlr.collections.impl.BitSet;

        $r19 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_9()>();

        specialinvoke $r18.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r19);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_9> = $r18;

        $r20 = new groovyjarjarantlr.collections.impl.BitSet;

        $r21 = staticinvoke <groovyjarjarantlr.preprocessor.PreprocessorLexer: long[] mk_tokenSet_10()>();

        specialinvoke $r20.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r21);

        <groovyjarjarantlr.preprocessor.PreprocessorLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_10> = $r20;

        return;
    }
}
