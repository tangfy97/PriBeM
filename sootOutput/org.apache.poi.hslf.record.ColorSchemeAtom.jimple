public final class org.apache.poi.hslf.record.ColorSchemeAtom extends org.apache.poi.hslf.record.RecordAtom
{
    private byte[] _header;
    private static long _type;
    private int backgroundColourRGB;
    private int textAndLinesColourRGB;
    private int shadowsColourRGB;
    private int titleTextColourRGB;
    private int fillsColourRGB;
    private int accentColourRGB;
    private int accentAndHyperlinkColourRGB;
    private int accentAndFollowingHyperlinkColourRGB;

    public int getBackgroundColourRGB()
    {
        int $i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        $i0 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int backgroundColourRGB>;

        return $i0;
    }

    public void setBackgroundColourRGB(int)
    {
        int i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int backgroundColourRGB> = i0;

        return;
    }

    public int getTextAndLinesColourRGB()
    {
        int $i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        $i0 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int textAndLinesColourRGB>;

        return $i0;
    }

    public void setTextAndLinesColourRGB(int)
    {
        int i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int textAndLinesColourRGB> = i0;

        return;
    }

    public int getShadowsColourRGB()
    {
        int $i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        $i0 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int shadowsColourRGB>;

        return $i0;
    }

    public void setShadowsColourRGB(int)
    {
        int i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int shadowsColourRGB> = i0;

        return;
    }

    public int getTitleTextColourRGB()
    {
        int $i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        $i0 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int titleTextColourRGB>;

        return $i0;
    }

    public void setTitleTextColourRGB(int)
    {
        int i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int titleTextColourRGB> = i0;

        return;
    }

    public int getFillsColourRGB()
    {
        int $i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        $i0 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int fillsColourRGB>;

        return $i0;
    }

    public void setFillsColourRGB(int)
    {
        int i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int fillsColourRGB> = i0;

        return;
    }

    public int getAccentColourRGB()
    {
        int $i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        $i0 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentColourRGB>;

        return $i0;
    }

    public void setAccentColourRGB(int)
    {
        int i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentColourRGB> = i0;

        return;
    }

    public int getAccentAndHyperlinkColourRGB()
    {
        int $i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        $i0 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndHyperlinkColourRGB>;

        return $i0;
    }

    public void setAccentAndHyperlinkColourRGB(int)
    {
        int i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndHyperlinkColourRGB> = i0;

        return;
    }

    public int getAccentAndFollowingHyperlinkColourRGB()
    {
        int $i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        $i0 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndFollowingHyperlinkColourRGB>;

        return $i0;
    }

    public void setAccentAndFollowingHyperlinkColourRGB(int)
    {
        int i0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndFollowingHyperlinkColourRGB> = i0;

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3;
        java.lang.StringBuilder $r5, $r6, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29;
        java.lang.String $r8;
        java.lang.RuntimeException $r4;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i29 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        if i29 >= 40 goto label1;

        $i25 = lengthof r2;

        $i26 = $i25 - i0;

        if $i26 >= 40 goto label1;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not enough data to form a ColorSchemeAtom (always 40 bytes long) - found ");

        $i27 = lengthof r2;

        $i28 = $i27 - i0;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i1 = i0 + 8;

        $i2 = $i1 + 0;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i2);

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int backgroundColourRGB> = $i3;

        $i4 = i0 + 8;

        $i5 = $i4 + 4;

        $i6 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i5);

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int textAndLinesColourRGB> = $i6;

        $i7 = i0 + 8;

        $i8 = $i7 + 8;

        $i9 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i8);

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int shadowsColourRGB> = $i9;

        $i10 = i0 + 8;

        $i11 = $i10 + 12;

        $i12 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i11);

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int titleTextColourRGB> = $i12;

        $i13 = i0 + 8;

        $i14 = $i13 + 16;

        $i15 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i14);

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int fillsColourRGB> = $i15;

        $i16 = i0 + 8;

        $i17 = $i16 + 20;

        $i18 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i17);

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentColourRGB> = $i18;

        $i19 = i0 + 8;

        $i20 = $i19 + 24;

        $i21 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i20);

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndHyperlinkColourRGB> = $i21;

        $i22 = i0 + 8;

        $i23 = $i22 + 28;

        $i24 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i23);

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndFollowingHyperlinkColourRGB> = $i24;

        return;
    }

    public void <init>()
    {
        byte[] $r1, $r2, $r3, $r4;
        int $i1;
        long $l0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: byte[] _header> = $r1;

        $r2 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>($r2, 0, 16);

        $r3 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: byte[] _header>;

        $l0 = <org.apache.poi.hslf.record.ColorSchemeAtom: long _type>;

        $i1 = (int) $l0;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>($r3, 2, $i1);

        $r4 = r0.<org.apache.poi.hslf.record.ColorSchemeAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r4, 4, 32);

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int backgroundColourRGB> = 16777215;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int textAndLinesColourRGB> = 0;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int shadowsColourRGB> = 8421504;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int titleTextColourRGB> = 0;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int fillsColourRGB> = 10079232;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentColourRGB> = 13382451;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndHyperlinkColourRGB> = 16764108;

        r0.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndFollowingHyperlinkColourRGB> = 11711154;

        return;
    }

    public long getRecordType()
    {
        long $l0;
        org.apache.poi.hslf.record.ColorSchemeAtom r0;

        r0 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        $l0 = <org.apache.poi.hslf.record.ColorSchemeAtom: long _type>;

        return $l0;
    }

    public static byte[] splitRGB(int)
    {
        byte[] r0, $r2;
        java.io.ByteArrayOutputStream $r1;
        int i0;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;

        i0 := @parameter0: int;

        r0 = newarray (byte)[3];

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        staticinvoke <org.apache.poi.hslf.record.ColorSchemeAtom: void writeLittleEndian(int,java.io.OutputStream)>(i0, $r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r0, 0, 3);

        return r0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static int joinRGB(byte, byte, byte)
    {
        byte[] $r0;
        byte b0, b1, b2;
        int $i3;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        b2 := @parameter2: byte;

        $r0 = newarray (byte)[3];

        $r0[0] = b0;

        $r0[1] = b1;

        $r0[2] = b2;

        $i3 = staticinvoke <org.apache.poi.hslf.record.ColorSchemeAtom: int joinRGB(byte[])>($r0);

        return $i3;
    }

    public static int joinRGB(byte[])
    {
        byte[] r0, r1;
        java.lang.RuntimeException $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        if $i0 == 3 goto label1;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("joinRGB accepts a byte array of 3 values, but got one of ");

        $i2 = lengthof r0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values!");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        r1 = newarray (byte)[4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, 3);

        r1[3] = 0;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, 0);

        return $i1;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2;
        org.apache.poi.hslf.record.ColorSchemeAtom r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r1 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $i0 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int backgroundColourRGB>;

        staticinvoke <org.apache.poi.hslf.record.ColorSchemeAtom: void writeLittleEndian(int,java.io.OutputStream)>($i0, r0);

        $i1 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int textAndLinesColourRGB>;

        staticinvoke <org.apache.poi.hslf.record.ColorSchemeAtom: void writeLittleEndian(int,java.io.OutputStream)>($i1, r0);

        $i2 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int shadowsColourRGB>;

        staticinvoke <org.apache.poi.hslf.record.ColorSchemeAtom: void writeLittleEndian(int,java.io.OutputStream)>($i2, r0);

        $i3 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int titleTextColourRGB>;

        staticinvoke <org.apache.poi.hslf.record.ColorSchemeAtom: void writeLittleEndian(int,java.io.OutputStream)>($i3, r0);

        $i4 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int fillsColourRGB>;

        staticinvoke <org.apache.poi.hslf.record.ColorSchemeAtom: void writeLittleEndian(int,java.io.OutputStream)>($i4, r0);

        $i5 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentColourRGB>;

        staticinvoke <org.apache.poi.hslf.record.ColorSchemeAtom: void writeLittleEndian(int,java.io.OutputStream)>($i5, r0);

        $i6 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndHyperlinkColourRGB>;

        staticinvoke <org.apache.poi.hslf.record.ColorSchemeAtom: void writeLittleEndian(int,java.io.OutputStream)>($i6, r0);

        $i7 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndFollowingHyperlinkColourRGB>;

        staticinvoke <org.apache.poi.hslf.record.ColorSchemeAtom: void writeLittleEndian(int,java.io.OutputStream)>($i7, r0);

        return;
    }

    public int getColor(int)
    {
        org.apache.poi.hslf.record.ColorSchemeAtom r1;
        int[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;

        r1 := @this: org.apache.poi.hslf.record.ColorSchemeAtom;

        i8 := @parameter0: int;

        $r0 = newarray (int)[8];

        $i0 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int backgroundColourRGB>;

        $r0[0] = $i0;

        $i1 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int textAndLinesColourRGB>;

        $r0[1] = $i1;

        $i2 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int shadowsColourRGB>;

        $r0[2] = $i2;

        $i3 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int titleTextColourRGB>;

        $r0[3] = $i3;

        $i4 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int fillsColourRGB>;

        $r0[4] = $i4;

        $i5 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentColourRGB>;

        $r0[5] = $i5;

        $i6 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndHyperlinkColourRGB>;

        $r0[6] = $i6;

        $i7 = r1.<org.apache.poi.hslf.record.ColorSchemeAtom: int accentAndFollowingHyperlinkColourRGB>;

        $r0[7] = $i7;

        $i9 = $r0[i8];

        return $i9;
    }

    static void <clinit>()
    {
        <org.apache.poi.hslf.record.ColorSchemeAtom: long _type> = 2032L;

        return;
    }
}
