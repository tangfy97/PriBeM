class org.joda.time.format.DateTimeFormatterBuilder$StringLiteral extends java.lang.Object implements org.joda.time.format.DateTimePrinter, org.joda.time.format.DateTimeParser
{
    private final java.lang.String iValue;

    void <init>(java.lang.String)
    {
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r0;
        java.lang.String r1;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue> = r1;

        return;
    }

    public int estimatePrintedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        $r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public void printTo(java.lang.StringBuffer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale)
    {
        org.joda.time.DateTimeZone r4;
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r1;
        org.joda.time.Chronology r3;
        long l0;
        java.lang.StringBuffer r0;
        java.util.Locale r5;
        int i1;
        java.lang.String $r2;

        r1 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        r0 := @parameter0: java.lang.StringBuffer;

        l0 := @parameter1: long;

        r3 := @parameter2: org.joda.time.Chronology;

        i1 := @parameter3: int;

        r4 := @parameter4: org.joda.time.DateTimeZone;

        r5 := @parameter5: java.util.Locale;

        $r2 = r1.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return;
    }

    public void printTo(java.io.Writer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.DateTimeZone r4;
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r1;
        org.joda.time.Chronology r3;
        long l0;
        java.util.Locale r5;
        java.io.Writer r0;
        int i1;
        java.lang.String $r2;

        r1 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        r0 := @parameter0: java.io.Writer;

        l0 := @parameter1: long;

        r3 := @parameter2: org.joda.time.Chronology;

        i1 := @parameter3: int;

        r4 := @parameter4: org.joda.time.DateTimeZone;

        r5 := @parameter5: java.util.Locale;

        $r2 = r1.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }

    public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePartial, java.util.Locale)
    {
        java.lang.StringBuffer r0;
        java.util.Locale r4;
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r1;
        org.joda.time.ReadablePartial r3;
        java.lang.String $r2;

        r1 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        r0 := @parameter0: java.lang.StringBuffer;

        r3 := @parameter1: org.joda.time.ReadablePartial;

        r4 := @parameter2: java.util.Locale;

        $r2 = r1.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return;
    }

    public void printTo(java.io.Writer, org.joda.time.ReadablePartial, java.util.Locale) throws java.io.IOException
    {
        java.util.Locale r4;
        java.io.Writer r0;
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r1;
        org.joda.time.ReadablePartial r3;
        java.lang.String $r2;

        r1 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        r0 := @parameter0: java.io.Writer;

        r3 := @parameter1: org.joda.time.ReadablePartial;

        r4 := @parameter2: java.util.Locale;

        $r2 = r1.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }

    public int estimateParsedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        $r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.String, int)
    {
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r1;
        int i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String r0, $r2, $r3, $r4;
        org.joda.time.format.DateTimeParserBucket r5;
        boolean $z0;

        r1 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        r5 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r1.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        $r2 = r1.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, $r3, 0, $i1);

        if $z0 == 0 goto label1;

        $r4 = r1.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i4 = i0 + $i3;

        return $i4;

     label1:
        $i6 = (int) -1;

        $i2 = i0 ^ $i6;

        return $i2;
    }
}
