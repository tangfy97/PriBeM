public abstract class com.mongodb.gridfs.GridFSFile extends java.lang.Object implements com.mongodb.DBObject
{
    protected com.mongodb.gridfs.GridFS _fs;
    java.lang.Object _id;
    java.lang.String _filename;
    java.lang.String _contentType;
    long _length;
    long _chunkSize;
    java.util.Date _uploadDate;
    java.util.List _aliases;
    com.mongodb.DBObject _metadata;
    java.lang.String _md5;
    static final java.util.Set VALID_FIELDS;

    public void <init>()
    {
        com.mongodb.BasicDBObject $r1;
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mongodb.gridfs.GridFSFile: com.mongodb.gridfs.GridFS _fs> = null;

        $r1 = new com.mongodb.BasicDBObject;

        specialinvoke $r1.<com.mongodb.BasicDBObject: void <init>()>();

        r0.<com.mongodb.gridfs.GridFSFile: com.mongodb.DBObject _metadata> = $r1;

        return;
    }

    public void save()
    {
        com.mongodb.MongoException $r4;
        com.mongodb.DBCollection $r3;
        com.mongodb.gridfs.GridFSFile r0;
        com.mongodb.gridfs.GridFS $r1, $r2;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSFile: com.mongodb.gridfs.GridFS _fs>;

        if $r1 != null goto label1;

        $r4 = new com.mongodb.MongoException;

        specialinvoke $r4.<com.mongodb.MongoException: void <init>(java.lang.String)>("need _fs");

        throw $r4;

     label1:
        $r2 = r0.<com.mongodb.gridfs.GridFSFile: com.mongodb.gridfs.GridFS _fs>;

        $r3 = $r2.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _filesCollection>;

        virtualinvoke $r3.<com.mongodb.DBCollection: com.mongodb.WriteResult save(com.mongodb.DBObject)>(r0);

        return;
    }

    public void validate()
    {
        com.mongodb.CommandResult $r7;
        java.lang.String $r2, $r9, $r10, $r14, $r19;
        com.mongodb.gridfs.GridFSFile r0;
        boolean $z0;
        com.mongodb.MongoException $r11, $r20, $r21;
        com.mongodb.BasicDBObject $r4;
        com.mongodb.gridfs.GridFS $r1, $r3;
        java.lang.Object $r5, $r8;
        com.mongodb.DB $r6;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r17, $r18;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSFile: com.mongodb.gridfs.GridFS _fs>;

        if $r1 != null goto label1;

        $r21 = new com.mongodb.MongoException;

        specialinvoke $r21.<com.mongodb.MongoException: void <init>(java.lang.String)>("no _fs");

        throw $r21;

     label1:
        $r2 = r0.<com.mongodb.gridfs.GridFSFile: java.lang.String _md5>;

        if $r2 != null goto label2;

        $r20 = new com.mongodb.MongoException;

        specialinvoke $r20.<com.mongodb.MongoException: void <init>(java.lang.String)>("no _md5 stored");

        throw $r20;

     label2:
        $r3 = r0.<com.mongodb.gridfs.GridFSFile: com.mongodb.gridfs.GridFS _fs>;

        $r6 = $r3.<com.mongodb.gridfs.GridFS: com.mongodb.DB _db>;

        $r4 = new com.mongodb.BasicDBObject;

        $r5 = r0.<com.mongodb.gridfs.GridFSFile: java.lang.Object _id>;

        specialinvoke $r4.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("filemd5", $r5);

        $r7 = virtualinvoke $r6.<com.mongodb.DB: com.mongodb.CommandResult command(com.mongodb.DBObject)>($r4);

        $r8 = interfaceinvoke $r7.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>("md5");

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r10 = r0.<com.mongodb.gridfs.GridFSFile: java.lang.String _md5>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label3;

        return;

     label3:
        $r11 = new com.mongodb.MongoException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("md5 differ.  mine [");

        $r14 = r0.<com.mongodb.gridfs.GridFSFile: java.lang.String _md5>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] theirs [");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.mongodb.MongoException: void <init>(java.lang.String)>($r19);

        throw $r11;
    }

    public int numChunks()
    {
        long $l0, $l1;
        int $i2;
        com.mongodb.gridfs.GridFSFile r0;
        double $d0, $d1, d2, d3;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $l0 = r0.<com.mongodb.gridfs.GridFSFile: long _length>;

        d2 = (double) $l0;

        $l1 = r0.<com.mongodb.gridfs.GridFSFile: long _chunkSize>;

        $d0 = (double) $l1;

        d3 = d2 / $d0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>(d3);

        $i2 = (int) $d1;

        return $i2;
    }

    public java.lang.Object getId()
    {
        java.lang.Object $r1;
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSFile: java.lang.Object _id>;

        return $r1;
    }

    public java.lang.String getFilename()
    {
        java.lang.String $r1;
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSFile: java.lang.String _filename>;

        return $r1;
    }

    public java.lang.String getContentType()
    {
        java.lang.String $r1;
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSFile: java.lang.String _contentType>;

        return $r1;
    }

    public long getLength()
    {
        long $l0;
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $l0 = r0.<com.mongodb.gridfs.GridFSFile: long _length>;

        return $l0;
    }

    public long getChunkSize()
    {
        long $l0;
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $l0 = r0.<com.mongodb.gridfs.GridFSFile: long _chunkSize>;

        return $l0;
    }

    public java.util.Date getUploadDate()
    {
        com.mongodb.gridfs.GridFSFile r0;
        java.util.Date $r1;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSFile: java.util.Date _uploadDate>;

        return $r1;
    }

    public java.util.List getAliases()
    {
        java.util.List $r3;
        com.mongodb.DBObject $r1;
        java.lang.Object $r2;
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSFile: com.mongodb.DBObject _metadata>;

        $r2 = interfaceinvoke $r1.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>("aliases");

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public com.mongodb.DBObject getMetaData()
    {
        com.mongodb.DBObject $r1, $r3;
        java.lang.Object $r2;
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSFile: com.mongodb.DBObject _metadata>;

        $r2 = interfaceinvoke $r1.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>("metadata");

        $r3 = (com.mongodb.DBObject) $r2;

        return $r3;
    }

    public java.lang.String getMD5()
    {
        java.lang.String $r1;
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSFile: java.lang.String _md5>;

        return $r1;
    }

    public java.lang.Object put(java.lang.String, java.lang.Object)
    {
        java.util.Date $r5;
        long $l0, $l1;
        com.mongodb.DBObject $r3;
        java.lang.String r0, $r4, $r8, $r10;
        java.lang.Number $r6, $r7;
        com.mongodb.gridfs.GridFSFile r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.RuntimeException $r9;
        java.lang.Object r2;

        r1 := @this: com.mongodb.gridfs.GridFSFile;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("key should never be null");

        throw $r9;

     label01:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("_id");

        if $z0 == 0 goto label02;

        r1.<com.mongodb.gridfs.GridFSFile: java.lang.Object _id> = r2;

        goto label11;

     label02:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("filename");

        if $z1 == 0 goto label05;

        if r2 != null goto label03;

        $r10 = null;

        goto label04;

     label03:
        $r10 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

     label04:
        r1.<com.mongodb.gridfs.GridFSFile: java.lang.String _filename> = $r10;

        goto label11;

     label05:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("contentType");

        if $z2 == 0 goto label06;

        $r8 = (java.lang.String) r2;

        r1.<com.mongodb.gridfs.GridFSFile: java.lang.String _contentType> = $r8;

        goto label11;

     label06:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("length");

        if $z3 == 0 goto label07;

        $r7 = (java.lang.Number) r2;

        $l1 = virtualinvoke $r7.<java.lang.Number: long longValue()>();

        r1.<com.mongodb.gridfs.GridFSFile: long _length> = $l1;

        goto label11;

     label07:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("chunkSize");

        if $z4 == 0 goto label08;

        $r6 = (java.lang.Number) r2;

        $l0 = virtualinvoke $r6.<java.lang.Number: long longValue()>();

        r1.<com.mongodb.gridfs.GridFSFile: long _chunkSize> = $l0;

        goto label11;

     label08:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("uploadDate");

        if $z5 == 0 goto label09;

        $r5 = (java.util.Date) r2;

        r1.<com.mongodb.gridfs.GridFSFile: java.util.Date _uploadDate> = $r5;

        goto label11;

     label09:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("md5");

        if $z6 == 0 goto label10;

        $r4 = (java.lang.String) r2;

        r1.<com.mongodb.gridfs.GridFSFile: java.lang.String _md5> = $r4;

        goto label11;

     label10:
        $r3 = r1.<com.mongodb.gridfs.GridFSFile: com.mongodb.DBObject _metadata>;

        interfaceinvoke $r3.<com.mongodb.DBObject: java.lang.Object put(java.lang.String,java.lang.Object)>(r0, r2);

     label11:
        return r2;
    }

    public java.lang.Object get(java.lang.String)
    {
        java.util.Date $r5;
        long $l0, $l1;
        com.mongodb.DBObject $r2;
        java.lang.Long $r6, $r7;
        java.lang.String r0, $r4, $r8, $r9;
        com.mongodb.gridfs.GridFSFile r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.RuntimeException $r11;
        java.lang.Object $r3, $r10;

        r1 := @this: com.mongodb.gridfs.GridFSFile;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("key should never be null");

        throw $r11;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("_id");

        if $z0 == 0 goto label2;

        $r10 = r1.<com.mongodb.gridfs.GridFSFile: java.lang.Object _id>;

        return $r10;

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("filename");

        if $z1 == 0 goto label3;

        $r9 = r1.<com.mongodb.gridfs.GridFSFile: java.lang.String _filename>;

        return $r9;

     label3:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("contentType");

        if $z2 == 0 goto label4;

        $r8 = r1.<com.mongodb.gridfs.GridFSFile: java.lang.String _contentType>;

        return $r8;

     label4:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("length");

        if $z3 == 0 goto label5;

        $l1 = r1.<com.mongodb.gridfs.GridFSFile: long _length>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r7;

     label5:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("chunkSize");

        if $z4 == 0 goto label6;

        $l0 = r1.<com.mongodb.gridfs.GridFSFile: long _chunkSize>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r6;

     label6:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("uploadDate");

        if $z5 == 0 goto label7;

        $r5 = r1.<com.mongodb.gridfs.GridFSFile: java.util.Date _uploadDate>;

        return $r5;

     label7:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("md5");

        if $z6 == 0 goto label8;

        $r4 = r1.<com.mongodb.gridfs.GridFSFile: java.lang.String _md5>;

        return $r4;

     label8:
        $r2 = r1.<com.mongodb.gridfs.GridFSFile: com.mongodb.DBObject _metadata>;

        $r3 = interfaceinvoke $r2.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>(r0);

        return $r3;
    }

    public void putAll(org.bson.BSONObject)
    {
        java.lang.UnsupportedOperationException $r0;
        org.bson.BSONObject r2;
        com.mongodb.gridfs.GridFSFile r1;

        r1 := @this: com.mongodb.gridfs.GridFSFile;

        r2 := @parameter0: org.bson.BSONObject;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void putAll(java.util.Map)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mongodb.gridfs.GridFSFile r1;
        java.util.Map r2;

        r1 := @this: com.mongodb.gridfs.GridFSFile;

        r2 := @parameter0: java.util.Map;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Map toMap()
    {
        java.lang.UnsupportedOperationException $r0;
        com.mongodb.gridfs.GridFSFile r1;

        r1 := @this: com.mongodb.gridfs.GridFSFile;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object removeField(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.String r2;
        com.mongodb.gridfs.GridFSFile r1;

        r1 := @this: com.mongodb.gridfs.GridFSFile;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean containsKey(java.lang.String)
    {
        java.lang.String r1;
        com.mongodb.gridfs.GridFSFile r0;
        boolean $z0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.mongodb.gridfs.GridFSFile: boolean containsField(java.lang.String)>(r1);

        return $z0;
    }

    public boolean containsField(java.lang.String)
    {
        java.util.Set $r1;
        java.lang.String r2;
        com.mongodb.gridfs.GridFSFile r0;
        boolean $z0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.mongodb.gridfs.GridFSFile: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.HashSet $r0;
        com.mongodb.DBObject $r3;
        java.util.Set $r1, $r4;
        com.mongodb.gridfs.GridFSFile r2;

        r2 := @this: com.mongodb.gridfs.GridFSFile;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r1 = <com.mongodb.gridfs.GridFSFile: java.util.Set VALID_FIELDS>;

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r1);

        $r3 = r2.<com.mongodb.gridfs.GridFSFile: com.mongodb.DBObject _metadata>;

        $r4 = interfaceinvoke $r3.<com.mongodb.DBObject: java.util.Set keySet()>();

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r4);

        return $r0;
    }

    public boolean isPartialObject()
    {
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        return 0;
    }

    public void markAsPartialObject()
    {
        java.lang.RuntimeException $r0;
        com.mongodb.gridfs.GridFSFile r1;

        r1 := @this: com.mongodb.gridfs.GridFSFile;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("can\'t load partial GridFSFile file");

        throw $r0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.mongodb.gridfs.GridFSFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        $r1 = staticinvoke <com.mongodb.util.JSON: java.lang.String serialize(java.lang.Object)>(r0);

        return $r1;
    }

    protected void setGridFS(com.mongodb.gridfs.GridFS)
    {
        com.mongodb.gridfs.GridFSFile r0;
        com.mongodb.gridfs.GridFS r1;

        r0 := @this: com.mongodb.gridfs.GridFSFile;

        r1 := @parameter0: com.mongodb.gridfs.GridFS;

        r0.<com.mongodb.gridfs.GridFSFile: com.mongodb.gridfs.GridFS _fs> = r1;

        return;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.util.List $r2;
        java.util.Set $r3;
        java.lang.String[] $r1;

        $r0 = new java.util.HashSet;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "_id";

        $r1[1] = "filename";

        $r1[2] = "contentType";

        $r1[3] = "length";

        $r1[4] = "chunkSize";

        $r1[5] = "uploadDate";

        $r1[6] = "aliases";

        $r1[7] = "md5";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        <com.mongodb.gridfs.GridFSFile: java.util.Set VALID_FIELDS> = $r3;

        return;
    }
}
