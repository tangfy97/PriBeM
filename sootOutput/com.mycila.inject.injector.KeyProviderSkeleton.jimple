public abstract class com.mycila.inject.injector.KeyProviderSkeleton extends java.lang.Object implements com.mycila.inject.injector.KeyProvider
{

    public void <init>()
    {
        com.mycila.inject.injector.KeyProviderSkeleton r0;

        r0 := @this: com.mycila.inject.injector.KeyProviderSkeleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.inject.Key getKey(com.google.inject.TypeLiteral, java.lang.reflect.Field, java.lang.'annotation'.Annotation)
    {
        com.google.inject.Key $r4, $r8;
        java.lang.'annotation'.Annotation[] $r1;
        com.mycila.inject.injector.KeyProviderSkeleton r9;
        java.lang.reflect.Field r0;
        int i0, i1;
        java.lang.'annotation'.Annotation r5, r10;
        java.lang.Class $r6;
        com.google.inject.TypeLiteral r2, $r3, $r7;
        boolean $z0;

        r9 := @this: com.mycila.inject.injector.KeyProviderSkeleton;

        r2 := @parameter0: com.google.inject.TypeLiteral;

        r0 := @parameter1: java.lang.reflect.Field;

        r10 := @parameter2: java.lang.'annotation'.Annotation;

        $r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r5 = $r1[i1];

        $r6 = interfaceinvoke r5.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $z0 = staticinvoke <com.mycila.inject.MycilaGuice: boolean isBindingAnnotation(java.lang.Class)>($r6);

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r2.<com.google.inject.TypeLiteral: com.google.inject.TypeLiteral getFieldType(java.lang.reflect.Field)>(r0);

        $r8 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(com.google.inject.TypeLiteral,java.lang.'annotation'.Annotation)>($r7, r5);

        return $r8;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke r2.<com.google.inject.TypeLiteral: com.google.inject.TypeLiteral getFieldType(java.lang.reflect.Field)>(r0);

        $r4 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(com.google.inject.TypeLiteral)>($r3);

        return $r4;
    }

    public java.util.List getParameterKeys(com.google.inject.TypeLiteral, java.lang.reflect.Method, java.lang.'annotation'.Annotation)
    {
        java.util.List $r2;
        java.lang.'annotation'.Annotation r4;
        com.mycila.inject.injector.KeyProviderSkeleton r3;
        com.google.inject.TypeLiteral r0;
        java.lang.reflect.Method r1;

        r3 := @this: com.mycila.inject.injector.KeyProviderSkeleton;

        r0 := @parameter0: com.google.inject.TypeLiteral;

        r1 := @parameter1: java.lang.reflect.Method;

        r4 := @parameter2: java.lang.'annotation'.Annotation;

        $r2 = staticinvoke <com.mycila.inject.internal.Reflect: java.util.List getParameterKeys(com.google.inject.TypeLiteral,java.lang.reflect.Method)>(r0, r1);

        return $r2;
    }
}
