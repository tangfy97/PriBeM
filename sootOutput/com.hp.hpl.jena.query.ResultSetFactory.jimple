public class com.hp.hpl.jena.query.ResultSetFactory extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.query.ResultSetFactory r0;

        r0 := @this: com.hp.hpl.jena.query.ResultSetFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.query.ResultSet load(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.query.ResultSet $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSet load(java.lang.String,com.hp.hpl.jena.sparql.resultset.ResultsFormat)>(r0, null);

        return $r1;
    }

    public static com.hp.hpl.jena.query.ResultSet load(java.lang.String, com.hp.hpl.jena.sparql.resultset.ResultsFormat)
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r10;
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r0, r11;
        com.hp.hpl.jena.query.ResultSet $r4;
        com.hp.hpl.jena.shared.NotFoundException $r5;
        com.hp.hpl.jena.util.FileManager $r1;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r2, $r9;
        boolean $z0;
        java.io.InputStream $r3;

        r2 := @parameter0: java.lang.String;

        r11 := @parameter1: com.hp.hpl.jena.sparql.resultset.ResultsFormat;

        if r11 != null goto label1;

        r11 = staticinvoke <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat guessSyntax(java.lang.String)>(r2);

     label1:
        if r11 != null goto label2;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", "Null format - defaulting to XML");

        r11 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_XML>;

     label2:
        $r0 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_TEXT>;

        $z0 = virtualinvoke r11.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", "Can\'t read a text result set");

        $r10 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Can\'t read a text result set");

        throw $r10;

     label3:
        $r1 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.util.FileManager: java.io.InputStream open(java.lang.String)>(r2);

        if $r3 != null goto label4;

        $r5 = new com.hp.hpl.jena.shared.NotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not found: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.shared.NotFoundException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label4:
        $r4 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSet load(java.io.InputStream,com.hp.hpl.jena.sparql.resultset.ResultsFormat)>($r3, r11);

        return $r4;
    }

    public static com.hp.hpl.jena.query.ResultSet load(java.io.InputStream, com.hp.hpl.jena.sparql.resultset.ResultsFormat)
    {
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.hp.hpl.jena.query.ResultSet $r16, $r18, $r20, $r22, $r24, $r25, $r26, $r27, $r28;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r23;
        com.hp.hpl.jena.rdf.model.Model $r14, $r17, $r19, $r21;
        java.io.InputStream r15;

        r15 := @parameter0: java.io.InputStream;

        r29 := @parameter1: com.hp.hpl.jena.sparql.resultset.ResultsFormat;

        if r29 != null goto label01;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", "Null format - defaulting to XML");

        r29 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_XML>;

     label01:
        $r0 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_JSON>;

        $z0 = virtualinvoke r29.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label02;

        $r28 = staticinvoke <com.hp.hpl.jena.sparql.resultset.JSONInput: com.hp.hpl.jena.query.ResultSet fromJSON(java.io.InputStream)>(r15);

        return $r28;

     label02:
        $r1 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_TSV>;

        $z1 = virtualinvoke r29.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label03;

        $r27 = staticinvoke <com.hp.hpl.jena.sparql.resultset.TSVInput: com.hp.hpl.jena.query.ResultSet fromTSV(java.io.InputStream)>(r15);

        return $r27;

     label03:
        $r2 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_CSV>;

        $z2 = virtualinvoke r29.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label04;

        $r26 = staticinvoke <com.hp.hpl.jena.sparql.resultset.CSVInput: com.hp.hpl.jena.query.ResultSet fromCSV(java.io.InputStream)>(r15);

        return $r26;

     label04:
        $r3 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_BIO>;

        $z3 = virtualinvoke r29.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r3);

        if $z3 == 0 goto label05;

        $r25 = staticinvoke <com.hp.hpl.jena.query.BIOInput: com.hp.hpl.jena.query.ResultSet fromBIO(java.io.InputStream)>(r15);

        return $r25;

     label05:
        $r4 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_XML>;

        $z4 = virtualinvoke r29.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r4);

        if $z4 == 0 goto label06;

        $r24 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSet fromXML(java.io.InputStream)>(r15);

        return $r24;

     label06:
        $r5 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_TEXT>;

        $z5 = virtualinvoke r29.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r5);

        if $z5 == 0 goto label07;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", "Can\'t read a text result set");

        $r23 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r23.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Can\'t read a text result set");

        throw $r23;

     label07:
        $r6 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RDF_XML>;

        $z6 = virtualinvoke r29.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r6);

        if $z6 == 0 goto label08;

        $r21 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        interfaceinvoke $r21.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)>(r15, null);

        $r22 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSet fromRDF(com.hp.hpl.jena.rdf.model.Model)>($r21);

        return $r22;

     label08:
        $r7 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RDF_TTL>;

        $z7 = virtualinvoke r29.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r7);

        if $z7 == 0 goto label09;

        $r19 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        interfaceinvoke $r19.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)>(r15, null, "TURTLE");

        $r20 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSet fromRDF(com.hp.hpl.jena.rdf.model.Model)>($r19);

        return $r20;

     label09:
        $r8 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RDF_N3>;

        $z8 = virtualinvoke r29.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r8);

        if $z8 == 0 goto label10;

        $r17 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        interfaceinvoke $r17.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)>(r15, null, "N3");

        $r18 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSet fromRDF(com.hp.hpl.jena.rdf.model.Model)>($r17);

        return $r18;

     label10:
        $r9 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RDF_NT>;

        $z9 = virtualinvoke r29.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r9);

        if $z9 == 0 goto label11;

        $r14 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        interfaceinvoke $r14.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)>(r15, null, "N-TRIPLES");

        $r16 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSet fromRDF(com.hp.hpl.jena.rdf.model.Model)>($r14);

        return $r16;

     label11:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown result set syntax: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", $r13);

        return null;
    }

    public static com.hp.hpl.jena.rdf.model.Model loadAsModel(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Model $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.rdf.model.Model loadAsModel(com.hp.hpl.jena.rdf.model.Model,java.lang.String,com.hp.hpl.jena.sparql.resultset.ResultsFormat)>(null, r0, null);

        return $r1;
    }

    public static com.hp.hpl.jena.rdf.model.Model loadAsModel(com.hp.hpl.jena.rdf.model.Model, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Model r0, $r2;
        java.lang.String r1;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.rdf.model.Model loadAsModel(com.hp.hpl.jena.rdf.model.Model,java.lang.String,com.hp.hpl.jena.sparql.resultset.ResultsFormat)>(r0, r1, null);

        return $r2;
    }

    public static com.hp.hpl.jena.rdf.model.Model loadAsModel(java.lang.String, com.hp.hpl.jena.sparql.resultset.ResultsFormat)
    {
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.sparql.resultset.ResultsFormat r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.sparql.resultset.ResultsFormat;

        $r2 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.rdf.model.Model loadAsModel(com.hp.hpl.jena.rdf.model.Model,java.lang.String,com.hp.hpl.jena.sparql.resultset.ResultsFormat)>(null, r0, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.rdf.model.Model loadAsModel(com.hp.hpl.jena.rdf.model.Model, java.lang.String, com.hp.hpl.jena.sparql.resultset.ResultsFormat)
    {
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r0, $r1, $r5, $r10, r25;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.hp.hpl.jena.query.ResultSet $r7;
        com.hp.hpl.jena.shared.NotFoundException $r9, $r18, $r19;
        java.lang.StringBuilder $r11, $r12, $r13, $r20, $r21, $r22;
        com.hp.hpl.jena.util.FileManager $r2, $r15;
        java.lang.String r3, $r14, $r23;
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r17;
        com.hp.hpl.jena.rdf.model.Model $r6, $r8, $r16, r24;
        java.io.InputStream $r4;

        r24 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r3 := @parameter1: java.lang.String;

        r25 := @parameter2: com.hp.hpl.jena.sparql.resultset.ResultsFormat;

        if r24 != null goto label01;

        r24 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makeDefaultModel()>();

     label01:
        if r25 != null goto label02;

        r25 = staticinvoke <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat guessSyntax(java.lang.String)>(r3);

     label02:
        if r25 != null goto label03;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", "Null format - defaulting to XML");

        r25 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_XML>;

     label03:
        $r0 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_TEXT>;

        $z0 = virtualinvoke r25.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label04;

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", "Can\'t read a text result set");

        $r17 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r17.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Can\'t read a text result set");

        throw $r17;

     label04:
        $r1 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_XML>;

        $z1 = virtualinvoke r25.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r1);

        if $z1 != 0 goto label05;

        $r10 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_JSON>;

        $z5 = virtualinvoke r25.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r10);

        if $z5 == 0 goto label13;

     label05:
        $r2 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.util.FileManager: java.io.InputStream open(java.lang.String)>(r3);

        if $r4 != null goto label06;

        $r9 = new com.hp.hpl.jena.shared.NotFoundException;

        specialinvoke $r9.<com.hp.hpl.jena.shared.NotFoundException: void <init>(java.lang.String)>(r3);

        throw $r9;

     label06:
        goto label08;

     label07:
        $r18 := @caughtexception;

        $r19 = new com.hp.hpl.jena.shared.NotFoundException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<com.hp.hpl.jena.shared.NotFoundException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label08:
        $r5 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_JSON>;

        $z2 = virtualinvoke r25.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label09;

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makeDefaultModel()>();

        r26 = staticinvoke <com.hp.hpl.jena.sparql.resultset.JSONInput: com.hp.hpl.jena.sparql.resultset.SPARQLResult make(java.io.InputStream,com.hp.hpl.jena.rdf.model.Model)>($r4, $r8);

        goto label10;

     label09:
        $r6 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makeDefaultModel()>();

        r26 = staticinvoke <com.hp.hpl.jena.sparql.resultset.XMLInput: com.hp.hpl.jena.sparql.resultset.SPARQLResult make(java.io.InputStream,com.hp.hpl.jena.rdf.model.Model)>($r4, $r6);

     label10:
        $z3 = virtualinvoke r26.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean isResultSet()>();

        if $z3 == 0 goto label11;

        $r7 = virtualinvoke r26.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.query.ResultSet getResultSet()>();

        staticinvoke <com.hp.hpl.jena.query.ResultSetFormatter: com.hp.hpl.jena.rdf.model.Resource asRDF(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.query.ResultSet)>(r24, $r7);

        goto label12;

     label11:
        $z4 = virtualinvoke r26.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean getBooleanResult()>();

        staticinvoke <com.hp.hpl.jena.query.ResultSetFormatter: com.hp.hpl.jena.rdf.model.Resource asRDF(com.hp.hpl.jena.rdf.model.Model,boolean)>(r24, $z4);

     label12:
        return r24;

     label13:
        $z6 = staticinvoke <com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean isRDFGraphSyntax(com.hp.hpl.jena.sparql.resultset.ResultsFormat)>(r25);

        if $z6 == 0 goto label14;

        $r15 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

        $r16 = virtualinvoke $r15.<com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.rdf.model.Model readModel(com.hp.hpl.jena.rdf.model.Model,java.lang.String)>(r24, r3);

        return $r16;

     label14:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown result set syntax: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", $r14);

        return null;

        catch com.hp.hpl.jena.shared.NotFoundException from label05 to label06 with label07;
    }

    public static com.hp.hpl.jena.sparql.resultset.SPARQLResult result(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.sparql.resultset.SPARQLResult result(java.lang.String,com.hp.hpl.jena.sparql.resultset.ResultsFormat)>(r0, null);

        return $r1;
    }

    public static com.hp.hpl.jena.sparql.resultset.SPARQLResult result(java.lang.String, com.hp.hpl.jena.sparql.resultset.ResultsFormat)
    {
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r26, $r27, $r28, r36;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult $r14, $r16, $r18, $r20, $r22, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        com.hp.hpl.jena.query.ResultSet $r15, $r17, $r19;
        com.hp.hpl.jena.shared.NotFoundException $r25, $r30, $r31;
        java.lang.StringBuilder $r8, $r9, $r10, $r32, $r33, $r34;
        com.hp.hpl.jena.util.FileManager $r12, $r37;
        java.lang.String r2, $r11, $r35;
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r29;
        com.hp.hpl.jena.rdf.model.Model $r13, $r21, $r23;
        java.io.InputStream $r38;

        r2 := @parameter0: java.lang.String;

        r36 := @parameter1: com.hp.hpl.jena.sparql.resultset.ResultsFormat;

        if r36 != null goto label01;

        r36 = staticinvoke <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat guessSyntax(java.lang.String)>(r2);

     label01:
        if r36 != null goto label02;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", "Null format - defaulting to XML");

        r36 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_XML>;

     label02:
        $r0 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_TEXT>;

        $z0 = virtualinvoke r36.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label03;

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", "Can\'t read a text result set");

        $r29 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r29.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Can\'t read a text result set");

        throw $r29;

     label03:
        $r1 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_XML>;

        $z1 = virtualinvoke r36.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r1);

        if $z1 != 0 goto label04;

        $r26 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_JSON>;

        $z8 = virtualinvoke r36.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r26);

        if $z8 != 0 goto label04;

        $r27 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_TSV>;

        $z9 = virtualinvoke r36.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r27);

        if $z9 != 0 goto label04;

        $r28 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_CSV>;

        $z10 = virtualinvoke r36.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r28);

        if $z10 == 0 goto label12;

     label04:
        $r37 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

        $r38 = virtualinvoke $r37.<com.hp.hpl.jena.util.FileManager: java.io.InputStream open(java.lang.String)>(r2);

        if $r38 != null goto label05;

        $r25 = new com.hp.hpl.jena.shared.NotFoundException;

        specialinvoke $r25.<com.hp.hpl.jena.shared.NotFoundException: void <init>(java.lang.String)>(r2);

        throw $r25;

     label05:
        goto label07;

     label06:
        $r30 := @caughtexception;

        $r31 = new com.hp.hpl.jena.shared.NotFoundException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<com.hp.hpl.jena.shared.NotFoundException: void <init>(java.lang.String)>($r35);

        throw $r31;

     label07:
        $r3 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_JSON>;

        $z2 = virtualinvoke r36.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label08;

        $r23 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makeDefaultModel()>();

        $r24 = staticinvoke <com.hp.hpl.jena.sparql.resultset.JSONInput: com.hp.hpl.jena.sparql.resultset.SPARQLResult make(java.io.InputStream,com.hp.hpl.jena.rdf.model.Model)>($r38, $r23);

        return $r24;

     label08:
        $r4 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_XML>;

        $z3 = virtualinvoke r36.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label09;

        $r21 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makeDefaultModel()>();

        $r22 = staticinvoke <com.hp.hpl.jena.sparql.resultset.XMLInput: com.hp.hpl.jena.sparql.resultset.SPARQLResult make(java.io.InputStream,com.hp.hpl.jena.rdf.model.Model)>($r38, $r21);

        return $r22;

     label09:
        $r5 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_TSV>;

        $z4 = virtualinvoke r36.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r5);

        if $z4 == 0 goto label10;

        $r19 = staticinvoke <com.hp.hpl.jena.sparql.resultset.TSVInput: com.hp.hpl.jena.query.ResultSet fromTSV(java.io.InputStream)>($r38);

        $r20 = new com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        specialinvoke $r20.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: void <init>(com.hp.hpl.jena.query.ResultSet)>($r19);

        return $r20;

     label10:
        $r6 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_CSV>;

        $z5 = virtualinvoke r36.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r6);

        if $z5 == 0 goto label11;

        $r17 = staticinvoke <com.hp.hpl.jena.sparql.resultset.CSVInput: com.hp.hpl.jena.query.ResultSet fromCSV(java.io.InputStream)>($r38);

        $r18 = new com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        specialinvoke $r18.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: void <init>(com.hp.hpl.jena.query.ResultSet)>($r17);

        return $r18;

     label11:
        $r7 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_RS_BIO>;

        $z6 = virtualinvoke r36.<com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean equals(java.lang.Object)>($r7);

        if $z6 == 0 goto label12;

        $r15 = staticinvoke <com.hp.hpl.jena.query.BIOInput: com.hp.hpl.jena.query.ResultSet fromBIO(java.io.InputStream)>($r38);

        $r16 = new com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        specialinvoke $r16.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: void <init>(com.hp.hpl.jena.query.ResultSet)>($r15);

        return $r16;

     label12:
        $z7 = staticinvoke <com.hp.hpl.jena.sparql.resultset.ResultsFormat: boolean isRDFGraphSyntax(com.hp.hpl.jena.sparql.resultset.ResultsFormat)>(r36);

        if $z7 == 0 goto label13;

        $r12 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

        $r13 = virtualinvoke $r12.<com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.rdf.model.Model loadModel(java.lang.String)>(r2);

        $r14 = new com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        specialinvoke $r14.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: void <init>(com.hp.hpl.jena.rdf.model.Model)>($r13);

        return $r14;

     label13:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown result set syntax: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", $r11);

        return null;

        catch com.hp.hpl.jena.shared.NotFoundException from label04 to label05 with label06;
    }

    public static com.hp.hpl.jena.query.ResultSet fromXML(java.io.InputStream)
    {
        com.hp.hpl.jena.query.ResultSet $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.resultset.XMLInput: com.hp.hpl.jena.query.ResultSet fromXML(java.io.InputStream)>(r0);

        return $r1;
    }

    public static com.hp.hpl.jena.query.ResultSet fromXML(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.query.ResultSet $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.resultset.XMLInput: com.hp.hpl.jena.query.ResultSet fromXML(java.lang.String)>(r0);

        return $r1;
    }

    public static com.hp.hpl.jena.query.ResultSet fromRDF(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.sparql.resultset.RDFInput $r0;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r0 = new com.hp.hpl.jena.sparql.resultset.RDFInput;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.RDFInput: void <init>(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return $r0;
    }

    public static com.hp.hpl.jena.query.ResultSet fromJSON(java.io.InputStream)
    {
        com.hp.hpl.jena.query.ResultSet $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.resultset.JSONInput: com.hp.hpl.jena.query.ResultSet fromJSON(java.io.InputStream)>(r0);

        return $r1;
    }

    public static com.hp.hpl.jena.query.ResultSet fromTSV(java.io.InputStream)
    {
        com.hp.hpl.jena.query.ResultSet $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.resultset.TSVInput: com.hp.hpl.jena.query.ResultSet fromTSV(java.io.InputStream)>(r0);

        return $r1;
    }

    public static com.hp.hpl.jena.query.ResultSet fromSSE(java.io.InputStream)
    {
        com.hp.hpl.jena.sparql.sse.Item $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.sse.SSE: com.hp.hpl.jena.sparql.sse.Item parse(java.io.InputStream)>(r0);

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/query/ResultSet;", "Reading SSE result set not full implemented");

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderTable: com.hp.hpl.jena.sparql.algebra.Table build(com.hp.hpl.jena.sparql.sse.Item)>($r1);

        return null;
    }

    public static com.hp.hpl.jena.query.ResultSet makeResults(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.sparql.resultset.RDFInput $r0;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r0 = new com.hp.hpl.jena.sparql.resultset.RDFInput;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.RDFInput: void <init>(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return $r0;
    }

    public static com.hp.hpl.jena.query.ResultSetRewindable makeRewindable(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.sparql.resultset.RDFInput $r0;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r0 = new com.hp.hpl.jena.sparql.resultset.RDFInput;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.RDFInput: void <init>(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return $r0;
    }

    public static com.hp.hpl.jena.query.ResultSetRewindable makeRewindable(com.hp.hpl.jena.query.ResultSet)
    {
        com.hp.hpl.jena.query.ResultSetRewindable r2;
        com.hp.hpl.jena.sparql.resultset.ResultSetMem $r1;
        com.hp.hpl.jena.query.ResultSet r0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        $z0 = r0 instanceof com.hp.hpl.jena.query.ResultSetRewindable;

        if $z0 == 0 goto label1;

        r2 = (com.hp.hpl.jena.query.ResultSetRewindable) r0;

        interfaceinvoke r2.<com.hp.hpl.jena.query.ResultSetRewindable: void reset()>();

        return r2;

     label1:
        $r1 = new com.hp.hpl.jena.sparql.resultset.ResultSetMem;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.resultset.ResultSetMem: void <init>(com.hp.hpl.jena.query.ResultSet)>(r0);

        return $r1;
    }

    public static com.hp.hpl.jena.sparql.resultset.ResultSetPeekable makePeekable(com.hp.hpl.jena.query.ResultSet)
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking $r0;
        com.hp.hpl.jena.query.ResultSet r1;

        r1 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        $r0 = new com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: void <init>(com.hp.hpl.jena.query.ResultSet)>(r1);

        return $r0;
    }

    public static com.hp.hpl.jena.query.ResultSet makeSorted(com.hp.hpl.jena.query.ResultSet, java.util.List)
    {
        java.util.List r2;
        com.hp.hpl.jena.query.ResultSet r1;
        com.hp.hpl.jena.sparql.resultset.SortedResultSet $r0;

        r1 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        r2 := @parameter1: java.util.List;

        $r0 = new com.hp.hpl.jena.sparql.resultset.SortedResultSet;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.SortedResultSet: void <init>(com.hp.hpl.jena.query.ResultSet,java.util.List)>(r1, r2);

        return $r0;
    }

    public static com.hp.hpl.jena.query.ResultSetRewindable copyResults(com.hp.hpl.jena.query.ResultSet)
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetMem $r0;
        com.hp.hpl.jena.query.ResultSet r1;

        r1 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        $r0 = new com.hp.hpl.jena.sparql.resultset.ResultSetMem;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.ResultSetMem: void <init>(com.hp.hpl.jena.query.ResultSet)>(r1);

        return $r0;
    }

    public static com.hp.hpl.jena.query.ResultSet create(com.hp.hpl.jena.sparql.engine.QueryIterator, java.util.List)
    {
        java.util.List r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator r2;
        com.hp.hpl.jena.sparql.engine.ResultSetStream $r0;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r1 := @parameter1: java.util.List;

        $r0 = new com.hp.hpl.jena.sparql.engine.ResultSetStream;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.ResultSetStream: void <init>(java.util.List,com.hp.hpl.jena.rdf.model.Model,java.util.Iterator)>(r1, null, r2);

        return $r0;
    }
}
