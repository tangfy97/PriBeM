class org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection extends org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection
{
    private final org.waveprotocol.box.server.rpc.SocketIOServerChannel socketChannel;

    void <init>(org.waveprotocol.wave.model.wave.ParticipantId, org.waveprotocol.box.server.rpc.ServerRpcProvider)
    {
        org.waveprotocol.wave.model.wave.ParticipantId r1;
        org.waveprotocol.box.server.rpc.SocketIOServerChannel $r3, $r9;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection r0;
        org.waveprotocol.box.server.rpc.ServerRpcProvider r2;
        org.waveprotocol.wave.util.logging.Log $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        r2 := @parameter1: org.waveprotocol.box.server.rpc.ServerRpcProvider;

        specialinvoke r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection: void <init>(org.waveprotocol.wave.model.wave.ParticipantId,org.waveprotocol.box.server.rpc.ServerRpcProvider)>(r1, r2);

        $r3 = new org.waveprotocol.box.server.rpc.SocketIOServerChannel;

        specialinvoke $r3.<org.waveprotocol.box.server.rpc.SocketIOServerChannel: void <init>(org.waveprotocol.box.server.rpc.ProtoCallback)>(r0);

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection: org.waveprotocol.box.server.rpc.SocketIOServerChannel socketChannel> = $r3;

        $r4 = staticinvoke <org.waveprotocol.box.server.rpc.ServerRpcProvider: org.waveprotocol.wave.util.logging.Log access$000()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New websocket connection set up for user ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r8);

        $r9 = r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection: org.waveprotocol.box.server.rpc.SocketIOServerChannel socketChannel>;

        virtualinvoke r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection: void expectMessages(org.waveprotocol.box.server.rpc.MessageExpectingChannel)>($r9);

        return;
    }

    protected void sendMessage(int, com.google.protobuf.Message)
    {
        int i0;
        com.google.protobuf.Message r1;
        org.waveprotocol.box.server.rpc.SocketIOServerChannel $r2;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection r0;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection;

        i0 := @parameter0: int;

        r1 := @parameter1: com.google.protobuf.Message;

        $r2 = r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection: org.waveprotocol.box.server.rpc.SocketIOServerChannel socketChannel>;

        virtualinvoke $r2.<org.waveprotocol.box.server.rpc.SocketIOServerChannel: void sendMessage(int,com.google.protobuf.Message)>(i0, r1);

        return;
    }

    public org.waveprotocol.box.server.rpc.SocketIOServerChannel getWebSocketServerChannel()
    {
        org.waveprotocol.box.server.rpc.SocketIOServerChannel $r1;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection r0;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection;

        $r1 = r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$SocketIOConnection: org.waveprotocol.box.server.rpc.SocketIOServerChannel socketChannel>;

        return $r1;
    }
}
