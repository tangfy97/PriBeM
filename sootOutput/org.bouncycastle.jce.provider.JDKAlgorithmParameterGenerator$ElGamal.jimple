public class org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal extends org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator
{
    private int l;

    public void <init>()
    {
        org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal;

        specialinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal: int l> = 0;

        return;
    }

    protected void engineInit(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException
    {
        org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal r2;
        java.security.InvalidAlgorithmParameterException $r4;
        java.security.SecureRandom r3;
        javax.crypto.spec.DHGenParameterSpec r1;
        int $i0, $i1;
        java.security.spec.AlgorithmParameterSpec r0;
        boolean $z0;

        r2 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal;

        r0 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        r3 := @parameter1: java.security.SecureRandom;

        $z0 = r0 instanceof javax.crypto.spec.DHGenParameterSpec;

        if $z0 != 0 goto label1;

        $r4 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r4.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("DH parameter generator requires a DHGenParameterSpec for initialisation");

        throw $r4;

     label1:
        r1 = (javax.crypto.spec.DHGenParameterSpec) r0;

        $i0 = virtualinvoke r1.<javax.crypto.spec.DHGenParameterSpec: int getPrimeSize()>();

        r2.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal: int strength> = $i0;

        $i1 = virtualinvoke r1.<javax.crypto.spec.DHGenParameterSpec: int getExponentSize()>();

        r2.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal: int l> = $i1;

        r2.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal: java.security.SecureRandom random> = r3;

        return;
    }

    protected java.security.AlgorithmParameters engineGenerateParameters()
    {
        java.security.SecureRandom $r2, $r3, $r9;
        int $i0, $i1, $i2;
        java.math.BigInteger $r7, $r8;
        java.lang.String $r12;
        javax.crypto.spec.DHParameterSpec $r6;
        java.lang.RuntimeException $r11;
        org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal r1;
        java.security.AlgorithmParameters $r5;
        java.lang.Exception $r10;
        org.bouncycastle.crypto.params.ElGamalParameters $r4;
        org.bouncycastle.crypto.generators.ElGamalParametersGenerator $r0;

        r1 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal;

        $r0 = new org.bouncycastle.crypto.generators.ElGamalParametersGenerator;

        specialinvoke $r0.<org.bouncycastle.crypto.generators.ElGamalParametersGenerator: void <init>()>();

        $r2 = r1.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal: java.security.SecureRandom random>;

        if $r2 == null goto label1;

        $i2 = r1.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal: int strength>;

        $r9 = r1.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal: java.security.SecureRandom random>;

        virtualinvoke $r0.<org.bouncycastle.crypto.generators.ElGamalParametersGenerator: void init(int,int,java.security.SecureRandom)>($i2, 20, $r9);

        goto label2;

     label1:
        $i0 = r1.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal: int strength>;

        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        virtualinvoke $r0.<org.bouncycastle.crypto.generators.ElGamalParametersGenerator: void init(int,int,java.security.SecureRandom)>($i0, 20, $r3);

     label2:
        $r4 = virtualinvoke $r0.<org.bouncycastle.crypto.generators.ElGamalParametersGenerator: org.bouncycastle.crypto.params.ElGamalParameters generateParameters()>();

     label3:
        $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>("ElGamal", "BC");

        $r6 = new javax.crypto.spec.DHParameterSpec;

        $r7 = virtualinvoke $r4.<org.bouncycastle.crypto.params.ElGamalParameters: java.math.BigInteger getP()>();

        $r8 = virtualinvoke $r4.<org.bouncycastle.crypto.params.ElGamalParameters: java.math.BigInteger getG()>();

        $i1 = r1.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator$ElGamal: int l>;

        specialinvoke $r6.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r7, $r8, $i1);

        virtualinvoke $r5.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r6);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        $r12 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label6:
        return $r5;

        catch java.lang.Exception from label3 to label4 with label5;
    }
}
