public class com.hp.hpl.jena.sparql.algebra.optimize.TransformFilterConjunction extends com.hp.hpl.jena.sparql.algebra.TransformCopy
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.algebra.optimize.TransformFilterConjunction r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.optimize.TransformFilterConjunction;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.TransformCopy: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.algebra.Op transform(com.hp.hpl.jena.sparql.algebra.op.OpFilter, com.hp.hpl.jena.sparql.algebra.Op)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpFilter r0, $r4;
        com.hp.hpl.jena.sparql.expr.ExprList $r1, $r2;
        com.hp.hpl.jena.sparql.algebra.optimize.TransformFilterConjunction r5;
        com.hp.hpl.jena.sparql.algebra.Op r3;

        r5 := @this: com.hp.hpl.jena.sparql.algebra.optimize.TransformFilterConjunction;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpFilter;

        r3 := @parameter1: com.hp.hpl.jena.sparql.algebra.Op;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpFilter: com.hp.hpl.jena.sparql.expr.ExprList getExprs()>();

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.expr.ExprList: com.hp.hpl.jena.sparql.expr.ExprList splitConjunction(com.hp.hpl.jena.sparql.expr.ExprList)>($r1);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.algebra.op.OpFilter: com.hp.hpl.jena.sparql.algebra.op.OpFilter filterDirect(com.hp.hpl.jena.sparql.expr.ExprList,com.hp.hpl.jena.sparql.algebra.Op)>($r2, r3);

        return $r4;
    }
}
