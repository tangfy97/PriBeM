class nu.xom.Namespaces extends java.lang.Object
{
    private java.util.HashMap namespaces;
    private java.util.ArrayList prefixes;

    void <init>()
    {
        nu.xom.Namespaces r0;
        java.util.HashMap $r1;
        java.util.ArrayList $r2;

        r0 := @this: nu.xom.Namespaces;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(1);

        r0.<nu.xom.Namespaces: java.util.HashMap namespaces> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(1);

        r0.<nu.xom.Namespaces: java.util.ArrayList prefixes> = $r2;

        return;
    }

    void put(java.lang.String, java.lang.String)
    {
        nu.xom.Namespaces r0;
        java.util.HashMap $r3;
        java.lang.String r1, r2;
        java.util.ArrayList $r4, $r5;

        r0 := @this: nu.xom.Namespaces;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<nu.xom.Namespaces: java.util.HashMap namespaces>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = r0.<nu.xom.Namespaces: java.util.ArrayList prefixes>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r5 = r0.<nu.xom.Namespaces: java.util.ArrayList prefixes>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void remove(java.lang.String)
    {
        nu.xom.Namespaces r0;
        java.util.HashMap $r1;
        java.lang.String r3;
        java.util.ArrayList $r2;

        r0 := @this: nu.xom.Namespaces;

        r3 := @parameter0: java.lang.String;

        if r3 != null goto label1;

        r3 = "";

     label1:
        $r1 = r0.<nu.xom.Namespaces: java.util.HashMap namespaces>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r3);

        $r2 = r0.<nu.xom.Namespaces: java.util.ArrayList prefixes>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        return;
    }

    java.lang.String getURI(java.lang.String)
    {
        nu.xom.Namespaces r0;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4, $r5;

        r0 := @this: nu.xom.Namespaces;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<nu.xom.Namespaces: java.util.HashMap namespaces>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    java.util.ArrayList getPrefixes()
    {
        nu.xom.Namespaces r0;
        java.util.ArrayList $r1;

        r0 := @this: nu.xom.Namespaces;

        $r1 = r0.<nu.xom.Namespaces: java.util.ArrayList prefixes>;

        return $r1;
    }

    nu.xom.Namespaces copy()
    {
        java.util.HashMap $r2, $r4;
        java.util.ArrayList $r5, $r7;
        nu.xom.Namespaces $r0, r1;
        java.lang.Object $r3, $r6;

        r1 := @this: nu.xom.Namespaces;

        $r0 = new nu.xom.Namespaces;

        specialinvoke $r0.<nu.xom.Namespaces: void <init>()>();

        $r2 = r1.<nu.xom.Namespaces: java.util.HashMap namespaces>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object clone()>();

        $r4 = (java.util.HashMap) $r3;

        $r0.<nu.xom.Namespaces: java.util.HashMap namespaces> = $r4;

        $r5 = r1.<nu.xom.Namespaces: java.util.ArrayList prefixes>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object clone()>();

        $r7 = (java.util.ArrayList) $r6;

        $r0.<nu.xom.Namespaces: java.util.ArrayList prefixes> = $r7;

        return $r0;
    }

    int size()
    {
        nu.xom.Namespaces r0;
        int $i0;
        java.util.ArrayList $r1;

        r0 := @this: nu.xom.Namespaces;

        $r1 = r0.<nu.xom.Namespaces: java.util.ArrayList prefixes>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    java.lang.String getPrefix(int)
    {
        nu.xom.Namespaces r0;
        int i0;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.util.ArrayList $r1;

        r0 := @this: nu.xom.Namespaces;

        i0 := @parameter0: int;

        $r1 = r0.<nu.xom.Namespaces: java.util.ArrayList prefixes>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }
}
