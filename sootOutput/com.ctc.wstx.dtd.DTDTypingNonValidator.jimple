public class com.ctc.wstx.dtd.DTDTypingNonValidator extends com.ctc.wstx.dtd.DTDValidatorBase
{
    protected boolean mHasAttrDefaults;
    protected java.util.BitSet mCurrDefaultAttrs;
    protected boolean mHasNormalizableAttrs;
    java.util.BitSet mTmpDefaultAttrs;

    public void <init>(com.ctc.wstx.dtd.DTDSubset, org.codehaus.stax2.validation.ValidationContext, boolean, java.util.Map, java.util.Map)
    {
        com.ctc.wstx.dtd.DTDSubset r1;
        java.util.Map r3, r4;
        com.ctc.wstx.dtd.DTDTypingNonValidator r0;
        org.codehaus.stax2.validation.ValidationContext r2;
        boolean z0;

        r0 := @this: com.ctc.wstx.dtd.DTDTypingNonValidator;

        r1 := @parameter0: com.ctc.wstx.dtd.DTDSubset;

        r2 := @parameter1: org.codehaus.stax2.validation.ValidationContext;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.util.Map;

        r4 := @parameter4: java.util.Map;

        specialinvoke r0.<com.ctc.wstx.dtd.DTDValidatorBase: void <init>(com.ctc.wstx.dtd.DTDSubset,org.codehaus.stax2.validation.ValidationContext,boolean,java.util.Map,java.util.Map)>(r1, r2, z0, r3, r4);

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasAttrDefaults> = 0;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.BitSet mCurrDefaultAttrs> = null;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasNormalizableAttrs> = 0;

        return;
    }

    public final boolean reallyValidating()
    {
        com.ctc.wstx.dtd.DTDTypingNonValidator r0;

        r0 := @this: com.ctc.wstx.dtd.DTDTypingNonValidator;

        return 0;
    }

    public void setAttrValueNormalization(boolean)
    {
        com.ctc.wstx.dtd.DTDTypingNonValidator r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.dtd.DTDTypingNonValidator;

        z0 := @parameter0: boolean;

        return;
    }

    public void validateElementStart(java.lang.String, java.lang.String, java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        java.util.HashMap $r10, $r11, $r13, $r14;
        com.ctc.wstx.dtd.NameKey $r3, $r4;
        com.ctc.wstx.dtd.DTDElement r7;
        java.util.Map $r5;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String r1, r2, r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.ctc.wstx.dtd.DTDTypingNonValidator r0;
        com.ctc.wstx.dtd.DTDElement[] $r8, $r9, $r15, $r17;
        java.lang.Object $r6, $r16;
        java.util.BitSet r19, $r20;

        r0 := @this: com.ctc.wstx.dtd.DTDTypingNonValidator;

        r2 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $r3 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        virtualinvoke $r3.<com.ctc.wstx.dtd.NameKey: com.ctc.wstx.dtd.NameKey reset(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.Map mElemSpecs>;

        $r4 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r7 = (com.ctc.wstx.dtd.DTDElement) $r6;

        $i0 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: int mElemCount>;

        $i1 = $i0 + 1;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: int mElemCount> = $i1;

        $r8 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        $i2 = lengthof $r8;

        if $i0 < $i2 goto label01;

        $r15 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        $r16 = staticinvoke <com.ctc.wstx.util.DataUtil: java.lang.Object growArrayBy50Pct(java.lang.Object)>($r15);

        $r17 = (com.ctc.wstx.dtd.DTDElement[]) $r16;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDElement[] mElems> = $r17;

     label01:
        $r9 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDElement mCurrElem> = r7;

        $r9[$i0] = r7;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: int mAttrCount> = 0;

        $i5 = (int) -2;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: int mIdAttrIndex> = $i5;

        if r7 != null goto label02;

        $r14 = <com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.HashMap EMPTY_MAP>;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.HashMap mCurrAttrDefs> = $r14;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasAttrDefaults> = 0;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.BitSet mCurrDefaultAttrs> = null;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasNormalizableAttrs> = 0;

        return;

     label02:
        $r10 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: java.util.HashMap getAttributes()>();

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.HashMap mCurrAttrDefs> = $r10;

        $r11 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.HashMap mCurrAttrDefs>;

        if $r11 != null goto label03;

        $r13 = <com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.HashMap EMPTY_MAP>;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.HashMap mCurrAttrDefs> = $r13;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasAttrDefaults> = 0;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.BitSet mCurrDefaultAttrs> = null;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasNormalizableAttrs> = 0;

        return;

     label03:
        $z0 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mNormAttrs>;

        if $z0 != 0 goto label04;

        $z3 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: boolean attrsNeedValidation()>();

        if $z3 == 0 goto label05;

     label04:
        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasNormalizableAttrs> = $z4;

        $z1 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: boolean hasAttrDefaultValues()>();

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasAttrDefaults> = $z1;

        $z2 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasAttrDefaults>;

        if $z2 == 0 goto label09;

        $i3 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: int getSpecialCount()>();

        r19 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.BitSet mTmpDefaultAttrs>;

        if r19 != null goto label07;

        $r20 = new java.util.BitSet;

        specialinvoke $r20.<java.util.BitSet: void <init>(int)>($i3);

        r19 = $r20;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.BitSet mTmpDefaultAttrs> = $r20;

        goto label08;

     label07:
        virtualinvoke r19.<java.util.BitSet: void clear()>();

     label08:
        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.BitSet mCurrDefaultAttrs> = r19;

        goto label10;

     label09:
        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.BitSet mCurrDefaultAttrs> = null;

     label10:
        return;
    }

    public java.lang.String validateAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r7;
        java.util.HashMap $r4;
        com.ctc.wstx.dtd.NameKey $r3, $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1, r2, r14, r15;
        boolean $z0, $z1;
        com.ctc.wstx.dtd.DTDTypingNonValidator r0;
        java.lang.Object $r6, $r12;
        com.ctc.wstx.dtd.DTDAttribute[] $r8, $r9, $r11, $r13;
        java.util.BitSet $r10;

        r0 := @this: com.ctc.wstx.dtd.DTDTypingNonValidator;

        r2 := @parameter0: java.lang.String;

        r14 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r15 := @parameter3: java.lang.String;

        $r4 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.HashMap mCurrAttrDefs>;

        $r3 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        $r5 = virtualinvoke $r3.<com.ctc.wstx.dtd.NameKey: com.ctc.wstx.dtd.NameKey reset(java.lang.String,java.lang.String)>(r1, r2);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (com.ctc.wstx.dtd.DTDAttribute) $r6;

        $i0 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: int mAttrCount>;

        $i1 = $i0 + 1;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: int mAttrCount> = $i1;

        $r8 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $i2 = lengthof $r8;

        if $i0 < $i2 goto label1;

        $r11 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $r12 = staticinvoke <com.ctc.wstx.util.DataUtil: java.lang.Object growArrayBy50Pct(java.lang.Object)>($r11);

        $r13 = (com.ctc.wstx.dtd.DTDAttribute[]) $r12;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs> = $r13;

     label1:
        $r9 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $r9[$i0] = r7;

        if r7 == null goto label3;

        $z0 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasAttrDefaults>;

        if $z0 == 0 goto label2;

        $i3 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: int getSpecialIndex()>();

        if $i3 < 0 goto label2;

        $r10 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.BitSet mCurrDefaultAttrs>;

        virtualinvoke $r10.<java.util.BitSet: void set(int)>($i3);

     label2:
        $z1 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasNormalizableAttrs>;

        if $z1 == 0 goto label3;

     label3:
        return null;
    }

    public java.lang.String validateAttribute(java.lang.String, java.lang.String, java.lang.String, char[], int, int) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r7;
        java.util.HashMap $r4;
        com.ctc.wstx.dtd.NameKey $r3, $r5;
        int $i0, $i1, $i2, i3, i4, $i5;
        java.lang.String r1, r2, $r11, r16;
        boolean $z0, $z1;
        com.ctc.wstx.dtd.DTDTypingNonValidator r0;
        char[] r10;
        java.lang.Object $r6, $r14;
        com.ctc.wstx.dtd.DTDAttribute[] $r8, $r9, $r13, $r15;
        java.util.BitSet $r12;

        r0 := @this: com.ctc.wstx.dtd.DTDTypingNonValidator;

        r2 := @parameter0: java.lang.String;

        r16 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r10 := @parameter3: char[];

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r4 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.HashMap mCurrAttrDefs>;

        $r3 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        $r5 = virtualinvoke $r3.<com.ctc.wstx.dtd.NameKey: com.ctc.wstx.dtd.NameKey reset(java.lang.String,java.lang.String)>(r1, r2);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (com.ctc.wstx.dtd.DTDAttribute) $r6;

        $i0 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: int mAttrCount>;

        $i1 = $i0 + 1;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: int mAttrCount> = $i1;

        $r8 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $i2 = lengthof $r8;

        if $i0 < $i2 goto label1;

        $r13 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $r14 = staticinvoke <com.ctc.wstx.util.DataUtil: java.lang.Object growArrayBy50Pct(java.lang.Object)>($r13);

        $r15 = (com.ctc.wstx.dtd.DTDAttribute[]) $r14;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs> = $r15;

     label1:
        $r9 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $r9[$i0] = r7;

        if r7 == null goto label3;

        $z0 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasAttrDefaults>;

        if $z0 == 0 goto label2;

        $i5 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: int getSpecialIndex()>();

        if $i5 < 0 goto label2;

        $r12 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.BitSet mCurrDefaultAttrs>;

        virtualinvoke $r12.<java.util.BitSet: void set(int)>($i5);

     label2:
        $z1 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasNormalizableAttrs>;

        if $z1 == 0 goto label3;

        $r11 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String normalize(com.ctc.wstx.dtd.DTDValidatorBase,char[],int,int)>(r0, r10, i3, i4);

        return $r11;

     label3:
        return null;
    }

    public int validateElementAndAttributes() throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r5;
        com.ctc.wstx.dtd.DTDTypingNonValidator r0;
        java.util.List $r3;
        com.ctc.wstx.dtd.DTDElement r1;
        int $i0, $i1, i2, $i3;
        java.lang.Object $r4;
        java.util.BitSet r2;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.dtd.DTDTypingNonValidator;

        r1 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDElement mCurrElem>;

        $z0 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: boolean mHasAttrDefaults>;

        if $z0 == 0 goto label3;

        r2 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: java.util.BitSet mCurrDefaultAttrs>;

        $i0 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDElement: int getSpecialCount()>();

        i2 = virtualinvoke r2.<java.util.BitSet: int nextClearBit(int)>(0);

     label1:
        if i2 >= $i0 goto label3;

        $r3 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDElement: java.util.List getSpecialAttrs()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (com.ctc.wstx.dtd.DTDAttribute) $r4;

        $z1 = virtualinvoke r5.<com.ctc.wstx.dtd.DTDAttribute: boolean hasDefaultValue()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: void doAddDefaultValue(com.ctc.wstx.dtd.DTDAttribute)>(r5);

     label2:
        $i1 = i2 + 1;

        i2 = virtualinvoke r2.<java.util.BitSet: int nextClearBit(int)>($i1);

        goto label1;

     label3:
        if r1 != null goto label4;

        $i3 = 3;

        goto label5;

     label4:
        $i3 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDElement: int getAllowedContentIfSpace()>();

     label5:
        return $i3;
    }

    public int validateElementEnd(java.lang.String, java.lang.String, java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDTypingNonValidator r0;
        com.ctc.wstx.dtd.DTDElement r3, $r5;
        com.ctc.wstx.dtd.DTDElement[] $r1, $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r6, r7, r8;

        r0 := @this: com.ctc.wstx.dtd.DTDTypingNonValidator;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        $i0 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: int mElemCount>;

        $i1 = $i0 - 1;

        r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: int mElemCount> = $i1;

        $r1 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        $r1[$i1] = null;

        if $i1 >= 1 goto label1;

        return 3;

     label1:
        $r2 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        $i2 = $i1 - 1;

        r3 = $r2[$i2];

        if r3 != null goto label2;

        $i4 = 3;

        goto label3;

     label2:
        $r4 = r0.<com.ctc.wstx.dtd.DTDTypingNonValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        $i3 = $i1 - 1;

        $r5 = $r4[$i3];

        $i4 = virtualinvoke $r5.<com.ctc.wstx.dtd.DTDElement: int getAllowedContentIfSpace()>();

     label3:
        return $i4;
    }

    public void validationCompleted(boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDTypingNonValidator r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.dtd.DTDTypingNonValidator;

        z0 := @parameter0: boolean;

        return;
    }

    protected com.ctc.wstx.dtd.ElementIdMap getIdMap()
    {
        com.ctc.wstx.dtd.DTDTypingNonValidator r0;

        r0 := @this: com.ctc.wstx.dtd.DTDTypingNonValidator;

        staticinvoke <com.ctc.wstx.util.ExceptionUtil: void throwGenericInternal()>();

        return null;
    }
}
