public class com.google.gxp.compiler.base.EscapeExpression extends com.google.gxp.compiler.base.Expression
{
    private final com.google.gxp.compiler.base.Expression subexpression;

    public void <init>(com.google.gxp.compiler.schema.Schema, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r1, $r6;
        com.google.gxp.compiler.schema.Schema r2, $r4;
        java.lang.Object $r3, $r5;
        com.google.gxp.compiler.base.EscapeExpression r0;

        r0 := @this: com.google.gxp.compiler.base.EscapeExpression;

        r2 := @parameter0: com.google.gxp.compiler.schema.Schema;

        r1 := @parameter1: com.google.gxp.compiler.base.Expression;

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (com.google.gxp.compiler.schema.Schema) $r3;

        specialinvoke r0.<com.google.gxp.compiler.base.Expression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema)>(r1, $r4);

        $r5 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (com.google.gxp.compiler.base.Expression) $r5;

        r0.<com.google.gxp.compiler.base.EscapeExpression: com.google.gxp.compiler.base.Expression subexpression> = $r6;

        return;
    }

    public com.google.gxp.compiler.base.Expression getSubexpression()
    {
        com.google.gxp.compiler.base.Expression $r1;
        com.google.gxp.compiler.base.EscapeExpression r0;

        r0 := @this: com.google.gxp.compiler.base.EscapeExpression;

        $r1 = r0.<com.google.gxp.compiler.base.EscapeExpression: com.google.gxp.compiler.base.Expression subexpression>;

        return $r1;
    }

    public com.google.gxp.compiler.base.Expression withSubexpression(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r0, $r2;
        com.google.gxp.compiler.schema.Schema $r3;
        com.google.gxp.compiler.base.EscapeExpression r1, $r4;
        boolean $z0;

        r1 := @this: com.google.gxp.compiler.base.EscapeExpression;

        r0 := @parameter0: com.google.gxp.compiler.base.Expression;

        $r2 = r1.<com.google.gxp.compiler.base.EscapeExpression: com.google.gxp.compiler.base.Expression subexpression>;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.base.Expression: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r4 = new com.google.gxp.compiler.base.EscapeExpression;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.EscapeExpression: com.google.gxp.compiler.schema.Schema getSchema()>();

        specialinvoke $r4.<com.google.gxp.compiler.base.EscapeExpression: void <init>(com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression)>($r3, r0);

     label2:
        return $r4;
    }

    public java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)
    {
        java.lang.Object $r2;
        com.google.gxp.compiler.base.ExpressionVisitor r0;
        com.google.gxp.compiler.base.EscapeExpression r1;

        r1 := @this: com.google.gxp.compiler.base.EscapeExpression;

        r0 := @parameter0: com.google.gxp.compiler.base.ExpressionVisitor;

        $r2 = interfaceinvoke r0.<com.google.gxp.compiler.base.ExpressionVisitor: java.lang.Object visitEscapeExpression(com.google.gxp.compiler.base.EscapeExpression)>(r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1, $z2;
        com.google.gxp.compiler.base.EscapeExpression r1, $r2;

        r1 := @this: com.google.gxp.compiler.base.EscapeExpression;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.google.gxp.compiler.base.EscapeExpression;

        if $z0 == 0 goto label1;

        $r2 = (com.google.gxp.compiler.base.EscapeExpression) r0;

        $z1 = virtualinvoke r1.<com.google.gxp.compiler.base.EscapeExpression: boolean equals(com.google.gxp.compiler.base.EscapeExpression)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.base.EscapeExpression)
    {
        com.google.gxp.compiler.base.Expression $r2, $r3;
        com.google.gxp.compiler.base.EscapeExpression r0, r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.EscapeExpression;

        r1 := @parameter0: com.google.gxp.compiler.base.EscapeExpression;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.base.EscapeExpression: boolean equalsExpression(com.google.gxp.compiler.base.Expression)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.EscapeExpression: com.google.gxp.compiler.base.Expression getSubexpression()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.EscapeExpression: com.google.gxp.compiler.base.Expression getSubexpression()>();

        $z1 = virtualinvoke $r2.<com.google.gxp.compiler.base.Expression: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        com.google.gxp.compiler.base.Expression $r3;
        java.lang.Object[] $r0;
        int $i0, $i1;
        java.lang.Integer $r2;
        com.google.gxp.compiler.base.EscapeExpression r1;

        r1 := @this: com.google.gxp.compiler.base.EscapeExpression;

        $r0 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke r1.<com.google.gxp.compiler.base.EscapeExpression: int expressionHashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.EscapeExpression: com.google.gxp.compiler.base.Expression getSubexpression()>();

        $r0[1] = $r3;

        $i1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i1;
    }
}
