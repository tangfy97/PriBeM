class org.jdom.ContentList$FilterListIterator extends java.lang.Object implements java.util.ListIterator
{
    private final org.jdom.ContentList this$0;
    org.jdom.filter.Filter filter;
    int lastOperation;
    int initialCursor;
    int cursor;
    int last;
    int expected;

    void <init>(org.jdom.ContentList, org.jdom.filter.Filter, int)
    {
        org.jdom.filter.Filter r2;
        int i0, $i1, $i2, $i4;
        org.jdom.ContentList r1;
        org.jdom.ContentList$FilterListIterator r0;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        r1 := @parameter0: org.jdom.ContentList;

        r2 := @parameter1: org.jdom.filter.Filter;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0> = r1;

        r0.<org.jdom.ContentList$FilterListIterator: org.jdom.filter.Filter filter> = r2;

        $i1 = specialinvoke r0.<org.jdom.ContentList$FilterListIterator: int initializeCursor(int)>(i0);

        r0.<org.jdom.ContentList$FilterListIterator: int initialCursor> = $i1;

        $i4 = (int) -1;

        r0.<org.jdom.ContentList$FilterListIterator: int last> = $i4;

        $i2 = staticinvoke <org.jdom.ContentList: int access$0(org.jdom.ContentList)>(r1);

        r0.<org.jdom.ContentList$FilterListIterator: int expected> = $i2;

        r0.<org.jdom.ContentList$FilterListIterator: int lastOperation> = 0;

        return;
    }

    public void add(java.lang.Object)
    {
        org.jdom.filter.Filter $r2;
        org.jdom.ContentList$FilterListIterator r0;
        java.lang.StringBuffer $r4, $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6, $r8;
        boolean $z0;
        org.jdom.ContentList $r9, $r10;
        java.lang.Object r1;
        org.jdom.IllegalAddException $r3;
        java.lang.Class $r5;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.jdom.ContentList$FilterListIterator: void checkConcurrentModification()>();

        $r2 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.filter.Filter filter>;

        $z0 = interfaceinvoke $r2.<org.jdom.filter.Filter: boolean matches(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $i0 = r0.<org.jdom.ContentList$FilterListIterator: int cursor>;

        $i1 = $i0 + 1;

        r0.<org.jdom.ContentList$FilterListIterator: int last> = $i1;

        $r9 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i2 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        virtualinvoke $r9.<org.jdom.ContentList: void add(int,java.lang.Object)>($i2, r1);

        goto label2;

     label1:
        $r3 = new org.jdom.IllegalAddException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("Filter won\'t allow add of ");

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<org.jdom.IllegalAddException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        $r10 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i3 = staticinvoke <org.jdom.ContentList: int access$0(org.jdom.ContentList)>($r10);

        r0.<org.jdom.ContentList$FilterListIterator: int expected> = $i3;

        r0.<org.jdom.ContentList$FilterListIterator: int lastOperation> = 5;

        return;
    }

    private void checkConcurrentModification()
    {
        int $i0, $i1;
        org.jdom.ContentList $r1;
        java.util.ConcurrentModificationException $r2;
        org.jdom.ContentList$FilterListIterator r0;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        $i0 = r0.<org.jdom.ContentList$FilterListIterator: int expected>;

        $r1 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i1 = staticinvoke <org.jdom.ContentList: int access$0(org.jdom.ContentList)>($r1);

        if $i0 == $i1 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    public boolean hasNext()
    {
        java.lang.IllegalStateException $r2;
        org.jdom.ContentList$FilterListIterator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;
        org.jdom.ContentList $r1;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        specialinvoke r0.<org.jdom.ContentList$FilterListIterator: void checkConcurrentModification()>();

        $i0 = r0.<org.jdom.ContentList$FilterListIterator: int lastOperation>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label05;
            case 2: goto label07;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label03;
            case 6: goto label04;
            default: goto label06;
        };

     label01:
        $i12 = r0.<org.jdom.ContentList$FilterListIterator: int initialCursor>;

        r0.<org.jdom.ContentList$FilterListIterator: int cursor> = $i12;

        goto label07;

     label02:
        $i8 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        r0.<org.jdom.ContentList$FilterListIterator: int cursor> = $i8;

        goto label07;

     label03:
        $i5 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        $i6 = $i5 + 1;

        $i7 = specialinvoke r0.<org.jdom.ContentList$FilterListIterator: int moveForward(int)>($i6);

        r0.<org.jdom.ContentList$FilterListIterator: int cursor> = $i7;

        goto label07;

     label04:
        $i1 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        $i2 = specialinvoke r0.<org.jdom.ContentList$FilterListIterator: int moveForward(int)>($i1);

        r0.<org.jdom.ContentList$FilterListIterator: int cursor> = $i2;

        goto label07;

     label05:
        $i9 = r0.<org.jdom.ContentList$FilterListIterator: int cursor>;

        $i10 = $i9 + 1;

        $i11 = specialinvoke r0.<org.jdom.ContentList$FilterListIterator: int moveForward(int)>($i10);

        r0.<org.jdom.ContentList$FilterListIterator: int cursor> = $i11;

        goto label07;

     label06:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown operation");

        throw $r2;

     label07:
        $i13 = r0.<org.jdom.ContentList$FilterListIterator: int lastOperation>;

        if $i13 == 0 goto label08;

        r0.<org.jdom.ContentList$FilterListIterator: int lastOperation> = 2;

     label08:
        $i3 = r0.<org.jdom.ContentList$FilterListIterator: int cursor>;

        $r1 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i4 = virtualinvoke $r1.<org.jdom.ContentList: int size()>();

        if $i3 >= $i4 goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        return $z0;
    }

    public boolean hasPrevious()
    {
        java.lang.IllegalStateException $r2;
        org.jdom.ContentList$FilterListIterator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean $z0;
        org.jdom.ContentList $r1;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        specialinvoke r0.<org.jdom.ContentList$FilterListIterator: void checkConcurrentModification()>();

        $i0 = r0.<org.jdom.ContentList$FilterListIterator: int lastOperation>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label6;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label2;
            default: goto label5;
        };

     label1:
        $i9 = r0.<org.jdom.ContentList$FilterListIterator: int initialCursor>;

        r0.<org.jdom.ContentList$FilterListIterator: int cursor> = $i9;

        $r1 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i10 = virtualinvoke $r1.<org.jdom.ContentList: int size()>();

        $i11 = r0.<org.jdom.ContentList$FilterListIterator: int cursor>;

        if $i11 < $i10 goto label6;

        $i12 = $i10 - 1;

        $i13 = specialinvoke r0.<org.jdom.ContentList$FilterListIterator: int moveBackward(int)>($i12);

        r0.<org.jdom.ContentList$FilterListIterator: int cursor> = $i13;

        goto label6;

     label2:
        $i3 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        $i4 = $i3 - 1;

        $i5 = specialinvoke r0.<org.jdom.ContentList$FilterListIterator: int moveBackward(int)>($i4);

        r0.<org.jdom.ContentList$FilterListIterator: int cursor> = $i5;

        goto label6;

     label3:
        $i6 = r0.<org.jdom.ContentList$FilterListIterator: int cursor>;

        $i7 = $i6 - 1;

        $i8 = specialinvoke r0.<org.jdom.ContentList$FilterListIterator: int moveBackward(int)>($i7);

        r0.<org.jdom.ContentList$FilterListIterator: int cursor> = $i8;

        goto label6;

     label4:
        $i1 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        r0.<org.jdom.ContentList$FilterListIterator: int cursor> = $i1;

        goto label6;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown operation");

        throw $r2;

     label6:
        $i14 = r0.<org.jdom.ContentList$FilterListIterator: int lastOperation>;

        if $i14 == 0 goto label7;

        r0.<org.jdom.ContentList$FilterListIterator: int lastOperation> = 1;

     label7:
        $i2 = r0.<org.jdom.ContentList$FilterListIterator: int cursor>;

        if $i2 >= 0 goto label8;

        $z0 = 0;

        goto label9;

     label8:
        $z0 = 1;

     label9:
        return $z0;
    }

    private int initializeCursor(int)
    {
        org.jdom.filter.Filter $r3;
        java.lang.IndexOutOfBoundsException $r5, $r11;
        org.jdom.ContentList$FilterListIterator r0;
        java.lang.StringBuffer $r6, $r7, $r8, $r9, $r12, $r13;
        int i0, $i1, i2, i3, $i4;
        java.lang.String $r10, $r14;
        boolean $z0;
        org.jdom.ContentList $r1, $r4, $r15;
        java.lang.Object $r2;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r11 = new java.lang.IndexOutOfBoundsException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>(java.lang.String)>("Index: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label1:
        i2 = 0;

        i3 = 0;

        goto label5;

     label2:
        $r1 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $r2 = virtualinvoke $r1.<org.jdom.ContentList: java.lang.Object get(int)>(i3);

        $r3 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.filter.Filter filter>;

        $z0 = interfaceinvoke $r3.<org.jdom.filter.Filter: boolean matches(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        if i0 != i2 goto label3;

        return i3;

     label3:
        i2 = i2 + 1;

     label4:
        i3 = i3 + 1;

     label5:
        $r15 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i4 = virtualinvoke $r15.<org.jdom.ContentList: int size()>();

        if i3 < $i4 goto label2;

        if i0 <= i2 goto label6;

        $r5 = new java.lang.IndexOutOfBoundsException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>("Index: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Size: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label6:
        $r4 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i1 = virtualinvoke $r4.<org.jdom.ContentList: int size()>();

        return $i1;
    }

    private int moveBackward(int)
    {
        org.jdom.filter.Filter $r4;
        org.jdom.ContentList$FilterListIterator r0;
        int $i0, $i1, i2, i3, $i5, $i7;
        org.jdom.ContentList $r1, $r2, $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        i2 := @parameter0: int;

        $r1 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i0 = virtualinvoke $r1.<org.jdom.ContentList: int size()>();

        if i2 < $i0 goto label1;

        $r5 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i1 = virtualinvoke $r5.<org.jdom.ContentList: int size()>();

        i2 = $i1 - 1;

     label1:
        i3 = i2;

        goto label4;

     label2:
        $r2 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $r3 = virtualinvoke $r2.<org.jdom.ContentList: java.lang.Object get(int)>(i3);

        $r4 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.filter.Filter filter>;

        $z0 = interfaceinvoke $r4.<org.jdom.filter.Filter: boolean matches(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        return i3;

     label3:
        $i5 = (int) -1;

        i3 = i3 + $i5;

     label4:
        if i3 >= 0 goto label2;

        $i7 = (int) -1;

        return $i7;
    }

    private int moveForward(int)
    {
        org.jdom.filter.Filter $r4;
        org.jdom.ContentList$FilterListIterator r0;
        int $i0, $i1, i2, i3;
        org.jdom.ContentList $r1, $r2, $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        i2 := @parameter0: int;

        if i2 >= 0 goto label1;

        i2 = 0;

     label1:
        i3 = i2;

        goto label4;

     label2:
        $r2 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $r3 = virtualinvoke $r2.<org.jdom.ContentList: java.lang.Object get(int)>(i3);

        $r4 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.filter.Filter filter>;

        $z0 = interfaceinvoke $r4.<org.jdom.filter.Filter: boolean matches(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        return i3;

     label3:
        i3 = i3 + 1;

     label4:
        $r1 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i0 = virtualinvoke $r1.<org.jdom.ContentList: int size()>();

        if i3 < $i0 goto label2;

        $r5 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i1 = virtualinvoke $r5.<org.jdom.ContentList: int size()>();

        return $i1;
    }

    public java.lang.Object next()
    {
        org.jdom.ContentList$FilterListIterator r0;
        int $i0, $i1, $i2;
        org.jdom.ContentList $r1, $r3;
        java.lang.Object $r4;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        specialinvoke r0.<org.jdom.ContentList$FilterListIterator: void checkConcurrentModification()>();

        $z0 = virtualinvoke r0.<org.jdom.ContentList$FilterListIterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $i1 = r0.<org.jdom.ContentList$FilterListIterator: int cursor>;

        r0.<org.jdom.ContentList$FilterListIterator: int last> = $i1;

        goto label2;

     label1:
        $r1 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i0 = virtualinvoke $r1.<org.jdom.ContentList: int size()>();

        r0.<org.jdom.ContentList$FilterListIterator: int last> = $i0;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label2:
        r0.<org.jdom.ContentList$FilterListIterator: int lastOperation> = 4;

        $r3 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i2 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        $r4 = virtualinvoke $r3.<org.jdom.ContentList: java.lang.Object get(int)>($i2);

        return $r4;
    }

    public int nextIndex()
    {
        org.jdom.filter.Filter $r2;
        org.jdom.ContentList$FilterListIterator r0;
        int $i0, $i1, i2, i3, $i4;
        org.jdom.ContentList $r1, $r4, $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        specialinvoke r0.<org.jdom.ContentList$FilterListIterator: void checkConcurrentModification()>();

        virtualinvoke r0.<org.jdom.ContentList$FilterListIterator: boolean hasNext()>();

        i2 = 0;

        i3 = 0;

        goto label4;

     label1:
        $r2 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.filter.Filter filter>;

        $r1 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $r3 = virtualinvoke $r1.<org.jdom.ContentList: java.lang.Object get(int)>(i3);

        $z0 = interfaceinvoke $r2.<org.jdom.filter.Filter: boolean matches(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $i0 = r0.<org.jdom.ContentList$FilterListIterator: int cursor>;

        if i3 != $i0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

     label3:
        i3 = i3 + 1;

     label4:
        $r5 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i4 = virtualinvoke $r5.<org.jdom.ContentList: int size()>();

        if i3 < $i4 goto label1;

        $r4 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i1 = staticinvoke <org.jdom.ContentList: int access$0(org.jdom.ContentList)>($r4);

        r0.<org.jdom.ContentList$FilterListIterator: int expected> = $i1;

        return i2;
    }

    public java.lang.Object previous()
    {
        org.jdom.ContentList$FilterListIterator r0;
        int $i0, $i1, $i3;
        org.jdom.ContentList $r2;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r4;
        boolean $z0;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        specialinvoke r0.<org.jdom.ContentList$FilterListIterator: void checkConcurrentModification()>();

        $z0 = virtualinvoke r0.<org.jdom.ContentList$FilterListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<org.jdom.ContentList$FilterListIterator: int cursor>;

        r0.<org.jdom.ContentList$FilterListIterator: int last> = $i0;

        goto label2;

     label1:
        $i3 = (int) -1;

        r0.<org.jdom.ContentList$FilterListIterator: int last> = $i3;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label2:
        r0.<org.jdom.ContentList$FilterListIterator: int lastOperation> = 3;

        $r2 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i1 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        $r3 = virtualinvoke $r2.<org.jdom.ContentList: java.lang.Object get(int)>($i1);

        return $r3;
    }

    public int previousIndex()
    {
        org.jdom.filter.Filter $r2;
        org.jdom.ContentList$FilterListIterator r0;
        int $i0, i1, i2, $i3, $i5;
        org.jdom.ContentList $r1, $r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        specialinvoke r0.<org.jdom.ContentList$FilterListIterator: void checkConcurrentModification()>();

        $z0 = virtualinvoke r0.<org.jdom.ContentList$FilterListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label5;

        i1 = 0;

        i2 = 0;

        goto label4;

     label1:
        $r2 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.filter.Filter filter>;

        $r1 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $r3 = virtualinvoke $r1.<org.jdom.ContentList: java.lang.Object get(int)>(i2);

        $z1 = interfaceinvoke $r2.<org.jdom.filter.Filter: boolean matches(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $i0 = r0.<org.jdom.ContentList$FilterListIterator: int cursor>;

        if i2 != $i0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

     label3:
        i2 = i2 + 1;

     label4:
        $r4 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i3 = virtualinvoke $r4.<org.jdom.ContentList: int size()>();

        if i2 < $i3 goto label1;

     label5:
        $i5 = (int) -1;

        return $i5;
    }

    public void remove()
    {
        org.jdom.filter.Filter $r4;
        java.lang.IllegalStateException $r1, $r16;
        org.jdom.ContentList$FilterListIterator r0;
        java.lang.StringBuffer $r6, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r8, $r13;
        boolean $z0;
        org.jdom.ContentList $r2, $r14, $r15;
        java.lang.Object $r3;
        org.jdom.IllegalAddException $r5;
        java.lang.Class $r7;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        specialinvoke r0.<org.jdom.ContentList$FilterListIterator: void checkConcurrentModification()>();

        $i0 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        if $i0 < 0 goto label1;

        $i1 = r0.<org.jdom.ContentList$FilterListIterator: int lastOperation>;

        if $i1 != 6 goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no preceeding call to prev() or next()");

        throw $r1;

     label2:
        $i2 = r0.<org.jdom.ContentList$FilterListIterator: int lastOperation>;

        if $i2 != 5 goto label3;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot call remove() after add()");

        throw $r16;

     label3:
        $r2 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i3 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        $r3 = virtualinvoke $r2.<org.jdom.ContentList: java.lang.Object get(int)>($i3);

        $r4 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.filter.Filter filter>;

        $z0 = interfaceinvoke $r4.<org.jdom.filter.Filter: boolean matches(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        $r14 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i5 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        virtualinvoke $r14.<org.jdom.ContentList: java.lang.Object remove(int)>($i5);

        goto label5;

     label4:
        $r5 = new org.jdom.IllegalAddException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>("Filter won\'t allow ");

        $r7 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (index ");

        $i4 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") to be removed");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.jdom.IllegalAddException: void <init>(java.lang.String)>($r13);

        throw $r5;

     label5:
        $r15 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i6 = staticinvoke <org.jdom.ContentList: int access$0(org.jdom.ContentList)>($r15);

        r0.<org.jdom.ContentList$FilterListIterator: int expected> = $i6;

        r0.<org.jdom.ContentList$FilterListIterator: int lastOperation> = 6;

        return;
    }

    public void set(java.lang.Object)
    {
        java.lang.IllegalStateException $r1, $r26;
        org.jdom.ContentList$FilterListIterator r0;
        boolean $z0, $z1;
        org.jdom.filter.Filter $r3, $r14;
        java.lang.StringBuffer $r5, $r6, $r7, $r10, $r18, $r21, $r22, $r23, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r9, $r11, $r20, $r25;
        org.jdom.ContentList $r12, $r15, $r16;
        java.lang.Object r2, $r13;
        org.jdom.IllegalAddException $r4, $r17;
        java.lang.Class $r8, $r19;

        r0 := @this: org.jdom.ContentList$FilterListIterator;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.jdom.ContentList$FilterListIterator: void checkConcurrentModification()>();

        $i0 = r0.<org.jdom.ContentList$FilterListIterator: int lastOperation>;

        if $i0 == 5 goto label1;

        $i1 = r0.<org.jdom.ContentList$FilterListIterator: int lastOperation>;

        if $i1 != 6 goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot call set() after add() or remove()");

        throw $r1;

     label2:
        $i2 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        if $i2 >= 0 goto label3;

        $r26 = new java.lang.IllegalStateException;

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no preceeding call to prev() or next()");

        throw $r26;

     label3:
        $r3 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.filter.Filter filter>;

        $z0 = interfaceinvoke $r3.<org.jdom.filter.Filter: boolean matches(java.lang.Object)>(r2);

        if $z0 == 0 goto label5;

        $r12 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i4 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        $r13 = virtualinvoke $r12.<org.jdom.ContentList: java.lang.Object get(int)>($i4);

        $r14 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.filter.Filter filter>;

        $z1 = interfaceinvoke $r14.<org.jdom.filter.Filter: boolean matches(java.lang.Object)>($r13);

        if $z1 != 0 goto label4;

        $r17 = new org.jdom.IllegalAddException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>(java.lang.String)>("Filter won\'t allow ");

        $r19 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (index ");

        $i7 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i7);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") to be removed");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<org.jdom.IllegalAddException: void <init>(java.lang.String)>($r25);

        throw $r17;

     label4:
        $r15 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i5 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        virtualinvoke $r15.<org.jdom.ContentList: java.lang.Object set(int,java.lang.Object)>($i5, r2);

        goto label6;

     label5:
        $r4 = new org.jdom.IllegalAddException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>("Filter won\'t allow index ");

        $i3 = r0.<org.jdom.ContentList$FilterListIterator: int last>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to be set to ");

        $r8 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.jdom.IllegalAddException: void <init>(java.lang.String)>($r11);

        throw $r4;

     label6:
        $r16 = r0.<org.jdom.ContentList$FilterListIterator: org.jdom.ContentList this$0>;

        $i6 = staticinvoke <org.jdom.ContentList: int access$0(org.jdom.ContentList)>($r16);

        r0.<org.jdom.ContentList$FilterListIterator: int expected> = $i6;

        return;
    }
}
