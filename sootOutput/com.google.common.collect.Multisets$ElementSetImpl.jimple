final class com.google.common.collect.Multisets$ElementSetImpl extends java.util.AbstractSet implements java.io.Serializable
{
    private final com.google.common.collect.Multiset multiset;
    private static final long serialVersionUID;

    void <init>(com.google.common.collect.Multiset)
    {
        com.google.common.collect.Multisets$ElementSetImpl r0;
        com.google.common.collect.Multiset r1;

        r0 := @this: com.google.common.collect.Multisets$ElementSetImpl;

        r1 := @parameter0: com.google.common.collect.Multiset;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<com.google.common.collect.Multisets$ElementSetImpl: com.google.common.collect.Multiset multiset> = r1;

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.Multisets$ElementSetImpl r1;
        java.lang.Object r2;

        r1 := @this: com.google.common.collect.Multisets$ElementSetImpl;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.Multisets$ElementSetImpl r1;
        java.util.Collection r2;

        r1 := @this: com.google.common.collect.Multisets$ElementSetImpl;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void clear()
    {
        com.google.common.collect.Multisets$ElementSetImpl r0;
        com.google.common.collect.Multiset $r1;

        r0 := @this: com.google.common.collect.Multisets$ElementSetImpl;

        $r1 = r0.<com.google.common.collect.Multisets$ElementSetImpl: com.google.common.collect.Multiset multiset>;

        interfaceinvoke $r1.<com.google.common.collect.Multiset: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.Multisets$ElementSetImpl r0;
        com.google.common.collect.Multiset $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multisets$ElementSetImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Multisets$ElementSetImpl: com.google.common.collect.Multiset multiset>;

        $z0 = interfaceinvoke $r2.<com.google.common.collect.Multiset: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        com.google.common.collect.Multisets$ElementSetImpl r0;
        com.google.common.collect.Multiset $r2;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multisets$ElementSetImpl;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.google.common.collect.Multisets$ElementSetImpl: com.google.common.collect.Multiset multiset>;

        $z0 = interfaceinvoke $r2.<com.google.common.collect.Multiset: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Multisets$ElementSetImpl r0;
        com.google.common.collect.Multiset $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multisets$ElementSetImpl;

        $r1 = r0.<com.google.common.collect.Multisets$ElementSetImpl: com.google.common.collect.Multiset multiset>;

        $z0 = interfaceinvoke $r1.<com.google.common.collect.Multiset: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.Multisets$ElementSetImpl r0;
        java.util.Iterator $r3;
        com.google.common.collect.Multisets$ElementSetImpl$1 $r4;
        com.google.common.collect.Multiset $r1;
        java.util.Set $r2;

        r0 := @this: com.google.common.collect.Multisets$ElementSetImpl;

        $r1 = r0.<com.google.common.collect.Multisets$ElementSetImpl: com.google.common.collect.Multiset multiset>;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multiset: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = new com.google.common.collect.Multisets$ElementSetImpl$1;

        specialinvoke $r4.<com.google.common.collect.Multisets$ElementSetImpl$1: void <init>(com.google.common.collect.Multisets$ElementSetImpl,java.util.Iterator)>(r0, $r3);

        return $r4;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.common.collect.Multisets$ElementSetImpl r0;
        com.google.common.collect.Multiset $r2, $r3;
        int $i0;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.Multisets$ElementSetImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Multisets$ElementSetImpl: com.google.common.collect.Multiset multiset>;

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Multiset: int count(java.lang.Object)>(r1);

        if $i0 <= 0 goto label1;

        $r3 = r0.<com.google.common.collect.Multisets$ElementSetImpl: com.google.common.collect.Multiset multiset>;

        interfaceinvoke $r3.<com.google.common.collect.Multiset: int remove(java.lang.Object,int)>(r1, $i0);

        return 1;

     label1:
        return 0;
    }

    public int size()
    {
        com.google.common.collect.Multisets$ElementSetImpl r0;
        com.google.common.collect.Multiset $r1;
        int $i0;
        java.util.Set $r2;

        r0 := @this: com.google.common.collect.Multisets$ElementSetImpl;

        $r1 = r0.<com.google.common.collect.Multisets$ElementSetImpl: com.google.common.collect.Multiset multiset>;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multiset: java.util.Set entrySet()>();

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        return $i0;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.Multisets$ElementSetImpl: long serialVersionUID> = 0L;

        return;
    }
}
