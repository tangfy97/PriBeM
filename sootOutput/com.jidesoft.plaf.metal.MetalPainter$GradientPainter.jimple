class com.jidesoft.plaf.metal.MetalPainter$GradientPainter extends java.lang.Object
{
    public static final com.jidesoft.plaf.metal.MetalPainter$GradientPainter INSTANCE;

    void <init>()
    {
        com.jidesoft.plaf.metal.MetalPainter$GradientPainter r0;

        r0 := @this: com.jidesoft.plaf.metal.MetalPainter$GradientPainter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void paint(java.awt.Component, java.awt.Graphics2D, java.util.List, int, int, int, int, boolean)
    {
        java.lang.Throwable $r5;
        java.awt.Component r0;
        com.jidesoft.plaf.metal.MetalPainter$GradientPainter r2;
        java.util.List r4;
        java.awt.Graphics2D r3;
        int i0, i1, i2, i3, i4, i5;
        java.lang.Object $r1;
        boolean z0;

        r2 := @this: com.jidesoft.plaf.metal.MetalPainter$GradientPainter;

        r0 := @parameter0: java.awt.Component;

        r3 := @parameter1: java.awt.Graphics2D;

        r4 := @parameter2: java.util.List;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        z0 := @parameter7: boolean;

        if z0 == 0 goto label1;

        i4 = i0;

        i5 = i1;

        goto label2;

     label1:
        i4 = i0;

        i5 = i1;

     label2:
        $r1 = virtualinvoke r0.<java.awt.Component: java.lang.Object getTreeLock()>();

        entermonitor $r1;

     label3:
        virtualinvoke r2.<com.jidesoft.plaf.metal.MetalPainter$GradientPainter: void paint(java.awt.Component,java.awt.Graphics,int,int,java.util.List,boolean)>(r0, r3, i4, i5, r4, z0);

        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void paint(java.awt.Component, java.awt.Graphics, int, int, java.util.List, boolean)
    {
        java.awt.Color $r9, $r11, $r13, $r19, $r21, $r23;
        boolean z0;
        java.awt.Component r24;
        java.util.List r3;
        java.awt.Graphics r0;
        float $f0, $f1, $f2, $f3;
        java.awt.Graphics2D r1;
        int i0, i1;
        java.lang.Number $r5, $r7, $r15, $r17;
        com.jidesoft.plaf.metal.MetalPainter$GradientPainter r2;
        java.lang.Object $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;

        r2 := @this: com.jidesoft.plaf.metal.MetalPainter$GradientPainter;

        r24 := @parameter0: java.awt.Component;

        r0 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.util.List;

        z0 := @parameter5: boolean;

        r1 = (java.awt.Graphics2D) r0;

        if z0 == 0 goto label1;

        $r14 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r15 = (java.lang.Number) $r14;

        $f2 = virtualinvoke $r15.<java.lang.Number: float floatValue()>();

        $r16 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(1);

        $r17 = (java.lang.Number) $r16;

        $f3 = virtualinvoke $r17.<java.lang.Number: float floatValue()>();

        $r18 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(2);

        $r19 = (java.awt.Color) $r18;

        $r20 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(3);

        $r21 = (java.awt.Color) $r20;

        $r22 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(4);

        $r23 = (java.awt.Color) $r22;

        specialinvoke r2.<com.jidesoft.plaf.metal.MetalPainter$GradientPainter: void drawVerticalGradient(java.awt.Graphics2D,float,float,java.awt.Color,java.awt.Color,java.awt.Color,int,int)>(r1, $f2, $f3, $r19, $r21, $r23, i0, i1);

        goto label2;

     label1:
        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.Number) $r4;

        $f0 = virtualinvoke $r5.<java.lang.Number: float floatValue()>();

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(1);

        $r7 = (java.lang.Number) $r6;

        $f1 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(2);

        $r9 = (java.awt.Color) $r8;

        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(3);

        $r11 = (java.awt.Color) $r10;

        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(4);

        $r13 = (java.awt.Color) $r12;

        specialinvoke r2.<com.jidesoft.plaf.metal.MetalPainter$GradientPainter: void drawHorizontalGradient(java.awt.Graphics2D,float,float,java.awt.Color,java.awt.Color,java.awt.Color,int,int)>(r1, $f0, $f1, $r9, $r11, $r13, i0, i1);

     label2:
        return;
    }

    private void drawVerticalGradient(java.awt.Graphics2D, float, float, java.awt.Color, java.awt.Color, java.awt.Color, int, int)
    {
        java.awt.Color r2, r3, r5;
        float f0, $f1, $f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        java.awt.Graphics2D r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12;
        com.jidesoft.plaf.metal.MetalPainter$GradientPainter r1;
        java.awt.GradientPaint $r4, $r6, $r7;

        r1 := @this: com.jidesoft.plaf.metal.MetalPainter$GradientPainter;

        r0 := @parameter0: java.awt.Graphics2D;

        f0 := @parameter1: float;

        f3 := @parameter2: float;

        r2 := @parameter3: java.awt.Color;

        r5 := @parameter4: java.awt.Color;

        r3 := @parameter5: java.awt.Color;

        i7 := @parameter6: int;

        i0 := @parameter7: int;

        $f1 = (float) i0;

        $f2 = f0 * $f1;

        i1 = (int) $f2;

        $f4 = (float) i0;

        $f5 = f3 * $f4;

        i2 = (int) $f5;

        if i1 <= 0 goto label1;

        $f18 = (float) i1;

        $r7 = specialinvoke r1.<com.jidesoft.plaf.metal.MetalPainter$GradientPainter: java.awt.GradientPaint getGradient(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, 0.0F, r2, 0.0F, $f18, r5);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r7);

        virtualinvoke r0.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i7, i1);

     label1:
        if i2 <= 0 goto label2;

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r5);

        virtualinvoke r0.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, i1, i7, i2);

     label2:
        if i1 <= 0 goto label3;

        $f12 = (float) i1;

        $f11 = (float) i2;

        $f17 = $f12 + $f11;

        $f13 = (float) i1;

        $f15 = $f13 * 2.0F;

        $f14 = (float) i2;

        $f16 = $f15 + $f14;

        $r6 = specialinvoke r1.<com.jidesoft.plaf.metal.MetalPainter$GradientPainter: java.awt.GradientPaint getGradient(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, $f17, r5, 0.0F, $f16, r2);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r6);

        $i12 = i1 + i2;

        virtualinvoke r0.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, $i12, i7, i1);

     label3:
        $i3 = i1 * 2;

        $i4 = i0 - $i3;

        $i5 = $i4 - i2;

        if $i5 <= 0 goto label4;

        $f6 = (float) i1;

        $f8 = $f6 * 2.0F;

        $f7 = (float) i2;

        $f10 = $f8 + $f7;

        $f9 = (float) i0;

        $r4 = specialinvoke r1.<com.jidesoft.plaf.metal.MetalPainter$GradientPainter: java.awt.GradientPaint getGradient(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, $f10, r2, 0.0F, $f9, r3);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r4);

        $i6 = i1 * 2;

        $i11 = $i6 + i2;

        $i8 = i1 * 2;

        $i9 = i0 - $i8;

        $i10 = $i9 - i2;

        virtualinvoke r0.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, $i11, i7, $i10);

     label4:
        return;
    }

    private void drawHorizontalGradient(java.awt.Graphics2D, float, float, java.awt.Color, java.awt.Color, java.awt.Color, int, int)
    {
        java.awt.Color r2, r3, r5;
        float f0, $f1, $f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        java.awt.Graphics2D r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12;
        com.jidesoft.plaf.metal.MetalPainter$GradientPainter r1;
        java.awt.GradientPaint $r4, $r6, $r7;

        r1 := @this: com.jidesoft.plaf.metal.MetalPainter$GradientPainter;

        r0 := @parameter0: java.awt.Graphics2D;

        f0 := @parameter1: float;

        f3 := @parameter2: float;

        r2 := @parameter3: java.awt.Color;

        r5 := @parameter4: java.awt.Color;

        r3 := @parameter5: java.awt.Color;

        i0 := @parameter6: int;

        i9 := @parameter7: int;

        $f1 = (float) i0;

        $f2 = f0 * $f1;

        i1 = (int) $f2;

        $f4 = (float) i0;

        $f5 = f3 * $f4;

        i2 = (int) $f5;

        if i1 <= 0 goto label1;

        $f18 = (float) i1;

        $r7 = specialinvoke r1.<com.jidesoft.plaf.metal.MetalPainter$GradientPainter: java.awt.GradientPaint getGradient(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, 0.0F, r2, $f18, 0.0F, r5);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r7);

        virtualinvoke r0.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i1, i9);

     label1:
        if i2 <= 0 goto label2;

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r5);

        virtualinvoke r0.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(i1, 0, i2, i9);

     label2:
        if i1 <= 0 goto label3;

        $f12 = (float) i1;

        $f11 = (float) i2;

        $f17 = $f12 + $f11;

        $f13 = (float) i1;

        $f15 = $f13 * 2.0F;

        $f14 = (float) i2;

        $f16 = $f15 + $f14;

        $r6 = specialinvoke r1.<com.jidesoft.plaf.metal.MetalPainter$GradientPainter: java.awt.GradientPaint getGradient(float,float,java.awt.Color,float,float,java.awt.Color)>($f17, 0.0F, r5, $f16, 0.0F, r2);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r6);

        $i12 = i1 + i2;

        virtualinvoke r0.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i12, 0, i1, i9);

     label3:
        $i3 = i1 * 2;

        $i4 = i0 - $i3;

        $i5 = $i4 - i2;

        if $i5 <= 0 goto label4;

        $f6 = (float) i1;

        $f8 = $f6 * 2.0F;

        $f7 = (float) i2;

        $f10 = $f8 + $f7;

        $f9 = (float) i0;

        $r4 = specialinvoke r1.<com.jidesoft.plaf.metal.MetalPainter$GradientPainter: java.awt.GradientPaint getGradient(float,float,java.awt.Color,float,float,java.awt.Color)>($f10, 0.0F, r2, $f9, 0.0F, r3);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r4);

        $i6 = i1 * 2;

        $i11 = $i6 + i2;

        $i7 = i1 * 2;

        $i8 = i0 - $i7;

        $i10 = $i8 - i2;

        virtualinvoke r0.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i11, 0, $i10, i9);

     label4:
        return;
    }

    private java.awt.GradientPaint getGradient(float, float, java.awt.Color, float, float, java.awt.Color)
    {
        java.awt.Color r1, r2;
        com.jidesoft.plaf.metal.MetalPainter$GradientPainter r3;
        java.awt.GradientPaint $r0;
        float f0, f1, f2, f3;

        r3 := @this: com.jidesoft.plaf.metal.MetalPainter$GradientPainter;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: java.awt.Color;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        r2 := @parameter5: java.awt.Color;

        $r0 = new java.awt.GradientPaint;

        specialinvoke $r0.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color,boolean)>(f0, f1, r1, f2, f3, r2, 1);

        return $r0;
    }

    static void <clinit>()
    {
        com.jidesoft.plaf.metal.MetalPainter$GradientPainter $r0;

        $r0 = new com.jidesoft.plaf.metal.MetalPainter$GradientPainter;

        specialinvoke $r0.<com.jidesoft.plaf.metal.MetalPainter$GradientPainter: void <init>()>();

        <com.jidesoft.plaf.metal.MetalPainter$GradientPainter: com.jidesoft.plaf.metal.MetalPainter$GradientPainter INSTANCE> = $r0;

        return;
    }
}
