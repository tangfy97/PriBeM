public class org.apache.http.impl.client.DefaultRequestDirector extends java.lang.Object implements org.apache.http.client.RequestDirector
{
    private final org.apache.commons.logging.Log log;
    protected final org.apache.http.conn.ClientConnectionManager connManager;
    protected final org.apache.http.conn.routing.HttpRoutePlanner routePlanner;
    protected final org.apache.http.ConnectionReuseStrategy reuseStrategy;
    protected final org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy;
    protected final org.apache.http.protocol.HttpRequestExecutor requestExec;
    protected final org.apache.http.protocol.HttpProcessor httpProcessor;
    protected final org.apache.http.client.HttpRequestRetryHandler retryHandler;
    protected final org.apache.http.client.RedirectHandler redirectHandler;
    protected final org.apache.http.client.RedirectStrategy redirectStrategy;
    protected final org.apache.http.client.AuthenticationHandler targetAuthHandler;
    protected final org.apache.http.client.AuthenticationStrategy targetAuthStrategy;
    protected final org.apache.http.client.AuthenticationHandler proxyAuthHandler;
    protected final org.apache.http.client.AuthenticationStrategy proxyAuthStrategy;
    protected final org.apache.http.client.UserTokenHandler userTokenHandler;
    protected final org.apache.http.params.HttpParams params;
    protected org.apache.http.conn.ManagedClientConnection managedConn;
    protected final org.apache.http.auth.AuthState targetAuthState;
    protected final org.apache.http.auth.AuthState proxyAuthState;
    private final org.apache.http.impl.client.HttpAuthenticator authenticator;
    private int execCount;
    private int redirectCount;
    private int maxRedirects;
    private org.apache.http.HttpHost virtualHost;

    public void <init>(org.apache.http.protocol.HttpRequestExecutor, org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.ConnectionKeepAliveStrategy, org.apache.http.conn.routing.HttpRoutePlanner, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.UserTokenHandler, org.apache.http.params.HttpParams)
    {
        org.apache.http.protocol.HttpRequestExecutor r2;
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.ConnectionKeepAliveStrategy r5;
        org.apache.http.conn.routing.HttpRoutePlanner r6;
        org.apache.http.client.HttpRequestRetryHandler r8;
        org.apache.http.impl.client.DefaultRedirectStrategyAdaptor $r9;
        org.apache.http.conn.ClientConnectionManager r3;
        org.apache.http.client.AuthenticationHandler r12, r14;
        org.apache.http.protocol.HttpProcessor r7;
        org.apache.http.impl.client.AuthenticationStrategyAdaptor $r11, $r13;
        org.apache.http.client.UserTokenHandler r15;
        org.apache.http.ConnectionReuseStrategy r4;
        org.apache.http.params.HttpParams r16;
        org.apache.commons.logging.Log $r1;
        org.apache.http.client.RedirectHandler r10;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r2 := @parameter0: org.apache.http.protocol.HttpRequestExecutor;

        r3 := @parameter1: org.apache.http.conn.ClientConnectionManager;

        r4 := @parameter2: org.apache.http.ConnectionReuseStrategy;

        r5 := @parameter3: org.apache.http.conn.ConnectionKeepAliveStrategy;

        r6 := @parameter4: org.apache.http.conn.routing.HttpRoutePlanner;

        r7 := @parameter5: org.apache.http.protocol.HttpProcessor;

        r8 := @parameter6: org.apache.http.client.HttpRequestRetryHandler;

        r10 := @parameter7: org.apache.http.client.RedirectHandler;

        r12 := @parameter8: org.apache.http.client.AuthenticationHandler;

        r14 := @parameter9: org.apache.http.client.AuthenticationHandler;

        r15 := @parameter10: org.apache.http.client.UserTokenHandler;

        r16 := @parameter11: org.apache.http.params.HttpParams;

        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/http/impl/client/DefaultRequestDirector;");

        $r9 = new org.apache.http.impl.client.DefaultRedirectStrategyAdaptor;

        specialinvoke $r9.<org.apache.http.impl.client.DefaultRedirectStrategyAdaptor: void <init>(org.apache.http.client.RedirectHandler)>(r10);

        $r11 = new org.apache.http.impl.client.AuthenticationStrategyAdaptor;

        specialinvoke $r11.<org.apache.http.impl.client.AuthenticationStrategyAdaptor: void <init>(org.apache.http.client.AuthenticationHandler)>(r12);

        $r13 = new org.apache.http.impl.client.AuthenticationStrategyAdaptor;

        specialinvoke $r13.<org.apache.http.impl.client.AuthenticationStrategyAdaptor: void <init>(org.apache.http.client.AuthenticationHandler)>(r14);

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>($r1, r2, r3, r4, r5, r6, r7, r8, $r9, $r11, $r13, r15, r16);

        return;
    }

    public void <init>(org.apache.commons.logging.Log, org.apache.http.protocol.HttpRequestExecutor, org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.ConnectionKeepAliveStrategy, org.apache.http.conn.routing.HttpRoutePlanner, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectStrategy, org.apache.http.client.AuthenticationHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.UserTokenHandler, org.apache.http.params.HttpParams)
    {
        org.apache.http.protocol.HttpRequestExecutor r2;
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.ConnectionKeepAliveStrategy r5;
        org.apache.http.conn.routing.HttpRoutePlanner r6;
        org.apache.http.client.HttpRequestRetryHandler r8;
        org.apache.http.conn.ClientConnectionManager r3;
        org.apache.http.client.AuthenticationHandler r11, r13;
        org.apache.http.protocol.HttpProcessor r7;
        org.apache.http.impl.client.AuthenticationStrategyAdaptor $r10, $r12;
        org.apache.http.client.UserTokenHandler r14;
        org.apache.http.client.RedirectStrategy r9;
        org.apache.http.ConnectionReuseStrategy r4;
        org.apache.http.params.HttpParams r15;
        org.apache.commons.logging.Log $r1, r16;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r16 := @parameter0: org.apache.commons.logging.Log;

        r2 := @parameter1: org.apache.http.protocol.HttpRequestExecutor;

        r3 := @parameter2: org.apache.http.conn.ClientConnectionManager;

        r4 := @parameter3: org.apache.http.ConnectionReuseStrategy;

        r5 := @parameter4: org.apache.http.conn.ConnectionKeepAliveStrategy;

        r6 := @parameter5: org.apache.http.conn.routing.HttpRoutePlanner;

        r7 := @parameter6: org.apache.http.protocol.HttpProcessor;

        r8 := @parameter7: org.apache.http.client.HttpRequestRetryHandler;

        r9 := @parameter8: org.apache.http.client.RedirectStrategy;

        r11 := @parameter9: org.apache.http.client.AuthenticationHandler;

        r13 := @parameter10: org.apache.http.client.AuthenticationHandler;

        r14 := @parameter11: org.apache.http.client.UserTokenHandler;

        r15 := @parameter12: org.apache.http.params.HttpParams;

        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/http/impl/client/DefaultRequestDirector;");

        $r10 = new org.apache.http.impl.client.AuthenticationStrategyAdaptor;

        specialinvoke $r10.<org.apache.http.impl.client.AuthenticationStrategyAdaptor: void <init>(org.apache.http.client.AuthenticationHandler)>(r11);

        $r12 = new org.apache.http.impl.client.AuthenticationStrategyAdaptor;

        specialinvoke $r12.<org.apache.http.impl.client.AuthenticationStrategyAdaptor: void <init>(org.apache.http.client.AuthenticationHandler)>(r13);

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>($r1, r2, r3, r4, r5, r6, r7, r8, r9, $r10, $r12, r14, r15);

        return;
    }

    public void <init>(org.apache.commons.logging.Log, org.apache.http.protocol.HttpRequestExecutor, org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.ConnectionKeepAliveStrategy, org.apache.http.conn.routing.HttpRoutePlanner, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectStrategy, org.apache.http.client.AuthenticationStrategy, org.apache.http.client.AuthenticationStrategy, org.apache.http.client.UserTokenHandler, org.apache.http.params.HttpParams)
    {
        org.apache.http.conn.ConnectionKeepAliveStrategy r5;
        org.apache.http.conn.routing.HttpRoutePlanner r6;
        boolean $z0, $z1, $z2;
        org.apache.http.conn.ClientConnectionManager r3;
        org.apache.http.client.AuthenticationHandler $r19, $r21;
        org.apache.http.impl.client.AuthenticationStrategyAdaptor $r18, $r20;
        org.apache.http.client.AuthenticationStrategy r10, r11;
        org.apache.http.auth.AuthState $r15, $r16;
        org.apache.http.protocol.HttpRequestExecutor r2;
        org.apache.http.impl.client.DefaultRequestDirector r0;
        int $i0;
        org.apache.http.client.HttpRequestRetryHandler r8;
        org.apache.http.impl.client.DefaultRedirectStrategyAdaptor $r22;
        org.apache.http.protocol.HttpProcessor r7;
        org.apache.http.client.UserTokenHandler r12;
        java.lang.IllegalArgumentException $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        org.apache.http.impl.client.HttpAuthenticator $r14;
        org.apache.http.client.RedirectStrategy r9;
        org.apache.http.ConnectionReuseStrategy r4;
        org.apache.http.params.HttpParams r13, $r17;
        org.apache.commons.logging.Log r1;
        org.apache.http.client.RedirectHandler $r23;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.commons.logging.Log;

        r2 := @parameter1: org.apache.http.protocol.HttpRequestExecutor;

        r3 := @parameter2: org.apache.http.conn.ClientConnectionManager;

        r4 := @parameter3: org.apache.http.ConnectionReuseStrategy;

        r5 := @parameter4: org.apache.http.conn.ConnectionKeepAliveStrategy;

        r6 := @parameter5: org.apache.http.conn.routing.HttpRoutePlanner;

        r7 := @parameter6: org.apache.http.protocol.HttpProcessor;

        r8 := @parameter7: org.apache.http.client.HttpRequestRetryHandler;

        r9 := @parameter8: org.apache.http.client.RedirectStrategy;

        r10 := @parameter9: org.apache.http.client.AuthenticationStrategy;

        r11 := @parameter10: org.apache.http.client.AuthenticationStrategy;

        r12 := @parameter11: org.apache.http.client.UserTokenHandler;

        r13 := @parameter12: org.apache.http.params.HttpParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label01;

        $r36 = new java.lang.IllegalArgumentException;

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Log may not be null.");

        throw $r36;

     label01:
        if r2 != null goto label02;

        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request executor may not be null.");

        throw $r35;

     label02:
        if r3 != null goto label03;

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Client connection manager may not be null.");

        throw $r34;

     label03:
        if r4 != null goto label04;

        $r33 = new java.lang.IllegalArgumentException;

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection reuse strategy may not be null.");

        throw $r33;

     label04:
        if r5 != null goto label05;

        $r32 = new java.lang.IllegalArgumentException;

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection keep alive strategy may not be null.");

        throw $r32;

     label05:
        if r6 != null goto label06;

        $r31 = new java.lang.IllegalArgumentException;

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Route planner may not be null.");

        throw $r31;

     label06:
        if r7 != null goto label07;

        $r30 = new java.lang.IllegalArgumentException;

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP protocol processor may not be null.");

        throw $r30;

     label07:
        if r8 != null goto label08;

        $r29 = new java.lang.IllegalArgumentException;

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request retry handler may not be null.");

        throw $r29;

     label08:
        if r9 != null goto label09;

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Redirect strategy may not be null.");

        throw $r28;

     label09:
        if r10 != null goto label10;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target authentication strategy may not be null.");

        throw $r27;

     label10:
        if r11 != null goto label11;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy authentication strategy may not be null.");

        throw $r26;

     label11:
        if r12 != null goto label12;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("User token handler may not be null.");

        throw $r25;

     label12:
        if r13 != null goto label13;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r24;

     label13:
        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log> = r1;

        $r14 = new org.apache.http.impl.client.HttpAuthenticator;

        specialinvoke $r14.<org.apache.http.impl.client.HttpAuthenticator: void <init>(org.apache.commons.logging.Log)>(r1);

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.HttpAuthenticator authenticator> = $r14;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec> = r2;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager> = r3;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.ConnectionReuseStrategy reuseStrategy> = r4;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy> = r5;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoutePlanner routePlanner> = r6;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor> = r7;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.HttpRequestRetryHandler retryHandler> = r8;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectStrategy redirectStrategy> = r9;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationStrategy targetAuthStrategy> = r10;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationStrategy proxyAuthStrategy> = r11;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.UserTokenHandler userTokenHandler> = r12;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params> = r13;

        $z0 = r9 instanceof org.apache.http.impl.client.DefaultRedirectStrategyAdaptor;

        if $z0 == 0 goto label14;

        $r22 = (org.apache.http.impl.client.DefaultRedirectStrategyAdaptor) r9;

        $r23 = virtualinvoke $r22.<org.apache.http.impl.client.DefaultRedirectStrategyAdaptor: org.apache.http.client.RedirectHandler getHandler()>();

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectHandler redirectHandler> = $r23;

        goto label15;

     label14:
        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectHandler redirectHandler> = null;

     label15:
        $z1 = r10 instanceof org.apache.http.impl.client.AuthenticationStrategyAdaptor;

        if $z1 == 0 goto label16;

        $r20 = (org.apache.http.impl.client.AuthenticationStrategyAdaptor) r10;

        $r21 = virtualinvoke $r20.<org.apache.http.impl.client.AuthenticationStrategyAdaptor: org.apache.http.client.AuthenticationHandler getHandler()>();

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler targetAuthHandler> = $r21;

        goto label17;

     label16:
        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler targetAuthHandler> = null;

     label17:
        $z2 = r11 instanceof org.apache.http.impl.client.AuthenticationStrategyAdaptor;

        if $z2 == 0 goto label18;

        $r18 = (org.apache.http.impl.client.AuthenticationStrategyAdaptor) r11;

        $r19 = virtualinvoke $r18.<org.apache.http.impl.client.AuthenticationStrategyAdaptor: org.apache.http.client.AuthenticationHandler getHandler()>();

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler> = $r19;

        goto label19;

     label18:
        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler> = null;

     label19:
        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = null;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: int execCount> = 0;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount> = 0;

        $r15 = new org.apache.http.auth.AuthState;

        specialinvoke $r15.<org.apache.http.auth.AuthState: void <init>()>();

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState> = $r15;

        $r16 = new org.apache.http.auth.AuthState;

        specialinvoke $r16.<org.apache.http.auth.AuthState: void <init>()>();

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState> = $r16;

        $r17 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $i0 = interfaceinvoke $r17.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.protocol.max-redirects", 100);

        r0.<org.apache.http.impl.client.DefaultRequestDirector: int maxRedirects> = $i0;

        return;
    }

    private org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest) throws org.apache.http.ProtocolException
    {
        org.apache.http.HttpEntityEnclosingRequest $r3;
        org.apache.http.impl.client.DefaultRequestDirector r4;
        org.apache.http.impl.client.RequestWrapper $r1;
        org.apache.http.impl.client.EntityEnclosingRequestWrapper $r2;
        org.apache.http.HttpRequest r0;
        boolean $z0;

        r4 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r0 := @parameter0: org.apache.http.HttpRequest;

        $z0 = r0 instanceof org.apache.http.HttpEntityEnclosingRequest;

        if $z0 == 0 goto label1;

        $r2 = new org.apache.http.impl.client.EntityEnclosingRequestWrapper;

        $r3 = (org.apache.http.HttpEntityEnclosingRequest) r0;

        specialinvoke $r2.<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void <init>(org.apache.http.HttpEntityEnclosingRequest)>($r3);

        return $r2;

     label1:
        $r1 = new org.apache.http.impl.client.RequestWrapper;

        specialinvoke $r1.<org.apache.http.impl.client.RequestWrapper: void <init>(org.apache.http.HttpRequest)>(r0);

        return $r1;
    }

    protected void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper, org.apache.http.conn.routing.HttpRoute) throws org.apache.http.ProtocolException
    {
        org.apache.http.ProtocolException $r6;
        java.net.URISyntaxException $r5;
        org.apache.http.conn.routing.HttpRoute r2;
        org.apache.http.impl.client.DefaultRequestDirector r13;
        org.apache.http.RequestLine $r9;
        java.net.URI $r1, r14;
        java.lang.String $r10, $r12;
        boolean $z0, $z1, $z2;
        org.apache.http.impl.client.RequestWrapper r0;
        java.lang.StringBuilder $r7, $r8, $r11;
        org.apache.http.HttpHost $r3, $r4;

        r13 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r0 := @parameter0: org.apache.http.impl.client.RequestWrapper;

        r2 := @parameter1: org.apache.http.conn.routing.HttpRoute;

     label1:
        $r1 = virtualinvoke r0.<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>();

        $r3 = virtualinvoke r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        if $r3 == null goto label3;

        $z1 = virtualinvoke r2.<org.apache.http.conn.routing.HttpRoute: boolean isTunnelled()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke $r1.<java.net.URI: boolean isAbsolute()>();

        if $z2 != 0 goto label2;

        $r4 = virtualinvoke r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        r14 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)>($r1, $r4, 1);

        goto label5;

     label2:
        r14 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI)>($r1);

        goto label5;

     label3:
        $z0 = virtualinvoke $r1.<java.net.URI: boolean isAbsolute()>();

        if $z0 == 0 goto label4;

        r14 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)>($r1, null, 1);

        goto label5;

     label4:
        r14 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI)>($r1);

     label5:
        virtualinvoke r0.<org.apache.http.impl.client.RequestWrapper: void setURI(java.net.URI)>(r14);

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

        $r6 = new org.apache.http.ProtocolException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid URI: ");

        $r9 = virtualinvoke r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>();

        $r10 = interfaceinvoke $r9.<org.apache.http.RequestLine: java.lang.String getUri()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r5);

        throw $r6;

     label8:
        return;

        catch java.net.URISyntaxException from label1 to label6 with label7;
    }

    public org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        byte $b2;
        org.apache.http.impl.auth.BasicScheme $r125;
        org.apache.http.HttpException $r97;
        org.apache.http.impl.client.RequestWrapper $r5, $r18;
        java.lang.StringBuilder $r60, $r61, $r64, $r65, $r66, $r68, $r128, $r129;
        long $l1, $l4;
        org.apache.http.impl.client.DefaultRequestDirector r1;
        org.apache.http.impl.client.TunnelRefusedException $r100;
        java.io.IOException $r96;
        org.apache.http.protocol.HttpProcessor $r28, $r32;
        org.apache.http.impl.client.RoutedRequest r109, $r115, $r123;
        org.apache.http.auth.AuthProtocolState $r37, $r38, $r117, $r118;
        org.apache.http.protocol.HttpContext r0;
        org.apache.http.params.HttpParams $r6, $r8, $r31, $r79, $r82;
        org.apache.http.HttpResponse $r30, r110;
        org.apache.http.conn.ConnectionKeepAliveStrategy $r56;
        org.apache.http.HttpEntity $r13, $r14, $r15, $r54;
        org.apache.http.conn.BasicManagedEntity $r130;
        int $i0, $i3, $i5, $i6, $i7, $i9, $i11, $i12;
        org.apache.http.auth.AuthScheme $r43, $r45, $r49, $r51;
        org.apache.http.client.UserTokenHandler $r40;
        org.apache.http.ConnectionReuseStrategy $r34;
        java.lang.Object $r9, $r20, $r41, r111;
        org.apache.http.impl.conn.ConnectionShutdownException $r98;
        org.apache.http.conn.ClientConnectionManager $r77;
        org.apache.http.HttpRequest r4;
        org.apache.http.protocol.HttpRequestExecutor $r29, $r33;
        java.io.InterruptedIOException $r124, $r131;
        org.apache.http.client.methods.AbortableHttpRequest $r76, $r88;
        java.lang.String $r23, $r62, $r70, $r71, $r92, $r94, $r103, r112;
        java.lang.RuntimeException $r95;
        org.apache.http.HttpHost $r10, $r11, $r24, $r25, $r89, $r91, $r93, r106, $r107, $r122, $r127;
        java.net.URI $r22, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12, $z13, $z14;
        org.apache.http.auth.AuthState $r2, $r3, $r36, $r42, $r44, $r47, $r48, $r50, $r53, $r73, $r116;
        org.apache.http.conn.ClientConnectionRequest $r78;
        org.apache.http.conn.routing.HttpRoute $r7, $r19, $r119, $r120;
        org.apache.http.conn.ManagedClientConnection $r12, $r17, $r21, $r27, $r35, $r39, $r55, $r75, $r81, $r83, $r85, $r87, $r113, $r121;
        java.util.concurrent.TimeUnit $r67, $r80, $r114;
        org.apache.http.auth.UsernamePasswordCredentials $r126;
        java.lang.InterruptedException $r104;
        org.apache.commons.logging.Log $r46, $r52, $r57, $r59, $r84, $r86, $r101, $r102;

        r1 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r106 := @parameter0: org.apache.http.HttpHost;

        r4 := @parameter1: org.apache.http.HttpRequest;

        r0 := @parameter2: org.apache.http.protocol.HttpContext;

        $r2 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        interfaceinvoke r0.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.auth.target-scope", $r2);

        $r3 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        interfaceinvoke r0.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.auth.proxy-scope", $r3);

        $r5 = specialinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest)>(r4);

        $r6 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        virtualinvoke $r5.<org.apache.http.impl.client.RequestWrapper: void setParams(org.apache.http.params.HttpParams)>($r6);

        $r7 = virtualinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r106, $r5, r0);

        $r8 = virtualinvoke $r5.<org.apache.http.impl.client.RequestWrapper: org.apache.http.params.HttpParams getParams()>();

        $r9 = interfaceinvoke $r8.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.virtual-host");

        $r10 = (org.apache.http.HttpHost) $r9;

        r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpHost virtualHost> = $r10;

        $r11 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpHost virtualHost>;

        if $r11 == null goto label03;

        $r89 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpHost virtualHost>;

        $i5 = virtualinvoke $r89.<org.apache.http.HttpHost: int getPort()>();

        $i9 = (int) -1;

        if $i5 != $i9 goto label03;

        if r106 == null goto label01;

        $r107 = r106;

        goto label02;

     label01:
        $r107 = virtualinvoke $r7.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

     label02:
        $i6 = virtualinvoke $r107.<org.apache.http.HttpHost: int getPort()>();

        $i11 = (int) -1;

        if $i6 == $i11 goto label03;

        $r122 = new org.apache.http.HttpHost;

        $r91 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpHost virtualHost>;

        $r92 = virtualinvoke $r91.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $r93 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpHost virtualHost>;

        $r94 = virtualinvoke $r93.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        specialinvoke $r122.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r92, $i6, $r94);

        r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpHost virtualHost> = $r122;

     label03:
        $r123 = new org.apache.http.impl.client.RoutedRequest;

        specialinvoke $r123.<org.apache.http.impl.client.RoutedRequest: void <init>(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>($r5, $r7);

        r109 = $r123;

        z11 = 0;

        z12 = 0;

     label04:
        r110 = null;

     label05:
        if z12 != 0 goto label34;

        $r18 = virtualinvoke r109.<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>();

        $r19 = virtualinvoke r109.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r20 = interfaceinvoke r0.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.user-token");

        r111 = $r20;

        $r21 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r21 != null goto label11;

        $r77 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager>;

        $r78 = interfaceinvoke $r77.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>($r19, $r20);

        $z6 = r4 instanceof org.apache.http.client.methods.AbortableHttpRequest;

        if $z6 == 0 goto label06;

        $r88 = (org.apache.http.client.methods.AbortableHttpRequest) r4;

        interfaceinvoke $r88.<org.apache.http.client.methods.AbortableHttpRequest: void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)>($r78);

     label06:
        $r79 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $l4 = staticinvoke <org.apache.http.client.params.HttpClientParams: long getConnectionManagerTimeout(org.apache.http.params.HttpParams)>($r79);

     label07:
        $r80 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r81 = interfaceinvoke $r78.<org.apache.http.conn.ClientConnectionRequest: org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit)>($l4, $r80);

        r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = $r81;

     label08:
        goto label10;

     label09:
        $r104 := @caughtexception;

        $r124 = new java.io.InterruptedIOException;

        specialinvoke $r124.<java.io.InterruptedIOException: void <init>()>();

        virtualinvoke $r124.<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>($r104);

        throw $r124;

     label10:
        $r82 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $z7 = staticinvoke <org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>($r82);

        if $z7 == 0 goto label11;

        $r83 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $z8 = interfaceinvoke $r83.<org.apache.http.conn.ManagedClientConnection: boolean isOpen()>();

        if $z8 == 0 goto label11;

        $r84 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r84.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Stale connection check");

        $r85 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $z9 = interfaceinvoke $r85.<org.apache.http.conn.ManagedClientConnection: boolean isStale()>();

        if $z9 == 0 goto label11;

        $r86 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r86.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Stale connection detected");

        $r87 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r87.<org.apache.http.conn.ManagedClientConnection: void close()>();

     label11:
        $z13 = r4 instanceof org.apache.http.client.methods.AbortableHttpRequest;

        if $z13 == 0 goto label12;

        $r76 = (org.apache.http.client.methods.AbortableHttpRequest) r4;

        $r75 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r76.<org.apache.http.client.methods.AbortableHttpRequest: void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger)>($r75);

     label12:
        specialinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>(r109, r0);

     label13:
        goto label16;

     label14:
        $r100 := @caughtexception;

        $r101 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z10 = interfaceinvoke $r101.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z10 == 0 goto label15;

        $r102 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r103 = virtualinvoke $r100.<org.apache.http.impl.client.TunnelRefusedException: java.lang.String getMessage()>();

        interfaceinvoke $r102.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r103);

     label15:
        r110 = virtualinvoke $r100.<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()>();

        goto label34;

     label16:
        $r22 = virtualinvoke $r18.<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>();

        $r23 = virtualinvoke $r22.<java.net.URI: java.lang.String getUserInfo()>();

        if $r23 == null goto label17;

        $r73 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        $r125 = new org.apache.http.impl.auth.BasicScheme;

        specialinvoke $r125.<org.apache.http.impl.auth.BasicScheme: void <init>()>();

        $r126 = new org.apache.http.auth.UsernamePasswordCredentials;

        specialinvoke $r126.<org.apache.http.auth.UsernamePasswordCredentials: void <init>(java.lang.String)>($r23);

        virtualinvoke $r73.<org.apache.http.auth.AuthState: void update(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials)>($r125, $r126);

     label17:
        $r24 = virtualinvoke $r19.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        $r25 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpHost virtualHost>;

        if $r25 == null goto label18;

        r106 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpHost virtualHost>;

        goto label19;

     label18:
        $r26 = virtualinvoke $r18.<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>();

        $z1 = virtualinvoke $r26.<java.net.URI: boolean isAbsolute()>();

        if $z1 == 0 goto label19;

        $r127 = new org.apache.http.HttpHost;

        $r70 = virtualinvoke $r26.<java.net.URI: java.lang.String getHost()>();

        $i3 = virtualinvoke $r26.<java.net.URI: int getPort()>();

        $r71 = virtualinvoke $r26.<java.net.URI: java.lang.String getScheme()>();

        specialinvoke $r127.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r70, $i3, $r71);

        r106 = $r127;

     label19:
        if r106 != null goto label20;

        r106 = virtualinvoke $r19.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

     label20:
        virtualinvoke $r18.<org.apache.http.impl.client.RequestWrapper: void resetHeaders()>();

        virtualinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>($r18, $r19);

        interfaceinvoke r0.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.target_host", r106);

        interfaceinvoke r0.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.proxy_host", $r24);

        $r27 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke r0.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", $r27);

        $r29 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r28 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor>;

        virtualinvoke $r29.<org.apache.http.protocol.HttpRequestExecutor: void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>($r18, $r28, r0);

        $r30 = specialinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>(r109, r0);

        r110 = $r30;

        if $r30 != null goto label21;

        goto label05;

     label21:
        $r31 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r30.<org.apache.http.HttpResponse: void setParams(org.apache.http.params.HttpParams)>($r31);

        $r33 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r32 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor>;

        virtualinvoke $r33.<org.apache.http.protocol.HttpRequestExecutor: void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>($r30, $r32, r0);

        $r34 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.ConnectionReuseStrategy reuseStrategy>;

        $z2 = interfaceinvoke $r34.<org.apache.http.ConnectionReuseStrategy: boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>($r30, r0);

        z11 = $z2;

        if $z2 == 0 goto label25;

        $r56 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy>;

        $l1 = interfaceinvoke $r56.<org.apache.http.conn.ConnectionKeepAliveStrategy: long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>($r30, r0);

        $r57 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z5 = interfaceinvoke $r57.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z5 == 0 goto label24;

        $b2 = $l1 cmp 0L;

        $i12 = (int) $b2;

        if $i12 <= 0 goto label22;

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r67 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        r112 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label23;

     label22:
        r112 = "indefinitely";

     label23:
        $r59 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r129 = new java.lang.StringBuilder;

        specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection can be kept alive ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r112);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r59.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r62);

     label24:
        $r113 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r114 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        interfaceinvoke $r113.<org.apache.http.conn.ManagedClientConnection: void setIdleDuration(long,java.util.concurrent.TimeUnit)>($l1, $r114);

     label25:
        $r115 = virtualinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r109, $r30, r0);

        if $r115 != null goto label26;

        z12 = 1;

        goto label31;

     label26:
        if $z2 == 0 goto label27;

        $r54 = interfaceinvoke $r30.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        staticinvoke <org.apache.http.util.EntityUtils: void consume(org.apache.http.HttpEntity)>($r54);

        $r55 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r55.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

        goto label29;

     label27:
        $r35 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r35.<org.apache.http.conn.ManagedClientConnection: void close()>();

        $r36 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r37 = virtualinvoke $r36.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthProtocolState getState()>();

        $r38 = <org.apache.http.auth.AuthProtocolState: org.apache.http.auth.AuthProtocolState CHALLENGED>;

        $i0 = virtualinvoke $r37.<org.apache.http.auth.AuthProtocolState: int compareTo(java.lang.Enum)>($r38);

        if $i0 <= 0 goto label28;

        $r48 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r49 = virtualinvoke $r48.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        if $r49 == null goto label28;

        $r50 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r51 = virtualinvoke $r50.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        $z4 = interfaceinvoke $r51.<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>();

        if $z4 == 0 goto label28;

        $r52 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r52.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Resetting proxy auth state");

        $r53 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        virtualinvoke $r53.<org.apache.http.auth.AuthState: void reset()>();

     label28:
        $r116 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        $r117 = virtualinvoke $r116.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthProtocolState getState()>();

        $r118 = <org.apache.http.auth.AuthProtocolState: org.apache.http.auth.AuthProtocolState CHALLENGED>;

        $i7 = virtualinvoke $r117.<org.apache.http.auth.AuthProtocolState: int compareTo(java.lang.Enum)>($r118);

        if $i7 <= 0 goto label29;

        $r42 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        $r43 = virtualinvoke $r42.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        if $r43 == null goto label29;

        $r44 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        $r45 = virtualinvoke $r44.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        $z3 = interfaceinvoke $r45.<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>();

        if $z3 == 0 goto label29;

        $r46 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r46.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Resetting target auth state");

        $r47 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        virtualinvoke $r47.<org.apache.http.auth.AuthState: void reset()>();

     label29:
        $r119 = virtualinvoke $r115.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r120 = virtualinvoke r109.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $z14 = virtualinvoke $r119.<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>($r120);

        if $z14 != 0 goto label30;

        virtualinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: void releaseConnection()>();

     label30:
        r109 = $r115;

     label31:
        $r121 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r121 == null goto label33;

        if $r20 != null goto label32;

        $r40 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.UserTokenHandler userTokenHandler>;

        $r41 = interfaceinvoke $r40.<org.apache.http.client.UserTokenHandler: java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)>(r0);

        r111 = $r41;

        interfaceinvoke r0.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.user-token", $r41);

     label32:
        if r111 == null goto label33;

        $r39 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r39.<org.apache.http.conn.ManagedClientConnection: void setState(java.lang.Object)>(r111);

     label33:
        goto label05;

     label34:
        if r110 == null goto label35;

        $r13 = interfaceinvoke r110.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r13 == null goto label35;

        $r14 = interfaceinvoke r110.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $z0 = interfaceinvoke $r14.<org.apache.http.HttpEntity: boolean isStreaming()>();

        if $z0 != 0 goto label37;

     label35:
        if z11 == 0 goto label36;

        $r12 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r12.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

     label36:
        virtualinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: void releaseConnection()>();

        goto label38;

     label37:
        $r15 = interfaceinvoke r110.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r130 = new org.apache.http.conn.BasicManagedEntity;

        $r17 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        specialinvoke $r130.<org.apache.http.conn.BasicManagedEntity: void <init>(org.apache.http.HttpEntity,org.apache.http.conn.ManagedClientConnection,boolean)>($r15, $r17, z11);

        interfaceinvoke r110.<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>($r130);

     label38:
        return r110;

     label39:
        $r98 := @caughtexception;

        $r131 = new java.io.InterruptedIOException;

        specialinvoke $r131.<java.io.InterruptedIOException: void <init>(java.lang.String)>("Connection has been shut down");

        virtualinvoke $r131.<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>($r98);

        throw $r131;

     label40:
        $r97 := @caughtexception;

        specialinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: void abortConnection()>();

        throw $r97;

     label41:
        $r96 := @caughtexception;

        specialinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: void abortConnection()>();

        throw $r96;

     label42:
        $r95 := @caughtexception;

        specialinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: void abortConnection()>();

        throw $r95;

        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch org.apache.http.impl.client.TunnelRefusedException from label12 to label13 with label14;
        catch org.apache.http.impl.conn.ConnectionShutdownException from label04 to label38 with label39;
        catch org.apache.http.HttpException from label04 to label38 with label40;
        catch java.io.IOException from label04 to label38 with label41;
        catch java.lang.RuntimeException from label04 to label38 with label42;
    }

    private void tryConnect(org.apache.http.impl.client.RoutedRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3;
        org.apache.http.impl.client.RequestWrapper $r2;
        java.lang.StringBuilder $r13, $r15, $r18, $r19, $r21;
        org.apache.http.conn.routing.HttpRoute $r1;
        org.apache.http.impl.client.DefaultRequestDirector r4;
        int $i0, i1;
        java.lang.String $r17, $r20, $r22, $r26;
        org.apache.http.client.HttpRequestRetryHandler $r11;
        java.io.IOException $r10, $r27;
        org.apache.http.impl.client.RoutedRequest r0;
        org.apache.http.conn.ManagedClientConnection $r5, $r7, $r9, $r28;
        org.apache.http.protocol.HttpContext r3;
        org.apache.http.params.HttpParams $r6, $r8;
        org.apache.commons.logging.Log $r12, $r14, $r23, $r24, $r25;
        java.lang.Class $r16;

        r4 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r0 := @parameter0: org.apache.http.impl.client.RoutedRequest;

        r3 := @parameter1: org.apache.http.protocol.HttpContext;

        $r1 = virtualinvoke r0.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r2 = virtualinvoke r0.<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>();

        i1 = 0;

     label01:
        interfaceinvoke r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.request", $r2);

        i1 = i1 + 1;

     label02:
        $r5 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $z0 = interfaceinvoke $r5.<org.apache.http.conn.ManagedClientConnection: boolean isOpen()>();

        if $z0 != 0 goto label03;

        $r9 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r8 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r9.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>($r1, r3, $r8);

        goto label04;

     label03:
        $r7 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r6 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>($r6);

        interfaceinvoke $r7.<org.apache.http.conn.ManagedClientConnection: void setSocketTimeout(int)>($i0);

     label04:
        virtualinvoke r4.<org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>($r1, r3);

     label05:
        goto label14;

     label06:
        $r27 := @caughtexception;

     label07:
        $r28 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r28.<org.apache.http.conn.ManagedClientConnection: void close()>();

     label08:
        goto label10;

     label09:
        $r10 := @caughtexception;

     label10:
        $r11 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.HttpRequestRetryHandler retryHandler>;

        $z1 = interfaceinvoke $r11.<org.apache.http.client.HttpRequestRetryHandler: boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext)>($r27, i1, r3);

        if $z1 == 0 goto label12;

        $r12 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r12.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z2 == 0 goto label13;

        $r14 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I/O exception (");

        $r16 = virtualinvoke $r27.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") caught when connecting to the target host: ");

        $r20 = virtualinvoke $r27.<java.io.IOException: java.lang.String getMessage()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r22);

        $r23 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r23.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label11;

        $r25 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r26 = virtualinvoke $r27.<java.io.IOException: java.lang.String getMessage()>();

        interfaceinvoke $r25.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r26, $r27);

     label11:
        $r24 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r24.<org.apache.commons.logging.Log: void info(java.lang.Object)>("Retrying connect");

        goto label13;

     label12:
        throw $r27;

     label13:
        goto label01;

     label14:
        return;

        catch java.io.IOException from label02 to label05 with label06;
        catch java.io.IOException from label07 to label08 with label09;
    }

    private org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.http.impl.client.RequestWrapper $r1;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r29, $r31, $r34, $r35, $r37;
        org.apache.http.conn.routing.HttpRoute $r2;
        org.apache.http.protocol.HttpRequestExecutor $r8;
        org.apache.http.impl.client.DefaultRequestDirector r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r14, $r28, $r33, $r36, $r38;
        org.apache.http.client.HttpRequestRetryHandler $r23;
        java.io.IOException $r22, $r39, r43;
        org.apache.http.impl.client.RoutedRequest r0;
        org.apache.http.conn.ManagedClientConnection $r4, $r7, $r18, $r41;
        org.apache.http.protocol.HttpContext r6;
        org.apache.http.params.HttpParams $r17;
        org.apache.http.client.NonRepeatableRequestException $r20, $r21;
        org.apache.http.HttpResponse r42;
        org.apache.commons.logging.Log $r5, $r10, $r15, $r16, $r19, $r24, $r25, $r26, $r27, $r30, $r40;
        java.lang.Class $r32;

        r3 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r0 := @parameter0: org.apache.http.impl.client.RoutedRequest;

        r6 := @parameter1: org.apache.http.protocol.HttpContext;

        $r1 = virtualinvoke r0.<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>();

        $r2 = virtualinvoke r0.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        r42 = null;

        r43 = null;

     label01:
        $i0 = r3.<org.apache.http.impl.client.DefaultRequestDirector: int execCount>;

        $i1 = $i0 + 1;

        r3.<org.apache.http.impl.client.DefaultRequestDirector: int execCount> = $i1;

        virtualinvoke $r1.<org.apache.http.impl.client.RequestWrapper: void incrementExecCount()>();

        $z0 = virtualinvoke $r1.<org.apache.http.impl.client.RequestWrapper: boolean isRepeatable()>();

        if $z0 != 0 goto label03;

        $r19 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Cannot retry non-repeatable request");

        if r43 == null goto label02;

        $r21 = new org.apache.http.client.NonRepeatableRequestException;

        specialinvoke $r21.<org.apache.http.client.NonRepeatableRequestException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot retry request with a non-repeatable request entity.  The cause lists the reason the original request failed.", r43);

        throw $r21;

     label02:
        $r20 = new org.apache.http.client.NonRepeatableRequestException;

        specialinvoke $r20.<org.apache.http.client.NonRepeatableRequestException: void <init>(java.lang.String)>("Cannot retry request with a non-repeatable request entity.");

        throw $r20;

     label03:
        $r4 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $z1 = interfaceinvoke $r4.<org.apache.http.conn.ManagedClientConnection: boolean isOpen()>();

        if $z1 != 0 goto label06;

        $z3 = virtualinvoke $r2.<org.apache.http.conn.routing.HttpRoute: boolean isTunnelled()>();

        if $z3 != 0 goto label04;

        $r16 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Reopening the direct connection.");

        $r18 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r17 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r18.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>($r2, r6, $r17);

        goto label06;

     label04:
        $r15 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Proxied connection. Need to start over.");

     label05:
        goto label18;

     label06:
        $r5 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label07;

        $r10 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt ");

        $i2 = r3.<org.apache.http.impl.client.DefaultRequestDirector: int execCount>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to execute request");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r14);

     label07:
        $r8 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r7 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        r42 = virtualinvoke $r8.<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>($r1, $r7, r6);

     label08:
        goto label18;

     label09:
        $r39 := @caughtexception;

        $r40 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Closing the connection.");

     label10:
        $r41 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r41.<org.apache.http.conn.ManagedClientConnection: void close()>();

     label11:
        goto label13;

     label12:
        $r22 := @caughtexception;

     label13:
        $r23 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.HttpRequestRetryHandler retryHandler>;

        $i3 = virtualinvoke $r1.<org.apache.http.impl.client.RequestWrapper: int getExecCount()>();

        $z4 = interfaceinvoke $r23.<org.apache.http.client.HttpRequestRetryHandler: boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext)>($r39, $i3, r6);

        if $z4 == 0 goto label16;

        $r24 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z5 = interfaceinvoke $r24.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z5 == 0 goto label14;

        $r30 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I/O exception (");

        $r32 = virtualinvoke $r39.<java.lang.Object: java.lang.Class getClass()>();

        $r33 = virtualinvoke $r32.<java.lang.Class: java.lang.String getName()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") caught when processing request: ");

        $r36 = virtualinvoke $r39.<java.io.IOException: java.lang.String getMessage()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r38);

     label14:
        $r25 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z6 = interfaceinvoke $r25.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z6 == 0 goto label15;

        $r27 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r28 = virtualinvoke $r39.<java.io.IOException: java.lang.String getMessage()>();

        interfaceinvoke $r27.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r28, $r39);

     label15:
        $r26 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r26.<org.apache.commons.logging.Log: void info(java.lang.Object)>("Retrying request");

        r43 = $r39;

        goto label17;

     label16:
        throw $r39;

     label17:
        goto label01;

     label18:
        return r42;

        catch java.io.IOException from label03 to label05 with label09;
        catch java.io.IOException from label06 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label12;
    }

    protected void releaseConnection()
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        java.io.IOException $r2;
        org.apache.commons.logging.Log $r3;
        org.apache.http.conn.ManagedClientConnection $r1;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

     label1:
        $r1 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r1.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("IOException releasing connection", $r2);

     label4:
        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = null;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException
    {
        java.lang.IllegalStateException $r5;
        org.apache.http.conn.routing.HttpRoute $r4;
        org.apache.http.HttpRequest r1;
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.params.HttpParams $r6;
        org.apache.http.conn.routing.HttpRoutePlanner $r3;
        java.lang.Object $r7;
        org.apache.http.HttpHost r8;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r8 := @parameter0: org.apache.http.HttpHost;

        r1 := @parameter1: org.apache.http.HttpRequest;

        r2 := @parameter2: org.apache.http.protocol.HttpContext;

        if r8 != null goto label1;

        $r6 = interfaceinvoke r1.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        $r7 = interfaceinvoke $r6.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.default-host");

        r8 = (org.apache.http.HttpHost) $r7;

     label1:
        if r8 != null goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Target host must not be null, or set in parameters.");

        throw $r5;

     label2:
        $r3 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoutePlanner routePlanner>;

        $r4 = interfaceinvoke $r3.<org.apache.http.conn.routing.HttpRoutePlanner: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r8, r1, r2);

        return $r4;
    }

    protected void establishRoute(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        java.lang.IllegalStateException $r24;
        boolean $z0, $z1;
        org.apache.http.HttpException $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28;
        org.apache.http.conn.routing.HttpRoute $r3, r4;
        org.apache.http.impl.client.DefaultRequestDirector r1;
        int $i0, $i1, i2;
        java.lang.String $r23, $r29;
        org.apache.http.conn.ManagedClientConnection $r2, $r7, $r9, $r14, $r16;
        org.apache.http.conn.routing.BasicRouteDirector $r0;
        org.apache.http.protocol.HttpContext r5;
        org.apache.http.params.HttpParams $r6, $r11, $r13, $r15;
        org.apache.commons.logging.Log $r8, $r12;
        org.apache.http.HttpHost $r10;

        r1 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r4 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r5 := @parameter1: org.apache.http.protocol.HttpContext;

        $r0 = new org.apache.http.conn.routing.BasicRouteDirector;

        specialinvoke $r0.<org.apache.http.conn.routing.BasicRouteDirector: void <init>()>();

     label1:
        $r2 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r3 = interfaceinvoke $r2.<org.apache.http.conn.ManagedClientConnection: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $i0 = interfaceinvoke $r0.<org.apache.http.conn.routing.HttpRouteDirector: int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>(r4, $r3);

        tableswitch($i0)
        {
            case -1: goto label6;
            case 0: goto label7;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label8;
        };

     label2:
        $r16 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r15 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r16.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r4, r5, $r15);

        goto label9;

     label3:
        $z1 = virtualinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>(r4, r5);

        $r12 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Tunnel to target created.");

        $r14 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r13 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r14.<org.apache.http.conn.ManagedClientConnection: void tunnelTarget(boolean,org.apache.http.params.HttpParams)>($z1, $r13);

        goto label9;

     label4:
        $i1 = virtualinvoke $r3.<org.apache.http.conn.routing.HttpRoute: int getHopCount()>();

        i2 = $i1 - 1;

        $z0 = virtualinvoke r1.<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext)>(r4, i2, r5);

        $r8 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Tunnel to proxy created.");

        $r9 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r10 = virtualinvoke r4.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)>(i2);

        $r11 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r9.<org.apache.http.conn.ManagedClientConnection: void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>($r10, $z0, $r11);

        goto label9;

     label5:
        $r7 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r6 = r1.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r7.<org.apache.http.conn.ManagedClientConnection: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r5, $r6);

        goto label9;

     label6:
        $r17 = new org.apache.http.HttpException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to establish route: planned = ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; current = ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.http.HttpException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label7:
        goto label9;

     label8:
        $r24 = new java.lang.IllegalStateException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown step indicator ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from RouteDirector.");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29);

        throw $r24;

     label9:
        if $i0 > 0 goto label1;

        return;
    }

    protected boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.StatusLine $r17, $r22, $r29, $r43;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.http.HttpEntity $r24, $r39;
        org.apache.http.HttpRequest $r6;
        org.apache.http.HttpException $r40;
        org.apache.http.client.AuthenticationStrategy $r20, $r34;
        java.lang.StringBuilder $r27, $r28, $r30, $r41, $r42, $r44;
        org.apache.http.auth.AuthState $r19, $r33;
        org.apache.http.entity.BufferedHttpEntity $r32;
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.protocol.HttpRequestExecutor $r10, $r12, $r16;
        org.apache.http.impl.client.DefaultRequestDirector r3;
        int $i0, $i1;
        java.lang.String $r31, $r45;
        org.apache.http.impl.client.TunnelRefusedException $r26;
        org.apache.http.protocol.HttpProcessor $r9, $r15;
        org.apache.http.conn.ManagedClientConnection $r4, $r8, $r11, $r23, $r25, $r37, $r47;
        org.apache.http.impl.client.HttpAuthenticator $r21, $r35;
        org.apache.http.protocol.HttpContext r5;
        org.apache.http.ConnectionReuseStrategy $r36;
        org.apache.http.params.HttpParams $r7, $r14, $r18, $r46;
        org.apache.http.HttpResponse $r13;
        org.apache.commons.logging.Log $r38;
        org.apache.http.HttpHost $r1, $r2;

        r3 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r0 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r5 := @parameter1: org.apache.http.protocol.HttpContext;

        $r1 = virtualinvoke r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        $r2 = virtualinvoke r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

     label1:
        $r4 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $z0 = interfaceinvoke $r4.<org.apache.http.conn.ManagedClientConnection: boolean isOpen()>();

        if $z0 != 0 goto label2;

        $r47 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r46 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r47.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r0, r5, $r46);

     label2:
        $r6 = virtualinvoke r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>(r0, r5);

        $r7 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r6.<org.apache.http.HttpRequest: void setParams(org.apache.http.params.HttpParams)>($r7);

        interfaceinvoke r5.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.target_host", $r2);

        interfaceinvoke r5.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.proxy_host", $r1);

        $r8 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke r5.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", $r8);

        interfaceinvoke r5.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.request", $r6);

        $r10 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r9 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor>;

        virtualinvoke $r10.<org.apache.http.protocol.HttpRequestExecutor: void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>($r6, $r9, r5);

        $r12 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r11 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r13 = virtualinvoke $r12.<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>($r6, $r11, r5);

        $r14 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r13.<org.apache.http.HttpResponse: void setParams(org.apache.http.params.HttpParams)>($r14);

        $r16 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r15 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor>;

        virtualinvoke $r16.<org.apache.http.protocol.HttpRequestExecutor: void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>($r13, $r15, r5);

        $r17 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r17.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 >= 200 goto label3;

        $r40 = new org.apache.http.HttpException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected response to CONNECT request: ");

        $r43 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<org.apache.http.HttpException: void <init>(java.lang.String)>($r45);

        throw $r40;

     label3:
        $r18 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $z1 = staticinvoke <org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)>($r18);

        if $z1 == 0 goto label5;

        $r21 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.HttpAuthenticator authenticator>;

        $r20 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationStrategy proxyAuthStrategy>;

        $r19 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $z2 = virtualinvoke $r21.<org.apache.http.impl.client.HttpAuthenticator: boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)>($r1, $r13, $r20, $r19, r5);

        if $z2 == 0 goto label6;

        $r35 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.HttpAuthenticator authenticator>;

        $r34 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationStrategy proxyAuthStrategy>;

        $r33 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $z3 = virtualinvoke $r35.<org.apache.http.impl.client.HttpAuthenticator: boolean authenticate(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)>($r1, $r13, $r34, $r33, r5);

        if $z3 == 0 goto label6;

        $r36 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.ConnectionReuseStrategy reuseStrategy>;

        $z4 = interfaceinvoke $r36.<org.apache.http.ConnectionReuseStrategy: boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>($r13, r5);

        if $z4 == 0 goto label4;

        $r38 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Connection kept alive");

        $r39 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        staticinvoke <org.apache.http.util.EntityUtils: void consume(org.apache.http.HttpEntity)>($r39);

        goto label5;

     label4:
        $r37 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r37.<org.apache.http.conn.ManagedClientConnection: void close()>();

     label5:
        goto label1;

     label6:
        $r22 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r22.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i1 <= 299 goto label8;

        $r24 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r24 == null goto label7;

        $r32 = new org.apache.http.entity.BufferedHttpEntity;

        specialinvoke $r32.<org.apache.http.entity.BufferedHttpEntity: void <init>(org.apache.http.HttpEntity)>($r24);

        interfaceinvoke $r13.<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>($r32);

     label7:
        $r25 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r25.<org.apache.http.conn.ManagedClientConnection: void close()>();

        $r26 = new org.apache.http.impl.client.TunnelRefusedException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CONNECT refused by proxy: ");

        $r29 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<org.apache.http.impl.client.TunnelRefusedException: void <init>(java.lang.String,org.apache.http.HttpResponse)>($r31, $r13);

        throw $r26;

     label8:
        $r23 = r3.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r23.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

        return 0;
    }

    protected boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute, int, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.HttpException $r0;
        org.apache.http.impl.client.DefaultRequestDirector r1;
        org.apache.http.protocol.HttpContext r3;
        int i0;
        org.apache.http.conn.routing.HttpRoute r2;

        r1 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r2 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        i0 := @parameter1: int;

        r3 := @parameter2: org.apache.http.protocol.HttpContext;

        $r0 = new org.apache.http.HttpException;

        specialinvoke $r0.<org.apache.http.HttpException: void <init>(java.lang.String)>("Proxy chains are not supported.");

        throw $r0;
    }

    protected org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.message.BasicHttpRequest $r9;
        org.apache.http.impl.client.DefaultRequestDirector r6;
        int $i0, $i1, $i2, i3;
        java.lang.String $r2, $r4, $r5, $r12;
        org.apache.http.conn.scheme.SchemeRegistry $r11;
        org.apache.http.conn.ClientConnectionManager $r10;
        org.apache.http.ProtocolVersion $r8;
        org.apache.http.conn.scheme.Scheme $r13;
        org.apache.http.protocol.HttpContext r14;
        org.apache.http.params.HttpParams $r7;
        java.lang.StringBuilder $r3;
        org.apache.http.HttpHost $r1;

        r6 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r0 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r14 := @parameter1: org.apache.http.protocol.HttpContext;

        $r1 = virtualinvoke r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        $r2 = virtualinvoke $r1.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i0 = virtualinvoke $r1.<org.apache.http.HttpHost: int getPort()>();

        i3 = $i0;

        if $i0 >= 0 goto label1;

        $r10 = r6.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager>;

        $r11 = interfaceinvoke $r10.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        $r12 = virtualinvoke $r1.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $r13 = virtualinvoke $r11.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>($r12);

        i3 = virtualinvoke $r13.<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>();

     label1:
        $r3 = new java.lang.StringBuilder;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = $i1 + 6;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r6.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $r8 = staticinvoke <org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>($r7);

        $r9 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke $r9.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>("CONNECT", $r5, $r8);

        return $r9;
    }

    protected org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.conn.ClientConnectionManager $r53;
        org.apache.http.HttpRequest $r10;
        org.apache.http.client.AuthenticationStrategy $r41, $r45, $r48, $r51;
        org.apache.http.impl.client.RequestWrapper $r2, $r61;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r20, $r29, $r30, $r31, $r34, $r35, $r36, $r37;
        org.apache.http.client.RedirectException $r33;
        org.apache.http.client.methods.HttpUriRequest $r9;
        org.apache.http.impl.client.DefaultRequestDirector r4;
        java.lang.String $r21, $r32, $r38, $r57, $r58;
        org.apache.http.impl.client.RoutedRequest r0, $r63;
        org.apache.http.client.RedirectStrategy $r7, $r8;
        org.apache.http.protocol.HttpContext r6;
        org.apache.http.params.HttpParams $r3;
        org.apache.http.HttpResponse r5;
        org.apache.http.HttpHost $r13, $r14, $r43, $r56, r59, r60;
        org.apache.http.ProtocolException $r28;
        java.net.URI $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.http.Header[] $r11;
        org.apache.http.conn.scheme.Scheme $r55;
        org.apache.http.auth.AuthState $r23, $r24, $r27, $r40, $r44, $r47, $r50;
        org.apache.http.conn.routing.HttpRoute $r1, $r62;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.http.auth.AuthScheme $r25;
        org.apache.http.conn.scheme.SchemeRegistry $r54;
        org.apache.http.impl.client.HttpAuthenticator $r42, $r46, $r49, $r52;
        org.apache.commons.logging.Log $r16, $r22, $r26, $r64;
        java.lang.Object $r39;

        r4 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r0 := @parameter0: org.apache.http.impl.client.RoutedRequest;

        r5 := @parameter1: org.apache.http.HttpResponse;

        r6 := @parameter2: org.apache.http.protocol.HttpContext;

        $r1 = virtualinvoke r0.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r2 = virtualinvoke r0.<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>();

        $r3 = virtualinvoke $r2.<org.apache.http.impl.client.RequestWrapper: org.apache.http.params.HttpParams getParams()>();

        $z0 = staticinvoke <org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)>($r3);

        if $z0 == 0 goto label05;

        $r39 = interfaceinvoke r6.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.target_host");

        r59 = (org.apache.http.HttpHost) $r39;

        if r59 != null goto label01;

        r59 = virtualinvoke $r1.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

     label01:
        $i5 = virtualinvoke r59.<org.apache.http.HttpHost: int getPort()>();

        if $i5 >= 0 goto label02;

        $r53 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager>;

        $r54 = interfaceinvoke $r53.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        $r55 = virtualinvoke $r54.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)>(r59);

        $r56 = new org.apache.http.HttpHost;

        $r57 = virtualinvoke r59.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i6 = virtualinvoke $r55.<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>();

        $r58 = virtualinvoke r59.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        specialinvoke $r56.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r57, $i6, $r58);

        r59 = $r56;

     label02:
        $r42 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.HttpAuthenticator authenticator>;

        $r41 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationStrategy targetAuthStrategy>;

        $r40 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        $z4 = virtualinvoke $r42.<org.apache.http.impl.client.HttpAuthenticator: boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)>(r59, r5, $r41, $r40, r6);

        if $z4 == 0 goto label03;

        $r52 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.HttpAuthenticator authenticator>;

        $r51 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationStrategy targetAuthStrategy>;

        $r50 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        $z7 = virtualinvoke $r52.<org.apache.http.impl.client.HttpAuthenticator: boolean authenticate(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)>(r59, r5, $r51, $r50, r6);

        if $z7 == 0 goto label03;

        return r0;

     label03:
        $r43 = virtualinvoke $r1.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        r60 = $r43;

        $r46 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.HttpAuthenticator authenticator>;

        $r45 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationStrategy proxyAuthStrategy>;

        $r44 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $z5 = virtualinvoke $r46.<org.apache.http.impl.client.HttpAuthenticator: boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)>($r43, r5, $r45, $r44, r6);

        if $z5 == 0 goto label05;

        if $r43 != null goto label04;

        r60 = virtualinvoke $r1.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

     label04:
        $r49 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.HttpAuthenticator authenticator>;

        $r48 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationStrategy proxyAuthStrategy>;

        $r47 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $z6 = virtualinvoke $r49.<org.apache.http.impl.client.HttpAuthenticator: boolean authenticate(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)>(r60, r5, $r48, $r47, r6);

        if $z6 == 0 goto label05;

        return r0;

     label05:
        $z8 = staticinvoke <org.apache.http.client.params.HttpClientParams: boolean isRedirecting(org.apache.http.params.HttpParams)>($r3);

        if $z8 == 0 goto label10;

        $r7 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectStrategy redirectStrategy>;

        $z1 = interfaceinvoke $r7.<org.apache.http.client.RedirectStrategy: boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>($r2, r5, r6);

        if $z1 == 0 goto label10;

        $i1 = r4.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount>;

        $i0 = r4.<org.apache.http.impl.client.DefaultRequestDirector: int maxRedirects>;

        if $i1 < $i0 goto label06;

        $r33 = new org.apache.http.client.RedirectException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum redirects (");

        $i4 = r4.<org.apache.http.impl.client.DefaultRequestDirector: int maxRedirects>;

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") exceeded");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<org.apache.http.client.RedirectException: void <init>(java.lang.String)>($r38);

        throw $r33;

     label06:
        $i2 = r4.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount>;

        $i3 = $i2 + 1;

        r4.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount> = $i3;

        r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpHost virtualHost> = null;

        $r8 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectStrategy redirectStrategy>;

        $r9 = interfaceinvoke $r8.<org.apache.http.client.RedirectStrategy: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>($r2, r5, r6);

        $r10 = virtualinvoke $r2.<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>();

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpRequest: org.apache.http.Header[] getAllHeaders()>();

        interfaceinvoke $r9.<org.apache.http.client.methods.HttpUriRequest: void setHeaders(org.apache.http.Header[])>($r11);

        $r12 = interfaceinvoke $r9.<org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>();

        $r13 = staticinvoke <org.apache.http.client.utils.URIUtils: org.apache.http.HttpHost extractHost(java.net.URI)>($r12);

        if $r13 != null goto label07;

        $r28 = new org.apache.http.ProtocolException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Redirect URI does not specify a valid host name: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r32);

        throw $r28;

     label07:
        $r14 = virtualinvoke $r1.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        $z2 = virtualinvoke $r14.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r13);

        if $z2 != 0 goto label08;

        $r22 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Resetting target auth state");

        $r23 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        virtualinvoke $r23.<org.apache.http.auth.AuthState: void reset()>();

        $r24 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r25 = virtualinvoke $r24.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        if $r25 == null goto label08;

        $z3 = interfaceinvoke $r25.<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>();

        if $z3 == 0 goto label08;

        $r26 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Resetting proxy auth state");

        $r27 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        virtualinvoke $r27.<org.apache.http.auth.AuthState: void reset()>();

     label08:
        $r61 = specialinvoke r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest)>($r9);

        virtualinvoke $r61.<org.apache.http.impl.client.RequestWrapper: void setParams(org.apache.http.params.HttpParams)>($r3);

        $r62 = virtualinvoke r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>($r13, $r61, r6);

        $r63 = new org.apache.http.impl.client.RoutedRequest;

        specialinvoke $r63.<org.apache.http.impl.client.RoutedRequest: void <init>(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>($r61, $r62);

        $r64 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z9 = interfaceinvoke $r64.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z9 == 0 goto label09;

        $r16 = r4.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Redirecting to \'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' via ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r21);

     label09:
        return $r63;

     label10:
        return null;
    }

    private void abortConnection()
    {
        java.io.IOException $r2, $r4;
        org.apache.http.conn.ManagedClientConnection r1;
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.commons.logging.Log $r3, $r5, $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        if r1 == null goto label7;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = null;

     label1:
        interfaceinvoke r1.<org.apache.http.conn.ManagedClientConnection: void abortConnection()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label4;

        $r6 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r7 = virtualinvoke $r4.<java.io.IOException: java.lang.String getMessage()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r7, $r4);

     label4:
        interfaceinvoke r1.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

     label5:
        goto label7;

     label6:
        $r2 := @caughtexception;

        $r3 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Error releasing connection", $r2);

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }
}
