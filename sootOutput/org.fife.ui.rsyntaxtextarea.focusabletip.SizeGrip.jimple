class org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip extends javax.swing.JPanel
{
    private java.awt.Image osxSizeGrip;

    public void <init>()
    {
        org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip$MouseHandler $r1;
        java.awt.Dimension $r2;
        org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip$MouseHandler;

        specialinvoke $r1.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip$MouseHandler: void <init>(org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip,org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip$1)>(r0, null);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: void addMouseListener(java.awt.event.MouseListener)>($r1);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r1);

        $r2 = new java.awt.Dimension;

        specialinvoke $r2.<java.awt.Dimension: void <init>(int,int)>(16, 16);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: void setPreferredSize(java.awt.Dimension)>($r2);

        return;
    }

    public void applyComponentOrientation(java.awt.ComponentOrientation)
    {
        org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip r0;
        java.awt.ComponentOrientation r1;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip;

        r1 := @parameter0: java.awt.ComponentOrientation;

        $z0 = virtualinvoke r1.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: void possiblyFixCursor(boolean)>($z0);

        specialinvoke r0.<javax.swing.JPanel: void applyComponentOrientation(java.awt.ComponentOrientation)>(r1);

        return;
    }

    private java.awt.Image createOSXSizeGrip()
    {
        java.net.MalformedURLException $r7;
        java.awt.image.BufferedImage r9;
        java.net.URL $r3, r8;
        java.io.IOException $r6;
        java.io.File $r4;
        org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;
        java.net.URI $r5;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = virtualinvoke $r2.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("org/fife/ui/rsyntaxtextarea/focusabletip/osx_sizegrip.png");

        r8 = $r3;

        if $r3 != null goto label5;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>("../RSyntaxTextArea/src/org/fife/ui/rsyntaxtextarea/focusabletip/osx_sizegrip.png");

        $z0 = virtualinvoke $r4.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label4;

     label1:
        $r5 = virtualinvoke $r4.<java.io.File: java.net.URI toURI()>();

        r8 = virtualinvoke $r5.<java.net.URI: java.net.URL toURL()>();

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.net.MalformedURLException: void printStackTrace()>();

        return null;

     label4:
        return null;

     label5:
        r9 = null;

     label6:
        r9 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.net.URL)>(r8);

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

     label9:
        return r9;

        catch java.net.MalformedURLException from label1 to label2 with label3;
        catch java.io.IOException from label6 to label7 with label8;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r4, $r5;
        org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip r0;
        boolean $z0;
        java.awt.Image $r3, $r7;
        java.awt.Dimension $r2;
        java.awt.Graphics r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45;
        java.awt.ComponentOrientation $r6;

        r0 := @this: org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<javax.swing.JPanel: void paintComponent(java.awt.Graphics)>(r1);

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: java.awt.Dimension getSize()>();

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: java.awt.Image osxSizeGrip>;

        if $r3 == null goto label1;

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: java.awt.Image osxSizeGrip>;

        $i42 = $r2.<java.awt.Dimension: int width>;

        $i45 = $i42 - 16;

        $i43 = $r2.<java.awt.Dimension: int height>;

        $i44 = $i43 - 16;

        virtualinvoke r1.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r7, $i45, $i44, null);

        return;

     label1:
        $r4 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Label.disabledShadow");

        $r5 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Label.disabledForeground");

        $r6 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r6.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 == 0 goto label2;

        $i14 = $r2.<java.awt.Dimension: int width>;

        $i15 = $i14 - 3;

        $r2.<java.awt.Dimension: int width> = $i15;

        $i16 = $r2.<java.awt.Dimension: int height>;

        $i17 = $i16 - 3;

        $r2.<java.awt.Dimension: int height> = $i17;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i19 = $i15 - 9;

        $i18 = $i17 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i19, $i18, 3, 3);

        $i21 = $i15 - 5;

        $i20 = $i17 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i21, $i20, 3, 3);

        $i23 = $i15 - 1;

        $i22 = $i17 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i23, $i22, 3, 3);

        $i25 = $i15 - 5;

        $i24 = $i17 - 5;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i25, $i24, 3, 3);

        $i27 = $i15 - 1;

        $i26 = $i17 - 5;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i27, $i26, 3, 3);

        $i29 = $i15 - 1;

        $i28 = $i17 - 9;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i29, $i28, 3, 3);

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i31 = $i15 - 9;

        $i30 = $i17 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i31, $i30, 2, 2);

        $i33 = $i15 - 5;

        $i32 = $i17 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i33, $i32, 2, 2);

        $i35 = $i15 - 1;

        $i34 = $i17 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i35, $i34, 2, 2);

        $i37 = $i15 - 5;

        $i36 = $i17 - 5;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i37, $i36, 2, 2);

        $i39 = $i15 - 1;

        $i38 = $i17 - 5;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i39, $i38, 2, 2);

        $i41 = $i15 - 1;

        $i40 = $i17 - 9;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i41, $i40, 2, 2);

        goto label3;

     label2:
        $i0 = $r2.<java.awt.Dimension: int height>;

        $i1 = $i0 - 3;

        $r2.<java.awt.Dimension: int height> = $i1;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i2 = $i1 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(10, $i2, 3, 3);

        $i3 = $i1 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(6, $i3, 3, 3);

        $i4 = $i1 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(2, $i4, 3, 3);

        $i5 = $i1 - 5;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(6, $i5, 3, 3);

        $i6 = $i1 - 5;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(2, $i6, 3, 3);

        $i7 = $i1 - 9;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(2, $i7, 3, 3);

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i8 = $i1 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(10, $i8, 2, 2);

        $i9 = $i1 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(6, $i9, 2, 2);

        $i10 = $i1 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(2, $i10, 2, 2);

        $i11 = $i1 - 5;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(6, $i11, 2, 2);

        $i12 = $i1 - 5;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(2, $i12, 2, 2);

        $i13 = $i1 - 9;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(2, $i13, 2, 2);

     label3:
        return;
    }

    protected void possiblyFixCursor(boolean)
    {
        java.awt.Cursor $r1, $r2;
        byte b1, b2, b3;
        org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip r0;
        int $i0;
        boolean z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip;

        z0 := @parameter0: boolean;

        b1 = 7;

        b3 = 7;

        b2 = 7;

        if z0 == 0 goto label1;

        b1 = 6;

        b3 = 6;

        b2 = 6;

     label1:
        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: java.awt.Cursor getCursor()>();

        $i0 = virtualinvoke $r1.<java.awt.Cursor: int getType()>();

        if b2 == $i0 goto label2;

        $r2 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(b3);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: void setCursor(java.awt.Cursor)>($r2);

     label2:
        return;
    }

    public void updateUI()
    {
        org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip r0;
        java.awt.Image $r2, $r3;
        int $i0, $i2;
        java.lang.String $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip;

        specialinvoke r0.<javax.swing.JPanel: void updateUI()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("OS X");

        $i2 = (int) -1;

        if $i0 <= $i2 goto label1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: java.awt.Image osxSizeGrip>;

        if $r2 != null goto label2;

        $r3 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: java.awt.Image createOSXSizeGrip()>();

        r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: java.awt.Image osxSizeGrip> = $r3;

        goto label2;

     label1:
        r0.<org.fife.ui.rsyntaxtextarea.focusabletip.SizeGrip: java.awt.Image osxSizeGrip> = null;

     label2:
        return;
    }
}
