public abstract class org.jdom.Content extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    protected org.jdom.Parent parent;

    protected void <init>()
    {
        org.jdom.Content r0;

        r0 := @this: org.jdom.Content;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom.Content: org.jdom.Parent parent> = null;

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $r1;
        org.jdom.Content r0, r2;
        java.lang.CloneNotSupportedException $r3;

        r0 := @this: org.jdom.Content;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.jdom.Content) $r1;

        r2.<org.jdom.Content: org.jdom.Parent parent> = null;

        return r2;

     label2:
        $r3 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label2;
    }

    public org.jdom.Content detach()
    {
        org.jdom.Parent $r1, $r2;
        org.jdom.Content r0;

        r0 := @this: org.jdom.Content;

        $r1 = r0.<org.jdom.Content: org.jdom.Parent parent>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jdom.Content: org.jdom.Parent parent>;

        interfaceinvoke $r2.<org.jdom.Parent: boolean removeContent(org.jdom.Content)>(r0);

     label1:
        return r0;
    }

    public final boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.jdom.Content r1;
        boolean $z0;

        r1 := @this: org.jdom.Content;

        r0 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = 1;

     label2:
        return $z0;
    }

    public org.jdom.Document getDocument()
    {
        org.jdom.Parent $r1, $r2;
        org.jdom.Document $r3;
        org.jdom.Content r0;

        r0 := @this: org.jdom.Content;

        $r1 = r0.<org.jdom.Content: org.jdom.Parent parent>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.jdom.Content: org.jdom.Parent parent>;

        $r3 = interfaceinvoke $r2.<org.jdom.Parent: org.jdom.Document getDocument()>();

        return $r3;
    }

    public org.jdom.Parent getParent()
    {
        org.jdom.Parent $r1;
        org.jdom.Content r0;

        r0 := @this: org.jdom.Content;

        $r1 = r0.<org.jdom.Content: org.jdom.Parent parent>;

        return $r1;
    }

    public org.jdom.Element getParentElement()
    {
        org.jdom.Parent $r1;
        org.jdom.Content r0;
        org.jdom.Element $r2;
        boolean $z0;

        r0 := @this: org.jdom.Content;

        $r1 = virtualinvoke r0.<org.jdom.Content: org.jdom.Parent getParent()>();

        $z0 = $r1 instanceof org.jdom.Element;

        if $z0 == 0 goto label1;

        $r2 = (org.jdom.Element) $r1;

        return $r2;

     label1:
        return null;
    }

    public abstract java.lang.String getValue();

    public final int hashCode()
    {
        int $i0;
        org.jdom.Content r0;

        r0 := @this: org.jdom.Content;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    protected org.jdom.Content setParent(org.jdom.Parent)
    {
        org.jdom.Parent r1;
        org.jdom.Content r0;

        r0 := @this: org.jdom.Content;

        r1 := @parameter0: org.jdom.Parent;

        r0.<org.jdom.Content: org.jdom.Parent parent> = r1;

        return r0;
    }
}
