public class com.jidesoft.swing.IconBorder extends javax.swing.border.MatteBorder
{
    private static final long serialVersionUID;
    private int _horizontalIconAlignment;
    private int _verticalIconAlignment;

    public void <init>(javax.swing.Icon)
    {
        com.jidesoft.swing.IconBorder r0;
        int $i0, $i2, $i4;
        javax.swing.Icon r1;

        r0 := @this: com.jidesoft.swing.IconBorder;

        r1 := @parameter0: javax.swing.Icon;

        $i0 = interfaceinvoke r1.<javax.swing.Icon: int getIconWidth()>();

        specialinvoke r0.<javax.swing.border.MatteBorder: void <init>(int,int,int,int,javax.swing.Icon)>(0, 0, 0, $i0, r1);

        $i2 = (int) -1;

        r0.<com.jidesoft.swing.IconBorder: int _horizontalIconAlignment> = $i2;

        $i4 = (int) -1;

        r0.<com.jidesoft.swing.IconBorder: int _verticalIconAlignment> = $i4;

        r0.<com.jidesoft.swing.IconBorder: int _verticalIconAlignment> = 1;

        return;
    }

    public void <init>(javax.swing.Icon, int)
    {
        com.jidesoft.swing.IconBorder r0;
        int $i0, i1, $i3, $i5;
        javax.swing.Icon r1;

        r0 := @this: com.jidesoft.swing.IconBorder;

        r1 := @parameter0: javax.swing.Icon;

        i1 := @parameter1: int;

        $i0 = interfaceinvoke r1.<javax.swing.Icon: int getIconWidth()>();

        specialinvoke r0.<javax.swing.border.MatteBorder: void <init>(int,int,int,int,javax.swing.Icon)>(0, 0, 0, $i0, r1);

        $i3 = (int) -1;

        r0.<com.jidesoft.swing.IconBorder: int _horizontalIconAlignment> = $i3;

        $i5 = (int) -1;

        r0.<com.jidesoft.swing.IconBorder: int _verticalIconAlignment> = $i5;

        r0.<com.jidesoft.swing.IconBorder: int _verticalIconAlignment> = i1;

        return;
    }

    public void <init>(java.awt.Insets, javax.swing.Icon)
    {
        java.awt.Insets r1;
        com.jidesoft.swing.IconBorder r0;
        javax.swing.Icon r2;
        int $i0, $i1, $i2, $i3, $i5, $i7;

        r0 := @this: com.jidesoft.swing.IconBorder;

        r1 := @parameter0: java.awt.Insets;

        r2 := @parameter1: javax.swing.Icon;

        specialinvoke r0.<javax.swing.border.MatteBorder: void <init>(java.awt.Insets,javax.swing.Icon)>(r1, r2);

        $i5 = (int) -1;

        r0.<com.jidesoft.swing.IconBorder: int _horizontalIconAlignment> = $i5;

        $i7 = (int) -1;

        r0.<com.jidesoft.swing.IconBorder: int _verticalIconAlignment> = $i7;

        $i0 = r1.<java.awt.Insets: int right>;

        if $i0 > 0 goto label1;

        $i1 = r1.<java.awt.Insets: int left>;

        if $i1 <= 0 goto label2;

     label1:
        r0.<com.jidesoft.swing.IconBorder: int _verticalIconAlignment> = 1;

        goto label4;

     label2:
        $i2 = r1.<java.awt.Insets: int top>;

        if $i2 > 0 goto label3;

        $i3 = r1.<java.awt.Insets: int bottom>;

        if $i3 <= 0 goto label4;

     label3:
        r0.<com.jidesoft.swing.IconBorder: int _horizontalIconAlignment> = 11;

     label4:
        return;
    }

    public void <init>(int, int, int, int, javax.swing.Icon)
    {
        com.jidesoft.swing.IconBorder r0;
        javax.swing.Icon r1;
        int i0, i1, i2, i3, $i5, $i7;

        r0 := @this: com.jidesoft.swing.IconBorder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: javax.swing.Icon;

        specialinvoke r0.<javax.swing.border.MatteBorder: void <init>(int,int,int,int,javax.swing.Icon)>(i0, i1, i2, i3, r1);

        $i5 = (int) -1;

        r0.<com.jidesoft.swing.IconBorder: int _horizontalIconAlignment> = $i5;

        $i7 = (int) -1;

        r0.<com.jidesoft.swing.IconBorder: int _verticalIconAlignment> = $i7;

        if i3 > 0 goto label1;

        if i1 <= 0 goto label2;

     label1:
        r0.<com.jidesoft.swing.IconBorder: int _verticalIconAlignment> = 1;

        goto label4;

     label2:
        if i0 > 0 goto label3;

        if i2 <= 0 goto label4;

     label3:
        r0.<com.jidesoft.swing.IconBorder: int _horizontalIconAlignment> = 11;

     label4:
        return;
    }

    public int getHorizontalIconAlignment()
    {
        int $i0;
        com.jidesoft.swing.IconBorder r0;

        r0 := @this: com.jidesoft.swing.IconBorder;

        $i0 = r0.<com.jidesoft.swing.IconBorder: int _horizontalIconAlignment>;

        return $i0;
    }

    public void setHorizontalIconAlignment(int)
    {
        int i0;
        com.jidesoft.swing.IconBorder r0;

        r0 := @this: com.jidesoft.swing.IconBorder;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.IconBorder: int _horizontalIconAlignment> = i0;

        return;
    }

    public int getVerticalIconAlignment()
    {
        int $i0;
        com.jidesoft.swing.IconBorder r0;

        r0 := @this: com.jidesoft.swing.IconBorder;

        $i0 = r0.<com.jidesoft.swing.IconBorder: int _verticalIconAlignment>;

        return $i0;
    }

    public void setVerticalIconAlignment(int)
    {
        int i0;
        com.jidesoft.swing.IconBorder r0;

        r0 := @this: com.jidesoft.swing.IconBorder;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.IconBorder: int _verticalIconAlignment> = i0;

        return;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r5, $r16, $r18, $r19;
        java.awt.Component r2;
        java.awt.ComponentOrientation $r12, $r15;
        boolean $z0, $z1;
        com.jidesoft.swing.IconBorder r0;
        javax.swing.Icon $r1, $r6, $r7, $r8, $r9, $r17, $r20, $r21, $r22, $r23;
        java.awt.Graphics r4, $r10, $r11, $r13, $r14;
        java.awt.Insets $r3;
        int $i0, i1, i2, $i3, $i4, $i5, i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, i65, i66, i67, $i68, i69, i70, $i71, i72, i73, i74, i75, i76, $i77, i78, i79, i80, i81, $i82, $i83, $i85, $i87, $i89;

        r0 := @this: com.jidesoft.swing.IconBorder;

        r2 := @parameter0: java.awt.Component;

        r4 := @parameter1: java.awt.Graphics;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i6 := @parameter4: int;

        i8 := @parameter5: int;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.IconBorder: int getHorizontalIconAlignment()>();

        $i85 = (int) -1;

        if $i0 != $i85 goto label01;

        $i64 = virtualinvoke r0.<com.jidesoft.swing.IconBorder: int getVerticalIconAlignment()>();

        $i87 = (int) -1;

        if $i64 == $i87 goto label02;

     label01:
        $r1 = r0.<com.jidesoft.swing.IconBorder: javax.swing.Icon tileIcon>;

        if $r1 != null goto label03;

     label02:
        specialinvoke r0.<javax.swing.border.MatteBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r4, i1, i2, i6, i8);

        goto label32;

     label03:
        $r3 = virtualinvoke r0.<com.jidesoft.swing.IconBorder: java.awt.Insets getBorderInsets(java.awt.Component)>(r2);

        $r5 = virtualinvoke r4.<java.awt.Graphics: java.awt.Color getColor()>();

        virtualinvoke r4.<java.awt.Graphics: void translate(int,int)>(i1, i2);

        $r6 = r0.<com.jidesoft.swing.IconBorder: javax.swing.Icon tileIcon>;

        if $r6 == null goto label06;

        $r17 = r0.<com.jidesoft.swing.IconBorder: javax.swing.Icon tileIcon>;

        $i63 = interfaceinvoke $r17.<javax.swing.Icon: int getIconWidth()>();

        $i89 = (int) -1;

        if $i63 != $i89 goto label04;

        $r18 = <java.awt.Color: java.awt.Color gray>;

        goto label05;

     label04:
        $r18 = null;

     label05:
        r0.<com.jidesoft.swing.IconBorder: java.awt.Color color> = $r18;

     label06:
        $r19 = r0.<com.jidesoft.swing.IconBorder: java.awt.Color color>;

        if $r19 == null goto label07;

        $r16 = r0.<com.jidesoft.swing.IconBorder: java.awt.Color color>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r16);

        $i45 = $r3.<java.awt.Insets: int right>;

        $i47 = i6 - $i45;

        $i46 = $r3.<java.awt.Insets: int top>;

        virtualinvoke r4.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i47, $i46);

        $i51 = $r3.<java.awt.Insets: int top>;

        $i50 = $r3.<java.awt.Insets: int left>;

        $i48 = $r3.<java.awt.Insets: int top>;

        $i49 = i8 - $i48;

        virtualinvoke r4.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, $i51, $i50, $i49);

        $i57 = $r3.<java.awt.Insets: int left>;

        $i52 = $r3.<java.awt.Insets: int bottom>;

        $i56 = i8 - $i52;

        $i53 = $r3.<java.awt.Insets: int left>;

        $i55 = i6 - $i53;

        $i54 = $r3.<java.awt.Insets: int bottom>;

        virtualinvoke r4.<java.awt.Graphics: void fillRect(int,int,int,int)>($i57, $i56, $i55, $i54);

        $i58 = $r3.<java.awt.Insets: int right>;

        $i62 = i6 - $i58;

        $i61 = $r3.<java.awt.Insets: int right>;

        $i59 = $r3.<java.awt.Insets: int bottom>;

        $i60 = i8 - $i59;

        virtualinvoke r4.<java.awt.Graphics: void fillRect(int,int,int,int)>($i62, 0, $i61, $i60);

        goto label31;

     label07:
        $r7 = r0.<com.jidesoft.swing.IconBorder: javax.swing.Icon tileIcon>;

        if $r7 == null goto label31;

        $r8 = r0.<com.jidesoft.swing.IconBorder: javax.swing.Icon tileIcon>;

        $i3 = interfaceinvoke $r8.<javax.swing.Icon: int getIconWidth()>();

        $r9 = r0.<com.jidesoft.swing.IconBorder: javax.swing.Icon tileIcon>;

        $i4 = interfaceinvoke $r9.<javax.swing.Icon: int getIconHeight()>();

        $i5 = $r3.<java.awt.Insets: int top>;

        if $i5 <= 0 goto label14;

        $r14 = virtualinvoke r4.<java.awt.Graphics: java.awt.Graphics create()>();

        $i40 = $r3.<java.awt.Insets: int top>;

        virtualinvoke $r14.<java.awt.Graphics: void setClip(int,int,int,int)>(0, 0, i6, $i40);

        i65 = $r3.<java.awt.Insets: int left>;

        $i41 = virtualinvoke r0.<com.jidesoft.swing.IconBorder: int getVerticalIconAlignment()>();

        i66 = $i41;

        $r15 = virtualinvoke r2.<java.awt.Component: java.awt.ComponentOrientation getComponentOrientation()>();

        $z1 = virtualinvoke $r15.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z1 != 0 goto label09;

        if $i41 != 10 goto label08;

        i66 = 4;

        goto label09;

     label08:
        if $i41 != 11 goto label09;

        i66 = 2;

     label09:
        tableswitch(i66)
        {
            case 0: goto label11;
            case 1: goto label12;
            case 2: goto label10;
            case 3: goto label12;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label12;
            case 8: goto label12;
            case 9: goto label12;
            case 10: goto label10;
            case 11: goto label12;
            default: goto label12;
        };

     label10:
        i67 = i65;

        goto label13;

     label11:
        $i42 = i6 - $i3;

        $i43 = $i42 / 2;

        i67 = i65 + $i43;

        goto label13;

     label12:
        $i44 = i65 + i6;

        i67 = $i44 - $i3;

     label13:
        $r20 = r0.<com.jidesoft.swing.IconBorder: javax.swing.Icon tileIcon>;

        interfaceinvoke $r20.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r2, $r14, i67, 0);

        virtualinvoke $r14.<java.awt.Graphics: void dispose()>();

     label14:
        $i68 = $r3.<java.awt.Insets: int left>;

        if $i68 <= 0 goto label19;

        $r13 = virtualinvoke r4.<java.awt.Graphics: java.awt.Graphics create()>();

        $i35 = $r3.<java.awt.Insets: int top>;

        $i34 = $r3.<java.awt.Insets: int left>;

        $i32 = $r3.<java.awt.Insets: int top>;

        $i33 = i8 - $i32;

        virtualinvoke $r13.<java.awt.Graphics: void setClip(int,int,int,int)>(0, $i35, $i34, $i33);

        i69 = $r3.<java.awt.Insets: int top>;

        $i36 = virtualinvoke r0.<com.jidesoft.swing.IconBorder: int getVerticalIconAlignment()>();

        tableswitch($i36)
        {
            case 0: goto label16;
            case 1: goto label15;
            case 2: goto label17;
            case 3: goto label17;
            case 4: goto label17;
            case 5: goto label17;
            case 6: goto label17;
            case 7: goto label17;
            case 8: goto label17;
            case 9: goto label17;
            case 10: goto label15;
            case 11: goto label17;
            default: goto label17;
        };

     label15:
        i70 = i69;

        goto label18;

     label16:
        $i37 = i8 - $i4;

        $i38 = $i37 / 2;

        i70 = i69 + $i38;

        goto label18;

     label17:
        $i39 = i69 + i8;

        i70 = $i39 - $i4;

     label18:
        $r21 = r0.<com.jidesoft.swing.IconBorder: javax.swing.Icon tileIcon>;

        interfaceinvoke $r21.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r2, $r13, 0, i70);

        virtualinvoke $r13.<java.awt.Graphics: void dispose()>();

     label19:
        $i71 = $r3.<java.awt.Insets: int bottom>;

        if $i71 <= 0 goto label26;

        $r11 = virtualinvoke r4.<java.awt.Graphics: java.awt.Graphics create()>();

        $i26 = $r3.<java.awt.Insets: int left>;

        $i21 = $r3.<java.awt.Insets: int bottom>;

        $i25 = i8 - $i21;

        $i22 = $r3.<java.awt.Insets: int left>;

        $i24 = i6 - $i22;

        $i23 = $r3.<java.awt.Insets: int bottom>;

        virtualinvoke $r11.<java.awt.Graphics: void setClip(int,int,int,int)>($i26, $i25, $i24, $i23);

        $i27 = $r3.<java.awt.Insets: int bottom>;

        i72 = i8 - $i27;

        i73 = $r3.<java.awt.Insets: int left>;

        $i28 = virtualinvoke r0.<com.jidesoft.swing.IconBorder: int getHorizontalIconAlignment()>();

        i74 = $i28;

        $r12 = virtualinvoke r2.<java.awt.Component: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r12.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 != 0 goto label21;

        if $i28 != 10 goto label20;

        i74 = 4;

        goto label21;

     label20:
        if $i28 != 11 goto label21;

        i74 = 2;

     label21:
        tableswitch(i74)
        {
            case 0: goto label23;
            case 1: goto label24;
            case 2: goto label22;
            case 3: goto label24;
            case 4: goto label24;
            case 5: goto label24;
            case 6: goto label24;
            case 7: goto label24;
            case 8: goto label24;
            case 9: goto label24;
            case 10: goto label22;
            case 11: goto label24;
            default: goto label24;
        };

     label22:
        i75 = i73;

        i76 = i72;

        goto label25;

     label23:
        $i29 = i6 - $i3;

        $i30 = $i29 / 2;

        i75 = i73 + $i30;

        i76 = i72;

        goto label25;

     label24:
        $i31 = i73 + i6;

        i75 = $i31 - $i3;

        i76 = i72;

     label25:
        $r22 = r0.<com.jidesoft.swing.IconBorder: javax.swing.Icon tileIcon>;

        interfaceinvoke $r22.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r2, $r11, i75, i76);

        virtualinvoke $r11.<java.awt.Graphics: void dispose()>();

     label26:
        $i77 = $r3.<java.awt.Insets: int right>;

        if $i77 <= 0 goto label31;

        $r10 = virtualinvoke r4.<java.awt.Graphics: java.awt.Graphics create()>();

        $i7 = $r3.<java.awt.Insets: int right>;

        $i15 = i6 - $i7;

        $i14 = $r3.<java.awt.Insets: int top>;

        $i13 = $r3.<java.awt.Insets: int right>;

        $i9 = $r3.<java.awt.Insets: int top>;

        $i11 = i8 - $i9;

        $i10 = $r3.<java.awt.Insets: int bottom>;

        $i12 = $i11 - $i10;

        virtualinvoke $r10.<java.awt.Graphics: void setClip(int,int,int,int)>($i15, $i14, $i13, $i12);

        i78 = $r3.<java.awt.Insets: int top>;

        $i16 = $r3.<java.awt.Insets: int right>;

        i79 = i6 - $i16;

        $i17 = virtualinvoke r0.<com.jidesoft.swing.IconBorder: int getVerticalIconAlignment()>();

        tableswitch($i17)
        {
            case 0: goto label28;
            case 1: goto label27;
            case 2: goto label29;
            case 3: goto label29;
            case 4: goto label29;
            case 5: goto label29;
            case 6: goto label29;
            case 7: goto label29;
            case 8: goto label29;
            case 9: goto label29;
            case 10: goto label27;
            case 11: goto label29;
            default: goto label29;
        };

     label27:
        i80 = i79;

        i81 = i78;

        goto label30;

     label28:
        i80 = i79;

        $i18 = i8 - $i4;

        $i19 = $i18 / 2;

        i81 = i78 + $i19;

        goto label30;

     label29:
        i80 = i79;

        $i20 = i78 + i8;

        i81 = $i20 - $i4;

     label30:
        $r23 = r0.<com.jidesoft.swing.IconBorder: javax.swing.Icon tileIcon>;

        interfaceinvoke $r23.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r2, $r10, i80, i81);

        virtualinvoke $r10.<java.awt.Graphics: void dispose()>();

     label31:
        $i82 = neg i1;

        $i83 = neg i2;

        virtualinvoke r4.<java.awt.Graphics: void translate(int,int)>($i82, $i83);

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

     label32:
        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.IconBorder: long serialVersionUID> = -5657747462265533365L;

        return;
    }
}
