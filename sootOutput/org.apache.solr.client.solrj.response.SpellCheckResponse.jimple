public class org.apache.solr.client.solrj.response.SpellCheckResponse extends java.lang.Object
{
    private boolean correctlySpelled;
    private java.util.List collations;
    private java.util.List suggestions;
    java.util.Map suggestionMap;

    public void <init>(org.apache.solr.common.util.NamedList)
    {
        java.lang.Integer $r24;
        java.util.Map $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Correction $r32;
        java.util.List $r14, $r15, $r28, $r34;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion $r10;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Collation $r27, $r33, $r36;
        org.apache.solr.client.solrj.response.SpellCheckResponse r0;
        long $l3;
        java.lang.AssertionError $r19;
        java.util.ArrayList $r1, $r16;
        java.util.LinkedHashMap $r2;
        int $i0, $i1, $i2, $i4, i5, i6;
        java.lang.Boolean $r38;
        java.lang.String $r6, $r7, $r8, $r9, r22, $r29, r31, $r35;
        java.util.Iterator $r17;
        org.apache.solr.common.util.NamedList r3, r5, $r12, r20, r26;
        java.lang.Object $r4, $r11, $r18, $r21, $r23, $r25, $r30, $r37;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse;

        r3 := @parameter0: org.apache.solr.common.util.NamedList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List suggestions> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.Map suggestionMap> = $r2;

        $r4 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("suggestions");

        r5 = (org.apache.solr.common.util.NamedList) $r4;

        if r5 != null goto label01;

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: boolean correctlySpelled> = 1;

        return;

     label01:
        i5 = 0;

     label02:
        $i0 = virtualinvoke r5.<org.apache.solr.common.util.NamedList: int size()>();

        if i5 >= $i0 goto label14;

        $r6 = virtualinvoke r5.<org.apache.solr.common.util.NamedList: java.lang.String getName(int)>(i5);

        $r7 = "correctlySpelled";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label03;

        $r37 = virtualinvoke r5.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i5);

        $r38 = (java.lang.Boolean) $r37;

        $z6 = virtualinvoke $r38.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: boolean correctlySpelled> = $z6;

        goto label13;

     label03:
        $r8 = "collationInternalRank";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label04;

        goto label13;

     label04:
        $r9 = "collation";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label12;

        $r15 = virtualinvoke r5.<org.apache.solr.common.util.NamedList: java.util.List getAll(java.lang.String)>($r6);

        $r16 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List collations> = $r16;

        $r17 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $z4 = $r18 instanceof java.lang.String;

        if $z4 == 0 goto label06;

        $r34 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List collations>;

        $r33 = new org.apache.solr.client.solrj.response.SpellCheckResponse$Collation;

        specialinvoke $r33.<org.apache.solr.client.solrj.response.SpellCheckResponse$Collation: void <init>(org.apache.solr.client.solrj.response.SpellCheckResponse)>(r0);

        $r35 = (java.lang.String) $r18;

        $r36 = virtualinvoke $r33.<org.apache.solr.client.solrj.response.SpellCheckResponse$Collation: org.apache.solr.client.solrj.response.SpellCheckResponse$Collation setCollationQueryString(java.lang.String)>($r35);

        interfaceinvoke $r34.<java.util.List: boolean add(java.lang.Object)>($r36);

        goto label10;

     label06:
        $z5 = $r18 instanceof org.apache.solr.common.util.NamedList;

        if $z5 == 0 goto label09;

        r20 = (org.apache.solr.common.util.NamedList) $r18;

        $r21 = virtualinvoke r20.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("collationQuery");

        r22 = (java.lang.String) $r21;

        $r23 = virtualinvoke r20.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("hits");

        $r24 = (java.lang.Integer) $r23;

        $i2 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        $r25 = virtualinvoke r20.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("misspellingsAndCorrections");

        r26 = (org.apache.solr.common.util.NamedList) $r25;

        $r27 = new org.apache.solr.client.solrj.response.SpellCheckResponse$Collation;

        specialinvoke $r27.<org.apache.solr.client.solrj.response.SpellCheckResponse$Collation: void <init>(org.apache.solr.client.solrj.response.SpellCheckResponse)>(r0);

        virtualinvoke $r27.<org.apache.solr.client.solrj.response.SpellCheckResponse$Collation: org.apache.solr.client.solrj.response.SpellCheckResponse$Collation setCollationQueryString(java.lang.String)>(r22);

        $l3 = (long) $i2;

        virtualinvoke $r27.<org.apache.solr.client.solrj.response.SpellCheckResponse$Collation: void setNumberOfHits(long)>($l3);

        i6 = 0;

     label07:
        $i4 = virtualinvoke r26.<org.apache.solr.common.util.NamedList: int size()>();

        if i6 >= $i4 goto label08;

        $r29 = virtualinvoke r26.<org.apache.solr.common.util.NamedList: java.lang.String getName(int)>(i6);

        $r30 = virtualinvoke r26.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i6);

        r31 = (java.lang.String) $r30;

        $r32 = new org.apache.solr.client.solrj.response.SpellCheckResponse$Correction;

        specialinvoke $r32.<org.apache.solr.client.solrj.response.SpellCheckResponse$Correction: void <init>(org.apache.solr.client.solrj.response.SpellCheckResponse,java.lang.String,java.lang.String)>(r0, $r29, r31);

        virtualinvoke $r27.<org.apache.solr.client.solrj.response.SpellCheckResponse$Collation: org.apache.solr.client.solrj.response.SpellCheckResponse$Collation addMisspellingsAndCorrection(org.apache.solr.client.solrj.response.SpellCheckResponse$Correction)>($r32);

        i6 = i6 + 1;

        goto label07;

     label08:
        $r28 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List collations>;

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r27);

        goto label10;

     label09:
        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>("Should get Lists of Strings or List of NamedLists here.");

        throw $r19;

     label10:
        goto label05;

     label11:
        goto label13;

     label12:
        $r10 = new org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        $r11 = virtualinvoke r5.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i5);

        $r12 = (org.apache.solr.common.util.NamedList) $r11;

        specialinvoke $r10.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: void <init>(java.lang.String,org.apache.solr.common.util.NamedList)>($r6, $r12);

        $r13 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.Map suggestionMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r10);

        $r14 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List suggestions>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r10);

     label13:
        i5 = i5 + 1;

        goto label02;

     label14:
        return;
    }

    public boolean isCorrectlySpelled()
    {
        org.apache.solr.client.solrj.response.SpellCheckResponse r0;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse;

        $z0 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: boolean correctlySpelled>;

        return $z0;
    }

    public java.util.List getSuggestions()
    {
        org.apache.solr.client.solrj.response.SpellCheckResponse r0;
        java.util.List $r1;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List suggestions>;

        return $r1;
    }

    public java.util.Map getSuggestionMap()
    {
        org.apache.solr.client.solrj.response.SpellCheckResponse r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.Map suggestionMap>;

        return $r1;
    }

    public org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion getSuggestion(java.lang.String)
    {
        org.apache.solr.client.solrj.response.SpellCheckResponse r0;
        java.util.Map $r2;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion $r4;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.Map suggestionMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion) $r3;

        return $r4;
    }

    public java.lang.String getFirstSuggestion(java.lang.String)
    {
        org.apache.solr.client.solrj.response.SpellCheckResponse r0;
        java.util.List $r5, $r6;
        java.util.Map $r2;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r4;
        java.lang.Object $r3, $r7;
        java.lang.String r1, $r8;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.Map suggestionMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion) $r3;

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List getAlternatives()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r6 = virtualinvoke r4.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List getAlternatives()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (java.lang.String) $r7;

        return $r8;
    }

    public java.lang.String getCollatedResult()
    {
        org.apache.solr.client.solrj.response.SpellCheckResponse r0;
        java.util.List $r1, $r2, $r3;
        int $i0;
        java.lang.Object $r4;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Collation $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List collations>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List collations>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r6 = null;

        goto label3;

     label2:
        $r3 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List collations>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (org.apache.solr.client.solrj.response.SpellCheckResponse$Collation) $r4;

        $r6 = staticinvoke <org.apache.solr.client.solrj.response.SpellCheckResponse$Collation: java.lang.String access$000(org.apache.solr.client.solrj.response.SpellCheckResponse$Collation)>($r5);

     label3:
        return $r6;
    }

    public java.util.List getCollatedResults()
    {
        org.apache.solr.client.solrj.response.SpellCheckResponse r0;
        java.util.List $r1;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List collations>;

        return $r1;
    }
}
