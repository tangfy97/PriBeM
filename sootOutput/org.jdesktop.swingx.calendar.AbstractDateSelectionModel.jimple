public abstract class org.jdesktop.swingx.calendar.AbstractDateSelectionModel extends java.lang.Object implements org.jdesktop.swingx.calendar.DateSelectionModel
{
    public static final java.util.SortedSet EMPTY_DATES;
    protected org.jdesktop.swingx.event.EventListenerMap listenerMap;
    protected boolean adjusting;
    protected java.util.Calendar calendar;
    protected java.util.Date upperBound;
    protected java.util.Date lowerBound;
    protected java.util.Locale locale;

    public void <init>()
    {
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        specialinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void <init>(java.util.Locale)>(null);

        return;
    }

    public void <init>(java.util.Locale)
    {
        org.jdesktop.swingx.event.EventListenerMap $r1;
        java.util.Locale r2;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r2 := @parameter0: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jdesktop.swingx.event.EventListenerMap;

        specialinvoke $r1.<org.jdesktop.swingx.event.EventListenerMap: void <init>()>();

        r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: org.jdesktop.swingx.event.EventListenerMap listenerMap> = $r1;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void setLocale(java.util.Locale)>(r2);

        return;
    }

    public java.util.Calendar getCalendar()
    {
        java.util.Calendar $r1, $r3;
        java.lang.Object $r2;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        $r1 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        $r2 = virtualinvoke $r1.<java.util.Calendar: java.lang.Object clone()>();

        $r3 = (java.util.Calendar) $r2;

        return $r3;
    }

    public int getFirstDayOfWeek()
    {
        int $i0;
        java.util.Calendar $r1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        $r1 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int getFirstDayOfWeek()>();

        return $i0;
    }

    public void setFirstDayOfWeek(int)
    {
        java.util.Calendar $r1;
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r2;
        int i0, $i1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: int getFirstDayOfWeek()>();

        if i0 != $i1 goto label1;

        return;

     label1:
        $r1 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        virtualinvoke $r1.<java.util.Calendar: void setFirstDayOfWeek(int)>(i0);

        $r2 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType CALENDAR_CHANGED>;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r2);

        return;
    }

    public int getMinimalDaysInFirstWeek()
    {
        int $i0;
        java.util.Calendar $r1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        $r1 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int getMinimalDaysInFirstWeek()>();

        return $i0;
    }

    public void setMinimalDaysInFirstWeek(int)
    {
        java.util.Calendar $r1;
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r2;
        int i0, $i1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: int getMinimalDaysInFirstWeek()>();

        if i0 != $i1 goto label1;

        return;

     label1:
        $r1 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        virtualinvoke $r1.<java.util.Calendar: void setMinimalDaysInFirstWeek(int)>(i0);

        $r2 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType CALENDAR_CHANGED>;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r2);

        return;
    }

    public java.util.TimeZone getTimeZone()
    {
        java.util.Calendar $r1;
        java.util.TimeZone $r2;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        $r1 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        $r2 = virtualinvoke $r1.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        return $r2;
    }

    public void setTimeZone(java.util.TimeZone)
    {
        java.util.Calendar $r4;
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r5;
        java.util.TimeZone $r1, r2, $r3;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r2 := @parameter0: java.util.TimeZone;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.TimeZone getTimeZone()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.TimeZone getTimeZone()>();

        $r4 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        virtualinvoke $r4.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(r2);

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void adjustDatesToTimeZone(java.util.TimeZone)>($r3);

        $r5 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType CALENDAR_CHANGED>;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r5);

        return;
    }

    protected void adjustDatesToTimeZone(java.util.TimeZone)
    {
        java.util.SortedSet $r1;
        java.util.TimeZone r2;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r2 := @parameter0: java.util.TimeZone;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void clearSelection()>();

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void setLowerBound(java.util.Date)>(null);

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void setUpperBound(java.util.Date)>(null);

        $r1 = <org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.SortedSet EMPTY_DATES>;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void setUnselectableDates(java.util.SortedSet)>($r1);

        return;
    }

    public java.util.Locale getLocale()
    {
        java.util.Locale $r1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        $r1 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Locale locale>;

        return $r1;
    }

    public void setLocale(java.util.Locale)
    {
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r4;
        java.util.TimeZone $r6;
        java.util.Calendar $r2, $r3, $r5, $r7;
        java.util.Locale $r1, r8;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r8 := @parameter0: java.util.Locale;

        if r8 != null goto label1;

        r8 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label1:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Locale getLocale()>();

        $z0 = virtualinvoke r8.<java.util.Locale: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return;

     label2:
        r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Locale locale> = r8;

        $r2 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        if $r2 == null goto label3;

        $r5 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        $r6 = virtualinvoke $r5.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $r7 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>($r6, r8);

        r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar> = $r7;

        goto label4;

     label3:
        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>(r8);

        r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar> = $r3;

     label4:
        $r4 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType CALENDAR_CHANGED>;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r4);

        return;
    }

    protected java.util.Date startOfDay(java.util.Date)
    {
        java.util.Calendar $r2;
        java.util.Date r1, $r3;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r1 := @parameter0: java.util.Date;

        $r2 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        $r3 = staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: java.util.Date startOfDay(java.util.Calendar,java.util.Date)>($r2, r1);

        return $r3;
    }

    protected java.util.Date endOfDay(java.util.Date)
    {
        java.util.Calendar $r2;
        java.util.Date r1, $r3;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r1 := @parameter0: java.util.Date;

        $r2 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Calendar calendar>;

        $r3 = staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: java.util.Date endOfDay(java.util.Calendar,java.util.Date)>($r2, r1);

        return $r3;
    }

    protected boolean isSameDay(java.util.Date, java.util.Date)
    {
        java.util.Date r1, $r2, r3, $r4;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r1 := @parameter0: java.util.Date;

        r3 := @parameter1: java.util.Date;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date startOfDay(java.util.Date)>(r1);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date startOfDay(java.util.Date)>(r3);

        $z0 = virtualinvoke $r2.<java.util.Date: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }

    public java.util.Date getUpperBound()
    {
        java.util.Date $r1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        $r1 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date upperBound>;

        return $r1;
    }

    public void setUpperBound(java.util.Date)
    {
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r7;
        java.util.Date $r1, $r2, $r3, $r4, $r5, r6;
        long $l0, l1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r6 := @parameter0: java.util.Date;

        if r6 == null goto label1;

        r6 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date getNormalizedDate(java.util.Date)>(r6);

     label1:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date getUpperBound()>();

        $z0 = staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: boolean areEqual(java.util.Date,java.util.Date)>(r6, $r1);

        if $z0 == 0 goto label2;

        return;

     label2:
        r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date upperBound> = r6;

        $r2 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date upperBound>;

        if $r2 == null goto label3;

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: boolean isSelectionEmpty()>();

        if $z1 != 0 goto label3;

        $r3 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date upperBound>;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        l1 = $l0 + 1L;

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>(long)>(l1);

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date getLastSelectionDate()>();

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void removeSelectionInterval(java.util.Date,java.util.Date)>($r4, $r5);

     label3:
        $r7 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType UPPER_BOUND_CHANGED>;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r7);

        return;
    }

    public java.util.Date getLowerBound()
    {
        java.util.Date $r1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        $r1 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date lowerBound>;

        return $r1;
    }

    public void setLowerBound(java.util.Date)
    {
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r7;
        java.util.Date $r1, $r2, $r3, $r4, $r5, r6;
        long $l0, l1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r6 := @parameter0: java.util.Date;

        if r6 == null goto label1;

        r6 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date getNormalizedDate(java.util.Date)>(r6);

     label1:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date getLowerBound()>();

        $z0 = staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: boolean areEqual(java.util.Date,java.util.Date)>(r6, $r1);

        if $z0 == 0 goto label2;

        return;

     label2:
        r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date lowerBound> = r6;

        $r2 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date lowerBound>;

        if $r2 == null goto label3;

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: boolean isSelectionEmpty()>();

        if $z1 != 0 goto label3;

        $r3 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date lowerBound>;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        l1 = $l0 - 1L;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.Date getFirstSelectionDate()>();

        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>(long)>(l1);

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void removeSelectionInterval(java.util.Date,java.util.Date)>($r4, $r5);

     label3:
        $r7 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType LOWER_BOUND_CHANGED>;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r7);

        return;
    }

    public boolean isAdjusting()
    {
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        $z0 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: boolean adjusting>;

        return $z0;
    }

    public void setAdjusting(boolean)
    {
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r1;
        boolean z0, $z1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: boolean isAdjusting()>();

        if z0 != $z1 goto label1;

        return;

     label1:
        r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: boolean adjusting> = z0;

        if z0 == 0 goto label2;

        $r1 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType ADJUSTING_STARTED>;

        goto label3;

     label2:
        $r1 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType ADJUSTING_STOPPED>;

     label3:
        virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r1);

        return;
    }

    public void addDateSelectionListener(org.jdesktop.swingx.event.DateSelectionListener)
    {
        org.jdesktop.swingx.event.DateSelectionListener r1;
        org.jdesktop.swingx.event.EventListenerMap $r2;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r1 := @parameter0: org.jdesktop.swingx.event.DateSelectionListener;

        $r2 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: org.jdesktop.swingx.event.EventListenerMap listenerMap>;

        virtualinvoke $r2.<org.jdesktop.swingx.event.EventListenerMap: void add(java.lang.Class,java.util.EventListener)>(class "Lorg/jdesktop/swingx/event/DateSelectionListener;", r1);

        return;
    }

    public void removeDateSelectionListener(org.jdesktop.swingx.event.DateSelectionListener)
    {
        org.jdesktop.swingx.event.DateSelectionListener r1;
        org.jdesktop.swingx.event.EventListenerMap $r2;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r1 := @parameter0: org.jdesktop.swingx.event.DateSelectionListener;

        $r2 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: org.jdesktop.swingx.event.EventListenerMap listenerMap>;

        virtualinvoke $r2.<org.jdesktop.swingx.event.EventListenerMap: void remove(java.lang.Class,java.util.EventListener)>(class "Lorg/jdesktop/swingx/event/DateSelectionListener;", r1);

        return;
    }

    public java.util.List getDateSelectionListeners()
    {
        java.util.List $r2;
        org.jdesktop.swingx.event.EventListenerMap $r1;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        $r1 = r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: org.jdesktop.swingx.event.EventListenerMap listenerMap>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.event.EventListenerMap: java.util.List getListeners(java.lang.Class)>(class "Lorg/jdesktop/swingx/event/DateSelectionListener;");

        return $r2;
    }

    protected void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)
    {
        org.jdesktop.swingx.event.DateSelectionEvent$EventType r6;
        java.util.Iterator $r2;
        org.jdesktop.swingx.event.DateSelectionEvent $r5, r7;
        java.util.List $r1;
        org.jdesktop.swingx.event.DateSelectionListener r4;
        java.lang.Object $r3;
        org.jdesktop.swingx.calendar.AbstractDateSelectionModel r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.calendar.AbstractDateSelectionModel;

        r6 := @parameter0: org.jdesktop.swingx.event.DateSelectionEvent$EventType;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.List getDateSelectionListeners()>();

        r7 = null;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jdesktop.swingx.event.DateSelectionListener) $r3;

        if r7 != null goto label2;

        $r5 = new org.jdesktop.swingx.event.DateSelectionEvent;

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: boolean isAdjusting()>();

        specialinvoke $r5.<org.jdesktop.swingx.event.DateSelectionEvent: void <init>(java.lang.Object,org.jdesktop.swingx.event.DateSelectionEvent$EventType,boolean)>(r0, r6, $z1);

        r7 = $r5;

     label2:
        interfaceinvoke r4.<org.jdesktop.swingx.event.DateSelectionListener: void valueChanged(org.jdesktop.swingx.event.DateSelectionEvent)>(r7);

        goto label1;

     label3:
        return;
    }

    static void <clinit>()
    {
        java.util.SortedSet $r1;
        java.util.TreeSet $r0;

        $r0 = new java.util.TreeSet;

        specialinvoke $r0.<java.util.TreeSet: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>($r0);

        <org.jdesktop.swingx.calendar.AbstractDateSelectionModel: java.util.SortedSet EMPTY_DATES> = $r1;

        return;
    }
}
