final class com.mycila.inject.internal.guava.base.Splitter$4 extends java.lang.Object implements com.mycila.inject.internal.guava.base.Splitter$Strategy
{
    final int val$length;

    void <init>(int)
    {
        int i0;
        com.mycila.inject.internal.guava.base.Splitter$4 r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Splitter$4;

        i0 := @parameter0: int;

        r0.<com.mycila.inject.internal.guava.base.Splitter$4: int val$length> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.mycila.inject.internal.guava.base.Splitter$SplittingIterator iterator(com.mycila.inject.internal.guava.base.Splitter, java.lang.CharSequence)
    {
        java.lang.CharSequence r3;
        com.mycila.inject.internal.guava.base.Splitter$4$1 $r0;
        com.mycila.inject.internal.guava.base.Splitter r2;
        com.mycila.inject.internal.guava.base.Splitter$4 r1;

        r1 := @this: com.mycila.inject.internal.guava.base.Splitter$4;

        r2 := @parameter0: com.mycila.inject.internal.guava.base.Splitter;

        r3 := @parameter1: java.lang.CharSequence;

        $r0 = new com.mycila.inject.internal.guava.base.Splitter$4$1;

        specialinvoke $r0.<com.mycila.inject.internal.guava.base.Splitter$4$1: void <init>(com.mycila.inject.internal.guava.base.Splitter$4,com.mycila.inject.internal.guava.base.Splitter,java.lang.CharSequence)>(r1, r2, r3);

        return $r0;
    }

    public volatile java.util.Iterator iterator(com.mycila.inject.internal.guava.base.Splitter, java.lang.CharSequence)
    {
        java.lang.CharSequence r2;
        com.mycila.inject.internal.guava.base.Splitter$SplittingIterator $r3;
        com.mycila.inject.internal.guava.base.Splitter r1;
        com.mycila.inject.internal.guava.base.Splitter$4 r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Splitter$4;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Splitter;

        r2 := @parameter1: java.lang.CharSequence;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.guava.base.Splitter$4: com.mycila.inject.internal.guava.base.Splitter$SplittingIterator iterator(com.mycila.inject.internal.guava.base.Splitter,java.lang.CharSequence)>(r1, r2);

        return $r3;
    }
}
