public class org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl extends java.lang.Object implements org.waveprotocol.wave.model.wave.WaveletListener
{

    public void <init>()
    {
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onBlipAdded(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.Blip)
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        org.waveprotocol.wave.model.wave.Blip r2;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.Blip;

        return;
    }

    public void onBlipRemoved(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.Blip)
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        org.waveprotocol.wave.model.wave.Blip r2;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.Blip;

        return;
    }

    public void onBlipSubmitted(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.Blip)
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        org.waveprotocol.wave.model.wave.Blip r2;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.Blip;

        return;
    }

    public void onBlipTimestampModified(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.Blip, long, long)
    {
        org.waveprotocol.wave.model.wave.Blip r2;
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        long l0, l1;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.Blip;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        return;
    }

    public void onBlipVersionModified(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.Blip, java.lang.Long, java.lang.Long)
    {
        org.waveprotocol.wave.model.wave.Blip r2;
        java.lang.Long r3, r4;
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.Blip;

        r3 := @parameter2: java.lang.Long;

        r4 := @parameter3: java.lang.Long;

        return;
    }

    public void onBlipContributorAdded(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.Blip, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.Blip r2;
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        org.waveprotocol.wave.model.wave.ParticipantId r3;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.Blip;

        r3 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        return;
    }

    public void onBlipContributorRemoved(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.Blip, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.Blip r2;
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        org.waveprotocol.wave.model.wave.ParticipantId r3;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.Blip;

        r3 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        return;
    }

    public void onParticipantAdded(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        return;
    }

    public void onParticipantRemoved(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        return;
    }

    public void onLastModifiedTimeChanged(org.waveprotocol.wave.model.wave.ObservableWavelet, long, long)
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        long l0, l1;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        return;
    }

    public void onVersionChanged(org.waveprotocol.wave.model.wave.ObservableWavelet, long, long)
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        long l0, l1;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        return;
    }

    public void onHashedVersionChanged(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.version.HashedVersion, org.waveprotocol.wave.model.version.HashedVersion)
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.version.HashedVersion r2, r3;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        r3 := @parameter2: org.waveprotocol.wave.model.version.HashedVersion;

        return;
    }

    public void onRemoteBlipContentModified(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.Blip)
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet r1;
        org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl r0;
        org.waveprotocol.wave.model.wave.Blip r2;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.Blip;

        return;
    }
}
