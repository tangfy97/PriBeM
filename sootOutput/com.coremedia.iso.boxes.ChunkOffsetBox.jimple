public abstract class com.coremedia.iso.boxes.ChunkOffsetBox extends com.googlecode.mp4parser.AbstractFullBox
{
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0;

    public void <init>(java.lang.String)
    {
        com.coremedia.iso.boxes.ChunkOffsetBox r0;
        java.lang.String r1;

        r0 := @this: com.coremedia.iso.boxes.ChunkOffsetBox;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>(r1);

        return;
    }

    public abstract long[] getChunkOffsets();

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        long[] $r9;
        com.coremedia.iso.boxes.ChunkOffsetBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0;
        java.lang.StringBuilder $r4, $r8, $r10, $r11;
        java.lang.Class $r5;
        java.lang.String $r6, $r7, $r12;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.ChunkOffsetBox;

        $r1 = <com.coremedia.iso.boxes.ChunkOffsetBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = new java.lang.StringBuilder;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[entryCount=");

        $r9 = virtualinvoke r0.<com.coremedia.iso.boxes.ChunkOffsetBox: long[] getChunkOffsets()>();

        $i0 = lengthof $r9;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    static void <clinit>()
    {
        staticinvoke <com.coremedia.iso.boxes.ChunkOffsetBox: void ajc$preClinit()>();

        return;
    }

    private static void ajc$preClinit()
    {
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        org.aspectj.lang.reflect.MethodSignature $r1;
        org.aspectj.runtime.reflect.Factory $r0;

        $r0 = new org.aspectj.runtime.reflect.Factory;

        specialinvoke $r0.<org.aspectj.runtime.reflect.Factory: void <init>(java.lang.String,java.lang.Class)>("ChunkOffsetBox.java", class "Lcom/coremedia/iso/boxes/ChunkOffsetBox;");

        $r1 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "toString", "com.coremedia.iso.boxes.ChunkOffsetBox", "", "", "", "java.lang.String");

        $r2 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r1, 17);

        <com.coremedia.iso.boxes.ChunkOffsetBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> = $r2;

        return;
    }
}
