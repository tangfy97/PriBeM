class com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry extends com.google.common.collect.CustomConcurrentHashMap$SoftEntry implements com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry
{
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable;
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable;

    void <init>(com.google.common.collect.CustomConcurrentHashMap, java.lang.Object, int, com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r3, $r4, $r5;
        com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry r0;
        int i0;
        com.google.common.collect.CustomConcurrentHashMap r1;
        java.lang.Object r2;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry;

        r1 := @parameter0: com.google.common.collect.CustomConcurrentHashMap;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r3 := @parameter3: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        specialinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$SoftEntry: void <init>(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)>(r1, r2, i0, r3);

        $r4 = staticinvoke <com.google.common.collect.CustomConcurrentHashMap: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nullEntry()>();

        r0.<com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable> = $r4;

        $r5 = staticinvoke <com.google.common.collect.CustomConcurrentHashMap: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nullEntry()>();

        r0.<com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable> = $r5;

        return;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable()
    {
        com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry r0;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry $r1;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable>;

        return $r1;
    }

    public void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry r0;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r1;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry;

        r1 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        r0.<com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable> = r1;

        return;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable()
    {
        com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry r0;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry $r1;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable>;

        return $r1;
    }

    public void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry r0;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r1;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry;

        r1 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        r0.<com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable> = r1;

        return;
    }
}
