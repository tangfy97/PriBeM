public class com.hp.hpl.jena.sparql.algebra.table.TableWriter extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.algebra.table.TableWriter r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.table.TableWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String asSSE(com.hp.hpl.jena.sparql.algebra.Table)
    {
        org.apache.jena.atlas.io.IndentedLineBuffer $r0;
        com.hp.hpl.jena.sparql.algebra.Table r1;
        java.lang.String $r2;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Table;

        $r0 = new org.apache.jena.atlas.io.IndentedLineBuffer;

        specialinvoke $r0.<org.apache.jena.atlas.io.IndentedLineBuffer: void <init>()>();

        staticinvoke <com.hp.hpl.jena.sparql.algebra.table.TableWriter: void output(com.hp.hpl.jena.sparql.algebra.Table,org.apache.jena.atlas.io.IndentedWriter)>(r1, $r0);

        $r2 = virtualinvoke $r0.<org.apache.jena.atlas.io.IndentedLineBuffer: java.lang.String asString()>();

        return $r2;
    }

    public static void output(com.hp.hpl.jena.sparql.algebra.Table, org.apache.jena.atlas.io.IndentedWriter)
    {
        com.hp.hpl.jena.sparql.algebra.Table r0;
        org.apache.jena.atlas.io.IndentedWriter r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.Table;

        r1 := @parameter1: org.apache.jena.atlas.io.IndentedWriter;

        staticinvoke <com.hp.hpl.jena.sparql.algebra.table.TableWriter: void output(com.hp.hpl.jena.sparql.algebra.Table,org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r0, r1, null);

        return;
    }

    public static void output(com.hp.hpl.jena.sparql.algebra.Table, org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r4;
        com.hp.hpl.jena.sparql.serializer.SerializationContext r0;
        com.hp.hpl.jena.sparql.algebra.Table r2;
        org.apache.jena.atlas.io.IndentedWriter r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r3;
        boolean $z0;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.Table;

        r1 := @parameter1: org.apache.jena.atlas.io.IndentedWriter;

        r0 := @parameter2: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        if r0 == null goto label1;

     label1:
        virtualinvoke r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("(table");

        virtualinvoke r1.<org.apache.jena.atlas.io.IndentedWriter: void incIndent()>();

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.sparql.algebra.Table: com.hp.hpl.jena.sparql.engine.QueryIterator iterator(com.hp.hpl.jena.sparql.engine.ExecutionContext)>(null);

     label2:
        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.engine.QueryIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        virtualinvoke r1.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.engine.QueryIterator: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()>();

        staticinvoke <com.hp.hpl.jena.sparql.algebra.table.TableWriter: void output(com.hp.hpl.jena.sparql.engine.binding.Binding,org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r4, r1, r0);

        goto label2;

     label3:
        virtualinvoke r1.<org.apache.jena.atlas.io.IndentedWriter: void decIndent()>();

        virtualinvoke r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

        return;
    }

    private static void output(com.hp.hpl.jena.sparql.engine.binding.Binding, org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.serializer.SerializationContext r8;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.sparql.core.Var r4;
        org.apache.jena.atlas.io.IndentedWriter r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        java.lang.Object $r3;
        java.lang.String $r6, $r7;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r0 := @parameter1: org.apache.jena.atlas.io.IndentedWriter;

        r8 := @parameter2: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("(row");

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: java.util.Iterator vars()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.sparql.core.Var) $r3;

        $r5 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>(r4);

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("(");

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node)>(r4);

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r6);

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node)>($r5);

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r7);

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

        return;
    }
}
