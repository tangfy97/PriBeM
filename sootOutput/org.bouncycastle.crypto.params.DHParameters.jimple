public class org.bouncycastle.crypto.params.DHParameters extends java.lang.Object implements org.bouncycastle.crypto.CipherParameters
{
    private static final int DEFAULT_MINIMUM_LENGTH;
    private java.math.BigInteger g;
    private java.math.BigInteger p;
    private java.math.BigInteger q;
    private java.math.BigInteger j;
    private int m;
    private int l;
    private org.bouncycastle.crypto.params.DHValidationParameters validation;

    private static int getDefaultMParam(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return 160;

     label1:
        if i0 >= 160 goto label2;

        $i1 = i0;

        goto label3;

     label2:
        $i1 = 160;

     label3:
        return $i1;
    }

    public void <init>(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger r1, r2;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: java.math.BigInteger;

        specialinvoke r0.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>(r1, r2, null, 0);

        return;
    }

    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger r1, r2, r3;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: java.math.BigInteger;

        r3 := @parameter2: java.math.BigInteger;

        specialinvoke r0.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>(r1, r2, r3, 0);

        return;
    }

    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int)
    {
        int i0, $i1;
        java.math.BigInteger r1, r2, r3;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: java.math.BigInteger;

        r3 := @parameter2: java.math.BigInteger;

        i0 := @parameter3: int;

        $i1 = staticinvoke <org.bouncycastle.crypto.params.DHParameters: int getDefaultMParam(int)>(i0);

        specialinvoke r0.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int,java.math.BigInteger,org.bouncycastle.crypto.params.DHValidationParameters)>(r1, r2, r3, $i1, i0, null, null);

        return;
    }

    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int, int)
    {
        int i0, i1;
        java.math.BigInteger r1, r2, r3;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: java.math.BigInteger;

        r3 := @parameter2: java.math.BigInteger;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int,java.math.BigInteger,org.bouncycastle.crypto.params.DHValidationParameters)>(r1, r2, r3, i0, i1, null, null);

        return;
    }

    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.params.DHValidationParameters)
    {
        org.bouncycastle.crypto.params.DHValidationParameters r5;
        java.math.BigInteger r1, r2, r3, r4;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: java.math.BigInteger;

        r3 := @parameter2: java.math.BigInteger;

        r4 := @parameter3: java.math.BigInteger;

        r5 := @parameter4: org.bouncycastle.crypto.params.DHValidationParameters;

        specialinvoke r0.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int,java.math.BigInteger,org.bouncycastle.crypto.params.DHValidationParameters)>(r1, r2, r3, 160, 0, r4, r5);

        return;
    }

    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int, int, java.math.BigInteger, org.bouncycastle.crypto.params.DHValidationParameters)
    {
        java.lang.IllegalArgumentException $r6, $r7;
        int i0, i1, $i2;
        org.bouncycastle.crypto.params.DHValidationParameters r5;
        java.math.BigInteger r1, r2, r3, r4;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        r2 := @parameter0: java.math.BigInteger;

        r1 := @parameter1: java.math.BigInteger;

        r3 := @parameter2: java.math.BigInteger;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        r4 := @parameter5: java.math.BigInteger;

        r5 := @parameter6: org.bouncycastle.crypto.params.DHValidationParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 == 0 goto label2;

        $i2 = virtualinvoke r2.<java.math.BigInteger: int bitLength()>();

        if i0 < $i2 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("when l value specified, it must be less than bitlength(p)");

        throw $r7;

     label1:
        if i0 >= i1 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("when l value specified, it may not be less than m value");

        throw $r6;

     label2:
        r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger g> = r1;

        r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger p> = r2;

        r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger q> = r3;

        r0.<org.bouncycastle.crypto.params.DHParameters: int m> = i1;

        r0.<org.bouncycastle.crypto.params.DHParameters: int l> = i0;

        r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger j> = r4;

        r0.<org.bouncycastle.crypto.params.DHParameters: org.bouncycastle.crypto.params.DHValidationParameters validation> = r5;

        return;
    }

    public java.math.BigInteger getP()
    {
        java.math.BigInteger $r1;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        $r1 = r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger p>;

        return $r1;
    }

    public java.math.BigInteger getG()
    {
        java.math.BigInteger $r1;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        $r1 = r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger g>;

        return $r1;
    }

    public java.math.BigInteger getQ()
    {
        java.math.BigInteger $r1;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        $r1 = r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger q>;

        return $r1;
    }

    public java.math.BigInteger getJ()
    {
        java.math.BigInteger $r1;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        $r1 = r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger j>;

        return $r1;
    }

    public int getM()
    {
        int $i0;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        $i0 = r0.<org.bouncycastle.crypto.params.DHParameters: int m>;

        return $i0;
    }

    public int getL()
    {
        int $i0;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        $i0 = r0.<org.bouncycastle.crypto.params.DHParameters: int l>;

        return $i0;
    }

    public org.bouncycastle.crypto.params.DHValidationParameters getValidationParameters()
    {
        org.bouncycastle.crypto.params.DHValidationParameters $r1;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        $r1 = r0.<org.bouncycastle.crypto.params.DHParameters: org.bouncycastle.crypto.params.DHValidationParameters validation>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.math.BigInteger $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object r0;
        org.bouncycastle.crypto.params.DHParameters r1, r2;

        r2 := @this: org.bouncycastle.crypto.params.DHParameters;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.DHParameters;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.bouncycastle.crypto.params.DHParameters) r0;

        $r3 = virtualinvoke r2.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        if $r3 == null goto label2;

        $r9 = virtualinvoke r2.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        $r10 = virtualinvoke r1.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        $z3 = virtualinvoke $r9.<java.math.BigInteger: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label3;

        return 0;

     label2:
        $r4 = virtualinvoke r1.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        if $r4 == null goto label3;

        return 0;

     label3:
        $r5 = virtualinvoke r1.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getP()>();

        $r6 = r2.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger p>;

        $z1 = virtualinvoke $r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label4;

        $r7 = virtualinvoke r1.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getG()>();

        $r8 = r2.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger g>;

        $z2 = virtualinvoke $r7.<java.math.BigInteger: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2, $i3, $i4;
        java.math.BigInteger $r1, $r2, $r3, $r4;
        org.bouncycastle.crypto.params.DHParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.DHParameters;

        $r1 = virtualinvoke r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getP()>();

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $r2 = virtualinvoke r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getG()>();

        $i1 = virtualinvoke $r2.<java.math.BigInteger: int hashCode()>();

        $i2 = $i0 ^ $i1;

        $r3 = virtualinvoke r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r0.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        $i4 = virtualinvoke $r4.<java.math.BigInteger: int hashCode()>();

        goto label2;

     label1:
        $i4 = 0;

     label2:
        $i3 = $i2 ^ $i4;

        return $i3;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.params.DHParameters: int DEFAULT_MINIMUM_LENGTH> = 160;

        return;
    }
}
