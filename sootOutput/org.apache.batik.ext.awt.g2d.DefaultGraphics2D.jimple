public class org.apache.batik.ext.awt.g2d.DefaultGraphics2D extends org.apache.batik.ext.awt.g2d.AbstractGraphics2D
{
    private java.awt.Graphics2D fmg;

    public void <init>(boolean)
    {
        java.awt.image.BufferedImage $r1;
        java.awt.Graphics2D $r2;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r0;
        boolean z0;

        r0 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.batik.ext.awt.g2d.AbstractGraphics2D: void <init>(boolean)>(z0);

        $r1 = new java.awt.image.BufferedImage;

        specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, 1, 2);

        $r2 = virtualinvoke $r1.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        r0.<org.apache.batik.ext.awt.g2d.DefaultGraphics2D: java.awt.Graphics2D fmg> = $r2;

        return;
    }

    public void <init>(org.apache.batik.ext.awt.g2d.DefaultGraphics2D)
    {
        java.awt.image.BufferedImage $r2;
        java.awt.Graphics2D $r3;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r0, r1;

        r0 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r1 := @parameter0: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        specialinvoke r0.<org.apache.batik.ext.awt.g2d.AbstractGraphics2D: void <init>(org.apache.batik.ext.awt.g2d.AbstractGraphics2D)>(r1);

        $r2 = new java.awt.image.BufferedImage;

        specialinvoke $r2.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, 1, 2);

        $r3 = virtualinvoke $r2.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        r0.<org.apache.batik.ext.awt.g2d.DefaultGraphics2D: java.awt.Graphics2D fmg> = $r3;

        return;
    }

    public java.awt.Graphics create()
    {
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D $r0, r1;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        $r0 = new org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        specialinvoke $r0.<org.apache.batik.ext.awt.g2d.DefaultGraphics2D: void <init>(org.apache.batik.ext.awt.g2d.DefaultGraphics2D)>(r1);

        return $r0;
    }

    public boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver)
    {
        java.io.PrintStream $r0;
        java.awt.Image r2;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;
        int i0, i1;
        java.awt.image.ImageObserver r3;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r2 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: java.awt.image.ImageObserver;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("drawImage");

        return 1;
    }

    public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver)
    {
        java.io.PrintStream $r0;
        java.awt.Image r2;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;
        java.awt.image.ImageObserver r3;
        int i0, i1, i2, i3;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r2 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r3 := @parameter5: java.awt.image.ImageObserver;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("drawImage");

        return 1;
    }

    public void dispose()
    {
        java.io.PrintStream $r0;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("dispose");

        return;
    }

    public void draw(java.awt.Shape)
    {
        java.io.PrintStream $r0;
        java.awt.Shape r2;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r2 := @parameter0: java.awt.Shape;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("draw(Shape)");

        return;
    }

    public void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform)
    {
        java.io.PrintStream $r0;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;
        java.awt.image.RenderedImage r2;
        java.awt.geom.AffineTransform r3;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r2 := @parameter0: java.awt.image.RenderedImage;

        r3 := @parameter1: java.awt.geom.AffineTransform;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("drawRenderedImage");

        return;
    }

    public void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform)
    {
        java.io.PrintStream $r0;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;
        java.awt.image.renderable.RenderableImage r2;
        java.awt.geom.AffineTransform r3;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r2 := @parameter0: java.awt.image.renderable.RenderableImage;

        r3 := @parameter1: java.awt.geom.AffineTransform;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("drawRenderableImage");

        return;
    }

    public void drawString(java.lang.String, float, float)
    {
        java.io.PrintStream $r0;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;
        float f0, f1;
        java.lang.String r2;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r2 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("drawString(String)");

        return;
    }

    public void drawString(java.text.AttributedCharacterIterator, float, float)
    {
        java.io.PrintStream $r0;
        java.text.AttributedCharacterIterator r2;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;
        float f0, f1;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r2 := @parameter0: java.text.AttributedCharacterIterator;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("drawString(AttributedCharacterIterator)");

        return;
    }

    public void fill(java.awt.Shape)
    {
        java.io.PrintStream $r0;
        java.awt.Shape r2;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r2 := @parameter0: java.awt.Shape;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("fill");

        return;
    }

    public java.awt.GraphicsConfiguration getDeviceConfiguration()
    {
        java.io.PrintStream $r0;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("getDeviceConviguration");

        return null;
    }

    public java.awt.FontMetrics getFontMetrics(java.awt.Font)
    {
        java.awt.FontMetrics $r3;
        java.awt.Graphics2D $r2;
        java.awt.Font r1;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r0;

        r0 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r1 := @parameter0: java.awt.Font;

        $r2 = r0.<org.apache.batik.ext.awt.g2d.DefaultGraphics2D: java.awt.Graphics2D fmg>;

        $r3 = virtualinvoke $r2.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r1);

        return $r3;
    }

    public void setXORMode(java.awt.Color)
    {
        java.io.PrintStream $r0;
        java.awt.Color r2;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        r2 := @parameter0: java.awt.Color;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("setXORMode");

        return;
    }

    public void copyArea(int, int, int, int, int, int)
    {
        java.io.PrintStream $r0;
        org.apache.batik.ext.awt.g2d.DefaultGraphics2D r1;
        int i0, i1, i2, i3, i4, i5;

        r1 := @this: org.apache.batik.ext.awt.g2d.DefaultGraphics2D;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("copyArea");

        return;
    }
}
