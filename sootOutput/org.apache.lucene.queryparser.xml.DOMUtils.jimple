public class org.apache.lucene.queryparser.xml.DOMUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.lucene.queryparser.xml.DOMUtils r0;

        r0 := @this: org.apache.lucene.queryparser.xml.DOMUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.w3c.dom.Element getChildByTagOrFail(org.w3c.dom.Element, java.lang.String) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.queryparser.xml.ParserException $r3;
        org.w3c.dom.Element r0, $r2;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        java.lang.String r1, $r5, $r10;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: org.w3c.dom.Element getChildByTagName(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        if null != $r2 goto label1;

        $r3 = new org.apache.lucene.queryparser.xml.ParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" missing \"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" child element");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.lucene.queryparser.xml.ParserException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        return $r2;
    }

    public static org.w3c.dom.Element getFirstChildOrFail(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.queryparser.xml.ParserException $r2;
        org.w3c.dom.Element r0, $r1;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Element)>(r0);

        if null != $r1 goto label1;

        $r2 = new org.apache.lucene.queryparser.xml.ParserException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not contain a child element");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.lucene.queryparser.xml.ParserException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        return $r1;
    }

    public static java.lang.String getAttributeOrFail(org.w3c.dom.Element, java.lang.String) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.queryparser.xml.ParserException $r3;
        org.w3c.dom.Element r0;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        java.lang.String r1, $r2, $r5, $r10;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        if null != $r2 goto label1;

        $r3 = new org.apache.lucene.queryparser.xml.ParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" missing \"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" attribute");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.lucene.queryparser.xml.ParserException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        return $r2;
    }

    public static java.lang.String getAttributeWithInheritanceOrFail(org.w3c.dom.Element, java.lang.String) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.queryparser.xml.ParserException $r3;
        org.w3c.dom.Element r0;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        java.lang.String r1, $r2, $r5, $r10;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getAttributeWithInheritance(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        if null != $r2 goto label1;

        $r3 = new org.apache.lucene.queryparser.xml.ParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" missing \"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" attribute");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.lucene.queryparser.xml.ParserException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        return $r2;
    }

    public static java.lang.String getNonBlankTextOrFail(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.queryparser.xml.ParserException $r2;
        org.w3c.dom.Element r0;
        int $i0;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r1, $r4, $r7, r8;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getText(org.w3c.dom.Node)>(r0);

        r8 = $r1;

        if null == $r1 goto label1;

        r8 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

     label1:
        if null == r8 goto label2;

        $i0 = virtualinvoke r8.<java.lang.String: int length()>();

        if 0 != $i0 goto label3;

     label2:
        $r2 = new org.apache.lucene.queryparser.xml.ParserException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no text");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.lucene.queryparser.xml.ParserException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        return r8;
    }

    public static org.w3c.dom.Element getChildByTagName(org.w3c.dom.Element, java.lang.String)
    {
        short $s0;
        org.w3c.dom.Element r0, $r3;
        org.w3c.dom.Node r4;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r4 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r4 == null goto label3;

        $s0 = interfaceinvoke r4.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label2;

        $r2 = interfaceinvoke r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r3 = (org.w3c.dom.Element) r4;

        return $r3;

     label2:
        r4 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label3:
        return null;
    }

    public static java.lang.String getAttributeWithInheritance(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0, r4;
        org.w3c.dom.Node $r3;
        java.lang.String r1, $r2, $r5, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r6 = "";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label5;

     label1:
        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        if $r3 == r0 goto label2;

        if $r3 != null goto label3;

     label2:
        return null;

     label3:
        $z0 = $r3 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label4;

        r4 = (org.w3c.dom.Element) $r3;

        $r5 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getAttributeWithInheritance(org.w3c.dom.Element,java.lang.String)>(r4, r1);

        return $r5;

     label4:
        return null;

     label5:
        return $r2;
    }

    public static java.lang.String getChildTextByTagName(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0, $r2;
        java.lang.String r1, $r3;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: org.w3c.dom.Element getChildByTagName(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        if $r2 == null goto label1;

        $r3 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getText(org.w3c.dom.Node)>($r2);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public static org.w3c.dom.Element insertChild(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Text $r6;
        org.w3c.dom.Element r0, $r3;
        org.w3c.dom.Document $r1, $r5;
        java.lang.String r2, r4;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>(r2);

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        if r4 == null goto label1;

        $r5 = interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r4);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

     label1:
        return $r3;
    }

    public static java.lang.String getAttribute(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r0;
        java.lang.String r1, $r2, r3, $r4, $r5;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $r5 = r3;

        goto label3;

     label2:
        $r5 = $r2;

     label3:
        return $r5;
    }

    public static float getAttribute(org.w3c.dom.Element, java.lang.String, float)
    {
        org.w3c.dom.Element r0;
        float f0, $f1;
        java.lang.String r1, $r2, $r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r3 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $f1 = f0;

        goto label3;

     label2:
        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r2);

     label3:
        return $f1;
    }

    public static int getAttribute(org.w3c.dom.Element, java.lang.String, int)
    {
        org.w3c.dom.Element r0;
        int i0, $i1;
        java.lang.String r1, $r2, $r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r3 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $i1 = i0;

        goto label3;

     label2:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label3:
        return $i1;
    }

    public static boolean getAttribute(org.w3c.dom.Element, java.lang.String, boolean)
    {
        org.w3c.dom.Element r0;
        java.lang.Boolean $r4;
        java.lang.String r1, $r2, $r3;
        boolean z0, $z1, $z2;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r3 = "";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = z0;

        goto label3;

     label2:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        return $z2;
    }

    public static java.lang.String getText(org.w3c.dom.Node)
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        org.w3c.dom.Node r1;

        r1 := @parameter0: org.w3c.dom.Node;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: void getTextBuffer(org.w3c.dom.Node,java.lang.StringBuilder)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Element)
    {
        short $s0;
        org.w3c.dom.Element r0, $r1;
        org.w3c.dom.Node r2;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r2 == null goto label3;

        $s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label2;

        $r1 = (org.w3c.dom.Element) r2;

        return $r1;

     label2:
        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label3:
        return null;
    }

    private static void getTextBuffer(org.w3c.dom.Node, java.lang.StringBuilder)
    {
        short $s0;
        org.w3c.dom.Node r0, r3;
        int $i1;
        java.lang.StringBuilder r1;
        java.lang.String $r2;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: java.lang.StringBuilder;

        r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r3 == null goto label6;

        $s0 = interfaceinvoke r3.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label5;
            case 3: goto label2;
            case 4: goto label5;
            case 5: goto label4;
            default: goto label5;
        };

     label2:
        $r2 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        goto label5;

     label3:
        staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: void getTextBuffer(org.w3c.dom.Node,java.lang.StringBuilder)>(r3, r1);

        goto label5;

     label4:
        staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: void getTextBuffer(org.w3c.dom.Node,java.lang.StringBuilder)>(r3, r1);

     label5:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label6:
        return;
    }

    public static org.w3c.dom.Document loadXML(java.io.Reader)
    {
        org.xml.sax.InputSource $r2;
        java.io.Reader r3;
        java.lang.RuntimeException $r6, $r12;
        java.lang.Exception $r5, $r11;
        org.w3c.dom.Document $r4;
        javax.xml.parsers.DocumentBuilder $r1;
        java.lang.StringBuilder $r7, $r8, $r9;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.lang.String $r10;

        r3 := @parameter0: java.io.Reader;

        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label1:
        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Parser configuration error", $r11);

        throw $r12;

     label4:
        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r3);

        $r4 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r2);

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing file:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r5);

        throw $r6;

     label7:
        return $r4;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }
}
