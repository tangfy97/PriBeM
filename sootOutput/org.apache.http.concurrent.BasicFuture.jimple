public class org.apache.http.concurrent.BasicFuture extends java.lang.Object implements java.util.concurrent.Future, org.apache.http.concurrent.Cancellable
{
    private final org.apache.http.concurrent.FutureCallback callback;
    private volatile boolean completed;
    private volatile boolean cancelled;
    private volatile java.lang.Object result;
    private volatile java.lang.Exception ex;

    public void <init>(org.apache.http.concurrent.FutureCallback)
    {
        org.apache.http.concurrent.BasicFuture r0;
        org.apache.http.concurrent.FutureCallback r1;

        r0 := @this: org.apache.http.concurrent.BasicFuture;

        r1 := @parameter0: org.apache.http.concurrent.FutureCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.concurrent.BasicFuture: org.apache.http.concurrent.FutureCallback callback> = r1;

        return;
    }

    public boolean isCancelled()
    {
        org.apache.http.concurrent.BasicFuture r0;
        boolean $z0;

        r0 := @this: org.apache.http.concurrent.BasicFuture;

        $z0 = r0.<org.apache.http.concurrent.BasicFuture: boolean cancelled>;

        return $z0;
    }

    public boolean isDone()
    {
        org.apache.http.concurrent.BasicFuture r0;
        boolean $z0;

        r0 := @this: org.apache.http.concurrent.BasicFuture;

        $z0 = r0.<org.apache.http.concurrent.BasicFuture: boolean completed>;

        return $z0;
    }

    private java.lang.Object getResult() throws java.util.concurrent.ExecutionException
    {
        java.util.concurrent.ExecutionException $r3;
        org.apache.http.concurrent.BasicFuture r0;
        java.lang.Object $r2;
        java.lang.Exception $r1, $r4;

        r0 := @this: org.apache.http.concurrent.BasicFuture;

        $r1 = r0.<org.apache.http.concurrent.BasicFuture: java.lang.Exception ex>;

        if $r1 == null goto label1;

        $r3 = new java.util.concurrent.ExecutionException;

        $r4 = r0.<org.apache.http.concurrent.BasicFuture: java.lang.Exception ex>;

        specialinvoke $r3.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r4);

        throw $r3;

     label1:
        $r2 = r0.<org.apache.http.concurrent.BasicFuture: java.lang.Object result>;

        return $r2;
    }

    public synchronized java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        org.apache.http.concurrent.BasicFuture r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.http.concurrent.BasicFuture;

     label1:
        $z0 = r0.<org.apache.http.concurrent.BasicFuture: boolean completed>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<java.lang.Object: void wait()>();

        goto label1;

     label2:
        $r1 = specialinvoke r0.<org.apache.http.concurrent.BasicFuture: java.lang.Object getResult()>();

        return $r1;
    }

    public synchronized java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeoutException $r6, $r7;
        long l0, $l1, l3, $l5, $l6, $l8, l9;
        byte $b2, $b4, $b7;
        int $i10, $i11, $i12;
        boolean $z0, $z1;
        java.util.concurrent.TimeUnit r0;
        org.apache.http.concurrent.BasicFuture r1;
        java.lang.Object $r3, $r5;

        r1 := @this: org.apache.http.concurrent.BasicFuture;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        $l1 = virtualinvoke r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);

        $b2 = $l1 cmp 0L;

        $i10 = (int) $b2;

        if $i10 > 0 goto label1;

        $l8 = 0L;

        goto label2;

     label1:
        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label2:
        l3 = $l8;

        l9 = $l1;

        $z0 = r1.<org.apache.http.concurrent.BasicFuture: boolean completed>;

        if $z0 == 0 goto label3;

        $r5 = specialinvoke r1.<org.apache.http.concurrent.BasicFuture: java.lang.Object getResult()>();

        return $r5;

     label3:
        $b4 = $l1 cmp 0L;

        $i11 = (int) $b4;

        if $i11 > 0 goto label4;

        $r6 = new java.util.concurrent.TimeoutException;

        specialinvoke $r6.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r6;

     label4:
        virtualinvoke r1.<java.lang.Object: void wait(long)>(l9);

        $z1 = r1.<org.apache.http.concurrent.BasicFuture: boolean completed>;

        if $z1 == 0 goto label5;

        $r3 = specialinvoke r1.<org.apache.http.concurrent.BasicFuture: java.lang.Object getResult()>();

        return $r3;

     label5:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l6 = $l5 - l3;

        l9 = $l1 - $l6;

        $b7 = l9 cmp 0L;

        $i12 = (int) $b7;

        if $i12 > 0 goto label4;

        $r7 = new java.util.concurrent.TimeoutException;

        specialinvoke $r7.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r7;
    }

    public synchronized boolean completed(java.lang.Object)
    {
        org.apache.http.concurrent.BasicFuture r0;
        java.lang.Object r1;
        org.apache.http.concurrent.FutureCallback $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.http.concurrent.BasicFuture;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.http.concurrent.BasicFuture: boolean completed>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r0.<org.apache.http.concurrent.BasicFuture: boolean completed> = 1;

        r0.<org.apache.http.concurrent.BasicFuture: java.lang.Object result> = r1;

        $r2 = r0.<org.apache.http.concurrent.BasicFuture: org.apache.http.concurrent.FutureCallback callback>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.http.concurrent.BasicFuture: org.apache.http.concurrent.FutureCallback callback>;

        interfaceinvoke $r3.<org.apache.http.concurrent.FutureCallback: void completed(java.lang.Object)>(r1);

     label2:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        return 1;
    }

    public synchronized boolean failed(java.lang.Exception)
    {
        org.apache.http.concurrent.BasicFuture r0;
        org.apache.http.concurrent.FutureCallback $r2, $r3;
        java.lang.Exception r1;
        boolean $z0;

        r0 := @this: org.apache.http.concurrent.BasicFuture;

        r1 := @parameter0: java.lang.Exception;

        $z0 = r0.<org.apache.http.concurrent.BasicFuture: boolean completed>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r0.<org.apache.http.concurrent.BasicFuture: boolean completed> = 1;

        r0.<org.apache.http.concurrent.BasicFuture: java.lang.Exception ex> = r1;

        $r2 = r0.<org.apache.http.concurrent.BasicFuture: org.apache.http.concurrent.FutureCallback callback>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.http.concurrent.BasicFuture: org.apache.http.concurrent.FutureCallback callback>;

        interfaceinvoke $r3.<org.apache.http.concurrent.FutureCallback: void failed(java.lang.Exception)>(r1);

     label2:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        return 1;
    }

    public synchronized boolean cancel(boolean)
    {
        org.apache.http.concurrent.BasicFuture r0;
        org.apache.http.concurrent.FutureCallback $r1, $r2;
        boolean $z0, z1;

        r0 := @this: org.apache.http.concurrent.BasicFuture;

        z1 := @parameter0: boolean;

        $z0 = r0.<org.apache.http.concurrent.BasicFuture: boolean completed>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r0.<org.apache.http.concurrent.BasicFuture: boolean completed> = 1;

        r0.<org.apache.http.concurrent.BasicFuture: boolean cancelled> = 1;

        $r1 = r0.<org.apache.http.concurrent.BasicFuture: org.apache.http.concurrent.FutureCallback callback>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.http.concurrent.BasicFuture: org.apache.http.concurrent.FutureCallback callback>;

        interfaceinvoke $r2.<org.apache.http.concurrent.FutureCallback: void cancelled()>();

     label2:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        return 1;
    }

    public boolean cancel()
    {
        org.apache.http.concurrent.BasicFuture r0;
        boolean $z0;

        r0 := @this: org.apache.http.concurrent.BasicFuture;

        $z0 = virtualinvoke r0.<org.apache.http.concurrent.BasicFuture: boolean cancel(boolean)>(1);

        return $z0;
    }
}
