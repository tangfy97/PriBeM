public class org.apache.xml.res.XMLMessages extends java.lang.Object
{
    protected java.util.Locale fLocale;
    private static java.util.ListResourceBundle XMLBundle;
    private static final java.lang.String XML_ERROR_RESOURCES;
    protected static java.lang.String BAD_CODE;
    protected static java.lang.String FORMAT_FAILED;

    public void <init>()
    {
        org.apache.xml.res.XMLMessages r0;
        java.util.Locale $r1;

        r0 := @this: org.apache.xml.res.XMLMessages;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r0.<org.apache.xml.res.XMLMessages: java.util.Locale fLocale> = $r1;

        return;
    }

    public void setLocale(java.util.Locale)
    {
        org.apache.xml.res.XMLMessages r0;
        java.util.Locale r1;

        r0 := @this: org.apache.xml.res.XMLMessages;

        r1 := @parameter0: java.util.Locale;

        r0.<org.apache.xml.res.XMLMessages: java.util.Locale fLocale> = r1;

        return;
    }

    public java.util.Locale getLocale()
    {
        org.apache.xml.res.XMLMessages r0;
        java.util.Locale $r1;

        r0 := @this: org.apache.xml.res.XMLMessages;

        $r1 = r0.<org.apache.xml.res.XMLMessages: java.util.Locale fLocale>;

        return $r1;
    }

    public static final java.lang.String createXMLMessage(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r3;
        java.lang.String r2, $r5;
        java.util.ListResourceBundle $r0, $r1, $r4, $r6;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        $r0 = <org.apache.xml.res.XMLMessages: java.util.ListResourceBundle XMLBundle>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.apache.xml.res.XMLMessages: java.util.ListResourceBundle loadResourceBundle(java.lang.String)>("org.apache.xml.res.XMLErrorResources");

        <org.apache.xml.res.XMLMessages: java.util.ListResourceBundle XMLBundle> = $r6;

     label1:
        $r1 = <org.apache.xml.res.XMLMessages: java.util.ListResourceBundle XMLBundle>;

        if $r1 == null goto label2;

        $r4 = <org.apache.xml.res.XMLMessages: java.util.ListResourceBundle XMLBundle>;

        $r5 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createMsg(java.util.ListResourceBundle,java.lang.String,java.lang.Object[])>($r4, r2, r3);

        return $r5;

     label2:
        return "Could not load any resource bundles.";
    }

    public static final java.lang.String createMsg(java.util.ListResourceBundle, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r1;
        java.lang.StringBuffer $r9, $r10, $r11, $r12;
        int i0, i1;
        java.lang.String r0, $r5, $r7, $r8, r13, r14;
        boolean z0;
        java.lang.RuntimeException $r2;
        java.util.ListResourceBundle r4;
        java.lang.Exception $r6;
        java.lang.Object $r3;

        r4 := @parameter0: java.util.ListResourceBundle;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object[];

        z0 = 0;

        r13 = null;

        if r0 == null goto label01;

        r13 = virtualinvoke r4.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0);

     label01:
        if r13 != null goto label02;

        $r5 = <org.apache.xml.res.XMLMessages: java.lang.String BAD_CODE>;

        r13 = virtualinvoke r4.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>($r5);

        z0 = 1;

     label02:
        if r1 == null goto label10;

     label03:
        i0 = lengthof r1;

        i1 = 0;

        goto label06;

     label04:
        $r3 = r1[i1];

        if null != $r3 goto label05;

        r1[i1] = "";

     label05:
        i1 = i1 + 1;

     label06:
        if i1 < i0 goto label04;

        r14 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r13, r1);

     label07:
        goto label09;

     label08:
        $r6 := @caughtexception;

        $r7 = <org.apache.xml.res.XMLMessages: java.lang.String FORMAT_FAILED>;

        $r8 = virtualinvoke r4.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>($r7);

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        goto label11;

     label10:
        r14 = r13;

     label11:
        if z0 == 0 goto label12;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(r14);

        throw $r2;

     label12:
        return r14;

        catch java.lang.Exception from label03 to label07 with label08;
    }

    public static java.util.ListResourceBundle loadResourceBundle(java.lang.String) throws java.util.MissingResourceException
    {
        java.util.MissingResourceException $r4, $r5, $r10;
        java.util.ListResourceBundle $r3, $r13;
        java.util.ResourceBundle $r2, $r12;
        java.util.Locale $r0, $r11;
        java.lang.StringBuffer $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label1:
        $r2 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>(r1, $r0);

        $r3 = (java.util.ListResourceBundle) $r2;

        return $r3;

     label2:
        $r10 := @caughtexception;

     label3:
        $r11 = new java.util.Locale;

        specialinvoke $r11.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>("en", "US");

        $r12 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>(r1, $r11);

        $r13 = (java.util.ListResourceBundle) $r12;

        return $r13;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.util.MissingResourceException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not load any resource bundles.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r9, r1, "");

        throw $r5;

        catch java.util.MissingResourceException from label1 to label2 with label2;
        catch java.util.MissingResourceException from label3 to label4 with label4;
    }

    protected static java.lang.String getResourceSuffix(java.util.Locale)
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r7, $r8, $r9, $r10;
        java.util.Locale r2;
        java.lang.String $r3, $r5, $r6, r11;
        boolean $z0;

        r2 := @parameter0: java.util.Locale;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_");

        $r3 = virtualinvoke r2.<java.util.Locale: java.lang.String getLanguage()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        r11 = $r5;

        $r6 = virtualinvoke r2.<java.util.Locale: java.lang.String getCountry()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("TW");

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return r11;
    }

    static void <clinit>()
    {
        <org.apache.xml.res.XMLMessages: java.lang.String XML_ERROR_RESOURCES> = "org.apache.xml.res.XMLErrorResources";

        <org.apache.xml.res.XMLMessages: java.util.ListResourceBundle XMLBundle> = null;

        <org.apache.xml.res.XMLMessages: java.lang.String BAD_CODE> = "BAD_CODE";

        <org.apache.xml.res.XMLMessages: java.lang.String FORMAT_FAILED> = "FORMAT_FAILED";

        return;
    }
}
