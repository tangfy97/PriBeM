public final enum class org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction extends java.lang.Enum
{
    public static final enum org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction FORWARD;
    public static final enum org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction BACKWARD;
    public static final enum org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction LEFT;
    public static final enum org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction RIGHT;
    java.lang.String direction;
    private static final org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction[] $VALUES;

    public static org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction[] values()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction[] $r0, $r2;

        $r0 = <org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction[]) $r1;

        return $r2;
    }

    public static org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction valueOf(java.lang.String)
    {
        org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/waveprotocol/wave/client/editor/selection/html/SelectionWebkit$Direction;", r0);

        $r2 = (org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: java.lang.String direction> = r2;

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction[] $r4;
        org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;

        $r0 = new org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction;

        specialinvoke $r0.<org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: void <init>(java.lang.String,int,java.lang.String)>("FORWARD", 0, "forward");

        <org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction FORWARD> = $r0;

        $r1 = new org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction;

        specialinvoke $r1.<org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: void <init>(java.lang.String,int,java.lang.String)>("BACKWARD", 1, "backward");

        <org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction BACKWARD> = $r1;

        $r2 = new org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction;

        specialinvoke $r2.<org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: void <init>(java.lang.String,int,java.lang.String)>("LEFT", 2, "left");

        <org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction LEFT> = $r2;

        $r3 = new org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction;

        specialinvoke $r3.<org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: void <init>(java.lang.String,int,java.lang.String)>("RIGHT", 3, "right");

        <org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction RIGHT> = $r3;

        $r4 = newarray (org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction)[4];

        $r5 = <org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction FORWARD>;

        $r4[0] = $r5;

        $r6 = <org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction BACKWARD>;

        $r4[1] = $r6;

        $r7 = <org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction LEFT>;

        $r4[2] = $r7;

        $r8 = <org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction RIGHT>;

        $r4[3] = $r8;

        <org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction: org.waveprotocol.wave.client.editor.selection.html.SelectionWebkit$Direction[] $VALUES> = $r4;

        return;
    }
}
