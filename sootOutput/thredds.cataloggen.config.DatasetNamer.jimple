public class thredds.cataloggen.config.DatasetNamer extends java.lang.Object
{
    private static org.slf4j.Logger logger;
    private thredds.catalog.InvDataset parentDataset;
    private java.lang.String name;
    private boolean addLevel;
    private thredds.cataloggen.config.DatasetNamerType type;
    private java.lang.String matchPattern;
    protected java.util.regex.Pattern regExpPattern;
    private java.lang.String substitutePattern;
    private java.lang.String attribContainer;
    private java.lang.String attribName;
    private boolean isValid;
    private java.lang.StringBuffer msgLog;

    public void <init>(thredds.catalog.InvDataset, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        thredds.cataloggen.config.DatasetNamer r0;
        java.lang.StringBuffer $r12;
        java.lang.String r2, r3, r4, r6, r7, r8, r9, $r18;
        thredds.catalog.InvDataset r1;
        boolean $z0;
        thredds.cataloggen.config.DatasetNamerType $r5, $r10;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16, $r17;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        r1 := @parameter0: thredds.catalog.InvDataset;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        r7 := @parameter5: java.lang.String;

        r8 := @parameter6: java.lang.String;

        r9 := @parameter7: java.lang.String;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r3);

        $r5 = staticinvoke <thredds.cataloggen.config.DatasetNamerType: thredds.cataloggen.config.DatasetNamerType getType(java.lang.String)>(r4);

        specialinvoke r0.<thredds.cataloggen.config.DatasetNamer: void <init>(thredds.catalog.InvDataset,java.lang.String,boolean,thredds.cataloggen.config.DatasetNamerType,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $z0, $r5, r6, r7, r8, r9);

        $r10 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType getType()>();

        if $r10 != null goto label1;

        r0.<thredds.cataloggen.config.DatasetNamer: boolean isValid> = 0;

        $r12 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.StringBuffer msgLog>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** DatasetNamer (1): invalid type [");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] for datasetNamer [");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

     label1:
        return;
    }

    public void <init>(thredds.catalog.InvDataset, java.lang.String, boolean, thredds.cataloggen.config.DatasetNamerType, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        thredds.cataloggen.config.DatasetNamer r0;
        java.lang.StringBuffer $r1, $r14, $r21;
        java.lang.String r3, r5, r6, r7, r8, $r11, $r18, $r23, $r26;
        thredds.catalog.InvDataset r2;
        boolean z0, $z1;
        java.util.regex.PatternSyntaxException $r19;
        thredds.cataloggen.config.DatasetNamerType r4, $r9, $r10;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r20, $r22, $r24, $r25;
        java.util.regex.Pattern $r12;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        r2 := @parameter0: thredds.catalog.InvDataset;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r4 := @parameter3: thredds.cataloggen.config.DatasetNamerType;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.cataloggen.config.DatasetNamer: thredds.catalog.InvDataset parentDataset> = null;

        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String name> = null;

        r0.<thredds.cataloggen.config.DatasetNamer: boolean addLevel> = 0;

        r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType type> = null;

        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String matchPattern> = null;

        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String substitutePattern> = null;

        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String attribContainer> = null;

        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String attribName> = null;

        r0.<thredds.cataloggen.config.DatasetNamer: boolean isValid> = 1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.StringBuffer msgLog> = $r1;

        r0.<thredds.cataloggen.config.DatasetNamer: thredds.catalog.InvDataset parentDataset> = r2;

        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String name> = r3;

        r0.<thredds.cataloggen.config.DatasetNamer: boolean addLevel> = z0;

        if r4 != null goto label1;

        r0.<thredds.cataloggen.config.DatasetNamer: boolean isValid> = 0;

        $r14 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.StringBuffer msgLog>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** DatasetNamer (1): null type for datasetNamer [");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

     label1:
        r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType type> = r4;

        if r5 == null goto label5;

        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String matchPattern> = r5;

        $r10 = <thredds.cataloggen.config.DatasetNamerType: thredds.cataloggen.config.DatasetNamerType REGULAR_EXPRESSION>;

        $r9 = r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType type>;

        $z1 = virtualinvoke $r10.<thredds.cataloggen.config.DatasetNamerType: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label5;

     label2:
        $r11 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String matchPattern>;

        $r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r11);

        r0.<thredds.cataloggen.config.DatasetNamer: java.util.regex.Pattern regExpPattern> = $r12;

     label3:
        goto label5;

     label4:
        $r19 := @caughtexception;

        r0.<thredds.cataloggen.config.DatasetNamer: boolean isValid> = 0;

        $r21 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.StringBuffer msgLog>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** DatasetNamer (3): invalid matchPattern [");

        $r23 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String matchPattern>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

     label5:
        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String substitutePattern> = r6;

        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String attribContainer> = r7;

        r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String attribName> = r8;

        return;

        catch java.util.regex.PatternSyntaxException from label2 to label3 with label4;
    }

    public thredds.catalog.InvDataset getParentDataset()
    {
        thredds.cataloggen.config.DatasetNamer r0;
        thredds.catalog.InvDataset $r1;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        $r1 = r0.<thredds.cataloggen.config.DatasetNamer: thredds.catalog.InvDataset parentDataset>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        thredds.cataloggen.config.DatasetNamer r0;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        $r1 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String name>;

        return $r1;
    }

    public boolean getAddLevel()
    {
        thredds.cataloggen.config.DatasetNamer r0;
        boolean $z0;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        $z0 = r0.<thredds.cataloggen.config.DatasetNamer: boolean addLevel>;

        return $z0;
    }

    public thredds.cataloggen.config.DatasetNamerType getType()
    {
        thredds.cataloggen.config.DatasetNamer r0;
        thredds.cataloggen.config.DatasetNamerType $r1;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        $r1 = r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType type>;

        return $r1;
    }

    public java.lang.String getMatchPattern()
    {
        java.lang.String $r1;
        thredds.cataloggen.config.DatasetNamer r0;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        $r1 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String matchPattern>;

        return $r1;
    }

    public java.lang.String getSubstitutePattern()
    {
        java.lang.String $r1;
        thredds.cataloggen.config.DatasetNamer r0;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        $r1 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String substitutePattern>;

        return $r1;
    }

    public java.lang.String getAttribContainer()
    {
        java.lang.String $r1;
        thredds.cataloggen.config.DatasetNamer r0;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        $r1 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String attribContainer>;

        return $r1;
    }

    public java.lang.String getAttribName()
    {
        java.lang.String $r1;
        thredds.cataloggen.config.DatasetNamer r0;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        $r1 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String attribName>;

        return $r1;
    }

    boolean validate(java.lang.StringBuilder)
    {
        boolean $z0;
        java.lang.StringBuilder r7, $r8, $r9, $r11, $r12, $r13, $r16, $r17, $r19, $r20, $r22, $r23, $r27, $r28, $r30, $r31, $r32, $r35, $r36, $r38, $r39, $r41, $r42, $r43;
        thredds.cataloggen.config.DatasetNamer r0;
        java.lang.StringBuffer $r1, $r46;
        int $i0;
        java.lang.String $r2, $r6, $r10, $r15, $r18, $r21, $r24, $r25, $r26, $r29, $r34, $r37, $r40, $r44, $r45;
        thredds.cataloggen.config.DatasetNamerType $r3, $r4, $r5, $r14, $r33, $r47, $r48;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        r7 := @parameter0: java.lang.StringBuilder;

        r0.<thredds.cataloggen.config.DatasetNamer: boolean isValid> = 1;

        $r1 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.StringBuffer msgLog>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label1;

        $r46 = r0.<thredds.cataloggen.config.DatasetNamer: java.lang.StringBuffer msgLog>;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>($r46);

     label1:
        $r2 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getName()>();

        if $r2 != null goto label2;

        r0.<thredds.cataloggen.config.DatasetNamer: boolean isValid> = 0;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** DatasetNamer (1): null value for name is not valid.");

     label2:
        $r3 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType getType()>();

        if $r3 != null goto label3;

        r0.<thredds.cataloggen.config.DatasetNamer: boolean isValid> = 0;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** DatasetNamer (3): null value for type is not valid (set with bad string?).");

     label3:
        $r4 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType getType()>();

        $r5 = <thredds.cataloggen.config.DatasetNamerType: thredds.cataloggen.config.DatasetNamerType REGULAR_EXPRESSION>;

        if $r4 != $r5 goto label5;

        $r26 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getMatchPattern()>();

        if $r26 == null goto label4;

        $r45 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getSubstitutePattern()>();

        if $r45 != null goto label5;

     label4:
        r0.<thredds.cataloggen.config.DatasetNamer: boolean isValid> = 0;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** DatasetNamer (4): invalid datasetNamer <");

        $r29 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">;");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type is ");

        $r33 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType getType()>();

        $r34 = virtualinvoke $r33.<thredds.cataloggen.config.DatasetNamerType: java.lang.String toString()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": matchPattern(");

        $r37 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getMatchPattern()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") and substitutionPattern(");

        $r40 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getSubstitutePattern()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must not be null.");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

     label5:
        $r47 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType getType()>();

        $r48 = <thredds.cataloggen.config.DatasetNamerType: thredds.cataloggen.config.DatasetNamerType DODS_ATTRIBUTE>;

        if $r47 != $r48 goto label7;

        $r6 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getAttribContainer()>();

        if $r6 == null goto label6;

        $r25 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getAttribName()>();

        if $r25 != null goto label7;

     label6:
        r0.<thredds.cataloggen.config.DatasetNamer: boolean isValid> = 0;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** DatasetNamer (5): invalid datasetNamer <");

        $r10 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">;");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type is ");

        $r14 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType getType()>();

        $r15 = virtualinvoke $r14.<thredds.cataloggen.config.DatasetNamerType: java.lang.String toString()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": attriuteContainer(");

        $r18 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getAttribContainer()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") and attributeName(");

        $r21 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getAttribName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must not be null.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

     label7:
        $z0 = r0.<thredds.cataloggen.config.DatasetNamer: boolean isValid>;

        return $z0;
    }

    public java.lang.String toString()
    {
        thredds.cataloggen.config.DatasetNamer r3;
        java.lang.StringBuffer $r0;
        java.lang.String $r4, $r12, $r15, $r18, $r21, $r24, $r25;
        boolean $z0;
        thredds.cataloggen.config.DatasetNamerType $r9;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23;

        r3 := @this: thredds.cataloggen.config.DatasetNamer;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DatasetNamer[name:<");

        $r4 = virtualinvoke r3.<thredds.cataloggen.config.DatasetNamer: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> addLevel:<");

        $z0 = virtualinvoke r3.<thredds.cataloggen.config.DatasetNamer: boolean getAddLevel()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> type:<");

        $r9 = virtualinvoke r3.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType getType()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> matchPattern:<");

        $r12 = virtualinvoke r3.<thredds.cataloggen.config.DatasetNamer: java.lang.String getMatchPattern()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> substitutePatter:<");

        $r15 = virtualinvoke r3.<thredds.cataloggen.config.DatasetNamer: java.lang.String getSubstitutePattern()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> attribContainer:<");

        $r18 = virtualinvoke r3.<thredds.cataloggen.config.DatasetNamer: java.lang.String getAttribContainer()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> attribName:<");

        $r21 = virtualinvoke r3.<thredds.cataloggen.config.DatasetNamer: java.lang.String getAttribName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">]");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r25 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r25;
    }

    public boolean nameDataset(thredds.catalog.InvDatasetImpl)
    {
        java.lang.IllegalStateException $r20;
        thredds.cataloggen.config.DatasetNamer r0;
        java.lang.String $r7, $r11, $r14, $r19;
        boolean $z0, $z1;
        org.slf4j.Logger $r16;
        thredds.cataloggen.config.DatasetNamerType $r1, $r2, $r3, $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r12, $r13, $r15, $r17, $r18;
        thredds.catalog.InvDatasetImpl r21;

        r0 := @this: thredds.cataloggen.config.DatasetNamer;

        r21 := @parameter0: thredds.catalog.InvDatasetImpl;

        $r2 = r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType type>;

        $r1 = <thredds.cataloggen.config.DatasetNamerType: thredds.cataloggen.config.DatasetNamerType REGULAR_EXPRESSION>;

        if $r2 != $r1 goto label1;

        $z1 = specialinvoke r0.<thredds.cataloggen.config.DatasetNamer: boolean nameDatasetRegExp(thredds.catalog.InvDatasetImpl)>(r21);

        return $z1;

     label1:
        $r4 = r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType type>;

        $r3 = <thredds.cataloggen.config.DatasetNamerType: thredds.cataloggen.config.DatasetNamerType DODS_ATTRIBUTE>;

        if $r4 != $r3 goto label2;

        $z0 = specialinvoke r0.<thredds.cataloggen.config.DatasetNamer: boolean nameDatasetDodsAttrib(thredds.catalog.InvDatasetImpl)>(r21);

        return $z0;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This DatasetNamer <");

        $r7 = virtualinvoke r0.<thredds.cataloggen.config.DatasetNamer: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> has unsupported type <");

        $r10 = r0.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType type>;

        $r11 = virtualinvoke $r10.<thredds.cataloggen.config.DatasetNamerType: java.lang.String toString()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nameDataset(): ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String)>($r19);

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r20;
    }

    public boolean nameDatasetList(java.util.List) throws java.lang.Exception
    {
        java.util.List r0;
        thredds.cataloggen.config.DatasetNamer r2;
        int $i0, i1;
        java.lang.Object $r1;
        thredds.catalog.InvDatasetImpl r3;
        boolean $z0, z1;

        r2 := @this: thredds.cataloggen.config.DatasetNamer;

        r0 := @parameter0: java.util.List;

        z1 = 0;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (thredds.catalog.InvDatasetImpl) $r1;

        $z0 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: boolean nameDataset(thredds.catalog.InvDatasetImpl)>(r3);

        z1 = z1 & $z0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return z1;
    }

    private boolean nameDatasetRegExp(thredds.catalog.InvDatasetImpl)
    {
        java.util.regex.Matcher $r5, $r34, r35;
        boolean $z0, z1;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r23, $r25, $r26, $r27;
        java.util.regex.Pattern $r3, $r32;
        thredds.cataloggen.config.DatasetNamer r2;
        java.lang.StringBuffer $r20;
        int $i0, $i1;
        java.lang.String $r1, $r4, $r10, $r13, $r16, $r19, $r21, $r28, $r29, $r31, $r33;
        org.slf4j.Logger $r6, $r8, $r22, $r24, $r30;
        thredds.catalog.InvDatasetImpl r0;

        r2 := @this: thredds.cataloggen.config.DatasetNamer;

        r0 := @parameter0: thredds.catalog.InvDatasetImpl;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getUrlPath()>();

        if $r1 == null goto label1;

        $r30 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $r31 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getUrlPath()>();

        interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("nameDatasetRegExp(): try naming on urlPath <{}>", $r31);

        $r32 = r2.<thredds.cataloggen.config.DatasetNamer: java.util.regex.Pattern regExpPattern>;

        $r33 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getUrlPath()>();

        $r34 = virtualinvoke $r32.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r33);

        r35 = $r34;

        z1 = virtualinvoke $r34.<java.util.regex.Matcher: boolean find()>();

        goto label2;

     label1:
        $r3 = r2.<thredds.cataloggen.config.DatasetNamer: java.util.regex.Pattern regExpPattern>;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        r35 = $r5;

        z1 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

     label2:
        if z1 == 0 goto label4;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String substitutePattern>;

        virtualinvoke r35.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>($r20, $r21);

        $i0 = virtualinvoke r35.<java.util.regex.Matcher: int start()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i0);

        $i1 = virtualinvoke $r20.<java.lang.StringBuffer: int length()>();

        if $i1 == 0 goto label3;

        $r24 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nameDatasetRegExp(): Setting name to \"");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String)>($r28);

        $r29 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>($r29);

        return 1;

     label3:
        $r22 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>("nameDatasetRegExp(): No name for regEx substitution.");

        return 0;

     label4:
        $r6 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label5;

        $r8 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nameDatasetRegExp(): Neither URL <");

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getUrlPath()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> or name <");

        $r13 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> matched pattern <");

        $r16 = r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String matchPattern>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> .");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>($r19);

     label5:
        return 0;
    }

    private boolean nameDatasetDodsAttrib(thredds.catalog.InvDatasetImpl)
    {
        java.util.Enumeration $r15;
        java.lang.Exception $r29, $r50;
        java.lang.StringBuilder $r22, $r23, $r24, $r32, $r34, $r39, $r41, $r46, $r48, $r53, $r55, $r60, $r61, $r62, $r64, $r68, $r69, $r70, $r71, $r72, $r73;
        java.lang.Throwable $r27, $r36, $r43;
        opendap.dap.AttributeTable $r10;
        thredds.cataloggen.config.DatasetNamer r8;
        java.lang.String $r3, $r9, $r12, $r18, $r25, $r33, $r35, $r40, $r42, $r47, $r49, $r54, $r56, $r63, $r65, r66;
        opendap.dap.DAP2Exception $r74;
        thredds.catalog.InvDatasetImpl r0;
        thredds.catalog.InvAccess $r2;
        opendap.dap.parser.ParseException $r75;
        boolean $z0, $z1;
        java.io.FileNotFoundException $r57;
        opendap.dap.DAS $r6;
        opendap.dap.Attribute $r13;
        thredds.catalog.ServiceType $r1;
        int $i0, $i1, $i2;
        org.slf4j.Logger $r5, $r7, $r11, $r14, $r16, $r19, $r21, $r26, $r28, $r31, $r38, $r45, $r52, $r59;
        opendap.dap.DConnect $r67;
        java.lang.Object $r17;

        r8 := @this: thredds.cataloggen.config.DatasetNamer;

        r0 := @parameter0: thredds.catalog.InvDatasetImpl;

        $r1 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType DODS>;

        $r2 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: thredds.catalog.InvAccess getAccess(thredds.catalog.ServiceType)>($r1);

        if $r2 != null goto label01;

        $r26 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        interfaceinvoke $r26.<org.slf4j.Logger: void warn(java.lang.String)>("nameDatasetDodsAttrib(): dataset is not DODS accessible and so cannot be named using DODS attributes.");

        return 0;

     label01:
        $r3 = virtualinvoke $r2.<thredds.catalog.InvAccess: java.lang.String getStandardUrlName()>();

     label02:
        $r67 = new opendap.dap.DConnect;

        specialinvoke $r67.<opendap.dap.DConnect: void <init>(java.lang.String,boolean)>($r3, 1);

     label03:
        goto label06;

     label04:
        $r57 := @caughtexception;

        $r59 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nameDatasetDodsAttrib(): URL <");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not found: ");

        $r63 = virtualinvoke $r57.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r59.<org.slf4j.Logger: void error(java.lang.String)>($r65);

        return 0;

     label05:
        $r50 := @caughtexception;

        $r52 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nameDatasetDodsAttrib(): Failed DODS connect: ");

        $r54 = virtualinvoke $r50.<java.lang.Exception: java.lang.String getMessage()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r52.<org.slf4j.Logger: void error(java.lang.String)>($r56);

        return 0;

     label06:
        $r5 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("nameDatasetDodsAttrib(): Got DODS Connect <url={}>", $r3);

     label07:
        $r6 = virtualinvoke $r67.<opendap.dap.DConnect: opendap.dap.DAS getDAS()>();

     label08:
        goto label12;

     label09:
        $r43 := @caughtexception;

        $r45 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nameDatasetDodsAttrib(): Failed to get DAS: ");

        $r74 = (opendap.dap.DAP2Exception) $r43;

        $r47 = virtualinvoke $r74.<opendap.dap.DAP2Exception: java.lang.String getMessage()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>($r49);

        return 0;

     label10:
        $r36 := @caughtexception;

        $r38 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nameDatasetDodsAttrib(): Failed to get DAS: ");

        $r75 = (opendap.dap.parser.ParseException) $r36;

        $r40 = virtualinvoke $r75.<opendap.dap.parser.ParseException: java.lang.String getMessage()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String)>($r42);

        return 0;

     label11:
        $r29 := @caughtexception;

        $r31 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nameDatasetDodsAttrib(): Failed to get DAS: ");

        $r33 = virtualinvoke $r29.<java.lang.Exception: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>($r35);

        return 0;

     label12:
        $r7 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>("nameDatasetDodsAttrib(): Got DAS");

     label13:
        $r9 = r8.<thredds.cataloggen.config.DatasetNamer: java.lang.String attribContainer>;

        $r10 = virtualinvoke $r6.<opendap.dap.DAS: opendap.dap.AttributeTable getAttributeTable(java.lang.String)>($r9);

        if $r10 == null goto label21;

        $r12 = r8.<thredds.cataloggen.config.DatasetNamer: java.lang.String attribName>;

        $r13 = virtualinvoke $r10.<opendap.dap.AttributeTable: opendap.dap.Attribute getAttribute(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<opendap.dap.Attribute: int getType()>();

        if $i0 != 10 goto label19;

        $r15 = virtualinvoke $r13.<opendap.dap.Attribute: java.util.Enumeration getValues()>();

        $z0 = interfaceinvoke $r15.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label17;

        $r17 = interfaceinvoke $r15.<java.util.Enumeration: java.lang.Object nextElement()>();

        r66 = (java.lang.String) $r17;

        $i1 = virtualinvoke r66.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $r18 = virtualinvoke r66.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

        $z1 = interfaceinvoke $r15.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label15;

        $r21 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nameDatasetDodsAttrib(): attribute has multiple values, only using first value <");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String)>($r25);

        virtualinvoke r0.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>($r18);

     label14:
        return 1;

     label15:
        $r19 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("nameDatasetDodsAttrib(): setting dataset name to <{}>.", $r18);

        virtualinvoke r0.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>($r18);

     label16:
        return 1;

     label17:
        $r16 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>("nameDatasetDodsAttrib(): attribute has no value");

     label18:
        return 0;

     label19:
        $r14 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String)>("nameDatasetDodsAttrib(): attribute value is not a string.");

     label20:
        return 0;

     label21:
        $r11 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>("nameDatasetDodsAttrib(): attribute container does not exist.");

     label22:
        return 0;

     label23:
        $r27 := @caughtexception;

        $r28 = <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger>;

        interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String)>("nameDatasetDodsAttrib(): attribute container does not exist.");

        return 0;

        catch java.io.FileNotFoundException from label02 to label03 with label04;
        catch java.lang.Exception from label02 to label03 with label05;
        catch opendap.dap.DAP2Exception from label07 to label08 with label09;
        catch opendap.dap.parser.ParseException from label07 to label08 with label10;
        catch java.lang.Exception from label07 to label08 with label11;
        catch opendap.dap.NoSuchAttributeException from label13 to label14 with label23;
        catch opendap.dap.NoSuchAttributeException from label15 to label16 with label23;
        catch opendap.dap.NoSuchAttributeException from label17 to label18 with label23;
        catch opendap.dap.NoSuchAttributeException from label19 to label20 with label23;
        catch opendap.dap.NoSuchAttributeException from label21 to label22 with label23;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/cataloggen/config/DatasetNamer;");

        <thredds.cataloggen.config.DatasetNamer: org.slf4j.Logger logger> = $r0;

        return;
    }
}
