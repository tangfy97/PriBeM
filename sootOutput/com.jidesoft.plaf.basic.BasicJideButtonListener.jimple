public class com.jidesoft.plaf.basic.BasicJideButtonListener extends javax.swing.plaf.basic.BasicButtonListener
{
    private boolean _mouseOver;

    public void <init>(javax.swing.AbstractButton)
    {
        javax.swing.AbstractButton r1;
        com.jidesoft.plaf.basic.BasicJideButtonListener r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonListener;

        r1 := @parameter0: javax.swing.AbstractButton;

        specialinvoke r0.<javax.swing.plaf.basic.BasicButtonListener: void <init>(javax.swing.AbstractButton)>(r1);

        r0.<com.jidesoft.plaf.basic.BasicJideButtonListener: boolean _mouseOver> = 0;

        return;
    }

    public void mouseEntered(java.awt.event.MouseEvent)
    {
        java.lang.Object $r1;
        javax.swing.AbstractButton r2;
        javax.swing.ButtonModel $r3;
        java.awt.event.MouseEvent r0;
        boolean $z0, $z1;
        com.jidesoft.plaf.basic.BasicJideButtonListener r4;

        r4 := @this: com.jidesoft.plaf.basic.BasicJideButtonListener;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $r1 = virtualinvoke r0.<java.awt.event.MouseEvent: java.lang.Object getSource()>();

        r2 = (javax.swing.AbstractButton) $r1;

        $r3 = virtualinvoke r2.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $z0 = virtualinvoke r2.<javax.swing.AbstractButton: boolean isRolloverEnabled()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r3.<javax.swing.ButtonModel: void setRollover(boolean)>(1);

     label1:
        r4.<com.jidesoft.plaf.basic.BasicJideButtonListener: boolean _mouseOver> = 1;

        $z1 = interfaceinvoke $r3.<javax.swing.ButtonModel: boolean isPressed()>();

        if $z1 == 0 goto label2;

        interfaceinvoke $r3.<javax.swing.ButtonModel: void setArmed(boolean)>(1);

     label2:
        return;
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        com.jidesoft.plaf.basic.BasicJideButtonListener r0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r11;
        javax.swing.AbstractButton $r12, $r13, $r15;
        java.beans.PropertyChangeEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r7, $r10, $r14;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonListener;

        r1 := @parameter0: java.beans.PropertyChangeEvent;

        specialinvoke r0.<javax.swing.plaf.basic.BasicButtonListener: void propertyChange(java.beans.PropertyChangeEvent)>(r1);

        $r2 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $r3 = "buttonStyle";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r4 = "opaque";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 != 0 goto label1;

        $r5 = "contentAreaFilled";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label2;

     label1:
        $r14 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        $r15 = (javax.swing.AbstractButton) $r14;

        virtualinvoke $r15.<javax.swing.AbstractButton: void repaint()>();

        goto label6;

     label2:
        $r6 = "orientation";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z3 != 0 goto label3;

        $r8 = "hideActionText";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z4 == 0 goto label4;

     label3:
        $r7 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        $r13 = (javax.swing.AbstractButton) $r7;

        virtualinvoke $r13.<javax.swing.AbstractButton: void invalidate()>();

        virtualinvoke $r13.<javax.swing.AbstractButton: void repaint()>();

        goto label6;

     label4:
        $r9 = "verticalTextPosition";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z5 != 0 goto label5;

        $r11 = "horizontalTextPosition";

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z6 == 0 goto label6;

     label5:
        $r10 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        $r12 = (javax.swing.AbstractButton) $r10;

        virtualinvoke $r12.<javax.swing.AbstractButton: void updateUI()>();

     label6:
        return;
    }

    public void mouseClicked(java.awt.event.MouseEvent)
    {
        java.awt.event.MouseEvent r1;
        com.jidesoft.plaf.basic.BasicJideButtonListener r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonListener;

        r1 := @parameter0: java.awt.event.MouseEvent;

        specialinvoke r0.<javax.swing.plaf.basic.BasicButtonListener: void mouseClicked(java.awt.event.MouseEvent)>(r1);

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonListener: void cancelMenuIfNecessary(java.awt.event.MouseEvent)>(r1);

        return;
    }

    public void mouseReleased(java.awt.event.MouseEvent)
    {
        java.awt.Point $r4;
        java.awt.event.MouseEvent r0;
        com.jidesoft.plaf.basic.BasicJideButtonListener r5;
        java.lang.Object $r1;
        javax.swing.AbstractButton r2;
        javax.swing.ButtonModel $r3;
        boolean $z0, $z1, $z2;

        r5 := @this: com.jidesoft.plaf.basic.BasicJideButtonListener;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $r1 = virtualinvoke r0.<java.awt.event.MouseEvent: java.lang.Object getSource()>();

        r2 = (javax.swing.AbstractButton) $r1;

        $r3 = virtualinvoke r2.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $r4 = virtualinvoke r0.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        $z0 = virtualinvoke r2.<javax.swing.AbstractButton: boolean contains(java.awt.Point)>($r4);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<javax.swing.AbstractButton: boolean isRolloverEnabled()>();

        if $z1 == 0 goto label1;

        interfaceinvoke $r3.<javax.swing.ButtonModel: void setRollover(boolean)>(1);

     label1:
        $z2 = r5.<com.jidesoft.plaf.basic.BasicJideButtonListener: boolean _mouseOver>;

        if $z2 != 0 goto label2;

        interfaceinvoke $r3.<javax.swing.ButtonModel: void setArmed(boolean)>(0);

        interfaceinvoke $r3.<javax.swing.ButtonModel: void setPressed(boolean)>(0);

     label2:
        specialinvoke r5.<javax.swing.plaf.basic.BasicButtonListener: void mouseReleased(java.awt.event.MouseEvent)>(r0);

        specialinvoke r5.<com.jidesoft.plaf.basic.BasicJideButtonListener: void cancelMenuIfNecessary(java.awt.event.MouseEvent)>(r0);

        return;
    }

    private void cancelMenuIfNecessary(java.awt.event.MouseEvent)
    {
        javax.swing.MenuSelectionManager $r3;
        com.jidesoft.plaf.basic.BasicJideButtonListener r12;
        int $i0, i1, $i3;
        java.lang.Boolean $r10;
        javax.swing.AbstractButton r2;
        javax.swing.ButtonModel $r7, $r8, $r9;
        boolean $z0, $z1, $z2;
        javax.swing.JPopupMenu $r6;
        javax.swing.MenuElement r5;
        java.awt.event.MouseEvent r0;
        javax.swing.MenuElement[] $r4;
        java.lang.Object $r1, $r11;

        r12 := @this: com.jidesoft.plaf.basic.BasicJideButtonListener;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $r1 = virtualinvoke r0.<java.awt.event.MouseEvent: java.lang.Object getSource()>();

        r2 = (javax.swing.AbstractButton) $r1;

        $r3 = staticinvoke <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>();

        $r4 = virtualinvoke $r3.<javax.swing.MenuSelectionManager: javax.swing.MenuElement[] getSelectedPath()>();

        $i0 = lengthof $r4;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        r5 = $r4[i1];

        $z0 = r5 instanceof javax.swing.JPopupMenu;

        if $z0 == 0 goto label2;

        $r6 = (javax.swing.JPopupMenu) r5;

        $z1 = virtualinvoke $r6.<javax.swing.JPopupMenu: boolean isAncestorOf(java.awt.Component)>(r2);

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r2.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        interfaceinvoke $r7.<javax.swing.ButtonModel: void setPressed(boolean)>(0);

        $r8 = virtualinvoke r2.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        interfaceinvoke $r8.<javax.swing.ButtonModel: void setArmed(boolean)>(0);

        $r9 = virtualinvoke r2.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        interfaceinvoke $r9.<javax.swing.ButtonModel: void setRollover(boolean)>(0);

        $r10 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r11 = virtualinvoke r2.<javax.swing.AbstractButton: java.lang.Object getClientProperty(java.lang.Object)>("JideButton.hidePopupMenu");

        $z2 = virtualinvoke $r10.<java.lang.Boolean: boolean equals(java.lang.Object)>($r11);

        if $z2 != 0 goto label3;

        virtualinvoke $r3.<javax.swing.MenuSelectionManager: void clearSelectedPath()>();

        goto label3;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label3:
        return;
    }

    public void mouseExited(java.awt.event.MouseEvent)
    {
        java.lang.Object $r1;
        javax.swing.AbstractButton r2;
        javax.swing.ButtonModel $r3;
        java.awt.event.MouseEvent r0;
        boolean $z0;
        com.jidesoft.plaf.basic.BasicJideButtonListener r4;

        r4 := @this: com.jidesoft.plaf.basic.BasicJideButtonListener;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $r1 = virtualinvoke r0.<java.awt.event.MouseEvent: java.lang.Object getSource()>();

        r2 = (javax.swing.AbstractButton) $r1;

        $r3 = virtualinvoke r2.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $z0 = virtualinvoke r2.<javax.swing.AbstractButton: boolean isRolloverEnabled()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r3.<javax.swing.ButtonModel: void setRollover(boolean)>(0);

     label1:
        interfaceinvoke $r3.<javax.swing.ButtonModel: void setArmed(boolean)>(0);

        r4.<com.jidesoft.plaf.basic.BasicJideButtonListener: boolean _mouseOver> = 0;

        return;
    }

    void updateMnemonicBinding(javax.swing.AbstractButton)
    {
        javax.swing.KeyStroke $r3, $r4, $r5;
        com.jidesoft.plaf.basic.BasicJideButtonListener r7;
        javax.swing.plaf.ComponentInputMapUIResource $r6;
        int $i0;
        javax.swing.AbstractButton r0;
        javax.swing.InputMap $r1, $r2, r8;

        r7 := @this: com.jidesoft.plaf.basic.BasicJideButtonListener;

        r0 := @parameter0: javax.swing.AbstractButton;

        $i0 = virtualinvoke r0.<javax.swing.AbstractButton: int getMnemonic()>();

        if $i0 == 0 goto label2;

        $r2 = staticinvoke <javax.swing.SwingUtilities: javax.swing.InputMap getUIInputMap(javax.swing.JComponent,int)>(r0, 2);

        r8 = $r2;

        if $r2 != null goto label1;

        $r6 = new javax.swing.plaf.ComponentInputMapUIResource;

        specialinvoke $r6.<javax.swing.plaf.ComponentInputMapUIResource: void <init>(javax.swing.JComponent)>(r0);

        r8 = $r6;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>(r0, 2, $r6);

     label1:
        virtualinvoke r8.<javax.swing.InputMap: void clear()>();

        $r3 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>($i0, 8, 0);

        virtualinvoke r8.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r3, "pressed");

        $r4 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>($i0, 8, 1);

        virtualinvoke r8.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r4, "released");

        $r5 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>($i0, 0, 1);

        virtualinvoke r8.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r5, "released");

        goto label3;

     label2:
        $r1 = staticinvoke <javax.swing.SwingUtilities: javax.swing.InputMap getUIInputMap(javax.swing.JComponent,int)>(r0, 2);

        if $r1 == null goto label3;

        virtualinvoke $r1.<javax.swing.InputMap: void clear()>();

     label3:
        return;
    }

    static java.lang.Object getUIOfType(javax.swing.plaf.ComponentUI, java.lang.Class)
    {
        java.lang.Class r0;
        javax.swing.plaf.ComponentUI r1;
        boolean $z0;

        r1 := @parameter0: javax.swing.plaf.ComponentUI;

        r0 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        return null;
    }

    public javax.swing.InputMap getInputMap(int, javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        javax.swing.plaf.ButtonUI $r2;
        com.jidesoft.plaf.basic.BasicJideButtonListener r12;
        int i0;
        java.lang.Object $r3, $r10;
        com.jidesoft.plaf.basic.BasicJideButtonUI r4;
        java.lang.StringBuilder $r5, $r7, $r8;
        javax.swing.AbstractButton $r1;
        java.lang.String $r6, $r9;
        javax.swing.InputMap $r11;

        r12 := @this: com.jidesoft.plaf.basic.BasicJideButtonListener;

        i0 := @parameter0: int;

        r0 := @parameter1: javax.swing.JComponent;

        if i0 != 0 goto label1;

        $r1 = (javax.swing.AbstractButton) r0;

        $r2 = virtualinvoke $r1.<javax.swing.AbstractButton: javax.swing.plaf.ButtonUI getUI()>();

        $r3 = staticinvoke <com.jidesoft.plaf.basic.BasicJideButtonListener: java.lang.Object getUIOfType(javax.swing.plaf.ComponentUI,java.lang.Class)>($r2, class "Lcom/jidesoft/plaf/basic/BasicJideButtonUI;");

        r4 = (com.jidesoft.plaf.basic.BasicJideButtonUI) $r3;

        if r4 == null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.lang.String getPropertyPrefix()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("focusInputMap");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (javax.swing.InputMap) $r10;

        return $r11;

     label1:
        return null;
    }

    public static void loadActionMap(com.jidesoft.plaf.basic.LazyActionMap)
    {
        com.jidesoft.plaf.basic.BasicJideButtonListener$Actions $r1, $r2;
        com.jidesoft.plaf.basic.LazyActionMap r0;

        r0 := @parameter0: com.jidesoft.plaf.basic.LazyActionMap;

        $r1 = new com.jidesoft.plaf.basic.BasicJideButtonListener$Actions;

        specialinvoke $r1.<com.jidesoft.plaf.basic.BasicJideButtonListener$Actions: void <init>(java.lang.String)>("pressed");

        virtualinvoke r0.<com.jidesoft.plaf.basic.LazyActionMap: void put(javax.swing.Action)>($r1);

        $r2 = new com.jidesoft.plaf.basic.BasicJideButtonListener$Actions;

        specialinvoke $r2.<com.jidesoft.plaf.basic.BasicJideButtonListener$Actions: void <init>(java.lang.String)>("released");

        virtualinvoke r0.<com.jidesoft.plaf.basic.LazyActionMap: void put(javax.swing.Action)>($r2);

        return;
    }

    public void installKeyboardActions(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        javax.swing.AbstractButton r1;
        javax.swing.InputMap $r3;
        com.jidesoft.plaf.basic.BasicJideButtonListener r2;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideButtonListener;

        r0 := @parameter0: javax.swing.JComponent;

        r1 = (javax.swing.AbstractButton) r0;

        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideButtonListener: void updateMnemonicBinding(javax.swing.AbstractButton)>(r1);

        staticinvoke <com.jidesoft.plaf.basic.LazyActionMap: void installLazyActionMap(javax.swing.JComponent,java.lang.Class,java.lang.String)>(r0, class "Lcom/jidesoft/plaf/basic/BasicJideButtonListener;", "JideButton.actionMap");

        $r3 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideButtonListener: javax.swing.InputMap getInputMap(int,javax.swing.JComponent)>(0, r0);

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>(r0, 0, $r3);

        return;
    }
}
