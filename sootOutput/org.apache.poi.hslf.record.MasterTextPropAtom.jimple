public final class org.apache.poi.hslf.record.MasterTextPropAtom extends org.apache.poi.hslf.record.RecordAtom
{
    private byte[] _header;
    private byte[] _data;
    private java.util.List indents;

    public void <init>()
    {
        byte[] $r1, $r2, $r3, $r4, $r5;
        long $l0;
        org.apache.poi.hslf.record.MasterTextPropAtom r0;
        java.util.ArrayList $r6;
        short $s2;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hslf.record.MasterTextPropAtom;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _header> = $r1;

        $r2 = newarray (byte)[0];

        r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data> = $r2;

        $r3 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _header>;

        $l0 = virtualinvoke r0.<org.apache.poi.hslf.record.MasterTextPropAtom: long getRecordType()>();

        $i1 = (int) $l0;

        $s2 = (short) $i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r3, 2, $s2);

        $r5 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _header>;

        $r4 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data>;

        $i3 = lengthof $r4;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r5, 4, $i3);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hslf.record.MasterTextPropAtom: java.util.List indents> = $r6;

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r4, $r5;
        org.apache.poi.hslf.record.MasterTextPropAtom r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String $r10, $r12;
        org.apache.poi.util.POILogger $r8;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7, $r9, $r11;

        r0 := @this: org.apache.poi.hslf.record.MasterTextPropAtom;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i2 = i1 - 8;

        $r4 = newarray (byte)[$i2];

        r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data> = $r4;

        $i4 = i0 + 8;

        $r5 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data>;

        $i3 = i1 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i4, $r5, 0, $i3);

     label1:
        specialinvoke r0.<org.apache.poi.hslf.record.MasterTextPropAtom: void read()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r8 = <org.apache.poi.hslf.record.MasterTextPropAtom: org.apache.poi.util.POILogger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse MasterTextPropAtom: ");

        $r10 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r12);

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public long getRecordType()
    {
        org.apache.poi.hslf.record.RecordTypes$Type $r0;
        int $i0;
        long $l1;
        org.apache.poi.hslf.record.MasterTextPropAtom r1;

        r1 := @this: org.apache.poi.hslf.record.MasterTextPropAtom;

        $r0 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type MasterTextPropAtom>;

        $i0 = $r0.<org.apache.poi.hslf.record.RecordTypes$Type: int typeID>;

        $l1 = (long) $i0;

        return $l1;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r2, $r3;
        org.apache.poi.hslf.record.MasterTextPropAtom r0;

        r0 := @this: org.apache.poi.hslf.record.MasterTextPropAtom;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<org.apache.poi.hslf.record.MasterTextPropAtom: void write()>();

        $r2 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _header>;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r2);

        $r3 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data>;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }

    private void write()
    {
        byte[] $r2, $r7, $r8;
        org.apache.poi.hslf.record.MasterTextPropAtom r0;
        short $s5;
        int $i0, $i1, $i2, $i3, $i4, i6;
        boolean $z0;
        java.util.Iterator $r4;
        org.apache.poi.hslf.model.textproperties.IndentProp r6;
        java.util.List $r1, $r3;
        java.lang.Object $r5;

        r0 := @this: org.apache.poi.hslf.record.MasterTextPropAtom;

        i6 = 0;

        $r1 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: java.util.List indents>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 * 6;

        $r2 = newarray (byte)[$i1];

        r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data> = $r2;

        $r3 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: java.util.List indents>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.poi.hslf.model.textproperties.IndentProp) $r5;

        $r7 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data>;

        $i2 = virtualinvoke r6.<org.apache.poi.hslf.model.textproperties.IndentProp: int getCharactersCovered()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r7, i6, $i2);

        $r8 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data>;

        $i3 = i6 + 4;

        $i4 = virtualinvoke r6.<org.apache.poi.hslf.model.textproperties.IndentProp: int getIndentLevel()>();

        $s5 = (short) $i4;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r8, $i3, $s5);

        i6 = i6 + 6;

        goto label1;

     label2:
        return;
    }

    private void read()
    {
        byte[] $r2, $r3, $r4, $r5;
        org.apache.poi.hslf.record.MasterTextPropAtom r0;
        java.util.ArrayList $r1;
        short $s6;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7;
        org.apache.poi.hslf.model.textproperties.IndentProp $r6;
        java.util.List $r7;

        r0 := @this: org.apache.poi.hslf.record.MasterTextPropAtom;

        i7 = 0;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data>;

        $i0 = lengthof $r2;

        $i1 = $i0 / 6;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<org.apache.poi.hslf.record.MasterTextPropAtom: java.util.List indents> = $r1;

     label1:
        $r3 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data>;

        $i2 = lengthof $r3;

        $i3 = $i2 - 6;

        if i7 > $i3 goto label2;

        $r4 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data>;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r4, i7);

        $r5 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: byte[] _data>;

        $i5 = i7 + 4;

        $s6 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r5, $i5);

        $r7 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: java.util.List indents>;

        $r6 = new org.apache.poi.hslf.model.textproperties.IndentProp;

        specialinvoke $r6.<org.apache.poi.hslf.model.textproperties.IndentProp: void <init>(int,short)>($i4, $s6);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        i7 = i7 + 6;

        goto label1;

     label2:
        return;
    }

    public int getIndentAt(int)
    {
        java.util.Iterator $r2;
        org.apache.poi.hslf.record.MasterTextPropAtom r0;
        org.apache.poi.hslf.model.textproperties.IndentProp r4;
        java.util.List $r1;
        int $i0, i1, $i2, i3, $i5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.MasterTextPropAtom;

        i1 := @parameter0: int;

        i3 = 0;

        $r1 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: java.util.List indents>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.hslf.model.textproperties.IndentProp) $r3;

        $i0 = virtualinvoke r4.<org.apache.poi.hslf.model.textproperties.IndentProp: int getCharactersCovered()>();

        i3 = i3 + $i0;

        if i1 >= i3 goto label2;

        $i2 = virtualinvoke r4.<org.apache.poi.hslf.model.textproperties.IndentProp: int getIndentLevel()>();

        return $i2;

     label2:
        goto label1;

     label3:
        $i5 = (int) -1;

        return $i5;
    }

    public java.util.List getIndents()
    {
        java.util.List $r1, $r2;
        org.apache.poi.hslf.record.MasterTextPropAtom r0;

        r0 := @this: org.apache.poi.hslf.record.MasterTextPropAtom;

        $r1 = r0.<org.apache.poi.hslf.record.MasterTextPropAtom: java.util.List indents>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }
}
