public class org.waveprotocol.wave.model.document.util.IdentityView extends java.lang.Object implements org.waveprotocol.wave.model.document.util.ReadableDocumentView
{
    protected final org.waveprotocol.wave.model.document.ReadableDocument inner;

    protected void <init>(org.waveprotocol.wave.model.document.ReadableDocument)
    {
        org.waveprotocol.wave.model.document.util.IdentityView r0;
        org.waveprotocol.wave.model.document.ReadableDocument r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "IdentityView (or subclass): Inner document may not be null!");

        r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner> = r1;

        return;
    }

    public java.lang.Object asElement(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.lang.Object r1, $r3;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object asElement(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object asText(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.lang.Object r1, $r3;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object asText(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.String getAttribute(java.lang.Object, java.lang.String)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r3;
        java.lang.Object r1;
        java.lang.String r2, $r4;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r1, r2);

        return $r4;
    }

    public java.util.Map getAttributes(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.util.Map $r3;
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: java.util.Map getAttributes(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.String getData(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.String getData(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object getDocumentElement()
    {
        java.lang.Object $r2;
        org.waveprotocol.wave.model.document.util.IdentityView r0;
        org.waveprotocol.wave.model.document.ReadableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object getDocumentElement()>();

        return $r2;
    }

    public int getLength(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        int $i0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $i0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: int getLength(java.lang.Object)>(r1);

        return $i0;
    }

    public short getNodeType(java.lang.Object)
    {
        short $s0;
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $s0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: short getNodeType(java.lang.Object)>(r1);

        return $s0;
    }

    public java.lang.String getTagName(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.String getTagName(java.lang.Object)>(r1);

        return $r3;
    }

    public boolean isSameNode(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r3;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.model.document.util.IdentityView r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $z0 = interfaceinvoke $r3.<org.waveprotocol.wave.model.document.ReadableDocument: boolean isSameNode(java.lang.Object,java.lang.Object)>(r1, r2);

        return $z0;
    }

    public java.lang.Object getFirstChild(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.lang.Object r1, $r3;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object getFirstChild(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object getLastChild(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.lang.Object r1, $r3;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object getLastChild(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object getNextSibling(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.lang.Object r1, $r3;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object getNextSibling(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object getParentElement(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.lang.Object r1, $r3;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object getParentElement(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object getPreviousSibling(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r2;
        java.lang.Object r1, $r3;
        org.waveprotocol.wave.model.document.util.IdentityView r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.IdentityView: org.waveprotocol.wave.model.document.ReadableDocument inner>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object getPreviousSibling(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object getVisibleNode(java.lang.Object)
    {
        java.lang.Object r0;
        org.waveprotocol.wave.model.document.util.IdentityView r1;

        r1 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    public java.lang.Object getVisibleNodeFirst(java.lang.Object)
    {
        java.lang.Object r0;
        org.waveprotocol.wave.model.document.util.IdentityView r1;

        r1 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    public java.lang.Object getVisibleNodeLast(java.lang.Object)
    {
        java.lang.Object r0;
        org.waveprotocol.wave.model.document.util.IdentityView r1;

        r1 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    public java.lang.Object getVisibleNodeNext(java.lang.Object)
    {
        java.lang.Object r0;
        org.waveprotocol.wave.model.document.util.IdentityView r1;

        r1 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    public java.lang.Object getVisibleNodePrevious(java.lang.Object)
    {
        java.lang.Object r0;
        org.waveprotocol.wave.model.document.util.IdentityView r1;

        r1 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    public void onBeforeFilter(org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.model.document.util.IdentityView r0;
        org.waveprotocol.wave.model.document.util.Point r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.IdentityView;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        return;
    }
}
