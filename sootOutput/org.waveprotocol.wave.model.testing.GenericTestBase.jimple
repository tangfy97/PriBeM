public abstract class org.waveprotocol.wave.model.testing.GenericTestBase extends junit.framework.TestCase
{
    protected final org.waveprotocol.wave.model.testing.Factory factory;
    protected java.lang.Object target;

    protected void <init>(org.waveprotocol.wave.model.testing.Factory)
    {
        org.waveprotocol.wave.model.testing.GenericTestBase r0;
        org.waveprotocol.wave.model.testing.Factory r1;

        r0 := @this: org.waveprotocol.wave.model.testing.GenericTestBase;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.Factory;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        r0.<org.waveprotocol.wave.model.testing.GenericTestBase: org.waveprotocol.wave.model.testing.Factory factory> = r1;

        return;
    }

    protected void setUp()
    {
        org.waveprotocol.wave.model.testing.GenericTestBase r0;
        org.waveprotocol.wave.model.testing.Factory $r1;
        java.lang.Object $r2;

        r0 := @this: org.waveprotocol.wave.model.testing.GenericTestBase;

        $r1 = r0.<org.waveprotocol.wave.model.testing.GenericTestBase: org.waveprotocol.wave.model.testing.Factory factory>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.testing.Factory: java.lang.Object create()>();

        r0.<org.waveprotocol.wave.model.testing.GenericTestBase: java.lang.Object target> = $r2;

        return;
    }

    protected void tearDown() throws java.lang.Exception
    {
        org.waveprotocol.wave.model.testing.GenericTestBase r0;

        r0 := @this: org.waveprotocol.wave.model.testing.GenericTestBase;

        specialinvoke r0.<junit.framework.TestCase: void tearDown()>();

        return;
    }
}
