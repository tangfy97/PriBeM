public class com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble extends com.hp.hpl.jena.sparql.expr.NodeValue
{
    double value;

    public void <init>(double)
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble r0;
        double d0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble;

        d0 := @parameter0: double;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble: double value> = #NaN;

        r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble: double value> = d0;

        return;
    }

    public void <init>(double, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble r0;
        double d0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble;

        d0 := @parameter0: double;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: void <init>(com.hp.hpl.jena.graph.Node)>(r1);

        r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble: double value> = #NaN;

        r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble: double value> = d0;

        return;
    }

    public boolean isNumber()
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble;

        return 1;
    }

    public boolean isDouble()
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble;

        return 1;
    }

    public double getDouble()
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble r0;
        double $d0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble;

        $d0 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble: double value>;

        return $d0;
    }

    public java.math.BigDecimal getDecimal()
    {
        java.math.BigDecimal $r1;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble r0;
        double $d0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble;

        $d0 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble: double value>;

        $r1 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d0);

        return $r1;
    }

    protected com.hp.hpl.jena.graph.Node makeNode()
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble r0;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype $r2;
        java.lang.String $r1;
        com.hp.hpl.jena.graph.Node $r3;
        double $d0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble;

        $d0 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble: double value>;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String stringForm(double)>($d0);

        $r2 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdouble>;

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r1, null, $r2);

        return $r3;
    }

    public java.lang.String asString()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble r0;
        com.hp.hpl.jena.graph.Node $r1;
        java.lang.String $r2, $r3;
        double $d0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble: com.hp.hpl.jena.graph.Node getNode()>();

        if $r1 == null goto label1;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: java.lang.String asString()>();

        return $r3;

     label1:
        $d0 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble: double value>;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String stringForm(double)>($d0);

        return $r2;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor)
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor r0;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble r1;

        r1 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor: void visit(com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueDouble)>(r1);

        return;
    }
}
