public abstract class org.springframework.core.type.filter.AbstractClassTestingTypeFilter extends java.lang.Object implements org.springframework.core.type.filter.TypeFilter
{

    public void <init>()
    {
        org.springframework.core.type.filter.AbstractClassTestingTypeFilter r0;

        r0 := @this: org.springframework.core.type.filter.AbstractClassTestingTypeFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean match(org.springframework.core.type.classreading.MetadataReader, org.springframework.core.type.classreading.MetadataReaderFactory) throws java.io.IOException
    {
        org.springframework.core.type.classreading.MetadataReaderFactory r3;
        org.springframework.core.type.classreading.MetadataReader r1;
        org.springframework.core.type.ClassMetadata $r2;
        org.springframework.core.type.filter.AbstractClassTestingTypeFilter r0;
        boolean $z0;

        r0 := @this: org.springframework.core.type.filter.AbstractClassTestingTypeFilter;

        r1 := @parameter0: org.springframework.core.type.classreading.MetadataReader;

        r3 := @parameter1: org.springframework.core.type.classreading.MetadataReaderFactory;

        $r2 = interfaceinvoke r1.<org.springframework.core.type.classreading.MetadataReader: org.springframework.core.type.ClassMetadata getClassMetadata()>();

        $z0 = virtualinvoke r0.<org.springframework.core.type.filter.AbstractClassTestingTypeFilter: boolean match(org.springframework.core.type.ClassMetadata)>($r2);

        return $z0;
    }

    protected abstract boolean match(org.springframework.core.type.ClassMetadata);
}
