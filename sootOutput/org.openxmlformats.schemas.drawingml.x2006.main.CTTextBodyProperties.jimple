public interface  org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties extends java.lang.Object implements org.apache.xmlbeans.XmlObject
{
    public static final org.apache.xmlbeans.SchemaType type;

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTPresetTextShape getPrstTxWarp();

    public abstract boolean isSetPrstTxWarp();

    public abstract void setPrstTxWarp(org.openxmlformats.schemas.drawingml.x2006.main.CTPresetTextShape);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTPresetTextShape addNewPrstTxWarp();

    public abstract void unsetPrstTxWarp();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTTextNoAutofit getNoAutofit();

    public abstract boolean isSetNoAutofit();

    public abstract void setNoAutofit(org.openxmlformats.schemas.drawingml.x2006.main.CTTextNoAutofit);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTTextNoAutofit addNewNoAutofit();

    public abstract void unsetNoAutofit();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTTextNormalAutofit getNormAutofit();

    public abstract boolean isSetNormAutofit();

    public abstract void setNormAutofit(org.openxmlformats.schemas.drawingml.x2006.main.CTTextNormalAutofit);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTTextNormalAutofit addNewNormAutofit();

    public abstract void unsetNormAutofit();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTTextShapeAutofit getSpAutoFit();

    public abstract boolean isSetSpAutoFit();

    public abstract void setSpAutoFit(org.openxmlformats.schemas.drawingml.x2006.main.CTTextShapeAutofit);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTTextShapeAutofit addNewSpAutoFit();

    public abstract void unsetSpAutoFit();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTScene3D getScene3D();

    public abstract boolean isSetScene3D();

    public abstract void setScene3D(org.openxmlformats.schemas.drawingml.x2006.main.CTScene3D);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTScene3D addNewScene3D();

    public abstract void unsetScene3D();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTShape3D getSp3D();

    public abstract boolean isSetSp3D();

    public abstract void setSp3D(org.openxmlformats.schemas.drawingml.x2006.main.CTShape3D);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTShape3D addNewSp3D();

    public abstract void unsetSp3D();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTFlatText getFlatTx();

    public abstract boolean isSetFlatTx();

    public abstract void setFlatTx(org.openxmlformats.schemas.drawingml.x2006.main.CTFlatText);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTFlatText addNewFlatTx();

    public abstract void unsetFlatTx();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtensionList getExtLst();

    public abstract boolean isSetExtLst();

    public abstract void setExtLst(org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtensionList);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtensionList addNewExtLst();

    public abstract void unsetExtLst();

    public abstract int getRot();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STAngle xgetRot();

    public abstract boolean isSetRot();

    public abstract void setRot(int);

    public abstract void xsetRot(org.openxmlformats.schemas.drawingml.x2006.main.STAngle);

    public abstract void unsetRot();

    public abstract boolean getSpcFirstLastPara();

    public abstract org.apache.xmlbeans.XmlBoolean xgetSpcFirstLastPara();

    public abstract boolean isSetSpcFirstLastPara();

    public abstract void setSpcFirstLastPara(boolean);

    public abstract void xsetSpcFirstLastPara(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetSpcFirstLastPara();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum getVertOverflow();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType xgetVertOverflow();

    public abstract boolean isSetVertOverflow();

    public abstract void setVertOverflow(org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum);

    public abstract void xsetVertOverflow(org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType);

    public abstract void unsetVertOverflow();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextHorzOverflowType$Enum getHorzOverflow();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextHorzOverflowType xgetHorzOverflow();

    public abstract boolean isSetHorzOverflow();

    public abstract void setHorzOverflow(org.openxmlformats.schemas.drawingml.x2006.main.STTextHorzOverflowType$Enum);

    public abstract void xsetHorzOverflow(org.openxmlformats.schemas.drawingml.x2006.main.STTextHorzOverflowType);

    public abstract void unsetHorzOverflow();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType$Enum getVert();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType xgetVert();

    public abstract boolean isSetVert();

    public abstract void setVert(org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType$Enum);

    public abstract void xsetVert(org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType);

    public abstract void unsetVert();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType$Enum getWrap();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType xgetWrap();

    public abstract boolean isSetWrap();

    public abstract void setWrap(org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType$Enum);

    public abstract void xsetWrap(org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType);

    public abstract void unsetWrap();

    public abstract int getLIns();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STCoordinate32 xgetLIns();

    public abstract boolean isSetLIns();

    public abstract void setLIns(int);

    public abstract void xsetLIns(org.openxmlformats.schemas.drawingml.x2006.main.STCoordinate32);

    public abstract void unsetLIns();

    public abstract int getTIns();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STCoordinate32 xgetTIns();

    public abstract boolean isSetTIns();

    public abstract void setTIns(int);

    public abstract void xsetTIns(org.openxmlformats.schemas.drawingml.x2006.main.STCoordinate32);

    public abstract void unsetTIns();

    public abstract int getRIns();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STCoordinate32 xgetRIns();

    public abstract boolean isSetRIns();

    public abstract void setRIns(int);

    public abstract void xsetRIns(org.openxmlformats.schemas.drawingml.x2006.main.STCoordinate32);

    public abstract void unsetRIns();

    public abstract int getBIns();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STCoordinate32 xgetBIns();

    public abstract boolean isSetBIns();

    public abstract void setBIns(int);

    public abstract void xsetBIns(org.openxmlformats.schemas.drawingml.x2006.main.STCoordinate32);

    public abstract void unsetBIns();

    public abstract int getNumCol();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextColumnCount xgetNumCol();

    public abstract boolean isSetNumCol();

    public abstract void setNumCol(int);

    public abstract void xsetNumCol(org.openxmlformats.schemas.drawingml.x2006.main.STTextColumnCount);

    public abstract void unsetNumCol();

    public abstract int getSpcCol();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate32 xgetSpcCol();

    public abstract boolean isSetSpcCol();

    public abstract void setSpcCol(int);

    public abstract void xsetSpcCol(org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate32);

    public abstract void unsetSpcCol();

    public abstract boolean getRtlCol();

    public abstract org.apache.xmlbeans.XmlBoolean xgetRtlCol();

    public abstract boolean isSetRtlCol();

    public abstract void setRtlCol(boolean);

    public abstract void xsetRtlCol(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetRtlCol();

    public abstract boolean getFromWordArt();

    public abstract org.apache.xmlbeans.XmlBoolean xgetFromWordArt();

    public abstract boolean isSetFromWordArt();

    public abstract void setFromWordArt(boolean);

    public abstract void xsetFromWordArt(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetFromWordArt();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum getAnchor();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType xgetAnchor();

    public abstract boolean isSetAnchor();

    public abstract void setAnchor(org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum);

    public abstract void xsetAnchor(org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType);

    public abstract void unsetAnchor();

    public abstract boolean getAnchorCtr();

    public abstract org.apache.xmlbeans.XmlBoolean xgetAnchorCtr();

    public abstract boolean isSetAnchorCtr();

    public abstract void setAnchorCtr(boolean);

    public abstract void xsetAnchorCtr(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetAnchorCtr();

    public abstract boolean getForceAA();

    public abstract org.apache.xmlbeans.XmlBoolean xgetForceAA();

    public abstract boolean isSetForceAA();

    public abstract void setForceAA(boolean);

    public abstract void xsetForceAA(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetForceAA();

    public abstract boolean getUpright();

    public abstract org.apache.xmlbeans.XmlBoolean xgetUpright();

    public abstract boolean isSetUpright();

    public abstract void setUpright(boolean);

    public abstract void xsetUpright(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetUpright();

    public abstract boolean getCompatLnSpc();

    public abstract org.apache.xmlbeans.XmlBoolean xgetCompatLnSpc();

    public abstract boolean isSetCompatLnSpc();

    public abstract void setCompatLnSpc(boolean);

    public abstract void xsetCompatLnSpc(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetCompatLnSpc();

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        java.lang.Class $r0;
        org.apache.xmlbeans.SchemaComponent $r3;
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.SchemaType $r4;

        $r0 = class "Lorg/openxmlformats/schemas/drawingml/x2006/main/CTTextBodyProperties;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem typeSystemForClassLoader(java.lang.ClassLoader,java.lang.String)>($r1, "schemaorg_apache_xmlbeans.system.sE130CAA0A01A7CDE5A2B4FEB8B311707");

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>("cttextbodyproperties87ddtype");

        $r4 = (org.apache.xmlbeans.SchemaType) $r3;

        <org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.apache.xmlbeans.SchemaType type> = $r4;

        return;
    }
}
