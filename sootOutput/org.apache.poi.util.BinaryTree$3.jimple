class org.apache.poi.util.BinaryTree$3 extends java.util.AbstractCollection
{
    final org.apache.poi.util.BinaryTree this$0;

    void <init>(org.apache.poi.util.BinaryTree)
    {
        org.apache.poi.util.BinaryTree r1;
        org.apache.poi.util.BinaryTree$3 r0;

        r0 := @this: org.apache.poi.util.BinaryTree$3;

        r1 := @parameter0: org.apache.poi.util.BinaryTree;

        r0.<org.apache.poi.util.BinaryTree$3: org.apache.poi.util.BinaryTree this$0> = r1;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        int $i0;
        org.apache.poi.util.BinaryTree$3$1 $r0;
        org.apache.poi.util.BinaryTree$3 r1;

        r1 := @this: org.apache.poi.util.BinaryTree$3;

        $r0 = new org.apache.poi.util.BinaryTree$3$1;

        $i0 = <org.apache.poi.util.BinaryTree: int _VALUE>;

        specialinvoke $r0.<org.apache.poi.util.BinaryTree$3$1: void <init>(org.apache.poi.util.BinaryTree$3,int)>(r1, $i0);

        return $r0;
    }

    public int size()
    {
        int $i0;
        org.apache.poi.util.BinaryTree $r1;
        org.apache.poi.util.BinaryTree$3 r0;

        r0 := @this: org.apache.poi.util.BinaryTree$3;

        $r1 = r0.<org.apache.poi.util.BinaryTree$3: org.apache.poi.util.BinaryTree this$0>;

        $i0 = virtualinvoke $r1.<org.apache.poi.util.BinaryTree: int size()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.poi.util.BinaryTree $r2;
        org.apache.poi.util.BinaryTree$3 r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.poi.util.BinaryTree$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.poi.util.BinaryTree$3: org.apache.poi.util.BinaryTree this$0>;

        $z0 = virtualinvoke $r2.<org.apache.poi.util.BinaryTree: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.poi.util.BinaryTree $r1, $r3, $r4;
        org.apache.poi.util.BinaryTree$3 r0;
        int i0, $i1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.poi.util.BinaryTree$3;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.poi.util.BinaryTree$3: org.apache.poi.util.BinaryTree this$0>;

        i0 = $r1.<org.apache.poi.util.BinaryTree: int _size>;

        $r3 = r0.<org.apache.poi.util.BinaryTree$3: org.apache.poi.util.BinaryTree this$0>;

        virtualinvoke $r3.<org.apache.poi.util.BinaryTree: java.lang.Object removeValue(java.lang.Object)>(r2);

        $r4 = r0.<org.apache.poi.util.BinaryTree$3: org.apache.poi.util.BinaryTree this$0>;

        $i1 = $r4.<org.apache.poi.util.BinaryTree: int _size>;

        if $i1 == i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        org.apache.poi.util.BinaryTree $r3;
        java.util.Iterator $r1;
        java.util.Collection r0;
        org.apache.poi.util.BinaryTree$3 r2;
        java.lang.Object $r4, $r5;
        boolean z0, $z1;

        r2 := @this: org.apache.poi.util.BinaryTree$3;

        r0 := @parameter0: java.util.Collection;

        z0 = 0;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = r2.<org.apache.poi.util.BinaryTree$3: org.apache.poi.util.BinaryTree this$0>;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = virtualinvoke $r3.<org.apache.poi.util.BinaryTree: java.lang.Object removeValue(java.lang.Object)>($r4);

        if $r5 == null goto label1;

        z0 = 1;

        goto label1;

     label2:
        return z0;
    }

    public void clear()
    {
        org.apache.poi.util.BinaryTree $r1;
        org.apache.poi.util.BinaryTree$3 r0;

        r0 := @this: org.apache.poi.util.BinaryTree$3;

        $r1 = r0.<org.apache.poi.util.BinaryTree$3: org.apache.poi.util.BinaryTree this$0>;

        virtualinvoke $r1.<org.apache.poi.util.BinaryTree: void clear()>();

        return;
    }
}
