public class org.pircbotx.DccChat extends java.lang.Object implements java.io.Closeable
{
    private org.pircbotx.PircBotX bot;
    private org.pircbotx.User user;
    private java.io.BufferedReader reader;
    private java.io.BufferedWriter writer;
    private java.net.Socket socket;
    private boolean acceptable;
    private java.net.InetAddress address;
    private int port;

    protected void <init>(org.pircbotx.PircBotX, org.pircbotx.User, java.net.InetAddress, int)
    {
        java.net.InetAddress r2;
        org.pircbotx.DccManager $r4;
        int i0;
        org.pircbotx.DccChat r0;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r3;

        r0 := @this: org.pircbotx.DccChat;

        r1 := @parameter0: org.pircbotx.PircBotX;

        r3 := @parameter1: org.pircbotx.User;

        r2 := @parameter2: java.net.InetAddress;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.pircbotx.DccChat: int port> = 0;

        r0.<org.pircbotx.DccChat: org.pircbotx.PircBotX bot> = r1;

        r0.<org.pircbotx.DccChat: java.net.InetAddress address> = r2;

        r0.<org.pircbotx.DccChat: int port> = i0;

        r0.<org.pircbotx.DccChat: org.pircbotx.User user> = r3;

        r0.<org.pircbotx.DccChat: boolean acceptable> = 1;

        $r4 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.DccManager getDccManager()>();

        virtualinvoke $r4.<org.pircbotx.DccManager: org.pircbotx.DccChat addDccChat(org.pircbotx.DccChat)>(r0);

        return;
    }

    protected void <init>(org.pircbotx.PircBotX, org.pircbotx.User, java.net.Socket) throws java.io.IOException
    {
        java.io.OutputStream $r9;
        java.net.Socket r3;
        org.pircbotx.DccManager $r10;
        java.io.BufferedWriter $r7;
        java.io.InputStreamReader $r5;
        java.io.OutputStreamWriter $r8;
        org.pircbotx.DccChat r0;
        java.io.BufferedReader $r4;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r2;
        java.io.InputStream $r6;

        r0 := @this: org.pircbotx.DccChat;

        r1 := @parameter0: org.pircbotx.PircBotX;

        r2 := @parameter1: org.pircbotx.User;

        r3 := @parameter2: java.net.Socket;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.pircbotx.DccChat: int port> = 0;

        r0.<org.pircbotx.DccChat: org.pircbotx.PircBotX bot> = r1;

        r0.<org.pircbotx.DccChat: org.pircbotx.User user> = r2;

        r0.<org.pircbotx.DccChat: java.net.Socket socket> = r3;

        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.InputStreamReader;

        $r6 = virtualinvoke r3.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        r0.<org.pircbotx.DccChat: java.io.BufferedReader reader> = $r4;

        $r7 = new java.io.BufferedWriter;

        $r8 = new java.io.OutputStreamWriter;

        $r9 = virtualinvoke r3.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r8.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r9);

        specialinvoke $r7.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r8);

        r0.<org.pircbotx.DccChat: java.io.BufferedWriter writer> = $r7;

        r0.<org.pircbotx.DccChat: boolean acceptable> = 0;

        $r10 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.DccManager getDccManager()>();

        virtualinvoke $r10.<org.pircbotx.DccManager: org.pircbotx.DccChat addDccChat(org.pircbotx.DccChat)>(r0);

        return;
    }

    public synchronized void accept() throws java.io.IOException
    {
        java.io.OutputStream $r10;
        java.net.Socket $r1, $r5, $r9;
        java.io.BufferedWriter $r7;
        java.io.IOException $r11;
        java.io.InputStreamReader $r4;
        java.net.InetAddress $r2;
        int $i0;
        java.io.OutputStreamWriter $r8;
        org.pircbotx.DccChat r0;
        java.io.BufferedReader $r3;
        boolean $z0;
        java.io.InputStream $r6;

        r0 := @this: org.pircbotx.DccChat;

        $z0 = r0.<org.pircbotx.DccChat: boolean acceptable>;

        if $z0 != 0 goto label1;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Connection already created");

        throw $r11;

     label1:
        r0.<org.pircbotx.DccChat: boolean acceptable> = 0;

        $r1 = new java.net.Socket;

        $r2 = r0.<org.pircbotx.DccChat: java.net.InetAddress address>;

        $i0 = r0.<org.pircbotx.DccChat: int port>;

        specialinvoke $r1.<java.net.Socket: void <init>(java.net.InetAddress,int)>($r2, $i0);

        r0.<org.pircbotx.DccChat: java.net.Socket socket> = $r1;

        $r3 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        $r5 = r0.<org.pircbotx.DccChat: java.net.Socket socket>;

        $r6 = virtualinvoke $r5.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

        r0.<org.pircbotx.DccChat: java.io.BufferedReader reader> = $r3;

        $r7 = new java.io.BufferedWriter;

        $r8 = new java.io.OutputStreamWriter;

        $r9 = r0.<org.pircbotx.DccChat: java.net.Socket socket>;

        $r10 = virtualinvoke $r9.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r8.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r10);

        specialinvoke $r7.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r8);

        r0.<org.pircbotx.DccChat: java.io.BufferedWriter writer> = $r7;

        return;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        org.pircbotx.DccChat r0;
        java.io.IOException $r3;
        java.io.BufferedReader $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.pircbotx.DccChat;

        $z0 = r0.<org.pircbotx.DccChat: boolean acceptable>;

        if $z0 == 0 goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("You must call the accept() method of the DccChat request before you can use it.");

        throw $r3;

     label1:
        $r1 = r0.<org.pircbotx.DccChat: java.io.BufferedReader reader>;

        $r2 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        return $r2;
    }

    public void sendLine(java.lang.String) throws java.io.IOException
    {
        java.io.BufferedWriter $r2, $r7;
        java.io.IOException $r8;
        org.pircbotx.DccChat r0;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.String r3, $r6;
        boolean $z0;

        r0 := @this: org.pircbotx.DccChat;

        r3 := @parameter0: java.lang.String;

        $z0 = r0.<org.pircbotx.DccChat: boolean acceptable>;

        if $z0 == 0 goto label1;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("You must call the accept() method of the DccChat request before you can use it.");

        throw $r8;

     label1:
        $r2 = r0.<org.pircbotx.DccChat: java.io.BufferedWriter writer>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>($r6);

        $r7 = r0.<org.pircbotx.DccChat: java.io.BufferedWriter writer>;

        virtualinvoke $r7.<java.io.BufferedWriter: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        java.net.Socket $r1;
        org.pircbotx.DccManager $r3;
        org.pircbotx.DccChat r0;
        java.io.IOException $r4;
        org.pircbotx.PircBotX $r2;
        boolean $z0;

        r0 := @this: org.pircbotx.DccChat;

        $z0 = r0.<org.pircbotx.DccChat: boolean acceptable>;

        if $z0 == 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("You must call the accept() method of the DccChat request before you can use it.");

        throw $r4;

     label1:
        $r1 = r0.<org.pircbotx.DccChat: java.net.Socket socket>;

        virtualinvoke $r1.<java.net.Socket: void close()>();

        $r2 = r0.<org.pircbotx.DccChat: org.pircbotx.PircBotX bot>;

        $r3 = virtualinvoke $r2.<org.pircbotx.PircBotX: org.pircbotx.DccManager getDccManager()>();

        virtualinvoke $r3.<org.pircbotx.DccManager: org.pircbotx.DccChat removeDccChat(org.pircbotx.DccChat)>(r0);

        return;
    }

    public java.io.BufferedReader getBufferedReader()
    {
        org.pircbotx.DccChat r0;
        java.io.BufferedReader $r1;

        r0 := @this: org.pircbotx.DccChat;

        $r1 = r0.<org.pircbotx.DccChat: java.io.BufferedReader reader>;

        return $r1;
    }

    public java.io.BufferedWriter getBufferedWriter()
    {
        org.pircbotx.DccChat r0;
        java.io.BufferedWriter $r1;

        r0 := @this: org.pircbotx.DccChat;

        $r1 = r0.<org.pircbotx.DccChat: java.io.BufferedWriter writer>;

        return $r1;
    }

    public java.net.Socket getSocket()
    {
        org.pircbotx.DccChat r0;
        java.net.Socket $r1;

        r0 := @this: org.pircbotx.DccChat;

        $r1 = r0.<org.pircbotx.DccChat: java.net.Socket socket>;

        return $r1;
    }

    public org.pircbotx.User getUser()
    {
        org.pircbotx.DccChat r0;
        org.pircbotx.User $r1;

        r0 := @this: org.pircbotx.DccChat;

        $r1 = r0.<org.pircbotx.DccChat: org.pircbotx.User user>;

        return $r1;
    }

    public java.net.InetAddress getAddress()
    {
        java.net.InetAddress $r1;
        org.pircbotx.DccChat r0;

        r0 := @this: org.pircbotx.DccChat;

        $r1 = r0.<org.pircbotx.DccChat: java.net.InetAddress address>;

        return $r1;
    }
}
