final class org.apache.lucene.index.FreqProxTermsWriter extends org.apache.lucene.index.TermsHashConsumer
{
    org.apache.lucene.util.BytesRef payload;
    static final boolean $assertionsDisabled;

    void <init>()
    {
        org.apache.lucene.index.FreqProxTermsWriter r0;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriter;

        specialinvoke r0.<org.apache.lucene.index.TermsHashConsumer: void <init>()>();

        return;
    }

    void abort()
    {
        org.apache.lucene.index.FreqProxTermsWriter r0;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriter;

        return;
    }

    public void flush(java.util.Map, org.apache.lucene.index.SegmentWriteState) throws java.io.IOException
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField $r12, r15, r28;
        org.apache.lucene.util.BytesRefHash $r22, $r30;
        org.apache.lucene.codecs.FieldsConsumer $r8;
        java.util.Map r1;
        java.io.Closeable[] $r9, $r10, $r24, $r25;
        boolean $z0, $z1;
        org.apache.lucene.index.TermsHashConsumerPerField r27;
        java.util.Collection $r2;
        org.apache.lucene.index.SegmentInfo $r5;
        org.apache.lucene.codecs.PostingsFormat $r7;
        java.lang.Throwable $r23;
        org.apache.lucene.index.TermsHashPerField r17, $r21;
        java.lang.AssertionError $r19;
        java.util.ArrayList $r0;
        int $i0, $i1, i2, $i3;
        org.apache.lucene.index.SegmentWriteState r4;
        java.lang.String $r16;
        org.apache.lucene.index.TermsHash $r18, r29;
        java.util.Iterator $r3;
        org.apache.lucene.index.FreqProxTermsWriter r26;
        org.apache.lucene.codecs.Codec $r6;
        org.apache.lucene.index.FieldInfo r13;
        java.lang.Object $r11, $r14, $r20;

        r26 := @this: org.apache.lucene.index.FreqProxTermsWriter;

        r1 := @parameter0: java.util.Map;

        r4 := @parameter1: org.apache.lucene.index.SegmentWriteState;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r20 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r27 = (org.apache.lucene.index.TermsHashConsumerPerField) $r20;

        r28 = (org.apache.lucene.index.FreqProxTermsWriterPerField) r27;

        $r21 = r28.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r22 = $r21.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash>;

        $i1 = virtualinvoke $r22.<org.apache.lucene.util.BytesRefHash: int size()>();

        if $i1 <= 0 goto label02;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r28);

     label02:
        goto label01;

     label03:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        staticinvoke <org.apache.lucene.util.CollectionUtil: void quickSort(java.util.List)>($r0);

        $r5 = r4.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec getCodec()>();

        $r7 = virtualinvoke $r6.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.PostingsFormat postingsFormat()>();

        $r8 = virtualinvoke $r7.<org.apache.lucene.codecs.PostingsFormat: org.apache.lucene.codecs.FieldsConsumer fieldsConsumer(org.apache.lucene.index.SegmentWriteState)>(r4);

     label04:
        r29 = null;

        i2 = 0;

     label05:
        if i2 >= $i0 goto label07;

        $r11 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r12 = (org.apache.lucene.index.FreqProxTermsWriterPerField) $r11;

        r13 = $r12.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r14 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        r15 = (org.apache.lucene.index.FreqProxTermsWriterPerField) $r14;

        $r16 = r13.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        virtualinvoke r15.<org.apache.lucene.index.FreqProxTermsWriterPerField: void flush(java.lang.String,org.apache.lucene.codecs.FieldsConsumer,org.apache.lucene.index.SegmentWriteState)>($r16, $r8, r4);

        r17 = r15.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $z1 = <org.apache.lucene.index.FreqProxTermsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label06;

        if r29 == null goto label06;

        $r18 = r17.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHash termsHash>;

        if r29 == $r18 goto label06;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label06:
        r29 = r17.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHash termsHash>;

        $r30 = r17.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash>;

        $i3 = virtualinvoke $r30.<org.apache.lucene.util.BytesRefHash: int size()>();

        virtualinvoke r17.<org.apache.lucene.index.TermsHashPerField: void reset()>();

        virtualinvoke r17.<org.apache.lucene.index.TermsHashPerField: void shrinkHash(int)>($i3);

        virtualinvoke r15.<org.apache.lucene.index.FreqProxTermsWriterPerField: void reset()>();

        i2 = i2 + 1;

        goto label05;

     label07:
        if r29 == null goto label08;

        virtualinvoke r29.<org.apache.lucene.index.TermsHash: void reset()>();

     label08:
        if 1 == 0 goto label09;

        $r10 = newarray (java.io.Closeable)[1];

        $r10[0] = $r8;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r10);

        goto label14;

     label09:
        $r9 = newarray (java.io.Closeable)[1];

        $r9[0] = $r8;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r9);

        goto label14;

     label10:
        $r23 := @caughtexception;

     label11:
        if 0 == 0 goto label12;

        $r25 = newarray (java.io.Closeable)[1];

        $r25[0] = $r8;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r25);

        goto label13;

     label12:
        $r24 = newarray (java.io.Closeable)[1];

        $r24[0] = $r8;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r24);

     label13:
        throw $r23;

     label14:
        return;

        catch java.lang.Throwable from label04 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public org.apache.lucene.index.TermsHashConsumerPerField addField(org.apache.lucene.index.TermsHashPerField, org.apache.lucene.index.FieldInfo)
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField $r0;
        org.apache.lucene.index.TermsHashPerField r1;
        org.apache.lucene.index.FieldInfo r3;
        org.apache.lucene.index.FreqProxTermsWriter r2;

        r2 := @this: org.apache.lucene.index.FreqProxTermsWriter;

        r1 := @parameter0: org.apache.lucene.index.TermsHashPerField;

        r3 := @parameter1: org.apache.lucene.index.FieldInfo;

        $r0 = new org.apache.lucene.index.FreqProxTermsWriterPerField;

        specialinvoke $r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: void <init>(org.apache.lucene.index.TermsHashPerField,org.apache.lucene.index.FreqProxTermsWriter,org.apache.lucene.index.FieldInfo)>(r1, r2, r3);

        return $r0;
    }

    void finishDocument(org.apache.lucene.index.TermsHash)
    {
        org.apache.lucene.index.TermsHash r1;
        org.apache.lucene.index.FreqProxTermsWriter r0;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriter;

        r1 := @parameter0: org.apache.lucene.index.TermsHash;

        return;
    }

    void startDocument()
    {
        org.apache.lucene.index.FreqProxTermsWriter r0;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriter;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/FreqProxTermsWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.FreqProxTermsWriter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
