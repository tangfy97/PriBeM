class com.hp.hpl.jena.shared.uuid.LibUUID extends java.lang.Object
{

    void <init>()
    {
        com.hp.hpl.jena.shared.uuid.LibUUID r0;

        r0 := @this: com.hp.hpl.jena.shared.uuid.LibUUID;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.util.Random makeRandom()
    {
        java.security.SecureRandom $r0;
        byte[] $r1, $r2;

        $r0 = new java.security.SecureRandom;

        specialinvoke $r0.<java.security.SecureRandom: void <init>()>();

        $r1 = virtualinvoke $r0.<java.security.SecureRandom: byte[] generateSeed(int)>(16);

        $r2 = staticinvoke <com.hp.hpl.jena.shared.uuid.LibUUID: byte[] makeSeed()>();

        virtualinvoke $r0.<java.security.SecureRandom: void setSeed(byte[])>($r1);

        virtualinvoke $r0.<java.security.SecureRandom: void setSeed(byte[])>($r2);

        return $r0;
    }

    static byte[] makeSeed()
    {
        byte[] $r15;
        long $l1, $l2, $l3, $l5;
        java.net.InetAddress $r1;
        java.lang.StringBuffer $r0;
        int $i0, $i4;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r8, $r10, $r11, $r13, $r14;
        java.lang.Runtime $r7, $r9;
        java.net.UnknownHostException $r16;
        java.lang.Object $r12;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(200);

     label1:
        $r1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();

        $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

     label4:
        $r3 = staticinvoke <com.hp.hpl.jena.JenaRuntime: java.lang.String getSystemProperty(java.lang.String)>("os.version");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = staticinvoke <com.hp.hpl.jena.JenaRuntime: java.lang.String getSystemProperty(java.lang.String)>("user.name");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = staticinvoke <com.hp.hpl.jena.JenaRuntime: java.lang.String getSystemProperty(java.lang.String)>("java.version");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $i0 = staticinvoke <java.lang.Thread: int activeCount()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l1 = virtualinvoke $r7.<java.lang.Runtime: long freeMemory()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r9 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l2 = virtualinvoke $r9.<java.lang.Runtime: long totalMemory()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r12 = new java.lang.Object;

        specialinvoke $r12.<java.lang.Object: void <init>()>();

        $i4 = virtualinvoke $r12.<java.lang.Object: int hashCode()>();

        $l5 = (long) $i4;

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>();

        return $r15;

        catch java.net.UnknownHostException from label1 to label2 with label3;
    }
}
