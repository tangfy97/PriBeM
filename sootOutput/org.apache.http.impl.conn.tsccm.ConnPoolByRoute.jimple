public class org.apache.http.impl.conn.tsccm.ConnPoolByRoute extends org.apache.http.impl.conn.tsccm.AbstractConnPool
{
    private final org.apache.commons.logging.Log log;
    private final java.util.concurrent.locks.Lock poolLock;
    protected final org.apache.http.conn.ClientConnectionOperator operator;
    protected final org.apache.http.conn.params.ConnPerRoute connPerRoute;
    protected final java.util.Set leasedConnections;
    protected final java.util.Queue freeConnections;
    protected final java.util.Queue waitingThreads;
    protected final java.util.Map routeToPool;
    private final long connTTL;
    private final java.util.concurrent.TimeUnit connTTLTimeUnit;
    protected volatile boolean shutdown;
    protected volatile int maxTotalConnections;
    protected volatile int numConnections;

    public void <init>(org.apache.http.conn.ClientConnectionOperator, org.apache.http.conn.params.ConnPerRoute, int)
    {
        java.util.concurrent.TimeUnit $r3;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.ClientConnectionOperator r1;
        int i0;
        org.apache.http.conn.params.ConnPerRoute r2;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.ClientConnectionOperator;

        r2 := @parameter1: org.apache.http.conn.params.ConnPerRoute;

        i0 := @parameter2: int;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        specialinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.params.ConnPerRoute,int,long,java.util.concurrent.TimeUnit)>(r1, r2, i0, -1L, $r3);

        return;
    }

    public void <init>(org.apache.http.conn.ClientConnectionOperator, org.apache.http.conn.params.ConnPerRoute, int, long, java.util.concurrent.TimeUnit)
    {
        java.util.Set $r6;
        long l1;
        java.lang.IllegalArgumentException $r11, $r12;
        java.util.concurrent.TimeUnit r10;
        java.util.concurrent.locks.Lock $r5;
        java.util.Map $r9;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.ClientConnectionOperator r3;
        int i0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.apache.http.conn.params.ConnPerRoute r4;
        java.util.Queue $r7, $r8;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r3 := @parameter0: org.apache.http.conn.ClientConnectionOperator;

        r4 := @parameter1: org.apache.http.conn.params.ConnPerRoute;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        r10 := @parameter4: java.util.concurrent.TimeUnit;

        specialinvoke r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log> = $r2;

        if r3 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection operator may not be null");

        throw $r12;

     label1:
        if r4 != null goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connections per route may not be null");

        throw $r11;

     label2:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock> = $r5;

        $r6 = r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.Set leasedConnections>;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections> = $r6;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator> = r3;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.params.ConnPerRoute connPerRoute> = r4;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections> = i0;

        $r7 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createFreeConnQueue()>();

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections> = $r7;

        $r8 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createWaitingThreadQueue()>();

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads> = $r8;

        $r9 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map createRouteToPoolMap()>();

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool> = $r9;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: long connTTL> = l1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.TimeUnit connTTLTimeUnit> = r10;

        return;
    }

    protected java.util.concurrent.locks.Lock getLock()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.concurrent.locks.Lock $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        return $r1;
    }

    public void <init>(org.apache.http.conn.ClientConnectionOperator, org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r2;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.ClientConnectionOperator r1;
        int $i0;
        org.apache.http.conn.params.ConnPerRoute $r3;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.ClientConnectionOperator;

        r2 := @parameter1: org.apache.http.params.HttpParams;

        $r3 = staticinvoke <org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>(r2);

        $i0 = staticinvoke <org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)>(r2);

        specialinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.params.ConnPerRoute,int)>(r1, $r3, $i0);

        return;
    }

    protected java.util.Queue createFreeConnQueue()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r1;
        java.util.LinkedList $r0;

        r1 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        return $r0;
    }

    protected java.util.Queue createWaitingThreadQueue()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r1;
        java.util.LinkedList $r0;

        r1 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        return $r0;
    }

    protected java.util.Map createRouteToPoolMap()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r1;
        java.util.HashMap $r0;

        r1 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        return $r0;
    }

    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r2;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.conn.params.ConnPerRoute $r3;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r0;

        r2 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r0 = new org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r3 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.params.ConnPerRoute connPerRoute>;

        specialinvoke $r0.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void <init>(org.apache.http.conn.routing.HttpRoute,org.apache.http.conn.params.ConnPerRoute)>(r1, $r3);

        return $r0;
    }

    protected org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition, org.apache.http.impl.conn.tsccm.RouteSpecificPool)
    {
        java.util.concurrent.locks.Condition r1;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r3;
        org.apache.http.impl.conn.tsccm.WaitingThread $r0;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r2;

        r3 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: java.util.concurrent.locks.Condition;

        r2 := @parameter1: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r0 = new org.apache.http.impl.conn.tsccm.WaitingThread;

        specialinvoke $r0.<org.apache.http.impl.conn.tsccm.WaitingThread: void <init>(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)>(r1, r2);

        return $r0;
    }

    private void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry)
    {
        org.apache.http.conn.OperatedClientConnection $r1;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r0;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r3;
        java.io.IOException $r2;
        org.apache.commons.logging.Log $r4;

        r3 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r0 := @parameter0: org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        $r1 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        if $r1 == null goto label4;

     label1:
        interfaceinvoke $r1.<org.apache.http.conn.OperatedClientConnection: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r4 = r3.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("I/O error closing connection", $r2);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute, boolean)
    {
        java.lang.Throwable $r7;
        org.apache.http.conn.routing.HttpRoute r2;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r5, r9;
        java.util.concurrent.locks.Lock $r1, $r8, $r10;
        java.util.Map $r3, $r6;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.lang.Object $r4;
        boolean z0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r2 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r9 = (org.apache.http.impl.conn.tsccm.RouteSpecificPool) $r4;

        if r9 != null goto label2;

        if z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute)>(r2);

        r9 = $r5;

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r5);

     label2:
        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r7;

     label5:
        return r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)
    {
        java.lang.Throwable $r5;
        org.apache.http.conn.routing.HttpRoute r2;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r3;
        java.util.concurrent.locks.Lock $r1, $r4, $r6;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        int $i0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r2 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r2, 0);

        if $r3 == null goto label2;

        $i0 = virtualinvoke $r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>();

        goto label3;

     label2:
        $i0 = 0;

     label3:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        return $i0;

     label4:
        $r5 := @caughtexception;

     label5:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getConnectionsInPool()
    {
        java.lang.Throwable $r3;
        java.util.concurrent.locks.Lock $r1, $r2, $r4;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        int i0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

     label2:
        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute, java.lang.Object)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 $r1;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r2;
        org.apache.http.impl.conn.tsccm.WaitingThreadAborter $r0;
        java.lang.Object r4;
        org.apache.http.conn.routing.HttpRoute r3;

        r2 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r3 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r4 := @parameter1: java.lang.Object;

        $r0 = new org.apache.http.impl.conn.tsccm.WaitingThreadAborter;

        specialinvoke $r0.<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void <init>()>();

        $r1 = new org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1;

        specialinvoke $r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1: void <init>(org.apache.http.impl.conn.tsccm.ConnPoolByRoute,org.apache.http.impl.conn.tsccm.WaitingThreadAborter,org.apache.http.conn.routing.HttpRoute,java.lang.Object)>(r2, $r0, r3, r4);

        return $r1;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute, java.lang.Object, long, java.util.concurrent.TimeUnit, org.apache.http.impl.conn.tsccm.WaitingThreadAborter) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException
    {
        byte $b1, $b5;
        java.util.Set $r48;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r42, $r43, $r44, $r46, $r47, $r49, $r50, $r51, $r52, $r53, $r68, $r69, $r70;
        java.lang.Throwable $r58, $r60;
        long l0, $l3, $l4, $l14, $l15, $l16;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r6, r63;
        org.apache.http.impl.conn.tsccm.WaitingThreadAborter r15;
        java.lang.String $r23, $r39, $r54;
        org.apache.http.conn.ConnectionPoolTimeoutException $r71;
        java.util.concurrent.locks.Lock $r1, $r3, $r12, $r59;
        java.lang.IllegalStateException $r67;
        java.util.Date r62, $r66;
        org.apache.http.impl.conn.tsccm.WaitingThread $r14, r65;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Queue $r9, $r10, $r24, $r45, $r61;
        org.apache.http.conn.routing.HttpRoute r2;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r25, r64;
        int $i2, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i17, $i18;
        org.apache.http.conn.ClientConnectionOperator $r26, $r27;
        java.util.concurrent.TimeUnit r57;
        java.util.concurrent.locks.Condition $r13;
        org.apache.commons.logging.Log $r4, $r7, $r8, $r17, $r29, $r41;
        java.lang.Object r5;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r2 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r5 := @parameter1: java.lang.Object;

        l0 := @parameter2: long;

        r57 := @parameter3: java.util.concurrent.TimeUnit;

        r15 := @parameter4: org.apache.http.impl.conn.tsccm.WaitingThreadAborter;

        r62 = null;

        $b1 = l0 cmp 0L;

        $i17 = (int) $b1;

        if $i17 <= 0 goto label01;

        $r66 = new java.util.Date;

        $l14 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l15 = virtualinvoke r57.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);

        $l16 = $l14 + $l15;

        specialinvoke $r66.<java.util.Date: void <init>(long)>($l16);

        r62 = $r66;

     label01:
        r63 = null;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        r64 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r2, 1);

        r65 = null;

     label03:
        if r63 != null goto label19;

        $z0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: boolean shutdown>;

        if $z0 == 0 goto label04;

        $r67 = new java.lang.IllegalStateException;

        specialinvoke $r67.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Connection pool shut down");

        throw $r67;

     label04:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label05;

        $r41 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] total kept alive: ");

        $r45 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $i10 = interfaceinvoke $r45.<java.util.Queue: int size()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", total issued: ");

        $r48 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections>;

        $i11 = interfaceinvoke $r48.<java.util.Set: int size()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", total allocated: ");

        $i12 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ");

        $i13 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r54);

     label05:
        $r6 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>(r64, r5);

        r63 = $r6;

        if $r6 == null goto label06;

        goto label19;

     label06:
        $i2 = virtualinvoke r64.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

        if $i2 <= 0 goto label07;

        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        z2 = $z7;

        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label09;

        $r29 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Available capacity: ");

        $i8 = virtualinvoke r64.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ");

        $i9 = virtualinvoke r64.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r39);

     label09:
        if z2 == 0 goto label10;

        $i7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

        if $i7 >= $i6 goto label10;

        $r27 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator>;

        r63 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>(r64, $r27);

        goto label18;

     label10:
        if z2 == 0 goto label11;

        $r24 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $z6 = interfaceinvoke $r24.<java.util.Queue: boolean isEmpty()>();

        if $z6 != 0 goto label11;

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteLeastUsedEntry()>();

        $r25 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r2, 1);

        r64 = $r25;

        $r26 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator>;

        r63 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>($r25, $r26);

        goto label18;

     label11:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z4 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label12;

        $r17 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need to wait for connection [");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r23);

     label12:
        if r65 != null goto label13;

        $r12 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        $r14 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)>($r13, r64);

        r65 = $r14;

        virtualinvoke r15.<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread)>($r14);

     label13:
        virtualinvoke r64.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r65);

        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r9.<java.util.Queue: boolean add(java.lang.Object)>(r65);

        $z5 = virtualinvoke r65.<org.apache.http.impl.conn.tsccm.WaitingThread: boolean await(java.util.Date)>(r62);

     label14:
        virtualinvoke r64.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r65);

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r10.<java.util.Queue: boolean remove(java.lang.Object)>(r65);

        goto label17;

     label15:
        $r60 := @caughtexception;

     label16:
        virtualinvoke r64.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r65);

        $r61 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r61.<java.util.Queue: boolean remove(java.lang.Object)>(r65);

        throw $r60;

     label17:
        if $z5 != 0 goto label18;

        if r62 == null goto label18;

        $l3 = virtualinvoke r62.<java.util.Date: long getTime()>();

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b5 = $l3 cmp $l4;

        $i18 = (int) $b5;

        if $i18 > 0 goto label18;

        $r71 = new org.apache.http.conn.ConnectionPoolTimeoutException;

        specialinvoke $r71.<org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>("Timeout waiting for connection from pool");

        throw $r71;

     label18:
        goto label03;

     label19:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label22;

     label20:
        $r58 := @caughtexception;

     label21:
        $r59 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r59.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r58;

     label22:
        return r63;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Throwable from label02 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry, boolean, long, java.util.concurrent.TimeUnit)
    {
        byte $b4;
        boolean $z0, $z1, z2, $z3;
        java.util.Set $r5;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r2;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17, $r20, $r21, $r22, $r23, $r27, $r28, $r29, $r31, $r32, $r39, $r40, $r41;
        java.util.Queue $r37;
        java.lang.Throwable $r34;
        long l3;
        org.apache.http.conn.routing.HttpRoute $r1;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r6;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r0;
        int $i0, $i1, $i2, $i5;
        java.lang.String $r18, $r33, r36;
        java.util.concurrent.TimeUnit r8;
        java.util.concurrent.locks.Lock $r4, $r24, $r35, $r38;
        org.apache.commons.logging.Log $r3, $r7, $r10, $r26;
        java.lang.Object $r14, $r30;

        r2 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r0 := @parameter0: org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        z2 := @parameter1: boolean;

        l3 := @parameter2: long;

        r8 := @parameter3: java.util.concurrent.TimeUnit;

        $r1 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>();

        $r3 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r26 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Releasing connection [");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r30 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r33);

     label01:
        $r4 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        $z1 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: boolean shutdown>;

        if $z1 == 0 goto label04;

        specialinvoke r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r0);

     label03:
        $r24 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r24.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label04:
        $r5 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections>;

        interfaceinvoke $r5.<java.util.Set: boolean remove(java.lang.Object)>(r0);

        $r6 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>($r1, 1);

        if z2 == 0 goto label08;

        $i2 = virtualinvoke $r6.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

        if $i2 < 0 goto label08;

        $r7 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label07;

        $b4 = l3 cmp 0L;

        $i5 = (int) $b4;

        if $i5 <= 0 goto label05;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        r36 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label06;

     label05:
        r36 = "indefinitely";

     label06:
        $r10 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pooling connection [");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r14 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]; keep alive ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

     label07:
        virtualinvoke $r6.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r0);

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: void updateExpiry(long,java.util.concurrent.TimeUnit)>(l3, r8);

        $r37 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        interfaceinvoke $r37.<java.util.Queue: boolean add(java.lang.Object)>(r0);

        goto label09;

     label08:
        specialinvoke r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r0);

        virtualinvoke $r6.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $i0 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 - 1;

        r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

     label09:
        virtualinvoke r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)>($r6);

     label10:
        $r38 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r38.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label13;

     label11:
        $r34 := @caughtexception;

     label12:
        $r35 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r35.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r34;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool, java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, z4;
        java.util.Set $r18;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r13, $r14, $r20, $r22, $r24, $r25, $r26, $r27, $r29, $r31, $r33, $r34, $r35, $r36;
        java.util.Queue $r17;
        java.lang.Throwable $r38;
        long $l0;
        org.apache.http.conn.routing.HttpRoute $r10, $r23, $r32;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r3;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r5, r40;
        int $i1, $i2;
        java.lang.String $r15, $r28, $r37;
        java.util.concurrent.locks.Lock $r1, $r2, $r39;
        java.lang.Object r4;
        org.apache.commons.logging.Log $r6, $r8, $r16, $r19, $r21, $r30;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r3 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        r4 := @parameter1: java.lang.Object;

        r40 = null;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        z4 = 0;

     label02:
        if z4 != 0 goto label07;

        $r5 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object)>(r4);

        r40 = $r5;

        if $r5 == null goto label06;

        $r16 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label03;

        $r30 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting free connection [");

        $r32 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r37);

     label03:
        $r17 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        interfaceinvoke $r17.<java.util.Queue: boolean remove(java.lang.Object)>($r5);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $z2 = virtualinvoke $r5.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: boolean isExpired(long)>($l0);

        if $z2 == 0 goto label05;

        $r19 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r19.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label04;

        $r21 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing expired free connection [");

        $r23 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r28);

     label04:
        specialinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>($r5);

        virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $i1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i2 = $i1 - 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i2;

        goto label02;

     label05:
        $r18 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections>;

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>($r5);

        z4 = 1;

        goto label02;

     label06:
        z4 = 1;

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label02;

        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No free connections [");

        $r10 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

        goto label02;

     label07:
        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label10;

     label08:
        $r38 := @caughtexception;

     label09:
        $r39 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r39.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r38;

     label10:
        return r40;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool, org.apache.http.conn.ClientConnectionOperator)
    {
        java.lang.Throwable $r17;
        long $l0;
        org.apache.http.conn.routing.HttpRoute $r5, $r13;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r4;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r2;
        org.apache.http.conn.ClientConnectionOperator r3;
        int $i1, $i2;
        java.lang.String $r16;
        boolean $z0;
        java.util.Set $r8;
        java.util.concurrent.TimeUnit $r6;
        java.util.concurrent.locks.Lock $r7, $r9, $r18;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.commons.logging.Log $r1, $r11;
        java.lang.StringBuilder $r10, $r12, $r14, $r15;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r4 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        r3 := @parameter1: org.apache.http.conn.ClientConnectionOperator;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating new connection [");

        $r13 = virtualinvoke r4.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label1:
        $r2 = new org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        $r5 = virtualinvoke r4.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $l0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: long connTTL>;

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.TimeUnit connTTLTimeUnit>;

        specialinvoke $r2.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute,long,java.util.concurrent.TimeUnit)>(r3, $r5, $l0, $r6);

        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        virtualinvoke r4.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>($r2);

        $i1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i2 = $i1 + 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i2;

        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r2);

     label3:
        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label6;

     label4:
        $r17 := @caughtexception;

     label5:
        $r18 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r18.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r17;

     label6:
        return $r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)
    {
        java.lang.Throwable $r17;
        org.apache.http.conn.routing.HttpRoute $r1;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r5;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r0;
        java.util.Map $r7;
        int $i0, $i1;
        java.lang.String $r16;
        boolean $z0, $z1;
        java.util.concurrent.locks.Lock $r4, $r6, $r18;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r2;
        org.apache.commons.logging.Log $r3, $r9;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r14, $r15;
        java.lang.Object $r13;

        r2 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r0 := @parameter0: org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        $r1 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>();

        $r3 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting connection [");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r13 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label1:
        $r4 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        specialinvoke r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r0);

        $r5 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>($r1, 1);

        virtualinvoke $r5.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r0);

        $i0 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 - 1;

        r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

        $z1 = virtualinvoke $r5.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>();

        if $z1 == 0 goto label3;

        $r7 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label3:
        $r6 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label6;

     label4:
        $r17 := @caughtexception;

     label5:
        $r18 = r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r18.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r17;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void deleteLeastUsedEntry()
    {
        java.lang.Throwable $r7;
        java.util.concurrent.locks.Lock $r1, $r8, $r9;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r4;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.lang.Object $r3;
        org.apache.commons.logging.Log $r5, $r6;
        java.util.Queue $r2;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object remove()>();

        r4 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r3;

        if r4 == null goto label2;

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r4);

        goto label3;

     label2:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label3;

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("No free connection to delete");

     label3:
        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label6;

     label4:
        $r7 := @caughtexception;

     label5:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void handleLostEntry(org.apache.http.conn.routing.HttpRoute)
    {
        java.lang.Throwable $r6;
        org.apache.http.conn.routing.HttpRoute r2;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r3;
        java.util.concurrent.locks.Lock $r1, $r4, $r7;
        java.util.Map $r5;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r2 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r2, 1);

        virtualinvoke $r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        $i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 - 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)>($r3);

     label3:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label6;

     label4:
        $r6 := @caughtexception;

     label5:
        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)
    {
        java.lang.Throwable $r19;
        org.apache.http.conn.routing.HttpRoute $r15;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r2;
        org.apache.http.impl.conn.tsccm.WaitingThread r21;
        java.lang.String $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.concurrent.locks.Lock $r1, $r5, $r20;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.commons.logging.Log $r4, $r6, $r7, $r10, $r11, $r13;
        java.lang.Object $r9;
        java.lang.StringBuilder $r12, $r14, $r16, $r17;
        java.util.Queue $r3, $r8;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r2 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        r21 = null;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        if r2 == null goto label03;

        $z3 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean hasThread()>();

        if $z3 == 0 goto label03;

        $r11 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z4 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label02;

        $r13 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying thread waiting on pool [");

        $r15 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

     label02:
        r21 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.WaitingThread nextThread()>();

        goto label06;

     label03:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $z0 = interfaceinvoke $r3.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label05;

        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label04;

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Notifying thread waiting on any pool");

     label04:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $r9 = interfaceinvoke $r8.<java.util.Queue: java.lang.Object remove()>();

        r21 = (org.apache.http.impl.conn.tsccm.WaitingThread) $r9;

        goto label06;

     label05:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label06;

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Notifying no-one, there are no waiting threads");

     label06:
        if r21 == null goto label07;

        virtualinvoke r21.<org.apache.http.impl.conn.tsccm.WaitingThread: void wakeup()>();

     label07:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label10;

     label08:
        $r19 := @caughtexception;

     label09:
        $r20 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r20.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r19;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void deleteClosedConnections()
    {
        java.lang.Throwable $r8;
        java.util.Iterator $r3;
        org.apache.http.conn.OperatedClientConnection $r7;
        java.util.concurrent.locks.Lock $r1, $r4, $r9;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r6;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.lang.Object $r5;
        java.util.Queue $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r5;

        $r7 = virtualinvoke r6.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        $z1 = interfaceinvoke $r7.<org.apache.http.conn.OperatedClientConnection: boolean isOpen()>();

        if $z1 != 0 goto label3;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r6);

     label3:
        goto label2;

     label4:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void closeIdleConnections(long, java.util.concurrent.TimeUnit)
    {
        java.util.Date $r29;
        byte $b0, $b4;
        boolean $z0, $z1, $z2;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r1;
        java.lang.StringBuilder $r12, $r14, $r18, $r19, $r20, $r21, $r27, $r28;
        java.util.Queue $r4;
        java.lang.Throwable $r24;
        long $l1, $l2, $l3, $l5, $l6, l7;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r8;
        int $i8, $i9;
        java.lang.String $r15, $r22;
        java.util.Iterator $r5;
        java.lang.IllegalArgumentException $r26;
        java.util.concurrent.TimeUnit r0;
        java.util.concurrent.locks.Lock $r3, $r6, $r25;
        org.apache.commons.logging.Log $r2, $r9, $r11, $r17;
        java.lang.Object $r7;

        r1 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        l7 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        if r0 != null goto label01;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Time unit must not be null.");

        throw $r26;

     label01:
        $b0 = l7 cmp 0L;

        $i8 = (int) $b0;

        if $i8 >= 0 goto label02;

        l7 = 0L;

     label02:
        $r2 = r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label03;

        $r17 = r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connections idle longer than ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r22);

     label03:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = virtualinvoke r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(l7);

        $l6 = $l1 - $l2;

        $r3 = r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label04:
        $r4 = r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r5 = interfaceinvoke $r4.<java.util.Queue: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r7;

        $l3 = virtualinvoke r8.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getUpdated()>();

        $b4 = $l3 cmp $l6;

        $i9 = (int) $b4;

        if $i9 > 0 goto label07;

        $r9 = r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label06;

        $r11 = r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection last used @ ");

        $r29 = new java.util.Date;

        $l5 = virtualinvoke r8.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getUpdated()>();

        specialinvoke $r29.<java.util.Date: void <init>(long)>($l5);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label06:
        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

        virtualinvoke r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r8);

     label07:
        goto label05;

     label08:
        $r6 = r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label11;

     label09:
        $r24 := @caughtexception;

     label10:
        $r25 = r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r25.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r24;

     label11:
        return;

        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void closeExpiredConnections()
    {
        java.lang.Throwable $r15;
        java.util.Date $r12;
        long $l0, $l1;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r7;
        java.lang.String $r14;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4;
        java.util.concurrent.locks.Lock $r2, $r5, $r16;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.commons.logging.Log $r1, $r8, $r10;
        java.lang.Object $r6;
        java.lang.StringBuilder $r9, $r11, $r13;
        java.util.Queue $r3;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Closing expired connections");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r4 = interfaceinvoke $r3.<java.util.Queue: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r6;

        $z1 = virtualinvoke r7.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: boolean isExpired(long)>($l0);

        if $z1 == 0 goto label4;

        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label3;

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection expired @ ");

        $r12 = new java.util.Date;

        $l1 = virtualinvoke r7.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getExpiry()>();

        specialinvoke $r12.<java.util.Date: void <init>(long)>($l1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r14);

     label3:
        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r7);

     label4:
        goto label2;

     label5:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label8;

     label6:
        $r15 := @caughtexception;

     label7:
        $r16 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r16.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r15;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void shutdown()
    {
        java.util.Map $r8;
        org.apache.http.impl.conn.tsccm.WaitingThread r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r2;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.lang.StringBuilder $r14, $r16, $r18, $r19, $r21, $r22;
        java.util.Queue $r4, $r6;
        java.lang.Throwable $r26;
        org.apache.http.conn.routing.HttpRoute $r17;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r28, r29;
        java.lang.String $r23;
        java.util.Iterator $r3, $r5, $r7;
        java.util.concurrent.locks.Lock $r1, $r9, $r25, $r27;
        java.lang.Object $r10, $r12, $r20, $r24;
        org.apache.commons.logging.Log $r13, $r15;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        $z0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: boolean shutdown>;

        if $z0 == 0 goto label03;

     label02:
        $r25 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r25.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label03:
        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: boolean shutdown> = 1;

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r24 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r24;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        specialinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r28);

        goto label04;

     label05:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r5 = interfaceinvoke $r4.<java.util.Queue: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r12 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r12;

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

        $r13 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z4 = interfaceinvoke $r13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label07;

        $r15 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection [");

        $r17 = virtualinvoke r29.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r20 = virtualinvoke r29.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r23);

     label07:
        specialinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r29);

        goto label06;

     label08:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $r7 = interfaceinvoke $r6.<java.util.Queue: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r10 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.http.impl.conn.tsccm.WaitingThread) $r10;

        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

        virtualinvoke r11.<org.apache.http.impl.conn.tsccm.WaitingThread: void wakeup()>();

        goto label09;

     label10:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r8.<java.util.Map: void clear()>();

     label11:
        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label14;

     label12:
        $r26 := @caughtexception;

     label13:
        $r27 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r27.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r26;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void setMaxTotalConnections(int)
    {
        java.lang.Throwable $r3;
        java.util.concurrent.locks.Lock $r1, $r2, $r4;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        int i0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections> = i0;

     label2:
        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getMaxTotalConnections()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        int $i0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

        return $i0;
    }

    static java.util.concurrent.locks.Lock access$000(org.apache.http.impl.conn.tsccm.ConnPoolByRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.concurrent.locks.Lock $r1;

        r0 := @parameter0: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        return $r1;
    }
}
