class org.mozilla.javascript.tools.shell.PipeThread extends java.lang.Thread
{
    private boolean fromProcess;
    private java.io.InputStream 'from';
    private java.io.OutputStream 'to';

    void <init>(boolean, java.io.InputStream, java.io.OutputStream)
    {
        java.io.OutputStream r2;
        org.mozilla.javascript.tools.shell.PipeThread r0;
        boolean z0;
        java.io.InputStream r1;

        r0 := @this: org.mozilla.javascript.tools.shell.PipeThread;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.io.InputStream;

        r2 := @parameter2: java.io.OutputStream;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.shell.PipeThread: void setDaemon(boolean)>(1);

        r0.<org.mozilla.javascript.tools.shell.PipeThread: boolean fromProcess> = z0;

        r0.<org.mozilla.javascript.tools.shell.PipeThread: java.io.InputStream 'from'> = r1;

        r0.<org.mozilla.javascript.tools.shell.PipeThread: java.io.OutputStream 'to'> = r2;

        return;
    }

    public void run()
    {
        java.io.OutputStream $r1;
        org.mozilla.javascript.tools.shell.PipeThread r0;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;
        java.io.InputStream $r2;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.shell.PipeThread;

     label1:
        $z0 = r0.<org.mozilla.javascript.tools.shell.PipeThread: boolean fromProcess>;

        $r2 = r0.<org.mozilla.javascript.tools.shell.PipeThread: java.io.InputStream 'from'>;

        $r1 = r0.<org.mozilla.javascript.tools.shell.PipeThread: java.io.OutputStream 'to'>;

        staticinvoke <org.mozilla.javascript.tools.shell.Global: void pipe(boolean,java.io.InputStream,java.io.OutputStream)>($z0, $r2, $r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.mozilla.javascript.Context: java.lang.RuntimeException throwAsScriptRuntimeEx(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
