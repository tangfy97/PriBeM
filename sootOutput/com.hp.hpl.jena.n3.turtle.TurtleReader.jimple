public class com.hp.hpl.jena.n3.turtle.TurtleReader extends com.hp.hpl.jena.n3.JenaReaderBase
{

    public void <init>()
    {
        com.hp.hpl.jena.n3.turtle.TurtleReader r0;

        r0 := @this: com.hp.hpl.jena.n3.turtle.TurtleReader;

        specialinvoke r0.<com.hp.hpl.jena.n3.JenaReaderBase: void <init>()>();

        return;
    }

    protected void readWorker(com.hp.hpl.jena.rdf.model.Model, java.io.Reader, java.lang.String)
    {
        com.hp.hpl.jena.n3.turtle.ParserTurtle $r0;
        com.hp.hpl.jena.rdf.model.Model r1;
        java.lang.String r3;
        java.io.Reader r4;
        com.hp.hpl.jena.n3.turtle.TurtleReader r5;
        com.hp.hpl.jena.graph.Graph $r2;

        r5 := @this: com.hp.hpl.jena.n3.turtle.TurtleReader;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r4 := @parameter1: java.io.Reader;

        r3 := @parameter2: java.lang.String;

        $r0 = new com.hp.hpl.jena.n3.turtle.ParserTurtle;

        specialinvoke $r0.<com.hp.hpl.jena.n3.turtle.ParserTurtle: void <init>()>();

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        virtualinvoke $r0.<com.hp.hpl.jena.n3.turtle.ParserTurtle: void parse(com.hp.hpl.jena.graph.Graph,java.lang.String,java.io.Reader)>($r2, r3, r4);

        return;
    }
}
