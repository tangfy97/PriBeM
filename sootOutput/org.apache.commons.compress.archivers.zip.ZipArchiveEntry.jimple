public class org.apache.commons.compress.archivers.zip.ZipArchiveEntry extends java.util.zip.ZipEntry implements org.apache.commons.compress.archivers.ArchiveEntry
{
    public static final int PLATFORM_UNIX;
    public static final int PLATFORM_FAT;
    private static final int SHORT_MASK;
    private static final int SHORT_SHIFT;
    private static final byte[] EMPTY;
    private int method;
    private long size;
    private int internalAttributes;
    private int platform;
    private long externalAttributes;
    private java.util.LinkedHashMap extraFields;
    private org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra;
    private java.lang.String name;
    private byte[] rawName;
    private org.apache.commons.compress.archivers.zip.GeneralPurposeBit gpb;

    public void <init>(java.lang.String)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        int $i1;
        java.lang.String r1;
        org.apache.commons.compress.archivers.zip.GeneralPurposeBit $r3;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r1);

        $i1 = (int) -1;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int method> = $i1;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long size> = -1L;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int internalAttributes> = 0;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int platform> = 0;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long externalAttributes> = 0L;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields> = null;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra> = null;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String name> = null;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] rawName> = null;

        $r3 = new org.apache.commons.compress.archivers.zip.GeneralPurposeBit;

        specialinvoke $r3.<org.apache.commons.compress.archivers.zip.GeneralPurposeBit: void <init>()>();

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.GeneralPurposeBit gpb> = $r3;

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setName(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.util.zip.ZipEntry) throws java.util.zip.ZipException
    {
        byte[] $r4;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] $r6;
        long $l1;
        int $i0, $i3;
        org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField $r5;
        java.lang.String $r3;
        org.apache.commons.compress.archivers.zip.GeneralPurposeBit $r7;
        java.util.zip.ZipEntry r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r1 := @parameter0: java.util.zip.ZipEntry;

        specialinvoke r0.<java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>(r1);

        $i3 = (int) -1;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int method> = $i3;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long size> = -1L;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int internalAttributes> = 0;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int platform> = 0;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long externalAttributes> = 0L;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields> = null;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra> = null;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String name> = null;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] rawName> = null;

        $r7 = new org.apache.commons.compress.archivers.zip.GeneralPurposeBit;

        specialinvoke $r7.<org.apache.commons.compress.archivers.zip.GeneralPurposeBit: void <init>()>();

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.GeneralPurposeBit gpb> = $r7;

        $r3 = virtualinvoke r1.<java.util.zip.ZipEntry: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setName(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<java.util.zip.ZipEntry: byte[] getExtra()>();

        if $r4 == null goto label1;

        $r5 = <org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField: org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField READ>;

        $r6 = staticinvoke <org.apache.commons.compress.archivers.zip.ExtraFieldUtils: org.apache.commons.compress.archivers.zip.ZipExtraField[] parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)>($r4, 1, $r5);

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[])>($r6);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtra()>();

     label2:
        $i0 = virtualinvoke r1.<java.util.zip.ZipEntry: int getMethod()>();

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setMethod(int)>($i0);

        $l1 = virtualinvoke r1.<java.util.zip.ZipEntry: long getSize()>();

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long size> = $l1;

        return;
    }

    public void <init>(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.util.zip.ZipException
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0, r1;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] $r2;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r1 := @parameter0: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void <init>(java.util.zip.ZipEntry)>(r1);

        $i0 = virtualinvoke r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int getInternalAttributes()>();

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setInternalAttributes(int)>($i0);

        $l1 = virtualinvoke r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getExternalAttributes()>();

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExternalAttributes(long)>($l1);

        $r2 = virtualinvoke r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields(boolean)>(1);

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[])>($r2);

        return;
    }

    protected void <init>()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void <init>(java.lang.String)>("");

        return;
    }

    public void <init>(java.io.File, java.lang.String)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        long $l0, $l1;
        java.io.File r1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r2, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r6 = r2;

     label2:
        specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void <init>(java.lang.String)>($r6);

        $z2 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z2 == 0 goto label3;

        $l1 = virtualinvoke r1.<java.io.File: long length()>();

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setSize(long)>($l1);

     label3:
        $l0 = virtualinvoke r1.<java.io.File: long lastModified()>();

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setTime(long)>($l0);

        return;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0, r2;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] $r3;
        int $i0;
        java.lang.Object $r1;
        long $l1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = specialinvoke r0.<java.util.zip.ZipEntry: java.lang.Object clone()>();

        r2 = (org.apache.commons.compress.archivers.zip.ZipArchiveEntry) $r1;

        $i0 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int getInternalAttributes()>();

        virtualinvoke r2.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setInternalAttributes(int)>($i0);

        $l1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getExternalAttributes()>();

        virtualinvoke r2.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExternalAttributes(long)>($l1);

        $r3 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields(boolean)>(1);

        virtualinvoke r2.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[])>($r3);

        return r2;
    }

    public int getMethod()
    {
        int $i0;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $i0 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int method>;

        return $i0;
    }

    public void setMethod(int)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ZIP compression method can not be negative: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int method> = i0;

        return;
    }

    public int getInternalAttributes()
    {
        int $i0;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $i0 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int internalAttributes>;

        return $i0;
    }

    public void setInternalAttributes(int)
    {
        int i0;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        i0 := @parameter0: int;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int internalAttributes> = i0;

        return;
    }

    public long getExternalAttributes()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long externalAttributes>;

        return $l0;
    }

    public void setExternalAttributes(long)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        l0 := @parameter0: long;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long externalAttributes> = l0;

        return;
    }

    public void setUnixMode(int)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        long $l5;
        byte $b6;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        i0 := @parameter0: int;

        $i2 = i0 << 16;

        $i1 = i0 & 128;

        if $i1 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $i3 = $i2 | $z1;

        $z0 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $b6 = 16;

        goto label4;

     label3:
        $b6 = 0;

     label4:
        $i4 = $i3 | $b6;

        $l5 = (long) $i4;

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExternalAttributes(long)>($l5);

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int platform> = 3;

        return;
    }

    public int getUnixMode()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        int $i0, $i4;
        long $l1, $l2, $l3;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $i0 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int platform>;

        if $i0 == 3 goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $l1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getExternalAttributes()>();

        $l2 = $l1 >> 16;

        $l3 = $l2 & 65535L;

        $i4 = (int) $l3;

     label2:
        return $i4;
    }

    public boolean isUnixSymlink()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        int $i0, $i1, $i3, $i5;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $i0 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int getUnixMode()>();

        $i3 = (int) 40960;

        $i1 = $i0 & $i3;

        $i5 = (int) 40960;

        if $i1 != $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getPlatform()
    {
        int $i0;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $i0 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int platform>;

        return $i0;
    }

    protected void setPlatform(int)
    {
        int i0;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        i0 := @parameter0: int;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int platform> = i0;

        return;
    }

    public void setExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[])
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] r2;
        java.util.LinkedHashMap $r1, $r4;
        org.apache.commons.compress.archivers.zip.ZipExtraField r3;
        org.apache.commons.compress.archivers.zip.ZipShort $r5;
        int i0, i1;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData $r6;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r2 := @parameter0: org.apache.commons.compress.archivers.zip.ZipExtraField[];

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields> = $r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $z0 = r3 instanceof org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        if $z0 == 0 goto label2;

        $r6 = (org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData) r3;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra> = $r6;

        goto label3;

     label2:
        $r4 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        $r5 = interfaceinvoke r3.<org.apache.commons.compress.archivers.zip.ZipExtraField: org.apache.commons.compress.archivers.zip.ZipShort getHeaderId()>();

        virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r3);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtra()>();

        return;
    }

    public org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields(boolean)>(0);

        return $r1;
    }

    public org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields(boolean)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        java.lang.Object[] $r11;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] $r9, $r10, $r12;
        java.util.Collection $r4;
        java.util.ArrayList $r2;
        java.util.LinkedHashMap $r1, $r3;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData $r5, $r6, $r7, $r8;
        boolean z0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        if $r1 != null goto label4;

        if z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra>;

        if $r7 != null goto label2;

     label1:
        $r9 = newarray (org.apache.commons.compress.archivers.zip.ZipExtraField)[0];

        goto label3;

     label2:
        $r9 = newarray (org.apache.commons.compress.archivers.zip.ZipExtraField)[1];

        $r8 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra>;

        $r9[0] = $r8;

     label3:
        return $r9;

     label4:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.util.Collection values()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        if z0 == 0 goto label5;

        $r5 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra>;

        if $r5 == null goto label5;

        $r6 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

     label5:
        $r10 = newarray (org.apache.commons.compress.archivers.zip.ZipExtraField)[0];

        $r11 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (org.apache.commons.compress.archivers.zip.ZipExtraField[]) $r11;

        return $r12;
    }

    public void addExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r1;
        org.apache.commons.compress.archivers.zip.ZipExtraField r0;
        java.util.LinkedHashMap $r2, $r3, $r5;
        org.apache.commons.compress.archivers.zip.ZipShort $r4;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData $r6;
        boolean $z0;

        r1 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r0 := @parameter0: org.apache.commons.compress.archivers.zip.ZipExtraField;

        $z0 = r0 instanceof org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        if $z0 == 0 goto label1;

        $r6 = (org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData) r0;

        r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra> = $r6;

        goto label3;

     label1:
        $r2 = r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        if $r2 != null goto label2;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields> = $r5;

     label2:
        $r3 = r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        $r4 = interfaceinvoke r0.<org.apache.commons.compress.archivers.zip.ZipExtraField: org.apache.commons.compress.archivers.zip.ZipShort getHeaderId()>();

        virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r0);

     label3:
        virtualinvoke r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtra()>();

        return;
    }

    public void addAsFirstExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r1;
        org.apache.commons.compress.archivers.zip.ZipExtraField r0;
        java.util.LinkedHashMap r2, $r3, $r4, $r7;
        org.apache.commons.compress.archivers.zip.ZipShort $r5, $r6;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData $r8;
        boolean $z0;

        r1 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r0 := @parameter0: org.apache.commons.compress.archivers.zip.ZipExtraField;

        $z0 = r0 instanceof org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        if $z0 == 0 goto label1;

        $r8 = (org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData) r0;

        r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra> = $r8;

        goto label2;

     label1:
        r2 = r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields> = $r3;

        $r4 = r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        $r5 = interfaceinvoke r0.<org.apache.commons.compress.archivers.zip.ZipExtraField: org.apache.commons.compress.archivers.zip.ZipShort getHeaderId()>();

        virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r0);

        if r2 == null goto label2;

        $r6 = interfaceinvoke r0.<org.apache.commons.compress.archivers.zip.ZipExtraField: org.apache.commons.compress.archivers.zip.ZipShort getHeaderId()>();

        virtualinvoke r2.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r6);

        $r7 = r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        virtualinvoke $r7.<java.util.LinkedHashMap: void putAll(java.util.Map)>(r2);

     label2:
        virtualinvoke r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtra()>();

        return;
    }

    public void removeExtraField(org.apache.commons.compress.archivers.zip.ZipShort)
    {
        java.util.LinkedHashMap $r1, $r3;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.ZipShort r2;
        java.lang.Object $r4;
        java.util.NoSuchElementException $r5, $r6;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r2 := @parameter0: org.apache.commons.compress.archivers.zip.ZipShort;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        if $r1 != null goto label1;

        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        throw $r6;

     label1:
        $r3 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r2);

        if $r4 != null goto label2;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label2:
        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtra()>();

        return;
    }

    public void removeUnparseableExtraFieldData()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        java.util.NoSuchElementException $r2;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra>;

        if $r1 != null goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra> = null;

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtra()>();

        return;
    }

    public org.apache.commons.compress.archivers.zip.ZipExtraField getExtraField(org.apache.commons.compress.archivers.zip.ZipShort)
    {
        java.util.LinkedHashMap $r1, $r3;
        org.apache.commons.compress.archivers.zip.ZipExtraField $r5;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.ZipShort r2;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r2 := @parameter0: org.apache.commons.compress.archivers.zip.ZipShort;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (org.apache.commons.compress.archivers.zip.ZipExtraField) $r4;

        return $r5;

     label1:
        return null;
    }

    public org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData getUnparseableExtraFieldData()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra>;

        return $r1;
    }

    public void setExtra(byte[]) throws java.lang.RuntimeException
    {
        byte[] r0;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r3;
        java.util.zip.ZipException $r4;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] $r2;
        java.lang.RuntimeException $r5;
        org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField $r1;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12;
        java.lang.String $r8, $r11, $r13;

        r3 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r0 := @parameter0: byte[];

     label1:
        $r1 = <org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField: org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField READ>;

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.ExtraFieldUtils: org.apache.commons.compress.archivers.zip.ZipExtraField[] parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)>(r0, 1, $r1);

        specialinvoke r3.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void mergeExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[],boolean)>($r2, 1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing extra fields for entry: ");

        $r8 = virtualinvoke r3.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r11 = virtualinvoke $r4.<java.util.zip.ZipException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r4);

        throw $r5;

     label4:
        return;

        catch java.util.zip.ZipException from label1 to label2 with label3;
    }

    protected void setExtra()
    {
        byte[] $r2;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields(boolean)>(1);

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.ExtraFieldUtils: byte[] mergeLocalFileDataData(org.apache.commons.compress.archivers.zip.ZipExtraField[])>($r1);

        specialinvoke r0.<java.util.zip.ZipEntry: void setExtra(byte[])>($r2);

        return;
    }

    public void setCentralDirectoryExtra(byte[])
    {
        byte[] r0;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r3;
        java.util.zip.ZipException $r4;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] $r2;
        org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField $r1;
        java.lang.RuntimeException $r5;
        java.lang.String $r6;

        r3 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r0 := @parameter0: byte[];

     label1:
        $r1 = <org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField: org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField READ>;

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.ExtraFieldUtils: org.apache.commons.compress.archivers.zip.ZipExtraField[] parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)>(r0, 0, $r1);

        specialinvoke r3.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void mergeExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[],boolean)>($r2, 0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<java.util.zip.ZipException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r4);

        throw $r5;

     label4:
        return;

        catch java.util.zip.ZipException from label1 to label2 with label3;
    }

    public byte[] getLocalFileDataExtra()
    {
        byte[] $r1, $r2;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] getExtra()>();

        if $r1 == null goto label1;

        $r2 = $r1;

        goto label2;

     label1:
        $r2 = <org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] EMPTY>;

     label2:
        return $r2;
    }

    public byte[] getCentralDirectoryExtra()
    {
        byte[] $r2;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields(boolean)>(1);

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.ExtraFieldUtils: byte[] mergeCentralDirectoryData(org.apache.commons.compress.archivers.zip.ZipExtraField[])>($r1);

        return $r2;
    }

    public java.lang.String getName()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String name>;

        if $r1 != null goto label1;

        $r2 = specialinvoke r0.<java.util.zip.ZipEntry: java.lang.String getName()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String name>;

     label2:
        return $r2;
    }

    public boolean isDirectory()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        return $z0;
    }

    protected void setName(java.lang.String)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        int $i0, $i1, $i3;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int getPlatform()>();

        if $i0 != 0 goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("/");

        $i3 = (int) -1;

        if $i1 != $i3 goto label1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

     label1:
        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String name> = r1;

        return;
    }

    public long getSize()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long size>;

        return $l0;
    }

    public void setSize(long)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        byte $b1;
        int $i2;
        long l0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid entry size");

        throw $r2;

     label1:
        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long size> = l0;

        return;
    }

    protected void setName(java.lang.String, byte[])
    {
        byte[] r2;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setName(java.lang.String)>(r1);

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] rawName> = r2;

        return;
    }

    public byte[] getRawName()
    {
        byte[] $r1, $r2, r3, $r4, $r5;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] rawName>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] rawName>;

        $i0 = lengthof $r2;

        r3 = newarray (byte)[$i0];

        $r5 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] rawName>;

        $r4 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] rawName>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, 0, $i1);

        return r3;

     label1:
        return null;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public org.apache.commons.compress.archivers.zip.GeneralPurposeBit getGeneralPurposeBit()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.GeneralPurposeBit $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.GeneralPurposeBit gpb>;

        return $r1;
    }

    public void setGeneralPurposeBit(org.apache.commons.compress.archivers.zip.GeneralPurposeBit)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.GeneralPurposeBit r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r1 := @parameter0: org.apache.commons.compress.archivers.zip.GeneralPurposeBit;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.GeneralPurposeBit gpb> = r1;

        return;
    }

    private void mergeExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[], boolean) throws java.util.zip.ZipException
    {
        byte[] $r5, $r6;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0;
        org.apache.commons.compress.archivers.zip.ZipExtraField[] r2;
        java.util.LinkedHashMap $r1;
        org.apache.commons.compress.archivers.zip.ZipExtraField r3, r7;
        org.apache.commons.compress.archivers.zip.ZipShort $r4;
        int i0, $i1, $i2, i3;
        boolean $z0, z1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r2 := @parameter0: org.apache.commons.compress.archivers.zip.ZipExtraField[];

        z1 := @parameter1: boolean;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.util.LinkedHashMap extraFields>;

        if $r1 != null goto label1;

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[])>(r2);

        goto label9;

     label1:
        i0 = lengthof r2;

        i3 = 0;

     label2:
        if i3 >= i0 goto label8;

        r3 = r2[i3];

        $z0 = r3 instanceof org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        if $z0 == 0 goto label3;

        r7 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra>;

        goto label4;

     label3:
        $r4 = interfaceinvoke r3.<org.apache.commons.compress.archivers.zip.ZipExtraField: org.apache.commons.compress.archivers.zip.ZipShort getHeaderId()>();

        r7 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.ZipExtraField getExtraField(org.apache.commons.compress.archivers.zip.ZipShort)>($r4);

     label4:
        if r7 != null goto label5;

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void addExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField)>(r3);

        goto label7;

     label5:
        if z1 == 0 goto label6;

        $r6 = interfaceinvoke r3.<org.apache.commons.compress.archivers.zip.ZipExtraField: byte[] getLocalFileDataData()>();

        $i2 = lengthof $r6;

        interfaceinvoke r7.<org.apache.commons.compress.archivers.zip.ZipExtraField: void parseFromLocalFileData(byte[],int,int)>($r6, 0, $i2);

        goto label7;

     label6:
        $r5 = interfaceinvoke r3.<org.apache.commons.compress.archivers.zip.ZipExtraField: byte[] getCentralDirectoryData()>();

        $i1 = lengthof $r5;

        interfaceinvoke r7.<org.apache.commons.compress.archivers.zip.ZipExtraField: void parseFromCentralDirectoryData(byte[],int,int)>($r5, 0, $i1);

     label7:
        i3 = i3 + 1;

        goto label2;

     label8:
        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: void setExtra()>();

     label9:
        return;
    }

    public java.util.Date getLastModifiedDate()
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r1;
        long $l0;
        java.util.Date $r0;

        r1 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        $r0 = new java.util.Date;

        $l0 = virtualinvoke r1.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getTime()>();

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l0);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r9, $r10, $r11, $r12;
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0, r4;
        byte $b2, $b9, $b14, $b17, $b20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.commons.compress.archivers.zip.GeneralPurposeBit $r13, $r14;
        long $l0, $l1, $l7, $l8, $l12, $l13, $l15, $l16, $l18, $l19;
        int $i3, $i4, $i5, $i6, $i10, $i11;
        java.lang.String $r5, $r6, $r7, $r8, r15, r16;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (org.apache.commons.compress.archivers.zip.ZipArchiveEntry) r1;

        $r5 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String getName()>();

        $r6 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String getName()>();

        if $r5 != null goto label4;

        if $r6 == null goto label5;

        return 0;

     label4:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $r7 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String getComment()>();

        r15 = $r7;

        $r8 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: java.lang.String getComment()>();

        r16 = $r8;

        if $r7 != null goto label6;

        r15 = "";

     label6:
        if $r8 != null goto label7;

        r16 = "";

     label7:
        $l0 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getTime()>();

        $l1 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getTime()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label8;

        $z1 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z1 == 0 goto label8;

        $i3 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int getInternalAttributes()>();

        $i4 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int getInternalAttributes()>();

        if $i3 != $i4 goto label8;

        $i5 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int getPlatform()>();

        $i6 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int getPlatform()>();

        if $i5 != $i6 goto label8;

        $l7 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getExternalAttributes()>();

        $l8 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getExternalAttributes()>();

        $b9 = $l7 cmp $l8;

        if $b9 != 0 goto label8;

        $i10 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int getMethod()>();

        $i11 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int getMethod()>();

        if $i10 != $i11 goto label8;

        $l12 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getSize()>();

        $l13 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getSize()>();

        $b14 = $l12 cmp $l13;

        if $b14 != 0 goto label8;

        $l15 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getCrc()>();

        $l16 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getCrc()>();

        $b17 = $l15 cmp $l16;

        if $b17 != 0 goto label8;

        $l18 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getCompressedSize()>();

        $l19 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: long getCompressedSize()>();

        $b20 = $l18 cmp $l19;

        if $b20 != 0 goto label8;

        $r9 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] getCentralDirectoryExtra()>();

        $r10 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] getCentralDirectoryExtra()>();

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r9, $r10);

        if $z2 == 0 goto label8;

        $r11 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] getLocalFileDataExtra()>();

        $r12 = virtualinvoke r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] getLocalFileDataExtra()>();

        $z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r11, $r12);

        if $z3 == 0 goto label8;

        $r14 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.GeneralPurposeBit gpb>;

        $r13 = r4.<org.apache.commons.compress.archivers.zip.ZipArchiveEntry: org.apache.commons.compress.archivers.zip.GeneralPurposeBit gpb>;

        $z4 = virtualinvoke $r14.<org.apache.commons.compress.archivers.zip.GeneralPurposeBit: boolean equals(java.lang.Object)>($r13);

        if $z4 == 0 goto label8;

        $z5 = 1;

        goto label9;

     label8:
        $z5 = 0;

     label9:
        return $z5;
    }

    static void <clinit>()
    {
        byte[] $r0;

        <org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int SHORT_SHIFT> = 16;

        <org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int SHORT_MASK> = 65535;

        <org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int PLATFORM_FAT> = 0;

        <org.apache.commons.compress.archivers.zip.ZipArchiveEntry: int PLATFORM_UNIX> = 3;

        $r0 = newarray (byte)[0];

        <org.apache.commons.compress.archivers.zip.ZipArchiveEntry: byte[] EMPTY> = $r0;

        return;
    }
}
