final class com.mycila.inject.internal.guava.collect.Iterables$8 extends com.mycila.inject.internal.guava.collect.Iterables$IterableWithToString
{
    final java.lang.Iterable val$fromIterable;
    final com.mycila.inject.internal.guava.base.Function val$function;

    void <init>(java.lang.Iterable, com.mycila.inject.internal.guava.base.Function)
    {
        com.mycila.inject.internal.guava.collect.Iterables$8 r0;
        com.mycila.inject.internal.guava.base.Function r2;
        java.lang.Iterable r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Iterables$8;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: com.mycila.inject.internal.guava.base.Function;

        r0.<com.mycila.inject.internal.guava.collect.Iterables$8: java.lang.Iterable val$fromIterable> = r1;

        r0.<com.mycila.inject.internal.guava.collect.Iterables$8: com.mycila.inject.internal.guava.base.Function val$function> = r2;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Iterables$IterableWithToString: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r2, $r4;
        com.mycila.inject.internal.guava.collect.Iterables$8 r0;
        com.mycila.inject.internal.guava.base.Function $r3;
        java.lang.Iterable $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Iterables$8;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Iterables$8: java.lang.Iterable val$fromIterable>;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Iterables$8: com.mycila.inject.internal.guava.base.Function val$function>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.mycila.inject.internal.guava.base.Function)>($r2, $r3);

        return $r4;
    }
}
