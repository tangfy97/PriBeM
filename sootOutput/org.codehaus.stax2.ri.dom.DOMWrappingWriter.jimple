public abstract class org.codehaus.stax2.ri.dom.DOMWrappingWriter extends java.lang.Object implements org.codehaus.stax2.XMLStreamWriter2
{
    static final java.lang.String DEFAULT_OUTPUT_ENCODING;
    static final java.lang.String DEFAULT_XML_VERSION;
    protected final boolean mNsAware;
    protected final boolean mNsRepairing;
    protected java.lang.String mEncoding;
    protected javax.xml.namespace.NamespaceContext mNsContext;
    protected final org.w3c.dom.Document mDocument;
    protected org.codehaus.stax2.ri.typed.SimpleValueEncoder mValueEncoder;

    protected void <init>(org.w3c.dom.Node, boolean, boolean) throws javax.xml.stream.XMLStreamException
    {
        short $s0;
        org.w3c.dom.Document $r2, $r10, $r11, $r19;
        java.lang.StringBuffer $r5, $r7, $r8, $r14, $r16, $r21, $r23;
        org.w3c.dom.Node r1;
        javax.xml.stream.XMLStreamException $r22, $r24;
        int $i1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r9, $r17;
        boolean z0, z1;
        java.lang.IllegalArgumentException $r20;
        java.lang.Class $r6, $r15;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: org.w3c.dom.Node;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: java.lang.String mEncoding> = null;

        if r1 != null goto label1;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null Node for constructing a DOM-based XMLStreamWriter");

        throw $r20;

     label1:
        r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: boolean mNsAware> = z0;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: boolean mNsRepairing> = z1;

        $s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 9: goto label2;
            case 11: goto label4;
            default: goto label5;
        };

     label2:
        $r10 = (org.w3c.dom.Document) r1;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument> = $r10;

        goto label6;

     label3:
        $r11 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument> = $r11;

        goto label6;

     label4:
        $r2 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument> = $r2;

        goto label6;

     label5:
        $r22 = new javax.xml.stream.XMLStreamException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not create an XMLStreamWriter for a DOM node of type ");

        $r15 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r22.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r17);

        throw $r22;

     label6:
        $r19 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        if $r19 != null goto label7;

        $r24 = new javax.xml.stream.XMLStreamException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not create an XMLStreamWriter for given node (of type ");

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("): did not have owner document");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r9);

        throw $r24;

     label7:
        return;
    }

    public void close()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        return;
    }

    public void flush()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        return;
    }

    public abstract javax.xml.namespace.NamespaceContext getNamespaceContext();

    public abstract java.lang.String getPrefix(java.lang.String);

    public abstract java.lang.Object getProperty(java.lang.String);

    public abstract void setDefaultNamespace(java.lang.String);

    public void setNamespaceContext(javax.xml.namespace.NamespaceContext)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        javax.xml.namespace.NamespaceContext r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: javax.xml.namespace.NamespaceContext;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: javax.xml.namespace.NamespaceContext mNsContext> = r1;

        return;
    }

    public abstract void setPrefix(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;

    public abstract void writeAttribute(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;

    public abstract void writeAttribute(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;

    public abstract void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;

    public void writeCData(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.w3c.dom.Document $r2;
        org.w3c.dom.CDATASection $r3;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>(r1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>($r3);

        return;
    }

    public void writeCharacters(char[], int, int) throws javax.xml.stream.XMLStreamException
    {
        int i0, i1;
        char[] r2;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r1);

        return;
    }

    public void writeCharacters(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.w3c.dom.Text $r3;
        org.w3c.dom.Document $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>($r3);

        return;
    }

    public void writeComment(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.w3c.dom.Document $r2;
        org.w3c.dom.CDATASection $r3;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>(r1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>($r3);

        return;
    }

    public abstract void writeDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException;

    public void writeDTD(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void reportUnsupported(java.lang.String)>("writeDTD()");

        return;
    }

    public abstract void writeEmptyElement(java.lang.String) throws javax.xml.stream.XMLStreamException;

    public abstract void writeEmptyElement(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;

    public abstract void writeEmptyElement(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;

    public abstract void writeEndDocument() throws javax.xml.stream.XMLStreamException;

    public void writeEntityRef(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.w3c.dom.EntityReference $r3;
        org.w3c.dom.Document $r2;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.EntityReference createEntityReference(java.lang.String)>(r1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>($r3);

        return;
    }

    public void writeProcessingInstruction(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeProcessingInstruction(java.lang.String,java.lang.String)>(r1, null);

        return;
    }

    public void writeProcessingInstruction(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.w3c.dom.ProcessingInstruction $r4;
        org.w3c.dom.Document $r3;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>($r4);

        return;
    }

    public void writeStartDocument() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeStartDocument(java.lang.String,java.lang.String)>("UTF-8", "1.0");

        return;
    }

    public void writeStartDocument(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeStartDocument(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    public void writeStartDocument(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: java.lang.String mEncoding> = r1;

        return;
    }

    public org.codehaus.stax2.XMLStreamLocation2 getLocation()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        return null;
    }

    public java.lang.String getEncoding()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: java.lang.String mEncoding>;

        return $r1;
    }

    public abstract boolean isPropertySupported(java.lang.String);

    public abstract boolean setProperty(java.lang.String, java.lang.Object);

    public void writeCData(char[], int, int) throws javax.xml.stream.XMLStreamException
    {
        int i0, i1;
        char[] r2;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCData(java.lang.String)>($r1);

        return;
    }

    public abstract void writeDTD(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;

    public void writeFullEndElement() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeEndElement()>();

        return;
    }

    public void writeSpace(char[], int, int) throws javax.xml.stream.XMLStreamException
    {
        int i0, i1;
        char[] r2;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeSpace(java.lang.String)>($r1);

        return;
    }

    public void writeSpace(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>(r1);

        return;
    }

    public void writeStartDocument(java.lang.String, java.lang.String, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeStartDocument(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public org.codehaus.stax2.validation.XMLValidator validateAgainst(org.codehaus.stax2.validation.XMLValidationSchema) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidationSchema r1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidationSchema;

        return null;
    }

    public org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidationSchema) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidationSchema r1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidationSchema;

        return null;
    }

    public org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidator) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        org.codehaus.stax2.validation.XMLValidator r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidator;

        return null;
    }

    public org.codehaus.stax2.validation.ValidationProblemHandler setValidationProblemHandler(org.codehaus.stax2.validation.ValidationProblemHandler)
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        org.codehaus.stax2.validation.ValidationProblemHandler r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: org.codehaus.stax2.validation.ValidationProblemHandler;

        return null;
    }

    public void writeRaw(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void reportUnsupported(java.lang.String)>("writeRaw()");

        return;
    }

    public void writeRaw(java.lang.String, int, int) throws javax.xml.stream.XMLStreamException
    {
        int i0, i1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void reportUnsupported(java.lang.String)>("writeRaw()");

        return;
    }

    public void writeRaw(char[], int, int) throws javax.xml.stream.XMLStreamException
    {
        int i0, i1;
        char[] r1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void reportUnsupported(java.lang.String)>("writeRaw()");

        return;
    }

    public void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        org.codehaus.stax2.XMLStreamReader2 r1;
        boolean z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: org.codehaus.stax2.XMLStreamReader2;

        z0 := @parameter1: boolean;

        return;
    }

    public void closeCompletely()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        return;
    }

    public void writeBoolean(boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r1;
        boolean z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = "true";

        goto label2;

     label1:
        $r1 = "false";

     label2:
        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r1);

        return;
    }

    public void writeInt(int) throws javax.xml.stream.XMLStreamException
    {
        int i0;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r1);

        return;
    }

    public void writeLong(long) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r1);

        return;
    }

    public void writeFloat(float) throws javax.xml.stream.XMLStreamException
    {
        float f0;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        f0 := @parameter0: float;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r1);

        return;
    }

    public void writeDouble(double) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r1;
        double d0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r1);

        return;
    }

    public void writeInteger(java.math.BigInteger) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.math.BigInteger r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = virtualinvoke r1.<java.math.BigInteger: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r2);

        return;
    }

    public void writeDecimal(java.math.BigDecimal) throws javax.xml.stream.XMLStreamException
    {
        java.math.BigDecimal r1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.math.BigDecimal;

        $r2 = virtualinvoke r1.<java.math.BigDecimal: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r2);

        return;
    }

    public void writeQName(javax.xml.namespace.QName) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        javax.xml.namespace.QName r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: java.lang.String serializeQNameValue(javax.xml.namespace.QName)>(r1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r2);

        return;
    }

    public void writeIntArray(int[], int, int) throws javax.xml.stream.XMLStreamException
    {
        int[] r2;
        int i0, i1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r3;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: java.lang.String encodeAsString(int[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r3);

        return;
    }

    public void writeLongArray(long[], int, int) throws javax.xml.stream.XMLStreamException
    {
        long[] r2;
        int i0, i1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r3;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: long[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: java.lang.String encodeAsString(long[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r3);

        return;
    }

    public void writeFloatArray(float[], int, int) throws javax.xml.stream.XMLStreamException
    {
        int i0, i1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        float[] r2;
        java.lang.String $r3;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: float[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: java.lang.String encodeAsString(float[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r3);

        return;
    }

    public void writeDoubleArray(double[], int, int) throws javax.xml.stream.XMLStreamException
    {
        double[] r2;
        int i0, i1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r3;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: double[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: java.lang.String encodeAsString(double[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r3);

        return;
    }

    public void writeBinary(byte[], int, int) throws javax.xml.stream.XMLStreamException
    {
        byte[] r2;
        org.codehaus.stax2.typed.Base64Variant $r1;
        int i0, i1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant getDefaultVariant()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeBinary(org.codehaus.stax2.typed.Base64Variant,byte[],int,int)>($r1, r2, i0, i1);

        return;
    }

    public void writeBinary(org.codehaus.stax2.typed.Base64Variant, byte[], int, int) throws javax.xml.stream.XMLStreamException
    {
        byte[] r3;
        org.codehaus.stax2.typed.Base64Variant r2;
        int i0, i1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String $r4;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: org.codehaus.stax2.typed.Base64Variant;

        r3 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()>();

        $r4 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: java.lang.String encodeAsString(org.codehaus.stax2.typed.Base64Variant,byte[],int,int)>(r2, r3, i0, i1);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r4);

        return;
    }

    public void writeBooleanAttribute(java.lang.String, java.lang.String, java.lang.String, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r4;
        boolean z0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r4 = "true";

        goto label2;

     label1:
        $r4 = "false";

     label2:
        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r4);

        return;
    }

    public void writeIntAttribute(java.lang.String, java.lang.String, java.lang.String, int) throws javax.xml.stream.XMLStreamException
    {
        int i0;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r4);

        return;
    }

    public void writeLongAttribute(java.lang.String, java.lang.String, java.lang.String, long) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        long l0;
        java.lang.String r1, r2, r3, $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r4);

        return;
    }

    public void writeFloatAttribute(java.lang.String, java.lang.String, java.lang.String, float) throws javax.xml.stream.XMLStreamException
    {
        float f0;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        f0 := @parameter3: float;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r4);

        return;
    }

    public void writeDoubleAttribute(java.lang.String, java.lang.String, java.lang.String, double) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r4;
        double d0;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        d0 := @parameter3: double;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r4);

        return;
    }

    public void writeIntegerAttribute(java.lang.String, java.lang.String, java.lang.String, java.math.BigInteger) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.math.BigInteger r4;
        java.lang.String r1, r2, r3, $r5;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.math.BigInteger;

        $r5 = virtualinvoke r4.<java.math.BigInteger: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r5);

        return;
    }

    public void writeDecimalAttribute(java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal) throws javax.xml.stream.XMLStreamException
    {
        java.math.BigDecimal r4;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r5;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.math.BigDecimal;

        $r5 = virtualinvoke r4.<java.math.BigDecimal: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r5);

        return;
    }

    public void writeQNameAttribute(java.lang.String, java.lang.String, java.lang.String, javax.xml.namespace.QName) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r5;
        javax.xml.namespace.QName r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: javax.xml.namespace.QName;

        $r5 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: java.lang.String serializeQNameValue(javax.xml.namespace.QName)>(r4);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r5);

        return;
    }

    public void writeIntArrayAttribute(java.lang.String, java.lang.String, java.lang.String, int[]) throws javax.xml.stream.XMLStreamException
    {
        int[] r5;
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r6;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: int[];

        $r4 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()>();

        $i0 = lengthof r5;

        $r6 = virtualinvoke $r4.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: java.lang.String encodeAsString(int[],int,int)>(r5, 0, $i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r6);

        return;
    }

    public void writeLongArrayAttribute(java.lang.String, java.lang.String, java.lang.String, long[]) throws javax.xml.stream.XMLStreamException
    {
        long[] r5;
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r6;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: long[];

        $r4 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()>();

        $i0 = lengthof r5;

        $r6 = virtualinvoke $r4.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: java.lang.String encodeAsString(long[],int,int)>(r5, 0, $i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r6);

        return;
    }

    public void writeFloatArrayAttribute(java.lang.String, java.lang.String, java.lang.String, float[]) throws javax.xml.stream.XMLStreamException
    {
        float[] r5;
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r6;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: float[];

        $r4 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()>();

        $i0 = lengthof r5;

        $r6 = virtualinvoke $r4.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: java.lang.String encodeAsString(float[],int,int)>(r5, 0, $i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r6);

        return;
    }

    public void writeDoubleArrayAttribute(java.lang.String, java.lang.String, java.lang.String, double[]) throws javax.xml.stream.XMLStreamException
    {
        double[] r5;
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r6;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: double[];

        $r4 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()>();

        $i0 = lengthof r5;

        $r6 = virtualinvoke $r4.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: java.lang.String encodeAsString(double[],int,int)>(r5, 0, $i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r6);

        return;
    }

    public void writeBinaryAttribute(java.lang.String, java.lang.String, java.lang.String, byte[]) throws javax.xml.stream.XMLStreamException
    {
        byte[] r5;
        org.codehaus.stax2.typed.Base64Variant $r1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r2, r3, r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: byte[];

        $r1 = staticinvoke <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant getDefaultVariant()>();

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeBinaryAttribute(org.codehaus.stax2.typed.Base64Variant,java.lang.String,java.lang.String,java.lang.String,byte[])>($r1, r2, r3, r4, r5);

        return;
    }

    public void writeBinaryAttribute(org.codehaus.stax2.typed.Base64Variant, java.lang.String, java.lang.String, java.lang.String, byte[]) throws javax.xml.stream.XMLStreamException
    {
        byte[] r6;
        org.codehaus.stax2.typed.Base64Variant r5;
        int $i0;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, $r7;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r4;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r5 := @parameter0: org.codehaus.stax2.typed.Base64Variant;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r6 := @parameter4: byte[];

        $r4 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()>();

        $i0 = lengthof r6;

        $r7 = virtualinvoke $r4.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: java.lang.String encodeAsString(org.codehaus.stax2.typed.Base64Variant,byte[],int,int)>(r5, r6, 0, $i0);

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $r7);

        return;
    }

    protected abstract void appendLeaf(org.w3c.dom.Node) throws java.lang.IllegalStateException;

    protected java.lang.String serializeQNameValue(javax.xml.namespace.QName) throws javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r3, $r4, $r5, $r6;
        int $i0, $i1;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        javax.xml.namespace.NamespaceContext $r9;
        java.lang.String $r2, $r7, $r8, $r10, $r11, r12;
        boolean $z0;
        javax.xml.namespace.QName r1;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r1 := @parameter0: javax.xml.namespace.QName;

        $z0 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: boolean mNsRepairing>;

        if $z0 == 0 goto label6;

        $r8 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r9 = virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        if $r9 != null goto label1;

        $r11 = null;

        goto label2;

     label1:
        $r11 = interfaceinvoke $r9.<javax.xml.namespace.NamespaceContext: java.lang.String getPrefix(java.lang.String)>($r8);

     label2:
        r12 = $r11;

        if $r11 != null goto label5;

        $r10 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        if $r10 == null goto label3;

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

     label3:
        r12 = "";

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeDefaultNamespace(java.lang.String)>($r8);

        goto label5;

     label4:
        r12 = $r10;

        virtualinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void writeNamespace(java.lang.String,java.lang.String)>($r10, $r8);

     label5:
        goto label7;

     label6:
        r12 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

     label7:
        $r2 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        if r12 == null goto label8;

        $i0 = virtualinvoke r12.<java.lang.String: int length()>();

        if $i0 != 0 goto label9;

     label8:
        return $r2;

     label9:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    protected org.codehaus.stax2.ri.typed.SimpleValueEncoder getValueEncoder()
    {
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r0;
        org.codehaus.stax2.ri.typed.SimpleValueEncoder $r1, $r2, $r3;

        r0 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        $r1 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder mValueEncoder>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.stax2.ri.typed.SimpleValueEncoder;

        specialinvoke $r3.<org.codehaus.stax2.ri.typed.SimpleValueEncoder: void <init>()>();

        r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder mValueEncoder> = $r3;

     label1:
        $r2 = r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: org.codehaus.stax2.ri.typed.SimpleValueEncoder mValueEncoder>;

        return $r2;
    }

    protected static void throwOutputError(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        javax.xml.stream.XMLStreamException $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r0.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>(r1);

        throw $r0;
    }

    protected static void throwOutputError(java.lang.String, java.lang.Object) throws javax.xml.stream.XMLStreamException
    {
        java.lang.Object[] $r1;
        java.lang.Object r2;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r3 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r1);

        staticinvoke <org.codehaus.stax2.ri.dom.DOMWrappingWriter: void throwOutputError(java.lang.String)>($r3);

        return;
    }

    protected void reportUnsupported(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.StringBuffer $r1, $r3, $r4;
        org.codehaus.stax2.ri.dom.DOMWrappingWriter r6;
        java.lang.String r2, $r5;

        r6 := @this: org.codehaus.stax2.ri.dom.DOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be used with DOM-backed writer");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    public static void <clinit>()
    {
        <org.codehaus.stax2.ri.dom.DOMWrappingWriter: java.lang.String DEFAULT_XML_VERSION> = "1.0";

        <org.codehaus.stax2.ri.dom.DOMWrappingWriter: java.lang.String DEFAULT_OUTPUT_ENCODING> = "UTF-8";

        return;
    }
}
