public class org.apache.poi.xssf.model.SharedStringsTable extends org.apache.poi.POIXMLDocumentPart
{
    private final java.util.List strings;
    private final java.util.Map stmap;
    private int count;
    private int uniqueCount;
    private org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument _sstDoc;
    private static final org.apache.xmlbeans.XmlOptions options;

    public void <init>()
    {
        java.util.HashMap $r2;
        org.apache.poi.xssf.model.SharedStringsTable r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument $r3, $r4;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.List strings> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.Map stmap> = $r2;

        $r3 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument newInstance()>();

        r0.<org.apache.poi.xssf.model.SharedStringsTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument _sstDoc> = $r3;

        $r4 = r0.<org.apache.poi.xssf.model.SharedStringsTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument _sstDoc>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst addNewSst()>();

        return;
    }

    public void <init>(org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.openxml4j.opc.PackageRelationship) throws java.io.IOException
    {
        org.apache.poi.openxml4j.opc.PackagePart r1;
        java.util.HashMap $r4;
        org.apache.poi.xssf.model.SharedStringsTable r0;
        org.apache.poi.openxml4j.opc.PackageRelationship r2;
        java.util.ArrayList $r3;
        java.io.InputStream $r5;

        r0 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackageRelationship;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.List strings> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.Map stmap> = $r4;

        $r5 = virtualinvoke r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        virtualinvoke r0.<org.apache.poi.xssf.model.SharedStringsTable: void readFrom(java.io.InputStream)>($r5);

        return;
    }

    public void readFrom(java.io.InputStream) throws java.io.IOException
    {
        long $l0, $l2;
        java.lang.Integer $r9;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst r6;
        java.util.Map $r7;
        int $i1, $i3, i4, i5, i6;
        java.lang.String $r8, $r13;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument $r2, $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst[] $r5;
        java.io.IOException $r12;
        java.util.List $r10;
        org.apache.xmlbeans.XmlException $r11;
        org.apache.poi.xssf.model.SharedStringsTable r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        r1 := @parameter0: java.io.InputStream;

     label1:
        i5 = 0;

        $r2 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument parse(java.io.InputStream)>(r1);

        r0.<org.apache.poi.xssf.model.SharedStringsTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument _sstDoc> = $r2;

        $r3 = r0.<org.apache.poi.xssf.model.SharedStringsTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument _sstDoc>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst getSst()>();

        $l0 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst: long getCount()>();

        $i1 = (int) $l0;

        r0.<org.apache.poi.xssf.model.SharedStringsTable: int count> = $i1;

        $l2 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst: long getUniqueCount()>();

        $i3 = (int) $l2;

        r0.<org.apache.poi.xssf.model.SharedStringsTable: int uniqueCount> = $i3;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst[] getSiArray()>();

        i4 = lengthof $r5;

        i6 = 0;

     label2:
        if i6 >= i4 goto label3;

        r6 = $r5[i6];

        $r7 = r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.Map stmap>;

        $r8 = specialinvoke r0.<org.apache.poi.xssf.model.SharedStringsTable: java.lang.String getKey(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)>(r6);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10 = r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.List strings>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r6);

        i5 = i5 + 1;

        i6 = i6 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.io.IOException;

        $r13 = virtualinvoke $r11.<org.apache.xmlbeans.XmlException: java.lang.String getLocalizedMessage()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label5:
        return;

        catch org.apache.xmlbeans.XmlException from label1 to label3 with label4;
    }

    private java.lang.String getKey(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst r0;
        org.apache.xmlbeans.XmlOptions $r1;
        java.lang.String $r2;
        org.apache.poi.xssf.model.SharedStringsTable r3;

        r3 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst;

        $r1 = <org.apache.poi.xssf.model.SharedStringsTable: org.apache.xmlbeans.XmlOptions options>;

        $r2 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: java.lang.String xmlText(org.apache.xmlbeans.XmlOptions)>($r1);

        return $r2;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getEntryAt(int)
    {
        java.util.List $r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r3;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.xssf.model.SharedStringsTable r0;

        r0 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.List strings>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst) $r2;

        return $r3;
    }

    public int getCount()
    {
        int $i0;
        org.apache.poi.xssf.model.SharedStringsTable r0;

        r0 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        $i0 = r0.<org.apache.poi.xssf.model.SharedStringsTable: int count>;

        return $i0;
    }

    public int getUniqueCount()
    {
        int $i0;
        org.apache.poi.xssf.model.SharedStringsTable r0;

        r0 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        $i0 = r0.<org.apache.poi.xssf.model.SharedStringsTable: int uniqueCount>;

        return $i0;
    }

    public int addEntry(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)
    {
        java.lang.Integer $r9, $r13;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst $r5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst r1, $r6;
        java.util.Map $r3, $r8, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument $r4;
        boolean $z0;
        java.util.List $r7, $r10;
        java.lang.Object $r12;
        org.apache.poi.xssf.model.SharedStringsTable r0;

        r0 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst;

        $r2 = specialinvoke r0.<org.apache.poi.xssf.model.SharedStringsTable: java.lang.String getKey(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)>(r1);

        $i0 = r0.<org.apache.poi.xssf.model.SharedStringsTable: int count>;

        $i1 = $i0 + 1;

        r0.<org.apache.poi.xssf.model.SharedStringsTable: int count> = $i1;

        $r3 = r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.Map stmap>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r11 = r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.Map stmap>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r13 = (java.lang.Integer) $r12;

        $i5 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        return $i5;

     label1:
        $i2 = r0.<org.apache.poi.xssf.model.SharedStringsTable: int uniqueCount>;

        $i3 = $i2 + 1;

        r0.<org.apache.poi.xssf.model.SharedStringsTable: int uniqueCount> = $i3;

        $r4 = r0.<org.apache.poi.xssf.model.SharedStringsTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument _sstDoc>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst getSst()>();

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst addNewSi()>();

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r1);

        $r7 = r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.List strings>;

        $i4 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r8 = r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.Map stmap>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r9);

        $r10 = r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.List strings>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r6);

        return $i4;
    }

    public java.util.List getItems()
    {
        java.util.List $r1;
        org.apache.poi.xssf.model.SharedStringsTable r0;

        r0 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        $r1 = r0.<org.apache.poi.xssf.model.SharedStringsTable: java.util.List strings>;

        return $r1;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r5;
        long $l1, $l3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst $r4;
        org.apache.xmlbeans.XmlOptions $r1, $r7;
        int $i0, $i2, $i5;
        org.apache.poi.xssf.model.SharedStringsTable r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument $r3, $r6;

        r2 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        r5 := @parameter0: java.io.OutputStream;

        $r7 = new org.apache.xmlbeans.XmlOptions;

        $r1 = <org.apache.poi.xssf.model.SharedStringsTable: org.apache.xmlbeans.XmlOptions DEFAULT_XML_OPTIONS>;

        specialinvoke $r7.<org.apache.xmlbeans.XmlOptions: void <init>(org.apache.xmlbeans.XmlOptions)>($r1);

        virtualinvoke $r7.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveCDataLengthThreshold(int)>(1000000);

        $i5 = (int) -1;

        virtualinvoke $r7.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveCDataEntityCountThreshold(int)>($i5);

        $r3 = r2.<org.apache.poi.xssf.model.SharedStringsTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument _sstDoc>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst getSst()>();

        $i0 = r2.<org.apache.poi.xssf.model.SharedStringsTable: int count>;

        $l1 = (long) $i0;

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst: void setCount(long)>($l1);

        $i2 = r2.<org.apache.poi.xssf.model.SharedStringsTable: int uniqueCount>;

        $l3 = (long) $i2;

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSst: void setUniqueCount(long)>($l3);

        $r6 = r2.<org.apache.poi.xssf.model.SharedStringsTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument _sstDoc>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.SstDocument: void save(java.io.OutputStream,org.apache.xmlbeans.XmlOptions)>(r5, $r7);

        return;
    }

    protected void commit() throws java.io.IOException
    {
        java.io.OutputStream $r2;
        org.apache.poi.openxml4j.opc.PackagePart $r1;
        org.apache.poi.xssf.model.SharedStringsTable r0;

        r0 := @this: org.apache.poi.xssf.model.SharedStringsTable;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.model.SharedStringsTable: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        virtualinvoke r0.<org.apache.poi.xssf.model.SharedStringsTable: void writeTo(java.io.OutputStream)>($r2);

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.XmlOptions $r0, $r1, $r2, $r3, $r4;
        java.util.Map $r5;

        $r0 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r0.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        <org.apache.poi.xssf.model.SharedStringsTable: org.apache.xmlbeans.XmlOptions options> = $r0;

        $r1 = <org.apache.poi.xssf.model.SharedStringsTable: org.apache.xmlbeans.XmlOptions options>;

        virtualinvoke $r1.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("SAVE_INNER");

        $r2 = <org.apache.poi.xssf.model.SharedStringsTable: org.apache.xmlbeans.XmlOptions options>;

        virtualinvoke $r2.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("SAVE_AGGRESSIVE_NAMESPACES");

        $r3 = <org.apache.poi.xssf.model.SharedStringsTable: org.apache.xmlbeans.XmlOptions options>;

        virtualinvoke $r3.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("SAVE_USE_DEFAULT_NAMESPACE");

        $r4 = <org.apache.poi.xssf.model.SharedStringsTable: org.apache.xmlbeans.XmlOptions options>;

        $r5 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("", "http://schemas.openxmlformats.org/spreadsheetml/2006/main");

        virtualinvoke $r4.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveImplicitNamespaces(java.util.Map)>($r5);

        return;
    }
}
