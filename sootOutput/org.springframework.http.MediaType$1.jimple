final class org.springframework.http.MediaType$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        org.springframework.http.MediaType$1 r0;

        r0 := @this: org.springframework.http.MediaType$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.springframework.http.MediaType, org.springframework.http.MediaType)
    {
        org.springframework.http.MediaType$1 r8;
        byte $b3;
        java.util.Map $r6, $r7;
        int $i0, $i1, $i2, $i5, $i7;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        double $d0, $d1;
        org.springframework.http.MediaType r0, r1;

        r8 := @this: org.springframework.http.MediaType$1;

        r0 := @parameter0: org.springframework.http.MediaType;

        r1 := @parameter1: org.springframework.http.MediaType;

        $z0 = virtualinvoke r0.<org.springframework.http.MediaType: boolean isWildcardType()>();

        if $z0 == 0 goto label01;

        $z9 = virtualinvoke r1.<org.springframework.http.MediaType: boolean isWildcardType()>();

        if $z9 != 0 goto label01;

        return 1;

     label01:
        $z1 = virtualinvoke r1.<org.springframework.http.MediaType: boolean isWildcardType()>();

        if $z1 == 0 goto label02;

        $z8 = virtualinvoke r0.<org.springframework.http.MediaType: boolean isWildcardType()>();

        if $z8 != 0 goto label02;

        $i5 = (int) -1;

        return $i5;

     label02:
        $r2 = virtualinvoke r0.<org.springframework.http.MediaType: java.lang.String getType()>();

        $r3 = virtualinvoke r1.<org.springframework.http.MediaType: java.lang.String getType()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 != 0 goto label03;

        return 0;

     label03:
        $z3 = virtualinvoke r0.<org.springframework.http.MediaType: boolean isWildcardSubtype()>();

        if $z3 == 0 goto label04;

        $z7 = virtualinvoke r1.<org.springframework.http.MediaType: boolean isWildcardSubtype()>();

        if $z7 != 0 goto label04;

        return 1;

     label04:
        $z4 = virtualinvoke r1.<org.springframework.http.MediaType: boolean isWildcardSubtype()>();

        if $z4 == 0 goto label05;

        $z6 = virtualinvoke r0.<org.springframework.http.MediaType: boolean isWildcardSubtype()>();

        if $z6 != 0 goto label05;

        $i7 = (int) -1;

        return $i7;

     label05:
        $r4 = virtualinvoke r0.<org.springframework.http.MediaType: java.lang.String getSubtype()>();

        $r5 = virtualinvoke r1.<org.springframework.http.MediaType: java.lang.String getSubtype()>();

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z5 != 0 goto label06;

        return 0;

     label06:
        $d0 = virtualinvoke r0.<org.springframework.http.MediaType: double getQualityValue()>();

        $d1 = virtualinvoke r1.<org.springframework.http.MediaType: double getQualityValue()>();

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, $d0);

        if $i0 == 0 goto label07;

        return $i0;

     label07:
        $r6 = staticinvoke <org.springframework.http.MediaType: java.util.Map access$1(org.springframework.http.MediaType)>(r0);

        $i1 = interfaceinvoke $r6.<java.util.Map: int size()>();

        $r7 = staticinvoke <org.springframework.http.MediaType: java.util.Map access$1(org.springframework.http.MediaType)>(r1);

        $i2 = interfaceinvoke $r7.<java.util.Map: int size()>();

        if $i2 >= $i1 goto label08;

        $b3 = -1;

        goto label10;

     label08:
        if $i2 != $i1 goto label09;

        $b3 = 0;

        goto label10;

     label09:
        $b3 = 1;

     label10:
        return $b3;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.springframework.http.MediaType $r3, $r4;
        org.springframework.http.MediaType$1 r0;
        int $i0;
        java.lang.Object r1, r2;

        r0 := @this: org.springframework.http.MediaType$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.springframework.http.MediaType) r1;

        $r3 = (org.springframework.http.MediaType) r2;

        $i0 = virtualinvoke r0.<org.springframework.http.MediaType$1: int compare(org.springframework.http.MediaType,org.springframework.http.MediaType)>($r4, $r3);

        return $i0;
    }
}
