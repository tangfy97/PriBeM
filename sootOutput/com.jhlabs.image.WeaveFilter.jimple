public class com.jhlabs.image.WeaveFilter extends com.jhlabs.image.PointFilter implements java.io.Serializable
{
    static final long serialVersionUID;
    private float xWidth;
    private float yWidth;
    private float xGap;
    private float yGap;
    private int rows;
    private int cols;
    private int rgbX;
    private int rgbY;
    private boolean useImageColors;
    private boolean roundThreads;
    private boolean shadeCrossings;
    public int[][] matrix;

    public void <init>()
    {
        int[][] $r1;
        int[] $r2, $r3, $r4, $r5;
        int $i1;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void <init>()>();

        r0.<com.jhlabs.image.WeaveFilter: float xWidth> = 16.0F;

        r0.<com.jhlabs.image.WeaveFilter: float yWidth> = 16.0F;

        r0.<com.jhlabs.image.WeaveFilter: float xGap> = 6.0F;

        r0.<com.jhlabs.image.WeaveFilter: float yGap> = 6.0F;

        r0.<com.jhlabs.image.WeaveFilter: int rows> = 4;

        r0.<com.jhlabs.image.WeaveFilter: int cols> = 4;

        $i1 = (int) -32640;

        r0.<com.jhlabs.image.WeaveFilter: int rgbX> = $i1;

        r0.<com.jhlabs.image.WeaveFilter: int rgbY> = -8355585;

        r0.<com.jhlabs.image.WeaveFilter: boolean useImageColors> = 1;

        r0.<com.jhlabs.image.WeaveFilter: boolean roundThreads> = 0;

        r0.<com.jhlabs.image.WeaveFilter: boolean shadeCrossings> = 1;

        $r1 = newarray (int[])[4];

        $r2 = newarray (int)[4];

        $r2[0] = 0;

        $r2[1] = 1;

        $r2[2] = 0;

        $r2[3] = 1;

        $r1[0] = $r2;

        $r3 = newarray (int)[4];

        $r3[0] = 1;

        $r3[1] = 0;

        $r3[2] = 1;

        $r3[3] = 0;

        $r1[1] = $r3;

        $r4 = newarray (int)[4];

        $r4[0] = 0;

        $r4[1] = 1;

        $r4[2] = 0;

        $r4[3] = 1;

        $r1[2] = $r4;

        $r5 = newarray (int)[4];

        $r5[0] = 1;

        $r5[1] = 0;

        $r5[2] = 1;

        $r5[3] = 0;

        $r1[3] = $r5;

        r0.<com.jhlabs.image.WeaveFilter: int[][] matrix> = $r1;

        return;
    }

    public void setXGap(float)
    {
        float f0;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WeaveFilter: float xGap> = f0;

        return;
    }

    public void setXWidth(float)
    {
        float f0;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WeaveFilter: float xWidth> = f0;

        return;
    }

    public float getXWidth()
    {
        float $f0;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        $f0 = r0.<com.jhlabs.image.WeaveFilter: float xWidth>;

        return $f0;
    }

    public void setYWidth(float)
    {
        float f0;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WeaveFilter: float yWidth> = f0;

        return;
    }

    public float getYWidth()
    {
        float $f0;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        $f0 = r0.<com.jhlabs.image.WeaveFilter: float yWidth>;

        return $f0;
    }

    public float getXGap()
    {
        float $f0;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        $f0 = r0.<com.jhlabs.image.WeaveFilter: float xGap>;

        return $f0;
    }

    public void setYGap(float)
    {
        float f0;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WeaveFilter: float yGap> = f0;

        return;
    }

    public float getYGap()
    {
        float $f0;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        $f0 = r0.<com.jhlabs.image.WeaveFilter: float yGap>;

        return $f0;
    }

    public void setCrossings(int[][])
    {
        int[][] r1;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        r1 := @parameter0: int[][];

        r0.<com.jhlabs.image.WeaveFilter: int[][] matrix> = r1;

        return;
    }

    public int[][] getCrossings()
    {
        int[][] $r1;
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        $r1 = r0.<com.jhlabs.image.WeaveFilter: int[][] matrix>;

        return $r1;
    }

    public void setUseImageColors(boolean)
    {
        com.jhlabs.image.WeaveFilter r0;
        boolean z0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        z0 := @parameter0: boolean;

        r0.<com.jhlabs.image.WeaveFilter: boolean useImageColors> = z0;

        return;
    }

    public boolean getUseImageColors()
    {
        com.jhlabs.image.WeaveFilter r0;
        boolean $z0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        $z0 = r0.<com.jhlabs.image.WeaveFilter: boolean useImageColors>;

        return $z0;
    }

    public void setRoundThreads(boolean)
    {
        com.jhlabs.image.WeaveFilter r0;
        boolean z0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        z0 := @parameter0: boolean;

        r0.<com.jhlabs.image.WeaveFilter: boolean roundThreads> = z0;

        return;
    }

    public boolean getRoundThreads()
    {
        com.jhlabs.image.WeaveFilter r0;
        boolean $z0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        $z0 = r0.<com.jhlabs.image.WeaveFilter: boolean roundThreads>;

        return $z0;
    }

    public void setShadeCrossings(boolean)
    {
        com.jhlabs.image.WeaveFilter r0;
        boolean z0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        z0 := @parameter0: boolean;

        r0.<com.jhlabs.image.WeaveFilter: boolean shadeCrossings> = z0;

        return;
    }

    public boolean getShadeCrossings()
    {
        com.jhlabs.image.WeaveFilter r0;
        boolean $z0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        $z0 = r0.<com.jhlabs.image.WeaveFilter: boolean shadeCrossings>;

        return $z0;
    }

    public int filterRGB(int, int, int)
    {
        byte $b2, $b3;
        int[][] $r1, $r3, $r5;
        int[] $r2, $r4, $r6;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, f69, f70, f71, f72, $f73, $f74, $f75;
        com.jhlabs.image.WeaveFilter r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, $i24, i25, i26, $i27, $i28;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        i18 := @parameter0: int;

        i19 := @parameter1: int;

        i14 := @parameter2: int;

        $f4 = (float) i18;

        $f2 = r0.<com.jhlabs.image.WeaveFilter: float xWidth>;

        $f0 = r0.<com.jhlabs.image.WeaveFilter: float xGap>;

        $f1 = $f0 / 2.0F;

        $f3 = $f2 + $f1;

        $f5 = $f4 + $f3;

        i20 = (int) $f5;

        $f10 = (float) i19;

        $f8 = r0.<com.jhlabs.image.WeaveFilter: float yWidth>;

        $f6 = r0.<com.jhlabs.image.WeaveFilter: float yGap>;

        $f7 = $f6 / 2.0F;

        $f9 = $f8 + $f7;

        $f11 = $f10 + $f9;

        i21 = (int) $f11;

        $f15 = (float) i20;

        $f13 = r0.<com.jhlabs.image.WeaveFilter: float xWidth>;

        $f12 = r0.<com.jhlabs.image.WeaveFilter: float xGap>;

        $f14 = $f13 + $f12;

        $f16 = staticinvoke <com.jhlabs.image.ImageMath: float mod(float,float)>($f15, $f14);

        $f20 = (float) i21;

        $f18 = r0.<com.jhlabs.image.WeaveFilter: float yWidth>;

        $f17 = r0.<com.jhlabs.image.WeaveFilter: float yGap>;

        $f19 = $f18 + $f17;

        $f21 = staticinvoke <com.jhlabs.image.ImageMath: float mod(float,float)>($f20, $f19);

        $f25 = (float) i20;

        $f23 = r0.<com.jhlabs.image.WeaveFilter: float xWidth>;

        $f22 = r0.<com.jhlabs.image.WeaveFilter: float xGap>;

        $f24 = $f23 + $f22;

        $f26 = $f25 / $f24;

        i0 = (int) $f26;

        $f30 = (float) i21;

        $f28 = r0.<com.jhlabs.image.WeaveFilter: float yWidth>;

        $f27 = r0.<com.jhlabs.image.WeaveFilter: float yGap>;

        $f29 = $f28 + $f27;

        $f31 = $f30 / $f29;

        i1 = (int) $f31;

        $f32 = r0.<com.jhlabs.image.WeaveFilter: float xWidth>;

        $b2 = $f16 cmpg $f32;

        $i27 = (int) $b2;

        if $i27 >= 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        z0 = $z7;

        $f33 = r0.<com.jhlabs.image.WeaveFilter: float yWidth>;

        $b3 = $f21 cmpg $f33;

        $i28 = (int) $b3;

        if $i28 >= 0 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        z1 = $z8;

        $z2 = r0.<com.jhlabs.image.WeaveFilter: boolean roundThreads>;

        if $z2 == 0 goto label05;

        $f57 = r0.<com.jhlabs.image.WeaveFilter: float xWidth>;

        $f58 = $f57 / 2.0F;

        $f59 = $f58 - $f16;

        $f60 = staticinvoke <java.lang.Math: float abs(float)>($f59);

        $f61 = r0.<com.jhlabs.image.WeaveFilter: float xWidth>;

        $f62 = $f60 / $f61;

        f69 = $f62 / 2.0F;

        $f63 = r0.<com.jhlabs.image.WeaveFilter: float yWidth>;

        $f64 = $f63 / 2.0F;

        $f65 = $f64 - $f21;

        $f66 = staticinvoke <java.lang.Math: float abs(float)>($f65);

        $f67 = r0.<com.jhlabs.image.WeaveFilter: float yWidth>;

        $f68 = $f66 / $f67;

        f70 = $f68 / 2.0F;

        goto label06;

     label05:
        f70 = 0.0F;

        f69 = 0.0F;

     label06:
        $z3 = r0.<com.jhlabs.image.WeaveFilter: boolean shadeCrossings>;

        if $z3 == 0 goto label07;

        $f37 = r0.<com.jhlabs.image.WeaveFilter: float xWidth>;

        $f44 = $f37 / 2.0F;

        $f38 = r0.<com.jhlabs.image.WeaveFilter: float xWidth>;

        $f40 = $f38 / 2.0F;

        $f39 = r0.<com.jhlabs.image.WeaveFilter: float xGap>;

        $f45 = $f40 + $f39;

        $f41 = r0.<com.jhlabs.image.WeaveFilter: float xWidth>;

        $f42 = $f41 / 2.0F;

        $f43 = $f42 - $f16;

        $f46 = staticinvoke <java.lang.Math: float abs(float)>($f43);

        f71 = staticinvoke <com.jhlabs.image.ImageMath: float smoothStep(float,float,float)>($f44, $f45, $f46);

        $f47 = r0.<com.jhlabs.image.WeaveFilter: float yWidth>;

        $f54 = $f47 / 2.0F;

        $f48 = r0.<com.jhlabs.image.WeaveFilter: float yWidth>;

        $f50 = $f48 / 2.0F;

        $f49 = r0.<com.jhlabs.image.WeaveFilter: float yGap>;

        $f55 = $f50 + $f49;

        $f51 = r0.<com.jhlabs.image.WeaveFilter: float yWidth>;

        $f52 = $f51 / 2.0F;

        $f53 = $f52 - $f21;

        $f56 = staticinvoke <java.lang.Math: float abs(float)>($f53);

        f72 = staticinvoke <com.jhlabs.image.ImageMath: float smoothStep(float,float,float)>($f54, $f55, $f56);

        goto label08;

     label07:
        f72 = 0.0F;

        f71 = 0.0F;

     label08:
        $z4 = r0.<com.jhlabs.image.WeaveFilter: boolean useImageColors>;

        if $z4 == 0 goto label09;

        i22 = i14;

        i23 = i14;

        goto label10;

     label09:
        i23 = r0.<com.jhlabs.image.WeaveFilter: int rgbX>;

        i22 = r0.<com.jhlabs.image.WeaveFilter: int rgbY>;

     label10:
        $i4 = r0.<com.jhlabs.image.WeaveFilter: int cols>;

        $i15 = i0 % $i4;

        $i5 = r0.<com.jhlabs.image.WeaveFilter: int rows>;

        $i16 = i1 % $i5;

        $r1 = r0.<com.jhlabs.image.WeaveFilter: int[][] matrix>;

        $r2 = $r1[$i16];

        $i17 = $r2[$i15];

        if z0 == 0 goto label19;

        if z1 == 0 goto label15;

        if $i17 != 1 goto label11;

        $i24 = i23;

        goto label12;

     label11:
        $i24 = i22;

     label12:
        i25 = $i24;

        if $i17 != 1 goto label13;

        $f73 = f69;

        goto label14;

     label13:
        $f73 = f70;

     label14:
        $f36 = 2.0F * $f73;

        i26 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>($f36, i25, -16777216);

        goto label24;

     label15:
        $z6 = r0.<com.jhlabs.image.WeaveFilter: boolean shadeCrossings>;

        if $z6 == 0 goto label18;

        $r5 = r0.<com.jhlabs.image.WeaveFilter: int[][] matrix>;

        $i11 = i1 + 1;

        $i10 = r0.<com.jhlabs.image.WeaveFilter: int rows>;

        $i12 = $i11 % $i10;

        $r6 = $r5[$i12];

        $i13 = $r6[$i15];

        if $i17 == $i13 goto label17;

        if $i17 != 0 goto label16;

        f72 = 1.0F - f72;

     label16:
        $f35 = f72 * 0.5F;

        i23 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>($f35, i23, -16777216);

        goto label18;

     label17:
        if $i17 != 0 goto label18;

        i23 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>(0.5F, i23, -16777216);

     label18:
        $f74 = 2.0F * f69;

        i26 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>($f74, i23, -16777216);

        goto label24;

     label19:
        if z1 == 0 goto label23;

        $z5 = r0.<com.jhlabs.image.WeaveFilter: boolean shadeCrossings>;

        if $z5 == 0 goto label22;

        $r3 = r0.<com.jhlabs.image.WeaveFilter: int[][] matrix>;

        $r4 = $r3[$i16];

        $i7 = i0 + 1;

        $i6 = r0.<com.jhlabs.image.WeaveFilter: int cols>;

        $i8 = $i7 % $i6;

        $i9 = $r4[$i8];

        if $i17 == $i9 goto label21;

        if $i17 != 1 goto label20;

        f71 = 1.0F - f71;

     label20:
        $f34 = f71 * 0.5F;

        i22 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>($f34, i22, -16777216);

        goto label22;

     label21:
        if $i17 != 1 goto label22;

        i22 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>(0.5F, i22, -16777216);

     label22:
        $f75 = 2.0F * f70;

        i26 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>($f75, i22, -16777216);

        goto label24;

     label23:
        i26 = 0;

     label24:
        return i26;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.WeaveFilter r0;

        r0 := @this: com.jhlabs.image.WeaveFilter;

        return "Texture/Weave...";
    }

    public static void <clinit>()
    {
        <com.jhlabs.image.WeaveFilter: long serialVersionUID> = 4847932412277504482L;

        return;
    }
}
