public final class org.waveprotocol.wave.model.util.CopyOnWriteSet extends java.lang.Object implements java.lang.Iterable
{
    private static final org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory HASH_SET;
    private static final org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory LIST_SET;
    private final org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory factory;
    private java.util.Collection contents;
    private boolean stale;
    static final boolean $assertionsDisabled;

    void <init>(org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory)
    {
        java.util.Set $r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory r2;

        r0 := @this: org.waveprotocol.wave.model.util.CopyOnWriteSet;

        r2 := @parameter0: org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents> = $r1;

        r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean stale> = 1;

        r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory factory> = r2;

        return;
    }

    public static org.waveprotocol.wave.model.util.CopyOnWriteSet create()
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet createHashSet()>();

        return $r0;
    }

    public static org.waveprotocol.wave.model.util.CopyOnWriteSet createHashSet()
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory $r1;

        $r0 = new org.waveprotocol.wave.model.util.CopyOnWriteSet;

        $r1 = <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory HASH_SET>;

        specialinvoke $r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: void <init>(org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory)>($r1);

        return $r0;
    }

    public static org.waveprotocol.wave.model.util.CopyOnWriteSet createListSet()
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory $r1;

        $r0 = new org.waveprotocol.wave.model.util.CopyOnWriteSet;

        $r1 = <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory LIST_SET>;

        specialinvoke $r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: void <init>(org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory)>($r1);

        return $r0;
    }

    private void copy()
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory $r2;
        java.util.Collection $r1, $r3;
        java.lang.AssertionError $r4;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.model.util.CopyOnWriteSet;

        $z0 = <org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean stale>;

        if $z1 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory factory>;

        $r1 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory: java.util.Collection copy(java.util.Collection)>($r1);

        r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents> = $r3;

        r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean stale> = 0;

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.util.Collection $r2, $r3;
        org.waveprotocol.wave.model.util.CopyOnWriteSet r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.waveprotocol.wave.model.util.CopyOnWriteSet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean stale>;

        if $z0 != 0 goto label1;

        $r3 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents>;

        $z3 = interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        return $z3;

     label1:
        $z1 = virtualinvoke r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        specialinvoke r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: void copy()>();

        $r2 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents>;

        $z2 = interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        return $z2;

     label2:
        return 0;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Collection $r2, $r3;
        org.waveprotocol.wave.model.util.CopyOnWriteSet r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.waveprotocol.wave.model.util.CopyOnWriteSet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean stale>;

        if $z0 != 0 goto label1;

        $r3 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents>;

        $z3 = interfaceinvoke $r3.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

        return $z3;

     label1:
        $z1 = virtualinvoke r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        specialinvoke r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: void copy()>();

        $r2 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents>;

        $z2 = interfaceinvoke $r2.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

        return $z2;

     label2:
        return 0;
    }

    public boolean contains(java.lang.Object)
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet r0;
        java.util.Collection $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.util.CopyOnWriteSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet r0;
        java.util.Iterator $r2;
        java.util.Collection $r1;

        r0 := @this: org.waveprotocol.wave.model.util.CopyOnWriteSet;

        r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean stale> = 1;

        $r1 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        return $r2;
    }

    public void clear()
    {
        java.util.Set $r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet r0;

        r0 := @this: org.waveprotocol.wave.model.util.CopyOnWriteSet;

        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents> = $r1;

        r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean stale> = 1;

        return;
    }

    public boolean isEmpty()
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet r0;
        java.util.Collection $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.util.CopyOnWriteSet;

        $r1 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents>;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        return $z0;
    }

    public int size()
    {
        int $i0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet r0;
        java.util.Collection $r1;

        r0 := @this: org.waveprotocol.wave.model.util.CopyOnWriteSet;

        $r1 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet r0;
        java.lang.String $r2;
        java.util.Collection $r1;

        r0 := @this: org.waveprotocol.wave.model.util.CopyOnWriteSet;

        $r1 = r0.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Collection contents>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet$1 $r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet$2 $r2;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/util/CopyOnWriteSet;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean $assertionsDisabled> = $z1;

        $r1 = new org.waveprotocol.wave.model.util.CopyOnWriteSet$1;

        specialinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet$1: void <init>()>();

        <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory HASH_SET> = $r1;

        $r2 = new org.waveprotocol.wave.model.util.CopyOnWriteSet$2;

        specialinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet$2: void <init>()>();

        <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet$CollectionFactory LIST_SET> = $r2;

        return;
    }
}
