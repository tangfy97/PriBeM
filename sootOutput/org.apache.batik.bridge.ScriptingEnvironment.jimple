public class org.apache.batik.bridge.ScriptingEnvironment extends org.apache.batik.bridge.BaseScriptingEnvironment
{
    public static final java.lang.String[] SVG_EVENT_ATTRS;
    public static final java.lang.String[] SVG_DOM_EVENT;
    protected java.util.Timer timer;
    protected org.apache.batik.bridge.UpdateManager updateManager;
    protected org.apache.batik.util.RunnableQueue updateRunnableQueue;
    protected org.w3c.dom.events.EventListener domNodeInsertedListener;
    protected org.w3c.dom.events.EventListener domNodeRemovedListener;
    protected org.w3c.dom.events.EventListener domAttrModifiedListener;
    protected org.w3c.dom.events.EventListener svgAbortListener;
    protected org.w3c.dom.events.EventListener svgErrorListener;
    protected org.w3c.dom.events.EventListener svgResizeListener;
    protected org.w3c.dom.events.EventListener svgScrollListener;
    protected org.w3c.dom.events.EventListener svgUnloadListener;
    protected org.w3c.dom.events.EventListener svgZoomListener;
    protected org.w3c.dom.events.EventListener beginListener;
    protected org.w3c.dom.events.EventListener endListener;
    protected org.w3c.dom.events.EventListener repeatListener;
    protected org.w3c.dom.events.EventListener focusinListener;
    protected org.w3c.dom.events.EventListener focusoutListener;
    protected org.w3c.dom.events.EventListener activateListener;
    protected org.w3c.dom.events.EventListener clickListener;
    protected org.w3c.dom.events.EventListener mousedownListener;
    protected org.w3c.dom.events.EventListener mouseupListener;
    protected org.w3c.dom.events.EventListener mouseoverListener;
    protected org.w3c.dom.events.EventListener mouseoutListener;
    protected org.w3c.dom.events.EventListener mousemoveListener;
    protected org.w3c.dom.events.EventListener keypressListener;
    protected org.w3c.dom.events.EventListener keydownListener;
    protected org.w3c.dom.events.EventListener keyupListener;
    protected org.w3c.dom.events.EventListener[] listeners;
    java.util.Map attrToDOMEvent;
    java.util.Map attrToListener;

    public void <init>(org.apache.batik.bridge.BridgeContext)
    {
        org.w3c.dom.Document $r64;
        java.util.Map $r55, $r60;
        org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        org.apache.batik.util.RunnableQueue $r63;
        org.apache.batik.bridge.BridgeContext r1;
        java.lang.String $r53, $r54, $r59;
        org.w3c.dom.events.EventListener $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r58;
        org.w3c.dom.events.EventListener[] $r24, $r57;
        java.util.Timer $r2;
        org.apache.batik.bridge.ScriptingEnvironment r0;
        java.util.HashMap $r46, $r48;
        java.lang.String[] $r47, $r49, $r50, $r51, $r52, $r56;
        int $i0, $i1, $i2, i3;
        org.w3c.dom.Element $r65;
        org.apache.batik.bridge.UpdateManager $r61, $r62;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        specialinvoke r0.<org.apache.batik.bridge.BaseScriptingEnvironment: void <init>(org.apache.batik.bridge.BridgeContext)>(r1);

        $r2 = new java.util.Timer;

        specialinvoke $r2.<java.util.Timer: void <init>(boolean)>(1);

        r0.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Timer timer> = $r2;

        $r3 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r3.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onabort");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgAbortListener> = $r3;

        $r4 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r4.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onerror");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgErrorListener> = $r4;

        $r5 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r5.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onresize");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgResizeListener> = $r5;

        $r6 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r6.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onscroll");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgScrollListener> = $r6;

        $r7 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r7.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onunload");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgUnloadListener> = $r7;

        $r8 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r8.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onzoom");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgZoomListener> = $r8;

        $r9 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r9.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onbegin");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener beginListener> = $r9;

        $r10 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r10.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onend");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener endListener> = $r10;

        $r11 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r11.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onrepeat");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener repeatListener> = $r11;

        $r12 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r12.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onfocusin");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener focusinListener> = $r12;

        $r13 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r13.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onfocusout");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener focusoutListener> = $r13;

        $r14 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r14.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onactivate");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener activateListener> = $r14;

        $r15 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r15.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onclick");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener clickListener> = $r15;

        $r16 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r16.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onmousedown");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mousedownListener> = $r16;

        $r17 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r17.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onmouseup");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseupListener> = $r17;

        $r18 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r18.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onmouseover");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseoverListener> = $r18;

        $r19 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r19.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onmouseout");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseoutListener> = $r19;

        $r20 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r20.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onmousemove");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mousemoveListener> = $r20;

        $r21 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r21.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onkeypress");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keypressListener> = $r21;

        $r22 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r22.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onkeydown");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keydownListener> = $r22;

        $r23 = new org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener;

        specialinvoke $r23.<org.apache.batik.bridge.ScriptingEnvironment$ScriptingEventListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment,java.lang.String)>(r0, "onkeyup");

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keyupListener> = $r23;

        $r24 = newarray (org.w3c.dom.events.EventListener)[21];

        $r25 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgAbortListener>;

        $r24[0] = $r25;

        $r26 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgErrorListener>;

        $r24[1] = $r26;

        $r27 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgResizeListener>;

        $r24[2] = $r27;

        $r28 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgScrollListener>;

        $r24[3] = $r28;

        $r29 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgUnloadListener>;

        $r24[4] = $r29;

        $r30 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgZoomListener>;

        $r24[5] = $r30;

        $r31 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener beginListener>;

        $r24[6] = $r31;

        $r32 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener endListener>;

        $r24[7] = $r32;

        $r33 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener repeatListener>;

        $r24[8] = $r33;

        $r34 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener focusinListener>;

        $r24[9] = $r34;

        $r35 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener focusoutListener>;

        $r24[10] = $r35;

        $r36 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener activateListener>;

        $r24[11] = $r36;

        $r37 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener clickListener>;

        $r24[12] = $r37;

        $r38 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mousedownListener>;

        $r24[13] = $r38;

        $r39 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseupListener>;

        $r24[14] = $r39;

        $r40 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseoverListener>;

        $r24[15] = $r40;

        $r41 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseoutListener>;

        $r24[16] = $r41;

        $r42 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mousemoveListener>;

        $r24[17] = $r42;

        $r43 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keypressListener>;

        $r24[18] = $r43;

        $r44 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keydownListener>;

        $r24[19] = $r44;

        $r45 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keyupListener>;

        $r24[20] = $r45;

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener[] listeners> = $r24;

        $r46 = new java.util.HashMap;

        $r47 = <org.apache.batik.bridge.ScriptingEnvironment: java.lang.String[] SVG_EVENT_ATTRS>;

        $i0 = lengthof $r47;

        specialinvoke $r46.<java.util.HashMap: void <init>(int)>($i0);

        r0.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Map attrToDOMEvent> = $r46;

        $r48 = new java.util.HashMap;

        $r49 = <org.apache.batik.bridge.ScriptingEnvironment: java.lang.String[] SVG_EVENT_ATTRS>;

        $i1 = lengthof $r49;

        specialinvoke $r48.<java.util.HashMap: void <init>(int)>($i1);

        r0.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Map attrToListener> = $r48;

        i3 = 0;

        goto label2;

     label1:
        $r55 = r0.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Map attrToDOMEvent>;

        $r51 = <org.apache.batik.bridge.ScriptingEnvironment: java.lang.String[] SVG_EVENT_ATTRS>;

        $r54 = $r51[i3];

        $r52 = <org.apache.batik.bridge.ScriptingEnvironment: java.lang.String[] SVG_DOM_EVENT>;

        $r53 = $r52[i3];

        interfaceinvoke $r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, $r53);

        $r60 = r0.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Map attrToListener>;

        $r56 = <org.apache.batik.bridge.ScriptingEnvironment: java.lang.String[] SVG_EVENT_ATTRS>;

        $r59 = $r56[i3];

        $r57 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener[] listeners>;

        $r58 = $r57[i3];

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r59, $r58);

        i3 = i3 + 1;

     label2:
        $r50 = <org.apache.batik.bridge.ScriptingEnvironment: java.lang.String[] SVG_EVENT_ATTRS>;

        $i2 = lengthof $r50;

        if i3 < $i2 goto label1;

        $r61 = virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UpdateManager getUpdateManager()>();

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.apache.batik.bridge.UpdateManager updateManager> = $r61;

        $r62 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.apache.batik.bridge.UpdateManager updateManager>;

        $r63 = virtualinvoke $r62.<org.apache.batik.bridge.UpdateManager: org.apache.batik.util.RunnableQueue getUpdateRunnableQueue()>();

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.apache.batik.util.RunnableQueue updateRunnableQueue> = $r63;

        $r64 = r0.<org.apache.batik.bridge.BaseScriptingEnvironment: org.w3c.dom.Document document>;

        $r65 = interfaceinvoke $r64.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        virtualinvoke r0.<org.apache.batik.bridge.ScriptingEnvironment: void addScriptingListeners(org.w3c.dom.Node)>($r65);

        virtualinvoke r0.<org.apache.batik.bridge.ScriptingEnvironment: void addDocumentListeners()>();

        return;
    }

    protected void addDocumentListeners()
    {
        org.apache.batik.bridge.ScriptingEnvironment r0;
        org.apache.batik.bridge.ScriptingEnvironment$DOMNodeInsertedListener $r1;
        org.apache.batik.bridge.ScriptingEnvironment$DOMAttrModifiedListener $r3;
        org.apache.batik.dom.events.NodeEventTarget r5;
        org.apache.batik.bridge.ScriptingEnvironment$DOMNodeRemovedListener $r2;
        org.w3c.dom.events.EventListener $r6, $r7, $r8;
        org.w3c.dom.Document $r4;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        $r1 = new org.apache.batik.bridge.ScriptingEnvironment$DOMNodeInsertedListener;

        specialinvoke $r1.<org.apache.batik.bridge.ScriptingEnvironment$DOMNodeInsertedListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment)>(r0);

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener domNodeInsertedListener> = $r1;

        $r2 = new org.apache.batik.bridge.ScriptingEnvironment$DOMNodeRemovedListener;

        specialinvoke $r2.<org.apache.batik.bridge.ScriptingEnvironment$DOMNodeRemovedListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment)>(r0);

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener domNodeRemovedListener> = $r2;

        $r3 = new org.apache.batik.bridge.ScriptingEnvironment$DOMAttrModifiedListener;

        specialinvoke $r3.<org.apache.batik.bridge.ScriptingEnvironment$DOMAttrModifiedListener: void <init>(org.apache.batik.bridge.ScriptingEnvironment)>(r0);

        r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener domAttrModifiedListener> = $r3;

        $r4 = r0.<org.apache.batik.bridge.BaseScriptingEnvironment: org.w3c.dom.Document document>;

        r5 = (org.apache.batik.dom.events.NodeEventTarget) $r4;

        $r6 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener domNodeInsertedListener>;

        interfaceinvoke r5.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMNodeInserted", $r6, 0, null);

        $r7 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener domNodeRemovedListener>;

        interfaceinvoke r5.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r7, 0, null);

        $r8 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener domAttrModifiedListener>;

        interfaceinvoke r5.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMAttrModified", $r8, 0, null);

        return;
    }

    protected void removeDocumentListeners()
    {
        org.apache.batik.bridge.ScriptingEnvironment r0;
        org.w3c.dom.events.EventListener $r3, $r4, $r5;
        org.w3c.dom.Document $r1;
        org.apache.batik.dom.events.NodeEventTarget r2;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        $r1 = r0.<org.apache.batik.bridge.BaseScriptingEnvironment: org.w3c.dom.Document document>;

        r2 = (org.apache.batik.dom.events.NodeEventTarget) $r1;

        $r3 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener domNodeInsertedListener>;

        interfaceinvoke r2.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeInserted", $r3, 0);

        $r4 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener domNodeRemovedListener>;

        interfaceinvoke r2.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r4, 0);

        $r5 = r0.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener domAttrModifiedListener>;

        interfaceinvoke r2.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMAttrModified", $r5, 0);

        return;
    }

    public org.apache.batik.script.Window createWindow(org.apache.batik.script.Interpreter, java.lang.String)
    {
        org.apache.batik.bridge.ScriptingEnvironment r1;
        org.apache.batik.script.Interpreter r2;
        org.apache.batik.bridge.ScriptingEnvironment$Window $r0;
        java.lang.String r3;

        r1 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        r2 := @parameter0: org.apache.batik.script.Interpreter;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.apache.batik.bridge.ScriptingEnvironment$Window;

        specialinvoke $r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: void <init>(org.apache.batik.bridge.ScriptingEnvironment,org.apache.batik.script.Interpreter,java.lang.String)>(r1, r2, r3);

        return $r0;
    }

    public void runEventHandler(java.lang.String, org.w3c.dom.events.Event, java.lang.String, java.lang.String)
    {
        org.apache.batik.bridge.ScriptingEnvironment r0;
        org.apache.batik.script.Interpreter $r2;
        java.io.IOException $r11;
        org.apache.batik.script.InterpreterException $r10;
        org.apache.batik.util.ParsedURL $r3;
        java.io.StringReader $r5;
        org.w3c.dom.events.Event r4;
        org.apache.batik.script.ScriptEventWrapper $r8;
        java.lang.SecurityException $r9;
        java.lang.Object r12;
        java.lang.String r1, r6, r7;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        r6 := @parameter0: java.lang.String;

        r4 := @parameter1: org.w3c.dom.events.Event;

        r1 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.script.Interpreter getInterpreter(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.util.ParsedURL docPURL>;

        virtualinvoke r0.<org.apache.batik.bridge.BaseScriptingEnvironment: void checkCompatibleScriptURL(java.lang.String,org.apache.batik.util.ParsedURL)>(r1, $r3);

        $z0 = r4 instanceof org.apache.batik.script.ScriptEventWrapper;

        if $z0 == 0 goto label2;

        $r8 = (org.apache.batik.script.ScriptEventWrapper) r4;

        r12 = interfaceinvoke $r8.<org.apache.batik.script.ScriptEventWrapper: java.lang.Object getEventObject()>();

        goto label3;

     label2:
        r12 = r4;

     label3:
        interfaceinvoke $r2.<org.apache.batik.script.Interpreter: void bindObject(java.lang.String,java.lang.Object)>("event", r12);

        interfaceinvoke $r2.<org.apache.batik.script.Interpreter: void bindObject(java.lang.String,java.lang.Object)>("evt", r12);

        $r5 = new java.io.StringReader;

        specialinvoke $r5.<java.io.StringReader: void <init>(java.lang.String)>(r6);

        interfaceinvoke $r2.<org.apache.batik.script.Interpreter: java.lang.Object evaluate(java.io.Reader,java.lang.String)>($r5, r7);

     label4:
        goto label8;

     label5:
        $r11 := @caughtexception;

        goto label8;

     label6:
        $r10 := @caughtexception;

        virtualinvoke r0.<org.apache.batik.bridge.BaseScriptingEnvironment: void handleInterpreterException(org.apache.batik.script.InterpreterException)>($r10);

        goto label8;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r0.<org.apache.batik.bridge.BaseScriptingEnvironment: void handleSecurityException(java.lang.SecurityException)>($r9);

     label8:
        return;

        catch java.io.IOException from label1 to label4 with label5;
        catch org.apache.batik.script.InterpreterException from label1 to label4 with label6;
        catch java.lang.SecurityException from label1 to label4 with label7;
    }

    public void interrupt()
    {
        org.apache.batik.bridge.ScriptingEnvironment r0;
        org.w3c.dom.Element $r3;
        org.w3c.dom.Document $r2;
        java.util.Timer $r1;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        $r1 = r0.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Timer timer>;

        virtualinvoke $r1.<java.util.Timer: void cancel()>();

        $r2 = r0.<org.apache.batik.bridge.BaseScriptingEnvironment: org.w3c.dom.Document document>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        virtualinvoke r0.<org.apache.batik.bridge.ScriptingEnvironment: void removeScriptingListeners(org.w3c.dom.Node)>($r3);

        virtualinvoke r0.<org.apache.batik.bridge.ScriptingEnvironment: void removeDocumentListeners()>();

        return;
    }

    public void addScriptingListeners(org.w3c.dom.Node)
    {
        short $s0;
        org.apache.batik.bridge.ScriptingEnvironment r1;
        org.w3c.dom.Element $r2;
        org.w3c.dom.Node r0, r3;

        r1 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        r0 := @parameter0: org.w3c.dom.Node;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label1;

        $r2 = (org.w3c.dom.Element) r0;

        virtualinvoke r1.<org.apache.batik.bridge.ScriptingEnvironment: void addScriptingListenersOn(org.w3c.dom.Element)>($r2);

     label1:
        r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label3;

     label2:
        virtualinvoke r1.<org.apache.batik.bridge.ScriptingEnvironment: void addScriptingListeners(org.w3c.dom.Node)>(r3);

        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r3 != null goto label2;

        return;
    }

    protected void addScriptingListenersOn(org.w3c.dom.Element)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        org.apache.batik.bridge.ScriptingEnvironment r4;
        java.lang.String $r2, $r3, $r17, $r18, $r19;
        org.apache.batik.dom.events.NodeEventTarget r1;
        org.w3c.dom.Element r0;
        org.w3c.dom.events.EventListener $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        r4 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 = (org.apache.batik.dom.events.NodeEventTarget) r0;

        $r2 = "http://www.w3.org/2000/svg";

        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label11;

        $r17 = "svg";

        $r18 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z12 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z12 == 0 goto label06;

        $z18 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onabort");

        if $z18 == 0 goto label01;

        $r28 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgAbortListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "SVGAbort", $r28, 0, null);

     label01:
        $z19 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onerror");

        if $z19 == 0 goto label02;

        $r27 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgErrorListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "SVGError", $r27, 0, null);

     label02:
        $z20 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onresize");

        if $z20 == 0 goto label03;

        $r26 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgResizeListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "SVGResize", $r26, 0, null);

     label03:
        $z21 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onscroll");

        if $z21 == 0 goto label04;

        $r25 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgScrollListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "SVGScroll", $r25, 0, null);

     label04:
        $z22 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onunload");

        if $z22 == 0 goto label05;

        $r24 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgUnloadListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "SVGUnload", $r24, 0, null);

     label05:
        $z23 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onzoom");

        if $z23 == 0 goto label11;

        $r23 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgZoomListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "SVGZoom", $r23, 0, null);

        goto label11;

     label06:
        $r19 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z13 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z13 != 0 goto label07;

        $z17 = virtualinvoke $r19.<java.lang.String: boolean startsWith(java.lang.String)>("animate");

        if $z17 == 0 goto label11;

     label07:
        $z14 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onbegin");

        if $z14 == 0 goto label08;

        $r22 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener beginListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "beginEvent", $r22, 0, null);

     label08:
        $z15 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onend");

        if $z15 == 0 goto label09;

        $r21 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener endListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "endEvent", $r21, 0, null);

     label09:
        $z16 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onrepeat");

        if $z16 == 0 goto label10;

        $r20 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener repeatListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "repeatEvent", $r20, 0, null);

     label10:
        return;

     label11:
        $z24 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onfocusin");

        if $z24 == 0 goto label12;

        $r16 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener focusinListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMFocusIn", $r16, 0, null);

     label12:
        $z1 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onfocusout");

        if $z1 == 0 goto label13;

        $r15 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener focusoutListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMFocusOut", $r15, 0, null);

     label13:
        $z2 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onactivate");

        if $z2 == 0 goto label14;

        $r14 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener activateListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMActivate", $r14, 0, null);

     label14:
        $z3 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onclick");

        if $z3 == 0 goto label15;

        $r13 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener clickListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "click", $r13, 0, null);

     label15:
        $z4 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onmousedown");

        if $z4 == 0 goto label16;

        $r12 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mousedownListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "mousedown", $r12, 0, null);

     label16:
        $z5 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onmouseup");

        if $z5 == 0 goto label17;

        $r11 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseupListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "mouseup", $r11, 0, null);

     label17:
        $z6 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onmouseover");

        if $z6 == 0 goto label18;

        $r10 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseoverListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "mouseover", $r10, 0, null);

     label18:
        $z7 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onmouseout");

        if $z7 == 0 goto label19;

        $r9 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseoutListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "mouseout", $r9, 0, null);

     label19:
        $z8 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onmousemove");

        if $z8 == 0 goto label20;

        $r8 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mousemoveListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "mousemove", $r8, 0, null);

     label20:
        $z9 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onkeypress");

        if $z9 == 0 goto label21;

        $r7 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keypressListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "keypress", $r7, 0, null);

     label21:
        $z10 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onkeydown");

        if $z10 == 0 goto label22;

        $r6 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keydownListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "keydown", $r6, 0, null);

     label22:
        $z11 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, "onkeyup");

        if $z11 == 0 goto label23;

        $r5 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keyupListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "keyup", $r5, 0, null);

     label23:
        return;
    }

    protected void removeScriptingListeners(org.w3c.dom.Node)
    {
        short $s0;
        org.apache.batik.bridge.ScriptingEnvironment r1;
        org.w3c.dom.Element $r2;
        org.w3c.dom.Node r0, r3;

        r1 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        r0 := @parameter0: org.w3c.dom.Node;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label1;

        $r2 = (org.w3c.dom.Element) r0;

        virtualinvoke r1.<org.apache.batik.bridge.ScriptingEnvironment: void removeScriptingListenersOn(org.w3c.dom.Element)>($r2);

     label1:
        r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label3;

     label2:
        virtualinvoke r1.<org.apache.batik.bridge.ScriptingEnvironment: void removeScriptingListeners(org.w3c.dom.Node)>(r3);

        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r3 != null goto label2;

        return;
    }

    protected void removeScriptingListenersOn(org.w3c.dom.Element)
    {
        boolean $z0, $z1, $z2, $z3;
        org.apache.batik.bridge.ScriptingEnvironment r4;
        java.lang.String $r2, $r3, $r5, $r6, $r7;
        org.apache.batik.dom.events.NodeEventTarget r1;
        org.w3c.dom.Element r0;
        org.w3c.dom.events.EventListener $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        r4 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 = (org.apache.batik.dom.events.NodeEventTarget) r0;

        $r2 = "http://www.w3.org/2000/svg";

        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r5 = "svg";

        $r6 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label1;

        $r11 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgAbortListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "SVGAbort", $r11, 0);

        $r12 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgErrorListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "SVGError", $r12, 0);

        $r13 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgResizeListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "SVGResize", $r13, 0);

        $r14 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgScrollListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "SVGScroll", $r14, 0);

        $r15 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgUnloadListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "SVGUnload", $r15, 0);

        $r16 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener svgZoomListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "SVGZoom", $r16, 0);

        goto label3;

     label1:
        $r7 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("animate");

        if $z3 == 0 goto label3;

     label2:
        $r8 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener beginListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "beginEvent", $r8, 0);

        $r9 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener endListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "endEvent", $r9, 0);

        $r10 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener repeatListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "repeatEvent", $r10, 0);

        return;

     label3:
        $r17 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener focusinListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMFocusIn", $r17, 0);

        $r18 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener focusoutListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMFocusOut", $r18, 0);

        $r19 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener activateListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMActivate", $r19, 0);

        $r20 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener clickListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "click", $r20, 0);

        $r21 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mousedownListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "mousedown", $r21, 0);

        $r22 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseupListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "mouseup", $r22, 0);

        $r23 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseoverListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "mouseover", $r23, 0);

        $r24 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mouseoutListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "mouseout", $r24, 0);

        $r25 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener mousemoveListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "mousemove", $r25, 0);

        $r26 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keypressListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "keypress", $r26, 0);

        $r27 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keydownListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "keydown", $r27, 0);

        $r28 = r4.<org.apache.batik.bridge.ScriptingEnvironment: org.w3c.dom.events.EventListener keyupListener>;

        interfaceinvoke r1.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "keyup", $r28, 0);

        return;
    }

    protected void updateScriptingListeners(org.w3c.dom.Element, java.lang.String)
    {
        org.apache.batik.bridge.ScriptingEnvironment r0;
        org.apache.batik.dom.events.NodeEventTarget r9;
        org.w3c.dom.Element r8;
        org.w3c.dom.events.EventListener r7;
        java.util.Map $r2, $r5;
        java.lang.Object $r3, $r6;
        java.lang.String r1, r4;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment;

        r8 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Map attrToDOMEvent>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        return;

     label1:
        $r5 = r0.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Map attrToListener>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (org.w3c.dom.events.EventListener) $r6;

        r9 = (org.apache.batik.dom.events.NodeEventTarget) r8;

        $z0 = interfaceinvoke r8.<org.w3c.dom.Element: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, r1);

        if $z0 == 0 goto label2;

        interfaceinvoke r9.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", r4, r7, 0, null);

        goto label3;

     label2:
        interfaceinvoke r9.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", r4, r7, 0);

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;

        $r0 = newarray (java.lang.String)[21];

        $r0[0] = "onabort";

        $r0[1] = "onerror";

        $r0[2] = "onresize";

        $r0[3] = "onscroll";

        $r0[4] = "onunload";

        $r0[5] = "onzoom";

        $r0[6] = "onbegin";

        $r0[7] = "onend";

        $r0[8] = "onrepeat";

        $r0[9] = "onfocusin";

        $r0[10] = "onfocusout";

        $r0[11] = "onactivate";

        $r0[12] = "onclick";

        $r0[13] = "onmousedown";

        $r0[14] = "onmouseup";

        $r0[15] = "onmouseover";

        $r0[16] = "onmouseout";

        $r0[17] = "onmousemove";

        $r0[18] = "onkeypress";

        $r0[19] = "onkeydown";

        $r0[20] = "onkeyup";

        <org.apache.batik.bridge.ScriptingEnvironment: java.lang.String[] SVG_EVENT_ATTRS> = $r0;

        $r1 = newarray (java.lang.String)[21];

        $r1[0] = "SVGAbort";

        $r1[1] = "SVGError";

        $r1[2] = "SVGResize";

        $r1[3] = "SVGScroll";

        $r1[4] = "SVGUnload";

        $r1[5] = "SVGZoom";

        $r1[6] = "beginEvent";

        $r1[7] = "endEvent";

        $r1[8] = "repeatEvent";

        $r1[9] = "DOMFocusIn";

        $r1[10] = "DOMFocusOut";

        $r1[11] = "DOMActivate";

        $r1[12] = "click";

        $r1[13] = "mousedown";

        $r1[14] = "mouseup";

        $r1[15] = "mouseover";

        $r1[16] = "mouseout";

        $r1[17] = "mousemove";

        $r1[18] = "keypress";

        $r1[19] = "keydown";

        $r1[20] = "keyup";

        <org.apache.batik.bridge.ScriptingEnvironment: java.lang.String[] SVG_DOM_EVENT> = $r1;

        return;
    }
}
