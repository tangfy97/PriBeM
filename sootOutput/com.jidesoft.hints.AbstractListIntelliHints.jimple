public abstract class com.jidesoft.hints.AbstractListIntelliHints extends com.jidesoft.hints.AbstractIntelliHints
{
    private javax.swing.JList _list;
    protected javax.swing.KeyStroke[] _keyStrokes;
    private com.jidesoft.swing.JideScrollPane _scroll;

    public void <init>(javax.swing.text.JTextComponent)
    {
        com.jidesoft.hints.AbstractListIntelliHints r0;
        javax.swing.text.JTextComponent r1;

        r0 := @this: com.jidesoft.hints.AbstractListIntelliHints;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        specialinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: void <init>(javax.swing.text.JTextComponent)>(r1);

        return;
    }

    public javax.swing.JComponent createHintsComponent()
    {
        com.jidesoft.hints.AbstractListIntelliHints r2;
        javax.swing.border.Border $r11;
        java.awt.BorderLayout $r1;
        com.jidesoft.swing.JideScrollPane $r6, $r9, $r10, $r12, $r14, $r16;
        javax.swing.JList $r3, $r5, $r7, $r8;
        javax.swing.JScrollBar $r13, $r15;
        com.jidesoft.swing.Sticky $r4;
        javax.swing.JPanel $r0;

        r2 := @this: com.jidesoft.hints.AbstractListIntelliHints;

        $r0 = new javax.swing.JPanel;

        $r1 = new java.awt.BorderLayout;

        specialinvoke $r1.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $r0.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r1);

        $r3 = virtualinvoke r2.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList createList()>();

        r2.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList _list> = $r3;

        $r4 = new com.jidesoft.swing.Sticky;

        $r5 = r2.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList _list>;

        specialinvoke $r4.<com.jidesoft.swing.Sticky: void <init>(javax.swing.JList)>($r5);

        $r6 = new com.jidesoft.swing.JideScrollPane;

        $r7 = virtualinvoke r2.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        specialinvoke $r6.<com.jidesoft.swing.JideScrollPane: void <init>(java.awt.Component)>($r7);

        r2.<com.jidesoft.hints.AbstractListIntelliHints: com.jidesoft.swing.JideScrollPane _scroll> = $r6;

        $r8 = virtualinvoke r2.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        virtualinvoke $r8.<javax.swing.JList: void setFocusable(boolean)>(0);

        $r9 = r2.<com.jidesoft.hints.AbstractListIntelliHints: com.jidesoft.swing.JideScrollPane _scroll>;

        virtualinvoke $r9.<com.jidesoft.swing.JideScrollPane: void setHorizontalScrollBarPolicy(int)>(31);

        $r10 = r2.<com.jidesoft.hints.AbstractListIntelliHints: com.jidesoft.swing.JideScrollPane _scroll>;

        $r11 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        virtualinvoke $r10.<com.jidesoft.swing.JideScrollPane: void setBorder(javax.swing.border.Border)>($r11);

        $r12 = r2.<com.jidesoft.hints.AbstractListIntelliHints: com.jidesoft.swing.JideScrollPane _scroll>;

        $r13 = virtualinvoke $r12.<com.jidesoft.swing.JideScrollPane: javax.swing.JScrollBar getVerticalScrollBar()>();

        virtualinvoke $r13.<javax.swing.JScrollBar: void setFocusable(boolean)>(0);

        $r14 = r2.<com.jidesoft.hints.AbstractListIntelliHints: com.jidesoft.swing.JideScrollPane _scroll>;

        $r15 = virtualinvoke $r14.<com.jidesoft.swing.JideScrollPane: javax.swing.JScrollBar getHorizontalScrollBar()>();

        virtualinvoke $r15.<javax.swing.JScrollBar: void setFocusable(boolean)>(0);

        $r16 = r2.<com.jidesoft.hints.AbstractListIntelliHints: com.jidesoft.swing.JideScrollPane _scroll>;

        virtualinvoke $r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r16, "Center");

        return $r0;
    }

    protected javax.swing.JList createList()
    {
        com.jidesoft.hints.AbstractListIntelliHints$1 $r0;
        com.jidesoft.hints.AbstractListIntelliHints r1;

        r1 := @this: com.jidesoft.hints.AbstractListIntelliHints;

        $r0 = new com.jidesoft.hints.AbstractListIntelliHints$1;

        specialinvoke $r0.<com.jidesoft.hints.AbstractListIntelliHints$1: void <init>(com.jidesoft.hints.AbstractListIntelliHints)>(r1);

        return $r0;
    }

    protected javax.swing.JList getList()
    {
        javax.swing.JList $r1;
        com.jidesoft.hints.AbstractListIntelliHints r0;

        r0 := @this: com.jidesoft.hints.AbstractListIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList _list>;

        return $r1;
    }

    protected void setListData(java.lang.Object[])
    {
        java.lang.Object[] r3;
        javax.swing.JList $r1, $r2, $r6;
        com.jidesoft.hints.AbstractListIntelliHints r0;
        com.jidesoft.swing.JideScrollPane $r4, $r5;

        r0 := @this: com.jidesoft.hints.AbstractListIntelliHints;

        r3 := @parameter0: java.lang.Object[];

        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        if $r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: void resetSelection()>();

        $r2 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        virtualinvoke $r2.<javax.swing.JList: void setListData(java.lang.Object[])>(r3);

        $r4 = r0.<com.jidesoft.hints.AbstractListIntelliHints: com.jidesoft.swing.JideScrollPane _scroll>;

        if $r4 == null goto label2;

        $r5 = r0.<com.jidesoft.hints.AbstractListIntelliHints: com.jidesoft.swing.JideScrollPane _scroll>;

        $r6 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        virtualinvoke $r5.<com.jidesoft.swing.JideScrollPane: void setViewportView(java.awt.Component)>($r6);

     label2:
        return;
    }

    protected void setListData(java.util.Vector)
    {
        java.util.Vector r3;
        javax.swing.JList $r1, $r2, $r6;
        com.jidesoft.hints.AbstractListIntelliHints r0;
        com.jidesoft.swing.JideScrollPane $r4, $r5;

        r0 := @this: com.jidesoft.hints.AbstractListIntelliHints;

        r3 := @parameter0: java.util.Vector;

        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        if $r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: void resetSelection()>();

        $r2 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        virtualinvoke $r2.<javax.swing.JList: void setListData(java.util.Vector)>(r3);

        $r4 = r0.<com.jidesoft.hints.AbstractListIntelliHints: com.jidesoft.swing.JideScrollPane _scroll>;

        if $r4 == null goto label2;

        $r5 = r0.<com.jidesoft.hints.AbstractListIntelliHints: com.jidesoft.swing.JideScrollPane _scroll>;

        $r6 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        virtualinvoke $r5.<com.jidesoft.swing.JideScrollPane: void setViewportView(java.awt.Component)>($r6);

     label2:
        return;
    }

    private void resetSelection()
    {
        javax.swing.ListSelectionModel $r3, $r5, $r7;
        javax.swing.JList $r1, $r2, $r4, $r6;
        com.jidesoft.hints.AbstractListIntelliHints r0;
        int $i1, $i3;

        r0 := @this: com.jidesoft.hints.AbstractListIntelliHints;

        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        $r3 = virtualinvoke $r2.<javax.swing.JList: javax.swing.ListSelectionModel getSelectionModel()>();

        $i1 = (int) -1;

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void setAnchorSelectionIndex(int)>($i1);

        $r4 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        $r5 = virtualinvoke $r4.<javax.swing.JList: javax.swing.ListSelectionModel getSelectionModel()>();

        $i3 = (int) -1;

        interfaceinvoke $r5.<javax.swing.ListSelectionModel: void setLeadSelectionIndex(int)>($i3);

        $r6 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        $r7 = virtualinvoke $r6.<javax.swing.JList: javax.swing.ListSelectionModel getSelectionModel()>();

        interfaceinvoke $r7.<javax.swing.ListSelectionModel: void clearSelection()>();

        return;
    }

    public java.lang.Object getSelectedHint()
    {
        javax.swing.JList $r1, $r2;
        com.jidesoft.hints.AbstractListIntelliHints r0;
        java.lang.Object $r3;

        r0 := @this: com.jidesoft.hints.AbstractListIntelliHints;

        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        $r3 = virtualinvoke $r2.<javax.swing.JList: java.lang.Object getSelectedValue()>();

     label2:
        return $r3;
    }

    public javax.swing.JComponent getDelegateComponent()
    {
        javax.swing.JList $r1;
        com.jidesoft.hints.AbstractListIntelliHints r0;

        r0 := @this: com.jidesoft.hints.AbstractListIntelliHints;

        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.JList getList()>();

        return $r1;
    }

    public javax.swing.KeyStroke[] getDelegateKeyStrokes()
    {
        com.jidesoft.hints.AbstractListIntelliHints r0;
        javax.swing.KeyStroke[] $r1, $r2, $r3, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        javax.swing.KeyStroke $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;

        r0 := @this: com.jidesoft.hints.AbstractListIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes>;

        if $r1 != null goto label1;

        $r3 = newarray (javax.swing.KeyStroke)[8];

        r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes> = $r3;

        $r4 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes>;

        $r5 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(40, 0);

        $r4[0] = $r5;

        $r6 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes>;

        $r7 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(38, 0);

        $r6[1] = $r7;

        $r8 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes>;

        $r9 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(34, 0);

        $r8[2] = $r9;

        $r10 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes>;

        $r11 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(33, 0);

        $r10[3] = $r11;

        $r12 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes>;

        $r13 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(34, 128);

        $r12[4] = $r13;

        $r14 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes>;

        $r15 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(33, 128);

        $r14[5] = $r15;

        $r16 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes>;

        $r17 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(36, 128);

        $r16[6] = $r17;

        $r18 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes>;

        $r19 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(35, 128);

        $r18[7] = $r19;

     label1:
        $r2 = r0.<com.jidesoft.hints.AbstractListIntelliHints: javax.swing.KeyStroke[] _keyStrokes>;

        return $r2;
    }
}
