public final class com.google.gxp.com.google.common.collect.ObjectArrays extends java.lang.Object
{
    public static final java.lang.Object[] EMPTY_ARRAY;

    private void <init>()
    {
        com.google.gxp.com.google.common.collect.ObjectArrays r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ObjectArrays;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object[] newArray(java.lang.Class, int)
    {
        java.lang.Object[] $r2, $r3;
        int i0;
        java.lang.Class r0;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, i0);

        $r2 = (java.lang.Object[]) $r1;

        $r3 = (java.lang.Object[]) $r2;

        return $r3;
    }

    public static java.lang.Object[] newArray(java.lang.Object[], int)
    {
        java.lang.Object[] r0, $r4, r5;
        int i0;
        java.lang.Class $r1, $r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, i0);

        $r4 = (java.lang.Object[]) $r3;

        r5 = (java.lang.Object[]) $r4;

        return r5;
    }

    public static java.lang.Object[] emptyArray(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] r0, $r1;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r1 = r0;

        goto label2;

     label1:
        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>(r0, 0);

     label2:
        return $r1;
    }

    public static java.lang.Object[] concat(java.lang.Object[], java.lang.Object[], java.lang.Class)
    {
        java.lang.Object[] r1, r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Class r0;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.lang.Object[];

        r0 := @parameter2: java.lang.Class;

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        $i2 = $i1 + $i0;

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Class,int)>(r0, $i2);

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i3);

        $i5 = lengthof r1;

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r3, $i5, $i4);

        return $r3;
    }

    static java.lang.Object[] toArrayImpl(java.util.Collection, java.lang.Object[])
    {
        java.lang.Object[] r1;
        java.util.Collection r0;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.lang.Object[];

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $i1 = lengthof r1;

        if $i1 >= $i0 goto label1;

        r1 = staticinvoke <com.google.gxp.com.google.common.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>(r1, $i0);

     label1:
        staticinvoke <com.google.gxp.com.google.common.collect.ObjectArrays: java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[])>(r0, r1);

        $i2 = lengthof r1;

        if $i2 <= $i0 goto label2;

        r1[$i0] = null;

     label2:
        return r1;
    }

    static java.lang.Object[] toArrayImpl(java.util.Collection)
    {
        java.lang.Object[] $r1, $r2;
        java.util.Collection r0;
        int $i0;

        r0 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $r1 = newarray (java.lang.Object)[$i0];

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ObjectArrays: java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[])>(r0, $r1);

        return $r2;
    }

    private static java.lang.Object[] fillArray(java.lang.Iterable, java.lang.Object[])
    {
        java.lang.Object[] r2;
        java.util.Iterator $r1;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.Iterable r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.lang.Object[];

        i1 = 0;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $i0 = i1;

        i1 = i1 + 1;

        r2[$i0] = $r3;

        goto label1;

     label2:
        return r2;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        $r0 = newarray (java.lang.Object)[0];

        <com.google.gxp.com.google.common.collect.ObjectArrays: java.lang.Object[] EMPTY_ARRAY> = $r0;

        return;
    }
}
