public class org.apache.velocity.runtime.parser.node.ASTNENode extends org.apache.velocity.runtime.parser.node.SimpleNode
{

    public void <init>(int)
    {
        int i0;
        org.apache.velocity.runtime.parser.node.ASTNENode r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTNENode;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(int)>(i0);

        return;
    }

    public void <init>(org.apache.velocity.runtime.parser.Parser, int)
    {
        int i0;
        org.apache.velocity.runtime.parser.node.ASTNENode r0;
        org.apache.velocity.runtime.parser.Parser r1;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTNENode;

        r1 := @parameter0: org.apache.velocity.runtime.parser.Parser;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(org.apache.velocity.runtime.parser.Parser,int)>(r1, i0);

        return;
    }

    public java.lang.Object jjtAccept(org.apache.velocity.runtime.parser.node.ParserVisitor, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTNENode r1;
        org.apache.velocity.runtime.parser.node.ParserVisitor r0;
        java.lang.Object r2, $r3;

        r1 := @this: org.apache.velocity.runtime.parser.node.ASTNENode;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ParserVisitor;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r0.<org.apache.velocity.runtime.parser.node.ParserVisitor: java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTNENode,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public boolean evaluate(org.apache.velocity.context.InternalContextAdapter) throws org.apache.velocity.exception.MethodInvocationException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.velocity.runtime.parser.node.ASTNENode r0;
        org.apache.velocity.util.TemplateNumber $r39, $r40;
        java.lang.StringBuffer $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r20, $r22, $r24, $r25, $r27, $r28, $r29, $r31;
        int $i0;
        java.lang.String $r11, $r16, $r18, $r23, $r26, $r30, $r32, $r43, r44, $r45, r46, $r47;
        org.apache.velocity.runtime.parser.node.Node $r1, $r4;
        java.lang.Number $r37, $r38;
        org.apache.velocity.context.InternalContextAdapter r2;
        org.apache.velocity.runtime.log.Log $r6, $r8, $r19, $r21;
        java.lang.Object $r3, $r5, r41, r42;
        java.lang.Class $r33, $r34, $r35, $r36;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTNENode;

        r2 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNENode: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(0);

        $r3 = interfaceinvoke $r1.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object value(org.apache.velocity.context.InternalContextAdapter)>(r2);

        r41 = $r3;

        $r4 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNENode: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(1);

        $r5 = interfaceinvoke $r4.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object value(org.apache.velocity.context.InternalContextAdapter)>(r2);

        r42 = $r5;

        $z0 = $r3 instanceof org.apache.velocity.util.TemplateNumber;

        if $z0 == 0 goto label01;

        $r40 = (org.apache.velocity.util.TemplateNumber) $r3;

        r41 = interfaceinvoke $r40.<org.apache.velocity.util.TemplateNumber: java.lang.Number getAsNumber()>();

     label01:
        $z1 = $r5 instanceof org.apache.velocity.util.TemplateNumber;

        if $z1 == 0 goto label02;

        $r39 = (org.apache.velocity.util.TemplateNumber) $r5;

        r42 = interfaceinvoke $r39.<org.apache.velocity.util.TemplateNumber: java.lang.Number getAsNumber()>();

     label02:
        $z2 = r41 instanceof java.lang.Number;

        if $z2 == 0 goto label05;

        $z9 = r42 instanceof java.lang.Number;

        if $z9 == 0 goto label05;

        $r38 = (java.lang.Number) r41;

        $r37 = (java.lang.Number) r42;

        $i0 = staticinvoke <org.apache.velocity.runtime.parser.node.MathUtils: int compare(java.lang.Number,java.lang.Number)>($r38, $r37);

        if $i0 == 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        return $z10;

     label05:
        if r41 == null goto label09;

        if r42 == null goto label09;

        $r33 = virtualinvoke r41.<java.lang.Object: java.lang.Class getClass()>();

        $r34 = virtualinvoke r42.<java.lang.Object: java.lang.Class getClass()>();

        $z6 = virtualinvoke $r33.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r34);

        if $z6 != 0 goto label06;

        $r35 = virtualinvoke r42.<java.lang.Object: java.lang.Class getClass()>();

        $r36 = virtualinvoke r41.<java.lang.Object: java.lang.Class getClass()>();

        $z8 = virtualinvoke $r35.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r36);

        if $z8 == 0 goto label09;

     label06:
        $z7 = virtualinvoke r41.<java.lang.Object: boolean equals(java.lang.Object)>(r42);

        if $z7 != 0 goto label07;

        $z11 = 1;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        return $z11;

     label09:
        if r41 != null goto label10;

        $r43 = null;

        goto label11;

     label10:
        $r43 = virtualinvoke r41.<java.lang.Object: java.lang.String toString()>();

     label11:
        r44 = $r43;

        if r42 != null goto label12;

        $r45 = null;

        goto label13;

     label12:
        $r45 = virtualinvoke r42.<java.lang.Object: java.lang.String toString()>();

     label13:
        r46 = $r45;

        if r44 != null goto label15;

        if $r45 != null goto label15;

        $r19 = r0.<org.apache.velocity.runtime.parser.node.ASTNENode: org.apache.velocity.runtime.log.Log log>;

        $z5 = virtualinvoke $r19.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z5 == 0 goto label14;

        $r21 = r0.<org.apache.velocity.runtime.parser.node.ASTNENode: org.apache.velocity.runtime.log.Log log>;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Both right (");

        $r23 = specialinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNENode: java.lang.String getLiteral(boolean)>(0);

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" and left ");

        $r26 = specialinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNENode: java.lang.String getLiteral(boolean)>(1);

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" sides of \'!=\' operation returned null.");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("If references, they may not be in the context.");

        $r30 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNENode: java.lang.String getLocation(org.apache.velocity.context.InternalContextAdapter)>(r2);

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r21.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r32);

     label14:
        return 0;

     label15:
        if r44 == null goto label16;

        if r46 != null goto label22;

     label16:
        $r6 = r0.<org.apache.velocity.runtime.parser.node.ASTNENode: org.apache.velocity.runtime.log.Log log>;

        $z3 = virtualinvoke $r6.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label21;

        $r8 = r0.<org.apache.velocity.runtime.parser.node.ASTNENode: org.apache.velocity.runtime.log.Log log>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        if r44 != null goto label17;

        $r47 = "Left";

        goto label18;

     label17:
        $r47 = "Right";

     label18:
        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" side (");

        if r44 != null goto label19;

        $z12 = 1;

        goto label20;

     label19:
        $z12 = 0;

     label20:
        $r11 = specialinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNENode: java.lang.String getLiteral(boolean)>($z12);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") of \'!=\' operation has null value. If it is a ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("reference, it may not be in the context or its ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("toString() returned null. ");

        $r16 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNENode: java.lang.String getLocation(org.apache.velocity.context.InternalContextAdapter)>(r2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r18);

     label21:
        return 1;

     label22:
        $z4 = virtualinvoke r44.<java.lang.Object: boolean equals(java.lang.Object)>(r46);

        if $z4 != 0 goto label23;

        $z13 = 1;

        goto label24;

     label23:
        $z13 = 0;

     label24:
        return $z13;
    }

    private java.lang.String getLiteral(boolean)
    {
        org.apache.velocity.runtime.parser.node.ASTNENode r0;
        byte $b0;
        java.lang.String $r2;
        org.apache.velocity.runtime.parser.node.Node $r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTNENode;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNENode: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>($b0);

        $r2 = interfaceinvoke $r1.<org.apache.velocity.runtime.parser.node.Node: java.lang.String literal()>();

        return $r2;
    }

    public java.lang.Object value(org.apache.velocity.context.InternalContextAdapter) throws org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.context.InternalContextAdapter r1;
        org.apache.velocity.runtime.parser.node.ASTNENode r0;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTNENode;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        $z0 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTNENode: boolean evaluate(org.apache.velocity.context.InternalContextAdapter)>(r1);

        if $z0 == 0 goto label1;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        return $r2;
    }
}
