public final class com.ctc.wstx.io.AsciiReader extends com.ctc.wstx.io.BaseReader
{
    boolean mXml11;
    int mCharCount;

    public void <init>(com.ctc.wstx.api.ReaderConfig, java.io.InputStream, byte[], int, int)
    {
        byte[] r3;
        int i0, i1;
        com.ctc.wstx.api.ReaderConfig r1;
        com.ctc.wstx.io.AsciiReader r0;
        java.io.InputStream r2;

        r0 := @this: com.ctc.wstx.io.AsciiReader;

        r1 := @parameter0: com.ctc.wstx.api.ReaderConfig;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<com.ctc.wstx.io.BaseReader: void <init>(com.ctc.wstx.api.ReaderConfig,java.io.InputStream,byte[],int,int)>(r1, r2, r3, i0, i1);

        r0.<com.ctc.wstx.io.AsciiReader: boolean mXml11> = 0;

        r0.<com.ctc.wstx.io.AsciiReader: int mCharCount> = 0;

        return;
    }

    public void setXmlCompliancy(int)
    {
        int i0;
        com.ctc.wstx.io.AsciiReader r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.io.AsciiReader;

        i0 := @parameter0: int;

        if i0 != 272 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.ctc.wstx.io.AsciiReader: boolean mXml11> = $z0;

        return;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4;
        com.ctc.wstx.io.AsciiReader r0;
        byte $b1;
        boolean $z0;
        int $i0, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, $i16, $i17, i18, i19, $i20, $i22, $i24, $i25, $i26, $i27;
        char c2;
        char[] r2;
        java.io.InputStream $r5;

        r0 := @this: com.ctc.wstx.io.AsciiReader;

        r2 := @parameter0: char[];

        i13 := @parameter1: int;

        i14 := @parameter2: int;

        $r1 = r0.<com.ctc.wstx.io.AsciiReader: byte[] mBuffer>;

        if $r1 != null goto label01;

        $i22 = (int) -1;

        return $i22;

     label01:
        if i13 < 0 goto label02;

        $i12 = i13 + i14;

        $i11 = lengthof r2;

        if $i12 <= $i11 goto label03;

     label02:
        virtualinvoke r0.<com.ctc.wstx.io.AsciiReader: void reportBounds(char[],int,int)>(r2, i13, i14);

     label03:
        $i15 = r0.<com.ctc.wstx.io.AsciiReader: int mLength>;

        $i16 = r0.<com.ctc.wstx.io.AsciiReader: int mPtr>;

        $i17 = $i15 - $i16;

        i18 = $i17;

        if $i17 > 0 goto label06;

        $r5 = r0.<com.ctc.wstx.io.AsciiReader: java.io.InputStream mIn>;

        $r4 = r0.<com.ctc.wstx.io.AsciiReader: byte[] mBuffer>;

        $i8 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r4);

        if $i8 > 0 goto label05;

        if $i8 != 0 goto label04;

        virtualinvoke r0.<com.ctc.wstx.io.AsciiReader: void reportStrangeStream()>();

     label04:
        virtualinvoke r0.<com.ctc.wstx.io.AsciiReader: void freeBuffers()>();

        $i24 = (int) -1;

        return $i24;

     label05:
        i18 = $i8;

        r0.<com.ctc.wstx.io.AsciiReader: int mLength> = $i8;

        $i9 = r0.<com.ctc.wstx.io.AsciiReader: int mCharCount>;

        $i10 = $i9 + $i8;

        r0.<com.ctc.wstx.io.AsciiReader: int mCharCount> = $i10;

        r0.<com.ctc.wstx.io.AsciiReader: int mPtr> = 0;

     label06:
        if i14 <= i18 goto label07;

        i14 = i18;

     label07:
        $i6 = r0.<com.ctc.wstx.io.AsciiReader: int mPtr>;

        i19 = $i6;

        $i7 = $i6 + i14;

     label08:
        if i19 >= $i7 goto label11;

        $r3 = r0.<com.ctc.wstx.io.AsciiReader: byte[] mBuffer>;

        $i0 = i19;

        i19 = i19 + 1;

        $b1 = $r3[$i0];

        c2 = (char) $b1;

        $i25 = (int) c2;

        if $i25 < 127 goto label10;

        $i26 = (int) c2;

        if $i26 <= 127 goto label09;

        specialinvoke r0.<com.ctc.wstx.io.AsciiReader: void reportInvalidAscii(char)>(c2);

        goto label10;

     label09:
        $z0 = r0.<com.ctc.wstx.io.AsciiReader: boolean mXml11>;

        if $z0 == 0 goto label10;

        $i4 = r0.<com.ctc.wstx.io.AsciiReader: int mCharCount>;

        $i3 = r0.<com.ctc.wstx.io.AsciiReader: int mPtr>;

        i5 = $i4 + $i3;

        $i27 = (int) c2;

        virtualinvoke r0.<com.ctc.wstx.io.AsciiReader: void reportInvalidXml11(int,int,int)>($i27, i5, i5);

     label10:
        $i20 = i13;

        i13 = i13 + 1;

        r2[$i20] = c2;

        goto label08;

     label11:
        r0.<com.ctc.wstx.io.AsciiReader: int mPtr> = $i7;

        return i14;
    }

    private void reportInvalidAscii(char) throws java.io.IOException
    {
        char c0;
        com.ctc.wstx.io.AsciiReader r5;
        java.io.CharConversionException $r10;
        java.lang.StringBuffer $r2, $r3, $r4, $r6, $r7, $r9;
        int $i1, $i2, $i3, $i4;
        java.lang.String $r8;

        r5 := @this: com.ctc.wstx.io.AsciiReader;

        c0 := @parameter0: char;

        $r10 = new java.io.CharConversionException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid ascii byte; value above 7-bit ascii range (");

        $i4 = (int) c0;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; at pos #");

        $i2 = r5.<com.ctc.wstx.io.AsciiReader: int mCharCount>;

        $i1 = r5.<com.ctc.wstx.io.AsciiReader: int mPtr>;

        $i3 = $i2 + $i1;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.io.CharConversionException: void <init>(java.lang.String)>($r8);

        throw $r10;
    }
}
