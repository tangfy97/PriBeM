public class org.eclipse.jdt.internal.compiler.ast.MethodDeclaration extends org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
{
    public org.eclipse.jdt.internal.compiler.ast.TypeReference returnType;
    public org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters;

    public void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)
    {
        org.eclipse.jdt.internal.compiler.CompilationResult r1;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.CompilationResult;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>(r1);

        return;
    }

    public void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r27;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r9, $r16, $r21, $r22, $r36, $r45;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r23;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r1, $r2, $r3, $r4, $r7, $r13, $r32, $r38, $r39, $r43, $r46;
        org.eclipse.jdt.internal.compiler.CompilationResult $r35;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r34;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r42;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r33;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r0;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r8, $r15;
        char[] $r28, $r29, $r30, $r31;
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r12, $r18, $r19;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r17, $r37;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r10;
        org.eclipse.jdt.internal.compiler.ast.Statement r20;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r11, $r24, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        org.eclipse.jdt.internal.compiler.ast.Argument $r26;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, i7, i8, i9;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r40, $r44;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r14;
        org.eclipse.jdt.internal.compiler.problem.AbortMethod $r41;
        org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext r6;
        org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        r33 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        r42 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r1 != null goto label03;

     label02:
        return;

     label03:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z1 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isUsed()>();

        if $z1 != 0 goto label05;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z6 = virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z6 != 0 goto label04;

        $r38 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i5 = $r38.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i6 = $i5 & 805306368;

        if $i6 != 0 goto label05;

        $r39 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r40 = $r39.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z8 = virtualinvoke $r40.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isLocalType()>();

        if $z8 == 0 goto label05;

     label04:
        $r34 = virtualinvoke r33.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r35 = $r34.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $z7 = $r35.<org.eclipse.jdt.internal.compiler.CompilationResult: boolean hasSyntaxError>;

        if $z7 != 0 goto label05;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r37 = virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unusedPrivateMethod(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r0);

     label05:
        $r43 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r44 = $r43.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z9 = virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isEnum()>();

        if $z9 == 0 goto label07;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: char[] selector>;

        $r28 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUES>;

        if $r29 == $r28 goto label06;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: char[] selector>;

        $r30 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUEOF>;

        if $r31 != $r30 goto label07;

     label06:
        return;

     label07:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z2 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isAbstract()>();

        if $z2 != 0 goto label08;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z3 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isNative()>();

        if $z3 == 0 goto label09;

     label08:
        return;

     label09:
        $r5 = new org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r10 = $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r8 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        specialinvoke $r5.<org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[],org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>(r6, r0, $r10, $r9, $r8);

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if $r11 == null goto label12;

        i7 = 0;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        i8 = lengthof $r24;

        goto label11;

     label10:
        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        $r26 = $r25[i7];

        $r27 = $r26.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        virtualinvoke r42.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r27);

        i7 = i7 + 1;

     label11:
        if i7 < i8 goto label10;

     label12:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        if $r12 == null goto label17;

        z10 = 0;

        i9 = 0;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        i4 = lengthof $r18;

        goto label16;

     label13:
        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        r20 = $r19[i9];

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $z5 = virtualinvoke r20.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean complainIfUnreachable(org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r42, $r21, z10);

        if $z5 != 0 goto label14;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        r42 = virtualinvoke r20.<org.eclipse.jdt.internal.compiler.ast.Statement: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r22, $r5, r42);

        goto label15;

     label14:
        z10 = 1;

     label15:
        i9 = i9 + 1;

     label16:
        if i9 < i4 goto label13;

     label17:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r23 = $r13.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r14 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        if $r23 == $r14 goto label18;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: boolean isAbstract()>();

        if $z4 == 0 goto label19;

     label18:
        $i0 = r42.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label20;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int bits>;

        $i3 = $i2 | 64;

        r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int bits> = $i3;

        goto label20;

     label19:
        $r15 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        if r42 == $r15 goto label20;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void shouldReturn(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r23, r0);

     label20:
        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext: void complainIfUnusedExceptionHandlers(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r0);

        $r45 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r46 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke $r45.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: void checkUnusedParameters(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r46);

     label21:
        goto label23;

     label22:
        $r41 := @caughtexception;

        r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: boolean ignoreFurtherInvestigation> = 1;

     label23:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortMethod from label01 to label02 with label22;
        catch org.eclipse.jdt.internal.compiler.problem.AbortMethod from label03 to label06 with label22;
        catch org.eclipse.jdt.internal.compiler.problem.AbortMethod from label07 to label08 with label22;
        catch org.eclipse.jdt.internal.compiler.problem.AbortMethod from label09 to label21 with label22;
    }

    public boolean isMethod()
    {
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        return 1;
    }

    public void parseStatements(org.eclipse.jdt.internal.compiler.parser.Parser, org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r1;
        org.eclipse.jdt.internal.compiler.parser.Parser r0;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.parser.Parser;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.Parser: void parse(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration,org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)>(r1, r2);

        return;
    }

    public java.lang.StringBuffer printReturnType(int, java.lang.StringBuffer)
    {
        java.lang.StringBuffer r2, $r4, $r5;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r1, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.StringBuffer;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        if $r1 != null goto label1;

        return r2;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        return $r5;
    }

    public void resolveStatements()
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r3, $r14, $r18, $r21, $r23, $r25, $r29, $r31, $r37, $r41;
        byte $b0, $b4, $b20;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r35;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r5, $r6, $r7, $r8, $r16, $r17, $r20, $r33, $r34;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r1, $r36;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r4;
        long $l2, $l3, l24;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r0;
        char[] $r10, $r11, $r12, $r13, $r39, $r40;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r15, $r19, $r22, $r24, $r26, $r32;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r30;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r42;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r38;
        int i1, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, i22, i23, $i25, $i26, $i27, i28, $i29, $i30, $i32;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r2, $r27, $r28;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        if $r1 == null goto label01;

        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r33 == null goto label01;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r35 = $r34.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r36.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r35;

     label01:
        $r37 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r38 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r39 = $r38.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName>;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: char[] selector>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r39, $r40);

        if $z1 == 0 goto label02;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r32 = virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void methodWithConstructorName(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)>(r0);

     label02:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        if $r2 == null goto label05;

        i22 = 0;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        i23 = lengthof $r27;

        goto label04;

     label03:
        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r30 = $r28[i22];

        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r29);

        i22 = i22 + 1;

     label04:
        if i22 < i23 goto label03;

     label05:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r5 != null goto label06;

        goto label13;

     label06:
        l24 = $r4.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b0 = l24 cmp 3211264L;

        $i29 = (int) $b0;

        if $i29 >= 0 goto label07;

        goto label13;

     label07:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        i1 = $r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $l2 = $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits>;

        $l3 = $l2 & 562949953421312L;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label08;

        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        if $z2 == 0 goto label12;

        $i19 = i1 & 268435464;

        if $i19 != 268435456 goto label10;

        goto label13;

     label10:
        $b20 = l24 cmp 3276800L;

        $i30 = (int) $b20;

        if $i30 < 0 goto label11;

        $i21 = i1 & 536870920;

        if $i21 != 536870912 goto label11;

        goto label13;

     label11:
        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void methodMustOverride(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r0);

        goto label13;

     label12:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z0 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z0 != 0 goto label13;

        $i18 = i1 & 268435464;

        if $i18 != 268435456 goto label13;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r24 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void missingOverrideAnnotation(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r0);

     label13:
        $r41 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r42 = virtualinvoke $r41.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceType()>();

        $i25 = $r42.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i26 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>($i25);

        tableswitch($i26)
        {
            case 1: goto label16;
            case 2: goto label19;
            case 3: goto label14;
            default: goto label19;
        };

     label14:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: char[] selector>;

        $r10 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUES>;

        if $r11 != $r10 goto label15;

        goto label19;

     label15:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: char[] selector>;

        $r12 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUEOF>;

        if $r13 != $r12 goto label16;

        goto label19;

     label16:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int modifiers>;

        $i6 = $i5 & 16777216;

        if $i6 == 0 goto label17;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int modifiers>;

        $i15 = $i14 & 256;

        if $i15 != 0 goto label19;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int modifiers>;

        $i17 = $i16 & 1024;

        if $i17 != 0 goto label19;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void methodNeedBody(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r0);

        goto label19;

     label17:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int modifiers>;

        $i8 = $i7 & 256;

        if $i8 != 0 goto label18;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int modifiers>;

        $i13 = $i12 & 1024;

        if $i13 == 0 goto label19;

     label18:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void methodNeedingNoBody(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)>(r0);

     label19:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void resolveStatements()>();

        $i27 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(562949953421312L);

        $i32 = (int) -1;

        if $i27 == $i32 goto label20;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r16 == null goto label20;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        i28 = $r17.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i9 = i28 & 805306368;

        if $i9 != 268435456 goto label20;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int bits>;

        $i11 = $i10 & 16;

        if $i11 != 0 goto label20;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void overridesMethodWithoutSuperInvocation(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r20);

     label20:
        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r9, $r10, $r11;
        org.eclipse.jdt.internal.compiler.ast.Javadoc $r3, $r33;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r12, $r16, $r20, $r22, $r26, $r30, $r32;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Statement $r13;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r7, $r18, $r19;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r8, $r14, $r15;
        org.eclipse.jdt.internal.compiler.ast.Argument $r21;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r6, $r17, $r23;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r27;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r31;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r4, $r28, $r29;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r1;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r5, $r24, $r25;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        if $z0 == 0 goto label17;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r3 == null goto label01;

        $r33 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        $r32 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r32);

     label01:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r4 == null goto label04;

        $r28 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        i0 = lengthof $r28;

        i1 = 0;

        goto label03;

     label02:
        $r29 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r31 = $r29[i1];

        $r30 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.ast.Annotation: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r30);

        i1 = i1 + 1;

     label03:
        if i1 < i0 goto label02;

     label04:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        if $r5 == null goto label07;

        $r24 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        i2 = lengthof $r24;

        i3 = 0;

        goto label06;

     label05:
        $r25 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r27 = $r25[i3];

        $r26 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r26);

        i3 = i3 + 1;

     label06:
        if i3 < i2 goto label05;

     label07:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        if $r6 == null goto label08;

        $r23 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        $r22 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r22);

     label08:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if $r7 == null goto label11;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        i4 = lengthof $r18;

        i5 = 0;

        goto label10;

     label09:
        $r19 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        $r21 = $r19[i5];

        $r20 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.ast.Argument: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r20);

        i5 = i5 + 1;

     label10:
        if i5 < i4 goto label09;

     label11:
        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        if $r8 == null goto label14;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        i6 = lengthof $r14;

        i7 = 0;

        goto label13;

     label12:
        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        $r17 = $r15[i7];

        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r16);

        i7 = i7 + 1;

     label13:
        if i7 < i6 goto label12;

     label14:
        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        if $r9 == null goto label17;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        i8 = lengthof $r10;

        i9 = 0;

        goto label16;

     label15:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        $r13 = $r11[i9];

        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.Statement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r12);

        i9 = i9 + 1;

     label16:
        if i9 < i8 goto label15;

     label17:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters()
    {
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        return $r1;
    }
}
