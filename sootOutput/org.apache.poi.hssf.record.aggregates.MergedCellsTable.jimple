public final class org.apache.poi.hssf.record.aggregates.MergedCellsTable extends org.apache.poi.hssf.record.aggregates.RecordAggregate
{
    private static int MAX_MERGED_REGIONS;
    private final java.util.List _mergedRegions;

    public void <init>()
    {
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        specialinvoke r0.<org.apache.poi.hssf.record.aggregates.RecordAggregate: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions> = $r1;

        return;
    }

    public void read(org.apache.poi.hssf.model.RecordStream)
    {
        org.apache.poi.ss.util.CellRangeAddress $r6;
        org.apache.poi.hssf.record.Record $r4;
        org.apache.poi.hssf.record.MergeCellsRecord r5;
        org.apache.poi.hssf.model.RecordStream r2;
        java.util.List r1;
        short $s0;
        int i1, $i2;
        java.lang.Class $r3;
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        r2 := @parameter0: org.apache.poi.hssf.model.RecordStream;

        r1 = r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

     label1:
        $r3 = virtualinvoke r2.<org.apache.poi.hssf.model.RecordStream: java.lang.Class peekNextClass()>();

        if $r3 != class "Lorg/apache/poi/hssf/record/MergeCellsRecord;" goto label4;

        $r4 = virtualinvoke r2.<org.apache.poi.hssf.model.RecordStream: org.apache.poi.hssf.record.Record getNext()>();

        r5 = (org.apache.poi.hssf.record.MergeCellsRecord) $r4;

        $s0 = virtualinvoke r5.<org.apache.poi.hssf.record.MergeCellsRecord: short getNumAreas()>();

        i1 = 0;

     label2:
        $i2 = (int) $s0;

        if i1 >= $i2 goto label3;

        $r6 = virtualinvoke r5.<org.apache.poi.hssf.record.MergeCellsRecord: org.apache.poi.ss.util.CellRangeAddress getAreaAt(int)>(i1);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    public int getRecordSize()
    {
        java.util.List $r1;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        $i1 = <org.apache.poi.hssf.record.aggregates.MergedCellsTable: int MAX_MERGED_REGIONS>;

        i2 = $i0 / $i1;

        $i3 = <org.apache.poi.hssf.record.aggregates.MergedCellsTable: int MAX_MERGED_REGIONS>;

        i4 = $i0 % $i3;

        $i5 = <org.apache.poi.hssf.record.aggregates.MergedCellsTable: int MAX_MERGED_REGIONS>;

        $i6 = staticinvoke <org.apache.poi.ss.util.CellRangeAddressList: int getEncodedSize(int)>($i5);

        $i7 = 4 + $i6;

        $i8 = i2 * $i7;

        $i9 = $i8 + 4;

        $i10 = staticinvoke <org.apache.poi.ss.util.CellRangeAddressList: int getEncodedSize(int)>(i4);

        i11 = $i9 + $i10;

        return i11;
    }

    public void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor)
    {
        org.apache.poi.hssf.record.MergeCellsRecord $r5, $r6;
        org.apache.poi.ss.util.CellRangeAddress[] r2;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, i7, $i8, i9, i10;
        java.util.List $r1, $r3;
        org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor r4;
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        r4 := @parameter0: org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= 1 goto label1;

        return;

     label1:
        $i1 = <org.apache.poi.hssf.record.aggregates.MergedCellsTable: int MAX_MERGED_REGIONS>;

        i2 = $i0 / $i1;

        $i3 = <org.apache.poi.hssf.record.aggregates.MergedCellsTable: int MAX_MERGED_REGIONS>;

        i4 = $i0 % $i3;

        r2 = newarray (org.apache.poi.ss.util.CellRangeAddress)[$i0];

        $r3 = r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

        interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        i9 = 0;

     label2:
        if i9 >= i2 goto label3;

        $i6 = <org.apache.poi.hssf.record.aggregates.MergedCellsTable: int MAX_MERGED_REGIONS>;

        i7 = i9 * $i6;

        $r6 = new org.apache.poi.hssf.record.MergeCellsRecord;

        $i8 = <org.apache.poi.hssf.record.aggregates.MergedCellsTable: int MAX_MERGED_REGIONS>;

        specialinvoke $r6.<org.apache.poi.hssf.record.MergeCellsRecord: void <init>(org.apache.poi.ss.util.CellRangeAddress[],int,int)>(r2, i7, $i8);

        interfaceinvoke r4.<org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor: void visitRecord(org.apache.poi.hssf.record.Record)>($r6);

        i9 = i9 + 1;

        goto label2;

     label3:
        if i4 <= 0 goto label4;

        $i5 = <org.apache.poi.hssf.record.aggregates.MergedCellsTable: int MAX_MERGED_REGIONS>;

        i10 = i2 * $i5;

        $r5 = new org.apache.poi.hssf.record.MergeCellsRecord;

        specialinvoke $r5.<org.apache.poi.hssf.record.MergeCellsRecord: void <init>(org.apache.poi.ss.util.CellRangeAddress[],int,int)>(r2, i10, i4);

        interfaceinvoke r4.<org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor: void visitRecord(org.apache.poi.hssf.record.Record)>($r5);

     label4:
        return;
    }

    public void addRecords(org.apache.poi.hssf.record.MergeCellsRecord[])
    {
        org.apache.poi.hssf.record.MergeCellsRecord $r2;
        org.apache.poi.hssf.record.MergeCellsRecord[] r0;
        int $i0, i1;
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r1;

        r1 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        r0 := @parameter0: org.apache.poi.hssf.record.MergeCellsRecord[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = r0[i1];

        specialinvoke r1.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: void addMergeCellsRecord(org.apache.poi.hssf.record.MergeCellsRecord)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void addMergeCellsRecord(org.apache.poi.hssf.record.MergeCellsRecord)
    {
        org.apache.poi.ss.util.CellRangeAddress $r1;
        short $s0;
        java.util.List $r3;
        org.apache.poi.hssf.record.MergeCellsRecord r0;
        int i1, $i2;
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r2;

        r2 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        r0 := @parameter0: org.apache.poi.hssf.record.MergeCellsRecord;

        $s0 = virtualinvoke r0.<org.apache.poi.hssf.record.MergeCellsRecord: short getNumAreas()>();

        i1 = 0;

     label1:
        $i2 = (int) $s0;

        if i1 >= $i2 goto label2;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.record.MergeCellsRecord: org.apache.poi.ss.util.CellRangeAddress getAreaAt(int)>(i1);

        $r3 = r2.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public org.apache.poi.ss.util.CellRangeAddress get(int)
    {
        org.apache.poi.ss.util.CellRangeAddress $r3;
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: void checkIndex(int)>(i0);

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.ss.util.CellRangeAddress) $r2;

        return $r3;
    }

    public void remove(int)
    {
        int i0;
        java.util.List $r1;
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: void checkIndex(int)>(i0);

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i0);

        return;
    }

    private void checkIndex(int)
    {
        java.lang.IllegalArgumentException $r0;
        java.util.List $r6, $r10;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7, $r8;
        java.lang.String $r9;
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r5;

        r5 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r10 = r5.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

        $i3 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i0 < $i3 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified CF index ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is outside the allowable range (0..");

        $r6 = r5.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r0;

     label2:
        return;
    }

    public void addArea(int, int, int, int)
    {
        org.apache.poi.ss.util.CellRangeAddress $r1;
        java.util.List $r2;
        int i0, i1, i2, i3;
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

        $r1 = new org.apache.poi.ss.util.CellRangeAddress;

        specialinvoke $r1.<org.apache.poi.ss.util.CellRangeAddress: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public int getNumberOfMergedRegions()
    {
        int $i0;
        java.util.List $r1;
        org.apache.poi.hssf.record.aggregates.MergedCellsTable r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.MergedCellsTable: java.util.List _mergedRegions>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    static void <clinit>()
    {
        <org.apache.poi.hssf.record.aggregates.MergedCellsTable: int MAX_MERGED_REGIONS> = 1027;

        return;
    }
}
