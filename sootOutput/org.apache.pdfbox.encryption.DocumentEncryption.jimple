public class org.apache.pdfbox.encryption.DocumentEncryption extends java.lang.Object
{
    private org.apache.pdfbox.pdmodel.PDDocument pdDocument;
    private org.apache.pdfbox.cos.COSDocument document;
    private byte[] encryptionKey;
    private org.apache.pdfbox.encryption.PDFEncryption encryption;
    private java.util.Set objects;
    private java.util.Set potentialSignatures;

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument)
    {
        java.util.HashSet $r2, $r3;
        org.apache.pdfbox.cos.COSDocument $r5;
        org.apache.pdfbox.encryption.PDFEncryption $r1;
        org.apache.pdfbox.pdmodel.PDDocument r4;
        org.apache.pdfbox.encryption.DocumentEncryption r0;

        r0 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        r4 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.pdmodel.PDDocument pdDocument> = null;

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document> = null;

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: byte[] encryptionKey> = null;

        $r1 = new org.apache.pdfbox.encryption.PDFEncryption;

        specialinvoke $r1.<org.apache.pdfbox.encryption.PDFEncryption: void <init>()>();

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: java.util.Set objects> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: java.util.Set potentialSignatures> = $r3;

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.pdmodel.PDDocument pdDocument> = r4;

        $r5 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document> = $r5;

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDocument)
    {
        java.util.HashSet $r2, $r3;
        org.apache.pdfbox.cos.COSDocument r5;
        org.apache.pdfbox.encryption.PDFEncryption $r1;
        org.apache.pdfbox.pdmodel.PDDocument $r4;
        org.apache.pdfbox.encryption.DocumentEncryption r0;

        r0 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        r5 := @parameter0: org.apache.pdfbox.cos.COSDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.pdmodel.PDDocument pdDocument> = null;

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document> = null;

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: byte[] encryptionKey> = null;

        $r1 = new org.apache.pdfbox.encryption.PDFEncryption;

        specialinvoke $r1.<org.apache.pdfbox.encryption.PDFEncryption: void <init>()>();

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: java.util.Set objects> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: java.util.Set potentialSignatures> = $r3;

        $r4 = new org.apache.pdfbox.pdmodel.PDDocument;

        specialinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocument: void <init>(org.apache.pdfbox.cos.COSDocument)>(r5);

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.pdmodel.PDDocument pdDocument> = $r4;

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document> = r5;

        return;
    }

    public void initForEncryption() throws org.apache.pdfbox.exceptions.CryptographyException, java.io.IOException
    {
        byte[] $r12, $r13, $r14, $r17, $r19, $r20, $r26, $r27, $r28, $r30, $r31, $r32, $r34, $r35, $r36;
        org.apache.pdfbox.exceptions.CryptographyException $r42;
        org.apache.pdfbox.encryption.PDFEncryption $r24, $r25, $r29, $r33;
        java.math.BigInteger $r11;
        org.apache.pdfbox.pdmodel.PDDocument $r1, $r3, $r5;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption $r40;
        org.apache.pdfbox.cos.COSDictionary $r38;
        org.apache.pdfbox.cos.COSBase $r23;
        java.security.NoSuchAlgorithmException $r41;
        org.apache.pdfbox.cos.COSArray $r8, $r9, r45;
        java.security.MessageDigest $r10;
        long $l3;
        org.apache.pdfbox.cos.COSString $r21, $r39;
        int $i0, $i1, $i2, $i4, $i5;
        java.lang.String $r2, $r4, $r16, $r18, r43, r44;
        org.apache.pdfbox.cos.COSDocument $r7, $r15, $r22, $r37;
        org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary $r6;
        org.apache.pdfbox.encryption.DocumentEncryption r0;

        r0 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        $r1 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.pdmodel.PDDocument pdDocument>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocument: java.lang.String getOwnerPasswordForEncryption()>();

        r43 = $r2;

        $r3 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.pdmodel.PDDocument pdDocument>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocument: java.lang.String getUserPasswordForEncryption()>();

        r44 = $r4;

        if $r2 != null goto label1;

        r43 = "";

     label1:
        if $r4 != null goto label2;

        r44 = "";

     label2:
        $r5 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.pdmodel.PDDocument pdDocument>;

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary getEncryptionDictionary()>();

        $r40 = (org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption) $r6;

        $i0 = virtualinvoke $r40.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int getPermissions()>();

        $i1 = virtualinvoke $r40.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int getRevision()>();

        $i2 = virtualinvoke $r40.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int getLength()>();

        $i5 = $i2 / 8;

        $r7 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document>;

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSArray getDocumentID()>();

        r45 = $r8;

        if $r8 == null goto label3;

        $i4 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSArray: int size()>();

        if $i4 >= 2 goto label7;

     label3:
        $r9 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r9.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        r45 = $r9;

     label4:
        $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        $r12 = virtualinvoke $r11.<java.math.BigInteger: byte[] toByteArray()>();

        virtualinvoke $r10.<java.security.MessageDigest: void update(byte[])>($r12);

        $r13 = virtualinvoke r43.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r10.<java.security.MessageDigest: void update(byte[])>($r13);

        $r14 = virtualinvoke r44.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r10.<java.security.MessageDigest: void update(byte[])>($r14);

        $r15 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document>;

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        $r17 = virtualinvoke $r16.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r10.<java.security.MessageDigest: void update(byte[])>($r17);

        $r18 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r19 = virtualinvoke $r18.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r20 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r19);

        $r21 = new org.apache.pdfbox.cos.COSString;

        specialinvoke $r21.<org.apache.pdfbox.cos.COSString: void <init>()>();

        virtualinvoke $r21.<org.apache.pdfbox.cos.COSString: void append(byte[])>($r20);

        virtualinvoke $r9.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r21);

        virtualinvoke $r9.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r21);

        $r22 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document>;

        virtualinvoke $r22.<org.apache.pdfbox.cos.COSDocument: void setDocumentID(org.apache.pdfbox.cos.COSArray)>($r9);

     label5:
        goto label7;

     label6:
        $r41 := @caughtexception;

        $r42 = new org.apache.pdfbox.exceptions.CryptographyException;

        specialinvoke $r42.<org.apache.pdfbox.exceptions.CryptographyException: void <init>(java.lang.Exception)>($r41);

        throw $r42;

     label7:
        $r23 = virtualinvoke r45.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(0);

        $r39 = (org.apache.pdfbox.cos.COSString) $r23;

        $r24 = new org.apache.pdfbox.encryption.PDFEncryption;

        specialinvoke $r24.<org.apache.pdfbox.encryption.PDFEncryption: void <init>()>();

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption> = $r24;

        $r25 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption>;

        $r26 = virtualinvoke r43.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r27 = virtualinvoke r44.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r28 = virtualinvoke $r25.<org.apache.pdfbox.encryption.PDFEncryption: byte[] computeOwnerPassword(byte[],byte[],int,int)>($r26, $r27, $i1, $i5);

        $r29 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption>;

        $r30 = virtualinvoke r44.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r31 = virtualinvoke $r39.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        $r32 = virtualinvoke $r29.<org.apache.pdfbox.encryption.PDFEncryption: byte[] computeUserPassword(byte[],byte[],int,byte[],int,int)>($r30, $r28, $i0, $r31, $i1, $i5);

        $r33 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption>;

        $r34 = virtualinvoke r44.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r35 = virtualinvoke $r39.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        $r36 = virtualinvoke $r33.<org.apache.pdfbox.encryption.PDFEncryption: byte[] computeEncryptedKey(byte[],byte[],int,byte[],int,int)>($r34, $r28, $i0, $r35, $i1, $i5);

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: byte[] encryptionKey> = $r36;

        virtualinvoke $r40.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: void setOwnerKey(byte[])>($r28);

        virtualinvoke $r40.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: void setUserKey(byte[])>($r32);

        $r37 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document>;

        $r38 = virtualinvoke $r40.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        virtualinvoke $r37.<org.apache.pdfbox.cos.COSDocument: void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)>($r38);

        return;

        catch java.security.NoSuchAlgorithmException from label4 to label5 with label6;
    }

    public void decryptDocument(java.lang.String) throws org.apache.pdfbox.exceptions.CryptographyException, java.io.IOException, org.apache.pdfbox.exceptions.InvalidPasswordException
    {
        byte[] $r6, $r7, $r9, $r10, $r12, $r13, $r16, $r17, $r19, $r20, $r33, $r34, $r35;
        org.apache.pdfbox.exceptions.InvalidPasswordException $r14;
        org.apache.pdfbox.encryption.PDFEncryption $r8, $r11, $r15, $r18, $r32;
        boolean $z0, $z1, $z2;
        org.apache.pdfbox.pdmodel.PDDocument $r1;
        java.util.Set $r31;
        org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption $r37;
        org.apache.pdfbox.cos.COSDictionary $r22, r40;
        java.util.List $r25;
        org.apache.pdfbox.cos.COSBase $r5, $r23, $r30;
        org.apache.pdfbox.cos.COSArray $r4, $r36;
        org.apache.pdfbox.cos.COSObject $r29;
        long $l3;
        org.apache.pdfbox.cos.COSString $r38;
        int $i0, $i1, $i2, $i4, $i5, i6;
        java.lang.String r39;
        org.apache.pdfbox.cos.COSDocument $r3, $r21, $r24, $r27;
        java.util.Iterator $r26;
        org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary $r2;
        java.lang.Object $r28;
        org.apache.pdfbox.encryption.DocumentEncryption r0;

        r0 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        r39 := @parameter0: java.lang.String;

        if r39 != null goto label1;

        r39 = "";

     label1:
        $r1 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.pdmodel.PDDocument pdDocument>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary getEncryptionDictionary()>();

        $r37 = (org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption) $r2;

        $i0 = virtualinvoke $r37.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int getPermissions()>();

        $i1 = virtualinvoke $r37.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int getRevision()>();

        $i2 = virtualinvoke $r37.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: int getLength()>();

        $i5 = $i2 / 8;

        $r3 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSArray getDocumentID()>();

        $r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(0);

        $r38 = (org.apache.pdfbox.cos.COSString) $r5;

        $r6 = virtualinvoke $r37.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: byte[] getUserKey()>();

        $r7 = virtualinvoke $r37.<org.apache.pdfbox.pdmodel.encryption.PDStandardEncryption: byte[] getOwnerKey()>();

        $r8 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption>;

        $r9 = virtualinvoke r39.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r10 = virtualinvoke $r38.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        $z0 = virtualinvoke $r8.<org.apache.pdfbox.encryption.PDFEncryption: boolean isUserPassword(byte[],byte[],byte[],int,byte[],int,int)>($r9, $r6, $r7, $i0, $r10, $i1, $i5);

        $r11 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption>;

        $r12 = virtualinvoke r39.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r13 = virtualinvoke $r38.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        $z1 = virtualinvoke $r11.<org.apache.pdfbox.encryption.PDFEncryption: boolean isOwnerPassword(byte[],byte[],byte[],int,byte[],int,int)>($r12, $r6, $r7, $i0, $r13, $i1, $i5);

        if $z0 == 0 goto label2;

        $r32 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption>;

        $r33 = virtualinvoke r39.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r34 = virtualinvoke $r38.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        $r35 = virtualinvoke $r32.<org.apache.pdfbox.encryption.PDFEncryption: byte[] computeEncryptedKey(byte[],byte[],int,byte[],int,int)>($r33, $r7, $i0, $r34, $i1, $i5);

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: byte[] encryptionKey> = $r35;

        goto label4;

     label2:
        if $z1 == 0 goto label3;

        $r15 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption>;

        $r16 = virtualinvoke r39.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $l3 = (long) $i5;

        $r17 = virtualinvoke $r15.<org.apache.pdfbox.encryption.PDFEncryption: byte[] getUserPassword(byte[],byte[],int,long)>($r16, $r7, $i1, $l3);

        $r18 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption>;

        $r19 = virtualinvoke $r38.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        $r20 = virtualinvoke $r18.<org.apache.pdfbox.encryption.PDFEncryption: byte[] computeEncryptedKey(byte[],byte[],int,byte[],int,int)>($r17, $r7, $i0, $r19, $i1, $i5);

        r0.<org.apache.pdfbox.encryption.DocumentEncryption: byte[] encryptionKey> = $r20;

        goto label4;

     label3:
        $r14 = new org.apache.pdfbox.exceptions.InvalidPasswordException;

        specialinvoke $r14.<org.apache.pdfbox.exceptions.InvalidPasswordException: void <init>(java.lang.String)>("Error: The supplied password does not match either the owner or user password in the document.");

        throw $r14;

     label4:
        $r21 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document>;

        $r22 = virtualinvoke $r21.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>();

        $r23 = virtualinvoke $r22.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getObjectFromPath(java.lang.String)>("Root/AcroForm/Fields");

        $r36 = (org.apache.pdfbox.cos.COSArray) $r23;

        if $r36 == null goto label6;

        i6 = 0;

     label5:
        $i4 = virtualinvoke $r36.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i6 >= $i4 goto label6;

        $r30 = virtualinvoke $r36.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i6);

        r40 = (org.apache.pdfbox.cos.COSDictionary) $r30;

        $r31 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: java.util.Set potentialSignatures>;

        specialinvoke r0.<org.apache.pdfbox.encryption.DocumentEncryption: void addDictionaryAndSubDictionary(java.util.Set,org.apache.pdfbox.cos.COSDictionary)>($r31, r40);

        i6 = i6 + 1;

        goto label5;

     label6:
        $r24 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document>;

        $r25 = virtualinvoke $r24.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>();

        $r26 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r28 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        $r29 = (org.apache.pdfbox.cos.COSObject) $r28;

        specialinvoke r0.<org.apache.pdfbox.encryption.DocumentEncryption: void decryptObject(org.apache.pdfbox.cos.COSObject)>($r29);

        goto label7;

     label8:
        $r27 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.cos.COSDocument document>;

        virtualinvoke $r27.<org.apache.pdfbox.cos.COSDocument: void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)>(null);

        return;
    }

    private void addDictionaryAndSubDictionary(java.util.Set, org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSName $r2, $r5;
        org.apache.pdfbox.cos.COSArray r4;
        java.util.Set r0;
        org.apache.pdfbox.cos.COSDictionary r1, $r8, $r10;
        org.apache.pdfbox.cos.COSBase $r3, $r6, $r9;
        int $i0, i1;
        org.apache.pdfbox.encryption.DocumentEncryption r7;
        boolean $z0;

        r7 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: org.apache.pdfbox.cos.COSDictionary;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>;

        $r3 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        i1 = 0;

     label1:
        if r4 == null goto label2;

        $i0 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i1 >= $i0 goto label2;

        $r9 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1);

        $r10 = (org.apache.pdfbox.cos.COSDictionary) $r9;

        specialinvoke r7.<org.apache.pdfbox.encryption.DocumentEncryption: void addDictionaryAndSubDictionary(java.util.Set,org.apache.pdfbox.cos.COSDictionary)>(r0, $r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName V>;

        $r6 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5);

        $z0 = $r6 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z0 == 0 goto label3;

        $r8 = (org.apache.pdfbox.cos.COSDictionary) $r6;

        specialinvoke r7.<org.apache.pdfbox.encryption.DocumentEncryption: void addDictionaryAndSubDictionary(java.util.Set,org.apache.pdfbox.cos.COSDictionary)>(r0, $r8);

     label3:
        return;
    }

    private void decryptObject(org.apache.pdfbox.cos.COSObject) throws org.apache.pdfbox.exceptions.CryptographyException, java.io.IOException
    {
        org.apache.pdfbox.cos.COSObject r0;
        long l1, l3;
        org.apache.pdfbox.cos.COSInteger $r1, $r2;
        org.apache.pdfbox.cos.COSBase $r3;
        int $i0, $i2;
        org.apache.pdfbox.encryption.DocumentEncryption r4;

        r4 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        r0 := @parameter0: org.apache.pdfbox.cos.COSObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSInteger getObjectNumber()>();

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSInteger: int intValue()>();

        l1 = (long) $i0;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSInteger getGenerationNumber()>();

        $i2 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSInteger: int intValue()>();

        l3 = (long) $i2;

        $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        virtualinvoke r4.<org.apache.pdfbox.encryption.DocumentEncryption: void decrypt(java.lang.Object,long,long)>($r3, l1, l3);

        return;
    }

    public void decrypt(java.lang.Object, long, long) throws org.apache.pdfbox.exceptions.CryptographyException, java.io.IOException
    {
        org.apache.pdfbox.cos.COSArray $r4;
        java.util.Set $r2, $r3;
        long l0, l1;
        org.apache.pdfbox.cos.COSString $r7;
        org.apache.pdfbox.cos.COSDictionary $r5;
        java.lang.Object r1;
        org.apache.pdfbox.encryption.DocumentEncryption r0;
        org.apache.pdfbox.cos.COSStream $r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: java.util.Set objects>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label4;

        $r3 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: java.util.Set objects>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $z1 = r1 instanceof org.apache.pdfbox.cos.COSString;

        if $z1 == 0 goto label1;

        $r7 = (org.apache.pdfbox.cos.COSString) r1;

        specialinvoke r0.<org.apache.pdfbox.encryption.DocumentEncryption: void decryptString(org.apache.pdfbox.cos.COSString,long,long)>($r7, l0, l1);

        goto label4;

     label1:
        $z2 = r1 instanceof org.apache.pdfbox.cos.COSStream;

        if $z2 == 0 goto label2;

        $r6 = (org.apache.pdfbox.cos.COSStream) r1;

        specialinvoke r0.<org.apache.pdfbox.encryption.DocumentEncryption: void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)>($r6, l0, l1);

        goto label4;

     label2:
        $z3 = r1 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z3 == 0 goto label3;

        $r5 = (org.apache.pdfbox.cos.COSDictionary) r1;

        specialinvoke r0.<org.apache.pdfbox.encryption.DocumentEncryption: void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)>($r5, l0, l1);

        goto label4;

     label3:
        $z4 = r1 instanceof org.apache.pdfbox.cos.COSArray;

        if $z4 == 0 goto label4;

        $r4 = (org.apache.pdfbox.cos.COSArray) r1;

        specialinvoke r0.<org.apache.pdfbox.encryption.DocumentEncryption: void decryptArray(org.apache.pdfbox.cos.COSArray,long,long)>($r4, l0, l1);

     label4:
        return;
    }

    private void decryptStream(org.apache.pdfbox.cos.COSStream, long, long) throws org.apache.pdfbox.exceptions.CryptographyException, java.io.IOException
    {
        java.io.OutputStream $r5;
        byte[] $r4;
        long l0, l1;
        org.apache.pdfbox.encryption.PDFEncryption $r3;
        org.apache.pdfbox.encryption.DocumentEncryption r0;
        org.apache.pdfbox.cos.COSStream r1;
        java.io.InputStream $r2;

        r0 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        r1 := @parameter0: org.apache.pdfbox.cos.COSStream;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<org.apache.pdfbox.encryption.DocumentEncryption: void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)>(r1, l0, l1);

        $r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSStream: java.io.InputStream getFilteredStream()>();

        $r3 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption>;

        $r4 = r0.<org.apache.pdfbox.encryption.DocumentEncryption: byte[] encryptionKey>;

        $r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createFilteredStream()>();

        virtualinvoke $r3.<org.apache.pdfbox.encryption.PDFEncryption: void encryptData(long,long,byte[],java.io.InputStream,java.io.OutputStream)>(l0, l1, $r4, $r2, $r5);

        return;
    }

    private void decryptDictionary(org.apache.pdfbox.cos.COSDictionary, long, long) throws org.apache.pdfbox.exceptions.CryptographyException, java.io.IOException
    {
        long l0, l1;
        java.lang.String $r7;
        boolean $z0, $z1, $z2, $z3;
        org.apache.pdfbox.cos.COSName $r6;
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1, $r10;
        org.apache.pdfbox.cos.COSDictionary r0;
        java.lang.Object $r3, $r5, $r9, $r11;
        org.apache.pdfbox.encryption.DocumentEncryption r8;

        r8 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        r0 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (org.apache.pdfbox.cos.COSName) $r5;

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("Contents");

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = $r9 instanceof org.apache.pdfbox.cos.COSString;

        if $z2 == 0 goto label2;

        $r10 = r8.<org.apache.pdfbox.encryption.DocumentEncryption: java.util.Set potentialSignatures>;

        $z3 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z3 != 0 goto label3;

     label2:
        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r8.<org.apache.pdfbox.encryption.DocumentEncryption: void decrypt(java.lang.Object,long,long)>($r11, l0, l1);

     label3:
        goto label1;

     label4:
        return;
    }

    private void decryptString(org.apache.pdfbox.cos.COSString, long, long) throws org.apache.pdfbox.exceptions.CryptographyException, java.io.IOException
    {
        byte[] $r2, $r5, $r7;
        java.io.ByteArrayOutputStream $r3;
        long l0, l1;
        org.apache.pdfbox.cos.COSString r1;
        org.apache.pdfbox.encryption.PDFEncryption $r6;
        java.io.ByteArrayInputStream $r0;
        org.apache.pdfbox.encryption.DocumentEncryption r4;

        r4 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        r1 := @parameter0: org.apache.pdfbox.cos.COSString;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r0 = new java.io.ByteArrayInputStream;

        $r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r6 = r4.<org.apache.pdfbox.encryption.DocumentEncryption: org.apache.pdfbox.encryption.PDFEncryption encryption>;

        $r5 = r4.<org.apache.pdfbox.encryption.DocumentEncryption: byte[] encryptionKey>;

        virtualinvoke $r6.<org.apache.pdfbox.encryption.PDFEncryption: void encryptData(long,long,byte[],java.io.InputStream,java.io.OutputStream)>(l0, l1, $r5, $r0, $r3);

        virtualinvoke r1.<org.apache.pdfbox.cos.COSString: void reset()>();

        $r7 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r1.<org.apache.pdfbox.cos.COSString: void append(byte[])>($r7);

        return;
    }

    private void decryptArray(org.apache.pdfbox.cos.COSArray, long, long) throws org.apache.pdfbox.exceptions.CryptographyException, java.io.IOException
    {
        org.apache.pdfbox.cos.COSArray r0;
        org.apache.pdfbox.cos.COSBase $r2;
        int $i0, i3;
        long l1, l2;
        org.apache.pdfbox.encryption.DocumentEncryption r1;

        r1 := @this: org.apache.pdfbox.encryption.DocumentEncryption;

        r0 := @parameter0: org.apache.pdfbox.cos.COSArray;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i3 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i3);

        virtualinvoke r1.<org.apache.pdfbox.encryption.DocumentEncryption: void decrypt(java.lang.Object,long,long)>($r2, l1, l2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }
}
