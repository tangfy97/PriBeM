final class org.apache.lucene.index.FieldInfos$FieldNumbers extends java.lang.Object
{
    private final java.util.Map numberToName;
    private final java.util.Map nameToNumber;
    private final java.util.Map docValuesType;
    private int lowestUnassignedFieldNumber;

    void <init>()
    {
        org.apache.lucene.index.FieldInfos$FieldNumbers r0;
        int $i1;
        java.util.HashMap $r4, $r5, $r6;

        r0 := @this: org.apache.lucene.index.FieldInfos$FieldNumbers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.lucene.index.FieldInfos$FieldNumbers: int lowestUnassignedFieldNumber> = $i1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map nameToNumber> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map numberToName> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map docValuesType> = $r6;

        return;
    }

    synchronized int addOrGet(java.lang.String, int, org.apache.lucene.index.FieldInfo$DocValuesType)
    {
        java.lang.Integer $r3, $r23, r24, $r26;
        java.util.Map $r4, $r5, $r6, $r7, $r19, $r21, $r25;
        boolean $z0, $z1;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r27;
        org.apache.lucene.index.FieldInfos$FieldNumbers r1;
        int i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String r2, $r18;
        java.lang.IllegalArgumentException $r28;
        org.apache.lucene.index.FieldInfo$DocValuesType r0, r20;
        java.lang.Object $r8, $r22;

        r1 := @this: org.apache.lucene.index.FieldInfos$FieldNumbers;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r0 := @parameter2: org.apache.lucene.index.FieldInfo$DocValuesType;

        if r0 == null goto label2;

        $r7 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map docValuesType>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r20 = (org.apache.lucene.index.FieldInfo$DocValuesType) $r8;

        if r20 != null goto label1;

        $r19 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map docValuesType>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

        goto label2;

     label1:
        if r20 == null goto label2;

        if r20 == r0 goto label2;

        $r28 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot change DocValues type from ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for field \"");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r28;

     label2:
        $r21 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map nameToNumber>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r23 = (java.lang.Integer) $r22;

        r24 = $r23;

        if $r23 != null goto label6;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i6 = (int) -1;

        if i0 == $i6 goto label3;

        $r6 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map numberToName>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

        r24 = $r3;

        goto label5;

     label3:
        $r25 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map numberToName>;

        $i2 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: int lowestUnassignedFieldNumber>;

        $i3 = $i2 + 1;

        r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: int lowestUnassignedFieldNumber> = $i3;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $z1 = interfaceinvoke $r25.<java.util.Map: boolean containsKey(java.lang.Object)>($r26);

        if $z1 == 0 goto label4;

        goto label3;

     label4:
        $i1 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: int lowestUnassignedFieldNumber>;

        r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label5:
        $r4 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map numberToName>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, r2);

        $r5 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map nameToNumber>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r24);

     label6:
        $i4 = virtualinvoke r24.<java.lang.Integer: int intValue()>();

        return $i4;
    }

    synchronized boolean containsConsistent(java.lang.Integer, java.lang.String, org.apache.lucene.index.FieldInfo$DocValuesType)
    {
        java.lang.Integer r2;
        org.apache.lucene.index.FieldInfo$DocValuesType r7;
        org.apache.lucene.index.FieldInfos$FieldNumbers r1;
        java.util.Map $r3, $r5, $r8, $r10;
        java.lang.Object $r4, $r6, $r9, $r11;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.index.FieldInfos$FieldNumbers;

        r2 := @parameter0: java.lang.Integer;

        r0 := @parameter1: java.lang.String;

        r7 := @parameter2: org.apache.lucene.index.FieldInfo$DocValuesType;

        $r3 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map numberToName>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map nameToNumber>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $z1 = virtualinvoke r2.<java.lang.Integer: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        if r7 == null goto label1;

        $r8 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map docValuesType>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if $r9 == null goto label1;

        $r10 = r1.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map docValuesType>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if r7 != $r11 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    synchronized void clear()
    {
        org.apache.lucene.index.FieldInfos$FieldNumbers r0;
        java.util.Map $r1, $r2, $r3;

        r0 := @this: org.apache.lucene.index.FieldInfos$FieldNumbers;

        $r1 = r0.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map numberToName>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map nameToNumber>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r3 = r0.<org.apache.lucene.index.FieldInfos$FieldNumbers: java.util.Map docValuesType>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        return;
    }
}
