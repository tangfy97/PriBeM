public class org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser extends org.apache.solr.client.solrj.impl.BinaryResponseParser
{
    final org.apache.solr.client.solrj.StreamingResponseCallback callback;

    public void <init>(org.apache.solr.client.solrj.StreamingResponseCallback)
    {
        org.apache.solr.client.solrj.StreamingResponseCallback r1;
        org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser r0;

        r0 := @this: org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser;

        r1 := @parameter0: org.apache.solr.client.solrj.StreamingResponseCallback;

        specialinvoke r0.<org.apache.solr.client.solrj.impl.BinaryResponseParser: void <init>()>();

        r0.<org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser: org.apache.solr.client.solrj.StreamingResponseCallback callback> = r1;

        return;
    }

    public org.apache.solr.common.util.NamedList processResponse(java.io.InputStream, java.lang.String)
    {
        org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser$1 $r0;
        java.io.IOException $r5;
        org.apache.solr.common.SolrException$ErrorCode $r7;
        org.apache.solr.common.util.NamedList $r4;
        org.apache.solr.common.SolrException $r6;
        java.lang.Object $r3;
        java.lang.String r8;
        org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser r1;
        java.io.InputStream r2;

        r1 := @this: org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser;

        r2 := @parameter0: java.io.InputStream;

        r8 := @parameter1: java.lang.String;

     label1:
        $r0 = new org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser$1;

        specialinvoke $r0.<org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser$1: void <init>(org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser)>(r1);

        $r3 = virtualinvoke $r0.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object unmarshal(java.io.InputStream)>(r2);

        $r4 = (org.apache.solr.common.util.NamedList) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.solr.common.SolrException;

        $r7 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVER_ERROR>;

        specialinvoke $r6.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String,java.lang.Throwable)>($r7, "parsing error", $r5);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
