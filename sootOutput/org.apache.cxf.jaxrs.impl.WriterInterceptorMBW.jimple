public class org.apache.cxf.jaxrs.impl.WriterInterceptorMBW extends java.lang.Object implements javax.ws.rs.ext.WriterInterceptor
{
    private static final java.util.logging.Logger LOG;
    private javax.ws.rs.ext.MessageBodyWriter writer;
    private org.apache.cxf.message.Message m;

    public void <init>(javax.ws.rs.ext.MessageBodyWriter, org.apache.cxf.message.Message)
    {
        javax.ws.rs.ext.MessageBodyWriter r1;
        org.apache.cxf.message.Message r2;
        org.apache.cxf.jaxrs.impl.WriterInterceptorMBW r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.WriterInterceptorMBW;

        r1 := @parameter0: javax.ws.rs.ext.MessageBodyWriter;

        r2 := @parameter1: org.apache.cxf.message.Message;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: javax.ws.rs.ext.MessageBodyWriter writer> = r1;

        r0.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: org.apache.cxf.message.Message m> = r2;

        return;
    }

    public javax.ws.rs.ext.MessageBodyWriter getMBW()
    {
        javax.ws.rs.ext.MessageBodyWriter $r1;
        org.apache.cxf.jaxrs.impl.WriterInterceptorMBW r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.WriterInterceptorMBW;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: javax.ws.rs.ext.MessageBodyWriter writer>;

        return $r1;
    }

    public void aroundWriteTo(javax.ws.rs.ext.WriterInterceptorContext) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        javax.ws.rs.ext.MessageBodyWriter $r16, $r20, $r21, $r26, $r32;
        javax.ws.rs.core.MediaType r6, $r31;
        boolean $z0, $z1;
        org.apache.cxf.jaxrs.impl.WriterInterceptorMBW r7;
        java.util.logging.Logger $r1, $r24;
        javax.ws.rs.ext.WriterInterceptorContext r2;
        java.lang.reflect.Type $r11, $r35;
        java.lang.StringBuilder $r23, $r25, $r29;
        java.lang.'annotation'.Annotation[] $r12, $r36;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r18;
        java.util.logging.Level $r0;
        java.lang.Boolean $r15;
        java.lang.String $r5, $r9, $r28, $r30;
        java.io.OutputStream $r37;
        org.apache.cxf.message.Message $r8, $r13, $r17, $r19;
        java.lang.RuntimeException $r22;
        javax.ws.rs.core.MultivaluedMap $r3;
        java.lang.Object $r4, $r14, $r33;
        java.lang.Class $r10, $r27, $r34;

        r7 := @this: org.apache.cxf.jaxrs.impl.WriterInterceptorMBW;

        r2 := @parameter0: javax.ws.rs.ext.WriterInterceptorContext;

        $r1 = <org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: java.util.logging.Logger LOG>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r24 = <org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: java.util.logging.Logger LOG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response EntityProvider is: ");

        $r26 = r7.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: javax.ws.rs.ext.MessageBodyWriter writer>;

        $r27 = virtualinvoke $r26.<java.lang.Object: java.lang.Class getClass()>();

        $r28 = virtualinvoke $r27.<java.lang.Class: java.lang.String getName()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.util.logging.Logger: void fine(java.lang.String)>($r30);

     label1:
        $r3 = interfaceinvoke r2.<javax.ws.rs.ext.WriterInterceptorContext: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Type");

        if $r4 != null goto label2;

        $r31 = interfaceinvoke r2.<javax.ws.rs.ext.WriterInterceptorContext: javax.ws.rs.core.MediaType getMediaType()>();

        goto label3;

     label2:
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r31 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>($r5);

     label3:
        r6 = $r31;

        $r8 = r7.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: org.apache.cxf.message.Message m>;

        $r9 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", $r9);

        $r10 = interfaceinvoke r2.<javax.ws.rs.ext.WriterInterceptorContext: java.lang.Class getType()>();

        $r11 = interfaceinvoke r2.<javax.ws.rs.ext.WriterInterceptorContext: java.lang.reflect.Type getGenericType()>();

        $r12 = interfaceinvoke r2.<javax.ws.rs.ext.WriterInterceptorContext: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r13 = r7.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: org.apache.cxf.message.Message m>;

        $r14 = interfaceinvoke $r13.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("provider.selection.property.changed");

        $r15 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if $r14 != $r15 goto label4;

        $r16 = r7.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: javax.ws.rs.ext.MessageBodyWriter writer>;

        $z1 = interfaceinvoke $r16.<javax.ws.rs.ext.MessageBodyWriter: boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>($r10, $r11, $r12, $r31);

        if $z1 != 0 goto label4;

        $r17 = r7.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: org.apache.cxf.message.Message m>;

        $r18 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>($r17);

        $r19 = r7.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: org.apache.cxf.message.Message m>;

        $r20 = virtualinvoke $r18.<org.apache.cxf.jaxrs.provider.ProviderFactory: javax.ws.rs.ext.MessageBodyWriter createMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>($r10, $r11, $r12, $r31, $r19);

        r7.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: javax.ws.rs.ext.MessageBodyWriter writer> = $r20;

        $r21 = r7.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: javax.ws.rs.ext.MessageBodyWriter writer>;

        if $r21 != null goto label4;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>("No writer available");

        throw $r22;

     label4:
        $r32 = r7.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: javax.ws.rs.ext.MessageBodyWriter writer>;

        $r33 = interfaceinvoke r2.<javax.ws.rs.ext.WriterInterceptorContext: java.lang.Object getEntity()>();

        $r34 = interfaceinvoke r2.<javax.ws.rs.ext.WriterInterceptorContext: java.lang.Class getType()>();

        $r35 = interfaceinvoke r2.<javax.ws.rs.ext.WriterInterceptorContext: java.lang.reflect.Type getGenericType()>();

        $r36 = interfaceinvoke r2.<javax.ws.rs.ext.WriterInterceptorContext: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r37 = interfaceinvoke r2.<javax.ws.rs.ext.WriterInterceptorContext: java.io.OutputStream getOutputStream()>();

        interfaceinvoke $r32.<javax.ws.rs.ext.MessageBodyWriter: void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)>($r33, $r34, $r35, $r36, r6, $r3, $r37);

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/impl/WriterInterceptorMBW;");

        <org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
