public class org.bouncycastle.crypto.modes.GCMBlockCipher extends java.lang.Object implements org.bouncycastle.crypto.modes.AEADBlockCipher
{
    private static final int BLOCK_SIZE;
    private static final byte[] ZEROES;
    private org.bouncycastle.crypto.BlockCipher cipher;
    private org.bouncycastle.crypto.modes.gcm.GCMMultiplier multiplier;
    private boolean forEncryption;
    private int macSize;
    private byte[] nonce;
    private byte[] A;
    private org.bouncycastle.crypto.params.KeyParameter keyParam;
    private byte[] H;
    private byte[] initS;
    private byte[] J0;
    private byte[] bufBlock;
    private byte[] macBlock;
    private byte[] S;
    private byte[] counter;
    private int bufOff;
    private long totalLength;

    public void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher r1;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.modes.gcm.GCMMultiplier)>(r1, null);

        return;
    }

    public void <init>(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.modes.gcm.GCMMultiplier)
    {
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        org.bouncycastle.crypto.modes.gcm.GCMMultiplier r4;
        org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        org.bouncycastle.crypto.BlockCipher r1;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        r4 := @parameter1: org.bouncycastle.crypto.modes.gcm.GCMMultiplier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = interfaceinvoke r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        if $i0 == 16 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cipher required with a block size of 16.");

        throw $r3;

     label1:
        if r4 != null goto label2;

        $r2 = new org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier;

        specialinvoke $r2.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: void <init>()>();

        r4 = $r2;

     label2:
        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = r1;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.modes.gcm.GCMMultiplier multiplier> = r4;

        return;
    }

    public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        return $r1;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.modes.GCMBlockCipher r1;
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.String $r3, $r6;
        org.bouncycastle.crypto.BlockCipher $r2;

        r1 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/GCM");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        byte[] $r3, $r6, $r7, $r9, $r10, $r13, $r14, $r15, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, r48;
        org.bouncycastle.crypto.params.ParametersWithIV r47;
        boolean z0, $z1, $z2;
        org.bouncycastle.crypto.CipherParameters r1, $r4;
        org.bouncycastle.crypto.BlockCipher $r12, $r16;
        org.bouncycastle.crypto.params.AEADParameters r41;
        java.lang.StringBuilder $r43, $r44, $r45;
        long $l4, $l5;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r46;
        org.bouncycastle.crypto.params.KeyParameter $r5, $r11, $r40;
        java.lang.IllegalArgumentException $r2, $r8, $r42;
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        org.bouncycastle.crypto.modes.gcm.GCMMultiplier $r18, $r27;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: boolean forEncryption> = z0;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] macBlock> = null;

        $z1 = r1 instanceof org.bouncycastle.crypto.params.AEADParameters;

        if $z1 == 0 goto label03;

        r41 = (org.bouncycastle.crypto.params.AEADParameters) r1;

        $r38 = virtualinvoke r41.<org.bouncycastle.crypto.params.AEADParameters: byte[] getNonce()>();

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] nonce> = $r38;

        $r39 = virtualinvoke r41.<org.bouncycastle.crypto.params.AEADParameters: byte[] getAssociatedText()>();

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] A> = $r39;

        $i7 = virtualinvoke r41.<org.bouncycastle.crypto.params.AEADParameters: int getMacSize()>();

        if $i7 < 96 goto label01;

        if $i7 > 128 goto label01;

        $i8 = $i7 % 8;

        if $i8 == 0 goto label02;

     label01:
        $r42 = new java.lang.IllegalArgumentException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for MAC size: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r46);

        throw $r42;

     label02:
        $i9 = $i7 / 8;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize> = $i9;

        $r40 = virtualinvoke r41.<org.bouncycastle.crypto.params.AEADParameters: org.bouncycastle.crypto.params.KeyParameter getKey()>();

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.params.KeyParameter keyParam> = $r40;

        goto label05;

     label03:
        $z2 = r1 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z2 == 0 goto label04;

        r47 = (org.bouncycastle.crypto.params.ParametersWithIV) r1;

        $r3 = virtualinvoke r47.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] nonce> = $r3;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] A> = null;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize> = 16;

        $r4 = virtualinvoke r47.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r5 = (org.bouncycastle.crypto.params.KeyParameter) $r4;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.params.KeyParameter keyParam> = $r5;

        goto label05;

     label04:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid parameters passed to GCM");

        throw $r2;

     label05:
        if z0 == 0 goto label06;

        $i10 = 16;

        goto label07;

     label06:
        $i0 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        $i10 = 16 + $i0;

     label07:
        $r6 = newarray (byte)[$i10];

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock> = $r6;

        $r7 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] nonce>;

        if $r7 == null goto label08;

        $r9 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] nonce>;

        $i1 = lengthof $r9;

        if $i1 >= 1 goto label09;

     label08:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IV must be at least 1 byte");

        throw $r8;

     label09:
        $r10 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] A>;

        if $r10 != null goto label10;

        $r37 = newarray (byte)[0];

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] A> = $r37;

     label10:
        $r12 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r11 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.params.KeyParameter keyParam>;

        interfaceinvoke $r12.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r11);

        $r13 = newarray (byte)[16];

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] H> = $r13;

        $r16 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r15 = <org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] ZEROES>;

        $r14 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] H>;

        interfaceinvoke $r16.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r15, 0, $r14, 0);

        $r18 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.modes.gcm.GCMMultiplier multiplier>;

        $r17 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] H>;

        interfaceinvoke $r18.<org.bouncycastle.crypto.modes.gcm.GCMMultiplier: void init(byte[])>($r17);

        $r19 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] A>;

        $r20 = specialinvoke r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] gHASH(byte[])>($r19);

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] initS> = $r20;

        $r21 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] nonce>;

        $i2 = lengthof $r21;

        if $i2 != 12 goto label11;

        $r32 = newarray (byte)[16];

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] J0> = $r32;

        $r35 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] nonce>;

        $r34 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] J0>;

        $r33 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] nonce>;

        $i6 = lengthof $r33;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r35, 0, $r34, 0, $i6);

        $r36 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] J0>;

        $r36[15] = 1;

        goto label12;

     label11:
        $r22 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] nonce>;

        $r23 = specialinvoke r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] gHASH(byte[])>($r22);

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] J0> = $r23;

        r48 = newarray (byte)[16];

        $r24 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] nonce>;

        $i3 = lengthof $r24;

        $l4 = (long) $i3;

        $l5 = $l4 * 8L;

        staticinvoke <org.bouncycastle.crypto.modes.GCMBlockCipher: void packLength(long,byte[],int)>($l5, r48, 8);

        $r25 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] J0>;

        staticinvoke <org.bouncycastle.crypto.modes.GCMBlockCipher: void xor(byte[],byte[])>($r25, r48);

        $r27 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.modes.gcm.GCMMultiplier multiplier>;

        $r26 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] J0>;

        interfaceinvoke $r27.<org.bouncycastle.crypto.modes.gcm.GCMMultiplier: void multiplyH(byte[])>($r26);

     label12:
        $r28 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] initS>;

        $r29 = staticinvoke <org.bouncycastle.util.Arrays: byte[] clone(byte[])>($r28);

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] S> = $r29;

        $r30 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] J0>;

        $r31 = staticinvoke <org.bouncycastle.util.Arrays: byte[] clone(byte[])>($r30);

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] counter> = $r31;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff> = 0;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: long totalLength> = 0L;

        return;
    }

    public byte[] getMac()
    {
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        byte[] $r1, $r2;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] macBlock>;

        $r2 = staticinvoke <org.bouncycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r2;
    }

    public int getOutputSize(int)
    {
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        i0 := @parameter0: int;

        $z0 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i5 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff>;

        $i7 = i0 + $i5;

        $i6 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        $i8 = $i7 + $i6;

        return $i8;

     label1:
        $i1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff>;

        $i3 = i0 + $i1;

        $i2 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        $i4 = $i3 - $i2;

        return $i4;
    }

    public int getUpdateOutputSize(int)
    {
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        i0 := @parameter0: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff>;

        $i2 = i0 + $i1;

        $i3 = $i2 / 16;

        $i4 = $i3 * 16;

        return $i4;
    }

    public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException
    {
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        byte[] r1;
        byte b0;
        int i1, $i2;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int process(byte,byte[],int)>(b0, r1, i1);

        return $i2;
    }

    public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException
    {
        byte[] $r1, r2, $r3, r4, $r5, $r6, $r7, $r8;
        byte $b5;
        int i0, $i1, $i2, i3, $i4, $i6, $i7, i8, $i9, $i10, $i11, $i12, i13, i14;
        boolean $z0;
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        r2 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        r4 := @parameter3: byte[];

        i8 := @parameter4: int;

        i13 = 0;

        i14 = 0;

     label1:
        if i14 == i0 goto label4;

        $r1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $i1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff>;

        $i2 = $i1 + 1;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff> = $i2;

        $i4 = i3 + i14;

        $b5 = r2[$i4];

        $r1[$i1] = $b5;

        $i7 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff>;

        $r3 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $i6 = lengthof $r3;

        if $i7 != $i6 goto label3;

        $r5 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $i9 = i8 + i13;

        specialinvoke r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: void gCTRBlock(byte[],int,byte[],int)>($r5, 16, r4, $i9);

        $z0 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: boolean forEncryption>;

        if $z0 != 0 goto label2;

        $r8 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $r7 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $i12 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 16, $r7, 0, $i12);

     label2:
        $r6 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $i10 = lengthof $r6;

        $i11 = $i10 - 16;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff> = $i11;

        i13 = i13 + 16;

     label3:
        i14 = i14 + 1;

        goto label1;

     label4:
        return i13;
    }

    private int process(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException
    {
        byte[] $r1, $r2, r3, $r4, $r5, $r6, $r7;
        byte b2;
        int $i0, $i1, $i3, $i4, i5, $i6, $i7, $i8;
        boolean $z0;
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        b2 := @parameter0: byte;

        r3 := @parameter1: byte[];

        i5 := @parameter2: int;

        $r1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $i0 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff>;

        $i1 = $i0 + 1;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff> = $i1;

        $r1[$i0] = b2;

        $i4 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff>;

        $r2 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $i3 = lengthof $r2;

        if $i4 != $i3 goto label2;

        $r4 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        specialinvoke r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: void gCTRBlock(byte[],int,byte[],int)>($r4, 16, r3, i5);

        $z0 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: boolean forEncryption>;

        if $z0 != 0 goto label1;

        $r7 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $r6 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $i8 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 16, $r6, 0, $i8);

     label1:
        $r5 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $i6 = lengthof $r5;

        $i7 = $i6 - 16;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff> = $i7;

        return 16;

     label2:
        return 0;
    }

    public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] $r1, $r2, $r3, $r5, $r7, $r8, $r9, r10, $r11, $r12, r14, $r15, $r16, $r17, $r18, r20;
        boolean $z0, $z1, $z2;
        org.bouncycastle.crypto.BlockCipher $r6;
        long $l1, $l2, $l3, $l4;
        org.bouncycastle.crypto.InvalidCipherTextException $r13, $r19;
        int $i0, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        org.bouncycastle.crypto.modes.gcm.GCMMultiplier $r4;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        r14 := @parameter0: byte[];

        i9 := @parameter1: int;

        i16 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff>;

        $z0 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: boolean forEncryption>;

        if $z0 != 0 goto label2;

        $i14 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        if i16 >= $i14 goto label1;

        $r19 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r19.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("data too short");

        throw $r19;

     label1:
        $i15 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        i16 = i16 - $i15;

     label2:
        if i16 <= 0 goto label3;

        r20 = newarray (byte)[16];

        $r16 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, r20, 0, i16);

        specialinvoke r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: void gCTRBlock(byte[],int,byte[],int)>(r20, i16, r14, i9);

     label3:
        $r17 = newarray (byte)[16];

        $r1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] A>;

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        $l2 = $l1 * 8L;

        staticinvoke <org.bouncycastle.crypto.modes.GCMBlockCipher: void packLength(long,byte[],int)>($l2, $r17, 0);

        $l3 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: long totalLength>;

        $l4 = $l3 * 8L;

        staticinvoke <org.bouncycastle.crypto.modes.GCMBlockCipher: void packLength(long,byte[],int)>($l4, $r17, 8);

        $r2 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] S>;

        staticinvoke <org.bouncycastle.crypto.modes.GCMBlockCipher: void xor(byte[],byte[])>($r2, $r17);

        $r4 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.modes.gcm.GCMMultiplier multiplier>;

        $r3 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] S>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.modes.gcm.GCMMultiplier: void multiplyH(byte[])>($r3);

        $r18 = newarray (byte)[16];

        $r6 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r5 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] J0>;

        interfaceinvoke $r6.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r5, 0, $r18, 0);

        $r7 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] S>;

        staticinvoke <org.bouncycastle.crypto.modes.GCMBlockCipher: void xor(byte[],byte[])>($r18, $r7);

        i17 = i16;

        $i5 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        $r8 = newarray (byte)[$i5];

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] macBlock> = $r8;

        $r9 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] macBlock>;

        $i6 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, $r9, 0, $i6);

        $z1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: boolean forEncryption>;

        if $z1 == 0 goto label4;

        $r15 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] macBlock>;

        $i10 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff>;

        $i12 = i9 + $i10;

        $i11 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, r14, $i12, $i11);

        $i13 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        i17 = i16 + $i13;

        goto label5;

     label4:
        $i7 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        r10 = newarray (byte)[$i7];

        $r11 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        $i8 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, i16, r10, 0, $i8);

        $r12 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] macBlock>;

        $z2 = staticinvoke <org.bouncycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>($r12, r10);

        if $z2 != 0 goto label5;

        $r13 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r13.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("mac check in GCM failed");

        throw $r13;

     label5:
        specialinvoke r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: void reset(boolean)>(0);

        return i17;
    }

    public void reset()
    {
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        specialinvoke r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: void reset(boolean)>(1);

        return;
    }

    private void reset(boolean)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r7;
        org.bouncycastle.crypto.BlockCipher $r6;
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        boolean z0;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] initS>;

        $r2 = staticinvoke <org.bouncycastle.util.Arrays: byte[] clone(byte[])>($r1);

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] S> = $r2;

        $r3 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] J0>;

        $r4 = staticinvoke <org.bouncycastle.util.Arrays: byte[] clone(byte[])>($r3);

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] counter> = $r4;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: int bufOff> = 0;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: long totalLength> = 0L;

        $r5 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        if $r5 == null goto label1;

        $r7 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] bufBlock>;

        staticinvoke <org.bouncycastle.util.Arrays: void fill(byte[],byte)>($r7, 0);

     label1:
        if z0 == 0 goto label2;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] macBlock> = null;

     label2:
        $r6 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r6.<org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }

    private void gCTRBlock(byte[], int, byte[], int)
    {
        byte[] $r1, r3, $r4, $r5, r7, $r8, $r9, $r10, $r11, r12;
        byte $b4, $b5, $b6, $b7, $b9, $b12, b16;
        boolean $z0;
        org.bouncycastle.crypto.BlockCipher $r2;
        long $l1, $l2, $l3;
        int i0, i8, $i10, $i11, $i13, $i14, i15, i17, $i18, $i20, $i22;
        org.bouncycastle.crypto.modes.GCMBlockCipher r0;
        org.bouncycastle.crypto.modes.gcm.GCMMultiplier $r6;

        r0 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        r3 := @parameter0: byte[];

        i0 := @parameter1: int;

        r7 := @parameter2: byte[];

        i8 := @parameter3: int;

        i15 = 15;

     label1:
        if i15 < 12 goto label3;

        $r9 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] counter>;

        $b12 = $r9[i15];

        $i18 = (int) $b12;

        $i13 = $i18 + 1;

        $i14 = $i13 & 255;

        b16 = (byte) $i14;

        $r10 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] counter>;

        $r10[i15] = b16;

        if b16 == 0 goto label2;

        goto label3;

     label2:
        $i20 = (int) -1;

        i15 = i15 + $i20;

        goto label1;

     label3:
        $r11 = newarray (byte)[16];

        $r2 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r1 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] counter>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r1, 0, $r11, 0);

        $z0 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label4;

        $r8 = <org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] ZEROES>;

        $i11 = 16 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, i0, $r11, i0, $i11);

        r12 = $r11;

        goto label5;

     label4:
        r12 = r3;

     label5:
        i17 = i0 - 1;

     label6:
        if i17 < 0 goto label7;

        $b5 = $r11[i17];

        $b4 = r3[i17];

        $b6 = $b5 ^ $b4;

        $b7 = (byte) $b6;

        $r11[i17] = $b7;

        $i10 = i8 + i17;

        $b9 = $r11[i17];

        r7[$i10] = $b9;

        $i22 = (int) -1;

        i17 = i17 + $i22;

        goto label6;

     label7:
        $r4 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] S>;

        staticinvoke <org.bouncycastle.crypto.modes.GCMBlockCipher: void xor(byte[],byte[])>($r4, r12);

        $r6 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.modes.gcm.GCMMultiplier multiplier>;

        $r5 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] S>;

        interfaceinvoke $r6.<org.bouncycastle.crypto.modes.gcm.GCMMultiplier: void multiplyH(byte[])>($r5);

        $l2 = r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: long totalLength>;

        $l1 = (long) i0;

        $l3 = $l2 + $l1;

        r0.<org.bouncycastle.crypto.modes.GCMBlockCipher: long totalLength> = $l3;

        return;
    }

    private byte[] gHASH(byte[])
    {
        byte[] r0, r1, r2;
        org.bouncycastle.crypto.modes.GCMBlockCipher r3;
        org.bouncycastle.crypto.modes.gcm.GCMMultiplier $r4;
        int $i0, $i1, $i2, $i3, i4;

        r3 := @this: org.bouncycastle.crypto.modes.GCMBlockCipher;

        r1 := @parameter0: byte[];

        r0 = newarray (byte)[16];

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label2;

        r2 = newarray (byte)[16];

        $i1 = lengthof r1;

        $i2 = $i1 - i4;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 16);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i4, r2, 0, $i3);

        staticinvoke <org.bouncycastle.crypto.modes.GCMBlockCipher: void xor(byte[],byte[])>(r0, r2);

        $r4 = r3.<org.bouncycastle.crypto.modes.GCMBlockCipher: org.bouncycastle.crypto.modes.gcm.GCMMultiplier multiplier>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.modes.gcm.GCMMultiplier: void multiplyH(byte[])>(r0);

        i4 = i4 + 16;

        goto label1;

     label2:
        return r0;
    }

    private static void xor(byte[], byte[])
    {
        byte[] r0, r1;
        byte $b0, $b1, $b2, $b3;
        int i4, $i6;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        i4 = 15;

     label1:
        if i4 < 0 goto label2;

        $b1 = r0[i4];

        $b0 = r1[i4];

        $b2 = $b1 ^ $b0;

        $b3 = (byte) $b2;

        r0[i4] = $b3;

        $i6 = (int) -1;

        i4 = i4 + $i6;

        goto label1;

     label2:
        return;
    }

    private static void packLength(long, byte[], int)
    {
        byte[] r0;
        int i2, $i3, $i4, $i5;
        long l0, $l1;

        l0 := @parameter0: long;

        r0 := @parameter1: byte[];

        i2 := @parameter2: int;

        $l1 = l0 >>> 32;

        $i3 = (int) $l1;

        staticinvoke <org.bouncycastle.crypto.util.Pack: void intToBigEndian(int,byte[],int)>($i3, r0, i2);

        $i5 = (int) l0;

        $i4 = i2 + 4;

        staticinvoke <org.bouncycastle.crypto.util.Pack: void intToBigEndian(int,byte[],int)>($i5, r0, $i4);

        return;
    }

    static void <clinit>()
    {
        byte[] $r0;

        <org.bouncycastle.crypto.modes.GCMBlockCipher: int BLOCK_SIZE> = 16;

        $r0 = newarray (byte)[16];

        <org.bouncycastle.crypto.modes.GCMBlockCipher: byte[] ZEROES> = $r0;

        return;
    }
}
