public final class org.waveprotocol.wave.model.conversation.Conversation$Anchor extends java.lang.Object
{
    private final org.waveprotocol.wave.model.util.Pair anchor;

    public void <init>(org.waveprotocol.wave.model.conversation.Conversation, org.waveprotocol.wave.model.conversation.ConversationBlip)
    {
        org.waveprotocol.wave.model.conversation.ConversationBlip r2;
        org.waveprotocol.wave.model.conversation.Conversation r1;
        org.waveprotocol.wave.model.util.Pair $r3;
        org.waveprotocol.wave.model.conversation.Conversation$Anchor r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.Conversation$Anchor;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.Conversation;

        r2 := @parameter1: org.waveprotocol.wave.model.conversation.ConversationBlip;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "anchor conversation cannot be null");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "anchro blip cannot be null");

        $r3 = staticinvoke <org.waveprotocol.wave.model.util.Pair: org.waveprotocol.wave.model.util.Pair of(java.lang.Object,java.lang.Object)>(r1, r2);

        r0.<org.waveprotocol.wave.model.conversation.Conversation$Anchor: org.waveprotocol.wave.model.util.Pair anchor> = $r3;

        return;
    }

    public org.waveprotocol.wave.model.conversation.Conversation getConversation()
    {
        org.waveprotocol.wave.model.conversation.Conversation $r3;
        java.lang.Object $r2;
        org.waveprotocol.wave.model.util.Pair $r1;
        org.waveprotocol.wave.model.conversation.Conversation$Anchor r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.Conversation$Anchor;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.Conversation$Anchor: org.waveprotocol.wave.model.util.Pair anchor>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.Pair: java.lang.Object getFirst()>();

        $r3 = (org.waveprotocol.wave.model.conversation.Conversation) $r2;

        return $r3;
    }

    public org.waveprotocol.wave.model.conversation.ConversationBlip getBlip()
    {
        org.waveprotocol.wave.model.conversation.ConversationBlip $r3;
        java.lang.Object $r2;
        org.waveprotocol.wave.model.util.Pair $r1;
        org.waveprotocol.wave.model.conversation.Conversation$Anchor r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.Conversation$Anchor;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.Conversation$Anchor: org.waveprotocol.wave.model.util.Pair anchor>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.Pair: java.lang.Object getSecond()>();

        $r3 = (org.waveprotocol.wave.model.conversation.ConversationBlip) $r2;

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.util.Pair $r3, $r4;
        org.waveprotocol.wave.model.conversation.Conversation$Anchor r0, r2;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.model.conversation.Conversation$Anchor;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.model.conversation.Conversation$Anchor;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.waveprotocol.wave.model.conversation.Conversation$Anchor) r1;

        $r4 = r0.<org.waveprotocol.wave.model.conversation.Conversation$Anchor: org.waveprotocol.wave.model.util.Pair anchor>;

        $r3 = r2.<org.waveprotocol.wave.model.conversation.Conversation$Anchor: org.waveprotocol.wave.model.util.Pair anchor>;

        $z1 = virtualinvoke $r4.<org.waveprotocol.wave.model.util.Pair: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.model.util.Pair $r1;
        org.waveprotocol.wave.model.conversation.Conversation$Anchor r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.Conversation$Anchor;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.Conversation$Anchor: org.waveprotocol.wave.model.util.Pair anchor>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.Pair: int hashCode()>();

        return $i0;
    }
}
