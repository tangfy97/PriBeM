public interface  org.eclipse.jdt.internal.compiler.IDocumentElementRequestor extends java.lang.Object
{

    public abstract void acceptImport(int, int, int[], char[], int, boolean, int);

    public abstract void acceptInitializer(int, int, int[], int, int, int, int);

    public abstract void acceptLineSeparatorPositions(int[]);

    public abstract void acceptPackage(int, int, int[], char[], int);

    public abstract void acceptProblem(org.eclipse.jdt.core.compiler.CategorizedProblem);

    public abstract void enterClass(int, int[], int, int, int, char[], int, int, char[], int, int, char[][], int[], int[], int);

    public abstract void enterCompilationUnit();

    public abstract void enterConstructor(int, int[], int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, char[][], int[], int[], int);

    public abstract void enterField(int, int[], int, int, char[], int, int, int, char[], int, int, int, int);

    public abstract void enterInterface(int, int[], int, int, int, char[], int, int, char[][], int[], int[], int);

    public abstract void enterMethod(int, int[], int, int, char[], int, int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, int, int, char[][], int[], int[], int);

    public abstract void exitClass(int, int);

    public abstract void exitCompilationUnit(int);

    public abstract void exitConstructor(int, int);

    public abstract void exitField(int, int);

    public abstract void exitInterface(int, int);

    public abstract void exitMethod(int, int);
}
