class bsh.BSHVariableDeclarator extends bsh.SimpleNode
{
    public java.lang.String name;

    void <init>(int)
    {
        int i0;
        bsh.BSHVariableDeclarator r0;

        r0 := @this: bsh.BSHVariableDeclarator;

        i0 := @parameter0: int;

        specialinvoke r0.<bsh.SimpleNode: void <init>(int)>(i0);

        return;
    }

    public java.lang.Object eval(bsh.BSHType, bsh.CallStack, bsh.Interpreter) throws bsh.EvalError
    {
        bsh.EvalError $r1;
        bsh.Interpreter r6;
        bsh.SimpleNode r4;
        bsh.CallStack r2;
        bsh.BSHType r5;
        bsh.Primitive $r10;
        bsh.BSHArrayInitializer $r7;
        int $i0, $i1;
        java.lang.Class $r8;
        java.lang.Object r9;
        bsh.Node $r3;
        bsh.BSHVariableDeclarator r0;
        boolean $z0;

        r0 := @this: bsh.BSHVariableDeclarator;

        r5 := @parameter0: bsh.BSHType;

        r2 := @parameter1: bsh.CallStack;

        r6 := @parameter2: bsh.Interpreter;

        r9 = null;

        $i0 = virtualinvoke r0.<bsh.BSHVariableDeclarator: int jjtGetNumChildren()>();

        if $i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<bsh.BSHVariableDeclarator: bsh.Node jjtGetChild(int)>(0);

        r4 = (bsh.SimpleNode) $r3;

        if r5 == null goto label1;

        $z0 = r4 instanceof bsh.BSHArrayInitializer;

        if $z0 == 0 goto label1;

        $r7 = (bsh.BSHArrayInitializer) r4;

        $r8 = virtualinvoke r5.<bsh.BSHType: java.lang.Class getBaseType()>();

        $i1 = virtualinvoke r5.<bsh.BSHType: int getArrayDims()>();

        r9 = virtualinvoke $r7.<bsh.BSHArrayInitializer: java.lang.Object eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter)>($r8, $i1, r2, r6);

        goto label2;

     label1:
        r9 = virtualinvoke r4.<bsh.SimpleNode: java.lang.Object eval(bsh.CallStack,bsh.Interpreter)>(r2, r6);

     label2:
        $r10 = <bsh.Primitive: bsh.Primitive VOID>;

        if r9 != $r10 goto label3;

        $r1 = new bsh.EvalError;

        specialinvoke $r1.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>("Void initializer.", r0, r2);

        throw $r1;

     label3:
        return r9;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4;
        java.lang.String $r3, $r5;
        bsh.BSHVariableDeclarator r2;

        r2 := @this: bsh.BSHVariableDeclarator;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("BSHVariableDeclarator ");

        $r3 = r2.<bsh.BSHVariableDeclarator: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
