public class org.wiztools.restclient.ui.TwoColumnTableModel extends javax.swing.table.AbstractTableModel
{
    private final java.lang.String[] colNames;
    private java.lang.Object[][] data;

    public void <init>(java.lang.String[])
    {
        org.wiztools.restclient.ui.TwoColumnTableModel r0;
        int $i0;
        java.lang.String[] r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String[][] $r1;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        r2 := @parameter0: java.lang.String[];

        specialinvoke r0.<javax.swing.table.AbstractTableModel: void <init>()>();

        $r1 = newmultiarray (java.lang.String)[0][0];

        r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data> = $r1;

        $i0 = lengthof r2;

        if $i0 == 2 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The length of array should be equal to 2.");

        throw $r3;

     label1:
        r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.String[] colNames> = r2;

        return;
    }

    public int getRowCount()
    {
        org.wiztools.restclient.ui.TwoColumnTableModel r0;
        java.lang.Object[][] $r1;
        int $i0;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        $r1 = r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getColumnCount()
    {
        org.wiztools.restclient.ui.TwoColumnTableModel r0;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        return 2;
    }

    public java.lang.Object getValueAt(int, int)
    {
        org.wiztools.restclient.ui.TwoColumnTableModel r0;
        java.lang.Object[][] $r1;
        java.lang.Object[] $r2;
        int i0, i1;
        java.lang.Object $r3;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data>;

        $r2 = $r1[i0];

        $r3 = $r2[i1];

        return $r3;
    }

    public java.lang.String getColumnName(int)
    {
        org.wiztools.restclient.ui.TwoColumnTableModel r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        i0 := @parameter0: int;

        $r1 = r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.String[] colNames>;

        $r2 = $r1[i0];

        return $r2;
    }

    public void setValueAt(java.lang.Object, int, int)
    {
        org.wiztools.restclient.ui.TwoColumnTableModel r0;
        java.lang.Object[][] $r1;
        java.lang.Object[] $r3;
        int i0, i1;
        java.lang.Object r2;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data>;

        $r3 = $r1[i0];

        $r3[i1] = r2;

        virtualinvoke r0.<org.wiztools.restclient.ui.TwoColumnTableModel: void fireTableCellUpdated(int,int)>(i0, i1);

        return;
    }

    public boolean isCellEditable(int, int)
    {
        org.wiztools.restclient.ui.TwoColumnTableModel r0;
        int i0, i1;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 1;
    }

    public void insertRow(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r4, $r6, $r9, $r10;
        java.lang.Object[][] $r1, r2, $r7, $r8;
        int i0, $i1, $i2, $i3, i4;
        org.wiztools.restclient.ui.TwoColumnTableModel r0;
        java.lang.Object r3, r5;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        r3 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Object;

        $r1 = r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data>;

        i0 = lengthof $r1;

        $i1 = i0 + 1;

        r2 = newmultiarray (java.lang.Object)[$i1][2];

        $r4 = r2[0];

        $r4[0] = r3;

        $r6 = r2[0];

        $r6[1] = r5;

        i4 = 1;

     label1:
        $i2 = i0 + 1;

        if i4 >= $i2 goto label2;

        $r8 = r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data>;

        $i3 = i4 - 1;

        $r10 = $r8[$i3];

        $r9 = r2[i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, 0, 2);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r7 = (java.lang.Object[][]) null;

        r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data> = $r7;

        r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data> = r2;

        virtualinvoke r0.<org.wiztools.restclient.ui.TwoColumnTableModel: void fireTableDataChanged()>();

        return;
    }

    public void deleteRow(int)
    {
        java.lang.Object[] $r5, $r7, $r9, $r11;
        java.lang.Object[][] $r1, r2, $r3, $r4, $r8;
        int i0, $i1, i2, $i3, i4, i5;
        boolean z0;
        org.wiztools.restclient.ui.TwoColumnTableModel r0;
        java.lang.Object $r6, $r10;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        i2 := @parameter0: int;

        $r1 = r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data>;

        i0 = lengthof $r1;

        $i1 = i0 - 1;

        r2 = newmultiarray (java.lang.Object)[$i1][2];

        z0 = 0;

        i4 = 0;

     label1:
        if i4 >= i0 goto label7;

        if i4 != i2 goto label2;

        z0 = 1;

        goto label6;

     label2:
        i5 = 0;

     label3:
        if i5 >= 2 goto label6;

        if z0 != 0 goto label4;

        $r11 = r2[i4];

        $r8 = r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data>;

        $r9 = $r8[i4];

        $r10 = $r9[i5];

        $r11[i5] = $r10;

        goto label5;

     label4:
        $i3 = i4 - 1;

        $r7 = r2[$i3];

        $r4 = r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data>;

        $r5 = $r4[i4];

        $r6 = $r5[i5];

        $r7[i5] = $r6;

     label5:
        i5 = i5 + 1;

        goto label3;

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        $r3 = (java.lang.Object[][]) null;

        r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data> = $r3;

        r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data> = r2;

        virtualinvoke r0.<org.wiztools.restclient.ui.TwoColumnTableModel: void fireTableDataChanged()>();

        return;
    }

    public void setData(org.wiztools.commons.MultiValueMap)
    {
        java.lang.Object[] $r13, $r14;
        java.lang.Object[][] r2, $r6;
        int $i0, i1;
        java.lang.String r8, r12;
        boolean $z0, $z1;
        java.util.Iterator $r4, $r10;
        java.util.Collection $r1, $r9;
        java.util.Set $r3;
        org.wiztools.restclient.ui.TwoColumnTableModel r5;
        java.lang.Object $r7, $r11;
        org.wiztools.commons.MultiValueMap r0;

        r5 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        r0 := @parameter0: org.wiztools.commons.MultiValueMap;

        $r1 = interfaceinvoke r0.<org.wiztools.commons.MultiValueMap: java.util.Collection values()>();

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        r2 = newmultiarray (java.lang.Object)[$i0][2];

        i1 = 0;

        $r3 = interfaceinvoke r0.<org.wiztools.commons.MultiValueMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke r0.<org.wiztools.commons.MultiValueMap: java.util.Collection get(java.lang.Object)>(r8);

        $r10 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.String) $r11;

        $r13 = r2[i1];

        $r13[0] = r8;

        $r14 = r2[i1];

        $r14[1] = r12;

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        $r6 = (java.lang.Object[][]) null;

        r5.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data> = $r6;

        r5.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data> = r2;

        virtualinvoke r5.<org.wiztools.restclient.ui.TwoColumnTableModel: void fireTableDataChanged()>();

        return;
    }

    public java.lang.Object[][] getData()
    {
        org.wiztools.restclient.ui.TwoColumnTableModel r0;
        java.lang.Object[][] $r1;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTableModel;

        $r1 = r0.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] data>;

        return $r1;
    }
}
