final class org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser extends java.lang.Object
{
    public static final int YYEOF;
    private static final int YY_BUFFERSIZE;
    public static final int GOT_ENCODING;
    public static final int ENCODING;
    public static final int XML_DECL;
    public static final int YYINITIAL;
    public static final int STANDALONE;
    public static final int GOT_VERSION;
    public static final int VERSION;
    public static final int GOT_STANDALONE;
    private static final java.lang.String yycmap_packed;
    private static final char[] yycmap;
    private static final int[] yy_rowMap;
    private static final java.lang.String yy_packed0;
    private static final int[] yytrans;
    private static final int YY_UNKNOWN_ERROR;
    private static final int YY_ILLEGAL_STATE;
    private static final int YY_NO_MATCH;
    private static final int YY_PUSHBACK_2BIG;
    private static final int YY_SKIP_2BIG;
    private static final java.lang.String[] YY_ERROR_MSG;
    private static final byte[] YY_ATTRIBUTE;
    private java.io.Reader yy_reader;
    private int yy_state;
    private int yy_lexical_state;
    private char[] yy_buffer;
    private char[] yy_saved_buffer;
    private int yy_markedPos;
    private int yy_pushbackPos;
    private int yy_currentPos;
    private int yy_startRead;
    private int yy_endRead;
    private int yyline;
    private int yychar;
    private int yycolumn;
    private boolean yy_atBOL;
    private boolean yy_atEOF;
    public static final int SUCCESS;
    public static final int NO_DECLARATION;
    private java.lang.String xmlVersion;
    private java.lang.String xmlEncoding;
    private boolean xmlStandalone;
    private boolean xmlStandaloneDeclared;
    private int yy_currentPos_l;
    private int yy_startRead_l;
    private int yy_markedPos_l;
    private int yy_endRead_l;
    private char[] yy_buffer_l;
    private char[] yycmap_l;
    private boolean yy_sawCR;
    private boolean yy_prev_sawCR;
    private int yyline_next;
    private int yycolumn_next;

    public void <init>(char[], int, int) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int i0, i1;
        char[] $r1, r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_lexical_state> = 0;

        $r1 = newarray (char)[0];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer> = $r1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_saved_buffer> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atBOL> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlVersion> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlEncoding> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandalone> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandaloneDeclared> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_prev_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next> = 0;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yyreset(char[],int,int)>(r2, i0, i1);

        return;
    }

    public void <init>()
    {
        char[] $r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_lexical_state> = 0;

        $r1 = newarray (char)[0];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer> = $r1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_saved_buffer> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atBOL> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlVersion> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlEncoding> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandalone> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandaloneDeclared> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_prev_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next> = 0;

        return;
    }

    public void reset(char[], int, int) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int i0, i1;
        char[] r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlEncoding> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlVersion> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandalone> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandaloneDeclared> = 0;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yyreset(char[],int,int)>(r1, i0, i1);

        return;
    }

    public java.lang.String getXMLVersion()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlVersion>;

        return $r1;
    }

    public java.lang.String getXMLEncoding()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlEncoding>;

        return $r1;
    }

    public boolean isXMLStandaloneDeclared()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandaloneDeclared>;

        return $z0;
    }

    public boolean isXMLStandalone()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandalone>;

        return $z0;
    }

    public int getCharsRead()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yychar>;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yylength()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    void <init>(java.io.Reader)
    {
        char[] $r1;
        java.io.Reader r2;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        r2 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_lexical_state> = 0;

        $r1 = newarray (char)[0];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer> = $r1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_saved_buffer> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atBOL> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlVersion> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlEncoding> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandalone> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandaloneDeclared> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_prev_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.io.Reader yy_reader> = r2;

        return;
    }

    void <init>(java.io.InputStream)
    {
        java.io.InputStreamReader $r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void <init>(java.io.Reader)>($r1);

        return;
    }

    private static int[] yy_unpack()
    {
        int[] r0;

        r0 = newarray (int)[5203];

        staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_unpack(java.lang.String,int,int[])>("\u0006\t\u0001\n$\t\u0001\u000b\u0001\f\u0005\u000b\u0001\r5\u000b\u0001\u000e\u0003\u000b\u0001\u000f\u0015\u000b\u0001\u0010\u0005\u000b\u0001\r5\u000b\u0001\u0011\u0003\u000b\u0001\u0012\u0015\u000b\u0001\u0013\u0005\u000b\u0001\r5\u000b\u0001\u0014\u0003\u000b\u0001\u0015\u0015\u000b\u0001\u0016\u0005\u000b\u0001\r#\u000b2\u0000\u0001\u0017$\u0000\u0001\u0018\u0005\u0000\u0001\u0019\u0003\u0000\u0001\u001a\u0001\u001b\u0001\u0000\u0001\u001c8\u0000\u0001\u001d\u0011\u0000\u0003\u001e\u0002\u0000\n\u001e\u0001\u0000\u0001\u001f\u0002\u001e\u0001\u0000\u0005\u001e\u0001\u0000\u000e\u001e\u0003\u0000\u0003 \u0002\u0000\n \u0001\u0000\u0001!\u0002 \u0001\u0000\u0005 \u0001\u0000\u000e \u0001\u0000\u0001\"\u0005\u0000\u0001\u0019\u0004\u0000\u0001\u001b\u0001\u0000\u0001\u001c \u0000\u0001#\u0003\u0000\n#\u0005\u0000\u0005#\u0001\u0000\u0001$\u0002#\u0002\u0000\u0001#\u0001%\u0001#\u0001&\u0001\u0000\u0001#\u0002\u0000\u0001#\u0004\u0000\u0001\'\u0003\u0000\n\'\u0005\u0000\u0005\'\u0001\u0000\u0001(\u0002\'\u0002\u0000\u0001\'\u0001)\u0001\'\u0001*\u0001\u0000\u0001\'\u0002\u0000\u0001\'\u0001\u0000\u0001+\u0005\u0000\u0001\u0019\u0006\u0000\u0001\u001c-\u0000\u0001,\u0018\u0000\u0001-\u0011\u0000\u0001.\u0018\u0000\u0001/\u0001\u0000\u00010\u0005\u0000\u0001\u0019+\u0000\u00011.\u0000\u00012/\u0000\u000133\u0000\u00014\u0013\u0000\u0003\u001e\u0002\u0000\n\u001e\u00015\u0003\u001e\u0001\u0000\u0005\u001e\u0001\u0000\u000e\u001e\u0003\u0000\u0003\u001e\u0002\u0000\n\u001e\u00015\u0001\u001e\u00016\u0001\u001e\u0001\u0000\u0005\u001e\u0001\u0000\u000e\u001e\u0003\u0000\u0003 \u0002\u0000\n \u0001\u0000\u0003 \u00015\u0005 \u0001\u0000\u000e \u0003\u0000\u0003 \u0002\u0000\n \u0001\u0000\u0001 \u00017\u0001 \u00015\u0005 \u0001\u0000\u000e \u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0001#\u00019\u0003#\u0001:\u0008#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0005#\u0001;\u0008#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0005#\u0001<\u0008#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u000e\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0001\'\u0001=\u0003\'\u0001>\u0008\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0005\'\u0001?\u0008\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0005\'\u0001@\u0008\'\u0010\u0000\u0001A&\u0000\u0001B.\u0000\u0001C&\u0000\u0001D\'\u0000\u0001E.\u0000\u0001F4\u0000\u0001G.\u0000\u0001H\u0012\u0000\u0003\u001e\u0002\u0000\n\u001e\u00015\u0002\u001e\u0001I\u0001\u0000\u0005\u001e\u0001\u0000\u000e\u001e\u0003\u0000\u0003 \u0002\u0000\n \u0001\u0000\u0002 \u0001J\u00015\u0005 \u0001\u0000\u000e \u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0002#\u0001K\u000b#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0003#\u0001L\n#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0007#\u0001M\u0006#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\n#\u0001N\u0003#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0002\'\u0001O\u000b\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0003\'\u0001P\n\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0007\'\u0001Q\u0006\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\n\'\u0001R\u0003\'\u0012\u0000\u0001S&\u0000\u0001T2\u0000\u0001S\"\u0000\u0001U&\u0000\u0001V.\u0000\u0001W,\u0000\u0001X+\u0000\u0001Y\u001c\u0000\u0003\u001e\u0002\u0000\n\u001e\u0001Z\u0003\u001e\u0001\u0000\u0005\u001e\u0001\u0000\u000e\u001e\u0003\u0000\u0003 \u0002\u0000\n \u0001\u0000\u0003 \u0001Z\u0005 \u0001\u0000\u000e \u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0001[\u0002#\u0001\u0000\u0005#\u0001\u0000\u0003#\u0001\\\u0001]\t#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0006#\u0001%\u0007#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0008#\u0001^\u0005#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0003#\u0001_\n#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0001`\u0002\'\u00018\u0005\'\u0001\u0000\u0003\'\u0001a\u0001b\t\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0006\'\u0001)\u0007\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0008\'\u0001c\u0005\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0003\'\u0001d\n\'\u0012\u0000\u0001e.\u0000\u0001e\u0015\u0000\u0001f8\u0000\u0001g3\u0000\u0001h*\u0000\u0001i\u0016\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\t#\u0001j\u0004#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0001[\u0002#\u0001\u0000\u0005#\u0001\u0000\u0004#\u0001]\t#\u0004\u0000\u0002#\u0002\u0000\n#\u0001k\u0003#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0008#\u0001l\u0005#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0004#\u0001m\t#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\t\'\u0001n\u0004\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0001`\u0002\'\u00018\u0005\'\u0001\u0000\u0004\'\u0001b\t\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u0001k\u0005\'\u0001\u0000\u000e\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0008\'\u0001o\u0005\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0004\'\u0001p\t\'\u0010\u0000\u0001q)\u0000\u0001r6\u0000\u0001s\u0013\u0000\u0002#\u0002\u0000\n#\u0001t\u0003#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002#\u0002\u0000\n#\u0001u\u0003#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0004#\u0001v\t#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u0001t\u0005\'\u0001\u0000\u000e\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u0001u\u0005\'\u0001\u0000\u000e\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0004\'\u0001w\t\'\u0011\u0000\u0001x*\u0000\u0001y#\u0000\u0001z$\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u000b#\u0001{\u0002#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u000b\'\u0001|\u0002\'\u0001\u0000\u0001x\u0001}A\u0000\u0001~!\u0000\u0001\u007f\u001e\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\f#\u0001\u0080\u0001#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\f\'\u0001\u0081\u0001\'\u0001\u0000\u0001}*\u0000\u0001~\u0001\u00829\u0000\u0001\u0083\u001d\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0003#\u0001\u0084\n#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0003\'\u0001\u0085\n\'\u0001\u0000\u0001\u00825\u0000\u0001\u0086\"\u0000\u0002#\u0002\u0000\n#\u00018\u0001\u0087\u0002#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0001\u0088\u0002\'\u00018\u0005\'\u0001\u0000\u000e\'\u0001\u0000\u0001\u0086\u0001\u0089,\u0000\u0002#\u0002\u0000\n#\u0001\u008a\u0003#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u0001\u008a\u0005\'\u0001\u0000\u000e\'\u0001\u0000\u0001\u0089)\u0000", 0, r0);

        return r0;
    }

    private static int yy_unpack(java.lang.String, int, int[])
    {
        int[] r1;
        int i0, $i1, $i3, i4, i5, i6, i7, i8, $i10, $i11, $i13, $i15;
        java.lang.String r0;
        char $c2, $c9;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i4 = 0;

        i5 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i4 >= $i1 goto label3;

        i6 = i4 + 1;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i10 = (int) $c9;

        i7 = $i10;

        i4 = i6 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i11 = (int) $c2;

        $i13 = (int) -1;

        i8 = $i11 + $i13;

     label2:
        $i3 = i5;

        i5 = i5 + 1;

        r1[$i3] = i8;

        $i15 = (int) -1;

        i7 = i7 + $i15;

        if i7 > 0 goto label2;

        goto label1;

     label3:
        return i5;
    }

    private static char[] yy_unpack_cmap(java.lang.String)
    {
        char $c0, $c6;
        int $i1, i2, i3, i4, i5, $i7, $i9;
        char[] r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r0 = newarray (char)[65536];

        i2 = 0;

        i3 = 0;

     label1:
        if i2 >= 144 goto label3;

        i4 = i2 + 1;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i7 = (int) $c6;

        i5 = $i7;

        i2 = i4 + 1;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

     label2:
        $i1 = i3;

        i3 = i3 + 1;

        r0[$i1] = $c0;

        $i9 = (int) -1;

        i5 = i5 + $i9;

        if i5 > 0 goto label2;

        goto label1;

     label3:
        return r0;
    }

    private boolean yy_refill() throws java.io.IOException
    {
        java.io.Reader $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        if $i0 <= 0 goto label1;

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i12 = $i11 - $i10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i13, $r7, 0, $i12);

        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        $i14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i16 = $i15 - $i14;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead> = $i16;

        $i18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos>;

        $i17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i19 = $i18 - $i17;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos> = $i19;

        $i21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i22 = $i21 - $i20;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = $i22;

        $i24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_pushbackPos>;

        $i23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i25 = $i24 - $i23;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_pushbackPos> = $i25;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead> = 0;

     label1:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i1 = lengthof $r1;

        if $i2 >= $i1 goto label2;

        $i9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos>;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i8 = lengthof $r5;

        if $i9 < $i8 goto label3;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i3 = lengthof $r2;

        $i4 = $i3 * 2;

        $r6 = newarray (char)[$i4];

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i5 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r6, 0, $i5);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer> = $r6;

     label3:
        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.io.Reader yy_reader>;

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i27 = lengthof $r11;

        $i28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        $i29 = $i27 - $i28;

        $i30 = virtualinvoke $r9.<java.io.Reader: int read(char[],int,int)>($r10, $i26, $i29);

        if $i30 >= 0 goto label4;

        return 1;

     label4:
        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        $i7 = $i6 + $i30;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead> = $i7;

        return 0;
    }

    public final void yyclose() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int $i0;
        java.io.Reader $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atEOF> = 1;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead> = $i0;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.io.Reader yy_reader>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.io.Reader yy_reader>;

        virtualinvoke $r2.<java.io.Reader: void close()>();

     label1:
        return;
    }

    public final void yyreset(java.io.Reader) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        char[] $r1, $r3;
        java.io.Reader r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        r2 := @parameter0: java.io.Reader;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yyclose()>();

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_saved_buffer>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_saved_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer> = $r3;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_saved_buffer> = null;

     label1:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.io.Reader yy_reader> = r2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atBOL> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atEOF> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_pushbackPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yychar> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_lexical_state> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_state> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next> = 0;

        return;
    }

    public final void yyreset(char[], int, int) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int i0, i1, $i2, $i3;
        char[] $r1, r2, $r3, $r4;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yyclose()>();

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_saved_buffer>;

        if $r1 != null goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_saved_buffer> = $r4;

     label1:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer> = r2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.io.Reader yy_reader> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atBOL> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atEOF> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead> = i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_pushbackPos> = i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos> = i0;

        $i2 = i0 + i1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead> = $i2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yychar> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_lexical_state> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_state> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next> = 0;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead_l> = $i3;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer_l> = $r3;

        return;
    }

    public final int yystate()
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_lexical_state>;

        return $i0;
    }

    public final void yybegin(int)
    {
        int i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        i0 := @parameter0: int;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_lexical_state> = i0;

        return;
    }

    public final java.lang.String yytext()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r1;
        int $i0, $i1, $i2, $i3;
        char[] $r2;
        java.lang.String $r0;

        r1 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $r0 = new java.lang.String;

        $r2 = r1.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i3 = r1.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i1 = r1.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i0 = r1.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i2 = $i1 - $i0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, $i3, $i2);

        return $r0;
    }

    public final java.lang.String yytext(int, int)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r1;
        int i0, $i1, i2, $i3;
        char[] $r2;
        java.lang.String $r0;

        r1 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r0 = new java.lang.String;

        $r2 = r1.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i1 = r1.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i3 = $i1 + i0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, $i3, i2);

        return $r0;
    }

    public final void yynextAction()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline> = $i0;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn> = $i1;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead> = $i2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos> = $i2;

        return;
    }

    public final int yynextChar() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i9, $i11, $i12, $i13;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        char c7;
        char[] $r1, $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        if $i1 >= $i0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i6 = $i5 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = $i6;

        c7 = $r3[$i5];

        goto label4;

     label1:
        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atEOF>;

        if $z0 == 0 goto label2;

        $i9 = (int) -1;

        return $i9;

     label2:
        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_refill()>();

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer_l> = $r1;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead_l> = $i2;

        if $z1 == 0 goto label3;

        $i11 = (int) -1;

        return $i11;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = $i4;

        c7 = $r2[$i3];

     label4:
        $i12 = (int) c7;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_doCount(int)>($i12);

        $i13 = (int) c7;

        return $i13;
    }

    public final int yynextBufferChar() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int $i0, $i1, $i3, $i4;
        char[] $r1;
        char c2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = $i1;

        c2 = $r1[$i0];

        $i3 = (int) c2;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_doCount(int)>($i3);

        $i4 = (int) c2;

        return $i4;
    }

    private final int yy_doCount(int)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 10: goto label2;
            case 13: goto label1;
            default: goto label4;
        };

     label1:
        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next>;

        $i2 = $i1 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next> = $i2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_sawCR> = 1;

        goto label5;

     label2:
        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_sawCR>;

        if $z0 == 0 goto label3;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_sawCR> = 0;

        goto label5;

     label3:
        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next> = $i4;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next> = 0;

        goto label5;

     label4:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_sawCR> = 0;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next>;

        $i6 = $i5 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next> = $i6;

     label5:
        return i0;
    }

    public final char yycharat(int)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int i0, $i1, $i2;
        char[] $r1;
        char $c3;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i2 = $i1 + i0;

        $c3 = $r1[$i2];

        return $c3;
    }

    public final int yybufferLeft()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public final void yyskip(int)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i2 = $i1 + i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = $i2;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos_l> = $i3;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        if $i5 <= $i4 goto label1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yy_ScanError(int)>(4);

     label1:
        return;
    }

    public final int yylength()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    private void yy_ScanError(int)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r4;
        int i0;
        java.lang.Error $r1;
        java.lang.String[] $r0, $r3;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.String r5;

        r4 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        i0 := @parameter0: int;

     label1:
        $r0 = <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String[] YY_ERROR_MSG>;

        r5 = $r0[i0];

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String[] YY_ERROR_MSG>;

        r5 = $r3[0];

     label4:
        $r1 = new java.lang.Error;

        specialinvoke $r1.<java.lang.Error: void <init>(java.lang.String)>(r5);

        throw $r1;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    private void yypushback(int)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        char $c6;
        int i0, $i1, $i2, $i3, $i4, $i5, i7, $i8, $i9;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yylength()>();

        if i0 <= $i1 goto label1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yy_ScanError(int)>(3);

     label1:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        $i3 = $i2 - i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = $i3;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yyline_next> = $i4;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yycolumn_next> = $i5;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_prev_sawCR>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_sawCR> = $z0;

        i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

     label2:
        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        if i7 >= $i8 goto label3;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        $c6 = $r1[i7];

        $i9 = (int) $c6;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_doCount(int)>($i9);

        i7 = i7 + 1;

        goto label2;

     label3:
        return;
    }

    public int parse() throws java.io.IOException, org.apache.xmlbeans.impl.piccolo.io.FileFormatException
    {
        byte[] r5;
        byte b13, $b14, $b15, $b16, $b18;
        java.lang.String $r9, $r10;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser r0;
        char[] $r1, $r2, $r6, $r7, $r8, $r12;
        org.apache.xmlbeans.impl.piccolo.io.FileFormatException $r13;
        int[] r3, r4;
        boolean $z0, $z1, z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, $i36, $i37, $i38, $i39, i40, $i41, $i43, $i45, $i47, $i48, $i50, $i51, $i52, $i53, $i55, $i57, $i59, $i61, $i63;
        char $c9;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead_l> = $i0;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer_l> = $r1;

        $r2 = <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yycmap>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yycmap_l> = $r2;

        r3 = <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int[] yytrans>;

        r4 = <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int[] yy_rowMap>;

        r5 = <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: byte[] YY_ATTRIBUTE>;

        $i43 = (int) -1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_pushbackPos> = $i43;

        $i45 = (int) -1;

        i28 = $i45;

     label01:
        $i29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos_l> = $i29;

        $i30 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yychar>;

        $i31 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos_l>;

        $i32 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i33 = $i31 - $i32;

        $i34 = $i30 + $i33;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yychar> = $i34;

        $i47 = (int) -1;

        i35 = $i47;

        $i36 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos_l>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead> = $i36;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos> = $i36;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos_l> = $i36;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead_l> = $i36;

        $i37 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_lexical_state>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_state> = $i37;

        z2 = 0;

     label02:
        $i38 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos_l>;

        $i39 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead_l>;

        if $i38 >= $i39 goto label03;

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer_l>;

        $i25 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos_l>;

        $i26 = $i25 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos_l> = $i26;

        i40 = $r12[$i25];

        goto label06;

     label03:
        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atEOF>;

        if $z0 == 0 goto label04;

        i40 = -1;

        goto label12;

     label04:
        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos_l>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos> = $i1;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos_l>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = $i2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_pushbackPos> = i28;

        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_refill()>();

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos_l> = $i3;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos_l> = $i4;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer_l> = $r6;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_endRead_l> = $i5;

        i28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_pushbackPos>;

        if $z1 == 0 goto label05;

        i40 = -1;

        goto label12;

     label05:
        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_buffer_l>;

        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos_l>;

        $i7 = $i6 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos_l> = $i7;

        i40 = $r7[$i6];

     label06:
        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_state>;

        $i10 = r4[$i8];

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yycmap_l>;

        $c9 = $r8[i40];

        $i48 = (int) $c9;

        $i11 = $i10 + $i48;

        $i27 = r3[$i11];

        $i50 = (int) -1;

        if $i27 != $i50 goto label07;

        goto label12;

     label07:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_state> = $i27;

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_state>;

        b13 = r5[$i12];

        $b14 = b13 & 2;

        $i51 = (int) $b14;

        if $i51 != 2 goto label08;

        i28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos_l>;

     label08:
        $b15 = b13 & 1;

        if $b15 != 1 goto label11;

        $b16 = b13 & 4;

        $i52 = (int) $b16;

        if $i52 != 4 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        z2 = $z3;

        i35 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_state>;

        $i17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos_l>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos_l> = $i17;

        $b18 = b13 & 8;

        $i53 = (int) $b18;

        if $i53 != 8 goto label11;

        goto label12;

     label11:
        goto label02;

     label12:
        $i41 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos_l>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = $i41;

        if z2 == 0 goto label13;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_markedPos> = i28;

     label13:
        tableswitch(i35)
        {
            case 8: goto label30;
            case 9: goto label30;
            case 10: goto label22;
            case 11: goto label22;
            case 12: goto label22;
            case 13: goto label22;
            case 14: goto label22;
            case 15: goto label22;
            case 16: goto label22;
            case 17: goto label22;
            case 18: goto label22;
            case 19: goto label22;
            case 20: goto label22;
            case 21: goto label22;
            case 22: goto label46;
            case 23: goto label46;
            case 24: goto label46;
            case 25: goto label46;
            case 26: goto label46;
            case 27: goto label46;
            case 28: goto label28;
            case 29: goto label46;
            case 30: goto label46;
            case 31: goto label46;
            case 32: goto label46;
            case 33: goto label46;
            case 34: goto label46;
            case 35: goto label46;
            case 36: goto label46;
            case 37: goto label46;
            case 38: goto label46;
            case 39: goto label46;
            case 40: goto label46;
            case 41: goto label46;
            case 42: goto label46;
            case 43: goto label46;
            case 44: goto label46;
            case 45: goto label46;
            case 46: goto label46;
            case 47: goto label46;
            case 48: goto label46;
            case 49: goto label46;
            case 50: goto label46;
            case 51: goto label46;
            case 52: goto label34;
            case 53: goto label46;
            case 54: goto label46;
            case 55: goto label36;
            case 56: goto label46;
            case 57: goto label46;
            case 58: goto label46;
            case 59: goto label46;
            case 60: goto label46;
            case 61: goto label46;
            case 62: goto label46;
            case 63: goto label46;
            case 64: goto label46;
            case 65: goto label46;
            case 66: goto label46;
            case 67: goto label46;
            case 68: goto label46;
            case 69: goto label46;
            case 70: goto label46;
            case 71: goto label46;
            case 72: goto label46;
            case 73: goto label46;
            case 74: goto label46;
            case 75: goto label46;
            case 76: goto label46;
            case 77: goto label46;
            case 78: goto label46;
            case 79: goto label46;
            case 80: goto label46;
            case 81: goto label46;
            case 82: goto label24;
            case 83: goto label46;
            case 84: goto label46;
            case 85: goto label46;
            case 86: goto label46;
            case 87: goto label46;
            case 88: goto label46;
            case 89: goto label18;
            case 90: goto label46;
            case 91: goto label46;
            case 92: goto label46;
            case 93: goto label46;
            case 94: goto label46;
            case 95: goto label46;
            case 96: goto label46;
            case 97: goto label46;
            case 98: goto label46;
            case 99: goto label46;
            case 100: goto label26;
            case 101: goto label20;
            case 102: goto label46;
            case 103: goto label46;
            case 104: goto label46;
            case 105: goto label46;
            case 106: goto label16;
            case 107: goto label46;
            case 108: goto label46;
            case 109: goto label46;
            case 110: goto label46;
            case 111: goto label46;
            case 112: goto label46;
            case 113: goto label46;
            case 114: goto label46;
            case 115: goto label14;
            case 116: goto label44;
            case 117: goto label46;
            case 118: goto label46;
            case 119: goto label46;
            case 120: goto label46;
            case 121: goto label46;
            case 122: goto label46;
            case 123: goto label46;
            case 124: goto label32;
            case 125: goto label46;
            case 126: goto label46;
            case 127: goto label46;
            case 128: goto label46;
            case 129: goto label38;
            case 130: goto label46;
            case 131: goto label46;
            case 132: goto label46;
            case 133: goto label46;
            case 134: goto label46;
            case 135: goto label46;
            case 136: goto label42;
            case 137: goto label40;
            case 138: goto label46;
            case 139: goto label15;
            case 140: goto label17;
            case 141: goto label19;
            case 142: goto label21;
            case 143: goto label23;
            case 144: goto label25;
            case 145: goto label27;
            case 146: goto label29;
            case 147: goto label31;
            case 148: goto label33;
            case 149: goto label35;
            case 150: goto label37;
            case 151: goto label39;
            case 152: goto label41;
            case 153: goto label43;
            case 154: goto label45;
            default: goto label46;
        };

     label14:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlEncoding> = "UTF-16";

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(5);

     label15:
        goto label01;

     label16:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlEncoding> = "UTF-8";

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(5);

     label17:
        goto label01;

     label18:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlVersion> = "1.0";

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(3);

     label19:
        goto label01;

     label20:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(1);

     label21:
        goto label01;

     label22:
        $r13 = new org.apache.xmlbeans.impl.piccolo.io.FileFormatException;

        $i55 = (int) -1;

        $i57 = (int) -1;

        specialinvoke $r13.<org.apache.xmlbeans.impl.piccolo.io.FileFormatException: void <init>(java.lang.String,int,int)>("XML Declaration not well-formed", $i55, $i57);

        throw $r13;

     label23:
        goto label01;

     label24:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandalone> = 0;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(7);

     label25:
        goto label01;

     label26:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandalone> = 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(7);

     label27:
        goto label01;

     label28:
        return 1;

     label29:
        goto label01;

     label30:
        $i59 = (int) -1;

        return $i59;

     label31:
        goto label01;

     label32:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(2);

     label33:
        goto label01;

     label34:
        $i21 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yylength()>();

        $i22 = $i21 - 2;

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String yytext(int,int)>(1, $i22);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlVersion> = $r10;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(3);

     label35:
        goto label01;

     label36:
        $i19 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yylength()>();

        $i20 = $i19 - 2;

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String yytext(int,int)>(1, $i20);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlEncoding> = $r9;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(5);

     label37:
        goto label01;

     label38:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(4);

     label39:
        goto label01;

     label40:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlEncoding> = "ISO-8859-1";

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(5);

     label41:
        goto label01;

     label42:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean xmlStandaloneDeclared> = 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(6);

     label43:
        goto label01;

     label44:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String xmlEncoding> = "US-ASCII";

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yybegin(int)>(5);

     label45:
        goto label01;

     label46:
        $i61 = (int) -1;

        if i40 != $i61 goto label47;

        $i24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_startRead>;

        $i23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int yy_currentPos>;

        if $i24 != $i23 goto label47;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean yy_atEOF> = 1;

        $i63 = (int) -1;

        return $i63;

     label47:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void yy_ScanError(int)>(2);

        goto label01;
    }

    static void <clinit>()
    {
        byte[] $r4;
        int[] $r1, $r2;
        char[] $r0;
        java.lang.String[] $r3;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int NO_DECLARATION> = -1;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int SUCCESS> = 1;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int YY_SKIP_2BIG> = 4;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int YY_PUSHBACK_2BIG> = 3;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int YY_NO_MATCH> = 2;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int YY_ILLEGAL_STATE> = 1;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int YY_UNKNOWN_ERROR> = 0;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String yy_packed0> = "\u0006\t\u0001\n$\t\u0001\u000b\u0001\f\u0005\u000b\u0001\r5\u000b\u0001\u000e\u0003\u000b\u0001\u000f\u0015\u000b\u0001\u0010\u0005\u000b\u0001\r5\u000b\u0001\u0011\u0003\u000b\u0001\u0012\u0015\u000b\u0001\u0013\u0005\u000b\u0001\r5\u000b\u0001\u0014\u0003\u000b\u0001\u0015\u0015\u000b\u0001\u0016\u0005\u000b\u0001\r#\u000b2\u0000\u0001\u0017$\u0000\u0001\u0018\u0005\u0000\u0001\u0019\u0003\u0000\u0001\u001a\u0001\u001b\u0001\u0000\u0001\u001c8\u0000\u0001\u001d\u0011\u0000\u0003\u001e\u0002\u0000\n\u001e\u0001\u0000\u0001\u001f\u0002\u001e\u0001\u0000\u0005\u001e\u0001\u0000\u000e\u001e\u0003\u0000\u0003 \u0002\u0000\n \u0001\u0000\u0001!\u0002 \u0001\u0000\u0005 \u0001\u0000\u000e \u0001\u0000\u0001\"\u0005\u0000\u0001\u0019\u0004\u0000\u0001\u001b\u0001\u0000\u0001\u001c \u0000\u0001#\u0003\u0000\n#\u0005\u0000\u0005#\u0001\u0000\u0001$\u0002#\u0002\u0000\u0001#\u0001%\u0001#\u0001&\u0001\u0000\u0001#\u0002\u0000\u0001#\u0004\u0000\u0001\'\u0003\u0000\n\'\u0005\u0000\u0005\'\u0001\u0000\u0001(\u0002\'\u0002\u0000\u0001\'\u0001)\u0001\'\u0001*\u0001\u0000\u0001\'\u0002\u0000\u0001\'\u0001\u0000\u0001+\u0005\u0000\u0001\u0019\u0006\u0000\u0001\u001c-\u0000\u0001,\u0018\u0000\u0001-\u0011\u0000\u0001.\u0018\u0000\u0001/\u0001\u0000\u00010\u0005\u0000\u0001\u0019+\u0000\u00011.\u0000\u00012/\u0000\u000133\u0000\u00014\u0013\u0000\u0003\u001e\u0002\u0000\n\u001e\u00015\u0003\u001e\u0001\u0000\u0005\u001e\u0001\u0000\u000e\u001e\u0003\u0000\u0003\u001e\u0002\u0000\n\u001e\u00015\u0001\u001e\u00016\u0001\u001e\u0001\u0000\u0005\u001e\u0001\u0000\u000e\u001e\u0003\u0000\u0003 \u0002\u0000\n \u0001\u0000\u0003 \u00015\u0005 \u0001\u0000\u000e \u0003\u0000\u0003 \u0002\u0000\n \u0001\u0000\u0001 \u00017\u0001 \u00015\u0005 \u0001\u0000\u000e \u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0001#\u00019\u0003#\u0001:\u0008#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0005#\u0001;\u0008#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0005#\u0001<\u0008#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u000e\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0001\'\u0001=\u0003\'\u0001>\u0008\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0005\'\u0001?\u0008\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0005\'\u0001@\u0008\'\u0010\u0000\u0001A&\u0000\u0001B.\u0000\u0001C&\u0000\u0001D\'\u0000\u0001E.\u0000\u0001F4\u0000\u0001G.\u0000\u0001H\u0012\u0000\u0003\u001e\u0002\u0000\n\u001e\u00015\u0002\u001e\u0001I\u0001\u0000\u0005\u001e\u0001\u0000\u000e\u001e\u0003\u0000\u0003 \u0002\u0000\n \u0001\u0000\u0002 \u0001J\u00015\u0005 \u0001\u0000\u000e \u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0002#\u0001K\u000b#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0003#\u0001L\n#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0007#\u0001M\u0006#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\n#\u0001N\u0003#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0002\'\u0001O\u000b\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0003\'\u0001P\n\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0007\'\u0001Q\u0006\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\n\'\u0001R\u0003\'\u0012\u0000\u0001S&\u0000\u0001T2\u0000\u0001S\"\u0000\u0001U&\u0000\u0001V.\u0000\u0001W,\u0000\u0001X+\u0000\u0001Y\u001c\u0000\u0003\u001e\u0002\u0000\n\u001e\u0001Z\u0003\u001e\u0001\u0000\u0005\u001e\u0001\u0000\u000e\u001e\u0003\u0000\u0003 \u0002\u0000\n \u0001\u0000\u0003 \u0001Z\u0005 \u0001\u0000\u000e \u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0001[\u0002#\u0001\u0000\u0005#\u0001\u0000\u0003#\u0001\\\u0001]\t#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0006#\u0001%\u0007#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0008#\u0001^\u0005#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0003#\u0001_\n#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0001`\u0002\'\u00018\u0005\'\u0001\u0000\u0003\'\u0001a\u0001b\t\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0006\'\u0001)\u0007\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0008\'\u0001c\u0005\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0003\'\u0001d\n\'\u0012\u0000\u0001e.\u0000\u0001e\u0015\u0000\u0001f8\u0000\u0001g3\u0000\u0001h*\u0000\u0001i\u0016\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\t#\u0001j\u0004#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0001[\u0002#\u0001\u0000\u0005#\u0001\u0000\u0004#\u0001]\t#\u0004\u0000\u0002#\u0002\u0000\n#\u0001k\u0003#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0008#\u0001l\u0005#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0004#\u0001m\t#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\t\'\u0001n\u0004\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0001`\u0002\'\u00018\u0005\'\u0001\u0000\u0004\'\u0001b\t\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u0001k\u0005\'\u0001\u0000\u000e\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0008\'\u0001o\u0005\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0004\'\u0001p\t\'\u0010\u0000\u0001q)\u0000\u0001r6\u0000\u0001s\u0013\u0000\u0002#\u0002\u0000\n#\u0001t\u0003#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002#\u0002\u0000\n#\u0001u\u0003#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0004#\u0001v\t#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u0001t\u0005\'\u0001\u0000\u000e\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u0001u\u0005\'\u0001\u0000\u000e\'\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0004\'\u0001w\t\'\u0011\u0000\u0001x*\u0000\u0001y#\u0000\u0001z$\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u000b#\u0001{\u0002#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u000b\'\u0001|\u0002\'\u0001\u0000\u0001x\u0001}A\u0000\u0001~!\u0000\u0001\u007f\u001e\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\f#\u0001\u0080\u0001#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\f\'\u0001\u0081\u0001\'\u0001\u0000\u0001}*\u0000\u0001~\u0001\u00829\u0000\u0001\u0083\u001d\u0000\u0002#\u0002\u0000\n#\u00018\u0003#\u0001\u0000\u0005#\u0001\u0000\u0003#\u0001\u0084\n#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u00018\u0005\'\u0001\u0000\u0003\'\u0001\u0085\n\'\u0001\u0000\u0001\u00825\u0000\u0001\u0086\"\u0000\u0002#\u0002\u0000\n#\u00018\u0001\u0087\u0002#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0001\u0088\u0002\'\u00018\u0005\'\u0001\u0000\u000e\'\u0001\u0000\u0001\u0086\u0001\u0089,\u0000\u0002#\u0002\u0000\n#\u0001\u008a\u0003#\u0001\u0000\u0005#\u0001\u0000\u000e#\u0004\u0000\u0002\'\u0002\u0000\n\'\u0001\u0000\u0003\'\u0001\u008a\u0005\'\u0001\u0000\u000e\'\u0001\u0000\u0001\u0089)\u0000";

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String yycmap_packed> = "\t\u0000\u0001\u0001\u0001\u0001\u0002\u0000\u0001\u0001\u0012\u0000\u0001\u0001\u0001\u0000\u0001\u0012\u0004\u0000\u0001\u0016\u0005\u0000\u0001 \u0001\u0014\u0001\u0000\u0001\u0015\u0001\u0013\u0003\u0005\u0001(\u0001&\u0001\u0005\u0001!\u0001)\u0001\u0003\u0001\u0000\u0001\u0006\u0001\u0002\u0001\u001c\u0001\u0007\u0001\u0000\u0001#\u0001\u0004\u0001$\u0002\u0004\u0001\u001f\u0002\u0004\u0001%\u0005\u0004\u0001\'\u0003\u0004\u0001\"\u0001\u001e\u0001\u001d\u0005\u0004\u0004\u0000\u0001\u0005\u0001\u0000\u0001\u001b\u0001\u0004\u0001\u0017\u0001\u0018\u0001\f\u0001\u0004\u0001\u0019\u0001\u0004\u0001\u000f\u0002\u0004\u0001\n\u0001\t\u0001\u0011\u0001\u0010\u0002\u0004\u0001\r\u0001\u000e\u0001\u001a\u0001\u0004\u0001\u000b\u0001\u0004\u0001\u0008\u0001*\u0001\u0004\uff85\u0000";

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int GOT_STANDALONE> = 7;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int VERSION> = 2;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int GOT_VERSION> = 3;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int STANDALONE> = 6;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int YYINITIAL> = 0;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int XML_DECL> = 1;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int ENCODING> = 4;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int GOT_ENCODING> = 5;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int YY_BUFFERSIZE> = 0;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int YYEOF> = -1;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yy_unpack_cmap(java.lang.String)>("\t\u0000\u0001\u0001\u0001\u0001\u0002\u0000\u0001\u0001\u0012\u0000\u0001\u0001\u0001\u0000\u0001\u0012\u0004\u0000\u0001\u0016\u0005\u0000\u0001 \u0001\u0014\u0001\u0000\u0001\u0015\u0001\u0013\u0003\u0005\u0001(\u0001&\u0001\u0005\u0001!\u0001)\u0001\u0003\u0001\u0000\u0001\u0006\u0001\u0002\u0001\u001c\u0001\u0007\u0001\u0000\u0001#\u0001\u0004\u0001$\u0002\u0004\u0001\u001f\u0002\u0004\u0001%\u0005\u0004\u0001\'\u0003\u0004\u0001\"\u0001\u001e\u0001\u001d\u0005\u0004\u0004\u0000\u0001\u0005\u0001\u0000\u0001\u001b\u0001\u0004\u0001\u0017\u0001\u0018\u0001\f\u0001\u0004\u0001\u0019\u0001\u0004\u0001\u000f\u0002\u0004\u0001\n\u0001\t\u0001\u0011\u0001\u0010\u0002\u0004\u0001\r\u0001\u000e\u0001\u001a\u0001\u0004\u0001\u000b\u0001\u0004\u0001\u0008\u0001*\u0001\u0004\uff85\u0000");

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: char[] yycmap> = $r0;

        $r1 = newarray (int)[138];

        $r1[0] = 0;

        $r1[1] = 43;

        $r1[2] = 86;

        $r1[3] = 129;

        $r1[4] = 172;

        $r1[5] = 215;

        $r1[6] = 258;

        $r1[7] = 301;

        $r1[8] = 344;

        $r1[9] = 387;

        $r1[10] = 344;

        $r1[11] = 430;

        $r1[12] = 473;

        $r1[13] = 516;

        $r1[14] = 559;

        $r1[15] = 602;

        $r1[16] = 645;

        $r1[17] = 688;

        $r1[18] = 731;

        $r1[19] = 774;

        $r1[20] = 817;

        $r1[21] = 860;

        $r1[22] = 903;

        $r1[23] = 430;

        $r1[24] = 473;

        $r1[25] = 946;

        $r1[26] = 989;

        $r1[27] = 1032;

        $r1[28] = 344;

        $r1[29] = 1075;

        $r1[30] = 1118;

        $r1[31] = 1161;

        $r1[32] = 1204;

        $r1[33] = 602;

        $r1[34] = 1247;

        $r1[35] = 1290;

        $r1[36] = 1333;

        $r1[37] = 1376;

        $r1[38] = 1419;

        $r1[39] = 1462;

        $r1[40] = 1505;

        $r1[41] = 1548;

        $r1[42] = 731;

        $r1[43] = 1591;

        $r1[44] = 1634;

        $r1[45] = 1677;

        $r1[46] = 1720;

        $r1[47] = 860;

        $r1[48] = 1763;

        $r1[49] = 1806;

        $r1[50] = 1849;

        $r1[51] = 1892;

        $r1[52] = 344;

        $r1[53] = 1935;

        $r1[54] = 1978;

        $r1[55] = 344;

        $r1[56] = 2021;

        $r1[57] = 2064;

        $r1[58] = 2107;

        $r1[59] = 2150;

        $r1[60] = 2193;

        $r1[61] = 2236;

        $r1[62] = 2279;

        $r1[63] = 2322;

        $r1[64] = 2365;

        $r1[65] = 2408;

        $r1[66] = 2451;

        $r1[67] = 2494;

        $r1[68] = 2537;

        $r1[69] = 2580;

        $r1[70] = 2623;

        $r1[71] = 2666;

        $r1[72] = 2709;

        $r1[73] = 2752;

        $r1[74] = 2795;

        $r1[75] = 2838;

        $r1[76] = 2881;

        $r1[77] = 2924;

        $r1[78] = 2967;

        $r1[79] = 3010;

        $r1[80] = 3053;

        $r1[81] = 3096;

        $r1[82] = 344;

        $r1[83] = 3139;

        $r1[84] = 3182;

        $r1[85] = 3225;

        $r1[86] = 3268;

        $r1[87] = 3311;

        $r1[88] = 3354;

        $r1[89] = 344;

        $r1[90] = 3397;

        $r1[91] = 3440;

        $r1[92] = 3483;

        $r1[93] = 3526;

        $r1[94] = 3569;

        $r1[95] = 3612;

        $r1[96] = 3655;

        $r1[97] = 3698;

        $r1[98] = 3741;

        $r1[99] = 3784;

        $r1[100] = 344;

        $r1[101] = 3225;

        $r1[102] = 3827;

        $r1[103] = 3870;

        $r1[104] = 3913;

        $r1[105] = 3956;

        $r1[106] = 344;

        $r1[107] = 3999;

        $r1[108] = 4042;

        $r1[109] = 4085;

        $r1[110] = 4128;

        $r1[111] = 4171;

        $r1[112] = 4214;

        $r1[113] = 4257;

        $r1[114] = 4300;

        $r1[115] = 344;

        $r1[116] = 344;

        $r1[117] = 4343;

        $r1[118] = 4386;

        $r1[119] = 4429;

        $r1[120] = 4472;

        $r1[121] = 4515;

        $r1[122] = 4558;

        $r1[123] = 4601;

        $r1[124] = 4644;

        $r1[125] = 4687;

        $r1[126] = 4730;

        $r1[127] = 4773;

        $r1[128] = 4816;

        $r1[129] = 4859;

        $r1[130] = 4902;

        $r1[131] = 4945;

        $r1[132] = 4988;

        $r1[133] = 5031;

        $r1[134] = 5074;

        $r1[135] = 5117;

        $r1[136] = 5160;

        $r1[137] = 344;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int[] yy_rowMap> = $r1;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int[] yy_unpack()>();

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int[] yytrans> = $r2;

        $r3 = newarray (java.lang.String)[5];

        $r3[0] = "Unkown internal scanner error";

        $r3[1] = "Internal error: unknown state";

        $r3[2] = "Error: could not match input";

        $r3[3] = "Error: pushback value was too large";

        $r3[4] = "Error: skip value was too large";

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String[] YY_ERROR_MSG> = $r3;

        $r4 = newarray (byte)[138];

        $r4[0] = 0;

        $r4[1] = 0;

        $r4[2] = 0;

        $r4[3] = 0;

        $r4[4] = 0;

        $r4[5] = 0;

        $r4[6] = 0;

        $r4[7] = 0;

        $r4[8] = 9;

        $r4[9] = 1;

        $r4[10] = 9;

        $r4[11] = 1;

        $r4[12] = 1;

        $r4[13] = 1;

        $r4[14] = 1;

        $r4[15] = 1;

        $r4[16] = 1;

        $r4[17] = 1;

        $r4[18] = 1;

        $r4[19] = 1;

        $r4[20] = 1;

        $r4[21] = 1;

        $r4[22] = 0;

        $r4[23] = 0;

        $r4[24] = 0;

        $r4[25] = 0;

        $r4[26] = 0;

        $r4[27] = 0;

        $r4[28] = 9;

        $r4[29] = 0;

        $r4[30] = 0;

        $r4[31] = 0;

        $r4[32] = 0;

        $r4[33] = 0;

        $r4[34] = 0;

        $r4[35] = 0;

        $r4[36] = 0;

        $r4[37] = 0;

        $r4[38] = 0;

        $r4[39] = 0;

        $r4[40] = 0;

        $r4[41] = 0;

        $r4[42] = 0;

        $r4[43] = 0;

        $r4[44] = 0;

        $r4[45] = 0;

        $r4[46] = 0;

        $r4[47] = 0;

        $r4[48] = 0;

        $r4[49] = 0;

        $r4[50] = 0;

        $r4[51] = 0;

        $r4[52] = 9;

        $r4[53] = 0;

        $r4[54] = 0;

        $r4[55] = 9;

        $r4[56] = 0;

        $r4[57] = 0;

        $r4[58] = 0;

        $r4[59] = 0;

        $r4[60] = 0;

        $r4[61] = 0;

        $r4[62] = 0;

        $r4[63] = 0;

        $r4[64] = 0;

        $r4[65] = 0;

        $r4[66] = 0;

        $r4[67] = 0;

        $r4[68] = 0;

        $r4[69] = 0;

        $r4[70] = 0;

        $r4[71] = 0;

        $r4[72] = 0;

        $r4[73] = 0;

        $r4[74] = 0;

        $r4[75] = 0;

        $r4[76] = 0;

        $r4[77] = 0;

        $r4[78] = 0;

        $r4[79] = 0;

        $r4[80] = 0;

        $r4[81] = 0;

        $r4[82] = 9;

        $r4[83] = 0;

        $r4[84] = 0;

        $r4[85] = 2;

        $r4[86] = 0;

        $r4[87] = 0;

        $r4[88] = 0;

        $r4[89] = 9;

        $r4[90] = 0;

        $r4[91] = 0;

        $r4[92] = 0;

        $r4[93] = 0;

        $r4[94] = 0;

        $r4[95] = 0;

        $r4[96] = 0;

        $r4[97] = 0;

        $r4[98] = 0;

        $r4[99] = 0;

        $r4[100] = 9;

        $r4[101] = 5;

        $r4[102] = 0;

        $r4[103] = 0;

        $r4[104] = 0;

        $r4[105] = 0;

        $r4[106] = 9;

        $r4[107] = 0;

        $r4[108] = 0;

        $r4[109] = 0;

        $r4[110] = 0;

        $r4[111] = 0;

        $r4[112] = 0;

        $r4[113] = 0;

        $r4[114] = 0;

        $r4[115] = 9;

        $r4[116] = 9;

        $r4[117] = 0;

        $r4[118] = 0;

        $r4[119] = 0;

        $r4[120] = 0;

        $r4[121] = 0;

        $r4[122] = 0;

        $r4[123] = 0;

        $r4[124] = 1;

        $r4[125] = 0;

        $r4[126] = 0;

        $r4[127] = 0;

        $r4[128] = 0;

        $r4[129] = 1;

        $r4[130] = 0;

        $r4[131] = 0;

        $r4[132] = 0;

        $r4[133] = 0;

        $r4[134] = 0;

        $r4[135] = 0;

        $r4[136] = 1;

        $r4[137] = 9;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: byte[] YY_ATTRIBUTE> = $r4;

        return;
    }
}
