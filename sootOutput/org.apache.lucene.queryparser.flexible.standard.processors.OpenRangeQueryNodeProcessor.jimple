public class org.apache.lucene.queryparser.flexible.standard.processors.OpenRangeQueryNodeProcessor extends org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl
{
    public static final java.lang.String OPEN_RANGE_TOKEN;

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.standard.processors.OpenRangeQueryNodeProcessor r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.processors.OpenRangeQueryNodeProcessor;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl: void <init>()>();

        return;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode postProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r3, r5;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0;
        java.lang.String $r8, $r9, $r15, $r16;
        org.apache.lucene.queryparser.flexible.standard.processors.OpenRangeQueryNodeProcessor r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.CharSequence $r6, $r7, r13, r14;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldValuePairQueryNode $r2, $r4;
        org.apache.lucene.queryparser.flexible.standard.nodes.TermRangeQueryNode r1;
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence $r10, $r11;

        r12 := @this: org.apache.lucene.queryparser.flexible.standard.processors.OpenRangeQueryNodeProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $z0 = r0 instanceof org.apache.lucene.queryparser.flexible.standard.nodes.TermRangeQueryNode;

        if $z0 == 0 goto label5;

        r1 = (org.apache.lucene.queryparser.flexible.standard.nodes.TermRangeQueryNode) r0;

        $r2 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.standard.nodes.TermRangeQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.FieldValuePairQueryNode getLowerBound()>();

        r3 = (org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode) $r2;

        $r4 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.standard.nodes.TermRangeQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.FieldValuePairQueryNode getUpperBound()>();

        r5 = (org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode) $r4;

        $r6 = virtualinvoke r3.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence getText()>();

        r13 = $r6;

        $r7 = virtualinvoke r5.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence getText()>();

        r14 = $r7;

        $r8 = "*";

        $r9 = virtualinvoke r5.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.String getTextAsString()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label2;

        $z4 = $r7 instanceof org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        if $z4 == 0 goto label1;

        $r11 = (org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence) $r7;

        $z5 = virtualinvoke $r11.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean wasEscaped(int)>(0);

        if $z5 != 0 goto label2;

     label1:
        r14 = "";

     label2:
        $r15 = "*";

        $r16 = virtualinvoke r3.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.String getTextAsString()>();

        $z6 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z6 == 0 goto label4;

        $z2 = $r6 instanceof org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        if $z2 == 0 goto label3;

        $r10 = (org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence) $r6;

        $z3 = virtualinvoke $r10.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean wasEscaped(int)>(0);

        if $z3 != 0 goto label4;

     label3:
        r13 = "";

     label4:
        virtualinvoke r3.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: void setText(java.lang.CharSequence)>(r13);

        virtualinvoke r5.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: void setText(java.lang.CharSequence)>(r14);

     label5:
        return r0;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode preProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0;
        org.apache.lucene.queryparser.flexible.standard.processors.OpenRangeQueryNodeProcessor r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.standard.processors.OpenRangeQueryNodeProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        return r0;
    }

    protected java.util.List setChildrenOrder(java.util.List) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        java.util.List r0;
        org.apache.lucene.queryparser.flexible.standard.processors.OpenRangeQueryNodeProcessor r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.standard.processors.OpenRangeQueryNodeProcessor;

        r0 := @parameter0: java.util.List;

        return r0;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.queryparser.flexible.standard.processors.OpenRangeQueryNodeProcessor: java.lang.String OPEN_RANGE_TOKEN> = "*";

        return;
    }
}
