class org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression extends java.lang.Object implements org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode
{
    private java.lang.String operator;
    private java.util.List subnodes;
    final org.apache.cxf.jaxrs.ext.search.FiqlParser this$0;

    public void <init>(org.apache.cxf.jaxrs.ext.search.FiqlParser, java.lang.String)
    {
        org.apache.cxf.jaxrs.ext.search.FiqlParser r1;
        org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression r0;
        java.lang.String r3;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.search.FiqlParser;

        r3 := @parameter1: java.lang.String;

        r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: org.apache.cxf.jaxrs.ext.search.FiqlParser this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.util.List subnodes> = $r2;

        r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.lang.String operator> = r3;

        return;
    }

    public void add(org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode)
    {
        java.util.List $r2;
        org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression r0;
        org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode r1;

        r0 := @this: org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode;

        $r2 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.util.List subnodes>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getSubnodes()
    {
        java.util.List $r1, $r2;
        org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression;

        $r1 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.util.List subnodes>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression r0;
        org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode $r13;
        int $i0, $i1, i2, $i3;
        java.lang.String $r1, $r8, $r15, $r20, r21;
        boolean $z0;
        java.util.List $r11, $r16, $r22;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r14, $r17, $r18, $r19;
        java.lang.Object $r12;

        r0 := @this: org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression;

        $r1 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.lang.String operator>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(";");

        if $z0 == 0 goto label1;

        $r20 = "AND";

        goto label2;

     label1:
        $r20 = "OR";

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":[");

        r21 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = 0;

     label3:
        $r22 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.util.List subnodes>;

        $i3 = interfaceinvoke $r22.<java.util.List: int size()>();

        if i2 >= $i3 goto label5;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r11 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.util.List subnodes>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i2);

        $r13 = (org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode) $r12;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r21 = $r15;

        $r16 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.util.List subnodes>;

        $i0 = interfaceinvoke $r16.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        if i2 >= $i1 goto label4;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public org.apache.cxf.jaxrs.ext.search.SearchCondition build() throws org.apache.cxf.jaxrs.ext.search.FiqlParseException
    {
        org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression r0;
        org.apache.cxf.jaxrs.ext.search.AndSearchCondition $r5;
        org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition $r18;
        java.util.Map $r25;
        org.apache.cxf.jaxrs.ext.search.OrSearchCondition $r6;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6;
        org.apache.cxf.jaxrs.ext.search.Beanspector $r12, $r15, $r20, $r29;
        java.util.List $r1, $r16, $r38;
        java.lang.Throwable $r33;
        org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode r35, r36, r40;
        java.util.ArrayList $r37;
        java.util.LinkedHashMap $r13;
        java.lang.String $r3, $r4, $r9, $r10, $r24, $r26, $r30;
        org.apache.cxf.jaxrs.ext.search.FiqlParser$Comparison r23;
        org.apache.cxf.jaxrs.ext.search.FiqlParser $r11, $r14, $r19, $r28;
        java.util.Iterator $r2, $r17, $r39;
        java.lang.RuntimeException $r34;
        java.lang.Object $r7, $r21, $r22, $r27, $r31, $r32;
        org.apache.cxf.jaxrs.ext.search.SearchCondition $r8;

        r0 := @this: org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression;

        z5 = 0;

        $r1 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.util.List subnodes>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r32 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r35 = (org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode) $r32;

        $z4 = r35 instanceof org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression;

        if $z4 == 0 goto label02;

        z5 = 1;

        goto label03;

     label02:
        goto label01;

     label03:
        if z5 != 0 goto label09;

        $r10 = ";";

        $r9 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.lang.String operator>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label09;

        $r11 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: org.apache.cxf.jaxrs.ext.search.FiqlParser this$0>;

        $r12 = staticinvoke <org.apache.cxf.jaxrs.ext.search.FiqlParser: org.apache.cxf.jaxrs.ext.search.Beanspector access$000(org.apache.cxf.jaxrs.ext.search.FiqlParser)>($r11);

        if $r12 == null goto label09;

     label04:
        $r13 = new java.util.LinkedHashMap;

        specialinvoke $r13.<java.util.LinkedHashMap: void <init>()>();

        $r14 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: org.apache.cxf.jaxrs.ext.search.FiqlParser this$0>;

        $r15 = staticinvoke <org.apache.cxf.jaxrs.ext.search.FiqlParser: org.apache.cxf.jaxrs.ext.search.Beanspector access$000(org.apache.cxf.jaxrs.ext.search.FiqlParser)>($r14);

        virtualinvoke $r15.<org.apache.cxf.jaxrs.ext.search.Beanspector: org.apache.cxf.jaxrs.ext.search.Beanspector instantiate()>();

        $r16 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.util.List subnodes>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r22 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r36 = (org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode) $r22;

        r23 = (org.apache.cxf.jaxrs.ext.search.FiqlParser$Comparison) r36;

        $r24 = virtualinvoke r23.<org.apache.cxf.jaxrs.ext.search.FiqlParser$Comparison: java.lang.String getName()>();

        $r25 = staticinvoke <org.apache.cxf.jaxrs.ext.search.FiqlParser: java.util.Map access$100()>();

        $r26 = virtualinvoke r23.<org.apache.cxf.jaxrs.ext.search.FiqlParser$Comparison: java.lang.String getOperator()>();

        $r27 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r27);

        $r28 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: org.apache.cxf.jaxrs.ext.search.FiqlParser this$0>;

        $r29 = staticinvoke <org.apache.cxf.jaxrs.ext.search.FiqlParser: org.apache.cxf.jaxrs.ext.search.Beanspector access$000(org.apache.cxf.jaxrs.ext.search.FiqlParser)>($r28);

        $r30 = virtualinvoke r23.<org.apache.cxf.jaxrs.ext.search.FiqlParser$Comparison: java.lang.String getName()>();

        $r31 = virtualinvoke r23.<org.apache.cxf.jaxrs.ext.search.FiqlParser$Comparison: java.lang.Object getValue()>();

        virtualinvoke $r29.<org.apache.cxf.jaxrs.ext.search.Beanspector: org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.lang.String,java.lang.Object)>($r30, $r31);

        goto label05;

     label06:
        $r18 = new org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition;

        $r19 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: org.apache.cxf.jaxrs.ext.search.FiqlParser this$0>;

        $r20 = staticinvoke <org.apache.cxf.jaxrs.ext.search.FiqlParser: org.apache.cxf.jaxrs.ext.search.Beanspector access$000(org.apache.cxf.jaxrs.ext.search.FiqlParser)>($r19);

        $r21 = virtualinvoke $r20.<org.apache.cxf.jaxrs.ext.search.Beanspector: java.lang.Object getBean()>();

        specialinvoke $r18.<org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition: void <init>(java.util.Map,java.lang.Object)>($r13, $r21);

     label07:
        return $r18;

     label08:
        $r33 := @caughtexception;

        $r34 = new java.lang.RuntimeException;

        specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r33);

        throw $r34;

     label09:
        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        $r38 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.util.List subnodes>;

        $r39 = interfaceinvoke $r38.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z6 = interfaceinvoke $r39.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label11;

        $r7 = interfaceinvoke $r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode) $r7;

        $r8 = interfaceinvoke r40.<org.apache.cxf.jaxrs.ext.search.FiqlParser$ASTNode: org.apache.cxf.jaxrs.ext.search.SearchCondition build()>();

        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label10;

     label11:
        $r4 = ",";

        $r3 = r0.<org.apache.cxf.jaxrs.ext.search.FiqlParser$SubExpression: java.lang.String operator>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label12;

        $r6 = new org.apache.cxf.jaxrs.ext.search.OrSearchCondition;

        specialinvoke $r6.<org.apache.cxf.jaxrs.ext.search.OrSearchCondition: void <init>(java.util.List)>($r37);

        return $r6;

     label12:
        $r5 = new org.apache.cxf.jaxrs.ext.search.AndSearchCondition;

        specialinvoke $r5.<org.apache.cxf.jaxrs.ext.search.AndSearchCondition: void <init>(java.util.List)>($r37);

        return $r5;

        catch java.lang.Throwable from label04 to label07 with label08;
    }
}
