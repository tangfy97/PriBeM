public class org.bouncycastle.jce.provider.JDKPSSSigner extends java.security.SignatureSpi
{
    private java.security.AlgorithmParameters engineParams;
    private java.security.spec.PSSParameterSpec paramSpec;
    private java.security.spec.PSSParameterSpec originalSpec;
    private org.bouncycastle.crypto.AsymmetricBlockCipher signer;
    private org.bouncycastle.crypto.Digest contentDigest;
    private org.bouncycastle.crypto.Digest mgfDigest;
    private int saltLength;
    private byte trailer;
    private boolean isRaw;
    private org.bouncycastle.crypto.signers.PSSSigner pss;

    private byte getTrailer(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        org.bouncycastle.jce.provider.JDKPSSSigner r1;

        r1 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        return -68;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown trailer field");

        throw $r0;
    }

    private void setupContentDigest()
    {
        org.bouncycastle.crypto.Digest $r1;
        org.bouncycastle.jce.provider.util.NullDigest $r2;
        org.bouncycastle.jce.provider.JDKPSSSigner r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $z0 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: boolean isRaw>;

        if $z0 == 0 goto label1;

        $r2 = new org.bouncycastle.jce.provider.util.NullDigest;

        specialinvoke $r2.<org.bouncycastle.jce.provider.util.NullDigest: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest contentDigest> = $r2;

        goto label2;

     label1:
        $r1 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest contentDigest> = $r1;

     label2:
        return;
    }

    protected void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, java.security.spec.PSSParameterSpec)
    {
        org.bouncycastle.jce.provider.JDKPSSSigner r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;
        java.security.spec.PSSParameterSpec r2;

        r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        r2 := @parameter1: java.security.spec.PSSParameterSpec;

        specialinvoke r0.<org.bouncycastle.jce.provider.JDKPSSSigner: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,java.security.spec.PSSParameterSpec,boolean)>(r1, r2, 0);

        return;
    }

    protected void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, java.security.spec.PSSParameterSpec, boolean)
    {
        java.security.spec.PSSParameterSpec r2, $r3, $r6, $r7, $r8;
        org.bouncycastle.crypto.Digest $r5;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;
        byte $b2;
        int $i0, $i1;
        java.lang.String $r4;
        org.bouncycastle.jce.provider.JDKPSSSigner r0;
        boolean z0;

        r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        r2 := @parameter1: java.security.spec.PSSParameterSpec;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.security.SignatureSpi: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher signer> = r1;

        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec originalSpec> = r2;

        if r2 != null goto label1;

        $r8 = <java.security.spec.PSSParameterSpec: java.security.spec.PSSParameterSpec DEFAULT>;

        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec> = $r8;

        goto label2;

     label1:
        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec> = r2;

     label2:
        $r3 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $r4 = virtualinvoke $r3.<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r5 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r4);

        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest mgfDigest> = $r5;

        $r6 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $i0 = virtualinvoke $r6.<java.security.spec.PSSParameterSpec: int getSaltLength()>();

        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: int saltLength> = $i0;

        $r7 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $i1 = virtualinvoke $r7.<java.security.spec.PSSParameterSpec: int getTrailerField()>();

        $b2 = specialinvoke r0.<org.bouncycastle.jce.provider.JDKPSSSigner: byte getTrailer(int)>($i1);

        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: byte trailer> = $b2;

        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: boolean isRaw> = z0;

        specialinvoke r0.<org.bouncycastle.jce.provider.JDKPSSSigner: void setupContentDigest()>();

        return;
    }

    protected void engineInitVerify(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.crypto.signers.PSSSigner $r2, $r7;
        java.security.PublicKey r0;
        org.bouncycastle.crypto.Digest $r3, $r4;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r5;
        org.bouncycastle.crypto.params.RSAKeyParameters $r8;
        byte $b0;
        java.security.interfaces.RSAPublicKey $r6;
        int $i1;
        java.security.InvalidKeyException $r9;
        org.bouncycastle.jce.provider.JDKPSSSigner r1;
        boolean $z0;

        r1 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        r0 := @parameter0: java.security.PublicKey;

        $z0 = r0 instanceof java.security.interfaces.RSAPublicKey;

        if $z0 != 0 goto label1;

        $r9 = new java.security.InvalidKeyException;

        specialinvoke $r9.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Supplied key is not a RSAPublicKey instance");

        throw $r9;

     label1:
        $r2 = new org.bouncycastle.crypto.signers.PSSSigner;

        $r5 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher signer>;

        $r4 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest contentDigest>;

        $r3 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        $i1 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: int saltLength>;

        $b0 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: byte trailer>;

        specialinvoke $r2.<org.bouncycastle.crypto.signers.PSSSigner: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int,byte)>($r5, $r4, $r3, $i1, $b0);

        r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss> = $r2;

        $r7 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        $r6 = (java.security.interfaces.RSAPublicKey) r0;

        $r8 = staticinvoke <org.bouncycastle.jce.provider.RSAUtil: org.bouncycastle.crypto.params.RSAKeyParameters generatePublicKeyParameter(java.security.interfaces.RSAPublicKey)>($r6);

        virtualinvoke $r7.<org.bouncycastle.crypto.signers.PSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r8);

        return;
    }

    protected void engineInitSign(java.security.PrivateKey, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        org.bouncycastle.crypto.signers.PSSSigner $r2, $r8;
        java.security.interfaces.RSAPrivateKey $r7;
        org.bouncycastle.crypto.Digest $r3, $r4;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r5;
        java.security.SecureRandom r10;
        org.bouncycastle.crypto.params.RSAKeyParameters $r9;
        byte $b0;
        java.security.PrivateKey r0;
        org.bouncycastle.crypto.params.ParametersWithRandom $r6;
        int $i1;
        java.security.InvalidKeyException $r11;
        org.bouncycastle.jce.provider.JDKPSSSigner r1;
        boolean $z0;

        r1 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        r0 := @parameter0: java.security.PrivateKey;

        r10 := @parameter1: java.security.SecureRandom;

        $z0 = r0 instanceof java.security.interfaces.RSAPrivateKey;

        if $z0 != 0 goto label1;

        $r11 = new java.security.InvalidKeyException;

        specialinvoke $r11.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Supplied key is not a RSAPrivateKey instance");

        throw $r11;

     label1:
        $r2 = new org.bouncycastle.crypto.signers.PSSSigner;

        $r5 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher signer>;

        $r4 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest contentDigest>;

        $r3 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        $i1 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: int saltLength>;

        $b0 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: byte trailer>;

        specialinvoke $r2.<org.bouncycastle.crypto.signers.PSSSigner: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int,byte)>($r5, $r4, $r3, $i1, $b0);

        r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss> = $r2;

        $r8 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        $r6 = new org.bouncycastle.crypto.params.ParametersWithRandom;

        $r7 = (java.security.interfaces.RSAPrivateKey) r0;

        $r9 = staticinvoke <org.bouncycastle.jce.provider.RSAUtil: org.bouncycastle.crypto.params.RSAKeyParameters generatePrivateKeyParameter(java.security.interfaces.RSAPrivateKey)>($r7);

        specialinvoke $r6.<org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>($r9, r10);

        virtualinvoke $r8.<org.bouncycastle.crypto.signers.PSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r6);

        return;
    }

    protected void engineInitSign(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.crypto.signers.PSSSigner $r2, $r7;
        java.security.interfaces.RSAPrivateKey $r6;
        org.bouncycastle.crypto.Digest $r3, $r4;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r5;
        org.bouncycastle.crypto.params.RSAKeyParameters $r8;
        byte $b0;
        java.security.PrivateKey r0;
        int $i1;
        java.security.InvalidKeyException $r9;
        org.bouncycastle.jce.provider.JDKPSSSigner r1;
        boolean $z0;

        r1 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        r0 := @parameter0: java.security.PrivateKey;

        $z0 = r0 instanceof java.security.interfaces.RSAPrivateKey;

        if $z0 != 0 goto label1;

        $r9 = new java.security.InvalidKeyException;

        specialinvoke $r9.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Supplied key is not a RSAPrivateKey instance");

        throw $r9;

     label1:
        $r2 = new org.bouncycastle.crypto.signers.PSSSigner;

        $r5 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher signer>;

        $r4 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest contentDigest>;

        $r3 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        $i1 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: int saltLength>;

        $b0 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: byte trailer>;

        specialinvoke $r2.<org.bouncycastle.crypto.signers.PSSSigner: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int,byte)>($r5, $r4, $r3, $i1, $b0);

        r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss> = $r2;

        $r7 = r1.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        $r6 = (java.security.interfaces.RSAPrivateKey) r0;

        $r8 = staticinvoke <org.bouncycastle.jce.provider.RSAUtil: org.bouncycastle.crypto.params.RSAKeyParameters generatePrivateKeyParameter(java.security.interfaces.RSAPrivateKey)>($r6);

        virtualinvoke $r7.<org.bouncycastle.crypto.signers.PSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r8);

        return;
    }

    protected void engineUpdate(byte) throws java.security.SignatureException
    {
        byte b0;
        org.bouncycastle.jce.provider.JDKPSSSigner r0;
        org.bouncycastle.crypto.signers.PSSSigner $r1;

        r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        b0 := @parameter0: byte;

        $r1 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        virtualinvoke $r1.<org.bouncycastle.crypto.signers.PSSSigner: void update(byte)>(b0);

        return;
    }

    protected void engineUpdate(byte[], int, int) throws java.security.SignatureException
    {
        byte[] r1;
        org.bouncycastle.crypto.signers.PSSSigner $r2;
        int i0, i1;
        org.bouncycastle.jce.provider.JDKPSSSigner r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        virtualinvoke $r2.<org.bouncycastle.crypto.signers.PSSSigner: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    protected byte[] engineSign() throws java.security.SignatureException
    {
        byte[] $r2;
        org.bouncycastle.crypto.signers.PSSSigner $r1;
        java.security.SignatureException $r4;
        org.bouncycastle.crypto.CryptoException $r3;
        java.lang.String $r5;
        org.bouncycastle.jce.provider.JDKPSSSigner r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

     label1:
        $r1 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.signers.PSSSigner: byte[] generateSignature()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.security.SignatureException;

        $r5 = virtualinvoke $r3.<org.bouncycastle.crypto.CryptoException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.security.SignatureException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch org.bouncycastle.crypto.CryptoException from label1 to label2 with label3;
    }

    protected boolean engineVerify(byte[]) throws java.security.SignatureException
    {
        byte[] r1;
        org.bouncycastle.crypto.signers.PSSSigner $r2;
        org.bouncycastle.jce.provider.JDKPSSSigner r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        $z0 = virtualinvoke $r2.<org.bouncycastle.crypto.signers.PSSSigner: boolean verifySignature(byte[])>(r1);

        return $z0;
    }

    protected void engineSetParameter(java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidParameterException
    {
        java.security.InvalidParameterException $r1, $r15, $r21, $r22, $r26, $r30;
        byte $b2;
        java.security.spec.AlgorithmParameterSpec r0, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.bouncycastle.asn1.DERObjectIdentifier $r24;
        java.lang.StringBuilder $r16, $r17, $r19, $r31, $r32, $r35;
        java.security.spec.PSSParameterSpec r2, $r4, $r13, $r14, $r27, $r33;
        org.bouncycastle.crypto.Digest $r12;
        int $i0, $i1;
        java.lang.String $r5, $r9, $r10, $r11, $r18, $r20, $r23, $r25, $r28, $r29, $r34, $r36;
        java.security.spec.MGF1ParameterSpec r8;
        org.bouncycastle.jce.provider.JDKPSSSigner r3;

        r3 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        r0 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $z0 = r0 instanceof java.security.spec.PSSParameterSpec;

        if $z0 == 0 goto label6;

        r2 = (java.security.spec.PSSParameterSpec) r0;

        $r4 = r3.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec originalSpec>;

        if $r4 == null goto label1;

        $r27 = r3.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec originalSpec>;

        $r28 = virtualinvoke $r27.<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r29 = virtualinvoke r2.<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>();

        $z5 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: boolean isSameDigest(java.lang.String,java.lang.String)>($r28, $r29);

        if $z5 != 0 goto label1;

        $r30 = new java.security.InvalidParameterException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameter must be using ");

        $r33 = r3.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec originalSpec>;

        $r34 = virtualinvoke $r33.<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r36);

        throw $r30;

     label1:
        $r5 = virtualinvoke r2.<java.security.spec.PSSParameterSpec: java.lang.String getMGFAlgorithm()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MGF1");

        if $z1 != 0 goto label2;

        $r23 = virtualinvoke r2.<java.security.spec.PSSParameterSpec: java.lang.String getMGFAlgorithm()>();

        $r24 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_mgf1>;

        $r25 = virtualinvoke $r24.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z4 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z4 != 0 goto label2;

        $r26 = new java.security.InvalidParameterException;

        specialinvoke $r26.<java.security.InvalidParameterException: void <init>(java.lang.String)>("unknown mask generation function specified");

        throw $r26;

     label2:
        $r6 = virtualinvoke r2.<java.security.spec.PSSParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        $z2 = $r6 instanceof java.security.spec.MGF1ParameterSpec;

        if $z2 != 0 goto label3;

        $r22 = new java.security.InvalidParameterException;

        specialinvoke $r22.<java.security.InvalidParameterException: void <init>(java.lang.String)>("unkown MGF parameters");

        throw $r22;

     label3:
        $r7 = virtualinvoke r2.<java.security.spec.PSSParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        r8 = (java.security.spec.MGF1ParameterSpec) $r7;

        $r9 = virtualinvoke r8.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r10 = virtualinvoke r2.<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>();

        $z3 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: boolean isSameDigest(java.lang.String,java.lang.String)>($r9, $r10);

        if $z3 != 0 goto label4;

        $r21 = new java.security.InvalidParameterException;

        specialinvoke $r21.<java.security.InvalidParameterException: void <init>(java.lang.String)>("digest algorithm for MGF should be the same as for PSS parameters.");

        throw $r21;

     label4:
        $r11 = virtualinvoke r8.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r12 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r11);

        if $r12 != null goto label5;

        $r15 = new java.security.InvalidParameterException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on MGF digest algorithm: ");

        $r18 = virtualinvoke r8.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label5:
        r3.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.AlgorithmParameters engineParams> = null;

        r3.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec> = r2;

        r3.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest mgfDigest> = $r12;

        $r13 = r3.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $i0 = virtualinvoke $r13.<java.security.spec.PSSParameterSpec: int getSaltLength()>();

        r3.<org.bouncycastle.jce.provider.JDKPSSSigner: int saltLength> = $i0;

        $r14 = r3.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $i1 = virtualinvoke $r14.<java.security.spec.PSSParameterSpec: int getTrailerField()>();

        $b2 = specialinvoke r3.<org.bouncycastle.jce.provider.JDKPSSSigner: byte getTrailer(int)>($i1);

        r3.<org.bouncycastle.jce.provider.JDKPSSSigner: byte trailer> = $b2;

        specialinvoke r3.<org.bouncycastle.jce.provider.JDKPSSSigner: void setupContentDigest()>();

        goto label7;

     label6:
        $r1 = new java.security.InvalidParameterException;

        specialinvoke $r1.<java.security.InvalidParameterException: void <init>(java.lang.String)>("Only PSSParameterSpec supported");

        throw $r1;

     label7:
        return;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        java.security.spec.PSSParameterSpec $r2, $r4;
        java.lang.RuntimeException $r7;
        java.security.AlgorithmParameters $r1, $r3, $r5, $r9;
        java.lang.Exception $r6;
        java.lang.String $r8;
        org.bouncycastle.jce.provider.JDKPSSSigner r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r1 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.AlgorithmParameters engineParams>;

        if $r1 != null goto label4;

        $r2 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        if $r2 == null goto label4;

     label1:
        $r3 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>("PSS", "BC");

        r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.AlgorithmParameters engineParams> = $r3;

        $r5 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.AlgorithmParameters engineParams>;

        $r4 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        virtualinvoke $r5.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r6.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        $r9 = r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.AlgorithmParameters engineParams>;

        return $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void engineSetParameter(java.lang.String, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r3;
        java.lang.String r2;
        org.bouncycastle.jce.provider.JDKPSSSigner r1;

        r1 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r0;
    }

    protected java.lang.Object engineGetParameter(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.String r2;
        org.bouncycastle.jce.provider.JDKPSSSigner r1;

        r1 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineGetParameter unsupported");

        throw $r0;
    }
}
