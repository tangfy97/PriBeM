public class org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy extends java.lang.Object implements org.apache.xmlbeans.impl.inst2xsd.XsdGenStrategy
{
    static final java.lang.String _xsi;
    static final javax.xml.namespace.QName _xsiNil;
    static final javax.xml.namespace.QName _xsiType;
    private org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$inst2xsd$RussianDollStrategy;

    public void <init>()
    {
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext $r1;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext;

        specialinvoke $r1.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: void <init>(org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy)>(r0);

        r0.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext> = $r1;

        return;
    }

    public void processDoc(org.apache.xmlbeans.XmlObject[], org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions, org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder)
    {
        org.apache.xmlbeans.XmlCursor $r2;
        org.apache.xmlbeans.impl.inst2xsd.util.Element $r8;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r6;
        org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder r7;
        org.apache.xmlbeans.XmlObject[] r0;
        java.lang.StringBuffer $r3;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r4;
        int $i0, i1;
        org.apache.xmlbeans.XmlObject r1;
        java.lang.String $r5, $r9;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject[];

        r6 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        r7 := @parameter2: org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label5;

        r1 = r0[i1];

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

     label2:
        $z2 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z2 != 0 goto label4;

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z0 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean isComment()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        goto label2;

     label3:
        $z1 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean isEnddoc()>();

        if $z1 == 0 goto label2;

        return;

     label4:
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.util.Element processElement(org.apache.xmlbeans.XmlCursor,java.lang.String,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder)>($r2, $r5, r6, r7);

        virtualinvoke $r8.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setGlobal(boolean)>(1);

        virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.util.Element addGlobalElement(org.apache.xmlbeans.impl.inst2xsd.util.Element,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>($r8, r7, r6);

        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    protected org.apache.xmlbeans.impl.inst2xsd.util.Element addGlobalElement(org.apache.xmlbeans.impl.inst2xsd.util.Element, org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder, org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)
    {
        java.lang.AssertionError $r8;
        org.apache.xmlbeans.impl.inst2xsd.util.Element r1, $r3;
        org.apache.xmlbeans.impl.inst2xsd.util.Type $r5, $r6;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r7;
        org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder r0;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r4;
        javax.xml.namespace.QName $r2;
        boolean $z0, $z1;

        r4 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r1 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Element;

        r0 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder;

        r7 := @parameter2: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Element: boolean isGlobal()>();

        if $z1 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder: org.apache.xmlbeans.impl.inst2xsd.util.Element getGlobalElement(javax.xml.namespace.QName)>($r2);

        if $r3 != null goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder: void addGlobalElement(org.apache.xmlbeans.impl.inst2xsd.util.Element)>(r1);

        return r1;

     label2:
        $r5 = virtualinvoke $r3.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        $r6 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>($r5, $r6, r7);

        virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineElementComments(org.apache.xmlbeans.impl.inst2xsd.util.Element,org.apache.xmlbeans.impl.inst2xsd.util.Element)>($r3, r1);

        return $r3;
    }

    protected org.apache.xmlbeans.impl.inst2xsd.util.Element processElement(org.apache.xmlbeans.XmlCursor, java.lang.String, org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions, org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder)
    {
        java.lang.IllegalStateException $r36, $r37;
        org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder r18;
        org.apache.xmlbeans.SchemaType $r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.inst2xsd.util.Attribute $r19;
        org.apache.xmlbeans.impl.inst2xsd.util.Element $r0, $r35;
        javax.xml.namespace.QName $r2, $r9, $r10, $r13, $r16, $r25, $r27, $r28, $r30, $r32;
        org.apache.xmlbeans.XmlCursor r1, $r23;
        java.lang.AssertionError $r38;
        java.util.ArrayList $r6, $r7;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r15;
        java.lang.StringBuffer $r4, $r5, $r22;
        org.apache.xmlbeans.XmlCursor$TokenType $r39;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r8, $r11, $r12, $r17, $r20, r21, $r24, $r29, $r33, $r34, $r40, $r41, $r42, $r43;
        org.apache.xmlbeans.impl.inst2xsd.util.Type $r3, $r31;

        r14 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r1 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r21 := @parameter1: java.lang.String;

        r15 := @parameter2: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        r18 := @parameter3: org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z4 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z4 != 0 goto label01;

        $r38 = new java.lang.AssertionError;

        specialinvoke $r38.<java.lang.AssertionError: void <init>()>();

        throw $r38;

     label01:
        $r0 = new org.apache.xmlbeans.impl.inst2xsd.util.Element;

        specialinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void <init>()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setName(javax.xml.namespace.QName)>($r2);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setGlobal(boolean)>(0);

        $r3 = staticinvoke <org.apache.xmlbeans.impl.inst2xsd.util.Type: org.apache.xmlbeans.impl.inst2xsd.util.Type createUnnamedType(int)>(1);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setType(org.apache.xmlbeans.impl.inst2xsd.util.Type)>($r3);

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label02:
        $r39 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $i5 = virtualinvoke $r39.<org.apache.xmlbeans.XmlCursor$TokenType: int intValue()>();

        tableswitch($i5)
        {
            case 0: goto label12;
            case 1: goto label13;
            case 2: goto label11;
            case 3: goto label05;
            case 4: goto label09;
            case 5: goto label06;
            case 6: goto label03;
            case 7: goto label08;
            case 8: goto label07;
            case 9: goto label10;
            default: goto label14;
        };

     label03:
        $r9 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r10 = <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: javax.xml.namespace.QName _xsiNil>;

        $r11 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r12 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 != 0 goto label04;

        $r16 = virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $r17 = virtualinvoke $r16.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r19 = virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.util.Attribute processAttribute(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions,java.lang.String,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder)>(r1, r15, $r17, r18);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r19);

        goto label15;

     label04:
        $r13 = <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: javax.xml.namespace.QName _xsiNil>;

        $z2 = virtualinvoke $r13.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label15;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setNillable(boolean)>(1);

        goto label15;

     label05:
        $r34 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r35 = virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.util.Element processElement(org.apache.xmlbeans.XmlCursor,java.lang.String,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder)>(r1, $r34, r15, r18);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r35);

        $i4 = virtualinvoke $r5.<java.lang.StringBuffer: int length()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i4);

        goto label15;

     label06:
        $r20 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getChars()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        goto label15;

     label07:
        $r8 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label15;

     label08:
        goto label15;

     label09:
        goto label16;

     label10:
        goto label15;

     label11:
        goto label16;

     label12:
        goto label16;

     label13:
        $r36 = new java.lang.IllegalStateException;

        specialinvoke $r36.<java.lang.IllegalStateException: void <init>()>();

        throw $r36;

     label14:
        $r37 = new java.lang.IllegalStateException;

        specialinvoke $r37.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown TokenType.");

        throw $r37;

     label15:
        goto label02;

     label16:
        $r40 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r41 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: java.lang.String collapse(java.lang.String,int)>($r40, 3);

        if r21 != null goto label18;

        $i3 = virtualinvoke $r5.<java.lang.StringBuffer: int length()>();

        if $i3 != 0 goto label17;

        $r42 = null;

        goto label20;

     label17:
        $r42 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label20;

     label18:
        $i0 = virtualinvoke $r5.<java.lang.StringBuffer: int length()>();

        if $i0 != 0 goto label19;

        $r42 = r21;

        goto label20;

     label19:
        $r22 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(0, r21);

        $r42 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

     label20:
        virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setComment(java.lang.String)>($r42);

        $i6 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i6 <= 0 goto label23;

        $i2 = virtualinvoke $r41.<java.lang.String: int length()>();

        if $i2 <= 0 goto label21;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setContentType(int)>(4);

        goto label22;

     label21:
        virtualinvoke $r3.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setContentType(int)>(3);

     label22:
        $r32 = virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $r33 = virtualinvoke $r32.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void processElementsInComplexType(org.apache.xmlbeans.impl.inst2xsd.util.Type,java.util.List,java.lang.String,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>($r3, $r6, $r33, r18, r15);

        virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void processAttributesInComplexType(org.apache.xmlbeans.impl.inst2xsd.util.Type,java.util.List)>($r3, $r7);

        goto label28;

     label23:
        $r23 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r23.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i1 <= 0 goto label24;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setContentType(int)>(2);

        $r29 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r30 = virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: javax.xml.namespace.QName processSimpleContentType(java.lang.String,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions,org.apache.xmlbeans.XmlCursor)>($r29, r15, $r23);

        $r31 = staticinvoke <org.apache.xmlbeans.impl.inst2xsd.util.Type: org.apache.xmlbeans.impl.inst2xsd.util.Type createNamedType(javax.xml.namespace.QName,int)>($r30, 1);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setExtensionType(org.apache.xmlbeans.impl.inst2xsd.util.Type)>($r31);

        virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void processAttributesInComplexType(org.apache.xmlbeans.impl.inst2xsd.util.Type,java.util.List)>($r3, $r7);

        goto label27;

     label24:
        virtualinvoke $r3.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setContentType(int)>(1);

        $r24 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r25 = virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: javax.xml.namespace.QName processSimpleContentType(java.lang.String,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions,org.apache.xmlbeans.XmlCursor)>($r24, r15, $r23);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setName(javax.xml.namespace.QName)>($r25);

        $r26 = <org.apache.xmlbeans.XmlString: org.apache.xmlbeans.SchemaType type>;

        $r27 = interfaceinvoke $r26.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r28 = virtualinvoke $r3.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        $z3 = virtualinvoke $r27.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r28);

        if $z3 == 0 goto label25;

        $r43 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label26;

     label25:
        $r43 = $r41;

     label26:
        virtualinvoke $r3.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void addEnumerationValue(java.lang.String,org.apache.xmlbeans.XmlCursor)>($r43, $r23);

     label27:
        interfaceinvoke $r23.<org.apache.xmlbeans.XmlCursor: void dispose()>();

     label28:
        virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void checkIfReferenceToGlobalTypeIsNeeded(org.apache.xmlbeans.impl.inst2xsd.util.Element,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>($r0, r18, r15);

        return $r0;
    }

    protected void processElementsInComplexType(org.apache.xmlbeans.impl.inst2xsd.util.Type, java.util.List, java.lang.String, org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder, org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)
    {
        java.util.HashMap $r22;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r13;
        org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder r16;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r10;
        int $i1;
        java.lang.String r15;
        boolean $z0;
        java.util.Iterator $r2;
        org.apache.xmlbeans.impl.inst2xsd.util.Element r4, r9, r21;
        org.apache.xmlbeans.impl.inst2xsd.util.Type $r11, $r12, r14, $r18, $r19;
        java.util.List r1;
        java.lang.Object $r3, $r8;
        javax.xml.namespace.QName $r5, $r6, $r7, $r17, $r20;

        r10 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r14 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r1 := @parameter1: java.util.List;

        r15 := @parameter2: java.lang.String;

        r16 := @parameter3: org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder;

        r13 := @parameter4: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        $r22 = new java.util.HashMap;

        specialinvoke $r22.<java.util.HashMap: void <init>()>();

        r21 = null;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r3;

        if r21 != null goto label2;

        virtualinvoke r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void checkIfElementReferenceIsNeeded(org.apache.xmlbeans.impl.inst2xsd.util.Element,java.lang.String,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>(r4, r15, r16, r13);

        virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void addElement(org.apache.xmlbeans.impl.inst2xsd.util.Element)>(r4);

        $r20 = virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r4);

        r21 = r4;

        goto label1;

     label2:
        $r5 = virtualinvoke r21.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $r6 = virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        if $r5 != $r6 goto label3;

        $r18 = virtualinvoke r21.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        $r19 = virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        virtualinvoke r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>($r18, $r19, r13);

        virtualinvoke r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineElementComments(org.apache.xmlbeans.impl.inst2xsd.util.Element,org.apache.xmlbeans.impl.inst2xsd.util.Element)>(r21, r4);

        virtualinvoke r21.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMinOccurs(int)>(0);

        $i1 = (int) -1;

        virtualinvoke r21.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMaxOccurs(int)>($i1);

        goto label6;

     label3:
        $r7 = virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $r8 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r9 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r8;

        if r9 != null goto label4;

        virtualinvoke r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void checkIfElementReferenceIsNeeded(org.apache.xmlbeans.impl.inst2xsd.util.Element,java.lang.String,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>(r4, r15, r16, r13);

        virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void addElement(org.apache.xmlbeans.impl.inst2xsd.util.Element)>(r4);

        $r17 = virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r4);

        goto label5;

     label4:
        $r11 = virtualinvoke r21.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        $r12 = virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        virtualinvoke r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>($r11, $r12, r13);

        virtualinvoke r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineElementComments(org.apache.xmlbeans.impl.inst2xsd.util.Element,org.apache.xmlbeans.impl.inst2xsd.util.Element)>(r21, r4);

        virtualinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setTopParticleForComplexOrMixedContent(int)>(2);

     label5:
        r21 = r4;

     label6:
        goto label1;

     label7:
        return;
    }

    protected void checkIfElementReferenceIsNeeded(org.apache.xmlbeans.impl.inst2xsd.util.Element, java.lang.String, org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder, org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Element r0, $r4, $r10;
        org.apache.xmlbeans.impl.inst2xsd.util.Type $r6;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r9;
        org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder r8;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r7;
        javax.xml.namespace.QName $r1, $r5;
        java.lang.String $r2, r3;
        boolean $z0, $z1;

        r7 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r0 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Element;

        r3 := @parameter1: java.lang.String;

        r8 := @parameter2: org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder;

        r9 := @parameter3: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $r2 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label2;

        $r4 = new org.apache.xmlbeans.impl.inst2xsd.util.Element;

        specialinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void <init>()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setGlobal(boolean)>(1);

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setName(javax.xml.namespace.QName)>($r5);

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setType(org.apache.xmlbeans.impl.inst2xsd.util.Type)>($r6);

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: boolean isNillable()>();

        if $z1 == 0 goto label1;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setNillable(boolean)>(1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setNillable(boolean)>(0);

     label1:
        $r10 = virtualinvoke r7.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.util.Element addGlobalElement(org.apache.xmlbeans.impl.inst2xsd.util.Element,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>($r4, r8, r9);

        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setRef(org.apache.xmlbeans.impl.inst2xsd.util.Element)>($r10);

     label2:
        return;
    }

    protected void checkIfReferenceToGlobalTypeIsNeeded(org.apache.xmlbeans.impl.inst2xsd.util.Element, org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder, org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Element r1;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r3;
        org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder r2;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r1 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Element;

        r2 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder;

        r3 := @parameter2: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        return;
    }

    protected void processAttributesInComplexType(org.apache.xmlbeans.impl.inst2xsd.util.Type, java.util.List)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Attribute r3;
        java.util.Iterator $r1;
        java.lang.AssertionError $r5;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r4;
        java.util.List r0;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r6;
        java.lang.Object $r2;
        boolean $z0, $z1, $z2;

        r6 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r4 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r0 := @parameter1: java.util.List;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean isComplexType()>();

        if $z1 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.xmlbeans.impl.inst2xsd.util.Attribute) $r2;

        virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void addAttribute(org.apache.xmlbeans.impl.inst2xsd.util.Attribute)>(r3);

        goto label2;

     label3:
        return;
    }

    protected org.apache.xmlbeans.impl.inst2xsd.util.Attribute processAttribute(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions, java.lang.String, org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Attribute $r0;
        org.apache.xmlbeans.XmlCursor r1, $r3;
        java.lang.AssertionError $r11;
        org.apache.xmlbeans.impl.inst2xsd.util.Type $r8;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r6;
        org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder r10;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r4;
        javax.xml.namespace.QName $r2, $r7;
        java.lang.String $r5, r9;
        boolean $z0, $z1;

        r4 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r1 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r6 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        r9 := @parameter2: java.lang.String;

        r10 := @parameter3: org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z1 != 0 goto label1;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>("xc not on attribute");

        throw $r11;

     label1:
        $r0 = new org.apache.xmlbeans.impl.inst2xsd.util.Attribute;

        specialinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: void <init>()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: void setName(javax.xml.namespace.QName)>($r2);

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        $r7 = virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: javax.xml.namespace.QName processSimpleContentType(java.lang.String,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions,org.apache.xmlbeans.XmlCursor)>($r5, r6, $r3);

        $r8 = staticinvoke <org.apache.xmlbeans.impl.inst2xsd.util.Type: org.apache.xmlbeans.impl.inst2xsd.util.Type createNamedType(javax.xml.namespace.QName,int)>($r7, 1);

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: void setType(org.apache.xmlbeans.impl.inst2xsd.util.Type)>($r8);

        virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void checkIfAttributeReferenceIsNeeded(org.apache.xmlbeans.impl.inst2xsd.util.Attribute,java.lang.String,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder)>($r0, r9, r10);

        return $r0;
    }

    protected void checkIfAttributeReferenceIsNeeded(org.apache.xmlbeans.impl.inst2xsd.util.Attribute, java.lang.String, org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Attribute r0, $r6;
        org.apache.xmlbeans.impl.inst2xsd.util.Type $r8;
        org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder r9;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r10;
        javax.xml.namespace.QName $r1, $r3, $r7;
        java.lang.String $r2, $r4, r5;
        boolean $z0, $z1;

        r10 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r0 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Attribute;

        r5 := @parameter1: java.lang.String;

        r9 := @parameter2: org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: javax.xml.namespace.QName getName()>();

        $r2 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: javax.xml.namespace.QName getName()>();

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 != 0 goto label1;

        $r6 = new org.apache.xmlbeans.impl.inst2xsd.util.Attribute;

        specialinvoke $r6.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: void <init>()>();

        virtualinvoke $r6.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: void setGlobal(boolean)>(1);

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: javax.xml.namespace.QName getName()>();

        virtualinvoke $r6.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: void setName(javax.xml.namespace.QName)>($r7);

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        virtualinvoke $r6.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: void setType(org.apache.xmlbeans.impl.inst2xsd.util.Type)>($r8);

        virtualinvoke r9.<org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder: void addGlobalAttribute(org.apache.xmlbeans.impl.inst2xsd.util.Attribute)>($r6);

        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: void setRef(org.apache.xmlbeans.impl.inst2xsd.util.Attribute)>($r6);

     label1:
        return;
    }

    protected javax.xml.namespace.QName processSimpleContentType(java.lang.String, org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions, org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$1 $r32;
        org.apache.xmlbeans.SchemaType $r2, $r9, $r14, $r18, $r22, $r26, $r37, $r39, $r41, $r43, $r45, $r47, $r50, $r53, $r56, $r59, $r62, $r64;
        java.lang.Exception $r11, $r49, $r52, $r55, $r58, $r61;
        javax.xml.namespace.QName $r3, $r10, $r38, $r40, $r42, $r44, $r46, $r48, $r51, $r54, $r57, $r60, $r63, $r65;
        org.apache.xmlbeans.XmlCursor r33;
        java.lang.StringBuffer $r5, $r6, $r7;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r12;
        java.lang.String r1, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.IllegalArgumentException $r4;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36;

        r12 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        r33 := @parameter2: org.apache.xmlbeans.XmlCursor;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int getSimpleContentTypes()>();

        if $i0 != 2 goto label01;

        $r9 = <org.apache.xmlbeans.XmlString: org.apache.xmlbeans.SchemaType type>;

        $r10 = interfaceinvoke $r9.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        return $r10;

     label01:
        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int getSimpleContentTypes()>();

        if $i1 == 1 goto label02;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown value for Inst2XsdOptions.getSimpleContentTypes() :");

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int getSimpleContentTypes()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label02:
        staticinvoke <org.apache.xmlbeans.impl.util.XsTypeConverter: byte lexByte(java.lang.CharSequence)>(r1);

        $r2 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

     label03:
        return $r3;

     label04:
        $r61 := @caughtexception;

     label05:
        staticinvoke <org.apache.xmlbeans.impl.util.XsTypeConverter: short lexShort(java.lang.CharSequence)>(r1);

        $r62 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r63 = interfaceinvoke $r62.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

     label06:
        return $r63;

     label07:
        $r58 := @caughtexception;

     label08:
        staticinvoke <org.apache.xmlbeans.impl.util.XsTypeConverter: int lexInt(java.lang.CharSequence)>(r1);

        $r59 = <org.apache.xmlbeans.XmlInt: org.apache.xmlbeans.SchemaType type>;

        $r60 = interfaceinvoke $r59.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

     label09:
        return $r60;

     label10:
        $r55 := @caughtexception;

     label11:
        staticinvoke <org.apache.xmlbeans.impl.util.XsTypeConverter: long lexLong(java.lang.CharSequence)>(r1);

        $r56 = <org.apache.xmlbeans.XmlLong: org.apache.xmlbeans.SchemaType type>;

        $r57 = interfaceinvoke $r56.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

     label12:
        return $r57;

     label13:
        $r52 := @caughtexception;

     label14:
        staticinvoke <org.apache.xmlbeans.impl.util.XsTypeConverter: java.math.BigInteger lexInteger(java.lang.CharSequence)>(r1);

        $r53 = <org.apache.xmlbeans.XmlInteger: org.apache.xmlbeans.SchemaType type>;

        $r54 = interfaceinvoke $r53.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

     label15:
        return $r54;

     label16:
        $r49 := @caughtexception;

     label17:
        staticinvoke <org.apache.xmlbeans.impl.util.XsTypeConverter: float lexFloat(java.lang.CharSequence)>(r1);

        $r50 = <org.apache.xmlbeans.XmlFloat: org.apache.xmlbeans.SchemaType type>;

        $r51 = interfaceinvoke $r50.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

     label18:
        return $r51;

     label19:
        $r11 := @caughtexception;

        $r14 = <org.apache.xmlbeans.XmlDate: org.apache.xmlbeans.SchemaType type>;

        $r13 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        staticinvoke <org.apache.xmlbeans.impl.values.XmlDateImpl: org.apache.xmlbeans.GDate validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r1, $r14, $r13);

        $r15 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        $z0 = virtualinvoke $r15.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: boolean isValid()>();

        if $z0 == 0 goto label20;

        $r47 = <org.apache.xmlbeans.XmlDate: org.apache.xmlbeans.SchemaType type>;

        $r48 = interfaceinvoke $r47.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        return $r48;

     label20:
        $r16 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        virtualinvoke $r16.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: void resetToValid()>();

        $r18 = <org.apache.xmlbeans.XmlDateTime: org.apache.xmlbeans.SchemaType type>;

        $r17 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        staticinvoke <org.apache.xmlbeans.impl.values.XmlDateTimeImpl: org.apache.xmlbeans.GDate validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r1, $r18, $r17);

        $r19 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        $z1 = virtualinvoke $r19.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: boolean isValid()>();

        if $z1 == 0 goto label21;

        $r45 = <org.apache.xmlbeans.XmlDateTime: org.apache.xmlbeans.SchemaType type>;

        $r46 = interfaceinvoke $r45.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        return $r46;

     label21:
        $r20 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        virtualinvoke $r20.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: void resetToValid()>();

        $r22 = <org.apache.xmlbeans.XmlTime: org.apache.xmlbeans.SchemaType type>;

        $r21 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        staticinvoke <org.apache.xmlbeans.impl.values.XmlTimeImpl: org.apache.xmlbeans.GDate validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r1, $r22, $r21);

        $r23 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        $z2 = virtualinvoke $r23.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: boolean isValid()>();

        if $z2 == 0 goto label22;

        $r43 = <org.apache.xmlbeans.XmlTime: org.apache.xmlbeans.SchemaType type>;

        $r44 = interfaceinvoke $r43.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        return $r44;

     label22:
        $r24 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        virtualinvoke $r24.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: void resetToValid()>();

        $r26 = <org.apache.xmlbeans.XmlDuration: org.apache.xmlbeans.SchemaType type>;

        $r25 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        staticinvoke <org.apache.xmlbeans.impl.values.XmlDurationImpl: org.apache.xmlbeans.GDuration validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r1, $r26, $r25);

        $r27 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        $z3 = virtualinvoke $r27.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: boolean isValid()>();

        if $z3 == 0 goto label23;

        $r41 = <org.apache.xmlbeans.XmlDuration: org.apache.xmlbeans.SchemaType type>;

        $r42 = interfaceinvoke $r41.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        return $r42;

     label23:
        $r28 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        virtualinvoke $r28.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: void resetToValid()>();

        $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("http://");

        if $z4 != 0 goto label24;

        $z7 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("www.");

        if $z7 == 0 goto label26;

     label24:
        $r29 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        staticinvoke <org.apache.xmlbeans.impl.values.XmlAnyUriImpl: void validateLexical(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext)>(r1, $r29);

        $r30 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        $z5 = virtualinvoke $r30.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: boolean isValid()>();

        if $z5 == 0 goto label25;

        $r39 = <org.apache.xmlbeans.XmlAnyURI: org.apache.xmlbeans.SchemaType type>;

        $r40 = interfaceinvoke $r39.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        return $r40;

     label25:
        $r31 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        virtualinvoke $r31.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: void resetToValid()>();

     label26:
        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);

        if $i3 < 0 goto label28;

        $i4 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(58);

        if $i3 != $i4 goto label28;

        $i5 = $i3 + 1;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 >= $i6 goto label28;

        $r32 = new org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$1;

        specialinvoke $r32.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$1: void <init>(org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy,org.apache.xmlbeans.XmlCursor)>(r12, r33);

        $r34 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        staticinvoke <org.apache.xmlbeans.impl.values.XmlQNameImpl: javax.xml.namespace.QName validateLexical(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext,org.apache.xmlbeans.impl.common.PrefixResolver)>(r1, $r34, $r32);

        $r35 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        $z6 = virtualinvoke $r35.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: boolean isValid()>();

        if $z6 == 0 goto label27;

        $r37 = <org.apache.xmlbeans.XmlQName: org.apache.xmlbeans.SchemaType type>;

        $r38 = interfaceinvoke $r37.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        return $r38;

     label27:
        $r36 = r12.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext _validationContext>;

        virtualinvoke $r36.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy$SCTValidationContext: void resetToValid()>();

     label28:
        $r64 = <org.apache.xmlbeans.XmlString: org.apache.xmlbeans.SchemaType type>;

        $r65 = interfaceinvoke $r64.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        return $r65;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    protected void combineTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type, org.apache.xmlbeans.impl.inst2xsd.util.Type, org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.xml.namespace.QName r2, $r4, $r10, $r11, $r12, $r13;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r8;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.IllegalArgumentException $r9;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0, r1, $r5, $r6, $r7;

        r3 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r0 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r1 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r8 := @parameter2: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        if r0 != r1 goto label01;

        return;

     label01:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean isGlobal()>();

        if $z0 == 0 goto label02;

        $z4 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean isGlobal()>();

        if $z4 == 0 goto label02;

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        $r11 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        $z5 = virtualinvoke $r10.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r11);

        if $z5 == 0 goto label02;

        return;

     label02:
        $i18 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i18 != 1 goto label03;

        $i17 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i17 != 1 goto label03;

        virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineSimpleTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>(r0, r1, r8);

        return;

     label03:
        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i0 == 1 goto label04;

        $i16 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i16 != 2 goto label12;

     label04:
        $i1 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i1 == 1 goto label05;

        $i2 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i2 != 2 goto label12;

     label05:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean isComplexType()>();

        if $z1 == 0 goto label06;

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: org.apache.xmlbeans.impl.inst2xsd.util.Type getExtensionType()>();

        $r12 = virtualinvoke $r7.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        goto label07;

     label06:
        $r12 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

     label07:
        r2 = $r12;

        $z2 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean isComplexType()>();

        if $z2 == 0 goto label08;

        $r6 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: org.apache.xmlbeans.impl.inst2xsd.util.Type getExtensionType()>();

        $r13 = virtualinvoke $r6.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        goto label09;

     label08:
        $r13 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

     label09:
        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setContentType(int)>(2);

        $r4 = virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: javax.xml.namespace.QName combineToMoreGeneralSimpleType(javax.xml.namespace.QName,javax.xml.namespace.QName)>(r2, $r13);

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean isComplexType()>();

        if $z3 == 0 goto label10;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.inst2xsd.util.Type: org.apache.xmlbeans.impl.inst2xsd.util.Type createNamedType(javax.xml.namespace.QName,int)>($r4, 1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setExtensionType(org.apache.xmlbeans.impl.inst2xsd.util.Type)>($r5);

        goto label11;

     label10:
        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setName(javax.xml.namespace.QName)>($r4);

     label11:
        virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineAttributesOfTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type)>(r0, r1);

        return;

     label12:
        $i3 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i3 != 3 goto label13;

        $i15 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i15 != 3 goto label13;

        virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineAttributesOfTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type)>(r0, r1);

        virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineElementsOfTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type,boolean,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>(r0, r1, 0, r8);

        return;

     label13:
        $i4 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i4 == 1 goto label14;

        $i5 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i5 == 2 goto label14;

        $i6 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i6 == 1 goto label14;

        $i7 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i7 != 2 goto label15;

     label14:
        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setContentType(int)>(4);

        virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineAttributesOfTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type)>(r0, r1);

        virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineElementsOfTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type,boolean,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>(r0, r1, 1, r8);

        return;

     label15:
        $i8 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i8 == 1 goto label16;

        $i12 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i12 == 2 goto label16;

        $i13 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i13 == 3 goto label16;

        $i14 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i14 != 4 goto label18;

     label16:
        $i19 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i19 == 1 goto label17;

        $i9 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i9 == 2 goto label17;

        $i10 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i10 == 3 goto label17;

        $i11 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i11 != 4 goto label18;

     label17:
        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setContentType(int)>(4);

        virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineAttributesOfTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type)>(r0, r1);

        virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineElementsOfTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type,boolean,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>(r0, r1, 0, r8);

        return;

     label18:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown content type.");

        throw $r9;
    }

    protected void combineSimpleTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type, org.apache.xmlbeans.impl.inst2xsd.util.Type, org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)
    {
        java.lang.AssertionError $r8;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0, r3;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r6;
        java.util.List $r7;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r1;
        int $i0, $i1, $i2, $i3;
        javax.xml.namespace.QName $r2, $r4, $r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r0 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r3 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r6 := @parameter2: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i2 != 1 goto label1;

        $i3 = virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getContentType()>();

        if $i3 == 1 goto label2;

     label1:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("Invalid arguments");

        throw $r8;

     label2:
        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        $r4 = virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        $r5 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: javax.xml.namespace.QName combineToMoreGeneralSimpleType(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r2, $r4);

        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setName(javax.xml.namespace.QName)>($r5);

        $z1 = virtualinvoke r6.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: boolean isUseEnumerations()>();

        if $z1 == 0 goto label3;

        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void addAllEnumerationsFrom(org.apache.xmlbeans.impl.inst2xsd.util.Type)>(r3);

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getEnumerationValues()>();

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i1 = virtualinvoke r6.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int getUseEnumerations()>();

        if $i0 <= $i1 goto label3;

        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void closeEnumeration()>();

     label3:
        return;
    }

    protected javax.xml.namespace.QName combineToMoreGeneralSimpleType(javax.xml.namespace.QName, javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.SchemaType $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r82;
        javax.xml.namespace.QName r0, r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r73, $r75, $r77, $r79, $r81, $r83;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r84;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40;

        r84 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r0 := @parameter0: javax.xml.namespace.QName;

        r1 := @parameter1: javax.xml.namespace.QName;

        $z0 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label01;

        return r0;

     label01:
        $r2 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label02;

        $r82 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r83 = interfaceinvoke $r82.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z40 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r83);

        if $z40 == 0 goto label02;

        return r1;

     label02:
        $r4 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z2 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label03;

        $r80 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r81 = interfaceinvoke $r80.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z39 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r81);

        if $z39 == 0 goto label03;

        return r0;

     label03:
        $r6 = <org.apache.xmlbeans.XmlInt: org.apache.xmlbeans.SchemaType type>;

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z3 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label05;

        $r76 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r77 = interfaceinvoke $r76.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z37 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r77);

        if $z37 != 0 goto label04;

        $r78 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r79 = interfaceinvoke $r78.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z38 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r79);

        if $z38 == 0 goto label05;

     label04:
        return r1;

     label05:
        $r8 = <org.apache.xmlbeans.XmlInt: org.apache.xmlbeans.SchemaType type>;

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z4 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r9);

        if $z4 == 0 goto label07;

        $r72 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r73 = interfaceinvoke $r72.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z35 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r73);

        if $z35 != 0 goto label06;

        $r74 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r75 = interfaceinvoke $r74.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z36 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r75);

        if $z36 == 0 goto label07;

     label06:
        return r0;

     label07:
        $r10 = <org.apache.xmlbeans.XmlLong: org.apache.xmlbeans.SchemaType type>;

        $r11 = interfaceinvoke $r10.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z5 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r11);

        if $z5 == 0 goto label09;

        $r66 = <org.apache.xmlbeans.XmlInt: org.apache.xmlbeans.SchemaType type>;

        $r67 = interfaceinvoke $r66.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z32 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r67);

        if $z32 != 0 goto label08;

        $r68 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r69 = interfaceinvoke $r68.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z33 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r69);

        if $z33 != 0 goto label08;

        $r70 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r71 = interfaceinvoke $r70.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z34 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r71);

        if $z34 == 0 goto label09;

     label08:
        return r1;

     label09:
        $r12 = <org.apache.xmlbeans.XmlLong: org.apache.xmlbeans.SchemaType type>;

        $r13 = interfaceinvoke $r12.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z6 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r13);

        if $z6 == 0 goto label11;

        $r60 = <org.apache.xmlbeans.XmlInt: org.apache.xmlbeans.SchemaType type>;

        $r61 = interfaceinvoke $r60.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z29 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r61);

        if $z29 != 0 goto label10;

        $r62 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r63 = interfaceinvoke $r62.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z30 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r63);

        if $z30 != 0 goto label10;

        $r64 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r65 = interfaceinvoke $r64.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z31 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r65);

        if $z31 == 0 goto label11;

     label10:
        return r0;

     label11:
        $r14 = <org.apache.xmlbeans.XmlInteger: org.apache.xmlbeans.SchemaType type>;

        $r15 = interfaceinvoke $r14.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z7 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r15);

        if $z7 == 0 goto label13;

        $r52 = <org.apache.xmlbeans.XmlLong: org.apache.xmlbeans.SchemaType type>;

        $r53 = interfaceinvoke $r52.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z25 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r53);

        if $z25 != 0 goto label12;

        $r54 = <org.apache.xmlbeans.XmlInt: org.apache.xmlbeans.SchemaType type>;

        $r55 = interfaceinvoke $r54.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z26 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r55);

        if $z26 != 0 goto label12;

        $r56 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r57 = interfaceinvoke $r56.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z27 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r57);

        if $z27 != 0 goto label12;

        $r58 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r59 = interfaceinvoke $r58.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z28 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r59);

        if $z28 == 0 goto label13;

     label12:
        return r1;

     label13:
        $r16 = <org.apache.xmlbeans.XmlInteger: org.apache.xmlbeans.SchemaType type>;

        $r17 = interfaceinvoke $r16.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z8 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r17);

        if $z8 == 0 goto label15;

        $r44 = <org.apache.xmlbeans.XmlLong: org.apache.xmlbeans.SchemaType type>;

        $r45 = interfaceinvoke $r44.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z21 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r45);

        if $z21 != 0 goto label14;

        $r46 = <org.apache.xmlbeans.XmlInt: org.apache.xmlbeans.SchemaType type>;

        $r47 = interfaceinvoke $r46.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z22 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r47);

        if $z22 != 0 goto label14;

        $r48 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r49 = interfaceinvoke $r48.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z23 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r49);

        if $z23 != 0 goto label14;

        $r50 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r51 = interfaceinvoke $r50.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z24 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r51);

        if $z24 == 0 goto label15;

     label14:
        return r0;

     label15:
        $r18 = <org.apache.xmlbeans.XmlFloat: org.apache.xmlbeans.SchemaType type>;

        $r19 = interfaceinvoke $r18.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z9 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r19);

        if $z9 == 0 goto label17;

        $r34 = <org.apache.xmlbeans.XmlInteger: org.apache.xmlbeans.SchemaType type>;

        $r35 = interfaceinvoke $r34.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z16 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r35);

        if $z16 != 0 goto label16;

        $r36 = <org.apache.xmlbeans.XmlLong: org.apache.xmlbeans.SchemaType type>;

        $r37 = interfaceinvoke $r36.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z17 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r37);

        if $z17 != 0 goto label16;

        $r38 = <org.apache.xmlbeans.XmlInt: org.apache.xmlbeans.SchemaType type>;

        $r39 = interfaceinvoke $r38.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z18 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r39);

        if $z18 != 0 goto label16;

        $r40 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r41 = interfaceinvoke $r40.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z19 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r41);

        if $z19 != 0 goto label16;

        $r42 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r43 = interfaceinvoke $r42.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z20 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r43);

        if $z20 == 0 goto label17;

     label16:
        return r1;

     label17:
        $r20 = <org.apache.xmlbeans.XmlFloat: org.apache.xmlbeans.SchemaType type>;

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z10 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r21);

        if $z10 == 0 goto label19;

        $r24 = <org.apache.xmlbeans.XmlInteger: org.apache.xmlbeans.SchemaType type>;

        $r25 = interfaceinvoke $r24.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z11 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r25);

        if $z11 != 0 goto label18;

        $r26 = <org.apache.xmlbeans.XmlLong: org.apache.xmlbeans.SchemaType type>;

        $r27 = interfaceinvoke $r26.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z12 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r27);

        if $z12 != 0 goto label18;

        $r28 = <org.apache.xmlbeans.XmlInt: org.apache.xmlbeans.SchemaType type>;

        $r29 = interfaceinvoke $r28.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z13 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r29);

        if $z13 != 0 goto label18;

        $r30 = <org.apache.xmlbeans.XmlShort: org.apache.xmlbeans.SchemaType type>;

        $r31 = interfaceinvoke $r30.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z14 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r31);

        if $z14 != 0 goto label18;

        $r32 = <org.apache.xmlbeans.XmlByte: org.apache.xmlbeans.SchemaType type>;

        $r33 = interfaceinvoke $r32.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z15 = virtualinvoke r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r33);

        if $z15 == 0 goto label19;

     label18:
        return r0;

     label19:
        $r22 = <org.apache.xmlbeans.XmlString: org.apache.xmlbeans.SchemaType type>;

        $r23 = interfaceinvoke $r22.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        return $r23;
    }

    protected void combineAttributesOfTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type, org.apache.xmlbeans.impl.inst2xsd.util.Type)
    {
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.inst2xsd.util.Attribute r25, r26, r27, r28;
        java.util.List $r1, $r3, $r4, $r6, $r7, $r11, $r13, $r14;
        javax.xml.namespace.QName $r9, $r10, $r16, $r17, $r21, $r23, $r24;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r19;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0, r2, $r18, $r20, $r22;
        java.lang.Object $r5, $r8, $r12, $r15;

        r19 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r2 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r0 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        i4 = 0;

     label01:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getAttributes()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i4 >= $i0 goto label06;

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getAttributes()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i4);

        r25 = (org.apache.xmlbeans.impl.inst2xsd.util.Attribute) $r12;

        i5 = 0;

     label02:
        $r13 = virtualinvoke r2.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getAttributes()>();

        $i3 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i5 >= $i3 goto label04;

        $r14 = virtualinvoke r2.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getAttributes()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i5);

        r26 = (org.apache.xmlbeans.impl.inst2xsd.util.Attribute) $r15;

        $r16 = virtualinvoke r26.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: javax.xml.namespace.QName getName()>();

        $r17 = virtualinvoke r25.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke $r16.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r17);

        if $z1 == 0 goto label03;

        $r18 = virtualinvoke r26.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        $r20 = virtualinvoke r26.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        $r21 = virtualinvoke $r20.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        $r22 = virtualinvoke r25.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        $r23 = virtualinvoke $r22.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        $r24 = virtualinvoke r19.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: javax.xml.namespace.QName combineToMoreGeneralSimpleType(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r21, $r23);

        virtualinvoke $r18.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setName(javax.xml.namespace.QName)>($r24);

        goto label05;

     label03:
        i5 = i5 + 1;

        goto label02;

     label04:
        virtualinvoke r2.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void addAttribute(org.apache.xmlbeans.impl.inst2xsd.util.Attribute)>(r25);

     label05:
        i4 = i4 + 1;

        goto label01;

     label06:
        i6 = 0;

     label07:
        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getAttributes()>();

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i6 >= $i1 goto label11;

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getAttributes()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i6);

        r27 = (org.apache.xmlbeans.impl.inst2xsd.util.Attribute) $r5;

        i7 = 0;

     label08:
        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getAttributes()>();

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i7 >= $i2 goto label10;

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getAttributes()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i7);

        r28 = (org.apache.xmlbeans.impl.inst2xsd.util.Attribute) $r8;

        $r9 = virtualinvoke r28.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: javax.xml.namespace.QName getName()>();

        $r10 = virtualinvoke r27.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: javax.xml.namespace.QName getName()>();

        $z0 = virtualinvoke $r9.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label09;

        goto label09;

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        virtualinvoke r27.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: void setOptional(boolean)>(1);

        i6 = i6 + 1;

        goto label07;

     label11:
        return;
    }

    protected void combineElementsOfTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type, org.apache.xmlbeans.impl.inst2xsd.util.Type, boolean, org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Element r31, r39, r40, r41, r42, r43, r45, r46, r47;
        javax.xml.namespace.QName $r8, $r9, $r32, $r33, $r36, $r37;
        java.util.ArrayList $r48;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r10;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0, r1, $r11, $r12, $r22, $r23;
        boolean $z0, $z1, $z2, z3, z4, z5, z6;
        java.util.List $r2, $r3, $r5, $r6, $r14, $r16, $r17, $r19, $r20, $r24, $r26, $r28, $r29, $r34, $r44;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, $i18, i19, i20, $i22, $i24, $i26, $i28;
        java.lang.Object $r4, $r7, $r15, $r18, $r21, $r25, $r27, $r30, $r35;

        r10 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r0 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r1 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        z3 := @parameter2: boolean;

        r13 := @parameter3: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        z4 = 0;

        z6 = 0;

        z5 = 0;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getTopParticleForComplexOrMixedContent()>();

        if $i0 != 1 goto label01;

        $i8 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int getTopParticleForComplexOrMixedContent()>();

        if $i8 == 1 goto label02;

     label01:
        z4 = 1;

        z6 = 1;

        z5 = 1;

     label02:
        $r48 = new java.util.ArrayList;

        specialinvoke $r48.<java.util.ArrayList: void <init>()>();

        i9 = 0;

        $i22 = (int) -1;

        i10 = $i22;

        $i24 = (int) -1;

        i11 = $i24;

        i12 = 0;

     label03:
        if z5 != 0 goto label19;

        $r16 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $i3 = interfaceinvoke $r16.<java.util.List: int size()>();

        if i12 >= $i3 goto label19;

        $r17 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i12);

        r39 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r18;

        i13 = i9;

     label04:
        $r19 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $i4 = interfaceinvoke $r19.<java.util.List: int size()>();

        if i13 >= $i4 goto label06;

        $r34 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $r35 = interfaceinvoke $r34.<java.util.List: java.lang.Object get(int)>(i13);

        r40 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r35;

        $r36 = virtualinvoke r39.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $r37 = virtualinvoke r40.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $z2 = virtualinvoke $r36.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r37);

        if $z2 == 0 goto label05;

        i10 = i13;

        goto label06;

     label05:
        i13 = i13 + 1;

        goto label04;

     label06:
        if i10 >= i9 goto label07;

        interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>(r39);

        virtualinvoke r39.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMinOccurs(int)>(0);

        goto label18;

     label07:
        i14 = i9;

     label08:
        if i14 >= i10 goto label12;

        $r26 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $r27 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(i14);

        r41 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r27;

        i15 = i12 + 1;

     label09:
        $r28 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $i7 = interfaceinvoke $r28.<java.util.List: int size()>();

        if i15 >= $i7 goto label11;

        $r29 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $r30 = interfaceinvoke $r29.<java.util.List: java.lang.Object get(int)>(i15);

        r31 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r30;

        $r32 = virtualinvoke r41.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $r33 = virtualinvoke r31.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke $r32.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r33);

        if $z1 == 0 goto label10;

        i11 = i15;

        goto label12;

     label10:
        i15 = i15 + 1;

        goto label09;

     label11:
        i14 = i14 + 1;

        goto label08;

     label12:
        if i11 >= i12 goto label17;

        i16 = i9;

     label13:
        if i16 >= i10 goto label14;

        $r24 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(i16);

        r42 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r25;

        interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>(r42);

        virtualinvoke r42.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMinOccurs(int)>(0);

        i16 = i16 + 1;

        goto label13;

     label14:
        interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>(r39);

        $r20 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i10);

        r43 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r21;

        $i5 = virtualinvoke r43.<org.apache.xmlbeans.impl.inst2xsd.util.Element: int getMinOccurs()>();

        if $i5 > 0 goto label15;

        virtualinvoke r39.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMinOccurs(int)>(0);

     label15:
        $i6 = virtualinvoke r43.<org.apache.xmlbeans.impl.inst2xsd.util.Element: int getMaxOccurs()>();

        $i26 = (int) -1;

        if $i6 != $i26 goto label16;

        $i28 = (int) -1;

        virtualinvoke r39.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMaxOccurs(int)>($i28);

     label16:
        $r22 = virtualinvoke r39.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        $r23 = virtualinvoke r43.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        virtualinvoke r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>($r22, $r23, r13);

        virtualinvoke r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineElementComments(org.apache.xmlbeans.impl.inst2xsd.util.Element,org.apache.xmlbeans.impl.inst2xsd.util.Element)>(r39, r43);

        i9 = i10 + 1;

        goto label18;

     label17:
        z4 = 1;

        z6 = 1;

        z5 = 1;

     label18:
        i12 = i12 + 1;

        goto label03;

     label19:
        i17 = i9;

     label20:
        $r44 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $i18 = interfaceinvoke $r44.<java.util.List: int size()>();

        if i17 >= $i18 goto label21;

        $r14 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i17);

        r45 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r15;

        interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>(r45);

        virtualinvoke r45.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMinOccurs(int)>(0);

        i17 = i17 + 1;

        goto label20;

     label21:
        if z6 == 0 goto label29;

        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setTopParticleForComplexOrMixedContent(int)>(2);

        i19 = 0;

     label22:
        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i19 >= $i1 goto label28;

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i19);

        r46 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r4;

        i20 = 0;

     label23:
        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i20 >= $i2 goto label26;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getElements()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i20);

        r47 = (org.apache.xmlbeans.impl.inst2xsd.util.Element) $r7;

        virtualinvoke r47.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMinOccurs(int)>(1);

        virtualinvoke r47.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMaxOccurs(int)>(1);

        if r47 != r46 goto label24;

        goto label27;

     label24:
        $r8 = virtualinvoke r47.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $r9 = virtualinvoke r46.<org.apache.xmlbeans.impl.inst2xsd.util.Element: javax.xml.namespace.QName getName()>();

        $z0 = virtualinvoke $r8.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label25;

        $r11 = virtualinvoke r47.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        $r12 = virtualinvoke r46.<org.apache.xmlbeans.impl.inst2xsd.util.Element: org.apache.xmlbeans.impl.inst2xsd.util.Type getType()>();

        virtualinvoke r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineTypes(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>($r11, $r12, r13);

        virtualinvoke r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void combineElementComments(org.apache.xmlbeans.impl.inst2xsd.util.Element,org.apache.xmlbeans.impl.inst2xsd.util.Element)>(r47, r46);

        goto label27;

     label25:
        i20 = i20 + 1;

        goto label23;

     label26:
        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void addElement(org.apache.xmlbeans.impl.inst2xsd.util.Element)>(r46);

        virtualinvoke r46.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMinOccurs(int)>(1);

        virtualinvoke r46.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setMaxOccurs(int)>(1);

     label27:
        i19 = i19 + 1;

        goto label22;

     label28:
        return;

     label29:
        virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setElements(java.util.List)>($r48);

        return;
    }

    protected void combineElementComments(org.apache.xmlbeans.impl.inst2xsd.util.Element, org.apache.xmlbeans.impl.inst2xsd.util.Element)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Element r0, r3;
        java.lang.StringBuffer $r5, $r7, $r9;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy r12;
        int $i0;
        java.lang.String $r1, $r2, $r4, $r6, $r8, $r10, $r11;

        r12 := @this: org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        r3 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Element;

        r0 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.util.Element;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: java.lang.String getComment()>();

        if $r1 == null goto label2;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: java.lang.String getComment()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r4 = virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.util.Element: java.lang.String getComment()>();

        if $r4 != null goto label1;

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: java.lang.String getComment()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setComment(java.lang.String)>($r11);

        goto label2;

     label1:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.util.Element: java.lang.String getComment()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Element: java.lang.String getComment()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.inst2xsd.util.Element: void setComment(java.lang.String)>($r10);

     label2:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r3;
        javax.xml.namespace.QName $r1, $r2;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: java.lang.String _xsi> = "http://www.w3.org/2001/XMLSchema-instance";

        $r0 = <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: java.lang.Class class$org$apache$xmlbeans$impl$inst2xsd$RussianDollStrategy>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy");

        <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: java.lang.Class class$org$apache$xmlbeans$impl$inst2xsd$RussianDollStrategy> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: java.lang.Class class$org$apache$xmlbeans$impl$inst2xsd$RussianDollStrategy>;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: boolean $assertionsDisabled> = $z1;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "nil", "xsi");

        <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: javax.xml.namespace.QName _xsiNil> = $r1;

        $r2 = new javax.xml.namespace.QName;

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "type", "xsi");

        <org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: javax.xml.namespace.QName _xsiType> = $r2;

        return;
    }
}
