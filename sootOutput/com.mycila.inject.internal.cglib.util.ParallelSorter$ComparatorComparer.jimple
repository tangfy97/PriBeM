class com.mycila.inject.internal.cglib.util.ParallelSorter$ComparatorComparer extends java.lang.Object implements com.mycila.inject.internal.cglib.util.ParallelSorter$Comparer
{
    private java.lang.Object[] a;
    private java.util.Comparator 'cmp';

    public void <init>(java.lang.Object[], java.util.Comparator)
    {
        java.lang.Object[] r1;
        com.mycila.inject.internal.cglib.util.ParallelSorter$ComparatorComparer r0;
        java.util.Comparator r2;

        r0 := @this: com.mycila.inject.internal.cglib.util.ParallelSorter$ComparatorComparer;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.util.Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$ComparatorComparer: java.lang.Object[] a> = r1;

        r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$ComparatorComparer: java.util.Comparator 'cmp'> = r2;

        return;
    }

    public int compare(int, int)
    {
        java.lang.Object[] $r1, $r2;
        com.mycila.inject.internal.cglib.util.ParallelSorter$ComparatorComparer r0;
        int i0, i1, $i2;
        java.lang.Object $r3, $r4;
        java.util.Comparator $r5;

        r0 := @this: com.mycila.inject.internal.cglib.util.ParallelSorter$ComparatorComparer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r5 = r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$ComparatorComparer: java.util.Comparator 'cmp'>;

        $r1 = r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$ComparatorComparer: java.lang.Object[] a>;

        $r4 = $r1[i0];

        $r2 = r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$ComparatorComparer: java.lang.Object[] a>;

        $r3 = $r2[i1];

        $i2 = interfaceinvoke $r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r3);

        return $i2;
    }
}
