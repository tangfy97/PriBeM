public abstract class org.apache.cxf.service.factory.AbstractServiceFactoryBean extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;
    protected boolean dataBindingSet;
    protected java.util.List schemaLocations;
    private org.apache.cxf.Bus bus;
    private org.apache.cxf.databinding.DataBinding dataBinding;
    private org.apache.cxf.service.Service service;
    private java.util.List listeners;
    private java.util.Map sessionState;

    public void <init>()
    {
        org.apache.cxf.common.util.ModCountCopyOnWriteArrayList $r1;
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        java.util.HashMap $r2;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.cxf.common.util.ModCountCopyOnWriteArrayList;

        specialinvoke $r1.<org.apache.cxf.common.util.ModCountCopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.List listeners> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.Map sessionState> = $r2;

        return;
    }

    public abstract org.apache.cxf.service.Service create();

    public java.util.Map getSessionState()
    {
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.Map sessionState>;

        return $r1;
    }

    public transient void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event, java.lang.Object[])
    {
        java.lang.Object[] r6;
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        java.util.List $r1;
        org.apache.cxf.service.factory.FactoryBeanListener r4;
        org.apache.cxf.service.factory.FactoryBeanListener$Event r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        r5 := @parameter0: org.apache.cxf.service.factory.FactoryBeanListener$Event;

        r6 := @parameter1: java.lang.Object[];

        $r1 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.FactoryBeanListener) $r3;

        interfaceinvoke r4.<org.apache.cxf.service.factory.FactoryBeanListener: void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])>(r5, r0, r6);

        goto label1;

     label2:
        return;
    }

    protected void initializeDefaultInterceptors()
    {
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        java.util.List $r2, $r5, $r8;
        org.apache.cxf.service.Service $r1, $r4, $r7;
        org.apache.cxf.interceptor.OutgoingChainInterceptor $r6;
        org.apache.cxf.interceptor.OneWayProcessorInterceptor $r9;
        org.apache.cxf.interceptor.ServiceInvokerInterceptor $r3;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.service.Service service>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.service.Service: java.util.List getInInterceptors()>();

        $r3 = new org.apache.cxf.interceptor.ServiceInvokerInterceptor;

        specialinvoke $r3.<org.apache.cxf.interceptor.ServiceInvokerInterceptor: void <init>()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.service.Service service>;

        $r5 = interfaceinvoke $r4.<org.apache.cxf.service.Service: java.util.List getInInterceptors()>();

        $r6 = new org.apache.cxf.interceptor.OutgoingChainInterceptor;

        specialinvoke $r6.<org.apache.cxf.interceptor.OutgoingChainInterceptor: void <init>()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.service.Service service>;

        $r8 = interfaceinvoke $r7.<org.apache.cxf.service.Service: java.util.List getInInterceptors()>();

        $r9 = new org.apache.cxf.interceptor.OneWayProcessorInterceptor;

        specialinvoke $r9.<org.apache.cxf.interceptor.OneWayProcessorInterceptor: void <init>()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        return;
    }

    protected void initializeDataBindings()
    {
        java.lang.Object[] $r8;
        org.apache.cxf.databinding.DataBinding $r1, $r3, $r6, $r9;
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        java.util.List $r2;
        org.apache.cxf.service.Service $r4, $r5;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $z0 = $r1 instanceof org.apache.cxf.databinding.AbstractDataBinding;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.List schemaLocations>;

        if $r2 == null goto label1;

        specialinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: void fillDataBindingSchemas()>();

     label1:
        $r3 = virtualinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $r4 = virtualinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        interfaceinvoke $r3.<org.apache.cxf.databinding.DataBinding: void initialize(org.apache.cxf.service.Service)>($r4);

        $r5 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.service.Service service>;

        $r6 = virtualinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        interfaceinvoke $r5.<org.apache.cxf.service.Service: void setDataBinding(org.apache.cxf.databinding.DataBinding)>($r6);

        $r7 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event DATABINDING_INITIALIZED>;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding dataBinding>;

        $r8[0] = $r9;

        virtualinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r7, $r8);

        return;
    }

    public org.apache.cxf.Bus getBus()
    {
        org.apache.cxf.Bus $r1;
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.Bus bus>;

        return $r1;
    }

    public void setBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r1;
        org.apache.cxf.service.factory.FactoryBeanListenerManager r3;
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        java.util.List $r4, $r5;
        java.lang.Object $r2;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.Bus;

        r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.Bus bus> = r1;

        $r2 = interfaceinvoke r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/service/factory/FactoryBeanListenerManager;");

        r3 = (org.apache.cxf.service.factory.FactoryBeanListenerManager) $r2;

        if r3 == null goto label1;

        $r4 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.List listeners>;

        $r5 = virtualinvoke r3.<org.apache.cxf.service.factory.FactoryBeanListenerManager: java.util.List getListeners()>();

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r5);

     label1:
        return;
    }

    public org.apache.cxf.databinding.DataBinding getDataBinding()
    {
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        org.apache.cxf.databinding.DataBinding $r1;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding getDataBinding(boolean)>(1);

        return $r1;
    }

    public org.apache.cxf.databinding.DataBinding getDataBinding(boolean)
    {
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        org.apache.cxf.databinding.DataBinding $r1, $r2, $r3;
        boolean z0;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding dataBinding>;

        if $r1 != null goto label1;

        if z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding createDefaultDataBinding()>();

        r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding dataBinding> = $r2;

     label1:
        $r3 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding dataBinding>;

        return $r3;
    }

    protected org.apache.cxf.databinding.DataBinding createDefaultDataBinding()
    {
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        return null;
    }

    public void setDataBinding(org.apache.cxf.databinding.DataBinding)
    {
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        org.apache.cxf.databinding.DataBinding r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.databinding.DataBinding;

        r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding dataBinding> = r1;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: boolean dataBindingSet> = $z0;

        return;
    }

    public org.apache.cxf.service.Service getService()
    {
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        org.apache.cxf.service.Service $r1;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.service.Service service>;

        return $r1;
    }

    protected void setService(org.apache.cxf.service.Service)
    {
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        org.apache.cxf.service.Service r1;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.service.Service;

        r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.service.Service service> = r1;

        return;
    }

    private void fillDataBindingSchemas()
    {
        java.net.URL r31;
        org.apache.cxf.resource.ResourceManager r3;
        org.w3c.dom.Document $r13;
        boolean $z0, $z1;
        org.apache.cxf.databinding.DataBinding $r7;
        java.util.logging.Logger $r20, $r25, $r30;
        java.lang.Exception $r21;
        org.apache.cxf.service.factory.AbstractServiceFactoryBean r0;
        java.util.List $r5;
        org.apache.cxf.Bus $r1;
        javax.xml.transform.dom.DOMSource $r14;
        java.lang.Object[] $r19, $r24, $r29;
        org.apache.cxf.resource.URIResolver $r16;
        org.apache.cxf.common.i18n.Message $r18, $r23, $r28;
        java.util.ArrayList $r4;
        java.lang.String r10, $r15;
        java.util.Iterator $r6;
        org.apache.cxf.databinding.AbstractDataBinding $r8;
        java.io.IOException $r26;
        java.lang.Object $r2, $r9, $r11;
        org.apache.cxf.service.factory.ServiceConstructionException $r17, $r22, $r27;
        java.io.InputStream $r12;

        r0 := @this: org.apache.cxf.service.factory.AbstractServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/resource/ResourceManager;");

        r3 = (org.apache.cxf.resource.ResourceManager) $r2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.List schemaLocations>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $r11 = interfaceinvoke r3.<org.apache.cxf.resource.ResourceManager: java.lang.Object resolveResource(java.lang.String,java.lang.Class)>(r10, class "Ljava/net/URL;");

        r31 = (java.net.URL) $r11;

        if r31 != null goto label07;

     label02:
        $r16 = new org.apache.cxf.resource.URIResolver;

        specialinvoke $r16.<org.apache.cxf.resource.URIResolver: void <init>(java.lang.String)>(r10);

     label03:
        goto label05;

     label04:
        $r26 := @caughtexception;

        $r27 = new org.apache.cxf.service.factory.ServiceConstructionException;

        $r28 = new org.apache.cxf.common.i18n.Message;

        $r30 = <org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.logging.Logger LOG>;

        $r29 = newarray (java.lang.Object)[1];

        $r29[0] = r10;

        specialinvoke $r28.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("INVALID_SCHEMA_URL", $r30, $r29);

        specialinvoke $r27.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r28, $r26);

        throw $r27;

     label05:
        $z1 = virtualinvoke $r16.<org.apache.cxf.resource.URIResolver: boolean isResolved()>();

        if $z1 != 0 goto label06;

        $r17 = new org.apache.cxf.service.factory.ServiceConstructionException;

        $r18 = new org.apache.cxf.common.i18n.Message;

        $r20 = <org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.logging.Logger LOG>;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r10;

        specialinvoke $r18.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("INVALID_SCHEMA_URL", $r20, $r19);

        specialinvoke $r17.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(org.apache.cxf.common.i18n.Message)>($r18);

        throw $r17;

     label06:
        r31 = virtualinvoke $r16.<org.apache.cxf.resource.URIResolver: java.net.URL getURL()>();

     label07:
        $r12 = virtualinvoke r31.<java.net.URL: java.io.InputStream openStream()>();

        $r13 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: org.w3c.dom.Document read(java.io.InputStream)>($r12);

     label08:
        goto label10;

     label09:
        $r21 := @caughtexception;

        $r22 = new org.apache.cxf.service.factory.ServiceConstructionException;

        $r23 = new org.apache.cxf.common.i18n.Message;

        $r25 = <org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.logging.Logger LOG>;

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = r10;

        specialinvoke $r23.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("ERROR_READING_SCHEMA", $r25, $r24);

        specialinvoke $r22.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r23, $r21);

        throw $r22;

     label10:
        $r14 = new javax.xml.transform.dom.DOMSource;

        $r15 = virtualinvoke r31.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r14.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node,java.lang.String)>($r13, $r15);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label01;

     label11:
        $r7 = virtualinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $r8 = (org.apache.cxf.databinding.AbstractDataBinding) $r7;

        virtualinvoke $r8.<org.apache.cxf.databinding.AbstractDataBinding: void setSchemas(java.util.Collection)>($r4);

        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/service/factory/AbstractServiceFactoryBean;");

        <org.apache.cxf.service.factory.AbstractServiceFactoryBean: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
