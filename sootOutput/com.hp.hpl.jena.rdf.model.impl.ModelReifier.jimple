public class com.hp.hpl.jena.rdf.model.impl.ModelReifier extends java.lang.Object
{
    private com.hp.hpl.jena.rdf.model.impl.ModelCom model;
    private static boolean copyingReifications;
    protected final com.hp.hpl.jena.util.iterator.Map1 mapToRS;

    public void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier$1 $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.hp.hpl.jena.rdf.model.impl.ModelReifier$1;

        specialinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelReifier$1: void <init>(com.hp.hpl.jena.rdf.model.impl.ModelReifier)>(r0);

        r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.util.iterator.Map1 mapToRS> = $r1;

        r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.impl.ModelCom model> = r2;

        return;
    }

    public com.hp.hpl.jena.shared.ReificationStyle getReificationStyle()
    {
        com.hp.hpl.jena.shared.ReificationStyle $r0;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r1;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        $r0 = <com.hp.hpl.jena.shared.ReificationStyle: com.hp.hpl.jena.shared.ReificationStyle Standard>;

        return $r0;
    }

    public static com.hp.hpl.jena.rdf.model.Model withHiddenStatements(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model getHiddenStatements()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.ReifiedStatement $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;
        com.hp.hpl.jena.rdf.model.Statement r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String,com.hp.hpl.jena.rdf.model.Statement)>(null, r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String, com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r3;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;
        com.hp.hpl.jena.rdf.model.Statement r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Statement;

        $r3 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r4 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl: com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl create(com.hp.hpl.jena.rdf.model.impl.ModelCom,java.lang.String,com.hp.hpl.jena.rdf.model.Statement)>($r3, r1, r2);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Resource getAnyReifiedStatement(com.hp.hpl.jena.rdf.model.Statement)
    {
        java.lang.Throwable $r5;
        com.hp.hpl.jena.rdf.model.ReifiedStatement $r3, $r4;
        com.hp.hpl.jena.rdf.model.RSIterator $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;
        com.hp.hpl.jena.rdf.model.Statement r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.RSIterator listReifiedStatements(com.hp.hpl.jena.graph.FrontsTriple)>(r1);

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RSIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

     label1:
        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RSIterator: com.hp.hpl.jena.rdf.model.ReifiedStatement nextRS()>();

     label2:
        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RSIterator: void close()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

     label4:
        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RSIterator: void close()>();

        throw $r5;

     label5:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(com.hp.hpl.jena.rdf.model.Statement)>(r1);

        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isReified(com.hp.hpl.jena.graph.FrontsTriple)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.graph.FrontsTriple r3;
        com.hp.hpl.jena.graph.Triple $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r3 := @parameter0: com.hp.hpl.jena.graph.FrontsTriple;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.graph.FrontsTriple: com.hp.hpl.jena.graph.Triple asTriple()>();

        $z0 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ReifierStd: boolean hasTriple(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple)>($r2, $r4);

        return $z0;
    }

    public void removeAllReifications(com.hp.hpl.jena.graph.FrontsTriple)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.graph.FrontsTriple r3;
        com.hp.hpl.jena.graph.Triple $r4;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r3 := @parameter0: com.hp.hpl.jena.graph.FrontsTriple;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.graph.FrontsTriple: com.hp.hpl.jena.graph.Triple asTriple()>();

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.ReifierStd: void remove(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple)>($r2, $r4);

        return;
    }

    public void removeReification(com.hp.hpl.jena.rdf.model.ReifiedStatement)
    {
        com.hp.hpl.jena.rdf.model.ReifiedStatement r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.graph.Node $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.graph.Triple $r6;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.ReifiedStatement;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.model.ReifiedStatement: com.hp.hpl.jena.graph.Node asNode()>();

        $r5 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.model.ReifiedStatement: com.hp.hpl.jena.rdf.model.Statement getStatement()>();

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.graph.Triple asTriple()>();

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.ReifierStd: void remove(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Triple)>($r2, $r4, $r6);

        return;
    }

    public com.hp.hpl.jena.rdf.model.RSIterator listReifiedStatements()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r1;
        com.hp.hpl.jena.rdf.model.impl.RSIteratorImpl $r0;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.RSIteratorImpl;

        $r2 = specialinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.util.iterator.ExtendedIterator findReifiedStatements()>();

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.RSIteratorImpl: void <init>(java.util.Iterator)>($r2);

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.RSIterator listReifiedStatements(com.hp.hpl.jena.graph.FrontsTriple)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4;
        com.hp.hpl.jena.rdf.model.impl.RSIteratorImpl $r0;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r1;
        com.hp.hpl.jena.graph.FrontsTriple r2;
        com.hp.hpl.jena.graph.Triple $r3;

        r1 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r2 := @parameter0: com.hp.hpl.jena.graph.FrontsTriple;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.RSIteratorImpl;

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.graph.FrontsTriple: com.hp.hpl.jena.graph.Triple asTriple()>();

        $r4 = specialinvoke r1.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.util.iterator.ExtendedIterator findReifiedStatements(com.hp.hpl.jena.graph.Triple)>($r3);

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.RSIteratorImpl: void <init>(java.util.Iterator)>($r4);

        return $r0;
    }

    public void noteIfReified(com.hp.hpl.jena.rdf.model.RDFNode, com.hp.hpl.jena.rdf.model.RDFNode, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r1, r2, r3;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        r3 := @parameter2: com.hp.hpl.jena.rdf.model.RDFNode;

        $z0 = <com.hp.hpl.jena.rdf.model.impl.ModelReifier: boolean copyingReifications>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: void noteIfReified(com.hp.hpl.jena.rdf.model.RDFNode)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: void noteIfReified(com.hp.hpl.jena.rdf.model.RDFNode)>(r2);

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: void noteIfReified(com.hp.hpl.jena.rdf.model.RDFNode)>(r3);

     label1:
        return;
    }

    private void noteIfReified(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.ReifiedStatement r2;
        com.hp.hpl.jena.rdf.model.RDFNode r0, $r1;
        java.lang.String $r4;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r3;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.RDFNode: boolean canAs(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/ReifiedStatement;");

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/ReifiedStatement;");

        r2 = (com.hp.hpl.jena.rdf.model.ReifiedStatement) $r1;

        $r4 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.ReifiedStatement: java.lang.String getURI()>();

        $r5 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.ReifiedStatement: com.hp.hpl.jena.rdf.model.Statement getStatement()>();

        virtualinvoke r3.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String,com.hp.hpl.jena.rdf.model.Statement)>($r4, $r5);

     label1:
        return;
    }

    private com.hp.hpl.jena.util.iterator.ExtendedIterator findReifiedStatements()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3, $r5;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;
        com.hp.hpl.jena.util.iterator.Map1 $r4;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ReifierStd: com.hp.hpl.jena.util.iterator.ExtendedIterator allNodes(com.hp.hpl.jena.graph.Graph)>($r2);

        $r4 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.util.iterator.Map1 mapToRS>;

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r4);

        return $r5;
    }

    private com.hp.hpl.jena.util.iterator.ExtendedIterator findReifiedStatements(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4, $r6;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;
        com.hp.hpl.jena.util.iterator.Map1 $r5;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.graph.Triple r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r3 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r4 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ReifierStd: com.hp.hpl.jena.util.iterator.ExtendedIterator allNodes(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple)>($r2, r3);

        $r5 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.util.iterator.Map1 mapToRS>;

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r5);

        return $r6;
    }

    private com.hp.hpl.jena.rdf.model.ReifiedStatement getRS(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.rdf.model.ReifiedStatement $r3;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r2;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl: com.hp.hpl.jena.rdf.model.ReifiedStatement createExistingReifiedStatement(com.hp.hpl.jena.rdf.model.impl.ModelCom,com.hp.hpl.jena.graph.Node)>($r2, r1);

        return $r3;
    }

    static com.hp.hpl.jena.rdf.model.ReifiedStatement access$000(com.hp.hpl.jena.rdf.model.impl.ModelReifier, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.rdf.model.ReifiedStatement $r2;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.rdf.model.impl.ModelReifier r0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.impl.ModelReifier;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelReifier: com.hp.hpl.jena.rdf.model.ReifiedStatement getRS(com.hp.hpl.jena.graph.Node)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.rdf.model.impl.ModelReifier: boolean copyingReifications> = 0;

        return;
    }
}
