class groovy.xml.StreamingMarkupBuilder$_closure1 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    static java.lang.Class class$groovy$xml$StreamingMarkupBuilder;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object r3, r4;
        groovy.xml.StreamingMarkupBuilder$_closure1 r2;

        r2 := @this: groovy.xml.StreamingMarkupBuilder$_closure1;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.StreamingMarkupBuilder$_closure1");

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return;
    }

    public java.lang.Object doCall(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        groovy.xml.StreamingMarkupBuilder$_closure1 r13;
        java.lang.Object[] $r27, $r34, $r42;
        groovy.lang.Reference $r1, $r3;
        java.lang.Object r0, r2, r14, r15, r16, r17, r18, r19, $r25, $r26, $r32, $r33, $r35, $r40, $r41, $r43;
        java.lang.Class $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r20, $r21, $r22, $r23, $r24, $r28, $r29, $r30, $r31, $r36, $r37, $r38, $r39;

        r13 := @this: groovy.xml.StreamingMarkupBuilder$_closure1;

        r14 := @parameter0: java.lang.Object;

        r15 := @parameter1: java.lang.Object;

        r16 := @parameter2: java.lang.Object;

        r17 := @parameter3: java.lang.Object;

        r18 := @parameter4: java.lang.Object;

        r19 := @parameter5: java.lang.Object;

        r0 := @parameter6: java.lang.Object;

        r2 := @parameter7: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r4 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$0>;

        if $r4 != null goto label01;

        $r20 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.StreamingMarkupBuilder$_closure1");

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$0> = $r20;

        goto label02;

     label01:
        $r20 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$0>;

     label02:
        $r5 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r5 != null goto label03;

        $r21 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r21;

        goto label04;

     label03:
        $r21 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r6 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

        if $r6 != null goto label05;

        $r12 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.StreamingMarkupBuilder");

        $r22 = $r12;

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder> = $r12;

        goto label06;

     label05:
        $r22 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

     label06:
        $r7 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

        if $r7 != null goto label07;

        $r23 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.StreamingMarkupBuilder");

        $r24 = $r23;

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder> = $r23;

        goto label08;

     label07:
        $r24 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

     label08:
        $r25 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r24, $r25, "unescaped");

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = "<!--";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r22, $r26, "leftShift", $r27);

        $r28 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

        if $r28 != null goto label09;

        $r11 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.StreamingMarkupBuilder");

        $r29 = $r11;

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder> = $r11;

        goto label10;

     label09:
        $r29 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

     label10:
        $r8 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

        if $r8 != null goto label11;

        $r30 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.StreamingMarkupBuilder");

        $r31 = $r30;

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder> = $r30;

        goto label12;

     label11:
        $r31 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

     label12:
        $r32 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r31, $r32, "escaped");

        $r34 = newarray (java.lang.Object)[1];

        $r35 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r34[0] = $r35;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r29, $r33, "leftShift", $r34);

        $r36 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

        if $r36 != null goto label13;

        $r10 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.StreamingMarkupBuilder");

        $r37 = $r10;

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder> = $r10;

        goto label14;

     label13:
        $r37 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

     label14:
        $r9 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

        if $r9 != null goto label15;

        $r38 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.StreamingMarkupBuilder");

        $r39 = $r38;

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder> = $r38;

        goto label16;

     label15:
        $r39 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$xml$StreamingMarkupBuilder>;

     label16:
        $r40 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r41 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r39, $r40, "unescaped");

        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = "-->";

        $r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r37, $r41, "leftShift", $r42);

        return $r43;
    }

    public java.lang.Object call(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r8;
        groovy.lang.Reference $r1, $r3;
        java.lang.Object r0, r2, r9, r10, r11, r12, r13, r14, $r15, $r16, $r17;
        java.lang.Class $r4, r5, $r6, $r18, $r19;
        groovy.xml.StreamingMarkupBuilder$_closure1 r7;

        r7 := @this: groovy.xml.StreamingMarkupBuilder$_closure1;

        r9 := @parameter0: java.lang.Object;

        r10 := @parameter1: java.lang.Object;

        r11 := @parameter2: java.lang.Object;

        r12 := @parameter3: java.lang.Object;

        r13 := @parameter4: java.lang.Object;

        r14 := @parameter5: java.lang.Object;

        r0 := @parameter6: java.lang.Object;

        r2 := @parameter7: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r4 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$0>;

        if $r4 != null goto label1;

        $r18 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.xml.StreamingMarkupBuilder$_closure1");

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$0> = $r18;

        goto label2;

     label1:
        $r18 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$0>;

     label2:
        r5 = $r18;

        $r6 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r6 != null goto label3;

        $r19 = staticinvoke <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r19;

        goto label4;

     label3:
        $r19 = <groovy.xml.StreamingMarkupBuilder$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r8 = newarray (java.lang.Object)[8];

        $r8[0] = r9;

        $r8[1] = r10;

        $r8[2] = r11;

        $r8[3] = r12;

        $r8[4] = r13;

        $r8[5] = r14;

        $r15 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r8[6] = $r15;

        $r16 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r8[7] = $r16;

        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r5, r7, "doCall", $r8);

        return $r17;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
