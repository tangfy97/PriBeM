class org.springframework.http.converter.ResourceHttpMessageConverter$ActivationMediaTypeFactory extends java.lang.Object
{
    private static final javax.activation.FileTypeMap fileTypeMap;

    static void <clinit>()
    {
        javax.activation.FileTypeMap $r0;

        $r0 = staticinvoke <org.springframework.http.converter.ResourceHttpMessageConverter$ActivationMediaTypeFactory: javax.activation.FileTypeMap loadFileTypeMapFromContextSupportModule()>();

        <org.springframework.http.converter.ResourceHttpMessageConverter$ActivationMediaTypeFactory: javax.activation.FileTypeMap fileTypeMap> = $r0;

        return;
    }

    private void <init>()
    {
        org.springframework.http.converter.ResourceHttpMessageConverter$ActivationMediaTypeFactory r0;

        r0 := @this: org.springframework.http.converter.ResourceHttpMessageConverter$ActivationMediaTypeFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static javax.activation.FileTypeMap loadFileTypeMapFromContextSupportModule()
    {
        java.lang.Throwable $r4;
        org.springframework.core.io.ClassPathResource $r0;
        java.io.IOException $r3, $r5, $r6, $r7;
        javax.activation.MimetypesFileTypeMap $r2;
        javax.activation.FileTypeMap $r9;
        boolean $z0;
        java.io.InputStream $r1, r8;

        $r0 = new org.springframework.core.io.ClassPathResource;

        specialinvoke $r0.<org.springframework.core.io.ClassPathResource: void <init>(java.lang.String)>("org/springframework/mail/javamail/mime.types");

        $z0 = interfaceinvoke $r0.<org.springframework.core.io.Resource: boolean exists()>();

        if $z0 == 0 goto label17;

        r8 = null;

     label01:
        $r1 = interfaceinvoke $r0.<org.springframework.core.io.Resource: java.io.InputStream getInputStream()>();

        r8 = $r1;

        $r2 = new javax.activation.MimetypesFileTypeMap;

        specialinvoke $r2.<javax.activation.MimetypesFileTypeMap: void <init>(java.io.InputStream)>($r1);

     label02:
        if $r1 == null goto label06;

     label03:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r7 := @caughtexception;

     label06:
        return $r2;

     label07:
        $r6 := @caughtexception;

     label08:
        if r8 == null goto label17;

     label09:
        virtualinvoke r8.<java.io.InputStream: void close()>();

     label10:
        goto label17;

     label11:
        $r5 := @caughtexception;

        goto label17;

     label12:
        $r4 := @caughtexception;

        if r8 == null goto label16;

     label13:
        virtualinvoke r8.<java.io.InputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r3 := @caughtexception;

     label16:
        throw $r4;

     label17:
        $r9 = staticinvoke <javax.activation.FileTypeMap: javax.activation.FileTypeMap getDefaultFileTypeMap()>();

        return $r9;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.IOException from label01 to label02 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.io.IOException from label13 to label14 with label15;
    }

    public static org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)
    {
        org.springframework.http.MediaType $r4;
        javax.activation.FileTypeMap $r1;
        java.lang.String $r2, $r3;
        org.springframework.core.io.Resource r0;
        boolean $z0;

        r0 := @parameter0: org.springframework.core.io.Resource;

        $r1 = <org.springframework.http.converter.ResourceHttpMessageConverter$ActivationMediaTypeFactory: javax.activation.FileTypeMap fileTypeMap>;

        $r2 = interfaceinvoke r0.<org.springframework.core.io.Resource: java.lang.String getFilename()>();

        $r3 = virtualinvoke $r1.<javax.activation.FileTypeMap: java.lang.String getContentType(java.lang.String)>($r2);

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.springframework.http.MediaType: org.springframework.http.MediaType parseMediaType(java.lang.String)>($r3);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }
}
