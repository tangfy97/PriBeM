class ucar.unidata.io.MMapRandomAccessFile extends ucar.unidata.io.RandomAccessFile
{
    private java.nio.MappedByteBuffer source;

    void <init>(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.RandomAccessFile $r3;
        ucar.unidata.io.MMapRandomAccessFile r0;
        long $l0, $l1, $l3;
        java.nio.channels.FileChannel$MapMode $r6;
        int $i2;
        java.lang.String r1, r2;
        java.nio.channels.FileChannel $r4;
        boolean $z0;
        java.nio.MappedByteBuffer $r5;

        r0 := @this: ucar.unidata.io.MMapRandomAccessFile;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String,int)>(r1, r2, 1);

        $r3 = r0.<ucar.unidata.io.MMapRandomAccessFile: java.io.RandomAccessFile file>;

        $r4 = virtualinvoke $r3.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        $z0 = r0.<ucar.unidata.io.MMapRandomAccessFile: boolean readonly>;

        if $z0 == 0 goto label1;

        $r6 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>;

        goto label2;

     label1:
        $r6 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_WRITE>;

     label2:
        $l0 = virtualinvoke $r4.<java.nio.channels.FileChannel: long size()>();

        $r5 = virtualinvoke $r4.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r6, 0L, $l0);

        r0.<ucar.unidata.io.MMapRandomAccessFile: java.nio.MappedByteBuffer source> = $r5;

        virtualinvoke $r4.<java.nio.channels.FileChannel: void close()>();

        r0.<ucar.unidata.io.MMapRandomAccessFile: long bufferStart> = 0L;

        $l1 = virtualinvoke $r4.<java.nio.channels.FileChannel: long size()>();

        $i2 = (int) $l1;

        r0.<ucar.unidata.io.MMapRandomAccessFile: int dataSize> = $i2;

        $l3 = virtualinvoke $r4.<java.nio.channels.FileChannel: long size()>();

        r0.<ucar.unidata.io.MMapRandomAccessFile: long dataEnd> = $l3;

        r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition> = 0L;

        r0.<ucar.unidata.io.MMapRandomAccessFile: byte[] buffer> = null;

        r0.<ucar.unidata.io.MMapRandomAccessFile: boolean endOfFile> = 0;

        return;
    }

    public void flush() throws java.io.IOException
    {
        ucar.unidata.io.MMapRandomAccessFile r0;
        boolean $z0;
        java.nio.MappedByteBuffer $r1;

        r0 := @this: ucar.unidata.io.MMapRandomAccessFile;

        $z0 = r0.<ucar.unidata.io.MMapRandomAccessFile: boolean bufferModified>;

        if $z0 == 0 goto label1;

        $r1 = r0.<ucar.unidata.io.MMapRandomAccessFile: java.nio.MappedByteBuffer source>;

        virtualinvoke $r1.<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer force()>();

        r0.<ucar.unidata.io.MMapRandomAccessFile: boolean bufferModified> = 0;

     label1:
        return;
    }

    public void close() throws java.io.IOException
    {
        ucar.unidata.io.MMapRandomAccessFile r0;
        boolean $z0;

        r0 := @this: ucar.unidata.io.MMapRandomAccessFile;

        $z0 = r0.<ucar.unidata.io.MMapRandomAccessFile: boolean readonly>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<ucar.unidata.io.MMapRandomAccessFile: void flush()>();

     label1:
        r0.<ucar.unidata.io.MMapRandomAccessFile: java.nio.MappedByteBuffer source> = null;

        return;
    }

    public long length()
    {
        long $l0;
        ucar.unidata.io.MMapRandomAccessFile r0;

        r0 := @this: ucar.unidata.io.MMapRandomAccessFile;

        $l0 = r0.<ucar.unidata.io.MMapRandomAccessFile: long dataEnd>;

        return $l0;
    }

    public void seek(long)
    {
        ucar.unidata.io.MMapRandomAccessFile r0;
        long l0, $l1, $l2, $l4;
        byte $b3;
        int $i5, $i6;
        java.nio.MappedByteBuffer $r1;

        r0 := @this: ucar.unidata.io.MMapRandomAccessFile;

        l0 := @parameter0: long;

        r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition> = l0;

        $l2 = r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition>;

        $l1 = r0.<ucar.unidata.io.MMapRandomAccessFile: long dataEnd>;

        $b3 = $l2 cmp $l1;

        $i6 = (int) $b3;

        if $i6 >= 0 goto label1;

        $r1 = r0.<ucar.unidata.io.MMapRandomAccessFile: java.nio.MappedByteBuffer source>;

        $l4 = r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition>;

        $i5 = (int) $l4;

        virtualinvoke $r1.<java.nio.MappedByteBuffer: java.nio.Buffer position(int)>($i5);

        goto label2;

     label1:
        r0.<ucar.unidata.io.MMapRandomAccessFile: boolean endOfFile> = 1;

     label2:
        return;
    }

    public void unread()
    {
        long $l0, $l1;
        ucar.unidata.io.MMapRandomAccessFile r0;

        r0 := @this: ucar.unidata.io.MMapRandomAccessFile;

        $l0 = r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition>;

        $l1 = $l0 - 1L;

        virtualinvoke r0.<ucar.unidata.io.MMapRandomAccessFile: void seek(long)>($l1);

        return;
    }

    public int read() throws java.io.IOException
    {
        ucar.unidata.io.MMapRandomAccessFile r0;
        long $l0, $l1, $l3, $l4;
        short $s6, $s8;
        byte $b2, $b5;
        int $i7, $i9, $i11;
        java.nio.MappedByteBuffer $r1;

        r0 := @this: ucar.unidata.io.MMapRandomAccessFile;

        $l1 = r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition>;

        $l0 = r0.<ucar.unidata.io.MMapRandomAccessFile: long dataEnd>;

        $b2 = $l1 cmp $l0;

        $i7 = (int) $b2;

        if $i7 >= 0 goto label1;

        $l3 = r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition>;

        $l4 = $l3 + 1L;

        r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition> = $l4;

        $r1 = r0.<ucar.unidata.io.MMapRandomAccessFile: java.nio.MappedByteBuffer source>;

        $b5 = virtualinvoke $r1.<java.nio.MappedByteBuffer: byte get()>();

        $s8 = (short) $b5;

        $s6 = $s8 & 255;

        $i9 = (int) $s6;

        return $i9;

     label1:
        $i11 = (int) -1;

        return $i11;
    }

    protected int readBytes(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        ucar.unidata.io.MMapRandomAccessFile r0;
        long $l0, $l1, $l2, $l3, $l4, $l6, $l7, $l8;
        int i5, i9, i10, $i12;
        boolean $z0;
        java.nio.MappedByteBuffer $r2;

        r0 := @this: ucar.unidata.io.MMapRandomAccessFile;

        r1 := @parameter0: byte[];

        i5 := @parameter1: int;

        i9 := @parameter2: int;

        $z0 = r0.<ucar.unidata.io.MMapRandomAccessFile: boolean endOfFile>;

        if $z0 == 0 goto label1;

        $i12 = (int) -1;

        return $i12;

     label1:
        $l3 = (long) i9;

        $l1 = r0.<ucar.unidata.io.MMapRandomAccessFile: long dataEnd>;

        $l0 = r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition>;

        $l2 = $l1 - $l0;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>($l3, $l2);

        i10 = (int) $l4;

        if i10 <= 0 goto label2;

        $r2 = r0.<ucar.unidata.io.MMapRandomAccessFile: java.nio.MappedByteBuffer source>;

        virtualinvoke $r2.<java.nio.MappedByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r1, i5, i10);

        $l7 = r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition>;

        $l6 = (long) i10;

        $l8 = $l7 + $l6;

        r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition> = $l8;

     label2:
        return i10;
    }

    public void write(int) throws java.io.IOException
    {
        byte $b1;
        ucar.unidata.io.MMapRandomAccessFile r0;
        int i0;
        long $l2, $l3;
        java.nio.MappedByteBuffer $r1;

        r0 := @this: ucar.unidata.io.MMapRandomAccessFile;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.unidata.io.MMapRandomAccessFile: java.nio.MappedByteBuffer source>;

        $b1 = (byte) i0;

        virtualinvoke $r1.<java.nio.MappedByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

        $l2 = r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition>;

        $l3 = $l2 + 1L;

        r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition> = $l3;

        r0.<ucar.unidata.io.MMapRandomAccessFile: boolean bufferModified> = 1;

        return;
    }

    public void writeBytes(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        ucar.unidata.io.MMapRandomAccessFile r0;
        long $l2, $l3, $l4;
        int i0, i1;
        java.nio.MappedByteBuffer $r2;

        r0 := @this: ucar.unidata.io.MMapRandomAccessFile;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<ucar.unidata.io.MMapRandomAccessFile: java.nio.MappedByteBuffer source>;

        virtualinvoke $r2.<java.nio.MappedByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r1, i0, i1);

        $l3 = r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition>;

        $l2 = (long) i1;

        $l4 = $l3 + $l2;

        r0.<ucar.unidata.io.MMapRandomAccessFile: long filePosition> = $l4;

        return;
    }
}
