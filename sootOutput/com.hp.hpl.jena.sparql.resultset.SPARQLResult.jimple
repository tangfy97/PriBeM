public class com.hp.hpl.jena.sparql.resultset.SPARQLResult extends java.lang.Object
{
    private boolean hasBeenSet;
    private com.hp.hpl.jena.query.ResultSet resultSet;
    private java.lang.Boolean booleanResult;
    private com.hp.hpl.jena.rdf.model.Model model;

    protected void <init>()
    {
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet> = 0;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.query.ResultSet resultSet> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: java.lang.Boolean booleanResult> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.rdf.model.Model model> = null;

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet> = 0;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.query.ResultSet resultSet> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: java.lang.Boolean booleanResult> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.rdf.model.Model model> = null;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: void set(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return;
    }

    public void <init>(com.hp.hpl.jena.query.ResultSet)
    {
        com.hp.hpl.jena.query.ResultSet r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        r1 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet> = 0;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.query.ResultSet resultSet> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: java.lang.Boolean booleanResult> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.rdf.model.Model model> = null;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: void set(com.hp.hpl.jena.query.ResultSet)>(r1);

        return;
    }

    public void <init>(boolean)
    {
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet> = 0;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.query.ResultSet resultSet> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: java.lang.Boolean booleanResult> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.rdf.model.Model model> = null;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: void set(boolean)>(z0);

        return;
    }

    public boolean isResultSet()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r2;
        com.hp.hpl.jena.query.ResultSet $r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        $z0 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet>;

        if $z0 != 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not set");

        throw $r2;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.query.ResultSet resultSet>;

        if $r1 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isModel()
    {
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean isGraph()>();

        return $z0;
    }

    public boolean isGraph()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r2;
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        $z0 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet>;

        if $z0 != 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not set");

        throw $r2;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.rdf.model.Model model>;

        if $r1 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isBoolean()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r2;
        java.lang.Boolean $r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        $z0 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet>;

        if $z0 != 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not set");

        throw $r2;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: java.lang.Boolean booleanResult>;

        if $r1 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public com.hp.hpl.jena.query.ResultSet getResultSet()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r2, $r3;
        com.hp.hpl.jena.query.ResultSet $r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        $z0 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet>;

        if $z0 != 0 goto label1;

        $r3 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not set");

        throw $r3;

     label1:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean isResultSet()>();

        if $z1 != 0 goto label2;

        $r2 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not a ResultSet result");

        throw $r2;

     label2:
        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.query.ResultSet resultSet>;

        return $r1;
    }

    public boolean getBooleanResult()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r2, $r3;
        java.lang.Boolean $r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        $z0 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet>;

        if $z0 != 0 goto label1;

        $r3 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not set");

        throw $r3;

     label1:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean isBoolean()>();

        if $z1 != 0 goto label2;

        $r2 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not a boolean result");

        throw $r2;

     label2:
        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: java.lang.Boolean booleanResult>;

        $z2 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;
    }

    public com.hp.hpl.jena.rdf.model.Model getModel()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r2, $r3;
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        $z0 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet>;

        if $z0 != 0 goto label1;

        $r3 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not set");

        throw $r3;

     label1:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean isModel()>();

        if $z1 != 0 goto label2;

        $r2 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>("Not a graph result");

        throw $r2;

     label2:
        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.rdf.model.Model model>;

        return $r1;
    }

    public boolean isHasBeenSet()
    {
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        $z0 = r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet>;

        return $z0;
    }

    protected void set(com.hp.hpl.jena.query.ResultSet)
    {
        com.hp.hpl.jena.query.ResultSet r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        r1 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.query.ResultSet resultSet> = r1;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet> = 1;

        return;
    }

    protected void set(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: com.hp.hpl.jena.rdf.model.Model model> = r1;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet> = 1;

        return;
    }

    protected void set(boolean)
    {
        java.lang.Boolean $r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.Boolean;

        specialinvoke $r1.<java.lang.Boolean: void <init>(boolean)>(z0);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: void set(java.lang.Boolean)>($r1);

        return;
    }

    protected void set(java.lang.Boolean)
    {
        java.lang.Boolean r1;
        com.hp.hpl.jena.sparql.resultset.SPARQLResult r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.SPARQLResult;

        r1 := @parameter0: java.lang.Boolean;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: java.lang.Boolean booleanResult> = r1;

        r0.<com.hp.hpl.jena.sparql.resultset.SPARQLResult: boolean hasBeenSet> = 1;

        return;
    }

    protected static void addBinding(com.hp.hpl.jena.sparql.engine.binding.BindingMap, com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.graph.Node)
    {
        java.lang.Object[] $r4;
        com.hp.hpl.jena.graph.Node $r2, r3;
        com.hp.hpl.jena.sparql.core.Var r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingMap r0;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.BindingMap;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.Var;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingMap: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>(r1);

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Var: java.lang.String getName()>();

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Multiple occurences of a binding for variable \'%s\' with different values - ignored", $r4);

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/sparql/resultset/SPARQLResult;", $r6);

        return;

     label2:
        interfaceinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingMap: void add(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node)>(r1, r3);

        return;
    }
}
