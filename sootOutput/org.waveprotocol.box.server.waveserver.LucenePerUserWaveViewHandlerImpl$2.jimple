class org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2 extends java.lang.Object implements java.util.concurrent.Callable
{
    final org.waveprotocol.wave.model.id.WaveletName val$waveletName;
    final org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl, org.waveprotocol.wave.model.id.WaveletName)
    {
        org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl r1;
        org.waveprotocol.wave.model.id.WaveletName r2;
        org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2 r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletName;

        r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2: org.waveprotocol.wave.model.id.WaveletName val$waveletName> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call() throws java.lang.Exception
    {
        org.apache.lucene.search.NRTManager $r6;
        java.util.logging.Level $r10, $r18, $r26;
        org.apache.lucene.index.CorruptIndexException $r23;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r4;
        java.lang.String $r14, $r22, $r30;
        org.waveprotocol.wave.model.id.WaveletName $r3, $r12, $r20, $r28;
        org.waveprotocol.box.server.waveserver.ReadableWaveletDataProvider $r2;
        java.io.IOException $r15;
        java.util.logging.Logger $r8, $r16, $r24;
        org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl $r1, $r5;
        org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2 r0;
        java.lang.StringBuilder $r9, $r11, $r13, $r17, $r19, $r21, $r25, $r27, $r29;
        org.waveprotocol.box.server.waveserver.WaveServerException $r7;

        r0 := @this: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2;

     label1:
        $r1 = r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl this$0>;

        $r2 = staticinvoke <org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl: org.waveprotocol.box.server.waveserver.ReadableWaveletDataProvider access$000(org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl)>($r1);

        $r3 = r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        $r4 = interfaceinvoke $r2.<org.waveprotocol.box.server.waveserver.ReadableWaveletDataProvider: org.waveprotocol.wave.model.wave.data.ReadableWaveletData getReadableWaveletData(org.waveprotocol.wave.model.id.WaveletName)>($r3);

     label2:
        $r5 = r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl this$0>;

        $r6 = staticinvoke <org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl: org.apache.lucene.search.NRTManager access$300(org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl)>($r5);

        staticinvoke <org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl: void access$400(org.waveprotocol.wave.model.wave.data.ReadableWaveletData,org.apache.lucene.search.NRTManager)>($r4, $r6);

     label3:
        goto label6;

     label4:
        $r23 := @caughtexception;

        $r24 = staticinvoke <org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl: java.util.logging.Logger access$200()>();

        $r26 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to update index for ");

        $r28 = r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r26, $r30, $r23);

        throw $r23;

     label5:
        $r15 := @caughtexception;

        $r16 = staticinvoke <org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl: java.util.logging.Logger access$200()>();

        $r18 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to update index for ");

        $r20 = r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r18, $r22, $r15);

        throw $r15;

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

        $r8 = staticinvoke <org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl: java.util.logging.Logger access$200()>();

        $r10 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to update index for ");

        $r12 = r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r10, $r14, $r7);

        throw $r7;

     label8:
        return null;

        catch org.apache.lucene.index.CorruptIndexException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label5;
        catch org.waveprotocol.box.server.waveserver.WaveServerException from label1 to label6 with label7;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        java.lang.Void $r1;
        org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2 r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$2: java.lang.Void call()>();

        return $r1;
    }
}
