final class com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule extends com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule
{
    private final com.mycila.inject.internal.asm.xml.ASMContentHandler this$0;

    void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule;

        r1 := @parameter0: com.mycila.inject.internal.asm.xml.ASMContentHandler;

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule: void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)>(r1);

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0> = r1;

        return;
    }

    public final void begin(java.lang.String, org.xml.sax.Attributes)
    {
        java.util.HashMap $r1, $r3;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler $r2, $r10;
        java.util.ArrayList $r9;
        org.xml.sax.Attributes r4;
        java.lang.String $r5, $r6, $r7, $r8, r11;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule;

        r11 := @parameter0: java.lang.String;

        r4 := @parameter1: org.xml.sax.Attributes;

        $r2 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2.<com.mycila.inject.internal.asm.xml.ASMContentHandler: java.util.Map labels> = $r1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r5 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("access");

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("access", $r5);

        $r6 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", $r6);

        $r7 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("desc", $r7);

        $r8 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("signature");

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("signature", $r8);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("exceptions", $r9);

        $r10 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        virtualinvoke $r10.<com.mycila.inject.internal.asm.xml.ASMContentHandler: void push(java.lang.Object)>($r3);

        return;
    }

    public final void end(java.lang.String)
    {
        com.mycila.inject.internal.asm.MethodVisitor $r3;
        java.lang.Object $r2;
        java.lang.String r5;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler $r1, $r4;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.asm.xml.ASMContentHandler: java.lang.Object pop()>();

        $r3 = (com.mycila.inject.internal.asm.MethodVisitor) $r2;

        interfaceinvoke $r3.<com.mycila.inject.internal.asm.MethodVisitor: void visitEnd()>();

        $r4 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$MethodRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler: java.util.Map labels> = null;

        return;
    }
}
