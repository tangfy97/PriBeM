public class com.ctc.wstx.ent.UnparsedExtEntity extends com.ctc.wstx.ent.ExtEntity
{
    final java.lang.String mNotationId;

    public void <init>(javax.xml.stream.Location, java.lang.String, java.net.URL, java.lang.String, java.lang.String, java.lang.String)
    {
        com.ctc.wstx.ent.UnparsedExtEntity r0;
        java.net.URL r3;
        javax.xml.stream.Location r1;
        java.lang.String r2, r4, r5, r6;

        r0 := @this: com.ctc.wstx.ent.UnparsedExtEntity;

        r1 := @parameter0: javax.xml.stream.Location;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.net.URL;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        specialinvoke r0.<com.ctc.wstx.ent.ExtEntity: void <init>(javax.xml.stream.Location,java.lang.String,java.net.URL,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        r0.<com.ctc.wstx.ent.UnparsedExtEntity: java.lang.String mNotationId> = r6;

        return;
    }

    public java.lang.String getNotationName()
    {
        java.lang.String $r1;
        com.ctc.wstx.ent.UnparsedExtEntity r0;

        r0 := @this: com.ctc.wstx.ent.UnparsedExtEntity;

        $r1 = r0.<com.ctc.wstx.ent.UnparsedExtEntity: java.lang.String mNotationId>;

        return $r1;
    }

    public void writeEnc(java.io.Writer) throws java.io.IOException
    {
        com.ctc.wstx.ent.UnparsedExtEntity r1;
        java.io.Writer r0;
        java.lang.String $r2, $r3, $r4, $r5;

        r1 := @this: com.ctc.wstx.ent.UnparsedExtEntity;

        r0 := @parameter0: java.io.Writer;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("<!ENTITY ");

        $r2 = r1.<com.ctc.wstx.ent.UnparsedExtEntity: java.lang.String mName>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<com.ctc.wstx.ent.UnparsedExtEntity: java.lang.String getPublicId()>();

        if $r3 == null goto label1;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("PUBLIC \"");

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r3);

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("\" ");

        goto label2;

     label1:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("SYSTEM ");

     label2:
        virtualinvoke r0.<java.io.Writer: void write(int)>(34);

        $r4 = virtualinvoke r1.<com.ctc.wstx.ent.UnparsedExtEntity: java.lang.String getSystemId()>();

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r4);

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("\" NDATA ");

        $r5 = r1.<com.ctc.wstx.ent.UnparsedExtEntity: java.lang.String mNotationId>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r5);

        virtualinvoke r0.<java.io.Writer: void write(int)>(62);

        return;
    }

    public boolean isParsed()
    {
        com.ctc.wstx.ent.UnparsedExtEntity r0;

        r0 := @this: com.ctc.wstx.ent.UnparsedExtEntity;

        return 0;
    }

    public com.ctc.wstx.io.WstxInputSource expand(com.ctc.wstx.io.WstxInputSource, javax.xml.stream.XMLResolver, com.ctc.wstx.api.ReaderConfig, int)
    {
        com.ctc.wstx.ent.UnparsedExtEntity r1;
        int i0;
        java.lang.Error $r0;
        javax.xml.stream.XMLResolver r3;
        com.ctc.wstx.api.ReaderConfig r4;
        com.ctc.wstx.io.WstxInputSource r2;

        r1 := @this: com.ctc.wstx.ent.UnparsedExtEntity;

        r2 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        r3 := @parameter1: javax.xml.stream.XMLResolver;

        r4 := @parameter2: com.ctc.wstx.api.ReaderConfig;

        i0 := @parameter3: int;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Internal error: createInputSource() called for unparsed (external) entity.");

        throw $r0;
    }
}
