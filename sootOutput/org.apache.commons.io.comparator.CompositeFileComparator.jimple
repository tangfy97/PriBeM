public class org.apache.commons.io.comparator.CompositeFileComparator extends org.apache.commons.io.comparator.AbstractFileComparator implements java.io.Serializable
{
    private static final java.util.Comparator[] NO_COMPARATORS;
    private final java.util.Comparator[] delegates;

    public transient void <init>(java.util.Comparator[])
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.util.Comparator[] r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.util.Comparator[];

        specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();

        if r1 != null goto label1;

        $r5 = <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS>;

        $r6 = (java.util.Comparator[]) $r5;

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r6;

        goto label2;

     label1:
        $i0 = lengthof r1;

        $r2 = newarray (java.util.Comparator)[$i0];

        $r3 = (java.util.Comparator[]) $r2;

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r3;

        $r4 = r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r4, 0, $i1);

     label2:
        return;
    }

    public void <init>(java.lang.Iterable)
    {
        java.lang.Object[] $r5;
        java.util.Iterator $r3;
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.lang.Iterable r1;
        java.util.ArrayList $r2;
        java.util.Comparator[] $r4, $r6, $r7, $r10, $r11;
        int $i0;
        java.lang.Object $r8;
        java.util.Comparator r9;
        boolean $z0;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();

        if r1 != null goto label1;

        $r10 = <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS>;

        $r11 = (java.util.Comparator[]) $r10;

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r11;

        goto label4;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Comparator) $r8;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label2;

     label3:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = newarray (java.util.Comparator)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.util.Comparator[]) $r5;

        $r7 = (java.util.Comparator[]) $r6;

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r7;

     label4:
        return;
    }

    public int compare(java.io.File, java.io.File)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.io.File r3, r4;
        java.util.Comparator[] r1;
        int i0, $i1, i2, i3;
        java.util.Comparator r2;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r3 := @parameter0: java.io.File;

        r4 := @parameter1: java.io.File;

        i2 = 0;

        r1 = r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r2 = r1[i3];

        $i1 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r3, r4);

        i2 = $i1;

        if $i1 == 0 goto label2;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    public java.lang.String toString()
    {
        org.apache.commons.io.comparator.CompositeFileComparator r1;
        java.util.Comparator[] $r3, $r5;
        int $i0, i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r4;
        java.util.Comparator $r6;

        r1 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<org.apache.commons.io.comparator.AbstractFileComparator: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i1 = 0;

     label1:
        $r3 = r1.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $r5 = r1.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        $r6 = $r5[i1];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public volatile java.util.List sort(java.util.List)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.util.List r1, $r2;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.util.List;

        $r2 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.util.List sort(java.util.List)>(r1);

        return $r2;
    }

    public volatile java.io.File[] sort(java.io.File[])
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.io.File[] r1, $r2;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.io.File[];

        $r2 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.io.File[] sort(java.io.File[])>(r1);

        return $r2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        int $i0;
        java.lang.Object r1, r2;
        java.io.File $r3, $r4;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.io.File) r1;

        $r3 = (java.io.File) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.io.comparator.CompositeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3);

        return $i0;
    }

    static void <clinit>()
    {
        java.util.Comparator[] $r0;

        $r0 = newarray (java.util.Comparator)[0];

        <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS> = $r0;

        return;
    }
}
