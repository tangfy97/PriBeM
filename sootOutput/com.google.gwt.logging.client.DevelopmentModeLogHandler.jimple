public class com.google.gwt.logging.client.DevelopmentModeLogHandler extends java.util.logging.Handler
{

    public void <init>()
    {
        com.google.gwt.logging.client.DevelopmentModeLogHandler r0;
        com.google.gwt.logging.client.TextLogFormatter $r1;
        java.util.logging.Level $r2;

        r0 := @this: com.google.gwt.logging.client.DevelopmentModeLogHandler;

        specialinvoke r0.<java.util.logging.Handler: void <init>()>();

        $r1 = new com.google.gwt.logging.client.TextLogFormatter;

        specialinvoke $r1.<com.google.gwt.logging.client.TextLogFormatter: void <init>(boolean)>(0);

        virtualinvoke r0.<com.google.gwt.logging.client.DevelopmentModeLogHandler: void setFormatter(java.util.logging.Formatter)>($r1);

        $r2 = <java.util.logging.Level: java.util.logging.Level ALL>;

        virtualinvoke r0.<com.google.gwt.logging.client.DevelopmentModeLogHandler: void setLevel(java.util.logging.Level)>($r2);

        return;
    }

    public void close()
    {
        com.google.gwt.logging.client.DevelopmentModeLogHandler r0;

        r0 := @this: com.google.gwt.logging.client.DevelopmentModeLogHandler;

        return;
    }

    public void flush()
    {
        com.google.gwt.logging.client.DevelopmentModeLogHandler r0;

        r0 := @this: com.google.gwt.logging.client.DevelopmentModeLogHandler;

        return;
    }

    public void publish(java.util.logging.LogRecord)
    {
        java.lang.Throwable $r4;
        java.lang.String $r3;
        com.google.gwt.logging.client.DevelopmentModeLogHandler r0;
        java.util.logging.LogRecord r1;
        java.util.logging.Formatter $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.gwt.logging.client.DevelopmentModeLogHandler;

        r1 := @parameter0: java.util.logging.LogRecord;

        $z0 = specialinvoke r0.<com.google.gwt.logging.client.DevelopmentModeLogHandler: boolean isSupported()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.google.gwt.logging.client.DevelopmentModeLogHandler: boolean isLoggable(java.util.logging.LogRecord)>(r1);

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = virtualinvoke r0.<com.google.gwt.logging.client.DevelopmentModeLogHandler: java.util.logging.Formatter getFormatter()>();

        $r3 = virtualinvoke $r2.<java.util.logging.Formatter: java.lang.String format(java.util.logging.LogRecord)>(r1);

        $r4 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

        staticinvoke <com.google.gwt.core.client.GWT: void log(java.lang.String,java.lang.Throwable)>($r3, $r4);

        return;
    }

    private boolean isSupported()
    {
        com.google.gwt.logging.client.DevelopmentModeLogHandler r0;
        boolean $z0, $z1;

        r0 := @this: com.google.gwt.logging.client.DevelopmentModeLogHandler;

        $z0 = staticinvoke <com.google.gwt.core.client.GWT: boolean isScript()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
