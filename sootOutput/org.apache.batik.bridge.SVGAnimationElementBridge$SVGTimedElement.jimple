public class org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement extends org.apache.batik.anim.timing.TimedElement
{
    private final org.apache.batik.bridge.SVGAnimationElementBridge this$0;

    protected void <init>(org.apache.batik.bridge.SVGAnimationElementBridge)
    {
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        org.apache.batik.bridge.SVGAnimationElementBridge r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        r1 := @parameter0: org.apache.batik.bridge.SVGAnimationElementBridge;

        specialinvoke r0.<org.apache.batik.anim.timing.TimedElement: void <init>()>();

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0> = r1;

        return;
    }

    public org.w3c.dom.Element getElement()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1;
        org.apache.batik.dom.svg.SVGOMElement $r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r2 = $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        return $r2;
    }

    protected void fireTimeEvent(java.lang.String, java.util.Calendar, int)
    {
        java.util.Calendar r3;
        int i0;
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        java.lang.String r2;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1;
        org.apache.batik.dom.svg.SVGOMElement $r4;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Calendar;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r4 = $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        staticinvoke <org.apache.batik.bridge.AnimationSupport: void fireTimeEvent(org.w3c.dom.events.EventTarget,java.lang.String,java.util.Calendar,int)>($r4, r2, r3, i0);

        return;
    }

    protected void toActive(float)
    {
        org.apache.batik.bridge.SVGAnimationEngine $r4;
        org.apache.batik.anim.AbstractAnimation $r3;
        float f0;
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1, $r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r4 = $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r3 = $r2.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.AbstractAnimation animation>;

        virtualinvoke $r4.<org.apache.batik.anim.AnimationEngine: void toActive(org.apache.batik.anim.AbstractAnimation,float)>($r3, f0);

        return;
    }

    protected void toInactive(boolean, boolean)
    {
        org.apache.batik.bridge.SVGAnimationEngine $r4;
        org.apache.batik.anim.AbstractAnimation $r3;
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1, $r2;
        boolean z0, z1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        z1 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r4 = $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r3 = $r2.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.AbstractAnimation animation>;

        virtualinvoke $r4.<org.apache.batik.anim.AnimationEngine: void toInactive(org.apache.batik.anim.AbstractAnimation,boolean)>($r3, z0);

        return;
    }

    protected void removeFill()
    {
        org.apache.batik.bridge.SVGAnimationEngine $r4;
        org.apache.batik.anim.AbstractAnimation $r3;
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1, $r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r4 = $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r3 = $r2.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.AbstractAnimation animation>;

        virtualinvoke $r4.<org.apache.batik.anim.AnimationEngine: void removeFill(org.apache.batik.anim.AbstractAnimation)>($r3);

        return;
    }

    protected void sampledAt(float, float, int)
    {
        org.apache.batik.anim.AbstractAnimation $r3;
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        org.apache.batik.bridge.SVGAnimationEngine $r4;
        int i0;
        float f0, f1;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1, $r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r4 = $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r3 = $r2.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.AbstractAnimation animation>;

        virtualinvoke $r4.<org.apache.batik.anim.AnimationEngine: void sampledAt(org.apache.batik.anim.AbstractAnimation,float,float,int)>($r3, f0, f1, i0);

        return;
    }

    protected void sampledLastValue(int)
    {
        org.apache.batik.bridge.SVGAnimationEngine $r4;
        org.apache.batik.anim.AbstractAnimation $r3;
        int i0;
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1, $r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r4 = $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r3 = $r2.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.AbstractAnimation animation>;

        virtualinvoke $r4.<org.apache.batik.anim.AnimationEngine: void sampledLastValue(org.apache.batik.anim.AbstractAnimation,int)>($r3, i0);

        return;
    }

    protected org.apache.batik.anim.timing.TimedElement getTimedElementById(java.lang.String)
    {
        org.apache.batik.anim.timing.TimedElement $r4;
        java.lang.String r0;
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r1;
        org.apache.batik.bridge.SVGAnimationElementBridge $r2;
        org.apache.batik.dom.svg.SVGOMElement $r3;

        r1 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r3 = $r2.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r4 = staticinvoke <org.apache.batik.bridge.AnimationSupport: org.apache.batik.anim.timing.TimedElement getTimedElementById(java.lang.String,org.w3c.dom.Node)>(r0, $r3);

        return $r4;
    }

    protected org.w3c.dom.events.EventTarget getEventTargetById(java.lang.String)
    {
        org.w3c.dom.events.EventTarget $r4;
        java.lang.String r0;
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r1;
        org.apache.batik.bridge.SVGAnimationElementBridge $r2;
        org.apache.batik.dom.svg.SVGOMElement $r3;

        r1 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r3 = $r2.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r4 = staticinvoke <org.apache.batik.bridge.AnimationSupport: org.w3c.dom.events.EventTarget getEventTargetById(java.lang.String,org.w3c.dom.Node)>(r0, $r3);

        return $r4;
    }

    protected org.w3c.dom.events.EventTarget getRootEventTarget()
    {
        org.w3c.dom.events.EventTarget $r4;
        org.w3c.dom.Document $r3;
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1;
        org.apache.batik.dom.svg.SVGOMElement $r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r2 = $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Document getOwnerDocument()>();

        $r4 = (org.w3c.dom.events.EventTarget) $r3;

        return $r4;
    }

    protected org.w3c.dom.events.EventTarget getAnimationEventTarget()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1;
        org.apache.batik.dom.svg.SVGOMElement $r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r2 = $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        return $r2;
    }

    public boolean isBefore(org.apache.batik.anim.timing.TimedElement)
    {
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement $r1, r3;
        short $s0, $s1;
        org.w3c.dom.Element $r2;
        org.apache.batik.anim.timing.TimedElement r0;
        org.apache.batik.bridge.SVGAnimationElementBridge $r4;
        org.apache.batik.dom.svg.SVGOMElement $r5;
        boolean $z0;

        r3 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        r0 := @parameter0: org.apache.batik.anim.timing.TimedElement;

        $r1 = (org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement) r0;

        $r2 = virtualinvoke $r1.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.w3c.dom.Element getElement()>();

        $r4 = r3.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r5 = $r4.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $s0 = virtualinvoke $r5.<org.apache.batik.dom.AbstractNode: short compareDocumentPosition(org.w3c.dom.Node)>($r2);

        $s1 = $s0 & 2;

        if $s1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        int $i0;
        java.lang.String $r3, $r6;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1, $r4;
        org.apache.batik.dom.svg.SVGOMElement $r2, $r5;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r2 = $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $r5 = $r4.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r6 = virtualinvoke $r5.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "id");

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        return $r6;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    protected boolean isConstantAnimation()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement r0;
        org.apache.batik.bridge.SVGAnimationElementBridge $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: org.apache.batik.bridge.SVGAnimationElementBridge this$0>;

        $z0 = virtualinvoke $r1.<org.apache.batik.bridge.SVGAnimationElementBridge: boolean isConstantAnimation()>();

        return $z0;
    }
}
