final class org.waveprotocol.wave.client.editor.EditorUndoManager$1 extends java.lang.Object implements org.waveprotocol.wave.client.editor.EditorUndoManager
{
    private final org.waveprotocol.wave.common.logging.LoggerBundle logger;

    void <init>()
    {
        org.waveprotocol.wave.common.logging.LoggerBundle $r1;
        org.waveprotocol.wave.client.editor.EditorUndoManager$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorUndoManager$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.waveprotocol.wave.client.editor.EditorStaticDeps: org.waveprotocol.wave.common.logging.LoggerBundle logger>;

        r0.<org.waveprotocol.wave.client.editor.EditorUndoManager$1: org.waveprotocol.wave.common.logging.LoggerBundle logger> = $r1;

        return;
    }

    public void nonUndoableOp(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.DocOp r1;
        org.waveprotocol.wave.client.editor.EditorUndoManager$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorUndoManager$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        return;
    }

    public void undoableOp(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.DocOp r1;
        org.waveprotocol.wave.client.editor.EditorUndoManager$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorUndoManager$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        return;
    }

    public void maybeCheckpoint()
    {
        org.waveprotocol.wave.client.editor.EditorUndoManager$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorUndoManager$1;

        return;
    }

    public void maybeCheckpoint(int, int)
    {
        int i0, i1;
        org.waveprotocol.wave.client.editor.EditorUndoManager$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorUndoManager$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void undo()
    {
        java.lang.Object[] $r1;
        org.waveprotocol.wave.client.editor.EditorUndoManager$1 r0;
        org.waveprotocol.wave.common.logging.AbstractLogger$Level $r2;
        org.waveprotocol.wave.common.logging.LoggerBundle $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorUndoManager$1;

        $r3 = r0.<org.waveprotocol.wave.client.editor.EditorUndoManager$1: org.waveprotocol.wave.common.logging.LoggerBundle logger>;

        $r2 = <org.waveprotocol.wave.common.logging.AbstractLogger$Level: org.waveprotocol.wave.common.logging.AbstractLogger$Level TRACE>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "No Undo For You!";

        interfaceinvoke $r3.<org.waveprotocol.wave.common.logging.LoggerBundle: void log(org.waveprotocol.wave.common.logging.AbstractLogger$Level,java.lang.Object[])>($r2, $r1);

        return;
    }

    public void redo()
    {
        java.lang.Object[] $r1;
        org.waveprotocol.wave.client.editor.EditorUndoManager$1 r0;
        org.waveprotocol.wave.common.logging.AbstractLogger$Level $r2;
        org.waveprotocol.wave.common.logging.LoggerBundle $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorUndoManager$1;

        $r3 = r0.<org.waveprotocol.wave.client.editor.EditorUndoManager$1: org.waveprotocol.wave.common.logging.LoggerBundle logger>;

        $r2 = <org.waveprotocol.wave.common.logging.AbstractLogger$Level: org.waveprotocol.wave.common.logging.AbstractLogger$Level TRACE>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "No Redo For You!";

        interfaceinvoke $r3.<org.waveprotocol.wave.common.logging.LoggerBundle: void log(org.waveprotocol.wave.common.logging.AbstractLogger$Level,java.lang.Object[])>($r2, $r1);

        return;
    }
}
