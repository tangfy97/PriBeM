public class com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList extends java.util.AbstractList
{
    com.coremedia.iso.boxes.Container topLevel;
    com.coremedia.iso.boxes.TrackBox trackBox;
    java.lang.ref.SoftReference[] cache;
    int[] chunkNumsStartSampleNum;
    long[] chunkOffsets;
    int[] chunkSizes;
    com.coremedia.iso.boxes.SampleSizeBox ssb;
    int lastChunk;

    public void <init>(long, com.coremedia.iso.boxes.Container)
    {
        com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList r0;
        byte $b2, $b9, $b14, $b47;
        java.lang.StringBuilder $r36, $r45;
        java.lang.Object[] $r27;
        long $l0, l1, $l6, $l8, $l11, $l13, $l19, $l20, $l21, $l25, $l28, l32, l39, $l45, $l46;
        com.coremedia.iso.boxes.MovieBox r4;
        java.lang.String $r37;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry[] $r26, r39;
        java.lang.RuntimeException $r46;
        com.coremedia.iso.boxes.SampleToChunkBox $r24;
        int[] $r15, $r28, $r29, $r30, $r31, $r32;
        boolean $z0;
        com.coremedia.iso.boxes.SampleTableBox $r11, $r20, $r23;
        java.lang.ref.SoftReference[] $r18;
        com.coremedia.iso.boxes.TrackBox $r9, $r10, $r19, $r22, r38;
        com.coremedia.iso.boxes.Container r1;
        java.util.List $r2, $r5, $r25;
        long[] $r13, $r14, $r16;
        int $i3, $i4, $i5, $i7, $i10, $i12, $i15, $i16, $i17, $i18, $i22, $i23, $i24, $i26, $i27, i29, i30, i31, i33, i34, $i35, i36, i37, i38, i40, i41, $i42, i43, i44, $i49, $i51, $i52;
        com.coremedia.iso.boxes.SampleSizeBox $r21, $r33, $r44;
        java.util.Iterator $r6;
        com.coremedia.iso.boxes.TrackHeaderBox $r8;
        com.coremedia.iso.boxes.ChunkOffsetBox $r12;
        java.lang.Object $r3, $r7, $r17;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r40, r41, r42, r43;

        r0 := @this: com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList;

        l1 := @parameter0: long;

        r1 := @parameter1: com.coremedia.iso.boxes.Container;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.TrackBox trackBox> = null;

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: java.lang.ref.SoftReference[] cache> = null;

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk> = 0;

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.Container topLevel> = r1;

        $r2 = interfaceinvoke r1.<com.coremedia.iso.boxes.Container: java.util.List getBoxes(java.lang.Class)>(class "Lcom/coremedia/iso/boxes/MovieBox;");

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (com.coremedia.iso.boxes.MovieBox) $r3;

        $r5 = virtualinvoke r4.<com.coremedia.iso.boxes.MovieBox: java.util.List getBoxes(java.lang.Class)>(class "Lcom/coremedia/iso/boxes/TrackBox;");

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        goto label02;

     label01:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r38 = (com.coremedia.iso.boxes.TrackBox) $r7;

        $r8 = virtualinvoke r38.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.TrackHeaderBox getTrackHeaderBox()>();

        $l0 = virtualinvoke $r8.<com.coremedia.iso.boxes.TrackHeaderBox: long getTrackId()>();

        $b2 = $l0 cmp l1;

        if $b2 != 0 goto label02;

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.TrackBox trackBox> = r38;

     label02:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label01;

        $r9 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.TrackBox trackBox>;

        if $r9 != null goto label03;

        $r46 = new java.lang.RuntimeException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("This MP4 does not contain track ");

        $r36 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.RuntimeException: void <init>(java.lang.String)>($r37);

        throw $r46;

     label03:
        $r10 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.TrackBox trackBox>;

        $r11 = virtualinvoke $r10.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.SampleTableBox getSampleTableBox()>();

        $r12 = virtualinvoke $r11.<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.ChunkOffsetBox getChunkOffsetBox()>();

        $r13 = virtualinvoke $r12.<com.coremedia.iso.boxes.ChunkOffsetBox: long[] getChunkOffsets()>();

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: long[] chunkOffsets> = $r13;

        $r14 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: long[] chunkOffsets>;

        $i3 = lengthof $r14;

        $r15 = newarray (int)[$i3];

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkSizes> = $r15;

        $r16 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: long[] chunkOffsets>;

        $i4 = lengthof $r16;

        $r17 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(class "Ljava/lang/ref/SoftReference;", $i4);

        $r18 = (java.lang.ref.SoftReference[]) $r17;

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: java.lang.ref.SoftReference[] cache> = $r18;

        $r19 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.TrackBox trackBox>;

        $r20 = virtualinvoke $r19.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.SampleTableBox getSampleTableBox()>();

        $r21 = virtualinvoke $r20.<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.SampleSizeBox getSampleSizeBox()>();

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.SampleSizeBox ssb> = $r21;

        $r22 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.TrackBox trackBox>;

        $r23 = virtualinvoke $r22.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.SampleTableBox getSampleTableBox()>();

        $r24 = virtualinvoke $r23.<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.SampleToChunkBox getSampleToChunkBox()>();

        $r25 = virtualinvoke $r24.<com.coremedia.iso.boxes.SampleToChunkBox: java.util.List getEntries()>();

        $i5 = interfaceinvoke $r25.<java.util.List: int size()>();

        $r26 = newarray (com.coremedia.iso.boxes.SampleToChunkBox$Entry)[$i5];

        $r27 = interfaceinvoke $r25.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r26);

        r39 = (com.coremedia.iso.boxes.SampleToChunkBox$Entry[]) $r27;

        i29 = 1;

        r40 = r39[0];

        i30 = 0;

        i31 = 0;

        l32 = virtualinvoke r40.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getFirstChunk()>();

        $l6 = virtualinvoke r40.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getSamplesPerChunk()>();

        i33 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l6);

        i34 = 1;

        $i7 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int size()>();

     label04:
        i30 = i30 + 1;

        $l8 = (long) i30;

        $b9 = $l8 cmp l32;

        if $b9 != 0 goto label06;

        i31 = i33;

        $i26 = lengthof r39;

        if $i26 <= i29 goto label05;

        $i27 = i29;

        i29 = i29 + 1;

        r41 = r39[$i27];

        $l28 = virtualinvoke r41.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getSamplesPerChunk()>();

        i33 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l28);

        l32 = virtualinvoke r41.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getFirstChunk()>();

        goto label06;

     label05:
        $i49 = (int) -1;

        i33 = $i49;

        l32 = 9223372036854775807L;

     label06:
        $i35 = i34 + i31;

        i34 = $i35;

        if $i35 <= $i7 goto label04;

        $i10 = i30 + 1;

        $r28 = newarray (int)[$i10];

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkNumsStartSampleNum> = $r28;

        i36 = 1;

        r42 = r39[0];

        i37 = 0;

        i38 = 0;

        l39 = virtualinvoke r42.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getFirstChunk()>();

        $l11 = virtualinvoke r42.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getSamplesPerChunk()>();

        i40 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l11);

        i41 = 1;

     label07:
        $r29 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkNumsStartSampleNum>;

        $i12 = i37;

        i37 = i37 + 1;

        $r29[$i12] = i41;

        $l13 = (long) i37;

        $b14 = $l13 cmp l39;

        if $b14 != 0 goto label09;

        i38 = i40;

        $i23 = lengthof r39;

        if $i23 <= i36 goto label08;

        $i24 = i36;

        i36 = i36 + 1;

        r43 = r39[$i24];

        $l25 = virtualinvoke r43.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getSamplesPerChunk()>();

        i40 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l25);

        l39 = virtualinvoke r43.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getFirstChunk()>();

        goto label09;

     label08:
        $i51 = (int) -1;

        i40 = $i51;

        l39 = 9223372036854775807L;

     label09:
        $i42 = i41 + i38;

        i41 = $i42;

        if $i42 <= $i7 goto label07;

        $r30 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkNumsStartSampleNum>;

        $r30[i37] = 2147483647;

        i43 = 0;

        i44 = 1;

        goto label12;

     label10:
        $r31 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkNumsStartSampleNum>;

        $i15 = $r31[i43];

        if i44 != $i15 goto label11;

        i43 = i43 + 1;

     label11:
        $r32 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkSizes>;

        $i16 = i43 - 1;

        $i17 = $r32[$i16];

        $l19 = (long) $i17;

        $r33 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.SampleSizeBox ssb>;

        $i18 = i44 - 1;

        $l20 = virtualinvoke $r33.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleSizeAtIndex(int)>($i18);

        $l21 = $l19 + $l20;

        $i22 = (int) $l21;

        $r32[$i16] = $i22;

        i44 = i44 + 1;

     label12:
        $l45 = (long) i44;

        $r44 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.SampleSizeBox ssb>;

        $l46 = virtualinvoke $r44.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleCount()>();

        $b47 = $l45 cmp $l46;

        $i52 = (int) $b47;

        if $i52 <= 0 goto label10;

        return;
    }

    synchronized int getChunkForSample(int)
    {
        com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList r0;
        int[] $r1, $r2, $r3, $r4, $r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;

        r0 := @this: com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList;

        i0 := @parameter0: int;

        i1 = i0 + 1;

        $r1 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkNumsStartSampleNum>;

        $i2 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        $i3 = $r1[$i2];

        if i1 < $i3 goto label1;

        $r5 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkNumsStartSampleNum>;

        $i20 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        $i21 = $i20 + 1;

        $i22 = $r5[$i21];

        if i1 >= $i22 goto label1;

        $i23 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        return $i23;

     label1:
        $r2 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkNumsStartSampleNum>;

        $i4 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        $i5 = $r2[$i4];

        if i1 >= $i5 goto label4;

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk> = 0;

        goto label3;

     label2:
        $i17 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        $i18 = $i17 + 1;

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk> = $i18;

     label3:
        $r4 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkNumsStartSampleNum>;

        $i14 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        $i15 = $i14 + 1;

        $i16 = $r4[$i15];

        if $i16 <= i1 goto label2;

        $i19 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        return $i19;

     label4:
        $i6 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        $i7 = $i6 + 1;

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk> = $i7;

        goto label6;

     label5:
        $i11 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        $i12 = $i11 + 1;

        r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk> = $i12;

     label6:
        $r3 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkNumsStartSampleNum>;

        $i8 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        $i9 = $i8 + 1;

        $i10 = $r3[$i9];

        if $i10 <= i1 goto label5;

        $i13 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int lastChunk>;

        return $i13;
    }

    public com.googlecode.mp4parser.authoring.Sample get(int)
    {
        java.lang.IndexOutOfBoundsException $r28, $r30;
        com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList r0;
        java.nio.ByteBuffer $r10, $r11, $r13, $r16, $r26, r27;
        byte $b3;
        int[] $r2, $r15;
        com.googlecode.mp4parser.authoring.SampleImpl $r31;
        java.lang.ref.SoftReference[] $r4, $r17, $r19;
        com.coremedia.iso.boxes.Container $r14;
        long $l1, $l2, $l5, l7, $l8, $l13, $l14, $l15, $l17, $l18, $l20, $l23, $l24, $l26;
        long[] $r3;
        java.nio.Buffer $r9, $r12;
        int i0, $i4, $i6, $i9, $i10, $i11, $i12, $i16, $i19, $i21, $i22, $i25, $i27, i28, i29, $i30;
        java.lang.ref.SoftReference $r5, $r20, $r29;
        java.lang.String $r25;
        com.coremedia.iso.boxes.SampleSizeBox $r1, $r6, $r7;
        java.io.IOException $r23;
        java.lang.Object $r21;

        r0 := @this: com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r1 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.SampleSizeBox ssb>;

        $l2 = virtualinvoke $r1.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleCount()>();

        $b3 = $l1 cmp $l2;

        $i30 = (int) $b3;

        if $i30 < 0 goto label1;

        $r28 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r28.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r28;

     label1:
        $i4 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int getChunkForSample(int)>(i0);

        $r2 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkNumsStartSampleNum>;

        i28 = $r2[$i4];

        $r3 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: long[] chunkOffsets>;

        $l5 = (long) $i4;

        $i6 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l5);

        l7 = $r3[$i6];

        $r4 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: java.lang.ref.SoftReference[] cache>;

        $l8 = (long) $i4;

        $i9 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l8);

        $r5 = $r4[$i9];

        if $r5 == null goto label2;

        $r19 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: java.lang.ref.SoftReference[] cache>;

        $l26 = (long) $i4;

        $i27 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l26);

        $r20 = $r19[$i27];

        $r21 = virtualinvoke $r20.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r26 = (java.nio.ByteBuffer) $r21;

        goto label3;

     label2:
        $r26 = null;

     label3:
        r27 = $r26;

        if $r26 != null goto label7;

     label4:
        $r14 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.Container topLevel>;

        $r15 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: int[] chunkSizes>;

        $l20 = (long) $i4;

        $i21 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l20);

        $i22 = $r15[$i21];

        $l23 = (long) $i22;

        $r16 = interfaceinvoke $r14.<com.coremedia.iso.boxes.Container: java.nio.ByteBuffer getByteBuffer(long,long)>(l7, $l23);

        r27 = $r16;

        $r17 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: java.lang.ref.SoftReference[] cache>;

        $l24 = (long) $i4;

        $i25 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l24);

        $r29 = new java.lang.ref.SoftReference;

        specialinvoke $r29.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r16);

        $r17[$i25] = $r29;

     label5:
        goto label7;

     label6:
        $r23 := @caughtexception;

        $r30 = new java.lang.IndexOutOfBoundsException;

        $r25 = virtualinvoke $r23.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r30.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r25);

        throw $r30;

     label7:
        i29 = 0;

        goto label9;

     label8:
        $l13 = (long) i29;

        $r6 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.SampleSizeBox ssb>;

        $i11 = i28;

        i28 = i28 + 1;

        $i12 = $i11 - 1;

        $l14 = virtualinvoke $r6.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleSizeAtIndex(int)>($i12);

        $l15 = $l13 + $l14;

        i29 = (int) $l15;

     label9:
        $i10 = i0 + 1;

        if i28 < $i10 goto label8;

        $r7 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.SampleSizeBox ssb>;

        $i16 = i28 - 1;

        $l17 = virtualinvoke $r7.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleSizeAtIndex(int)>($i16);

        $r31 = new com.googlecode.mp4parser.authoring.SampleImpl;

        $l18 = (long) i29;

        $r9 = virtualinvoke r27.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i29);

        $r10 = (java.nio.ByteBuffer) $r9;

        $r11 = virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        $i19 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l17);

        $r12 = virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i19);

        $r13 = (java.nio.ByteBuffer) $r12;

        specialinvoke $r31.<com.googlecode.mp4parser.authoring.SampleImpl: void <init>(long,long,java.nio.ByteBuffer)>($l18, $l17, $r13);

        return $r31;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public int size()
    {
        com.coremedia.iso.boxes.SampleTableBox $r2;
        com.coremedia.iso.boxes.SampleSizeBox $r3;
        com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList r0;
        com.coremedia.iso.boxes.TrackBox $r1;
        int $i1;
        long $l0;

        r0 := @this: com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList;

        $r1 = r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.coremedia.iso.boxes.TrackBox trackBox>;

        $r2 = virtualinvoke $r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.SampleTableBox getSampleTableBox()>();

        $r3 = virtualinvoke $r2.<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.SampleSizeBox getSampleSizeBox()>();

        $l0 = virtualinvoke $r3.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleCount()>();

        $i1 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l0);

        return $i1;
    }

    public volatile java.lang.Object get(int)
    {
        int i0;
        com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList r0;
        com.googlecode.mp4parser.authoring.Sample $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.samples.DefaultMp4SampleList: com.googlecode.mp4parser.authoring.Sample get(int)>(i0);

        return $r1;
    }
}
