public class org.apache.batik.bridge.svg12.SVGSolidColorElementBridge extends org.apache.batik.bridge.AnimatableGenericSVGBridge implements org.apache.batik.bridge.PaintBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.svg12.SVGSolidColorElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVGSolidColorElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AnimatableGenericSVGBridge: void <init>()>();

        return;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.bridge.svg12.SVGSolidColorElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVGSolidColorElementBridge;

        return "http://www.w3.org/2000/svg";
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.svg12.SVGSolidColorElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVGSolidColorElementBridge;

        return "solidColor";
    }

    public java.awt.Paint createPaint(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, float)
    {
        java.awt.Color $r2;
        org.apache.batik.bridge.svg12.SVGSolidColorElementBridge r3;
        org.apache.batik.gvt.GraphicsNode r5;
        org.apache.batik.bridge.BridgeContext r1;
        org.w3c.dom.Element r0, r4;
        float $f0, f1;

        r3 := @this: org.apache.batik.bridge.svg12.SVGSolidColorElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r4 := @parameter2: org.w3c.dom.Element;

        r5 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        f1 := @parameter4: float;

        $f0 = staticinvoke <org.apache.batik.bridge.svg12.SVGSolidColorElementBridge: float extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)>(r0, f1, r1);

        $r2 = staticinvoke <org.apache.batik.bridge.svg12.SVGSolidColorElementBridge: java.awt.Color extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)>(r0, $f0, r1);

        return $r2;
    }

    protected static float extractOpacity(org.w3c.dom.Element, float, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r12;
        java.util.HashMap $r0;
        org.apache.batik.css.engine.CSSStylableElement $r3;
        org.apache.batik.css.engine.CSSEngine $r1;
        org.w3c.dom.Document $r6;
        org.apache.batik.css.engine.StyleMap $r4;
        int $i0, $i1;
        java.lang.String $r5, $r9;
        boolean $z0, $z1;
        org.apache.batik.bridge.BridgeException $r11;
        org.apache.batik.bridge.BridgeContext r10;
        org.apache.batik.css.engine.value.Value $r2;
        org.apache.batik.dom.svg.SVGOMDocument r7;
        org.w3c.dom.Element r13;
        org.apache.batik.util.ParsedURL $r8;
        float f0, $f1, $f2;

        r13 := @parameter0: org.w3c.dom.Element;

        f0 := @parameter1: float;

        r10 := @parameter2: org.apache.batik.bridge.BridgeContext;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = staticinvoke <org.apache.batik.bridge.CSSUtilities: org.apache.batik.css.engine.CSSEngine getCSSEngine(org.w3c.dom.Element)>(r13);

        $i0 = virtualinvoke $r1.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>("solid-opacity");

        goto label1;

     label1:
        $r2 = staticinvoke <org.apache.batik.bridge.CSSUtilities: org.apache.batik.css.engine.value.Value getComputedStyle(org.w3c.dom.Element,int)>(r13, $i0);

        $r3 = (org.apache.batik.css.engine.CSSStylableElement) r13;

        $r4 = interfaceinvoke $r3.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleMap getComputedStyleMap(java.lang.String)>(null);

        $z0 = virtualinvoke $r4.<org.apache.batik.css.engine.StyleMap: boolean isNullCascaded(int)>($i0);

        if $z0 != 0 goto label2;

        $f1 = staticinvoke <org.apache.batik.bridge.PaintServer: float convertOpacity(org.apache.batik.css.engine.value.Value)>($r2);

        $f2 = f0 * $f1;

        return $f2;

     label2:
        $r5 = staticinvoke <org.apache.batik.dom.util.XLinkSupport: java.lang.String getXLinkHref(org.w3c.dom.Element)>(r13);

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

        return f0;

     label3:
        $r6 = interfaceinvoke r13.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r7 = (org.apache.batik.dom.svg.SVGOMDocument) $r6;

        $r8 = new org.apache.batik.util.ParsedURL;

        $r9 = virtualinvoke r7.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String getURL()>();

        specialinvoke $r8.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String,java.lang.String)>($r9, $r5);

        $z1 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z1 == 0 goto label4;

        $r11 = new org.apache.batik.bridge.BridgeException;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r5;

        specialinvoke $r11.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r10, r13, "xlink.href.circularDependencies", $r12);

        throw $r11;

     label4:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r8);

        r13 = virtualinvoke r10.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)>(r13, $r5);

        goto label1;
    }

    protected static java.awt.Color extractColor(org.w3c.dom.Element, float, org.apache.batik.bridge.BridgeContext)
    {
        java.awt.Color $r13, $r17, $r18;
        java.lang.Object[] $r12;
        java.util.HashMap $r0;
        org.apache.batik.css.engine.CSSStylableElement $r3;
        org.apache.batik.css.engine.CSSEngine $r1;
        short $s2;
        org.w3c.dom.Document $r6;
        org.apache.batik.css.engine.StyleMap $r4;
        int $i0, $i1;
        java.lang.String $r5, $r9;
        boolean $z0, $z1;
        org.apache.batik.bridge.BridgeException $r11;
        org.apache.batik.bridge.BridgeContext r10;
        org.apache.batik.css.engine.value.Value $r2, $r14, $r15;
        org.apache.batik.dom.svg.SVGOMDocument r7;
        org.w3c.dom.Element r19;
        org.apache.batik.util.ParsedURL $r8;
        float f0;
        org.apache.batik.css.engine.value.svg.ICCColor $r16;

        r19 := @parameter0: org.w3c.dom.Element;

        f0 := @parameter1: float;

        r10 := @parameter2: org.apache.batik.bridge.BridgeContext;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = staticinvoke <org.apache.batik.bridge.CSSUtilities: org.apache.batik.css.engine.CSSEngine getCSSEngine(org.w3c.dom.Element)>(r19);

        $i0 = virtualinvoke $r1.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>("solid-color");

        goto label1;

     label1:
        $r2 = staticinvoke <org.apache.batik.bridge.CSSUtilities: org.apache.batik.css.engine.value.Value getComputedStyle(org.w3c.dom.Element,int)>(r19, $i0);

        $r3 = (org.apache.batik.css.engine.CSSStylableElement) r19;

        $r4 = interfaceinvoke $r3.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleMap getComputedStyleMap(java.lang.String)>(null);

        $z0 = virtualinvoke $r4.<org.apache.batik.css.engine.StyleMap: boolean isNullCascaded(int)>($i0);

        if $z0 != 0 goto label3;

        $s2 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        if $s2 != 1 goto label2;

        $r18 = staticinvoke <org.apache.batik.bridge.PaintServer: java.awt.Color convertColor(org.apache.batik.css.engine.value.Value,float)>($r2, f0);

        return $r18;

     label2:
        $r14 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r15 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r16 = (org.apache.batik.css.engine.value.svg.ICCColor) $r15;

        $r17 = staticinvoke <org.apache.batik.bridge.PaintServer: java.awt.Color convertRGBICCColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg.ICCColor,float,org.apache.batik.bridge.BridgeContext)>(r19, $r14, $r16, f0, r10);

        return $r17;

     label3:
        $r5 = staticinvoke <org.apache.batik.dom.util.XLinkSupport: java.lang.String getXLinkHref(org.w3c.dom.Element)>(r19);

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

        $r13 = new java.awt.Color;

        specialinvoke $r13.<java.awt.Color: void <init>(float,float,float,float)>(0.0F, 0.0F, 0.0F, f0);

        return $r13;

     label4:
        $r6 = interfaceinvoke r19.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r7 = (org.apache.batik.dom.svg.SVGOMDocument) $r6;

        $r8 = new org.apache.batik.util.ParsedURL;

        $r9 = virtualinvoke r7.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String getURL()>();

        specialinvoke $r8.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String,java.lang.String)>($r9, $r5);

        $z1 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z1 == 0 goto label5;

        $r11 = new org.apache.batik.bridge.BridgeException;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r5;

        specialinvoke $r11.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r10, r19, "xlink.href.circularDependencies", $r12);

        throw $r11;

     label5:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r8);

        r19 = virtualinvoke r10.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)>(r19, $r5);

        goto label1;
    }
}
