public class org.apache.tika.extractor.ParserContainerExtractor extends java.lang.Object implements org.apache.tika.extractor.ContainerExtractor
{
    private static final long serialVersionUID;
    private final org.apache.tika.parser.Parser parser;
    private final org.apache.tika.detect.Detector detector;

    public void <init>()
    {
        org.apache.tika.config.TikaConfig $r1;
        org.apache.tika.extractor.ParserContainerExtractor r0;

        r0 := @this: org.apache.tika.extractor.ParserContainerExtractor;

        $r1 = staticinvoke <org.apache.tika.config.TikaConfig: org.apache.tika.config.TikaConfig getDefaultConfig()>();

        specialinvoke r0.<org.apache.tika.extractor.ParserContainerExtractor: void <init>(org.apache.tika.config.TikaConfig)>($r1);

        return;
    }

    public void <init>(org.apache.tika.config.TikaConfig)
    {
        org.apache.tika.mime.MimeTypes $r4;
        org.apache.tika.config.TikaConfig r2;
        org.apache.tika.extractor.ParserContainerExtractor r0;
        org.apache.tika.parser.AutoDetectParser $r1;
        org.apache.tika.detect.DefaultDetector $r3;

        r0 := @this: org.apache.tika.extractor.ParserContainerExtractor;

        r2 := @parameter0: org.apache.tika.config.TikaConfig;

        $r1 = new org.apache.tika.parser.AutoDetectParser;

        specialinvoke $r1.<org.apache.tika.parser.AutoDetectParser: void <init>(org.apache.tika.config.TikaConfig)>(r2);

        $r3 = new org.apache.tika.detect.DefaultDetector;

        $r4 = virtualinvoke r2.<org.apache.tika.config.TikaConfig: org.apache.tika.mime.MimeTypes getMimeRepository()>();

        specialinvoke $r3.<org.apache.tika.detect.DefaultDetector: void <init>(org.apache.tika.mime.MimeTypes)>($r4);

        specialinvoke r0.<org.apache.tika.extractor.ParserContainerExtractor: void <init>(org.apache.tika.parser.Parser,org.apache.tika.detect.Detector)>($r1, $r3);

        return;
    }

    public void <init>(org.apache.tika.parser.Parser, org.apache.tika.detect.Detector)
    {
        org.apache.tika.extractor.ParserContainerExtractor r0;
        org.apache.tika.parser.Parser r1;
        org.apache.tika.detect.Detector r2;

        r0 := @this: org.apache.tika.extractor.ParserContainerExtractor;

        r1 := @parameter0: org.apache.tika.parser.Parser;

        r2 := @parameter1: org.apache.tika.detect.Detector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.extractor.ParserContainerExtractor: org.apache.tika.parser.Parser parser> = r1;

        r0.<org.apache.tika.extractor.ParserContainerExtractor: org.apache.tika.detect.Detector detector> = r2;

        return;
    }

    public boolean isSupported(org.apache.tika.io.TikaInputStream) throws java.io.IOException
    {
        org.apache.tika.parser.Parser $r6;
        java.util.Set $r7;
        org.apache.tika.extractor.ParserContainerExtractor r0;
        org.apache.tika.detect.Detector $r3;
        org.apache.tika.mime.MediaType $r4;
        org.apache.tika.metadata.Metadata $r2;
        org.apache.tika.parser.ParseContext $r5;
        org.apache.tika.io.TikaInputStream r1;
        boolean $z0;

        r0 := @this: org.apache.tika.extractor.ParserContainerExtractor;

        r1 := @parameter0: org.apache.tika.io.TikaInputStream;

        $r3 = r0.<org.apache.tika.extractor.ParserContainerExtractor: org.apache.tika.detect.Detector detector>;

        $r2 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r2.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r4 = interfaceinvoke $r3.<org.apache.tika.detect.Detector: org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>(r1, $r2);

        $r6 = r0.<org.apache.tika.extractor.ParserContainerExtractor: org.apache.tika.parser.Parser parser>;

        $r5 = new org.apache.tika.parser.ParseContext;

        specialinvoke $r5.<org.apache.tika.parser.ParseContext: void <init>()>();

        $r7 = interfaceinvoke $r6.<org.apache.tika.parser.Parser: java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)>($r5);

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        return $z0;
    }

    public void extract(org.apache.tika.io.TikaInputStream, org.apache.tika.extractor.ContainerExtractor, org.apache.tika.extractor.EmbeddedResourceHandler) throws java.io.IOException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.Parser $r7;
        org.apache.tika.extractor.ParserContainerExtractor r2;
        org.apache.tika.extractor.ContainerExtractor r3;
        org.xml.sax.helpers.DefaultHandler $r6;
        org.apache.tika.metadata.Metadata $r8;
        org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser $r1;
        org.apache.tika.extractor.EmbeddedResourceHandler r4;
        org.apache.tika.exception.TikaException $r10;
        org.apache.tika.parser.ParseContext $r0;
        org.xml.sax.SAXException $r9;
        org.apache.tika.io.TikaInputStream r5;

        r2 := @this: org.apache.tika.extractor.ParserContainerExtractor;

        r5 := @parameter0: org.apache.tika.io.TikaInputStream;

        r3 := @parameter1: org.apache.tika.extractor.ContainerExtractor;

        r4 := @parameter2: org.apache.tika.extractor.EmbeddedResourceHandler;

        $r0 = new org.apache.tika.parser.ParseContext;

        specialinvoke $r0.<org.apache.tika.parser.ParseContext: void <init>()>();

        $r1 = new org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser;

        specialinvoke $r1.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: void <init>(org.apache.tika.extractor.ParserContainerExtractor,org.apache.tika.extractor.ContainerExtractor,org.apache.tika.extractor.EmbeddedResourceHandler,org.apache.tika.extractor.ParserContainerExtractor$1)>(r2, r3, r4, null);

        virtualinvoke $r0.<org.apache.tika.parser.ParseContext: void set(java.lang.Class,java.lang.Object)>(class "Lorg/apache/tika/parser/Parser;", $r1);

     label1:
        $r7 = r2.<org.apache.tika.extractor.ParserContainerExtractor: org.apache.tika.parser.Parser parser>;

        $r6 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r6.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r8 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r8.<org.apache.tika.metadata.Metadata: void <init>()>();

        interfaceinvoke $r7.<org.apache.tika.parser.Parser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>(r5, $r6, $r8, $r0);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new org.apache.tika.exception.TikaException;

        specialinvoke $r10.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected SAX exception", $r9);

        throw $r10;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    static org.apache.tika.parser.Parser access$100(org.apache.tika.extractor.ParserContainerExtractor)
    {
        org.apache.tika.extractor.ParserContainerExtractor r0;
        org.apache.tika.parser.Parser $r1;

        r0 := @parameter0: org.apache.tika.extractor.ParserContainerExtractor;

        $r1 = r0.<org.apache.tika.extractor.ParserContainerExtractor: org.apache.tika.parser.Parser parser>;

        return $r1;
    }

    static org.apache.tika.detect.Detector access$200(org.apache.tika.extractor.ParserContainerExtractor)
    {
        org.apache.tika.extractor.ParserContainerExtractor r0;
        org.apache.tika.detect.Detector $r1;

        r0 := @parameter0: org.apache.tika.extractor.ParserContainerExtractor;

        $r1 = r0.<org.apache.tika.extractor.ParserContainerExtractor: org.apache.tika.detect.Detector detector>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.tika.extractor.ParserContainerExtractor: long serialVersionUID> = 2261131045580861514L;

        return;
    }
}
