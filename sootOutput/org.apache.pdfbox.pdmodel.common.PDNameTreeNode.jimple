public class org.apache.pdfbox.pdmodel.common.PDNameTreeNode extends java.lang.Object implements org.apache.pdfbox.pdmodel.common.COSObjectable
{
    private static final org.apache.commons.logging.Log LOG;
    private org.apache.pdfbox.cos.COSDictionary node;
    private java.lang.Class valueType;
    private org.apache.pdfbox.pdmodel.common.PDNameTreeNode parent;

    public void <init>(java.lang.Class)
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        java.lang.Class r2;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.Class valueType> = null;

        r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.pdmodel.common.PDNameTreeNode parent> = null;

        $r1 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node> = $r1;

        r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.Class valueType> = r2;

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDictionary, java.lang.Class)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        java.lang.Class r2;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.Class valueType> = null;

        r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.pdmodel.common.PDNameTreeNode parent> = null;

        r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node> = r1;

        r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.Class valueType> = r2;

        return;
    }

    public org.apache.pdfbox.cos.COSBase getCOSObject()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        return $r1;
    }

    public org.apache.pdfbox.cos.COSDictionary getCOSDictionary()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        return $r1;
    }

    public org.apache.pdfbox.pdmodel.common.PDNameTreeNode getParent()
    {
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0, $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.pdmodel.common.PDNameTreeNode parent>;

        return $r1;
    }

    public void setParent(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)
    {
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0, r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.pdmodel.common.PDNameTreeNode parent> = r1;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void calculateLimits()>();

        return;
    }

    public boolean isRootNode()
    {
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.pdmodel.common.PDNameTreeNode parent>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.List getKids()
    {
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSArray r4;
        org.apache.pdfbox.pdmodel.common.COSArrayList $r6, r10;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0, $r9;
        java.util.ArrayList $r5;
        org.apache.pdfbox.cos.COSDictionary $r2, $r8;
        org.apache.pdfbox.cos.COSBase $r3, $r7;
        int $i0, i1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r10 = null;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r4 == null goto label3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i1 >= $i0 goto label2;

        $r7 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1);

        $r8 = (org.apache.pdfbox.cos.COSDictionary) $r7;

        $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.pdmodel.common.PDNameTreeNode createChildNode(org.apache.pdfbox.cos.COSDictionary)>($r8);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = new org.apache.pdfbox.pdmodel.common.COSArrayList;

        specialinvoke $r6.<org.apache.pdfbox.pdmodel.common.COSArrayList: void <init>(java.util.List,org.apache.pdfbox.cos.COSArray)>($r5, r4);

        r10 = $r6;

     label3:
        return r10;
    }

    public void setKids(java.util.List)
    {
        org.apache.pdfbox.cos.COSArray $r9;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r1, r13;
        int $i0;
        boolean $z0, $z1;
        org.apache.pdfbox.cos.COSName $r2, $r4, $r8, $r10;
        java.util.Iterator $r6;
        org.apache.pdfbox.cos.COSDictionary $r3, $r5, $r7, $r11;
        java.util.List r0;
        java.lang.Object $r12;

        r1 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label3;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 <= 0 goto label3;

        $r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.pdfbox.pdmodel.common.PDNameTreeNode) $r12;

        virtualinvoke r13.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void setParent(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)>(r1);

        goto label1;

     label2:
        $r7 = r1.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>;

        $r9 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)>(r0);

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r8, $r9);

        $z1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: boolean isRootNode()>();

        if $z1 == 0 goto label4;

        $r11 = r1.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAMES>;

        virtualinvoke $r11.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r10, null);

        goto label4;

     label3:
        $r3 = r1.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>;

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r2, null);

        $r5 = r1.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r4, null);

     label4:
        specialinvoke r1.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void calculateLimits()>();

        return;
    }

    private void calculateLimits()
    {
        java.lang.Object[] $r6;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0, r19, r20;
        java.util.Map $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r11, $r12, r21, r22;
        boolean $z0;
        org.apache.pdfbox.cos.COSName $r3, $r13, $r16;
        java.util.Set $r5;
        java.io.IOException $r15;
        org.apache.pdfbox.cos.COSDictionary $r4, $r14, $r17;
        java.util.List $r1;
        java.lang.Object $r7, $r8, $r9, $r10;
        org.apache.commons.logging.Log $r18;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: boolean isRootNode()>();

        if $z0 == 0 goto label1;

        $r14 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r14.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r13, null);

        goto label6;

     label1:
        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.util.List getKids()>();

        if $r1 == null goto label2;

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i3 <= 0 goto label2;

        $r9 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r19 = (org.apache.pdfbox.pdmodel.common.PDNameTreeNode) $r9;

        $i4 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i5 = $i4 - 1;

        $r10 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i5);

        r20 = (org.apache.pdfbox.pdmodel.common.PDNameTreeNode) $r10;

        $r11 = virtualinvoke r19.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.String getLowerLimit()>();

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void setLowerLimit(java.lang.String)>($r11);

        $r12 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.String getUpperLimit()>();

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void setUpperLimit(java.lang.String)>($r12);

        goto label6;

     label2:
        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.util.Map getNames()>();

        if $r2 == null goto label3;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        if $i0 <= 0 goto label3;

        $r5 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.lang.Object[] toArray()>();

        $r7 = $r6[0];

        r21 = (java.lang.String) $r7;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void setLowerLimit(java.lang.String)>(r21);

        $i1 = lengthof $r6;

        $i2 = $i1 - 1;

        $r8 = $r6[$i2];

        r22 = (java.lang.String) $r8;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void setUpperLimit(java.lang.String)>(r22);

        goto label4;

     label3:
        $r4 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, null);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        $r17 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r17.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r16, null);

        $r18 = <org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r18.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Error while calculating the Limits of a PageNameTreeNode:", $r15);

     label6:
        return;

        catch java.io.IOException from label2 to label4 with label5;
    }

    public java.lang.Object getValue(java.lang.String) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0, r5;
        java.util.List $r2;
        java.util.Map $r1;
        int $i0, $i1, $i2, i3;
        org.apache.commons.logging.Log $r3;
        java.lang.Object $r4, r9;
        java.lang.String $r6, r7, $r8;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r7 := @parameter0: java.lang.String;

        r9 = null;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.util.Map getNames()>();

        if $r1 == null goto label1;

        r9 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        goto label6;

     label1:
        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.util.List getKids()>();

        if $r2 == null goto label5;

        i3 = 0;

     label2:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i3 >= $i0 goto label4;

        if r9 != null goto label4;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        r5 = (org.apache.pdfbox.pdmodel.common.PDNameTreeNode) $r4;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.String getLowerLimit()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int compareTo(java.lang.String)>(r7);

        if $i1 > 0 goto label3;

        $r8 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.String getUpperLimit()>();

        $i2 = virtualinvoke $r8.<java.lang.String: int compareTo(java.lang.String)>(r7);

        if $i2 < 0 goto label3;

        r9 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.Object getValue(java.lang.String)>(r7);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        goto label6;

     label5:
        $r3 = <org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("NameTreeNode does not have \"names\" nor \"kids\" objects.");

     label6:
        return r9;
    }

    public java.util.Map getNames() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSArray r4;
        org.apache.pdfbox.pdmodel.common.COSObjectable $r11;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0;
        org.apache.pdfbox.cos.COSString r8;
        org.apache.pdfbox.cos.COSDictionary $r2;
        java.util.LinkedHashMap $r5;
        org.apache.pdfbox.cos.COSBase $r3, $r7, $r9;
        java.util.Map $r6;
        int $i0, $i1, i2;
        java.lang.String $r10;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAMES>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r4 == null goto label3;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i2 >= $i0 goto label2;

        $r7 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i2);

        r8 = (org.apache.pdfbox.cos.COSString) $r7;

        $i1 = i2 + 1;

        $r9 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i1);

        $r10 = virtualinvoke r8.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>();

        $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.pdmodel.common.COSObjectable convertCOSToPD(org.apache.pdfbox.cos.COSBase)>($r9);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        i2 = i2 + 2;

        goto label1;

     label2:
        $r6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r5);

        return $r6;

     label3:
        return null;
    }

    protected org.apache.pdfbox.pdmodel.common.COSObjectable convertCOSToPD(org.apache.pdfbox.cos.COSBase) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r1;
        org.apache.pdfbox.cos.COSBase r0;

        r1 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r0 := @parameter0: org.apache.pdfbox.cos.COSBase;

        return r0;
    }

    protected org.apache.pdfbox.pdmodel.common.PDNameTreeNode createChildNode(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        java.lang.Class $r3;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode $r0, r2;

        r2 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        $r0 = new org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        $r3 = r2.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.Class valueType>;

        specialinvoke $r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void <init>(org.apache.pdfbox.cos.COSDictionary,java.lang.Class)>(r1, $r3);

        return $r0;
    }

    public void setNames(java.util.Map)
    {
        org.apache.pdfbox.cos.COSArray $r1;
        org.apache.pdfbox.pdmodel.common.COSObjectable $r12;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r5;
        org.apache.pdfbox.cos.COSString $r10;
        java.util.ArrayList $r2;
        java.util.Map r0;
        java.lang.String r9;
        boolean $z0;
        org.apache.pdfbox.cos.COSName $r6, $r13, $r15;
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.pdfbox.cos.COSDictionary $r7, $r14, $r16;
        java.lang.Object $r8, $r11;

        r5 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label1;

        $r14 = r5.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAMES>;

        virtualinvoke $r14.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r13, null);

        $r16 = r5.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r15 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r15, null);

        goto label4;

     label1:
        $r1 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r1.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        $r2 = new java.util.ArrayList;

        $r3 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r2);

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = new org.apache.pdfbox.cos.COSString;

        specialinvoke $r10.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r9);

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r10);

        $r11 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        $r12 = (org.apache.pdfbox.pdmodel.common.COSObjectable) $r11;

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.pdmodel.common.COSObjectable)>($r12);

        goto label2;

     label3:
        $r7 = r5.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAMES>;

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, $r1);

        specialinvoke r5.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void calculateLimits()>();

     label4:
        return;
    }

    public java.lang.String getUpperLimit()
    {
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSArray r4;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0;
        java.lang.String r5;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r5 = null;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: java.lang.String getString(int)>(1);

     label1:
        return r5;
    }

    private void setUpperLimit(java.lang.String)
    {
        org.apache.pdfbox.cos.COSName $r1, $r6;
        org.apache.pdfbox.cos.COSArray $r5, r8;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0;
        org.apache.pdfbox.cos.COSDictionary $r2, $r7;
        org.apache.pdfbox.cos.COSBase $r3;
        java.lang.String r4;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r4 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r8 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r8 != null goto label1;

        $r5 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        r8 = $r5;

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null);

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null);

        $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, $r5);

     label1:
        virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setString(int,java.lang.String)>(1, r4);

        return;
    }

    public java.lang.String getLowerLimit()
    {
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSArray r4;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0;
        java.lang.String r5;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r5 = null;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: java.lang.String getString(int)>(0);

     label1:
        return r5;
    }

    private void setLowerLimit(java.lang.String)
    {
        org.apache.pdfbox.cos.COSName $r1, $r6;
        org.apache.pdfbox.cos.COSArray $r5, r8;
        org.apache.pdfbox.pdmodel.common.PDNameTreeNode r0;
        org.apache.pdfbox.cos.COSDictionary $r2, $r7;
        org.apache.pdfbox.cos.COSBase $r3;
        java.lang.String r4;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNameTreeNode;

        r4 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r8 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r8 != null goto label1;

        $r5 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        r8 = $r5;

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null);

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null);

        $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, $r5);

     label1:
        virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setString(int,java.lang.String)>(0, r4);

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/common/PDNameTreeNode;");

        <org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
