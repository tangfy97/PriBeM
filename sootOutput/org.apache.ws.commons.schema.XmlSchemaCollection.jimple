public final class org.apache.ws.commons.schema.XmlSchemaCollection extends java.lang.Object
{
    java.lang.String baseUri;
    java.util.Stack stack;
    java.util.Map unresolvedTypes;
    org.apache.ws.commons.schema.XmlSchema xsd;
    private org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg;
    private java.util.Map knownNamespaceMap;
    private org.apache.ws.commons.schema.utils.NamespacePrefixList namespaceContext;
    private org.apache.ws.commons.schema.resolver.URIResolver schemaResolver;
    private java.util.Map schemas;

    public void <init>()
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void init()>();

        return;
    }

    public boolean check(org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey r1;
        int $i0, $i2;
        java.util.Stack $r2;
        boolean $z0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey;

        $r2 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Stack stack>;

        $i0 = virtualinvoke $r2.<java.util.Stack: int indexOf(java.lang.Object)>(r1);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.ws.commons.schema.extensions.ExtensionRegistry getExtReg()
    {
        org.apache.ws.commons.schema.extensions.ExtensionRegistry $r1;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg>;

        return $r1;
    }

    public java.util.Map getKnownNamespaceMap()
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        java.util.Map $r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map knownNamespaceMap>;

        return $r1;
    }

    public org.apache.ws.commons.schema.utils.NamespacePrefixList getNamespaceContext()
    {
        org.apache.ws.commons.schema.utils.NamespacePrefixList $r1;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.utils.NamespacePrefixList namespaceContext>;

        return $r1;
    }

    public org.apache.ws.commons.schema.resolver.URIResolver getSchemaResolver()
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        org.apache.ws.commons.schema.resolver.URIResolver $r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.resolver.URIResolver schemaResolver>;

        return $r1;
    }

    public org.apache.ws.commons.schema.XmlSchemaType getTypeByQName(javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey $r9;
        org.apache.ws.commons.schema.XmlSchemaType $r13;
        org.apache.ws.commons.schema.XmlSchemaCollection r2;
        java.util.Map $r3;
        org.apache.ws.commons.schema.XmlSchema $r12;
        java.lang.String $r1, $r10;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r6, $r8, $r11;
        javax.xml.namespace.QName r0;

        r2 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = r2.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey) $r8;

        $r10 = virtualinvoke $r9.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: java.lang.String getNamespace()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (org.apache.ws.commons.schema.XmlSchema) $r11;

        $r13 = virtualinvoke $r12.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaType getTypeByName(javax.xml.namespace.QName)>(r0);

        if $r13 == null goto label2;

        return $r13;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.ws.commons.schema.XmlSchema[] getXmlSchema(java.lang.String)
    {
        java.lang.Object[] $r6;
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey $r11;
        org.apache.ws.commons.schema.XmlSchema[] $r5, $r7;
        java.util.ArrayList $r0;
        org.apache.ws.commons.schema.XmlSchemaCollection r1;
        java.util.Map $r2;
        int $i0;
        java.lang.String $r12, r14;
        boolean $z0, $z1;
        java.util.Map$Entry r9;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.Object $r8, $r10, $r13;

        r1 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r14 := @parameter0: java.lang.String;

        if r14 != null goto label1;

        r14 = "";

     label1:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

        $r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey) $r10;

        $r12 = virtualinvoke $r11.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: java.lang.String getSystemId()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

     label3:
        goto label2;

     label4:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r5 = newarray (org.apache.ws.commons.schema.XmlSchema)[$i0];

        $r6 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (org.apache.ws.commons.schema.XmlSchema[]) $r6;

        return $r7;
    }

    public org.apache.ws.commons.schema.XmlSchema[] getXmlSchemas()
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        java.lang.Object[] $r4;
        java.util.Map $r1;
        java.util.Collection $r2;
        int $i0;
        org.apache.ws.commons.schema.XmlSchema[] $r3, $r5;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        $r3 = newarray (org.apache.ws.commons.schema.XmlSchema)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.ws.commons.schema.XmlSchema[]) $r4;

        return $r5;
    }

    public void init()
    {
        java.lang.InstantiationException $r153;
        java.util.Stack $r1;
        org.apache.ws.commons.schema.XmlSchema $r7, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r117, $r120, $r123, $r126, $r129, $r132, $r135, $r138, $r141, $r144, $r146;
        java.io.PrintStream $r152, $r154, $r156;
        java.lang.Class $r148;
        java.lang.Object $r149;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        javax.xml.namespace.QName $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r71, $r74, $r77, $r80, $r83, $r86, $r89, $r92, $r95, $r98, $r101, $r104, $r107, $r110, $r113, $r116, $r119, $r122, $r125, $r128, $r131, $r134, $r137, $r140, $r143;
        org.apache.ws.commons.schema.extensions.ExtensionRegistry $r3, $r150;
        java.lang.String $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r70, $r73, $r76, $r79, $r82, $r85, $r88, $r91, $r94, $r97, $r100, $r103, $r106, $r109, $r112, $r115, $r118, $r121, $r124, $r127, $r130, $r133, $r136, $r139, $r142, $r145, $r147;
        java.lang.ClassNotFoundException $r155;
        java.lang.IllegalAccessException $r151;
        org.apache.ws.commons.schema.resolver.DefaultURIResolver $r5;
        java.util.HashMap $r2, $r4, $r6;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Stack stack> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map unresolvedTypes> = $r2;

        $r3 = new org.apache.ws.commons.schema.extensions.ExtensionRegistry;

        specialinvoke $r3.<org.apache.ws.commons.schema.extensions.ExtensionRegistry: void <init>()>();

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map knownNamespaceMap> = $r4;

        $r5 = new org.apache.ws.commons.schema.resolver.DefaultURIResolver;

        specialinvoke $r5.<org.apache.ws.commons.schema.resolver.DefaultURIResolver: void <init>()>();

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.resolver.URIResolver schemaResolver> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas> = $r6;

        $r7 = new org.apache.ws.commons.schema.XmlSchema;

        specialinvoke $r7.<org.apache.ws.commons.schema.XmlSchema: void <init>(java.lang.String,org.apache.ws.commons.schema.XmlSchemaCollection)>("http://www.w3.org/2001/XMLSchema", r0);

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd> = $r7;

        $r9 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r8 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        $r10 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r9, $r10);

        $r12 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r11 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYTYPE>;

        $r13 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r12, $r13);

        $r15 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r14 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_STRING>;

        $r16 = virtualinvoke $r14.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r15, $r16);

        $r18 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r17 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_BOOLEAN>;

        $r19 = virtualinvoke $r17.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r18, $r19);

        $r21 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r20 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_FLOAT>;

        $r22 = virtualinvoke $r20.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r21, $r22);

        $r24 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r23 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DOUBLE>;

        $r25 = virtualinvoke $r23.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r24, $r25);

        $r27 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r26 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_QNAME>;

        $r28 = virtualinvoke $r26.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r27, $r28);

        $r30 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r29 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DECIMAL>;

        $r31 = virtualinvoke $r29.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r30, $r31);

        $r33 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r32 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DURATION>;

        $r34 = virtualinvoke $r32.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r33, $r34);

        $r36 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r35 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DATE>;

        $r37 = virtualinvoke $r35.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r36, $r37);

        $r39 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r38 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_TIME>;

        $r40 = virtualinvoke $r38.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r39, $r40);

        $r42 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r41 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DATETIME>;

        $r43 = virtualinvoke $r41.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r42, $r43);

        $r45 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r44 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DAY>;

        $r46 = virtualinvoke $r44.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r45, $r46);

        $r48 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r47 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_MONTH>;

        $r49 = virtualinvoke $r47.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r48, $r49);

        $r51 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r50 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_MONTHDAY>;

        $r52 = virtualinvoke $r50.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r51, $r52);

        $r54 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r53 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_YEAR>;

        $r55 = virtualinvoke $r53.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r54, $r55);

        $r57 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r56 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_YEARMONTH>;

        $r58 = virtualinvoke $r56.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r57, $r58);

        $r60 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r59 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NOTATION>;

        $r61 = virtualinvoke $r59.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r60, $r61);

        $r63 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r62 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_HEXBIN>;

        $r64 = virtualinvoke $r62.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r63, $r64);

        $r66 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r65 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_BASE64>;

        $r67 = virtualinvoke $r65.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r66, $r67);

        $r69 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r68 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYURI>;

        $r70 = virtualinvoke $r68.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r69, $r70);

        $r72 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r71 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_LONG>;

        $r73 = virtualinvoke $r71.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r72, $r73);

        $r75 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r74 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_SHORT>;

        $r76 = virtualinvoke $r74.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r75, $r76);

        $r78 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r77 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_BYTE>;

        $r79 = virtualinvoke $r77.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r78, $r79);

        $r81 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r80 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_INTEGER>;

        $r82 = virtualinvoke $r80.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r81, $r82);

        $r84 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r83 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_INT>;

        $r85 = virtualinvoke $r83.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r84, $r85);

        $r87 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r86 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_POSITIVEINTEGER>;

        $r88 = virtualinvoke $r86.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r87, $r88);

        $r90 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r89 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NEGATIVEINTEGER>;

        $r91 = virtualinvoke $r89.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r90, $r91);

        $r93 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r92 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NONPOSITIVEINTEGER>;

        $r94 = virtualinvoke $r92.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r93, $r94);

        $r96 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r95 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NONNEGATIVEINTEGER>;

        $r97 = virtualinvoke $r95.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r96, $r97);

        $r99 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r98 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDBYTE>;

        $r100 = virtualinvoke $r98.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r99, $r100);

        $r102 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r101 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDINT>;

        $r103 = virtualinvoke $r101.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r102, $r103);

        $r105 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r104 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDLONG>;

        $r106 = virtualinvoke $r104.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r105, $r106);

        $r108 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r107 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDSHORT>;

        $r109 = virtualinvoke $r107.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r108, $r109);

        $r111 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r110 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NAME>;

        $r112 = virtualinvoke $r110.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r111, $r112);

        $r114 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r113 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NORMALIZEDSTRING>;

        $r115 = virtualinvoke $r113.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r114, $r115);

        $r117 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r116 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NCNAME>;

        $r118 = virtualinvoke $r116.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r117, $r118);

        $r120 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r119 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NMTOKEN>;

        $r121 = virtualinvoke $r119.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r120, $r121);

        $r123 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r122 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NMTOKENS>;

        $r124 = virtualinvoke $r122.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r123, $r124);

        $r126 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r125 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ENTITY>;

        $r127 = virtualinvoke $r125.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r126, $r127);

        $r129 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r128 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ENTITIES>;

        $r130 = virtualinvoke $r128.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r129, $r130);

        $r132 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r131 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ID>;

        $r133 = virtualinvoke $r131.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r132, $r133);

        $r135 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r134 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_IDREF>;

        $r136 = virtualinvoke $r134.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r135, $r136);

        $r138 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r137 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_IDREFS>;

        $r139 = virtualinvoke $r137.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r138, $r139);

        $r141 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r140 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_LANGUAGE>;

        $r142 = virtualinvoke $r140.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r141, $r142);

        $r144 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        $r143 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_TOKEN>;

        $r145 = virtualinvoke $r143.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSimpleType(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r144, $r145);

        $r146 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema xsd>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setupBuiltinDatatypeHierarchy(org.apache.ws.commons.schema.XmlSchema)>($r146);

        $r147 = specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.lang.String getSystemProperty(java.lang.String)>("org.apache.ws.commons.extensions.ExtensionRegistry");

        if $r147 == null goto label6;

     label1:
        $r148 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r147);

        $r149 = virtualinvoke $r148.<java.lang.Class: java.lang.Object newInstance()>();

        $r150 = (org.apache.ws.commons.schema.extensions.ExtensionRegistry) $r149;

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg> = $r150;

     label2:
        goto label6;

     label3:
        $r155 := @caughtexception;

        $r156 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r156.<java.io.PrintStream: void println(java.lang.String)>("The specified extension registry class cannot be found!");

        goto label6;

     label4:
        $r153 := @caughtexception;

        $r154 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r154.<java.io.PrintStream: void println(java.lang.String)>("The specified extension registry class cannot be instantiated!");

        goto label6;

     label5:
        $r151 := @caughtexception;

        $r152 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r152.<java.io.PrintStream: void println(java.lang.String)>("The specified extension registry class cannot be accessed!");

     label6:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    private java.lang.String getSystemProperty(java.lang.String)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r1;
        org.apache.ws.commons.schema.XmlSchemaCollection$1 $r0;
        java.lang.Object $r3;
        java.lang.SecurityException $r5;
        java.lang.String r2, $r4;

        r1 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r2 := @parameter0: java.lang.String;

     label1:
        $r0 = new org.apache.ws.commons.schema.XmlSchemaCollection$1;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaCollection$1: void <init>(org.apache.ws.commons.schema.XmlSchemaCollection,java.lang.String)>(r1, r2);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r4 = (java.lang.String) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    private void setupBuiltinDatatypeHierarchy(org.apache.ws.commons.schema.XmlSchema)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        javax.xml.namespace.QName $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93;
        org.apache.ws.commons.schema.XmlSchema r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        $r3 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        $r2 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYTYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r3, $r2);

        $r5 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DURATION>;

        $r4 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r5, $r4);

        $r7 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DATETIME>;

        $r6 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r7, $r6);

        $r9 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_TIME>;

        $r8 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r9, $r8);

        $r11 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DATE>;

        $r10 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r11, $r10);

        $r13 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_YEARMONTH>;

        $r12 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r13, $r12);

        $r15 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_YEAR>;

        $r14 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r15, $r14);

        $r17 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_MONTHDAY>;

        $r16 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r17, $r16);

        $r19 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DAY>;

        $r18 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r19, $r18);

        $r21 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_MONTH>;

        $r20 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r21, $r20);

        $r23 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_BOOLEAN>;

        $r22 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r23, $r22);

        $r25 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_BASE64>;

        $r24 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r25, $r24);

        $r27 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_HEXBIN>;

        $r26 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r27, $r26);

        $r29 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_FLOAT>;

        $r28 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r29, $r28);

        $r31 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DOUBLE>;

        $r30 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r31, $r30);

        $r33 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYURI>;

        $r32 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r33, $r32);

        $r35 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_QNAME>;

        $r34 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r35, $r34);

        $r37 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NOTATION>;

        $r36 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r37, $r36);

        $r39 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NOTATION>;

        $r38 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r39, $r38);

        $r41 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DECIMAL>;

        $r40 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r41, $r40);

        $r43 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_INTEGER>;

        $r42 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_DECIMAL>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r43, $r42);

        $r45 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NONPOSITIVEINTEGER>;

        $r44 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_INTEGER>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r45, $r44);

        $r47 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NEGATIVEINTEGER>;

        $r46 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NONPOSITIVEINTEGER>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r47, $r46);

        $r49 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_LONG>;

        $r48 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_INTEGER>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r49, $r48);

        $r51 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_INT>;

        $r50 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_LONG>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r51, $r50);

        $r53 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_SHORT>;

        $r52 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_INT>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r53, $r52);

        $r55 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_BYTE>;

        $r54 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_SHORT>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r55, $r54);

        $r57 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NONNEGATIVEINTEGER>;

        $r56 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_INTEGER>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r57, $r56);

        $r59 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_POSITIVEINTEGER>;

        $r58 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NONNEGATIVEINTEGER>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r59, $r58);

        $r61 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDLONG>;

        $r60 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NONNEGATIVEINTEGER>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r61, $r60);

        $r63 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDINT>;

        $r62 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDLONG>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r63, $r62);

        $r65 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDSHORT>;

        $r64 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDINT>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r65, $r64);

        $r67 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDBYTE>;

        $r66 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_UNSIGNEDSHORT>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r67, $r66);

        $r69 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_STRING>;

        $r68 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYSIMPLETYPE>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r69, $r68);

        $r71 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NORMALIZEDSTRING>;

        $r70 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_STRING>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r71, $r70);

        $r73 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_TOKEN>;

        $r72 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NORMALIZEDSTRING>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r73, $r72);

        $r75 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_LANGUAGE>;

        $r74 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_TOKEN>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r75, $r74);

        $r77 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NMTOKEN>;

        $r76 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_TOKEN>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r77, $r76);

        $r79 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NAME>;

        $r78 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NMTOKEN>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r79, $r78);

        $r81 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NCNAME>;

        $r80 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_TOKEN>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r81, $r80);

        $r83 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ID>;

        $r82 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NCNAME>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r83, $r82);

        $r85 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_IDREF>;

        $r84 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NCNAME>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r85, $r84);

        $r87 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ENTITY>;

        $r86 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NCNAME>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r87, $r86);

        $r89 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NMTOKENS>;

        $r88 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_NMTOKEN>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByList(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r89, $r88);

        $r91 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_IDREFS>;

        $r90 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_IDREF>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByList(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r91, $r90);

        $r93 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ENTITIES>;

        $r92 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ENTITY>;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: void setDerivationByList(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName,javax.xml.namespace.QName)>(r1, $r93, $r92);

        return;
    }

    private void setDerivationByRestriction(org.apache.ws.commons.schema.XmlSchema, javax.xml.namespace.QName, javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction $r4;
        org.apache.ws.commons.schema.XmlSchemaType $r2, $r6;
        org.apache.ws.commons.schema.XmlSchemaCollection r8;
        org.apache.ws.commons.schema.XmlSchemaSimpleType r3, $r7;
        org.apache.ws.commons.schema.XmlSchema r0;
        javax.xml.namespace.QName r1, r5;

        r8 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r0 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: javax.xml.namespace.QName;

        r5 := @parameter2: javax.xml.namespace.QName;

        $r2 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaType getTypeByName(javax.xml.namespace.QName)>(r1);

        r3 = (org.apache.ws.commons.schema.XmlSchemaSimpleType) $r2;

        $r4 = new org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction;

        specialinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction: void <init>()>();

        virtualinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction: void setBaseTypeName(javax.xml.namespace.QName)>(r5);

        $r6 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaType getTypeByName(javax.xml.namespace.QName)>(r5);

        $r7 = (org.apache.ws.commons.schema.XmlSchemaSimpleType) $r6;

        virtualinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction: void setBaseType(org.apache.ws.commons.schema.XmlSchemaSimpleType)>($r7);

        virtualinvoke r3.<org.apache.ws.commons.schema.XmlSchemaSimpleType: void setContent(org.apache.ws.commons.schema.XmlSchemaSimpleTypeContent)>($r4);

        return;
    }

    private void setDerivationByList(org.apache.ws.commons.schema.XmlSchema, javax.xml.namespace.QName, javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.XmlSchemaType $r2, $r6;
        org.apache.ws.commons.schema.XmlSchemaCollection r8;
        org.apache.ws.commons.schema.XmlSchemaSimpleType r3, $r7;
        org.apache.ws.commons.schema.XmlSchema r0;
        javax.xml.namespace.QName r1, r5;
        org.apache.ws.commons.schema.XmlSchemaSimpleTypeList $r4;

        r8 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r0 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: javax.xml.namespace.QName;

        r5 := @parameter2: javax.xml.namespace.QName;

        $r2 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaType getTypeByName(javax.xml.namespace.QName)>(r1);

        r3 = (org.apache.ws.commons.schema.XmlSchemaSimpleType) $r2;

        $r4 = new org.apache.ws.commons.schema.XmlSchemaSimpleTypeList;

        specialinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeList: void <init>()>();

        virtualinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeList: void setItemTypeName(javax.xml.namespace.QName)>(r5);

        $r6 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaType getTypeByName(javax.xml.namespace.QName)>(r5);

        $r7 = (org.apache.ws.commons.schema.XmlSchemaSimpleType) $r6;

        virtualinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeList: void setItemType(org.apache.ws.commons.schema.XmlSchemaSimpleType)>($r7);

        virtualinvoke r3.<org.apache.ws.commons.schema.XmlSchemaSimpleType: void setContent(org.apache.ws.commons.schema.XmlSchemaSimpleTypeContent)>($r4);

        return;
    }

    public void pop()
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public void push(org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey;

        $r2 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Stack stack>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public org.apache.ws.commons.schema.XmlSchema read(org.w3c.dom.Document, java.lang.String)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        org.w3c.dom.Document r1;
        org.apache.ws.commons.schema.XmlSchema $r3;
        java.lang.String r2;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.w3c.dom.Document;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema read(org.w3c.dom.Document,java.lang.String,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>(r1, r2, null);

        return $r3;
    }

    public org.apache.ws.commons.schema.XmlSchema read(org.w3c.dom.Document, java.lang.String, org.apache.ws.commons.schema.utils.TargetNamespaceValidator)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r1;
        org.apache.ws.commons.schema.utils.TargetNamespaceValidator r2;
        org.apache.ws.commons.schema.SchemaBuilder $r0;
        org.w3c.dom.Document r3;
        org.apache.ws.commons.schema.XmlSchema $r5;
        java.lang.String r4, $r6;

        r1 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r3 := @parameter0: org.w3c.dom.Document;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.ws.commons.schema.utils.TargetNamespaceValidator;

        $r0 = new org.apache.ws.commons.schema.SchemaBuilder;

        specialinvoke $r0.<org.apache.ws.commons.schema.SchemaBuilder: void <init>(org.apache.ws.commons.schema.XmlSchemaCollection,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>(r1, r2);

        $r5 = virtualinvoke $r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema build(org.w3c.dom.Document,java.lang.String)>(r3, r4);

        $r6 = staticinvoke <org.apache.ws.commons.schema.utils.DOMUtil: java.lang.String getInputEncoding(org.w3c.dom.Document)>(r3);

        virtualinvoke $r5.<org.apache.ws.commons.schema.XmlSchema: void setInputEncoding(java.lang.String)>($r6);

        return $r5;
    }

    public org.apache.ws.commons.schema.XmlSchema read(org.w3c.dom.Document)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r1;
        org.apache.ws.commons.schema.SchemaBuilder $r0;
        org.w3c.dom.Document r2;
        org.apache.ws.commons.schema.XmlSchema $r3;

        r1 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r2 := @parameter0: org.w3c.dom.Document;

        $r0 = new org.apache.ws.commons.schema.SchemaBuilder;

        specialinvoke $r0.<org.apache.ws.commons.schema.SchemaBuilder: void <init>(org.apache.ws.commons.schema.XmlSchemaCollection,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>(r1, null);

        $r3 = virtualinvoke $r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema build(org.w3c.dom.Document,java.lang.String)>(r2, null);

        return $r3;
    }

    public org.apache.ws.commons.schema.XmlSchema read(org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r1;
        org.w3c.dom.Element r2;
        org.apache.ws.commons.schema.SchemaBuilder $r0;
        org.w3c.dom.Document $r4;
        org.apache.ws.commons.schema.XmlSchema $r3;
        java.lang.String $r5;

        r1 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r2 := @parameter0: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.SchemaBuilder;

        specialinvoke $r0.<org.apache.ws.commons.schema.SchemaBuilder: void <init>(org.apache.ws.commons.schema.XmlSchemaCollection,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>(r1, null);

        $r3 = virtualinvoke $r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema handleXmlSchemaElement(org.w3c.dom.Element,java.lang.String)>(r2, null);

        $r4 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r5 = staticinvoke <org.apache.ws.commons.schema.utils.DOMUtil: java.lang.String getXmlEncoding(org.w3c.dom.Document)>($r4);

        virtualinvoke $r3.<org.apache.ws.commons.schema.XmlSchema: void setInputEncoding(java.lang.String)>($r5);

        return $r3;
    }

    public org.apache.ws.commons.schema.XmlSchema read(org.w3c.dom.Element, java.lang.String)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r1;
        org.w3c.dom.Element r2;
        org.apache.ws.commons.schema.SchemaBuilder $r0;
        org.w3c.dom.Document $r5;
        org.apache.ws.commons.schema.XmlSchema $r4;
        java.lang.String r3, $r6;

        r1 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r2 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.apache.ws.commons.schema.SchemaBuilder;

        specialinvoke $r0.<org.apache.ws.commons.schema.SchemaBuilder: void <init>(org.apache.ws.commons.schema.XmlSchemaCollection,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>(r1, null);

        $r4 = virtualinvoke $r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema handleXmlSchemaElement(org.w3c.dom.Element,java.lang.String)>(r2, r3);

        $r5 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r6 = staticinvoke <org.apache.ws.commons.schema.utils.DOMUtil: java.lang.String getInputEncoding(org.w3c.dom.Document)>($r5);

        virtualinvoke $r4.<org.apache.ws.commons.schema.XmlSchema: void setInputEncoding(java.lang.String)>($r6);

        return $r4;
    }

    public org.apache.ws.commons.schema.XmlSchema read(org.xml.sax.InputSource)
    {
        org.xml.sax.InputSource r1;
        org.apache.ws.commons.schema.XmlSchema $r2;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.xml.sax.InputSource;

        $r2 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema read(org.xml.sax.InputSource,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>(r1, null);

        return $r2;
    }

    public org.apache.ws.commons.schema.XmlSchema read(java.io.Reader)
    {
        org.xml.sax.InputSource $r1;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        org.apache.ws.commons.schema.XmlSchema $r3;
        java.io.Reader r2;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r2 := @parameter0: java.io.Reader;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r2);

        $r3 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema read(org.xml.sax.InputSource)>($r1);

        return $r3;
    }

    public org.apache.ws.commons.schema.XmlSchema read(javax.xml.transform.Source)
    {
        javax.xml.transform.dom.DOMSource $r11;
        javax.xml.transform.stream.StreamSource r20;
        javax.xml.transform.Source r0;
        org.apache.ws.commons.schema.XmlSchemaCollection r3;
        org.w3c.dom.Document $r13, $r15;
        org.w3c.dom.Node $r12, r19;
        org.apache.ws.commons.schema.XmlSchema $r4, $r10, $r14, $r18;
        java.lang.String $r2, $r6, $r9;
        boolean $z0, $z1, $z2, $z3;
        org.xml.sax.InputSource $r1, $r5, $r17;
        java.io.Reader $r8;
        javax.xml.transform.sax.SAXSource $r16;
        java.io.InputStream $r7;

        r3 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r0 := @parameter0: javax.xml.transform.Source;

        $z0 = r0 instanceof javax.xml.transform.sax.SAXSource;

        if $z0 == 0 goto label1;

        $r16 = (javax.xml.transform.sax.SAXSource) r0;

        $r17 = virtualinvoke $r16.<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()>();

        $r18 = virtualinvoke r3.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema read(org.xml.sax.InputSource)>($r17);

        return $r18;

     label1:
        $z1 = r0 instanceof javax.xml.transform.dom.DOMSource;

        if $z1 == 0 goto label3;

        $r11 = (javax.xml.transform.dom.DOMSource) r0;

        $r12 = virtualinvoke $r11.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        r19 = $r12;

        $z3 = $r12 instanceof org.w3c.dom.Document;

        if $z3 == 0 goto label2;

        $r15 = (org.w3c.dom.Document) $r12;

        r19 = interfaceinvoke $r15.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

     label2:
        $r13 = (org.w3c.dom.Document) r19;

        $r14 = virtualinvoke r3.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema read(org.w3c.dom.Document)>($r13);

        return $r14;

     label3:
        $z2 = r0 instanceof javax.xml.transform.stream.StreamSource;

        if $z2 == 0 goto label4;

        r20 = (javax.xml.transform.stream.StreamSource) r0;

        $r5 = new org.xml.sax.InputSource;

        $r6 = virtualinvoke r20.<javax.xml.transform.stream.StreamSource: java.lang.String getSystemId()>();

        specialinvoke $r5.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke r20.<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()>();

        virtualinvoke $r5.<org.xml.sax.InputSource: void setByteStream(java.io.InputStream)>($r7);

        $r8 = virtualinvoke r20.<javax.xml.transform.stream.StreamSource: java.io.Reader getReader()>();

        virtualinvoke $r5.<org.xml.sax.InputSource: void setCharacterStream(java.io.Reader)>($r8);

        $r9 = virtualinvoke r20.<javax.xml.transform.stream.StreamSource: java.lang.String getPublicId()>();

        virtualinvoke $r5.<org.xml.sax.InputSource: void setPublicId(java.lang.String)>($r9);

        $r10 = virtualinvoke r3.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema read(org.xml.sax.InputSource)>($r5);

        return $r10;

     label4:
        $r1 = new org.xml.sax.InputSource;

        $r2 = interfaceinvoke r0.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke r3.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema read(org.xml.sax.InputSource)>($r1);

        return $r4;
    }

    public org.apache.ws.commons.schema.XmlSchema schemaForNamespace(java.lang.String)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey $r7;
        java.util.Set $r2;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        java.util.Map $r1;
        org.apache.ws.commons.schema.XmlSchema $r11;
        java.lang.Object $r4, $r6, $r10;
        java.lang.String $r8, r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r9 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey) $r6;

        $r8 = virtualinvoke $r7.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: java.lang.String getNamespace()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (org.apache.ws.commons.schema.XmlSchema) $r10;

        return $r11;

     label2:
        goto label1;

     label3:
        return null;
    }

    public void setBaseUri(java.lang.String)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        org.apache.ws.commons.schema.resolver.URIResolver $r2, $r3;
        org.apache.ws.commons.schema.resolver.CollectionURIResolver r4;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.lang.String baseUri> = r1;

        $r2 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.resolver.URIResolver schemaResolver>;

        $z0 = $r2 instanceof org.apache.ws.commons.schema.resolver.CollectionURIResolver;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.resolver.URIResolver schemaResolver>;

        r4 = (org.apache.ws.commons.schema.resolver.CollectionURIResolver) $r3;

        interfaceinvoke r4.<org.apache.ws.commons.schema.resolver.CollectionURIResolver: void setCollectionBaseURI(java.lang.String)>(r1);

     label1:
        return;
    }

    public void setExtReg(org.apache.ws.commons.schema.extensions.ExtensionRegistry)
    {
        org.apache.ws.commons.schema.extensions.ExtensionRegistry r1;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.apache.ws.commons.schema.extensions.ExtensionRegistry;

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg> = r1;

        return;
    }

    public void setKnownNamespaceMap(java.util.Map)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        java.util.Map r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map knownNamespaceMap> = r1;

        return;
    }

    public void setNamespaceContext(org.apache.ws.commons.schema.utils.NamespacePrefixList)
    {
        org.apache.ws.commons.schema.utils.NamespacePrefixList r1;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.apache.ws.commons.schema.utils.NamespacePrefixList;

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.utils.NamespacePrefixList namespaceContext> = r1;

        return;
    }

    public void setSchemaResolver(org.apache.ws.commons.schema.resolver.URIResolver)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        org.apache.ws.commons.schema.resolver.URIResolver r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.apache.ws.commons.schema.resolver.URIResolver;

        r0.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.resolver.URIResolver schemaResolver> = r1;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r1;
        java.util.Map $r5;
        java.lang.StringBuilder $r0, $r3, $r4, $r7, $r8;
        java.lang.String $r2, $r6, $r9;

        r1 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r1.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    void addSchema(org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey, org.apache.ws.commons.schema.XmlSchema)
    {
        java.lang.IllegalStateException $r5;
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey r1;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        java.util.Map $r2, $r4;
        org.apache.ws.commons.schema.XmlSchema r3;
        java.lang.String $r8, $r11, $r14;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12, $r13;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey;

        r3 := @parameter1: org.apache.ws.commons.schema.XmlSchema;

        $r2 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A schema with target namespace ");

        $r8 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: java.lang.String getNamespace()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and system ID ");

        $r11 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: java.lang.String getSystemId()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already present.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r5;

     label1:
        $r4 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    void addUnresolvedType(javax.xml.namespace.QName, org.apache.ws.commons.schema.TypeReceiver)
    {
        java.util.ArrayList $r5;
        org.apache.ws.commons.schema.TypeReceiver r4;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        java.util.List r7;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: javax.xml.namespace.QName;

        r4 := @parameter1: org.apache.ws.commons.schema.TypeReceiver;

        $r2 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map unresolvedTypes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (java.util.List) $r3;

        if r7 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r7 = $r5;

        $r6 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map unresolvedTypes>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4);

        return;
    }

    boolean containsSchema(org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey;

        $r2 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    org.apache.ws.commons.schema.XmlSchema getKnownSchema(java.lang.String)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        java.util.Map $r2;
        org.apache.ws.commons.schema.XmlSchema $r4;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map knownNamespaceMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.ws.commons.schema.XmlSchema) $r3;

        return $r4;
    }

    org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey r1;
        java.util.Map $r2;
        org.apache.ws.commons.schema.XmlSchema $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey;

        $r2 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.ws.commons.schema.XmlSchema) $r3;

        return $r4;
    }

    org.apache.ws.commons.schema.XmlSchema read(org.xml.sax.InputSource, org.apache.ws.commons.schema.utils.TargetNamespaceValidator)
    {
        org.apache.ws.commons.schema.utils.TargetNamespaceValidator r6;
        org.apache.ws.commons.schema.XmlSchemaException $r9, $r12, $r15;
        org.apache.ws.commons.schema.XmlSchemaCollection r2;
        org.w3c.dom.Document $r4;
        org.apache.ws.commons.schema.XmlSchema $r7;
        java.lang.String $r5, $r10, $r13, $r16;
        org.xml.sax.InputSource r3;
        java.io.IOException $r11;
        javax.xml.parsers.ParserConfigurationException $r14;
        javax.xml.parsers.DocumentBuilder $r1;
        org.xml.sax.SAXException $r8;
        javax.xml.parsers.DocumentBuilderFactory $r0;

        r2 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r3 := @parameter0: org.xml.sax.InputSource;

        r6 := @parameter1: org.apache.ws.commons.schema.utils.TargetNamespaceValidator;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r4 = specialinvoke r2.<org.apache.ws.commons.schema.XmlSchemaCollection: org.w3c.dom.Document parseDoPriv(org.xml.sax.InputSource,javax.xml.parsers.DocumentBuilder,org.w3c.dom.Document)>(r3, $r1, null);

        $r5 = virtualinvoke r3.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        $r7 = virtualinvoke r2.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema read(org.w3c.dom.Document,java.lang.String,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>($r4, $r5, r6);

     label2:
        return $r7;

     label3:
        $r14 := @caughtexception;

        $r15 = new org.apache.ws.commons.schema.XmlSchemaException;

        $r16 = virtualinvoke $r14.<javax.xml.parsers.ParserConfigurationException: java.lang.String getMessage()>();

        specialinvoke $r15.<org.apache.ws.commons.schema.XmlSchemaException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r14);

        throw $r15;

     label4:
        $r11 := @caughtexception;

        $r12 = new org.apache.ws.commons.schema.XmlSchemaException;

        $r13 = virtualinvoke $r11.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r12.<org.apache.ws.commons.schema.XmlSchemaException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r11);

        throw $r12;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.apache.ws.commons.schema.XmlSchemaException;

        $r10 = virtualinvoke $r8.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r9.<org.apache.ws.commons.schema.XmlSchemaException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r8);

        throw $r9;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
        catch org.xml.sax.SAXException from label1 to label2 with label5;
    }

    void resolveType(javax.xml.namespace.QName, org.apache.ws.commons.schema.XmlSchemaType)
    {
        java.util.Iterator $r5;
        org.apache.ws.commons.schema.TypeReceiver r8;
        org.apache.ws.commons.schema.XmlSchemaType r9;
        org.apache.ws.commons.schema.XmlSchemaCollection r0;
        java.util.List r4;
        java.util.Map $r2, $r6;
        java.lang.Object $r3, $r7;
        javax.xml.namespace.QName r1;
        boolean $z0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: javax.xml.namespace.QName;

        r9 := @parameter1: org.apache.ws.commons.schema.XmlSchemaType;

        $r2 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map unresolvedTypes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        if r4 != null goto label1;

        return;

     label1:
        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.ws.commons.schema.TypeReceiver) $r7;

        interfaceinvoke r8.<org.apache.ws.commons.schema.TypeReceiver: void setType(org.apache.ws.commons.schema.XmlSchemaType)>(r9);

        goto label2;

     label3:
        $r6 = r0.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map unresolvedTypes>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    private void addSimpleType(org.apache.ws.commons.schema.XmlSchema, java.lang.String)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r3;
        org.apache.ws.commons.schema.XmlSchemaSimpleType $r0;
        org.apache.ws.commons.schema.XmlSchema r1;
        java.lang.String r2;

        r3 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaSimpleType;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleType: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>(r1, 1);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleType: void setName(java.lang.String)>(r2);

        return;
    }

    private org.w3c.dom.Document parseDoPriv(org.xml.sax.InputSource, javax.xml.parsers.DocumentBuilder, org.w3c.dom.Document) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.xml.sax.InputSource r3;
        java.security.PrivilegedActionException $r5;
        java.io.IOException $r8;
        java.lang.Exception $r6;
        org.apache.ws.commons.schema.XmlSchemaCollection r1;
        org.w3c.dom.Document r9;
        org.apache.ws.commons.schema.XmlSchemaCollection$2 $r0;
        javax.xml.parsers.DocumentBuilder r2;
        org.xml.sax.SAXException $r7;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r1 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r3 := @parameter0: org.xml.sax.InputSource;

        r2 := @parameter1: javax.xml.parsers.DocumentBuilder;

        r9 := @parameter2: org.w3c.dom.Document;

     label1:
        $r0 = new org.apache.ws.commons.schema.XmlSchemaCollection$2;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaCollection$2: void <init>(org.apache.ws.commons.schema.XmlSchemaCollection,javax.xml.parsers.DocumentBuilder,org.xml.sax.InputSource)>(r1, r2, r3);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r0);

        r9 = (org.w3c.dom.Document) $r4;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        $z0 = $r6 instanceof java.io.IOException;

        if $z0 == 0 goto label4;

        $r8 = (java.io.IOException) $r6;

        throw $r8;

     label4:
        $z1 = $r6 instanceof org.xml.sax.SAXException;

        if $z1 == 0 goto label5;

        $r7 = (org.xml.sax.SAXException) $r6;

        throw $r7;

     label5:
        return r9;

        catch java.security.PrivilegedActionException from label1 to label2 with label3;
    }

    public org.apache.ws.commons.schema.XmlSchemaAttribute getAttributeByQName(javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey $r9;
        org.apache.ws.commons.schema.XmlSchemaAttribute $r13;
        org.apache.ws.commons.schema.XmlSchemaCollection r2;
        java.util.Map $r3;
        org.apache.ws.commons.schema.XmlSchema $r12;
        java.lang.String $r1, $r10;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r6, $r8, $r11;
        javax.xml.namespace.QName r0;

        r2 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = r2.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey) $r8;

        $r10 = virtualinvoke $r9.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: java.lang.String getNamespace()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (org.apache.ws.commons.schema.XmlSchema) $r11;

        $r13 = virtualinvoke $r12.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaAttribute getAttributeByName(javax.xml.namespace.QName)>(r0);

        if $r13 == null goto label2;

        return $r13;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.ws.commons.schema.XmlSchemaElement getElementByQName(javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey $r9;
        org.apache.ws.commons.schema.XmlSchemaElement $r13;
        org.apache.ws.commons.schema.XmlSchemaCollection r2;
        java.util.Map $r3;
        org.apache.ws.commons.schema.XmlSchema $r12;
        java.lang.String $r1, $r10;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r6, $r8, $r11;
        javax.xml.namespace.QName r0;

        r2 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = r2.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey) $r8;

        $r10 = virtualinvoke $r9.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: java.lang.String getNamespace()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (org.apache.ws.commons.schema.XmlSchema) $r11;

        $r13 = virtualinvoke $r12.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaElement getElementByName(javax.xml.namespace.QName)>(r0);

        if $r13 == null goto label2;

        return $r13;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.ws.commons.schema.XmlSchemaAttributeGroup getAttributeGroupByQName(javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey $r9;
        org.apache.ws.commons.schema.XmlSchemaCollection r2;
        java.util.Map $r3;
        org.apache.ws.commons.schema.XmlSchema $r12;
        java.lang.String $r1, $r10;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        org.apache.ws.commons.schema.XmlSchemaAttributeGroup $r13;
        java.lang.Object $r6, $r8, $r11;
        javax.xml.namespace.QName r0;

        r2 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = r2.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey) $r8;

        $r10 = virtualinvoke $r9.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: java.lang.String getNamespace()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (org.apache.ws.commons.schema.XmlSchema) $r11;

        $r13 = virtualinvoke $r12.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaAttributeGroup getAttributeGroupByName(javax.xml.namespace.QName)>(r0);

        if $r13 == null goto label2;

        return $r13;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.ws.commons.schema.XmlSchemaGroup getGroupByQName(javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey $r9;
        org.apache.ws.commons.schema.XmlSchemaGroup $r13;
        org.apache.ws.commons.schema.XmlSchemaCollection r2;
        java.util.Map $r3;
        org.apache.ws.commons.schema.XmlSchema $r12;
        java.lang.String $r1, $r10;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r6, $r8, $r11;
        javax.xml.namespace.QName r0;

        r2 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = r2.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey) $r8;

        $r10 = virtualinvoke $r9.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: java.lang.String getNamespace()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (org.apache.ws.commons.schema.XmlSchema) $r11;

        $r13 = virtualinvoke $r12.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaGroup getGroupByName(javax.xml.namespace.QName)>(r0);

        if $r13 == null goto label2;

        return $r13;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.ws.commons.schema.XmlSchemaNotation getNotationByQName(javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey $r9;
        org.apache.ws.commons.schema.XmlSchemaCollection r2;
        java.util.Map $r3;
        org.apache.ws.commons.schema.XmlSchema $r12;
        java.lang.String $r1, $r10;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        org.apache.ws.commons.schema.XmlSchemaNotation $r13;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r6, $r8, $r11;
        javax.xml.namespace.QName r0;

        r2 := @this: org.apache.ws.commons.schema.XmlSchemaCollection;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = r2.<org.apache.ws.commons.schema.XmlSchemaCollection: java.util.Map schemas>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey) $r8;

        $r10 = virtualinvoke $r9.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: java.lang.String getNamespace()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (org.apache.ws.commons.schema.XmlSchema) $r11;

        $r13 = virtualinvoke $r12.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaNotation getNotationByName(javax.xml.namespace.QName)>(r0);

        if $r13 == null goto label2;

        return $r13;

     label2:
        goto label1;

     label3:
        return null;
    }
}
