class org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1$1 extends java.lang.Object implements org.waveprotocol.wave.concurrencycontrol.channel.WaveletDeltaChannel$Transmitter
{
    final org.waveprotocol.wave.model.operation.wave.WaveletDelta val$delta;
    final org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1 this$1;

    void <init>(org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1, org.waveprotocol.wave.model.operation.wave.WaveletDelta)
    {
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r2;
        org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1$1 r0;
        org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1 r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1$1;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1;

        r2 := @parameter1: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        r0.<org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1$1: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1 this$1> = r1;

        r0.<org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1$1: org.waveprotocol.wave.model.operation.wave.WaveletDelta val$delta> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.concurrencycontrol.channel.WaveletDeltaChannel$Transmitter$ClientMessage takeMessage()
    {
        org.waveprotocol.wave.model.operation.wave.WaveletDelta $r2;
        org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1$1 r1;
        org.waveprotocol.wave.concurrencycontrol.channel.WaveletDeltaChannel$Transmitter$ClientMessage $r0;

        r1 := @this: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1$1;

        $r0 = new org.waveprotocol.wave.concurrencycontrol.channel.WaveletDeltaChannel$Transmitter$ClientMessage;

        $r2 = r1.<org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$1$1: org.waveprotocol.wave.model.operation.wave.WaveletDelta val$delta>;

        specialinvoke $r0.<org.waveprotocol.wave.concurrencycontrol.channel.WaveletDeltaChannel$Transmitter$ClientMessage: void <init>(org.waveprotocol.wave.model.operation.wave.WaveletDelta,boolean)>($r2, 0);

        return $r0;
    }
}
