public class org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer extends java.lang.Object
{
    private static final int START;
    private static final int IN_CLASSPATH_HEADER;
    private static final int PAST_CLASSPATH_HEADER;
    private static final int SKIPPING_WHITESPACE;
    private static final int READING_JAR;
    private static final int CONTINUING;
    private static final int SKIP_LINE;
    private static final char[] CLASSPATH_HEADER_TOKEN;
    private int ClasspathSectionsCount;
    private java.util.ArrayList calledFilesNames;

    static void <clinit>()
    {
        char[] $r1;
        java.lang.String $r0;

        <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int SKIP_LINE> = 6;

        <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int CONTINUING> = 5;

        <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int READING_JAR> = 4;

        <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int SKIPPING_WHITESPACE> = 3;

        <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int PAST_CLASSPATH_HEADER> = 2;

        <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int IN_CLASSPATH_HEADER> = 1;

        <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int START> = 0;

        $r0 = "Class-Path:";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: char[] CLASSPATH_HEADER_TOKEN> = $r1;

        return;
    }

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean analyzeManifestContents(java.io.Reader) throws java.io.IOException
    {
        byte b9;
        java.io.Reader r2;
        org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer r1;
        java.util.ArrayList $r4, $r5, $r6, $r13;
        java.lang.StringBuffer $r12;
        int $i3, $i4, $i5, $i7, i10, $i11, $i13, $i14, $i16, $i17, $i19, $i21, $i22, $i24, $i26;
        java.lang.String $r7;
        char $c0, $c1, $c2, $c6, $c8;
        char[] $r3, $r9, $r10, $r11;

        r1 := @this: org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer;

        r2 := @parameter0: java.io.Reader;

        b9 = 0;

        i10 = 0;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        r1.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int ClasspathSectionsCount> = 0;

        r1.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: java.util.ArrayList calledFilesNames> = null;

     label01:
        $i11 = virtualinvoke r2.<java.io.Reader: int read()>();

        tableswitch(b9)
        {
            case 0: goto label02;
            case 1: goto label05;
            case 2: goto label09;
            case 3: goto label11;
            case 4: goto label22;
            case 5: goto label14;
            case 6: goto label20;
            default: goto label28;
        };

     label02:
        $i13 = (int) -1;

        if $i11 != $i13 goto label03;

        return 1;

     label03:
        $r11 = <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: char[] CLASSPATH_HEADER_TOKEN>;

        $c8 = $r11[0];

        $i14 = (int) $c8;

        if $i11 != $i14 goto label04;

        b9 = 1;

        i10 = 1;

        goto label01;

     label04:
        b9 = 6;

        goto label01;

     label05:
        $i16 = (int) -1;

        if $i11 != $i16 goto label06;

        return 1;

     label06:
        if $i11 != 10 goto label07;

        b9 = 0;

        goto label01;

     label07:
        $r9 = <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: char[] CLASSPATH_HEADER_TOKEN>;

        $i5 = i10;

        i10 = i10 + 1;

        $c6 = $r9[$i5];

        $i17 = (int) $c6;

        if $i11 == $i17 goto label08;

        b9 = 6;

        goto label01;

     label08:
        $r10 = <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: char[] CLASSPATH_HEADER_TOKEN>;

        $i7 = lengthof $r10;

        if i10 != $i7 goto label01;

        b9 = 2;

        goto label01;

     label09:
        if $i11 != 32 goto label10;

        b9 = 3;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int ClasspathSectionsCount>;

        $i4 = $i3 + 1;

        r1.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int ClasspathSectionsCount> = $i4;

        goto label01;

     label10:
        return 0;

     label11:
        $i19 = (int) -1;

        if $i11 != $i19 goto label12;

        return 1;

     label12:
        if $i11 != 10 goto label13;

        b9 = 5;

        goto label01;

     label13:
        if $i11 == 32 goto label01;

        $c2 = (char) $i11;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        b9 = 4;

        goto label01;

     label14:
        $i21 = (int) -1;

        if $i11 != $i21 goto label15;

        return 1;

     label15:
        if $i11 != 10 goto label16;

        b9 = 0;

        goto label01;

     label16:
        if $i11 != 32 goto label17;

        b9 = 3;

        goto label01;

     label17:
        $r3 = <org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: char[] CLASSPATH_HEADER_TOKEN>;

        $c0 = $r3[0];

        $i22 = (int) $c0;

        if $i11 != $i22 goto label18;

        b9 = 1;

        i10 = 1;

        goto label01;

     label18:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: java.util.ArrayList calledFilesNames>;

        if $r4 != null goto label19;

        return 0;

     label19:
        b9 = 6;

        goto label01;

     label20:
        $i24 = (int) -1;

        if $i11 != $i24 goto label21;

        return 1;

     label21:
        if $i11 != 10 goto label01;

        b9 = 0;

        goto label01;

     label22:
        $i26 = (int) -1;

        if $i11 != $i26 goto label23;

        return 0;

     label23:
        if $i11 != 10 goto label24;

        b9 = 5;

        goto label26;

     label24:
        if $i11 != 32 goto label25;

        b9 = 3;

        goto label26;

     label25:
        $c1 = (char) $i11;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label01;

     label26:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: java.util.ArrayList calledFilesNames>;

        if $r5 != null goto label27;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r1.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: java.util.ArrayList calledFilesNames> = $r13;

     label27:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: java.util.ArrayList calledFilesNames>;

        $r7 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        virtualinvoke $r12.<java.lang.StringBuffer: void setLength(int)>(0);

     label28:
        goto label01;
    }

    public int getClasspathSectionsCount()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: int ClasspathSectionsCount>;

        return $i0;
    }

    public java.util.List getCalledFileNames()
    {
        org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer r0;
        java.util.ArrayList $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar$ManifestAnalyzer: java.util.ArrayList calledFilesNames>;

        return $r1;
    }
}
