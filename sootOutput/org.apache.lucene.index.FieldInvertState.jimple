public final class org.apache.lucene.index.FieldInvertState extends java.lang.Object
{
    java.lang.String name;
    int position;
    int length;
    int numOverlap;
    int offset;
    int maxTermFrequency;
    int uniqueTermCount;
    float boost;
    org.apache.lucene.util.AttributeSource attributeSource;

    public void <init>(java.lang.String)
    {
        org.apache.lucene.index.FieldInvertState r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.FieldInvertState: java.lang.String name> = r1;

        return;
    }

    public void <init>(java.lang.String, int, int, int, int, float)
    {
        org.apache.lucene.index.FieldInvertState r0;
        int i0, i1, i2, i3;
        float f0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        f0 := @parameter5: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.FieldInvertState: java.lang.String name> = r1;

        r0.<org.apache.lucene.index.FieldInvertState: int position> = i0;

        r0.<org.apache.lucene.index.FieldInvertState: int length> = i1;

        r0.<org.apache.lucene.index.FieldInvertState: int numOverlap> = i2;

        r0.<org.apache.lucene.index.FieldInvertState: int offset> = i3;

        r0.<org.apache.lucene.index.FieldInvertState: float boost> = f0;

        return;
    }

    void reset()
    {
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        r0.<org.apache.lucene.index.FieldInvertState: int position> = 0;

        r0.<org.apache.lucene.index.FieldInvertState: int length> = 0;

        r0.<org.apache.lucene.index.FieldInvertState: int numOverlap> = 0;

        r0.<org.apache.lucene.index.FieldInvertState: int offset> = 0;

        r0.<org.apache.lucene.index.FieldInvertState: int maxTermFrequency> = 0;

        r0.<org.apache.lucene.index.FieldInvertState: int uniqueTermCount> = 0;

        r0.<org.apache.lucene.index.FieldInvertState: float boost> = 1.0F;

        r0.<org.apache.lucene.index.FieldInvertState: org.apache.lucene.util.AttributeSource attributeSource> = null;

        return;
    }

    public int getPosition()
    {
        int $i0;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        $i0 = r0.<org.apache.lucene.index.FieldInvertState: int position>;

        return $i0;
    }

    public int getLength()
    {
        int $i0;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        $i0 = r0.<org.apache.lucene.index.FieldInvertState: int length>;

        return $i0;
    }

    public void setLength(int)
    {
        int i0;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.index.FieldInvertState: int length> = i0;

        return;
    }

    public int getNumOverlap()
    {
        int $i0;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        $i0 = r0.<org.apache.lucene.index.FieldInvertState: int numOverlap>;

        return $i0;
    }

    public void setNumOverlap(int)
    {
        int i0;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.index.FieldInvertState: int numOverlap> = i0;

        return;
    }

    public int getOffset()
    {
        int $i0;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        $i0 = r0.<org.apache.lucene.index.FieldInvertState: int offset>;

        return $i0;
    }

    public float getBoost()
    {
        float $f0;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        $f0 = r0.<org.apache.lucene.index.FieldInvertState: float boost>;

        return $f0;
    }

    public void setBoost(float)
    {
        float f0;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        f0 := @parameter0: float;

        r0.<org.apache.lucene.index.FieldInvertState: float boost> = f0;

        return;
    }

    public int getMaxTermFrequency()
    {
        int $i0;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        $i0 = r0.<org.apache.lucene.index.FieldInvertState: int maxTermFrequency>;

        return $i0;
    }

    public int getUniqueTermCount()
    {
        int $i0;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        $i0 = r0.<org.apache.lucene.index.FieldInvertState: int uniqueTermCount>;

        return $i0;
    }

    public org.apache.lucene.util.AttributeSource getAttributeSource()
    {
        org.apache.lucene.util.AttributeSource $r1;
        org.apache.lucene.index.FieldInvertState r0;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        $r1 = r0.<org.apache.lucene.index.FieldInvertState: org.apache.lucene.util.AttributeSource attributeSource>;

        return $r1;
    }

    public java.lang.String getName()
    {
        org.apache.lucene.index.FieldInvertState r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.index.FieldInvertState;

        $r1 = r0.<org.apache.lucene.index.FieldInvertState: java.lang.String name>;

        return $r1;
    }
}
