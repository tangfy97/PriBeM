public final class org.apache.poi.hslf.usermodel.SlideShow extends java.lang.Object
{
    private org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow;
    private org.apache.poi.hslf.record.Record[] _mostRecentCoreRecords;
    private java.util.Map _sheetIdToCoreRecordsLookup;
    private org.apache.poi.hslf.record.Document _documentRecord;
    private org.apache.poi.hslf.model.SlideMaster[] _masters;
    private org.apache.poi.hslf.model.TitleMaster[] _titleMasters;
    private org.apache.poi.hslf.model.Slide[] _slides;
    private org.apache.poi.hslf.model.Notes[] _notes;
    private org.apache.poi.hslf.record.FontCollection _fonts;
    private org.apache.poi.util.POILogger logger;

    public void <init>(org.apache.poi.hslf.HSLFSlideShow)
    {
        org.apache.poi.hslf.record.Record r6;
        org.apache.poi.hslf.HSLFSlideShow r3, $r4;
        org.apache.poi.util.POILogger $r2;
        org.apache.poi.hslf.record.Record[] $r5;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        int i0, i1;
        java.lang.Class $r1;
        org.apache.poi.hslf.record.RecordContainer $r7;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r3 := @parameter0: org.apache.poi.hslf.HSLFSlideShow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>($r1);

        r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.util.POILogger logger> = $r2;

        r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow> = r3;

        $r4 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow>;

        $r5 = virtualinvoke $r4.<org.apache.poi.hslf.HSLFSlideShow: org.apache.poi.hslf.record.Record[] getRecords()>();

        i0 = lengthof $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r6 = $r5[i1];

        $z0 = r6 instanceof org.apache.poi.hslf.record.RecordContainer;

        if $z0 == 0 goto label2;

        $r7 = (org.apache.poi.hslf.record.RecordContainer) r6;

        staticinvoke <org.apache.poi.hslf.record.RecordContainer: void handleParentAwareRecords(org.apache.poi.hslf.record.RecordContainer)>($r7);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        specialinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: void findMostRecentCoreRecords()>();

        specialinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: void buildSlidesAndNotes()>();

        return;
    }

    public void <init>()
    {
        org.apache.poi.hslf.HSLFSlideShow $r1;
        org.apache.poi.hslf.usermodel.SlideShow r0;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = staticinvoke <org.apache.poi.hslf.HSLFSlideShow: org.apache.poi.hslf.HSLFSlideShow create()>();

        specialinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: void <init>(org.apache.poi.hslf.HSLFSlideShow)>($r1);

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.hslf.HSLFSlideShow $r1;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new org.apache.poi.hslf.HSLFSlideShow;

        specialinvoke $r1.<org.apache.poi.hslf.HSLFSlideShow: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: void <init>(org.apache.poi.hslf.HSLFSlideShow)>($r1);

        return;
    }

    private void findMostRecentCoreRecords()
    {
        java.lang.Integer $r19, $r23, $r29, $r30, $r33, $r34, $r36, $r37, r44;
        byte $b7;
        java.util.Map $r21, $r28;
        org.apache.poi.hslf.HSLFSlideShow $r2, $r12;
        java.util.Set $r6, $r10;
        org.apache.poi.hslf.record.Record[] $r3, $r4, $r13, $r24, r46;
        org.apache.poi.hslf.record.Document $r15, $r16;
        java.lang.Integer[] $r7, r40;
        java.lang.Object[] $r8;
        org.apache.poi.hslf.record.PersistPtrHolder r39;
        long $l4, $l6;
        java.util.Map$Entry r41;
        org.apache.poi.hslf.record.RecordTypes$Type $r14;
        org.apache.poi.hslf.record.Environment $r17;
        int[] $r31;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.poi.hslf.record.PositionDependentRecordContainer r45;
        org.apache.poi.hslf.usermodel.SlideShow r1;
        org.apache.poi.hslf.record.Record r38, r42, r47;
        java.util.HashMap $r0, $r5, $r9;
        org.apache.poi.hslf.record.FontCollection $r18;
        int $i0, $i1, $i2, $i3, $i5, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23;
        org.apache.poi.hslf.record.PositionDependentRecord r43;
        java.util.Hashtable $r32;
        java.util.Iterator $r11;
        java.lang.Object $r20, $r22, $r25, $r26, $r27, $r35;

        r1 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.HSLFSlideShow: org.apache.poi.hslf.record.Record[] getRecords()>();

        i11 = lengthof $r3;

        i12 = 0;

     label01:
        if i12 >= i11 goto label07;

        r38 = $r3[i12];

        $z3 = r38 instanceof org.apache.poi.hslf.record.PersistPtrHolder;

        if $z3 == 0 goto label06;

        r39 = (org.apache.poi.hslf.record.PersistPtrHolder) r38;

        $r31 = virtualinvoke r39.<org.apache.poi.hslf.record.PersistPtrHolder: int[] getKnownSlideIDs()>();

        i13 = lengthof $r31;

        i14 = 0;

     label02:
        if i14 >= i13 goto label04;

        i15 = $r31[i14];

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        $z4 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r36);

        if $z4 == 0 goto label03;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r37);

     label03:
        i14 = i14 + 1;

        goto label02;

     label04:
        $r32 = virtualinvoke r39.<org.apache.poi.hslf.record.PersistPtrHolder: java.util.Hashtable getSlideLocationsLookup()>();

        i16 = lengthof $r31;

        i17 = 0;

     label05:
        if i17 >= i16 goto label06;

        i18 = $r31[i17];

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18);

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18);

        $r35 = interfaceinvoke $r32.<java.util.Map: java.lang.Object get(java.lang.Object)>($r34);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r35);

        i17 = i17 + 1;

        goto label05;

     label06:
        i12 = i12 + 1;

        goto label01;

     label07:
        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.poi.hslf.record.Record)[$i0];

        r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Record[] _mostRecentCoreRecords> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r1.<org.apache.poi.hslf.usermodel.SlideShow: java.util.Map _sheetIdToCoreRecordsLookup> = $r5;

        $r6 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $i1 = interfaceinvoke $r0.<java.util.Map: int size()>();

        $r7 = newarray (java.lang.Integer)[$i1];

        $r8 = interfaceinvoke $r6.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        r40 = (java.lang.Integer[]) $r8;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r40);

        i19 = 0;

     label08:
        $i2 = lengthof r40;

        if i19 >= $i2 goto label09;

        $r28 = r1.<org.apache.poi.hslf.usermodel.SlideShow: java.util.Map _sheetIdToCoreRecordsLookup>;

        $r29 = r40[i19];

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i19);

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30);

        i19 = i19 + 1;

        goto label08;

     label09:
        $r9 = new java.util.HashMap;

        $i3 = interfaceinvoke $r0.<java.util.Map: int size()>();

        specialinvoke $r9.<java.util.HashMap: void <init>(int)>($i3);

        $r10 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r25 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r41 = (java.util.Map$Entry) $r25;

        $r26 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27);

        goto label10;

     label11:
        $r12 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow>;

        $r13 = virtualinvoke $r12.<org.apache.poi.hslf.HSLFSlideShow: org.apache.poi.hslf.record.Record[] getRecords()>();

        i20 = lengthof $r13;

        i21 = 0;

     label12:
        if i21 >= i20 goto label17;

        r42 = $r13[i21];

        $z1 = r42 instanceof org.apache.poi.hslf.record.PositionDependentRecord;

        if $z1 != 0 goto label13;

        goto label16;

     label13:
        r43 = (org.apache.poi.hslf.record.PositionDependentRecord) r42;

        $i8 = interfaceinvoke r43.<org.apache.poi.hslf.record.PositionDependentRecord: int getLastOnDiskOffset()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r20 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        r44 = (java.lang.Integer) $r20;

        if r44 != null goto label14;

        goto label16;

     label14:
        $r21 = r1.<org.apache.poi.hslf.usermodel.SlideShow: java.util.Map _sheetIdToCoreRecordsLookup>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r44);

        $r23 = (java.lang.Integer) $r22;

        $i9 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();

        $z2 = r43 instanceof org.apache.poi.hslf.record.PositionDependentRecordContainer;

        if $z2 == 0 goto label15;

        r45 = (org.apache.poi.hslf.record.PositionDependentRecordContainer) r42;

        $i10 = virtualinvoke r44.<java.lang.Integer: int intValue()>();

        virtualinvoke r45.<org.apache.poi.hslf.record.PositionDependentRecordContainer: void setSheetId(int)>($i10);

     label15:
        $r24 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Record[] _mostRecentCoreRecords>;

        $r24[$i9] = r42;

     label16:
        i21 = i21 + 1;

        goto label12;

     label17:
        r46 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Record[] _mostRecentCoreRecords>;

        i22 = lengthof r46;

        i23 = 0;

     label18:
        if i23 >= i22 goto label20;

        r47 = r46[i23];

        if r47 == null goto label19;

        $l4 = virtualinvoke r47.<org.apache.poi.hslf.record.Record: long getRecordType()>();

        $r14 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type Document>;

        $i5 = $r14.<org.apache.poi.hslf.record.RecordTypes$Type: int typeID>;

        $l6 = (long) $i5;

        $b7 = $l4 cmp $l6;

        if $b7 != 0 goto label19;

        $r15 = (org.apache.poi.hslf.record.Document) r47;

        r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord> = $r15;

        $r16 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r17 = virtualinvoke $r16.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.Environment getEnvironment()>();

        $r18 = virtualinvoke $r17.<org.apache.poi.hslf.record.Environment: org.apache.poi.hslf.record.FontCollection getFontCollection()>();

        r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.FontCollection _fonts> = $r18;

     label19:
        i23 = i23 + 1;

        goto label18;

     label20:
        return;
    }

    private org.apache.poi.hslf.record.Record getCoreRecordForSAS(org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)
    {
        org.apache.poi.hslf.record.SlidePersistAtom $r1;
        org.apache.poi.hslf.record.Record $r3;
        org.apache.poi.hslf.usermodel.SlideShow r2;
        int $i0;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet r0;

        r2 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r0 := @parameter0: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        $i0 = virtualinvoke $r1.<org.apache.poi.hslf.record.SlidePersistAtom: int getRefID()>();

        $r3 = specialinvoke r2.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Record getCoreRecordForRefID(int)>($i0);

        return $r3;
    }

    private org.apache.poi.hslf.record.Record getCoreRecordForRefID(int)
    {
        org.apache.poi.hslf.record.Record r11;
        org.apache.poi.util.POILogger $r6;
        org.apache.poi.hslf.record.Record[] $r10;
        java.lang.Integer $r2, r4;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        java.util.Map $r1;
        int i0, $i1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: java.util.Map _sheetIdToCoreRecordsLookup>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.lang.Integer) $r3;

        if r4 == null goto label1;

        $r10 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Record[] _mostRecentCoreRecords>;

        $i1 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        r11 = $r10[$i1];

        return r11;

     label1:
        $r6 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.util.POILogger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("We tried to look up a reference to a core record, but there was no core ID for reference ID ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r9);

        return null;
    }

    private void buildSlidesAndNotes()
    {
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] $r9, $r12, $r76, $r85, r93, r97;
        java.lang.Integer $r19, r21, $r52, $r53;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet $r34, $r41, $r48, $r50, $r59, $r70, r94, r100;
        org.apache.poi.hslf.record.Document $r1, $r2, $r4, $r6;
        java.lang.StringBuilder $r22, $r24, $r25, $r36, $r38, $r39, $r40, $r43, $r44, $r45, $r54, $r56, $r57, $r58, $r61, $r62, $r65, $r67, $r68, $r69, $r72, $r73, $r74;
        java.lang.Object[] $r11, $r80, $r83;
        org.apache.poi.hslf.model.Slide[] $r14, $r15, $r102, $r105;
        org.apache.poi.hslf.record.Slide[] r98;
        org.apache.poi.util.POILogger $r23, $r37, $r55, $r66;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Record $r35, $r49, $r86;
        org.apache.poi.hslf.model.Slide $r103, $r106;
        org.apache.poi.hslf.model.TitleMaster $r90;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, $i22, i23, $i24;
        org.apache.poi.hslf.record.MainMaster $r89;
        org.apache.poi.hslf.record.Notes $r28, $r30, $r64;
        java.lang.Object $r20;
        org.apache.poi.hslf.record.SlideListWithText $r3, $r5, $r7;
        org.apache.poi.hslf.model.TitleMaster[] $r82, $r84;
        org.apache.poi.hslf.record.Notes[] r95, r96;
        java.util.ArrayList $r10, $r77, $r78;
        org.apache.poi.hslf.model.SlideMaster $r88;
        org.apache.poi.hslf.record.SlidePersistAtom $r16, $r42, $r51, $r60, $r71, $r87;
        java.lang.String $r26, $r46, $r63, $r75;
        org.apache.poi.hslf.exceptions.CorruptPowerPointFileException $r92;
        org.apache.poi.hslf.model.SlideMaster[] $r79, $r81;
        boolean $z0, $z1, $z2, $z3;
        org.apache.poi.hslf.record.Slide $r17, $r47, $r91, $r104;
        org.apache.poi.hslf.model.Notes[] $r13, $r27, $r31, $r32, $r99;
        org.apache.poi.hslf.record.SlideAtom $r18;
        org.apache.poi.hslf.model.Notes $r29, $r33, r101;
        java.util.HashMap $r8;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        if $r1 != null goto label01;

        $r92 = new org.apache.poi.hslf.exceptions.CorruptPowerPointFileException;

        specialinvoke $r92.<org.apache.poi.hslf.exceptions.CorruptPowerPointFileException: void <init>(java.lang.String)>("The PowerPoint file didn\'t contain a Document Record in its PersistPtr blocks. It is probably corrupt.");

        throw $r92;

     label01:
        $r2 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.SlideListWithText getMasterSlideListWithText()>();

        $r4 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r5 = virtualinvoke $r4.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.SlideListWithText getSlideSlideListWithText()>();

        $r6 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r7 = virtualinvoke $r6.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.SlideListWithText getNotesSlideListWithText()>();

        r93 = newarray (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)[0];

        if $r3 == null goto label06;

        $r76 = virtualinvoke $r3.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] getSlideAtomsSets()>();

        $r77 = new java.util.ArrayList;

        specialinvoke $r77.<java.util.ArrayList: void <init>()>();

        $r78 = new java.util.ArrayList;

        specialinvoke $r78.<java.util.ArrayList: void <init>()>();

        i17 = lengthof $r76;

        i18 = 0;

     label02:
        if i18 >= i17 goto label05;

        r94 = $r76[i18];

        $r86 = specialinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Record getCoreRecordForSAS(org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)>(r94);

        $r87 = virtualinvoke r94.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        $i16 = virtualinvoke $r87.<org.apache.poi.hslf.record.SlidePersistAtom: int getSlideIdentifier()>();

        $z2 = $r86 instanceof org.apache.poi.hslf.record.Slide;

        if $z2 == 0 goto label03;

        $r90 = new org.apache.poi.hslf.model.TitleMaster;

        $r91 = (org.apache.poi.hslf.record.Slide) $r86;

        specialinvoke $r90.<org.apache.poi.hslf.model.TitleMaster: void <init>(org.apache.poi.hslf.record.Slide,int)>($r91, $i16);

        virtualinvoke $r90.<org.apache.poi.hslf.model.TitleMaster: void setSlideShow(org.apache.poi.hslf.usermodel.SlideShow)>(r0);

        virtualinvoke $r78.<java.util.ArrayList: boolean add(java.lang.Object)>($r90);

        goto label04;

     label03:
        $z3 = $r86 instanceof org.apache.poi.hslf.record.MainMaster;

        if $z3 == 0 goto label04;

        $r88 = new org.apache.poi.hslf.model.SlideMaster;

        $r89 = (org.apache.poi.hslf.record.MainMaster) $r86;

        specialinvoke $r88.<org.apache.poi.hslf.model.SlideMaster: void <init>(org.apache.poi.hslf.record.MainMaster,int)>($r89, $i16);

        virtualinvoke $r88.<org.apache.poi.hslf.model.SlideMaster: void setSlideShow(org.apache.poi.hslf.usermodel.SlideShow)>(r0);

        virtualinvoke $r77.<java.util.ArrayList: boolean add(java.lang.Object)>($r88);

     label04:
        i18 = i18 + 1;

        goto label02;

     label05:
        $i14 = virtualinvoke $r77.<java.util.ArrayList: int size()>();

        $r79 = newarray (org.apache.poi.hslf.model.SlideMaster)[$i14];

        $r80 = virtualinvoke $r77.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r79);

        $r81 = (org.apache.poi.hslf.model.SlideMaster[]) $r80;

        r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.SlideMaster[] _masters> = $r81;

        $i15 = virtualinvoke $r78.<java.util.ArrayList: int size()>();

        $r82 = newarray (org.apache.poi.hslf.model.TitleMaster)[$i15];

        $r83 = virtualinvoke $r78.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r82);

        $r84 = (org.apache.poi.hslf.model.TitleMaster[]) $r83;

        r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.TitleMaster[] _titleMasters> = $r84;

     label06:
        $r85 = newarray (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)[0];

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        if $r7 != null goto label07;

        r95 = newarray (org.apache.poi.hslf.record.Notes)[0];

        goto label14;

     label07:
        $r9 = virtualinvoke $r7.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] getSlideAtomsSets()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        i19 = 0;

     label08:
        $i0 = lengthof $r9;

        if i19 >= $i0 goto label13;

        $r48 = $r9[i19];

        $r49 = specialinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Record getCoreRecordForSAS(org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)>($r48);

        if $r49 == null goto label09;

        $z1 = $r49 instanceof org.apache.poi.hslf.record.Notes;

        if $z1 == 0 goto label11;

     label09:
        if $r49 != null goto label10;

        $r55 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.util.POILogger logger>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A Notes SlideAtomSet at ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" said its record was at refID ");

        $r59 = $r9[i19];

        $r60 = virtualinvoke $r59.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        $i12 = virtualinvoke $r60.<org.apache.poi.hslf.record.SlidePersistAtom: int getRefID()>();

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but that record didn\'t exist - record ignored.");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r55.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r63);

     label10:
        $r64 = (org.apache.poi.hslf.record.Notes) $r49;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r64);

        $r50 = $r9[i19];

        $r51 = virtualinvoke $r50.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        $i11 = virtualinvoke $r51.<org.apache.poi.hslf.record.SlidePersistAtom: int getSlideIdentifier()>();

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i19);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, $r53);

        goto label12;

     label11:
        $r66 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.util.POILogger logger>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A Notes SlideAtomSet at ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" said its record was at refID ");

        $r70 = $r9[i19];

        $r71 = virtualinvoke $r70.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        $i13 = virtualinvoke $r71.<org.apache.poi.hslf.record.SlidePersistAtom: int getRefID()>();

        $r72 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but that was actually a ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r66.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r75);

     label12:
        i19 = i19 + 1;

        goto label08;

     label13:
        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        r96 = newarray (org.apache.poi.hslf.record.Notes)[$i1];

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r96);

        r95 = (org.apache.poi.hslf.record.Notes[]) $r11;

     label14:
        r97 = newarray (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)[0];

        if $r5 != null goto label15;

        r98 = newarray (org.apache.poi.hslf.record.Slide)[0];

        goto label19;

     label15:
        $r12 = virtualinvoke $r5.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] getSlideAtomsSets()>();

        r97 = $r12;

        $i2 = lengthof $r12;

        r98 = newarray (org.apache.poi.hslf.record.Slide)[$i2];

        i20 = 0;

     label16:
        $i3 = lengthof $r12;

        if i20 >= $i3 goto label19;

        $r34 = $r12[i20];

        $r35 = specialinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Record getCoreRecordForSAS(org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)>($r34);

        $z0 = $r35 instanceof org.apache.poi.hslf.record.Slide;

        if $z0 == 0 goto label17;

        $r47 = (org.apache.poi.hslf.record.Slide) $r35;

        r98[i20] = $r47;

        goto label18;

     label17:
        $r37 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.util.POILogger logger>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A Slide SlideAtomSet at ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" said its record was at refID ");

        $r41 = $r12[i20];

        $r42 = virtualinvoke $r41.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        $i10 = virtualinvoke $r42.<org.apache.poi.hslf.record.SlidePersistAtom: int getRefID()>();

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but that was actually a ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r46);

     label18:
        i20 = i20 + 1;

        goto label16;

     label19:
        $i4 = lengthof r95;

        $r13 = newarray (org.apache.poi.hslf.model.Notes)[$i4];

        r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Notes[] _notes> = $r13;

        i21 = 0;

     label20:
        $r99 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Notes[] _notes>;

        $i22 = lengthof $r99;

        if i21 >= $i22 goto label22;

        $r28 = r95[i21];

        if $r28 == null goto label21;

        $r31 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Notes[] _notes>;

        $r29 = new org.apache.poi.hslf.model.Notes;

        $r30 = r95[i21];

        specialinvoke $r29.<org.apache.poi.hslf.model.Notes: void <init>(org.apache.poi.hslf.record.Notes)>($r30);

        $r31[i21] = $r29;

        $r32 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Notes[] _notes>;

        $r33 = $r32[i21];

        virtualinvoke $r33.<org.apache.poi.hslf.model.Notes: void setSlideShow(org.apache.poi.hslf.usermodel.SlideShow)>(r0);

     label21:
        i21 = i21 + 1;

        goto label20;

     label22:
        $i5 = lengthof r98;

        $r14 = newarray (org.apache.poi.hslf.model.Slide)[$i5];

        r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides> = $r14;

        i23 = 0;

     label23:
        $r15 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i6 = lengthof $r15;

        if i23 >= $i6 goto label26;

        r100 = r97[i23];

        $r16 = virtualinvoke r100.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        $i7 = virtualinvoke $r16.<org.apache.poi.hslf.record.SlidePersistAtom: int getSlideIdentifier()>();

        r101 = null;

        $r17 = r98[i23];

        $r18 = virtualinvoke $r17.<org.apache.poi.hslf.record.Slide: org.apache.poi.hslf.record.SlideAtom getSlideAtom()>();

        $i8 = virtualinvoke $r18.<org.apache.poi.hslf.record.SlideAtom: int getNotesID()>();

        if $i8 == 0 goto label25;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r20 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        r21 = (java.lang.Integer) $r20;

        if r21 == null goto label24;

        $r27 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Notes[] _notes>;

        $i9 = virtualinvoke r21.<java.lang.Integer: int intValue()>();

        r101 = $r27[$i9];

        goto label25;

     label24:
        $r23 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.util.POILogger logger>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notes not found for noteId=");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r26);

     label25:
        $r102 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $r103 = new org.apache.poi.hslf.model.Slide;

        $r104 = r98[i23];

        $i24 = i23 + 1;

        specialinvoke $r103.<org.apache.poi.hslf.model.Slide: void <init>(org.apache.poi.hslf.record.Slide,org.apache.poi.hslf.model.Notes,org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet,int,int)>($r104, r101, r100, $i7, $i24);

        $r102[i23] = $r103;

        $r105 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $r106 = $r105[i23];

        virtualinvoke $r106.<org.apache.poi.hslf.model.Slide: void setSlideShow(org.apache.poi.hslf.usermodel.SlideShow)>(r0);

        i23 = i23 + 1;

        goto label23;

     label26:
        return;
    }

    public void write(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        org.apache.poi.hslf.HSLFSlideShow $r2;
        org.apache.poi.hslf.usermodel.SlideShow r0;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow>;

        virtualinvoke $r2.<org.apache.poi.hslf.HSLFSlideShow: void write(java.io.OutputStream)>(r1);

        return;
    }

    public org.apache.poi.hslf.record.Record[] getMostRecentCoreRecords()
    {
        org.apache.poi.hslf.record.Record[] $r1;
        org.apache.poi.hslf.usermodel.SlideShow r0;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Record[] _mostRecentCoreRecords>;

        return $r1;
    }

    public org.apache.poi.hslf.model.Slide[] getSlides()
    {
        org.apache.poi.hslf.model.Slide[] $r1;
        org.apache.poi.hslf.usermodel.SlideShow r0;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        return $r1;
    }

    public org.apache.poi.hslf.model.Notes[] getNotes()
    {
        org.apache.poi.hslf.model.Notes[] $r1;
        org.apache.poi.hslf.usermodel.SlideShow r0;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Notes[] _notes>;

        return $r1;
    }

    public org.apache.poi.hslf.model.SlideMaster[] getSlidesMasters()
    {
        org.apache.poi.hslf.model.SlideMaster[] $r1;
        org.apache.poi.hslf.usermodel.SlideShow r0;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.SlideMaster[] _masters>;

        return $r1;
    }

    public org.apache.poi.hslf.model.TitleMaster[] getTitleMasters()
    {
        org.apache.poi.hslf.model.TitleMaster[] $r1;
        org.apache.poi.hslf.usermodel.SlideShow r0;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.TitleMaster[] _titleMasters>;

        return $r1;
    }

    public org.apache.poi.hslf.usermodel.PictureData[] getPictureData()
    {
        org.apache.poi.hslf.HSLFSlideShow $r1;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.usermodel.PictureData[] $r2;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.HSLFSlideShow: org.apache.poi.hslf.usermodel.PictureData[] getPictures()>();

        return $r2;
    }

    public org.apache.poi.hslf.usermodel.ObjectData[] getEmbeddedObjects()
    {
        org.apache.poi.hslf.HSLFSlideShow $r1;
        org.apache.poi.hslf.usermodel.ObjectData[] $r2;
        org.apache.poi.hslf.usermodel.SlideShow r0;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.HSLFSlideShow: org.apache.poi.hslf.usermodel.ObjectData[] getEmbeddedObjects()>();

        return $r2;
    }

    public org.apache.poi.hslf.usermodel.SoundData[] getSoundData()
    {
        org.apache.poi.hslf.usermodel.SoundData[] $r2;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r1;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r2 = staticinvoke <org.apache.poi.hslf.usermodel.SoundData: org.apache.poi.hslf.usermodel.SoundData[] find(org.apache.poi.hslf.record.Document)>($r1);

        return $r2;
    }

    public java.awt.Dimension getPageSize()
    {
        long $l0, $l4;
        org.apache.poi.hslf.record.DocumentAtom $r2;
        java.awt.Dimension $r3;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r1;
        int $i1, $i2, i3, $i5, $i6, i7;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.DocumentAtom getDocumentAtom()>();

        $l0 = virtualinvoke $r2.<org.apache.poi.hslf.record.DocumentAtom: long getSlideSizeX()>();

        $i1 = (int) $l0;

        $i2 = $i1 * 72;

        i3 = $i2 / 576;

        $l4 = virtualinvoke $r2.<org.apache.poi.hslf.record.DocumentAtom: long getSlideSizeY()>();

        $i5 = (int) $l4;

        $i6 = $i5 * 72;

        i7 = $i6 / 576;

        $r3 = new java.awt.Dimension;

        specialinvoke $r3.<java.awt.Dimension: void <init>(int,int)>(i3, i7);

        return $r3;
    }

    public void setPageSize(java.awt.Dimension)
    {
        long $l3, $l7;
        org.apache.poi.hslf.record.DocumentAtom $r2;
        java.awt.Dimension r3;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r1;
        int $i0, $i1, $i2, $i4, $i5, $i6;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r3 := @parameter0: java.awt.Dimension;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.DocumentAtom getDocumentAtom()>();

        $i0 = r3.<java.awt.Dimension: int width>;

        $i1 = $i0 * 576;

        $i2 = $i1 / 72;

        $l3 = (long) $i2;

        virtualinvoke $r2.<org.apache.poi.hslf.record.DocumentAtom: void setSlideSizeX(long)>($l3);

        $i4 = r3.<java.awt.Dimension: int height>;

        $i5 = $i4 * 576;

        $i6 = $i5 / 72;

        $l7 = (long) $i6;

        virtualinvoke $r2.<org.apache.poi.hslf.record.DocumentAtom: void setSlideSizeY(long)>($l7);

        return;
    }

    protected org.apache.poi.hslf.record.FontCollection getFontCollection()
    {
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.FontCollection $r1;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.FontCollection _fonts>;

        return $r1;
    }

    public org.apache.poi.hslf.record.Document getDocumentRecord()
    {
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r1;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        return $r1;
    }

    public void reorderSlide(int, int)
    {
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] $r13;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet r14, $r15, $r19, $r21;
        org.apache.poi.hslf.record.Record[] $r17, $r22, r26;
        org.apache.poi.hslf.usermodel.SlideShow r1;
        org.apache.poi.hslf.record.Document $r11;
        org.apache.poi.hslf.record.SlideListWithText $r12;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        org.apache.poi.hslf.model.Slide $r24;
        org.apache.poi.hslf.record.Record $r25;
        java.lang.Object[] $r18;
        java.util.ArrayList $r16;
        org.apache.poi.hslf.record.SlidePersistAtom $r20;
        org.apache.poi.hslf.model.Slide[] $r2, $r6, $r10, $r23;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        java.lang.String $r9;
        java.lang.IllegalArgumentException $r0, $r3;

        r1 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 1 goto label1;

        if i1 >= 1 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Old and new slide numbers must be greater than 0");

        throw $r0;

     label2:
        $r2 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i2 = lengthof $r2;

        if i0 > $i2 goto label3;

        $r10 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i4 = lengthof $r10;

        if i1 <= $i4 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Old and new slide numbers must not exceed the number of slides (");

        $r6 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i3 = lengthof $r6;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label4:
        $r11 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r12 = virtualinvoke $r11.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.SlideListWithText getSlideSlideListWithText()>();

        $r13 = virtualinvoke $r12.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] getSlideAtomsSets()>();

        $i5 = i0 - 1;

        r14 = $r13[$i5];

        $i7 = i0 - 1;

        $i6 = i1 - 1;

        $r15 = $r13[$i6];

        $r13[$i7] = $r15;

        $i8 = i1 - 1;

        $r13[$i8] = r14;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        i13 = 0;

     label5:
        $i9 = lengthof $r13;

        if i13 >= $i9 goto label8;

        $r19 = $r13[i13];

        $r20 = virtualinvoke $r19.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        $r21 = $r13[i13];

        $r22 = virtualinvoke $r21.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.Record[] getSlideRecords()>();

        i14 = 0;

     label6:
        $i11 = lengthof $r22;

        if i14 >= $i11 goto label7;

        $r25 = $r22[i14];

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        i14 = i14 + 1;

        goto label6;

     label7:
        $r23 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $r24 = $r23[i13];

        $i12 = i13 + 1;

        virtualinvoke $r24.<org.apache.poi.hslf.model.Slide: void setSlideNumber(int)>($i12);

        i13 = i13 + 1;

        goto label5;

     label8:
        $i10 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        $r17 = newarray (org.apache.poi.hslf.record.Record)[$i10];

        $r18 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        r26 = (org.apache.poi.hslf.record.Record[]) $r18;

        virtualinvoke $r12.<org.apache.poi.hslf.record.SlideListWithText: void setChildRecord(org.apache.poi.hslf.record.Record[])>(r26);

        return;
    }

    public org.apache.poi.hslf.model.Slide removeSlide(int)
    {
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] $r12, $r19, $r21, $r34, $r35, $r37;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet r42, $r55, $r58, $r60;
        org.apache.poi.hslf.record.Record[] $r22, $r24, $r38, $r40, $r45, $r46, $r61;
        org.apache.poi.hslf.record.Document $r10, $r30, $r41, $r48;
        org.apache.poi.hslf.record.SlideListWithText $r11, $r31;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.Object[] $r20, $r23, $r26, $r36, $r39, $r66;
        java.util.ArrayList $r13, $r14, $r15, $r16, $r32, $r33;
        org.apache.poi.hslf.record.SlidePersistAtom $r43, $r44, $r59;
        org.apache.poi.hslf.model.Slide[] $r1, $r18, $r25, $r27, $r49, $r50, $r53, $r56;
        java.lang.String $r9;
        org.apache.poi.hslf.record.Slide $r28;
        org.apache.poi.hslf.model.Notes[] $r17, $r65, $r67;
        org.apache.poi.hslf.record.SlideAtom $r29;
        java.util.List $r47, $r62;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.model.Notes $r52, r64;
        org.apache.poi.hslf.model.Slide $r51, $r54, $r57, r63;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, $i20;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        i2 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i0 = lengthof $r1;

        i1 = $i0 - 1;

        if i2 < 0 goto label01;

        if i2 <= i1 goto label02;

     label01:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Slide index (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of range (0..");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label02:
        $r10 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r11 = virtualinvoke $r10.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.SlideListWithText getSlideSlideListWithText()>();

        $r12 = virtualinvoke $r11.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] getSlideAtomsSets()>();

        r63 = null;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        $r17 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Notes[] getNotes()>();

        i15 = lengthof $r17;

        i16 = 0;

     label03:
        if i16 >= i15 goto label04;

        r64 = $r17[i16];

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r64);

        i16 = i16 + 1;

        goto label03;

     label04:
        i17 = 0;

        i18 = 0;

     label05:
        $r18 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i3 = lengthof $r18;

        if i17 >= $i3 goto label08;

        if i17 == i2 goto label06;

        $r53 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $r54 = $r53[i17];

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r54);

        $r55 = $r12[i17];

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r55);

        $r56 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $r57 = $r56[i17];

        $i14 = i18;

        i18 = i18 + 1;

        virtualinvoke $r57.<org.apache.poi.hslf.model.Slide: void setSlideNumber(int)>($i14);

        $r58 = $r12[i17];

        $r59 = virtualinvoke $r58.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r59);

        $r60 = $r12[i17];

        $r61 = virtualinvoke $r60.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.Record[] getSlideRecords()>();

        $r62 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r61);

        virtualinvoke $r13.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r62);

        goto label07;

     label06:
        $r49 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        r63 = $r49[i17];

        $r50 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $r51 = $r50[i17];

        $r52 = virtualinvoke $r51.<org.apache.poi.hslf.model.Slide: org.apache.poi.hslf.model.Notes getNotesSheet()>();

        virtualinvoke $r16.<java.util.ArrayList: boolean remove(java.lang.Object)>($r52);

     label07:
        i17 = i17 + 1;

        goto label05;

     label08:
        $i4 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i4 != 0 goto label09;

        $r48 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        virtualinvoke $r48.<org.apache.poi.hslf.record.Document: void removeSlideListWithText(org.apache.poi.hslf.record.SlideListWithText)>($r11);

        goto label10;

     label09:
        $i5 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        $r19 = newarray (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)[$i5];

        $r20 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r19);

        $r21 = (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[]) $r20;

        virtualinvoke $r11.<org.apache.poi.hslf.record.SlideListWithText: void setSlideAtomsSets(org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[])>($r21);

        $i6 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        $r22 = newarray (org.apache.poi.hslf.record.Record)[$i6];

        $r23 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r22);

        $r24 = (org.apache.poi.hslf.record.Record[]) $r23;

        virtualinvoke $r11.<org.apache.poi.hslf.record.SlideListWithText: void setChildRecord(org.apache.poi.hslf.record.Record[])>($r24);

     label10:
        $i7 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        $r25 = newarray (org.apache.poi.hslf.model.Slide)[$i7];

        $r26 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r25);

        $r27 = (org.apache.poi.hslf.model.Slide[]) $r26;

        r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides> = $r27;

        if r63 == null goto label15;

        $r28 = virtualinvoke r63.<org.apache.poi.hslf.model.Slide: org.apache.poi.hslf.record.Slide getSlideRecord()>();

        $r29 = virtualinvoke $r28.<org.apache.poi.hslf.record.Slide: org.apache.poi.hslf.record.SlideAtom getSlideAtom()>();

        $i8 = virtualinvoke $r29.<org.apache.poi.hslf.record.SlideAtom: int getNotesID()>();

        if $i8 == 0 goto label15;

        $r30 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r31 = virtualinvoke $r30.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.SlideListWithText getNotesSlideListWithText()>();

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        $r34 = virtualinvoke $r31.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] getSlideAtomsSets()>();

        i9 = lengthof $r34;

        i19 = 0;

     label11:
        if i19 >= i9 goto label13;

        r42 = $r34[i19];

        $r43 = virtualinvoke r42.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        $i13 = virtualinvoke $r43.<org.apache.poi.hslf.record.SlidePersistAtom: int getSlideIdentifier()>();

        if $i13 == $i8 goto label12;

        virtualinvoke $r33.<java.util.ArrayList: boolean add(java.lang.Object)>(r42);

        $r44 = virtualinvoke r42.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        virtualinvoke $r32.<java.util.ArrayList: boolean add(java.lang.Object)>($r44);

        $r45 = virtualinvoke r42.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.Record[] getSlideRecords()>();

        if $r45 == null goto label12;

        $r46 = virtualinvoke r42.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.Record[] getSlideRecords()>();

        $r47 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r46);

        virtualinvoke $r32.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r47);

     label12:
        i19 = i19 + 1;

        goto label11;

     label13:
        $i10 = virtualinvoke $r33.<java.util.ArrayList: int size()>();

        if $i10 != 0 goto label14;

        $r41 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        virtualinvoke $r41.<org.apache.poi.hslf.record.Document: void removeSlideListWithText(org.apache.poi.hslf.record.SlideListWithText)>($r31);

        goto label15;

     label14:
        $i11 = virtualinvoke $r33.<java.util.ArrayList: int size()>();

        $r35 = newarray (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)[$i11];

        $r36 = virtualinvoke $r33.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r35);

        $r37 = (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[]) $r36;

        virtualinvoke $r31.<org.apache.poi.hslf.record.SlideListWithText: void setSlideAtomsSets(org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[])>($r37);

        $i12 = virtualinvoke $r32.<java.util.ArrayList: int size()>();

        $r38 = newarray (org.apache.poi.hslf.record.Record)[$i12];

        $r39 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r38);

        $r40 = (org.apache.poi.hslf.record.Record[]) $r39;

        virtualinvoke $r31.<org.apache.poi.hslf.record.SlideListWithText: void setChildRecord(org.apache.poi.hslf.record.Record[])>($r40);

     label15:
        $i20 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        $r65 = newarray (org.apache.poi.hslf.model.Notes)[$i20];

        $r66 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r65);

        $r67 = (org.apache.poi.hslf.model.Notes[]) $r66;

        r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Notes[] _notes> = $r67;

        return r63;
    }

    public org.apache.poi.hslf.model.Slide createSlide()
    {
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] $r3;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet r30;
        org.apache.poi.hslf.model.SlideMaster[] $r22;
        org.apache.poi.hslf.record.Slide $r21;
        org.apache.poi.util.POILogger $r12;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r1, $r27;
        org.apache.poi.hslf.record.SlideListWithText $r2, $r26, r28;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r17, $r18, $r19;
        org.apache.poi.hslf.model.Slide $r5;
        org.apache.poi.hslf.model.SlideMaster $r23;
        org.apache.poi.hslf.record.SlidePersistAtom $r4, $r25, r29;
        org.apache.poi.hslf.model.Slide[] $r6, $r7, $r8, $r9, $r10, $r14, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18;
        java.lang.String $r20;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.SlideListWithText getSlideSlideListWithText()>();

        r28 = $r2;

        if $r2 != null goto label1;

        $r26 = new org.apache.poi.hslf.record.SlideListWithText;

        specialinvoke $r26.<org.apache.poi.hslf.record.SlideListWithText: void <init>()>();

        r28 = $r26;

        virtualinvoke $r26.<org.apache.poi.hslf.record.SlideListWithText: void setInstance(int)>(0);

        $r27 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        virtualinvoke $r27.<org.apache.poi.hslf.record.Document: void addSlideListWithText(org.apache.poi.hslf.record.SlideListWithText)>($r26);

     label1:
        r29 = null;

        $r3 = virtualinvoke r28.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] getSlideAtomsSets()>();

        $i16 = lengthof $r3;

        i17 = 0;

     label2:
        if i17 >= $i16 goto label6;

        r30 = $r3[i17];

        $r25 = virtualinvoke r30.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: org.apache.poi.hslf.record.SlidePersistAtom getSlidePersistAtom()>();

        $i13 = virtualinvoke $r25.<org.apache.poi.hslf.record.SlidePersistAtom: int getSlideIdentifier()>();

        if $i13 >= 0 goto label3;

        goto label5;

     label3:
        if r29 != null goto label4;

        r29 = $r25;

     label4:
        $i14 = virtualinvoke r29.<org.apache.poi.hslf.record.SlidePersistAtom: int getSlideIdentifier()>();

        $i15 = virtualinvoke $r25.<org.apache.poi.hslf.record.SlidePersistAtom: int getSlideIdentifier()>();

        if $i14 >= $i15 goto label5;

        r29 = $r25;

     label5:
        i17 = i17 + 1;

        goto label2;

     label6:
        $r4 = new org.apache.poi.hslf.record.SlidePersistAtom;

        specialinvoke $r4.<org.apache.poi.hslf.record.SlidePersistAtom: void <init>()>();

        if r29 != null goto label7;

        $i18 = 256;

        goto label8;

     label7:
        $i0 = virtualinvoke r29.<org.apache.poi.hslf.record.SlidePersistAtom: int getSlideIdentifier()>();

        $i18 = $i0 + 1;

     label8:
        virtualinvoke $r4.<org.apache.poi.hslf.record.SlidePersistAtom: void setSlideIdentifier(int)>($i18);

        virtualinvoke r28.<org.apache.poi.hslf.record.SlideListWithText: void addSlidePersistAtom(org.apache.poi.hslf.record.SlidePersistAtom)>($r4);

        $r5 = new org.apache.poi.hslf.model.Slide;

        $i1 = virtualinvoke $r4.<org.apache.poi.hslf.record.SlidePersistAtom: int getSlideIdentifier()>();

        $i2 = virtualinvoke $r4.<org.apache.poi.hslf.record.SlidePersistAtom: int getRefID()>();

        $r6 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i3 = lengthof $r6;

        $i4 = $i3 + 1;

        specialinvoke $r5.<org.apache.poi.hslf.model.Slide: void <init>(int,int,int)>($i1, $i2, $i4);

        virtualinvoke $r5.<org.apache.poi.hslf.model.Slide: void setSlideShow(org.apache.poi.hslf.usermodel.SlideShow)>(r0);

        virtualinvoke $r5.<org.apache.poi.hslf.model.Slide: void onCreate()>();

        $r7 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i5 = lengthof $r7;

        $i6 = $i5 + 1;

        $r24 = newarray (org.apache.poi.hslf.model.Slide)[$i6];

        $r9 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $r8 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i7 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r24, 0, $i7);

        $r10 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i8 = lengthof $r10;

        $r24[$i8] = $r5;

        r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides> = $r24;

        $r12 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.util.POILogger logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added slide ");

        $r14 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Slide[] _slides>;

        $i9 = lengthof $r14;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ref ");

        $i10 = virtualinvoke $r4.<org.apache.poi.hslf.record.SlidePersistAtom: int getRefID()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and identifier ");

        $i11 = virtualinvoke $r4.<org.apache.poi.hslf.record.SlidePersistAtom: int getSlideIdentifier()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(3, $r20);

        $r21 = virtualinvoke $r5.<org.apache.poi.hslf.model.Slide: org.apache.poi.hslf.record.Slide getSlideRecord()>();

        $i12 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: int addPersistentObject(org.apache.poi.hslf.record.PositionDependentRecord)>($r21);

        virtualinvoke $r4.<org.apache.poi.hslf.record.SlidePersistAtom: void setRefID(int)>($i12);

        virtualinvoke $r21.<org.apache.poi.hslf.record.Slide: void setSheetId(int)>($i12);

        $r22 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.SlideMaster[] _masters>;

        $r23 = $r22[0];

        virtualinvoke $r5.<org.apache.poi.hslf.model.Slide: void setMasterSheet(org.apache.poi.hslf.model.MasterSheet)>($r23);

        return $r5;
    }

    public int addPicture(byte[], int) throws java.io.IOException
    {
        byte[] r0, $r1, $r11, $r13, $r17;
        byte $b7, $b8;
        boolean $z0, $z1;
        org.apache.poi.ddf.EscherBSERecord r16, $r20;
        org.apache.poi.ddf.EscherContainerRecord $r5, r15, $r19;
        org.apache.poi.hslf.HSLFSlideShow $r9;
        org.apache.poi.hslf.usermodel.PictureData $r8;
        java.util.List $r18;
        org.apache.poi.hslf.usermodel.SlideShow r2;
        org.apache.poi.hslf.record.Document $r3;
        org.apache.poi.ddf.EscherRecord $r6;
        short $s4, $s14;
        int i0, $i1, $i2, $i3, $i5, $i6, $i9, i10, $i11, $i12, $i13, $i16, $i18;
        java.util.Iterator $r7;
        org.apache.poi.hslf.record.PPDrawingGroup $r4;
        java.lang.Object $r12;

        r2 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r1 = staticinvoke <org.apache.poi.hslf.usermodel.PictureData: byte[] getChecksum(byte[])>(r0);

        $r3 = r2.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.PPDrawingGroup getPPDrawingGroup()>();

        $r5 = virtualinvoke $r4.<org.apache.poi.hslf.record.PPDrawingGroup: org.apache.poi.ddf.EscherContainerRecord getDggContainer()>();

        $i16 = (int) -4095;

        $r6 = staticinvoke <org.apache.poi.hslf.model.Shape: org.apache.poi.ddf.EscherRecord getEscherChild(org.apache.poi.ddf.EscherContainerRecord,int)>($r5, $i16);

        r15 = (org.apache.poi.ddf.EscherContainerRecord) $r6;

        if r15 != null goto label1;

        $r19 = new org.apache.poi.ddf.EscherContainerRecord;

        specialinvoke $r19.<org.apache.poi.ddf.EscherContainerRecord: void <init>()>();

        r15 = $r19;

        virtualinvoke $r19.<org.apache.poi.ddf.EscherContainerRecord: void setRecordId(short)>(-4095);

        $i18 = (int) -4085;

        virtualinvoke $r5.<org.apache.poi.ddf.EscherContainerRecord: void addChildBefore(org.apache.poi.ddf.EscherRecord,int)>($r19, $i18);

        goto label4;

     label1:
        $r7 = virtualinvoke r15.<org.apache.poi.ddf.EscherContainerRecord: java.util.Iterator getChildIterator()>();

        i10 = 0;

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.poi.ddf.EscherBSERecord) $r12;

        $r13 = virtualinvoke r16.<org.apache.poi.ddf.EscherBSERecord: byte[] getUid()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r13, $r1);

        if $z1 == 0 goto label3;

        $i9 = i10 + 1;

        return $i9;

     label3:
        i10 = i10 + 1;

        goto label2;

     label4:
        $r8 = staticinvoke <org.apache.poi.hslf.usermodel.PictureData: org.apache.poi.hslf.usermodel.PictureData create(int)>(i0);

        virtualinvoke $r8.<org.apache.poi.hslf.usermodel.PictureData: void setData(byte[])>(r0);

        $r9 = r2.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow>;

        $i1 = virtualinvoke $r9.<org.apache.poi.hslf.HSLFSlideShow: int addPicture(org.apache.poi.hslf.usermodel.PictureData)>($r8);

        $r20 = new org.apache.poi.ddf.EscherBSERecord;

        specialinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void <init>()>();

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setRecordId(short)>(-4089);

        $i2 = i0 << 4;

        $i3 = 2 | $i2;

        $s4 = (short) $i3;

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setOptions(short)>($s4);

        $r11 = virtualinvoke $r8.<org.apache.poi.hslf.usermodel.PictureData: byte[] getRawData()>();

        $i5 = lengthof $r11;

        $i6 = $i5 + 8;

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setSize(int)>($i6);

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setUid(byte[])>($r1);

        $b7 = (byte) i0;

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setBlipTypeMacOS(byte)>($b7);

        $b8 = (byte) i0;

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setBlipTypeWin32(byte)>($b8);

        if i0 != 2 goto label5;

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setBlipTypeMacOS(byte)>(4);

        goto label7;

     label5:
        if i0 != 3 goto label6;

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setBlipTypeMacOS(byte)>(4);

        goto label7;

     label6:
        if i0 != 4 goto label7;

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setBlipTypeWin32(byte)>(3);

     label7:
        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setRef(int)>(0);

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setOffset(int)>($i1);

        $r17 = newarray (byte)[0];

        virtualinvoke $r20.<org.apache.poi.ddf.EscherBSERecord: void setRemainingData(byte[])>($r17);

        virtualinvoke r15.<org.apache.poi.ddf.EscherContainerRecord: void addChildRecord(org.apache.poi.ddf.EscherRecord)>($r20);

        $r18 = virtualinvoke r15.<org.apache.poi.ddf.EscherContainerRecord: java.util.List getChildRecords()>();

        $i11 = interfaceinvoke $r18.<java.util.List: int size()>();

        $i12 = $i11 << 4;

        $i13 = $i12 | 15;

        $s14 = (short) $i13;

        virtualinvoke r15.<org.apache.poi.ddf.EscherContainerRecord: void setOptions(short)>($s14);

        return $i11;
    }

    public int addPicture(java.io.File, int) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        byte[] r1;
        long $l0;
        java.io.FileInputStream $r2, r5;
        java.io.File r0;
        org.apache.poi.hslf.usermodel.SlideShow r3;
        int i1, i2, $i3;

        r3 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r0 := @parameter0: java.io.File;

        i2 := @parameter1: int;

        $l0 = virtualinvoke r0.<java.io.File: long length()>();

        i1 = (int) $l0;

        r1 = newarray (byte)[i1];

        r5 = null;

     label1:
        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r5 = $r2;

        virtualinvoke $r2.<java.io.FileInputStream: int read(byte[])>(r1);

     label2:
        if $r2 == null goto label6;

        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

        goto label6;

     label3:
        $r4 := @caughtexception;

     label4:
        if r5 == null goto label5;

        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label5:
        throw $r4;

     label6:
        $i3 = virtualinvoke r3.<org.apache.poi.hslf.usermodel.SlideShow: int addPicture(byte[],int)>(r1, i2);

        return $i3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int addFont(org.apache.poi.hslf.model.PPFont)
    {
        org.apache.poi.hslf.model.PPFont r4;
        org.apache.poi.hslf.record.FontCollection $r3;
        org.apache.poi.hslf.record.Environment $r2;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        java.lang.String $r5, $r6;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r4 := @parameter0: org.apache.poi.hslf.model.PPFont;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document getDocumentRecord()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.Environment getEnvironment()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.record.Environment: org.apache.poi.hslf.record.FontCollection getFontCollection()>();

        $r5 = virtualinvoke r4.<org.apache.poi.hslf.model.PPFont: java.lang.String getFontName()>();

        $i0 = virtualinvoke $r3.<org.apache.poi.hslf.record.FontCollection: int getFontIndex(java.lang.String)>($r5);

        i5 = $i0;

        $i7 = (int) -1;

        if $i0 != $i7 goto label1;

        $r6 = virtualinvoke r4.<org.apache.poi.hslf.model.PPFont: java.lang.String getFontName()>();

        $i1 = virtualinvoke r4.<org.apache.poi.hslf.model.PPFont: int getCharSet()>();

        $i2 = virtualinvoke r4.<org.apache.poi.hslf.model.PPFont: int getFontFlags()>();

        $i3 = virtualinvoke r4.<org.apache.poi.hslf.model.PPFont: int getFontType()>();

        $i4 = virtualinvoke r4.<org.apache.poi.hslf.model.PPFont: int getPitchAndFamily()>();

        i5 = virtualinvoke $r3.<org.apache.poi.hslf.record.FontCollection: int addFont(java.lang.String,int,int,int,int)>($r6, $i1, $i2, $i3, $i4);

     label1:
        return i5;
    }

    public org.apache.poi.hslf.model.PPFont getFont(int)
    {
        org.apache.poi.hslf.record.FontEntityAtom r6;
        org.apache.poi.hslf.record.Record r5;
        org.apache.poi.hslf.record.Record[] $r4;
        org.apache.poi.hslf.model.PPFont $r7;
        org.apache.poi.hslf.record.FontCollection $r3;
        org.apache.poi.hslf.record.Environment $r2;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r1;
        int i0, $i1, i2, i3;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        i2 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document getDocumentRecord()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.Environment getEnvironment()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.record.Environment: org.apache.poi.hslf.record.FontCollection getFontCollection()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.hslf.record.FontCollection: org.apache.poi.hslf.record.Record[] getChildRecords()>();

        i0 = lengthof $r4;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r5 = $r4[i3];

        $z0 = r5 instanceof org.apache.poi.hslf.record.FontEntityAtom;

        if $z0 == 0 goto label2;

        r6 = (org.apache.poi.hslf.record.FontEntityAtom) r5;

        $i1 = virtualinvoke r6.<org.apache.poi.hslf.record.FontEntityAtom: int getFontIndex()>();

        if $i1 != i2 goto label2;

        $r7 = new org.apache.poi.hslf.model.PPFont;

        specialinvoke $r7.<org.apache.poi.hslf.model.PPFont: void <init>(org.apache.poi.hslf.record.FontEntityAtom)>(r6);

        return $r7;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    public int getNumberOfFonts()
    {
        org.apache.poi.hslf.record.Environment $r2;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r1;
        int $i0;
        org.apache.poi.hslf.record.FontCollection $r3;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document getDocumentRecord()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.Environment getEnvironment()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.record.Environment: org.apache.poi.hslf.record.FontCollection getFontCollection()>();

        $i0 = virtualinvoke $r3.<org.apache.poi.hslf.record.FontCollection: int getNumberOfFonts()>();

        return $i0;
    }

    public org.apache.poi.hslf.model.HeadersFooters getSlideHeadersFooters()
    {
        org.apache.poi.hslf.record.Record r9;
        org.apache.poi.hslf.model.HeadersFooters $r7;
        org.apache.poi.hslf.model.SlideMaster $r2;
        org.apache.poi.hslf.record.HeadersFootersContainer $r8, $r10, r11;
        int i0, $i1, i2;
        java.lang.String $r3, $r4;
        org.apache.poi.hslf.model.SlideMaster[] $r1;
        boolean $z0, $z1, z2;
        org.apache.poi.hslf.record.Record[] $r6;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r5;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.SlideMaster[] getSlidesMasters()>();

        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.model.SlideMaster: java.lang.String getProgrammableTag()>();

        $r4 = "___PPT12";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        r11 = null;

        $r5 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.Record[] getChildRecords()>();

        i0 = lengthof $r6;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r9 = $r6[i2];

        $z1 = r9 instanceof org.apache.poi.hslf.record.HeadersFootersContainer;

        if $z1 == 0 goto label2;

        $r10 = (org.apache.poi.hslf.record.HeadersFootersContainer) r9;

        $i1 = virtualinvoke $r10.<org.apache.poi.hslf.record.HeadersFootersContainer: int getOptions()>();

        if $i1 != 63 goto label2;

        r11 = (org.apache.poi.hslf.record.HeadersFootersContainer) r9;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        z2 = 0;

        if r11 != null goto label4;

        $r8 = new org.apache.poi.hslf.record.HeadersFootersContainer;

        specialinvoke $r8.<org.apache.poi.hslf.record.HeadersFootersContainer: void <init>(short)>(63);

        r11 = $r8;

        z2 = 1;

     label4:
        $r7 = new org.apache.poi.hslf.model.HeadersFooters;

        specialinvoke $r7.<org.apache.poi.hslf.model.HeadersFooters: void <init>(org.apache.poi.hslf.record.HeadersFootersContainer,org.apache.poi.hslf.usermodel.SlideShow,boolean,boolean)>(r11, r0, z2, $z0);

        return $r7;
    }

    public org.apache.poi.hslf.model.HeadersFooters getNotesHeadersFooters()
    {
        org.apache.poi.hslf.record.Record r13;
        org.apache.poi.hslf.model.HeadersFooters $r7, $r9;
        org.apache.poi.hslf.model.SlideMaster $r2;
        org.apache.poi.hslf.record.HeadersFootersContainer $r12, $r14, r15;
        int i0, $i1, $i2, i3;
        java.lang.String $r3, $r4;
        org.apache.poi.hslf.model.SlideMaster[] $r1;
        boolean $z0, $z1, z2, z3, z4;
        org.apache.poi.hslf.model.Notes[] $r8, $r10;
        org.apache.poi.hslf.record.Record[] $r6;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r5;
        org.apache.poi.hslf.model.Notes $r11;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.SlideMaster[] getSlidesMasters()>();

        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.model.SlideMaster: java.lang.String getProgrammableTag()>();

        $r4 = "___PPT12";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        r15 = null;

        $r5 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.Record[] getChildRecords()>();

        i0 = lengthof $r6;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r13 = $r6[i3];

        $z1 = r13 instanceof org.apache.poi.hslf.record.HeadersFootersContainer;

        if $z1 == 0 goto label2;

        $r14 = (org.apache.poi.hslf.record.HeadersFootersContainer) r13;

        $i2 = virtualinvoke $r14.<org.apache.poi.hslf.record.HeadersFootersContainer: int getOptions()>();

        if $i2 != 79 goto label2;

        r15 = (org.apache.poi.hslf.record.HeadersFootersContainer) r13;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        z2 = 0;

        z4 = 0;

        z3 = 0;

        if r15 != null goto label4;

        $r12 = new org.apache.poi.hslf.record.HeadersFootersContainer;

        specialinvoke $r12.<org.apache.poi.hslf.record.HeadersFootersContainer: void <init>(short)>(79);

        r15 = $r12;

        z2 = 1;

        z4 = 1;

        z3 = 1;

     label4:
        if $z0 == 0 goto label5;

        $r8 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Notes[] _notes>;

        $i1 = lengthof $r8;

        if $i1 <= 0 goto label5;

        $r9 = new org.apache.poi.hslf.model.HeadersFooters;

        $r10 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.model.Notes[] _notes>;

        $r11 = $r10[0];

        specialinvoke $r9.<org.apache.poi.hslf.model.HeadersFooters: void <init>(org.apache.poi.hslf.record.HeadersFootersContainer,org.apache.poi.hslf.model.Sheet,boolean,boolean)>(r15, $r11, z4, $z0);

        return $r9;

     label5:
        $r7 = new org.apache.poi.hslf.model.HeadersFooters;

        specialinvoke $r7.<org.apache.poi.hslf.model.HeadersFooters: void <init>(org.apache.poi.hslf.record.HeadersFootersContainer,org.apache.poi.hslf.usermodel.SlideShow,boolean,boolean)>(r15, r0, z3, $z0);

        return $r7;
    }

    public int addMovie(java.lang.String, int)
    {
        org.apache.poi.hslf.record.ExAviMovie $r0;
        org.apache.poi.hslf.record.ExVideoContainer $r1;
        org.apache.poi.hslf.record.ExMediaAtom $r2, $r6;
        org.apache.poi.hslf.record.ExMCIMovie $r7, r13;
        int i0, $i1;
        java.lang.String r4, $r12;
        org.apache.poi.hslf.record.CString $r3;
        java.lang.IllegalArgumentException $r8;
        org.apache.poi.hslf.usermodel.SlideShow r5;
        java.lang.StringBuilder $r9, $r10, $r11;

        r5 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r7 = new org.apache.poi.hslf.record.ExMCIMovie;

        specialinvoke $r7.<org.apache.poi.hslf.record.ExMCIMovie: void <init>()>();

        r13 = $r7;

        goto label4;

     label2:
        $r0 = new org.apache.poi.hslf.record.ExAviMovie;

        specialinvoke $r0.<org.apache.poi.hslf.record.ExAviMovie: void <init>()>();

        r13 = $r0;

        goto label4;

     label3:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported Movie: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label4:
        $r1 = virtualinvoke r13.<org.apache.poi.hslf.record.ExMCIMovie: org.apache.poi.hslf.record.ExVideoContainer getExVideo()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.record.ExVideoContainer: org.apache.poi.hslf.record.ExMediaAtom getExMediaAtom()>();

        virtualinvoke $r2.<org.apache.poi.hslf.record.ExMediaAtom: void setMask(int)>(15204352);

        $r3 = virtualinvoke $r1.<org.apache.poi.hslf.record.ExVideoContainer: org.apache.poi.hslf.record.CString getPathAtom()>();

        virtualinvoke $r3.<org.apache.poi.hslf.record.CString: void setText(java.lang.String)>(r4);

        $i1 = virtualinvoke r5.<org.apache.poi.hslf.usermodel.SlideShow: int addToObjListAtom(org.apache.poi.hslf.record.RecordContainer)>(r13);

        $r6 = virtualinvoke $r1.<org.apache.poi.hslf.record.ExVideoContainer: org.apache.poi.hslf.record.ExMediaAtom getExMediaAtom()>();

        virtualinvoke $r6.<org.apache.poi.hslf.record.ExMediaAtom: void setObjectId(int)>($i1);

        return $i1;
    }

    public int addControl(java.lang.String, java.lang.String)
    {
        org.apache.poi.hslf.record.ExControl $r0;
        org.apache.poi.hslf.usermodel.SlideShow r4;
        int $i0;
        org.apache.poi.hslf.record.ExOleObjAtom $r3;
        java.lang.String r1, r2;

        r4 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r0 = new org.apache.poi.hslf.record.ExControl;

        specialinvoke $r0.<org.apache.poi.hslf.record.ExControl: void <init>()>();

        virtualinvoke $r0.<org.apache.poi.hslf.record.ExControl: void setProgId(java.lang.String)>(r1);

        virtualinvoke $r0.<org.apache.poi.hslf.record.ExControl: void setMenuName(java.lang.String)>(r2);

        virtualinvoke $r0.<org.apache.poi.hslf.record.ExControl: void setClipboardName(java.lang.String)>(r2);

        $r3 = virtualinvoke $r0.<org.apache.poi.hslf.record.ExControl: org.apache.poi.hslf.record.ExOleObjAtom getExOleObjAtom()>();

        virtualinvoke $r3.<org.apache.poi.hslf.record.ExOleObjAtom: void setDrawAspect(int)>(1);

        virtualinvoke $r3.<org.apache.poi.hslf.record.ExOleObjAtom: void setType(int)>(2);

        virtualinvoke $r3.<org.apache.poi.hslf.record.ExOleObjAtom: void setSubType(int)>(0);

        $i0 = virtualinvoke r4.<org.apache.poi.hslf.usermodel.SlideShow: int addToObjListAtom(org.apache.poi.hslf.record.RecordContainer)>($r0);

        virtualinvoke $r3.<org.apache.poi.hslf.record.ExOleObjAtom: void setObjID(int)>($i0);

        return $i0;
    }

    public int addHyperlink(org.apache.poi.hslf.model.Hyperlink)
    {
        org.apache.poi.hslf.record.ExHyperlinkAtom $r1;
        org.apache.poi.hslf.record.ExHyperlink $r0;
        org.apache.poi.hslf.usermodel.SlideShow r5;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r6;
        org.apache.poi.hslf.model.Hyperlink r2;

        r5 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r2 := @parameter0: org.apache.poi.hslf.model.Hyperlink;

        $r0 = new org.apache.poi.hslf.record.ExHyperlink;

        specialinvoke $r0.<org.apache.poi.hslf.record.ExHyperlink: void <init>()>();

        $r1 = virtualinvoke $r0.<org.apache.poi.hslf.record.ExHyperlink: org.apache.poi.hslf.record.ExHyperlinkAtom getExHyperlinkAtom()>();

        $i0 = virtualinvoke r2.<org.apache.poi.hslf.model.Hyperlink: int getType()>();

        if $i0 != 7 goto label1;

        $r6 = virtualinvoke r2.<org.apache.poi.hslf.model.Hyperlink: java.lang.String getAddress()>();

        virtualinvoke $r0.<org.apache.poi.hslf.record.ExHyperlink: void setLinkURL(java.lang.String,int)>($r6, 48);

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<org.apache.poi.hslf.model.Hyperlink: java.lang.String getAddress()>();

        virtualinvoke $r0.<org.apache.poi.hslf.record.ExHyperlink: void setLinkURL(java.lang.String)>($r3);

     label2:
        $r4 = virtualinvoke r2.<org.apache.poi.hslf.model.Hyperlink: java.lang.String getTitle()>();

        virtualinvoke $r0.<org.apache.poi.hslf.record.ExHyperlink: void setLinkTitle(java.lang.String)>($r4);

        $i1 = virtualinvoke r5.<org.apache.poi.hslf.usermodel.SlideShow: int addToObjListAtom(org.apache.poi.hslf.record.RecordContainer)>($r0);

        virtualinvoke r2.<org.apache.poi.hslf.model.Hyperlink: void setId(int)>($i1);

        virtualinvoke $r1.<org.apache.poi.hslf.record.ExHyperlinkAtom: void setNumber(int)>($i1);

        return $i1;
    }

    public int addEmbed(org.apache.poi.poifs.filesystem.POIFSFileSystem)
    {
        byte[] $r13, $r15;
        org.apache.poi.hslf.record.ExEmbedAtom $r9;
        java.io.ByteArrayInputStream $r16;
        java.util.Map $r17;
        boolean $z0, $z1, $z2, $z3;
        org.apache.poi.hslf.record.ExOleObjAtom $r10;
        java.util.Set $r18;
        org.apache.poi.hslf.record.Record[] $r5;
        org.apache.poi.poifs.filesystem.DirectoryNode $r1;
        org.apache.poi.hslf.usermodel.SlideShow r14;
        org.apache.poi.hslf.record.Record $r6, $r7, $r8;
        org.apache.poi.hslf.record.ExOleObjStg $r11;
        java.io.ByteArrayOutputStream $r12;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r0;
        org.apache.poi.hpsf.ClassID $r2, $r3, r27;
        int $i0, $i1;
        org.apache.poi.hslf.record.ExEmbed $r4;
        java.lang.String $r23;
        java.util.Map$Entry r28;
        java.util.Iterator $r19;
        java.io.IOException $r25;
        java.lang.IllegalArgumentException $r20;
        org.apache.poi.hslf.exceptions.HSLFException $r26;
        java.lang.Object $r21, $r22, $r24;

        r14 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r2 = new org.apache.poi.hpsf.ClassID;

        specialinvoke $r2.<org.apache.poi.hpsf.ClassID: void <init>()>();

        $r3 = virtualinvoke $r1.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.hpsf.ClassID getStorageClsid()>();

        $z0 = virtualinvoke $r2.<org.apache.poi.hpsf.ClassID: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label05;

        $r17 = staticinvoke <org.apache.poi.hslf.usermodel.SlideShow: java.util.Map getOleMap()>();

        r27 = null;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label03;

        $r21 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.util.Map$Entry) $r21;

        $r22 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = (java.lang.String) $r22;

        $z3 = virtualinvoke $r1.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>($r23);

        if $z3 == 0 goto label02;

        $r24 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>();

        r27 = (org.apache.poi.hpsf.ClassID) $r24;

        goto label03;

     label02:
        goto label01;

     label03:
        if r27 != null goto label04;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported embedded document");

        throw $r20;

     label04:
        virtualinvoke $r1.<org.apache.poi.poifs.filesystem.DirectoryNode: void setStorageClsid(org.apache.poi.hpsf.ClassID)>(r27);

     label05:
        $r4 = new org.apache.poi.hslf.record.ExEmbed;

        specialinvoke $r4.<org.apache.poi.hslf.record.ExEmbed: void <init>()>();

        $r5 = virtualinvoke $r4.<org.apache.poi.hslf.record.ExEmbed: org.apache.poi.hslf.record.Record[] getChildRecords()>();

        $r6 = $r5[2];

        virtualinvoke $r4.<org.apache.poi.hslf.record.ExEmbed: org.apache.poi.hslf.record.Record removeChild(org.apache.poi.hslf.record.Record)>($r6);

        $r7 = $r5[3];

        virtualinvoke $r4.<org.apache.poi.hslf.record.ExEmbed: org.apache.poi.hslf.record.Record removeChild(org.apache.poi.hslf.record.Record)>($r7);

        $r8 = $r5[4];

        virtualinvoke $r4.<org.apache.poi.hslf.record.ExEmbed: org.apache.poi.hslf.record.Record removeChild(org.apache.poi.hslf.record.Record)>($r8);

        $r9 = virtualinvoke $r4.<org.apache.poi.hslf.record.ExEmbed: org.apache.poi.hslf.record.ExEmbedAtom getExEmbedAtom()>();

        virtualinvoke $r9.<org.apache.poi.hslf.record.ExEmbedAtom: void setCantLockServerB(boolean)>(1);

        $r10 = virtualinvoke $r4.<org.apache.poi.hslf.record.ExEmbed: org.apache.poi.hslf.record.ExOleObjAtom getExOleObjAtom()>();

        virtualinvoke $r10.<org.apache.poi.hslf.record.ExOleObjAtom: void setDrawAspect(int)>(1);

        virtualinvoke $r10.<org.apache.poi.hslf.record.ExOleObjAtom: void setType(int)>(0);

        virtualinvoke $r10.<org.apache.poi.hslf.record.ExOleObjAtom: void setOptions(int)>(1226240);

        $r11 = new org.apache.poi.hslf.record.ExOleObjStg;

        specialinvoke $r11.<org.apache.poi.hslf.record.ExOleObjStg: void <init>()>();

     label06:
        $z1 = virtualinvoke $r1.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("\u0001Ole");

        if $z1 != 0 goto label07;

        $r15 = newarray (byte)[20];

        $r15[0] = 1;

        $r15[1] = 0;

        $r15[2] = 0;

        $r15[3] = 2;

        $r15[4] = 0;

        $r15[5] = 0;

        $r15[6] = 0;

        $r15[7] = 0;

        $r15[8] = 0;

        $r15[9] = 0;

        $r15[10] = 0;

        $r15[11] = 0;

        $r15[12] = 0;

        $r15[13] = 0;

        $r15[14] = 0;

        $r15[15] = 0;

        $r15[16] = 0;

        $r15[17] = 0;

        $r15[18] = 0;

        $r15[19] = 0;

        $r16 = new java.io.ByteArrayInputStream;

        specialinvoke $r16.<java.io.ByteArrayInputStream: void <init>(byte[])>($r15);

        virtualinvoke r0.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.io.InputStream,java.lang.String)>($r16, "\u0001Ole");

     label07:
        $r12 = new java.io.ByteArrayOutputStream;

        specialinvoke $r12.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r0.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void writeFilesystem(java.io.OutputStream)>($r12);

        $r13 = virtualinvoke $r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r11.<org.apache.poi.hslf.record.ExOleObjStg: void setData(byte[])>($r13);

     label08:
        goto label10;

     label09:
        $r25 := @caughtexception;

        $r26 = new org.apache.poi.hslf.exceptions.HSLFException;

        specialinvoke $r26.<org.apache.poi.hslf.exceptions.HSLFException: void <init>(java.lang.Throwable)>($r25);

        throw $r26;

     label10:
        $i0 = virtualinvoke r14.<org.apache.poi.hslf.usermodel.SlideShow: int addPersistentObject(org.apache.poi.hslf.record.PositionDependentRecord)>($r11);

        virtualinvoke $r11.<org.apache.poi.hslf.record.ExOleObjStg: void setPersistId(int)>($i0);

        virtualinvoke $r10.<org.apache.poi.hslf.record.ExOleObjAtom: void setObjStgDataRef(int)>($i0);

        $i1 = virtualinvoke r14.<org.apache.poi.hslf.usermodel.SlideShow: int addToObjListAtom(org.apache.poi.hslf.record.RecordContainer)>($r4);

        virtualinvoke $r10.<org.apache.poi.hslf.record.ExOleObjAtom: void setObjID(int)>($i1);

        return $i1;

        catch java.io.IOException from label06 to label08 with label09;
    }

    protected int addToObjListAtom(org.apache.poi.hslf.record.RecordContainer)
    {
        org.apache.poi.hslf.record.Record $r3;
        long $l1, $l2;
        int $i0, $i3, $i4;
        org.apache.poi.hslf.record.DocumentAtom $r9;
        org.apache.poi.hslf.record.RecordTypes$Type $r1;
        org.apache.poi.hslf.record.ExObjListAtom $r4;
        org.apache.poi.hslf.usermodel.SlideShow r0;
        org.apache.poi.hslf.record.Document $r2, $r7, $r8;
        org.apache.poi.hslf.record.RecordContainer r5;
        org.apache.poi.hslf.record.ExObjList $r6, r10;

        r0 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r5 := @parameter0: org.apache.poi.hslf.record.RecordContainer;

        $r2 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r1 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type ExObjList>;

        $i0 = $r1.<org.apache.poi.hslf.record.RecordTypes$Type: int typeID>;

        $l1 = (long) $i0;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.Record findFirstOfType(long)>($l1);

        r10 = (org.apache.poi.hslf.record.ExObjList) $r3;

        if r10 != null goto label1;

        $r6 = new org.apache.poi.hslf.record.ExObjList;

        specialinvoke $r6.<org.apache.poi.hslf.record.ExObjList: void <init>()>();

        r10 = $r6;

        $r8 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r7 = r0.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.Document _documentRecord>;

        $r9 = virtualinvoke $r7.<org.apache.poi.hslf.record.Document: org.apache.poi.hslf.record.DocumentAtom getDocumentAtom()>();

        virtualinvoke $r8.<org.apache.poi.hslf.record.Document: void addChildAfter(org.apache.poi.hslf.record.Record,org.apache.poi.hslf.record.Record)>($r6, $r9);

     label1:
        $r4 = virtualinvoke r10.<org.apache.poi.hslf.record.ExObjList: org.apache.poi.hslf.record.ExObjListAtom getExObjListAtom()>();

        $l2 = virtualinvoke $r4.<org.apache.poi.hslf.record.ExObjListAtom: long getObjectIDSeed()>();

        $i3 = (int) $l2;

        $i4 = $i3 + 1;

        virtualinvoke $r4.<org.apache.poi.hslf.record.ExObjListAtom: void setObjectIDSeed(int)>($i4);

        virtualinvoke r10.<org.apache.poi.hslf.record.ExObjList: void addChildAfter(org.apache.poi.hslf.record.Record,org.apache.poi.hslf.record.Record)>(r5, $r4);

        return $i4;
    }

    protected static java.util.Map getOleMap()
    {
        org.apache.poi.hpsf.ClassID $r1, $r2, $r3, $r4;
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = <org.apache.poi.hpsf.ClassID: org.apache.poi.hpsf.ClassID PPT_SHOW>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PowerPoint Document", $r1);

        $r2 = <org.apache.poi.hpsf.ClassID: org.apache.poi.hpsf.ClassID EXCEL97>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Workbook", $r2);

        $r3 = <org.apache.poi.hpsf.ClassID: org.apache.poi.hpsf.ClassID EXCEL97>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("WORKBOOK", $r3);

        $r4 = <org.apache.poi.hpsf.ClassID: org.apache.poi.hpsf.ClassID EXCEL97>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BOOK", $r4);

        return $r0;
    }

    protected int addPersistentObject(org.apache.poi.hslf.record.PositionDependentRecord)
    {
        org.apache.poi.hslf.record.Record $r2;
        org.apache.poi.hslf.record.UserEditAtom r10;
        org.apache.poi.hslf.record.PersistPtrHolder r18;
        java.util.HashMap $r19;
        int $i0, i1, $i2, $i4;
        org.apache.poi.hslf.record.PositionDependentRecord r0;
        java.lang.String $r15;
        org.apache.poi.hslf.HSLFSlideShow $r3, $r5;
        org.apache.poi.util.POILogger $r12;
        java.io.IOException $r16;
        org.apache.poi.hslf.record.RecordTypes$Type $r6, $r8;
        org.apache.poi.hslf.exceptions.HSLFException $r20;
        org.apache.poi.hslf.usermodel.SlideShow r1;
        java.lang.Object $r7, $r9;
        java.lang.StringBuilder $r13, $r14, $r21;

        r1 := @this: org.apache.poi.hslf.usermodel.SlideShow;

        r0 := @parameter0: org.apache.poi.hslf.record.PositionDependentRecord;

        $i4 = (int) -1;

        interfaceinvoke r0.<org.apache.poi.hslf.record.PositionDependentRecord: void setLastOnDiskOffset(int)>($i4);

        $r3 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow>;

        $r2 = (org.apache.poi.hslf.record.Record) r0;

        virtualinvoke $r3.<org.apache.poi.hslf.HSLFSlideShow: int appendRootLevelRecord(org.apache.poi.hslf.record.Record)>($r2);

        $r19 = new java.util.HashMap;

        specialinvoke $r19.<java.util.HashMap: void <init>()>();

     label1:
        $r5 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.HSLFSlideShow _hslfSlideShow>;

        virtualinvoke $r5.<org.apache.poi.hslf.HSLFSlideShow: void updateAndWriteDependantRecords(java.io.OutputStream,java.util.Map)>(null, $r19);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        $r20 = new org.apache.poi.hslf.exceptions.HSLFException;

        specialinvoke $r20.<org.apache.poi.hslf.exceptions.HSLFException: void <init>(java.lang.Throwable)>($r16);

        throw $r20;

     label4:
        $r6 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type PersistPtrIncrementalBlock>;

        $r7 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r18 = (org.apache.poi.hslf.record.PersistPtrHolder) $r7;

        $r8 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type UserEditAtom>;

        $r9 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r10 = (org.apache.poi.hslf.record.UserEditAtom) $r9;

        $i0 = virtualinvoke r10.<org.apache.poi.hslf.record.UserEditAtom: int getMaxPersistWritten()>();

        i1 = $i0 + 1;

        virtualinvoke r10.<org.apache.poi.hslf.record.UserEditAtom: void setLastViewType(short)>(1);

        virtualinvoke r10.<org.apache.poi.hslf.record.UserEditAtom: void setMaxPersistWritten(int)>(i1);

        $i2 = interfaceinvoke r0.<org.apache.poi.hslf.record.PositionDependentRecord: int getLastOnDiskOffset()>();

        interfaceinvoke r0.<org.apache.poi.hslf.record.PositionDependentRecord: void setLastOnDiskOffset(int)>($i2);

        virtualinvoke r18.<org.apache.poi.hslf.record.PersistPtrHolder: void addSlideLookup(int,int)>(i1, $i2);

        $r12 = r1.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.util.POILogger logger>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New slide/object ended up at ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(3, $r15);

        return i1;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
