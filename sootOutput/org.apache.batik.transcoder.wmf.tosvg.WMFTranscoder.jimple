public class org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder extends org.apache.batik.transcoder.ToSVGAbstractTranscoder
{
    public static final java.lang.String WMF_EXTENSION;
    public static final java.lang.String SVG_EXTENSION;

    public void <init>()
    {
        org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder;

        specialinvoke r0.<org.apache.batik.transcoder.ToSVGAbstractTranscoder: void <init>()>();

        return;
    }

    public void transcode(org.apache.batik.transcoder.TranscoderInput, org.apache.batik.transcoder.TranscoderOutput) throws org.apache.batik.transcoder.TranscoderException
    {
        java.lang.Float $r55;
        java.lang.Integer $r39, $r43, $r47, $r51, $r59, $r63;
        org.w3c.dom.Document $r16;
        org.apache.batik.transcoder.TranscodingHints $r5, $r7, $r9, $r11, $r13, $r37, $r41, $r45, $r49, $r53, $r57, $r61;
        org.apache.batik.svggen.SVGGeneratorContext $r19;
        org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder r0;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore $r3;
        java.lang.StringBuffer $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        java.lang.String $r26, $r34;
        org.apache.batik.transcoder.TranscoderOutput r15;
        java.io.IOException $r64;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter $r14;
        org.apache.batik.transcoder.TranscodingHints$Key $r4, $r6, $r8, $r10, $r12, $r36, $r40, $r44, $r48, $r52, $r56, $r60;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.Dimension $r21;
        org.apache.batik.transcoder.TranscoderInput r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, f18, f19;
        java.io.DataInputStream $r2;
        org.apache.batik.transcoder.ErrorHandler $r66;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        org.apache.batik.svggen.SVGGraphics2D $r17, $r18, $r20, $r22, $r23, $r35;
        org.w3c.dom.Element $r24;
        org.apache.batik.transcoder.TranscoderException $r65;
        java.lang.Object $r38, $r42, $r46, $r50, $r54, $r58, $r62;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder;

        r1 := @parameter0: org.apache.batik.transcoder.TranscoderInput;

        r15 := @parameter1: org.apache.batik.transcoder.TranscoderOutput;

        $r2 = specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder: java.io.DataInputStream getCompatibleInput(org.apache.batik.transcoder.TranscoderInput)>(r1);

        $r3 = new org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;

        specialinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: void <init>()>();

     label01:
        virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: void read(java.io.DataInputStream)>($r2);

     label02:
        goto label04;

     label03:
        $r64 := @caughtexception;

        $r66 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler>;

        $r65 = new org.apache.batik.transcoder.TranscoderException;

        specialinvoke $r65.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.Exception)>($r64);

        interfaceinvoke $r66.<org.apache.batik.transcoder.ErrorHandler: void fatalError(org.apache.batik.transcoder.TranscoderException)>($r65);

        return;

     label04:
        f16 = 1.0F;

        $r5 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r4 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_INPUT_WIDTH>;

        $z0 = virtualinvoke $r5.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label05;

        $r57 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r56 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_INPUT_WIDTH>;

        $r58 = virtualinvoke $r57.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r56);

        $r59 = (java.lang.Integer) $r58;

        $i8 = virtualinvoke $r59.<java.lang.Integer: int intValue()>();

        f17 = (float) $i8;

        $r61 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r60 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_INPUT_HEIGHT>;

        $r62 = virtualinvoke $r61.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r60);

        $r63 = (java.lang.Integer) $r62;

        $i9 = virtualinvoke $r63.<java.lang.Integer: int intValue()>();

        f18 = (float) $i9;

        goto label06;

     label05:
        $i0 = virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        f17 = (float) $i0;

        $i1 = virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getHeightPixels()>();

        f18 = (float) $i1;

     label06:
        $r7 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r6 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_WIDTH>;

        $z1 = virtualinvoke $r7.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r6);

        if $z1 == 0 goto label07;

        $r53 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r52 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_WIDTH>;

        $r54 = virtualinvoke $r53.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r52);

        $r55 = (java.lang.Float) $r54;

        $f14 = virtualinvoke $r55.<java.lang.Float: float floatValue()>();

        f16 = $f14 / f17;

        $f15 = f18 * $f14;

        f19 = $f15 / f17;

     label07:
        i10 = 0;

        i11 = 0;

        $r9 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r8 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_XOFFSET>;

        $z2 = virtualinvoke $r9.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r8);

        if $z2 == 0 goto label08;

        $r49 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r48 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_XOFFSET>;

        $r50 = virtualinvoke $r49.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r48);

        $r51 = (java.lang.Integer) $r50;

        i10 = virtualinvoke $r51.<java.lang.Integer: int intValue()>();

     label08:
        $r11 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r10 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_YOFFSET>;

        $z3 = virtualinvoke $r11.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r10);

        if $z3 == 0 goto label09;

        $r45 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r44 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_YOFFSET>;

        $r46 = virtualinvoke $r45.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r44);

        $r47 = (java.lang.Integer) $r46;

        i11 = virtualinvoke $r47.<java.lang.Integer: int intValue()>();

     label09:
        $f0 = virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getUnitsToPixels()>();

        $f13 = $f0 * f16;

        $f1 = virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: float getVpX()>();

        $f2 = $f1 * $f13;

        $i6 = (int) $f2;

        $f3 = virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: float getVpY()>();

        $f4 = $f3 * $f13;

        $i7 = (int) $f4;

        $r13 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r12 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_INPUT_WIDTH>;

        $z4 = virtualinvoke $r13.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r12);

        if $z4 == 0 goto label10;

        $r37 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r36 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_INPUT_WIDTH>;

        $r38 = virtualinvoke $r37.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r36);

        $r39 = (java.lang.Integer) $r38;

        $i4 = virtualinvoke $r39.<java.lang.Integer: int intValue()>();

        $f9 = (float) $i4;

        $f10 = $f9 * f16;

        i12 = (int) $f10;

        $r41 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r40 = <org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_INPUT_HEIGHT>;

        $r42 = virtualinvoke $r41.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r40);

        $r43 = (java.lang.Integer) $r42;

        $i5 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();

        $f11 = (float) $i5;

        $f12 = $f11 * f16;

        i13 = (int) $f12;

        goto label11;

     label10:
        $i2 = virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthUnits()>();

        $f5 = (float) $i2;

        $f6 = $f5 * $f13;

        i12 = (int) $f6;

        $i3 = virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getHeightUnits()>();

        $f7 = (float) $i3;

        $f8 = $f7 * $f13;

        i13 = (int) $f8;

     label11:
        $r14 = new org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        specialinvoke $r14.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void <init>(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,int,float)>($r3, i10, i11, f16);

        $r16 = virtualinvoke r0.<org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.w3c.dom.Document createDocument(org.apache.batik.transcoder.TranscoderOutput)>(r15);

        $r17 = new org.apache.batik.svggen.SVGGraphics2D;

        specialinvoke $r17.<org.apache.batik.svggen.SVGGraphics2D: void <init>(org.w3c.dom.Document)>($r16);

        r0.<org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.svggen.SVGGraphics2D svgGenerator> = $r17;

        $r18 = r0.<org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.svggen.SVGGraphics2D svgGenerator>;

        $r19 = virtualinvoke $r18.<org.apache.batik.svggen.SVGGraphics2D: org.apache.batik.svggen.SVGGeneratorContext getGeneratorContext()>();

        virtualinvoke $r19.<org.apache.batik.svggen.SVGGeneratorContext: void setPrecision(int)>(4);

        $r20 = r0.<org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.svggen.SVGGraphics2D svgGenerator>;

        virtualinvoke $r14.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void paint(java.awt.Graphics)>($r20);

        $r22 = r0.<org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.svggen.SVGGraphics2D svgGenerator>;

        $r21 = new java.awt.Dimension;

        specialinvoke $r21.<java.awt.Dimension: void <init>(int,int)>(i12, i13);

        virtualinvoke $r22.<org.apache.batik.svggen.SVGGraphics2D: void setSVGCanvasSize(java.awt.Dimension)>($r21);

        $r23 = r0.<org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.svggen.SVGGraphics2D svgGenerator>;

        $r24 = virtualinvoke $r23.<org.apache.batik.svggen.SVGGraphics2D: org.w3c.dom.Element getRoot()>();

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i7);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i12);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i13);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r24.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "viewBox", $r34);

        $r35 = r0.<org.apache.batik.transcoder.ToSVGAbstractTranscoder: org.apache.batik.svggen.SVGGraphics2D svgGenerator>;

        virtualinvoke r0.<org.apache.batik.transcoder.ToSVGAbstractTranscoder: void writeSVGToOutput(org.apache.batik.svggen.SVGGraphics2D,org.w3c.dom.Element,org.apache.batik.transcoder.TranscoderOutput)>($r35, $r24, r15);

        return;

        catch java.io.IOException from label01 to label02 with label03;
    }

    private java.io.DataInputStream getCompatibleInput(org.apache.batik.transcoder.TranscoderInput) throws org.apache.batik.transcoder.TranscoderException
    {
        java.io.DataInputStream $r24, $r27;
        org.apache.batik.transcoder.ErrorHandler $r11, $r15, $r18, $r19;
        java.io.BufferedInputStream $r23, $r26;
        java.net.URL $r25;
        int $i1, $i3;
        java.lang.String $r2, $r12, $r21;
        java.net.MalformedURLException $r16;
        java.io.IOException $r13;
        org.apache.batik.transcoder.TranscoderInput r0;
        org.apache.batik.transcoder.TranscoderException $r22, $r28, $r29, $r30;
        org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder r3;
        java.io.InputStream $r1, $r5;

        r3 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder;

        r0 := @parameter0: org.apache.batik.transcoder.TranscoderInput;

        if r0 != null goto label1;

        $r11 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler>;

        $r22 = new org.apache.batik.transcoder.TranscoderException;

        $i1 = (int) 65280;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke $r22.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.String)>($r12);

        interfaceinvoke $r11.<org.apache.batik.transcoder.ErrorHandler: void fatalError(org.apache.batik.transcoder.TranscoderException)>($r22);

     label1:
        $r1 = virtualinvoke r0.<org.apache.batik.transcoder.TranscoderInput: java.io.InputStream getInputStream()>();

        if $r1 == null goto label2;

        $r24 = new java.io.DataInputStream;

        $r23 = new java.io.BufferedInputStream;

        specialinvoke $r23.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        specialinvoke $r24.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r23);

        return $r24;

     label2:
        $r2 = virtualinvoke r0.<org.apache.batik.transcoder.TranscoderInput: java.lang.String getURI()>();

        if $r2 == null goto label6;

     label3:
        $r25 = new java.net.URL;

        specialinvoke $r25.<java.net.URL: void <init>(java.lang.String)>($r2);

        $r5 = virtualinvoke $r25.<java.net.URL: java.io.InputStream openStream()>();

        $r27 = new java.io.DataInputStream;

        $r26 = new java.io.BufferedInputStream;

        specialinvoke $r26.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r27.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r26);

        return $r27;

     label4:
        $r16 := @caughtexception;

        $r18 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler>;

        $r28 = new org.apache.batik.transcoder.TranscoderException;

        specialinvoke $r28.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.Exception)>($r16);

        interfaceinvoke $r18.<org.apache.batik.transcoder.ErrorHandler: void fatalError(org.apache.batik.transcoder.TranscoderException)>($r28);

        goto label6;

     label5:
        $r13 := @caughtexception;

        $r15 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler>;

        $r29 = new org.apache.batik.transcoder.TranscoderException;

        specialinvoke $r29.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.Exception)>($r13);

        interfaceinvoke $r15.<org.apache.batik.transcoder.ErrorHandler: void fatalError(org.apache.batik.transcoder.TranscoderException)>($r29);

     label6:
        $r19 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler>;

        $r30 = new org.apache.batik.transcoder.TranscoderException;

        $i3 = (int) 65281;

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);

        specialinvoke $r30.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.String)>($r21);

        interfaceinvoke $r19.<org.apache.batik.transcoder.ErrorHandler: void fatalError(org.apache.batik.transcoder.TranscoderException)>($r30);

        return null;

        catch java.net.MalformedURLException from label3 to label4 with label4;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public static void main(java.lang.String[]) throws org.apache.batik.transcoder.TranscoderException
    {
        java.net.URL $r20;
        boolean $z0;
        org.apache.batik.transcoder.TranscoderInput $r19;
        org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder $r1;
        java.lang.String[] r0;
        java.lang.StringBuffer $r4, $r6, $r8, $r9, $r11, $r14, $r15, $r25, $r28, $r29, $r30, $r31;
        int $i0, $i1, $i2, i3;
        java.lang.String r2, $r3, $r7, $r10, $r12, $r13, $r16, $r21, $r27, $r32;
        java.io.PrintStream $r5, $r24, $r26, $r33;
        java.net.MalformedURLException $r36;
        org.apache.batik.transcoder.TranscoderOutput $r22;
        java.io.FileOutputStream $r23;
        java.io.IOException $r34;
        java.io.File $r17, $r18;
        org.apache.batik.transcoder.TranscoderException $r35, $r37;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label01;

        $r33 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("Usage : WMFTranscoder.main <file 1> ... <file n>");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label01:
        $r1 = new org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder;

        specialinvoke $r1.<org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder: void <init>()>();

        $i2 = lengthof r0;

        i3 = 0;

        goto label10;

     label02:
        r2 = r0[i3];

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".wmf");

        if $z0 != 0 goto label03;

        $r26 = <java.lang.System: java.io.PrintStream err>;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r27 = r0[i3];

        $r28 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not have the ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".wmf");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extension. It is ignored");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r32);

        goto label09;

     label03:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Processing : ");

        $r7 = r0[i3];

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $i1 = virtualinvoke $r12.<java.lang.String: int indexOf(java.lang.String)>(".wmf");

        $r13 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".svg");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r17 = new java.io.File;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>(r2);

        $r18 = new java.io.File;

        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r16);

     label04:
        $r19 = new org.apache.batik.transcoder.TranscoderInput;

        $r20 = virtualinvoke $r17.<java.io.File: java.net.URL toURL()>();

        $r21 = virtualinvoke $r20.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.batik.transcoder.TranscoderInput: void <init>(java.lang.String)>($r21);

        $r22 = new org.apache.batik.transcoder.TranscoderOutput;

        $r23 = new java.io.FileOutputStream;

        specialinvoke $r23.<java.io.FileOutputStream: void <init>(java.io.File)>($r18);

        specialinvoke $r22.<org.apache.batik.transcoder.TranscoderOutput: void <init>(java.io.OutputStream)>($r23);

        virtualinvoke $r1.<org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder: void transcode(org.apache.batik.transcoder.TranscoderInput,org.apache.batik.transcoder.TranscoderOutput)>($r19, $r22);

     label05:
        goto label08;

     label06:
        $r36 := @caughtexception;

        $r37 = new org.apache.batik.transcoder.TranscoderException;

        specialinvoke $r37.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.Exception)>($r36);

        throw $r37;

     label07:
        $r34 := @caughtexception;

        $r35 = new org.apache.batik.transcoder.TranscoderException;

        specialinvoke $r35.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.Exception)>($r34);

        throw $r35;

     label08:
        $r24 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(".... Done");

     label09:
        i3 = i3 + 1;

     label10:
        if i3 < $i2 goto label02;

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

        catch java.net.MalformedURLException from label04 to label05 with label06;
        catch java.io.IOException from label04 to label05 with label07;
    }

    public static void <clinit>()
    {
        <org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder: java.lang.String SVG_EXTENSION> = ".svg";

        <org.apache.batik.transcoder.wmf.tosvg.WMFTranscoder: java.lang.String WMF_EXTENSION> = ".wmf";

        return;
    }
}
