public final class org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum extends org.apache.lucene.index.DocsAndPositionsEnum
{
    private org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] subs;
    int numSubs;
    int upto;
    org.apache.lucene.index.MergeState$DocMap currentMap;
    org.apache.lucene.index.DocsAndPositionsEnum current;
    int currentBase;
    int doc;
    private org.apache.lucene.index.MergeState mergeState;

    public void <init>()
    {
        int $i1;
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        specialinvoke r0.<org.apache.lucene.index.DocsAndPositionsEnum: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int doc> = $i1;

        return;
    }

    org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum reset(org.apache.lucene.index.MultiDocsAndPositionsEnum)
    {
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;
        org.apache.lucene.index.MultiDocsAndPositionsEnum r1;
        int $i0, $i2;
        org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] $r2;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        r1 := @parameter0: org.apache.lucene.index.MultiDocsAndPositionsEnum;

        $i0 = virtualinvoke r1.<org.apache.lucene.index.MultiDocsAndPositionsEnum: int getNumSubs()>();

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int numSubs> = $i0;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.MultiDocsAndPositionsEnum: org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] getSubs()>();

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] subs> = $r2;

        $i2 = (int) -1;

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int upto> = $i2;

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum current> = null;

        return r0;
    }

    public void setMergeState(org.apache.lucene.index.MergeState)
    {
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;
        org.apache.lucene.index.MergeState r1;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        r1 := @parameter0: org.apache.lucene.index.MergeState;

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.MergeState mergeState> = r1;

        return;
    }

    public int getNumSubs()
    {
        int $i0;
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        $i0 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int numSubs>;

        return $i0;
    }

    public org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] getSubs()
    {
        org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] $r1;
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        $r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] subs>;

        return $r1;
    }

    public int freq() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.index.DocsAndPositionsEnum $r1;
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        $r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum current>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: int freq()>();

        return $i0;
    }

    public int docID()
    {
        int $i0;
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        $i0 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int doc>;

        return $i0;
    }

    public int advance(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r1;

        r1 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int nextDoc() throws java.io.IOException
    {
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;
        org.apache.lucene.index.MergeState$DocMap $r2, $r13;
        org.apache.lucene.index.ReaderSlice $r5;
        org.apache.lucene.index.MergeState $r9, $r11;
        org.apache.lucene.index.DocsAndPositionsEnum $r1, $r8, $r14;
        int[] $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i14;
        org.apache.lucene.index.MergeState$DocMap[] $r12;
        org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice $r4, $r7;
        org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] $r3, $r6;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

     label1:
        $r14 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum current>;

        if $r14 != null goto label3;

        $i6 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int upto>;

        $i4 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int numSubs>;

        $i5 = $i4 - 1;

        if $i6 != $i5 goto label2;

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int doc> = 2147483647;

        return 2147483647;

     label2:
        $i7 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int upto>;

        $i8 = $i7 + 1;

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int upto> = $i8;

        $r3 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] subs>;

        $i9 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int upto>;

        $r4 = $r3[$i9];

        $r5 = $r4.<org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice: org.apache.lucene.index.ReaderSlice slice>;

        i12 = $r5.<org.apache.lucene.index.ReaderSlice: int readerIndex>;

        $r6 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] subs>;

        $i10 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int upto>;

        $r7 = $r6[$i10];

        $r8 = $r7.<org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice: org.apache.lucene.index.DocsAndPositionsEnum docsAndPositionsEnum>;

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum current> = $r8;

        $r9 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.MergeState mergeState>;

        $r10 = $r9.<org.apache.lucene.index.MergeState: int[] docBase>;

        $i11 = $r10[i12];

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int currentBase> = $i11;

        $r11 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.MergeState mergeState>;

        $r12 = $r11.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$DocMap[] docMaps>;

        $r13 = $r12[i12];

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.MergeState$DocMap currentMap> = $r13;

     label3:
        $r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum current>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: int nextDoc()>();

        if $i0 == 2147483647 goto label5;

        $r2 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.MergeState$DocMap currentMap>;

        $i1 = virtualinvoke $r2.<org.apache.lucene.index.MergeState$DocMap: int get(int)>($i0);

        $i14 = (int) -1;

        if $i1 != $i14 goto label4;

        goto label1;

     label4:
        $i2 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int currentBase>;

        $i3 = $i2 + $i1;

        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: int doc> = $i3;

        return $i3;

     label5:
        r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum current> = null;

        goto label1;
    }

    public int nextPosition() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.index.DocsAndPositionsEnum $r1;
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        $r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum current>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: int nextPosition()>();

        return $i0;
    }

    public int startOffset() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.index.DocsAndPositionsEnum $r1;
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        $r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum current>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: int startOffset()>();

        return $i0;
    }

    public int endOffset() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.index.DocsAndPositionsEnum $r1;
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        $r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum current>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: int endOffset()>();

        return $i0;
    }

    public org.apache.lucene.util.BytesRef getPayload() throws java.io.IOException
    {
        org.apache.lucene.index.DocsAndPositionsEnum $r1;
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;
        org.apache.lucene.util.BytesRef $r2;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        $r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum current>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        return $r2;
    }

    public long cost()
    {
        org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum r0;
        org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice r2;
        long $l1, l2;
        org.apache.lucene.index.DocsAndPositionsEnum $r3;
        org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] r1;
        int i0, i3;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum;

        l2 = 0L;

        r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum: org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice[] subs>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r2 = r1[i3];

        $r3 = r2.<org.apache.lucene.index.MultiDocsAndPositionsEnum$EnumWithSlice: org.apache.lucene.index.DocsAndPositionsEnum docsAndPositionsEnum>;

        $l1 = virtualinvoke $r3.<org.apache.lucene.index.DocsAndPositionsEnum: long cost()>();

        l2 = l2 + $l1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return l2;
    }
}
