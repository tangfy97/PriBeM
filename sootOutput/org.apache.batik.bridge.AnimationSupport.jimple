public abstract class org.apache.batik.bridge.AnimationSupport extends java.lang.Object
{

    public void <init>()
    {
        org.apache.batik.bridge.AnimationSupport r0;

        r0 := @this: org.apache.batik.bridge.AnimationSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void fireTimeEvent(org.w3c.dom.events.EventTarget, java.lang.String, java.util.Calendar, int)
    {
        org.apache.batik.dom.events.DOMTimeEvent r5;
        org.w3c.dom.events.DocumentEvent r3;
        java.util.Date $r8;
        long $l1;
        java.util.Calendar r7;
        org.w3c.dom.events.EventTarget r0;
        org.w3c.dom.Document $r2;
        org.w3c.dom.Node $r1;
        org.w3c.dom.events.Event $r4;
        int i0;
        java.lang.String r6;

        r0 := @parameter0: org.w3c.dom.events.EventTarget;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.util.Calendar;

        i0 := @parameter3: int;

        $r1 = (org.w3c.dom.Node) r0;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r3 = (org.w3c.dom.events.DocumentEvent) $r2;

        $r4 = interfaceinvoke r3.<org.w3c.dom.events.DocumentEvent: org.w3c.dom.events.Event createEvent(java.lang.String)>("TimeEvent");

        r5 = (org.apache.batik.dom.events.DOMTimeEvent) $r4;

        virtualinvoke r5.<org.apache.batik.dom.events.DOMTimeEvent: void initTimeEventNS(java.lang.String,java.lang.String,org.w3c.dom.views.AbstractView,int)>("http://www.w3.org/2001/xml-events", r6, null, i0);

        $r8 = virtualinvoke r7.<java.util.Calendar: java.util.Date getTime()>();

        $l1 = virtualinvoke $r8.<java.util.Date: long getTime()>();

        virtualinvoke r5.<org.apache.batik.dom.events.DOMTimeEvent: void setTimestamp(long)>($l1);

        interfaceinvoke r0.<org.w3c.dom.events.EventTarget: boolean dispatchEvent(org.w3c.dom.events.Event)>(r5);

        return;
    }

    public static org.apache.batik.anim.timing.TimedElement getTimedElementById(java.lang.String, org.w3c.dom.Node)
    {
        org.w3c.dom.Element $r2;
        org.apache.batik.dom.svg.SVGContext $r4;
        org.apache.batik.dom.svg.SVGOMAnimationElement $r3;
        org.apache.batik.anim.timing.TimedElement $r6;
        org.w3c.dom.Node r1;
        java.lang.String r0;
        org.apache.batik.bridge.SVGAnimationElementBridge r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.w3c.dom.Node;

        $r2 = staticinvoke <org.apache.batik.bridge.AnimationSupport: org.w3c.dom.Element getElementById(java.lang.String,org.w3c.dom.Node)>(r0, r1);

        $z0 = $r2 instanceof org.apache.batik.dom.svg.SVGOMAnimationElement;

        if $z0 == 0 goto label1;

        $r3 = (org.apache.batik.dom.svg.SVGOMAnimationElement) $r2;

        $r4 = virtualinvoke $r3.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        r5 = (org.apache.batik.bridge.SVGAnimationElementBridge) $r4;

        $r6 = virtualinvoke r5.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement getTimedElement()>();

        return $r6;

     label1:
        return null;
    }

    public static org.w3c.dom.events.EventTarget getEventTargetById(java.lang.String, org.w3c.dom.Node)
    {
        org.w3c.dom.Element $r2;
        org.w3c.dom.events.EventTarget $r3;
        org.w3c.dom.Node r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.w3c.dom.Node;

        $r2 = staticinvoke <org.apache.batik.bridge.AnimationSupport: org.w3c.dom.Element getElementById(java.lang.String,org.w3c.dom.Node)>(r0, r1);

        $r3 = (org.w3c.dom.events.EventTarget) $r2;

        return $r3;
    }

    protected static org.w3c.dom.Element getElementById(java.lang.String, org.w3c.dom.Node)
    {
        org.apache.batik.dom.svg.SVGOMUseShadowRoot $r0;
        org.apache.batik.dom.svg.IdContainer $r2;
        org.w3c.dom.Element $r3;
        org.w3c.dom.Node r4, r5;
        java.lang.String r1;
        boolean $z0, $z1;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.w3c.dom.Node;

        r5 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label3;

     label1:
        r4 = r5;

        $z0 = r5 instanceof org.apache.batik.dom.svg.SVGOMUseShadowRoot;

        if $z0 == 0 goto label2;

        $r0 = (org.apache.batik.dom.svg.SVGOMUseShadowRoot) r5;

        r5 = virtualinvoke $r0.<org.apache.batik.dom.svg.SVGOMUseShadowRoot: org.w3c.dom.Node getCSSParentNode()>();

        goto label3;

     label2:
        r5 = interfaceinvoke r5.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label3:
        if r5 != null goto label1;

        $z1 = r4 instanceof org.apache.batik.dom.svg.IdContainer;

        if $z1 == 0 goto label4;

        $r2 = (org.apache.batik.dom.svg.IdContainer) r4;

        $r3 = interfaceinvoke $r2.<org.apache.batik.dom.svg.IdContainer: org.w3c.dom.Element getElementById(java.lang.String)>(r1);

        return $r3;

     label4:
        return null;
    }
}
