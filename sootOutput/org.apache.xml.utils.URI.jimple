public class org.apache.xml.utils.URI extends java.lang.Object implements java.io.Serializable
{
    private static final java.lang.String RESERVED_CHARACTERS;
    private static final java.lang.String MARK_CHARACTERS;
    private static final java.lang.String SCHEME_CHARACTERS;
    private static final java.lang.String USERINFO_CHARACTERS;
    private java.lang.String m_scheme;
    private java.lang.String m_userinfo;
    private java.lang.String m_host;
    private int m_port;
    private java.lang.String m_path;
    private java.lang.String m_queryString;
    private java.lang.String m_fragment;
    private static boolean DEBUG;

    public void <init>()
    {
        int $i1;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_host> = null;

        $i1 = (int) -1;

        r0.<org.apache.xml.utils.URI: int m_port> = $i1;

        r0.<org.apache.xml.utils.URI: java.lang.String m_path> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_fragment> = null;

        return;
    }

    public void <init>(org.apache.xml.utils.URI)
    {
        int $i1;
        org.apache.xml.utils.URI r0, r1;

        r0 := @this: org.apache.xml.utils.URI;

        r1 := @parameter0: org.apache.xml.utils.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_host> = null;

        $i1 = (int) -1;

        r0.<org.apache.xml.utils.URI: int m_port> = $i1;

        r0.<org.apache.xml.utils.URI: java.lang.String m_path> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_fragment> = null;

        specialinvoke r0.<org.apache.xml.utils.URI: void initialize(org.apache.xml.utils.URI)>(r1);

        return;
    }

    public void <init>(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        java.lang.String r1;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.xml.utils.URI: void <init>(org.apache.xml.utils.URI,java.lang.String)>(null, r1);

        return;
    }

    public void <init>(org.apache.xml.utils.URI, java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        int $i1;
        java.lang.String r2;
        org.apache.xml.utils.URI r0, r1;

        r0 := @this: org.apache.xml.utils.URI;

        r1 := @parameter0: org.apache.xml.utils.URI;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_host> = null;

        $i1 = (int) -1;

        r0.<org.apache.xml.utils.URI: int m_port> = $i1;

        r0.<org.apache.xml.utils.URI: java.lang.String m_path> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_fragment> = null;

        specialinvoke r0.<org.apache.xml.utils.URI: void initialize(org.apache.xml.utils.URI,java.lang.String)>(r1, r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r7, $r8;
        int $i0, $i1, $i3;
        java.lang.String r1, $r3, r4, $r6;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_host> = null;

        $i3 = (int) -1;

        r0.<org.apache.xml.utils.URI: int m_port> = $i3;

        r0.<org.apache.xml.utils.URI: java.lang.String m_path> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_fragment> = null;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r7 = new org.apache.xml.utils.URI$MalformedURIException;

        specialinvoke $r7.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>("Cannot construct URI with null/empty scheme!");

        throw $r7;

     label2:
        if r4 == null goto label3;

        $r6 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

     label3:
        $r8 = new org.apache.xml.utils.URI$MalformedURIException;

        specialinvoke $r8.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>("Cannot construct URI with null/empty scheme-specific part!");

        throw $r8;

     label4:
        virtualinvoke r0.<org.apache.xml.utils.URI: void setScheme(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.xml.utils.URI: void setPath(java.lang.String)>(r4);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        int $i1;
        java.lang.String r1, r2, r3, r4, r5;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.xml.utils.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2, $i1, r3, r4, r5);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r18, $r19, $r20, $r21, $r22;
        int $i0, i1, $i2, $i3, $i5, $i7, $i9, $i11;
        java.lang.String r1, $r3, $r4, r5, r6, r7, r8, r9, $r11, $r13, $r15, $r17;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r6 := @parameter4: java.lang.String;

        r8 := @parameter5: java.lang.String;

        r9 := @parameter6: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_host> = null;

        $i5 = (int) -1;

        r0.<org.apache.xml.utils.URI: int m_port> = $i5;

        r0.<org.apache.xml.utils.URI: java.lang.String m_path> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xml.utils.URI: java.lang.String m_fragment> = null;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r18 = new org.apache.xml.utils.URI$MalformedURIException;

        $r3 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_SCHEME_REQUIRED", null);

        specialinvoke $r18.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r3);

        throw $r18;

     label2:
        if r5 != null goto label4;

        if r7 == null goto label3;

        $r19 = new org.apache.xml.utils.URI$MalformedURIException;

        $r17 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NO_USERINFO_IF_NO_HOST", null);

        specialinvoke $r19.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r17);

        throw $r19;

     label3:
        $i7 = (int) -1;

        if i1 == $i7 goto label4;

        $r20 = new org.apache.xml.utils.URI$MalformedURIException;

        $r15 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NO_PORT_IF_NO_HOST", null);

        specialinvoke $r20.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r15);

        throw $r20;

     label4:
        if r6 == null goto label6;

        $i2 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(63);

        $i9 = (int) -1;

        if $i2 == $i9 goto label5;

        if r8 == null goto label5;

        $r21 = new org.apache.xml.utils.URI$MalformedURIException;

        $r13 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NO_QUERY_STRING_IN_PATH", null);

        specialinvoke $r21.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r13);

        throw $r21;

     label5:
        $i3 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(35);

        $i11 = (int) -1;

        if $i3 == $i11 goto label6;

        if r9 == null goto label6;

        $r22 = new org.apache.xml.utils.URI$MalformedURIException;

        $r11 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NO_FRAGMENT_STRING_IN_PATH", null);

        specialinvoke $r22.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r11);

        throw $r22;

     label6:
        virtualinvoke r0.<org.apache.xml.utils.URI: void setScheme(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.xml.utils.URI: void setHost(java.lang.String)>(r5);

        virtualinvoke r0.<org.apache.xml.utils.URI: void setPort(int)>(i1);

        virtualinvoke r0.<org.apache.xml.utils.URI: void setUserinfo(java.lang.String)>(r7);

        virtualinvoke r0.<org.apache.xml.utils.URI: void setPath(java.lang.String)>(r6);

        virtualinvoke r0.<org.apache.xml.utils.URI: void setQueryString(java.lang.String)>(r8);

        virtualinvoke r0.<org.apache.xml.utils.URI: void setFragment(java.lang.String)>(r9);

        return;
    }

    private void initialize(org.apache.xml.utils.URI)
    {
        int $i0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        org.apache.xml.utils.URI r0, r1;

        r0 := @this: org.apache.xml.utils.URI;

        r1 := @parameter0: org.apache.xml.utils.URI;

        $r2 = virtualinvoke r1.<org.apache.xml.utils.URI: java.lang.String getScheme()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_scheme> = $r2;

        $r3 = virtualinvoke r1.<org.apache.xml.utils.URI: java.lang.String getUserinfo()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = $r3;

        $r4 = virtualinvoke r1.<org.apache.xml.utils.URI: java.lang.String getHost()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_host> = $r4;

        $i0 = virtualinvoke r1.<org.apache.xml.utils.URI: int getPort()>();

        r0.<org.apache.xml.utils.URI: int m_port> = $i0;

        $r5 = virtualinvoke r1.<org.apache.xml.utils.URI: java.lang.String getPath()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_path> = $r5;

        $r6 = virtualinvoke r1.<org.apache.xml.utils.URI: java.lang.String getQueryString()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_queryString> = $r6;

        $r7 = virtualinvoke r1.<org.apache.xml.utils.URI: java.lang.String getFragment()>();

        r0.<org.apache.xml.utils.URI: java.lang.String m_fragment> = $r7;

        return;
    }

    private void initialize(org.apache.xml.utils.URI, java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r44, $r45;
        org.apache.xml.utils.URI r0, r2;
        java.lang.Object[] $r33;
        java.lang.String r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r36, $r37, r38, $r39, $r40, r41, $r42, r43, $r46;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, i23, i24, i25, $i26, $i27, $i28, $i29, $i31, $i33, $i35, $i37;
        char $c21;

        r2 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: org.apache.xml.utils.URI;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label02;

        if r1 == null goto label01;

        $r37 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i22 = virtualinvoke $r37.<java.lang.String: int length()>();

        if $i22 != 0 goto label02;

     label01:
        $r44 = new org.apache.xml.utils.URI$MalformedURIException;

        $r36 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_CANNOT_INIT_URI_EMPTY_PARMS", null);

        specialinvoke $r44.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r36);

        throw $r44;

     label02:
        if r1 == null goto label03;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label04;

     label03:
        specialinvoke r2.<org.apache.xml.utils.URI: void initialize(org.apache.xml.utils.URI)>(r0);

        return;

     label04:
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r38 = $r4;

        i23 = virtualinvoke $r4.<java.lang.String: int length()>();

        i24 = 0;

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(58);

        if $i1 >= 0 goto label05;

        if r0 != null goto label06;

        $r45 = new org.apache.xml.utils.URI$MalformedURIException;

        $r33 = newarray (java.lang.Object)[1];

        $r33[0] = $r4;

        $r34 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NO_SCHEME_IN_URI", $r33);

        specialinvoke $r45.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r34);

        throw $r45;

     label05:
        specialinvoke r2.<org.apache.xml.utils.URI: void initializeScheme(java.lang.String)>($r4);

        $i2 = $i1 + 1;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i2);

        r38 = $r5;

        i23 = virtualinvoke $r5.<java.lang.String: int length()>();

     label06:
        if 1 >= i23 goto label12;

        $r30 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int)>(0);

        $z4 = virtualinvoke $r30.<java.lang.String: boolean startsWith(java.lang.String)>("//");

        if $z4 == 0 goto label12;

        i24 = 2;

        goto label09;

     label07:
        $c21 = virtualinvoke r38.<java.lang.String: char charAt(int)>(i24);

        $i27 = (int) $c21;

        if $i27 == 47 goto label10;

        $i28 = (int) $c21;

        if $i28 == 63 goto label10;

        $i29 = (int) $c21;

        if $i29 != 35 goto label08;

        goto label10;

     label08:
        i24 = i24 + 1;

     label09:
        if i24 < i23 goto label07;

     label10:
        if i24 <= 2 goto label11;

        $r31 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int,int)>(2, i24);

        specialinvoke r2.<org.apache.xml.utils.URI: void initializeAuthority(java.lang.String)>($r31);

        goto label12;

     label11:
        r2.<org.apache.xml.utils.URI: java.lang.String m_host> = "";

     label12:
        $r39 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int)>(i24);

        specialinvoke r2.<org.apache.xml.utils.URI: void initializePath(java.lang.String)>($r39);

        if r0 == null goto label26;

        $r6 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i3 != 0 goto label14;

        $r22 = r2.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        if $r22 != null goto label14;

        $r23 = r2.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r23 != null goto label14;

        $r24 = virtualinvoke r0.<org.apache.xml.utils.URI: java.lang.String getScheme()>();

        r2.<org.apache.xml.utils.URI: java.lang.String m_scheme> = $r24;

        $r25 = virtualinvoke r0.<org.apache.xml.utils.URI: java.lang.String getUserinfo()>();

        r2.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = $r25;

        $r26 = virtualinvoke r0.<org.apache.xml.utils.URI: java.lang.String getHost()>();

        r2.<org.apache.xml.utils.URI: java.lang.String m_host> = $r26;

        $i20 = virtualinvoke r0.<org.apache.xml.utils.URI: int getPort()>();

        r2.<org.apache.xml.utils.URI: int m_port> = $i20;

        $r27 = virtualinvoke r0.<org.apache.xml.utils.URI: java.lang.String getPath()>();

        r2.<org.apache.xml.utils.URI: java.lang.String m_path> = $r27;

        $r28 = r2.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        if $r28 != null goto label13;

        $r29 = virtualinvoke r0.<org.apache.xml.utils.URI: java.lang.String getQueryString()>();

        r2.<org.apache.xml.utils.URI: java.lang.String m_queryString> = $r29;

     label13:
        return;

     label14:
        $r40 = r2.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        if $r40 != null goto label15;

        $r21 = virtualinvoke r0.<org.apache.xml.utils.URI: java.lang.String getScheme()>();

        r2.<org.apache.xml.utils.URI: java.lang.String m_scheme> = $r21;

     label15:
        $r7 = r2.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r7 != null goto label16;

        $r8 = virtualinvoke r0.<org.apache.xml.utils.URI: java.lang.String getUserinfo()>();

        r2.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = $r8;

        $r9 = virtualinvoke r0.<org.apache.xml.utils.URI: java.lang.String getHost()>();

        r2.<org.apache.xml.utils.URI: java.lang.String m_host> = $r9;

        $i4 = virtualinvoke r0.<org.apache.xml.utils.URI: int getPort()>();

        r2.<org.apache.xml.utils.URI: int m_port> = $i4;

        goto label17;

     label16:
        return;

     label17:
        $r10 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $i5 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i5 <= 0 goto label18;

        $r20 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $z3 = virtualinvoke $r20.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z3 == 0 goto label18;

        return;

     label18:
        $r46 = new java.lang.String;

        specialinvoke $r46.<java.lang.String: void <init>()>();

        r41 = $r46;

        $r12 = virtualinvoke r0.<org.apache.xml.utils.URI: java.lang.String getPath()>();

        if $r12 == null goto label19;

        $i18 = virtualinvoke $r12.<java.lang.String: int lastIndexOf(int)>(47);

        $i31 = (int) -1;

        if $i18 == $i31 goto label19;

        $i19 = $i18 + 1;

        r41 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i19);

     label19:
        $r42 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        r43 = virtualinvoke r41.<java.lang.String: java.lang.String concat(java.lang.String)>($r42);

        goto label21;

     label20:
        $i7 = $i6 + 1;

        $r13 = virtualinvoke r43.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

        $i8 = $i6 + 3;

        $r14 = virtualinvoke r43.<java.lang.String: java.lang.String substring(int)>($i8);

        r43 = virtualinvoke $r13.<java.lang.String: java.lang.String concat(java.lang.String)>($r14);

     label21:
        $i6 = virtualinvoke r43.<java.lang.String: int indexOf(java.lang.String)>("/./");

        $i33 = (int) -1;

        if $i6 != $i33 goto label20;

        $z0 = virtualinvoke r43.<java.lang.String: boolean endsWith(java.lang.String)>("/.");

        if $z0 == 0 goto label22;

        $i16 = virtualinvoke r43.<java.lang.String: int length()>();

        $i17 = $i16 - 1;

        r43 = virtualinvoke r43.<java.lang.String: java.lang.String substring(int,int)>(0, $i17);

     label22:
        goto label24;

     label23:
        $i9 = virtualinvoke r43.<java.lang.String: int indexOf(java.lang.String)>("/../");

        $r15 = virtualinvoke r43.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

        $i10 = virtualinvoke $r15.<java.lang.String: int lastIndexOf(int)>(47);

        $i35 = (int) -1;

        if $i10 == $i35 goto label24;

        i25 = $i10 + 1;

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int)>($i10);

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("..");

        if $z1 != 0 goto label24;

        $r17 = virtualinvoke r43.<java.lang.String: java.lang.String substring(int,int)>(0, i25);

        $i11 = $i26 + 4;

        $r18 = virtualinvoke r43.<java.lang.String: java.lang.String substring(int)>($i11);

        r43 = virtualinvoke $r17.<java.lang.String: java.lang.String concat(java.lang.String)>($r18);

     label24:
        $i26 = virtualinvoke r43.<java.lang.String: int indexOf(java.lang.String)>("/../");

        if $i26 > 0 goto label23;

        $z2 = virtualinvoke r43.<java.lang.String: boolean endsWith(java.lang.String)>("/..");

        if $z2 == 0 goto label25;

        $i12 = virtualinvoke r43.<java.lang.String: int length()>();

        $i13 = $i12 - 3;

        $r19 = virtualinvoke r43.<java.lang.String: java.lang.String substring(int,int)>(0, $i13);

        $i14 = virtualinvoke $r19.<java.lang.String: int lastIndexOf(int)>(47);

        $i37 = (int) -1;

        if $i14 == $i37 goto label25;

        $i15 = $i14 + 1;

        r43 = virtualinvoke r43.<java.lang.String: java.lang.String substring(int,int)>(0, $i15);

     label25:
        r2.<org.apache.xml.utils.URI: java.lang.String m_path> = r43;

     label26:
        return;
    }

    private void initializeScheme(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        char $c1;
        org.apache.xml.utils.URI$MalformedURIException $r5;
        int $i0, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r0, $r3, $r4;
        org.apache.xml.utils.URI r1;

        r1 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i2 = 0;

        goto label3;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i4 = (int) $c1;

        if $i4 == 58 goto label4;

        $i5 = (int) $c1;

        if $i5 == 47 goto label4;

        $i6 = (int) $c1;

        if $i6 == 63 goto label4;

        $i7 = (int) $c1;

        if $i7 != 35 goto label2;

        goto label4;

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < $i0 goto label1;

     label4:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i3 != 0 goto label5;

        $r5 = new org.apache.xml.utils.URI$MalformedURIException;

        $r3 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NO_SCHEME_INURI", null);

        specialinvoke $r5.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label5:
        virtualinvoke r1.<org.apache.xml.utils.URI: void setScheme(java.lang.String)>($r4);

        return;
    }

    private void initializeAuthority(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r12;
        java.lang.StringBuffer $r6, $r7, $r11;
        int $i0, $i1, $i3, $i4, $i5, i8, i9, i10, i11, i12, i13, i14, $i16, $i17, $i18, $i20;
        java.lang.String r0, $r1, $r3, $r8, r10;
        org.apache.xml.utils.URI r2;
        boolean $z0;
        char $c2, $c6, $c7;
        java.lang.NumberFormatException $r9;

        r2 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.String;

        i8 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i9 = 0;

        r10 = null;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(64, 0);

        $i16 = (int) -1;

        if $i1 == $i16 goto label05;

        goto label03;

     label01:
        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        i9 = $c7;

        $i17 = (int) $c7;

        if $i17 != 64 goto label02;

        goto label04;

     label02:
        i8 = i8 + 1;

     label03:
        if i8 < $i0 goto label01;

     label04:
        r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i8);

        i8 = i8 + 1;

     label05:
        i10 = i8;

        goto label08;

     label06:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        i9 = $c2;

        $i18 = (int) $c2;

        if $i18 != 58 goto label07;

        goto label09;

     label07:
        i8 = i8 + 1;

     label08:
        if i8 < $i0 goto label06;

     label09:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i10, i8);

        $i20 = (int) -1;

        i11 = $i20;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 <= 0 goto label18;

        if i9 != 58 goto label18;

        i12 = i8 + 1;

        i13 = i12;

        goto label11;

     label10:
        i12 = i12 + 1;

     label11:
        if i12 < $i0 goto label10;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i13, i12);

        $i4 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i4 <= 0 goto label18;

        i14 = 0;

        goto label14;

     label12:
        $c6 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i14);

        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isDigit(char)>($c6);

        if $z0 != 0 goto label13;

        $r12 = new org.apache.xml.utils.URI$MalformedURIException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is invalid. Port should only contain digits!");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r8);

        throw $r12;

     label13:
        i14 = i14 + 1;

     label14:
        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i14 < $i5 goto label12;

     label15:
        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label16:
        goto label18;

     label17:
        $r9 := @caughtexception;

     label18:
        virtualinvoke r2.<org.apache.xml.utils.URI: void setHost(java.lang.String)>($r1);

        virtualinvoke r2.<org.apache.xml.utils.URI: void setPort(int)>(i11);

        virtualinvoke r2.<org.apache.xml.utils.URI: void setUserinfo(java.lang.String)>(r10);

        return;

        catch java.lang.NumberFormatException from label15 to label16 with label17;
    }

    private void initializePath(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r24, $r25, $r26, $r27, $r29, $r30, $r32;
        org.apache.xml.utils.URI r1;
        java.lang.Object[] $r15;
        java.lang.StringBuffer $r4, $r5, $r10, $r11, $r28, $r31;
        java.lang.String r0, $r6, $r7, $r12, $r13, $r16, $r17, $r20, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int $i0, $i3, $i4, $i6, $i9, $i10, $i12, $i14, $i15, $i17, i19, i20, i21, i22, i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        char $c1, $c2, $c5, $c7, $c8, $c11, $c13, $c16, $c18;

        r1 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        $r24 = new org.apache.xml.utils.URI$MalformedURIException;

        specialinvoke $r24.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>("Cannot initialize path from null string!");

        throw $r24;

     label01:
        i19 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i20 = 0;

        goto label07;

     label02:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i19);

        i20 = $c1;

        $i24 = (int) $c1;

        if $i24 == 63 goto label08;

        $i25 = (int) $c1;

        if $i25 != 35 goto label03;

        goto label08;

     label03:
        $i26 = (int) $c1;

        if $i26 != 37 goto label05;

        $i14 = i19 + 2;

        if $i14 >= $i0 goto label04;

        $i15 = i19 + 1;

        $c16 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i15);

        $z10 = staticinvoke <org.apache.xml.utils.URI: boolean isHex(char)>($c16);

        if $z10 == 0 goto label04;

        $i17 = i19 + 2;

        $c18 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i17);

        $z11 = staticinvoke <org.apache.xml.utils.URI: boolean isHex(char)>($c18);

        if $z11 != 0 goto label06;

     label04:
        $r25 = new org.apache.xml.utils.URI$MalformedURIException;

        $r20 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE", null);

        specialinvoke $r25.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r20);

        throw $r25;

     label05:
        $z8 = staticinvoke <org.apache.xml.utils.URI: boolean isReservedCharacter(char)>($c1);

        if $z8 != 0 goto label06;

        $z9 = staticinvoke <org.apache.xml.utils.URI: boolean isUnreservedCharacter(char)>($c1);

        if $z9 != 0 goto label06;

        $i27 = (int) $c1;

        if 92 == $i27 goto label06;

        $r26 = new org.apache.xml.utils.URI$MalformedURIException;

        $r15 = newarray (java.lang.Object)[1];

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c1);

        $r15[0] = $r16;

        $r17 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_PATH_INVALID_CHAR", $r15);

        specialinvoke $r26.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r17);

        throw $r26;

     label06:
        i19 = i19 + 1;

     label07:
        if i19 < $i0 goto label02;

     label08:
        $r21 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i19);

        r1.<org.apache.xml.utils.URI: java.lang.String m_path> = $r21;

        if i20 != 63 goto label16;

        i19 = i19 + 1;

        i21 = i19;

        goto label14;

     label09:
        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i19);

        i20 = $c8;

        $i28 = (int) $c8;

        if $i28 != 35 goto label10;

        goto label15;

     label10:
        $i29 = (int) $c8;

        if $i29 != 37 goto label12;

        $i9 = i19 + 2;

        if $i9 >= $i0 goto label11;

        $i10 = i19 + 1;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i10);

        $z6 = staticinvoke <org.apache.xml.utils.URI: boolean isHex(char)>($c11);

        if $z6 == 0 goto label11;

        $i12 = i19 + 2;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i12);

        $z7 = staticinvoke <org.apache.xml.utils.URI: boolean isHex(char)>($c13);

        if $z7 != 0 goto label13;

     label11:
        $r27 = new org.apache.xml.utils.URI$MalformedURIException;

        specialinvoke $r27.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>("Query string contains invalid escape sequence!");

        throw $r27;

     label12:
        $z4 = staticinvoke <org.apache.xml.utils.URI: boolean isReservedCharacter(char)>($c8);

        if $z4 != 0 goto label13;

        $z5 = staticinvoke <org.apache.xml.utils.URI: boolean isUnreservedCharacter(char)>($c8);

        if $z5 != 0 goto label13;

        $r29 = new org.apache.xml.utils.URI$MalformedURIException;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Query string contains invalid character:");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r29.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r12);

        throw $r29;

     label13:
        i19 = i19 + 1;

     label14:
        if i19 < $i0 goto label09;

     label15:
        $r13 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i21, i19);

        r1.<org.apache.xml.utils.URI: java.lang.String m_queryString> = $r13;

     label16:
        if i20 != 35 goto label22;

        i22 = i19 + 1;

        i23 = i22;

        goto label21;

     label17:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);

        $i30 = (int) $c2;

        if $i30 != 37 goto label19;

        $i3 = i22 + 2;

        if $i3 >= $i0 goto label18;

        $i4 = i22 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $z2 = staticinvoke <org.apache.xml.utils.URI: boolean isHex(char)>($c5);

        if $z2 == 0 goto label18;

        $i6 = i22 + 2;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $z3 = staticinvoke <org.apache.xml.utils.URI: boolean isHex(char)>($c7);

        if $z3 != 0 goto label20;

     label18:
        $r30 = new org.apache.xml.utils.URI$MalformedURIException;

        specialinvoke $r30.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>("Fragment contains invalid escape sequence!");

        throw $r30;

     label19:
        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isReservedCharacter(char)>($c2);

        if $z0 != 0 goto label20;

        $z1 = staticinvoke <org.apache.xml.utils.URI: boolean isUnreservedCharacter(char)>($c2);

        if $z1 != 0 goto label20;

        $r32 = new org.apache.xml.utils.URI$MalformedURIException;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Fragment contains invalid character:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r32.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r6);

        throw $r32;

     label20:
        i22 = i22 + 1;

     label21:
        if i22 < $i0 goto label17;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i23, i22);

        r1.<org.apache.xml.utils.URI: java.lang.String m_fragment> = $r7;

     label22:
        return;
    }

    public java.lang.String getScheme()
    {
        java.lang.String $r1;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        $r1 = r0.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        return $r1;
    }

    public java.lang.String getSchemeSpecificPart()
    {
        java.lang.StringBuffer $r15;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        org.apache.xml.utils.URI r1;

        r1 := @this: org.apache.xml.utils.URI;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.xml.utils.URI: java.lang.String m_userinfo>;

        if $r2 != null goto label1;

        $r13 = r1.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r13 != null goto label1;

        $i2 = r1.<org.apache.xml.utils.URI: int m_port>;

        $i4 = (int) -1;

        if $i2 == $i4 goto label2;

     label1:
        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

     label2:
        $r14 = r1.<org.apache.xml.utils.URI: java.lang.String m_userinfo>;

        if $r14 == null goto label3;

        $r12 = r1.<org.apache.xml.utils.URI: java.lang.String m_userinfo>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

     label3:
        $r3 = r1.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r3 == null goto label4;

        $r11 = r1.<org.apache.xml.utils.URI: java.lang.String m_host>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

     label4:
        $i0 = r1.<org.apache.xml.utils.URI: int m_port>;

        $i6 = (int) -1;

        if $i0 == $i6 goto label5;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i1 = r1.<org.apache.xml.utils.URI: int m_port>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

     label5:
        $r4 = r1.<org.apache.xml.utils.URI: java.lang.String m_path>;

        if $r4 == null goto label6;

        $r10 = r1.<org.apache.xml.utils.URI: java.lang.String m_path>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

     label6:
        $r5 = r1.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        if $r5 == null goto label7;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r9 = r1.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label7:
        $r6 = r1.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        if $r6 == null goto label8;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r8 = r1.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label8:
        $r7 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String getUserinfo()
    {
        java.lang.String $r1;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        $r1 = r0.<org.apache.xml.utils.URI: java.lang.String m_userinfo>;

        return $r1;
    }

    public java.lang.String getHost()
    {
        java.lang.String $r1;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        $r1 = r0.<org.apache.xml.utils.URI: java.lang.String m_host>;

        return $r1;
    }

    public int getPort()
    {
        int $i0;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        $i0 = r0.<org.apache.xml.utils.URI: int m_port>;

        return $i0;
    }

    public java.lang.String getPath(boolean, boolean)
    {
        java.lang.StringBuffer $r0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        org.apache.xml.utils.URI r1;
        boolean z0, z1;

        r1 := @this: org.apache.xml.utils.URI;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r0 = new java.lang.StringBuffer;

        $r2 = r1.<org.apache.xml.utils.URI: java.lang.String m_path>;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        if z0 == 0 goto label1;

        $r5 = r1.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        if $r5 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r6 = r1.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label1:
        if z1 == 0 goto label2;

        $r3 = r1.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        if $r3 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r4 = r1.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label2:
        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String getPath()
    {
        java.lang.String $r1;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        $r1 = r0.<org.apache.xml.utils.URI: java.lang.String m_path>;

        return $r1;
    }

    public java.lang.String getQueryString()
    {
        java.lang.String $r1;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        $r1 = r0.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        return $r1;
    }

    public java.lang.String getFragment()
    {
        java.lang.String $r1;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        $r1 = r0.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        return $r1;
    }

    public void setScheme(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r3, $r5;
        java.lang.String r0, $r2, $r4, $r6;
        org.apache.xml.utils.URI r1;
        boolean $z0;

        r1 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r5 = new org.apache.xml.utils.URI$MalformedURIException;

        $r6 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_SCHEME_FROM_NULL_STRING", null);

        specialinvoke $r5.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isConformantSchemeName(java.lang.String)>(r0);

        if $z0 != 0 goto label2;

        $r3 = new org.apache.xml.utils.URI$MalformedURIException;

        $r4 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_SCHEME_NOT_CONFORMANT", null);

        specialinvoke $r3.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        r1.<org.apache.xml.utils.URI: java.lang.String m_scheme> = $r2;

        return;
    }

    public void setUserinfo(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r11, $r12, $r14;
        java.lang.StringBuffer $r6, $r7, $r13;
        int $i0, $i2, $i3, $i4, $i6, i8, $i9, $i10, $i12;
        java.lang.String r0, $r2, $r3, $r8;
        org.apache.xml.utils.URI r1;
        boolean $z0, $z1, $z2;
        char $c1, $c5, $c7;

        r1 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = null;

        goto label8;

     label1:
        $r2 = r1.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r2 != null goto label2;

        $r11 = new org.apache.xml.utils.URI$MalformedURIException;

        specialinvoke $r11.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>("Userinfo cannot be set when host is null!");

        throw $r11;

     label2:
        i8 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        goto label7;

     label3:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $i9 = (int) $c1;

        if $i9 != 37 goto label5;

        $i3 = i8 + 2;

        if $i3 >= $i0 goto label4;

        $i4 = i8 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $z1 = staticinvoke <org.apache.xml.utils.URI: boolean isHex(char)>($c5);

        if $z1 == 0 goto label4;

        $i6 = i8 + 2;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $z2 = staticinvoke <org.apache.xml.utils.URI: boolean isHex(char)>($c7);

        if $z2 != 0 goto label6;

     label4:
        $r12 = new org.apache.xml.utils.URI$MalformedURIException;

        specialinvoke $r12.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>("Userinfo contains invalid escape sequence!");

        throw $r12;

     label5:
        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isUnreservedCharacter(char)>($c1);

        if $z0 != 0 goto label6;

        $r3 = ";:&=+$,";

        $i10 = (int) $c1;

        $i2 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>($i10);

        $i12 = (int) -1;

        if $i2 != $i12 goto label6;

        $r14 = new org.apache.xml.utils.URI$MalformedURIException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Userinfo contains invalid character:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r8);

        throw $r14;

     label6:
        i8 = i8 + 1;

     label7:
        if i8 < $i0 goto label3;

     label8:
        r1.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = r0;

        return;
    }

    public void setHost(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r5;
        int $i0, $i2;
        java.lang.String r0, $r2, $r4;
        org.apache.xml.utils.URI r1;
        boolean $z0;

        r1 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        r1.<org.apache.xml.utils.URI: java.lang.String m_host> = r0;

        r1.<org.apache.xml.utils.URI: java.lang.String m_userinfo> = null;

        $i2 = (int) -1;

        r1.<org.apache.xml.utils.URI: int m_port> = $i2;

        goto label3;

     label2:
        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isWellFormedAddress(java.lang.String)>(r0);

        if $z0 != 0 goto label3;

        $r5 = new org.apache.xml.utils.URI$MalformedURIException;

        $r4 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_HOST_ADDRESS_NOT_WELLFORMED", null);

        specialinvoke $r5.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label3:
        r1.<org.apache.xml.utils.URI: java.lang.String m_host> = r0;

        return;
    }

    public void setPort(int) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r6, $r7;
        int i0, $i2, $i4;
        java.lang.String $r2, $r3, $r5;
        org.apache.xml.utils.URI r0;

        r0 := @this: org.apache.xml.utils.URI;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = (int) 65535;

        if i0 > $i2 goto label1;

        $r3 = r0.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r3 != null goto label2;

        $r6 = new org.apache.xml.utils.URI$MalformedURIException;

        $r5 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_PORT_WHEN_HOST_NULL", null);

        specialinvoke $r6.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label1:
        $i4 = (int) -1;

        if i0 == $i4 goto label2;

        $r7 = new org.apache.xml.utils.URI$MalformedURIException;

        $r2 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_PORT", null);

        specialinvoke $r7.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r2);

        throw $r7;

     label2:
        r0.<org.apache.xml.utils.URI: int m_port> = i0;

        return;
    }

    public void setPath(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        java.lang.String r0;
        org.apache.xml.utils.URI r1;

        r1 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.xml.utils.URI: java.lang.String m_path> = null;

        r1.<org.apache.xml.utils.URI: java.lang.String m_queryString> = null;

        r1.<org.apache.xml.utils.URI: java.lang.String m_fragment> = null;

        goto label2;

     label1:
        specialinvoke r1.<org.apache.xml.utils.URI: void initializePath(java.lang.String)>(r0);

     label2:
        return;
    }

    public void appendPath(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r24;
        org.apache.xml.utils.URI r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object[] $r25;
        java.lang.StringBuffer $r4, $r5, $r6, $r11, $r13, $r14;
        int $i0, $i1;
        java.lang.String r0, $r1, $r3, $r7, $r8, $r9, $r10, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r26;

        r2 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label01;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return;

     label02:
        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isURIString(java.lang.String)>(r0);

        if $z0 != 0 goto label03;

        $r24 = new org.apache.xml.utils.URI$MalformedURIException;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = r0;

        $r26 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_PATH_INVALID_CHAR", $r25);

        specialinvoke $r24.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r26);

        throw $r24;

     label03:
        $r3 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        if $r3 == null goto label04;

        $r8 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i1 != 0 goto label06;

     label04:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 == 0 goto label05;

        r2.<org.apache.xml.utils.URI: java.lang.String m_path> = r0;

        goto label10;

     label05:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r2.<org.apache.xml.utils.URI: java.lang.String m_path> = $r7;

        goto label10;

     label06:
        $r10 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z2 == 0 goto label08;

        $z4 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z4 == 0 goto label07;

        $r21 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $r22 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r23 = virtualinvoke $r21.<java.lang.String: java.lang.String concat(java.lang.String)>($r22);

        r2.<org.apache.xml.utils.URI: java.lang.String m_path> = $r23;

        goto label10;

     label07:
        $r19 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String concat(java.lang.String)>(r0);

        r2.<org.apache.xml.utils.URI: java.lang.String m_path> = $r20;

        goto label10;

     label08:
        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z3 == 0 goto label09;

        $r17 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String concat(java.lang.String)>(r0);

        r2.<org.apache.xml.utils.URI: java.lang.String m_path> = $r18;

        goto label10;

     label09:
        $r12 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke $r12.<java.lang.String: java.lang.String concat(java.lang.String)>($r15);

        r2.<org.apache.xml.utils.URI: java.lang.String m_path> = $r16;

     label10:
        return;
    }

    public void setQueryString(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r3, $r4, $r5;
        java.lang.String r0, $r2;
        org.apache.xml.utils.URI r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.xml.utils.URI: java.lang.String m_queryString> = null;

        goto label5;

     label1:
        $z0 = virtualinvoke r1.<org.apache.xml.utils.URI: boolean isGenericURI()>();

        if $z0 != 0 goto label2;

        $r5 = new org.apache.xml.utils.URI$MalformedURIException;

        specialinvoke $r5.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>("Query string can only be set for a generic URI!");

        throw $r5;

     label2:
        $r2 = virtualinvoke r1.<org.apache.xml.utils.URI: java.lang.String getPath()>();

        if $r2 != null goto label3;

        $r4 = new org.apache.xml.utils.URI$MalformedURIException;

        specialinvoke $r4.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>("Query string cannot be set when path is null!");

        throw $r4;

     label3:
        $z1 = staticinvoke <org.apache.xml.utils.URI: boolean isURIString(java.lang.String)>(r0);

        if $z1 != 0 goto label4;

        $r3 = new org.apache.xml.utils.URI$MalformedURIException;

        specialinvoke $r3.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>("Query string contains invalid character!");

        throw $r3;

     label4:
        r1.<org.apache.xml.utils.URI: java.lang.String m_queryString> = r0;

     label5:
        return;
    }

    public void setFragment(java.lang.String) throws org.apache.xml.utils.URI$MalformedURIException
    {
        org.apache.xml.utils.URI$MalformedURIException $r3, $r5, $r7;
        java.lang.String r0, $r2, $r4, $r6, $r8;
        org.apache.xml.utils.URI r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.xml.utils.URI: java.lang.String m_fragment> = null;

        goto label5;

     label1:
        $z0 = virtualinvoke r1.<org.apache.xml.utils.URI: boolean isGenericURI()>();

        if $z0 != 0 goto label2;

        $r7 = new org.apache.xml.utils.URI$MalformedURIException;

        $r8 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_FRAG_FOR_GENERIC_URI", null);

        specialinvoke $r7.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label2:
        $r2 = virtualinvoke r1.<org.apache.xml.utils.URI: java.lang.String getPath()>();

        if $r2 != null goto label3;

        $r5 = new org.apache.xml.utils.URI$MalformedURIException;

        $r6 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_FRAG_WHEN_PATH_NULL", null);

        specialinvoke $r5.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        $z1 = staticinvoke <org.apache.xml.utils.URI: boolean isURIString(java.lang.String)>(r0);

        if $z1 != 0 goto label4;

        $r3 = new org.apache.xml.utils.URI$MalformedURIException;

        $r4 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_FRAG_INVALID_CHAR", null);

        specialinvoke $r3.<org.apache.xml.utils.URI$MalformedURIException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label4:
        r1.<org.apache.xml.utils.URI: java.lang.String m_fragment> = r0;

     label5:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.xml.utils.URI r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        java.lang.Object r0;

        r2 := @this: org.apache.xml.utils.URI;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.xml.utils.URI;

        if $z0 == 0 goto label13;

        r1 = (org.apache.xml.utils.URI) r0;

        $r3 = r2.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        if $r3 != null goto label01;

        $r38 = r1.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        if $r38 == null goto label02;

     label01:
        $r4 = r2.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        if $r4 == null goto label13;

        $r5 = r1.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        if $r5 == null goto label13;

        $r7 = r2.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        $r6 = r1.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label13;

     label02:
        $r8 = r2.<org.apache.xml.utils.URI: java.lang.String m_userinfo>;

        if $r8 != null goto label03;

        $r37 = r1.<org.apache.xml.utils.URI: java.lang.String m_userinfo>;

        if $r37 == null goto label04;

     label03:
        $r9 = r2.<org.apache.xml.utils.URI: java.lang.String m_userinfo>;

        if $r9 == null goto label13;

        $r10 = r1.<org.apache.xml.utils.URI: java.lang.String m_userinfo>;

        if $r10 == null goto label13;

        $r12 = r2.<org.apache.xml.utils.URI: java.lang.String m_userinfo>;

        $r11 = r1.<org.apache.xml.utils.URI: java.lang.String m_userinfo>;

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label13;

     label04:
        $r13 = r2.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r13 != null goto label05;

        $r36 = r1.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r36 == null goto label06;

     label05:
        $r14 = r2.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r14 == null goto label13;

        $r15 = r1.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r15 == null goto label13;

        $r17 = r2.<org.apache.xml.utils.URI: java.lang.String m_host>;

        $r16 = r1.<org.apache.xml.utils.URI: java.lang.String m_host>;

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label13;

     label06:
        $i1 = r2.<org.apache.xml.utils.URI: int m_port>;

        $i0 = r1.<org.apache.xml.utils.URI: int m_port>;

        if $i1 != $i0 goto label13;

        $r18 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        if $r18 != null goto label07;

        $r35 = r1.<org.apache.xml.utils.URI: java.lang.String m_path>;

        if $r35 == null goto label08;

     label07:
        $r19 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        if $r19 == null goto label13;

        $r20 = r1.<org.apache.xml.utils.URI: java.lang.String m_path>;

        if $r20 == null goto label13;

        $r22 = r2.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $r21 = r1.<org.apache.xml.utils.URI: java.lang.String m_path>;

        $z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z4 == 0 goto label13;

     label08:
        $r23 = r2.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        if $r23 != null goto label09;

        $r34 = r1.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        if $r34 == null goto label10;

     label09:
        $r24 = r2.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        if $r24 == null goto label13;

        $r25 = r1.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        if $r25 == null goto label13;

        $r27 = r2.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        $r26 = r1.<org.apache.xml.utils.URI: java.lang.String m_queryString>;

        $z5 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z5 == 0 goto label13;

     label10:
        $r28 = r2.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        if $r28 != null goto label11;

        $r33 = r1.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        if $r33 == null goto label12;

     label11:
        $r29 = r2.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        if $r29 == null goto label13;

        $r30 = r1.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        if $r30 == null goto label13;

        $r32 = r2.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        $r31 = r1.<org.apache.xml.utils.URI: java.lang.String m_fragment>;

        $z6 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z6 == 0 goto label13;

     label12:
        return 1;

     label13:
        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0;
        java.lang.String $r2, $r3, $r4, $r5;
        org.apache.xml.utils.URI r1;

        r1 := @this: org.apache.xml.utils.URI;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        if $r2 == null goto label1;

        $r5 = r1.<org.apache.xml.utils.URI: java.lang.String m_scheme>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

     label1:
        $r3 = virtualinvoke r1.<org.apache.xml.utils.URI: java.lang.String getSchemeSpecificPart()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public boolean isGenericURI()
    {
        java.lang.String $r1;
        org.apache.xml.utils.URI r0;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.URI;

        $r1 = r0.<org.apache.xml.utils.URI: java.lang.String m_host>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isConformantSchemeName(java.lang.String)
    {
        char $c1, $c2;
        int $i0, $i3, i4, $i5, $i6, $i8;
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isAlpha(char)>($c1);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i4 = 1;

        goto label6;

     label4:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $z1 = staticinvoke <org.apache.xml.utils.URI: boolean isAlphanum(char)>($c2);

        if $z1 != 0 goto label5;

        $r2 = "+-.";

        $i6 = (int) $c2;

        $i3 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($i6);

        $i8 = (int) -1;

        if $i3 != $i8 goto label5;

        return 0;

     label5:
        i4 = i4 + 1;

     label6:
        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 < $i5 goto label4;

        return 1;
    }

    public static boolean isWellFormedAddress(java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int $i0, $i1, $i2, $i4, $i6, $i7, $i9, $i12, $i14, $i15, i17, i18, i19, i20, $i21, $i22, $i23;
        java.lang.String r0, $r1, $r2;
        char $c3, $c5, $c8, $c10, $c11, $c13, $c16;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return 0;

     label01:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label02;

        if $i0 <= 255 goto label03;

     label02:
        return 0;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 != 0 goto label04;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z1 == 0 goto label05;

     label04:
        return 0;

     label05:
        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(46);

        i17 = $i1;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z2 == 0 goto label06;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        i17 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(46);

     label06:
        $i2 = i17 + 1;

        if $i2 >= $i0 goto label14;

        $i9 = i17 + 1;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i9);

        $z6 = staticinvoke <org.apache.xml.utils.URI: boolean isDigit(char)>($c10);

        if $z6 == 0 goto label14;

        i18 = 0;

        i19 = 0;

        goto label12;

     label07:
        $c11 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i19);

        $i21 = (int) $c11;

        if $i21 != 46 goto label10;

        $i12 = i19 - 1;

        $c13 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i12);

        $z8 = staticinvoke <org.apache.xml.utils.URI: boolean isDigit(char)>($c13);

        if $z8 == 0 goto label08;

        $i14 = i19 + 1;

        if $i14 >= $i0 goto label09;

        $i15 = i19 + 1;

        $c16 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i15);

        $z9 = staticinvoke <org.apache.xml.utils.URI: boolean isDigit(char)>($c16);

        if $z9 != 0 goto label09;

     label08:
        return 0;

     label09:
        i18 = i18 + 1;

        goto label11;

     label10:
        $z7 = staticinvoke <org.apache.xml.utils.URI: boolean isDigit(char)>($c11);

        if $z7 != 0 goto label11;

        return 0;

     label11:
        i19 = i19 + 1;

     label12:
        if i19 < $i0 goto label07;

        if i18 == 3 goto label13;

        return 0;

     label13:
        goto label20;

     label14:
        i20 = 0;

        goto label19;

     label15:
        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i20);

        $i22 = (int) $c3;

        if $i22 != 46 goto label17;

        $i4 = i20 - 1;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        $z4 = staticinvoke <org.apache.xml.utils.URI: boolean isAlphanum(char)>($c5);

        if $z4 != 0 goto label16;

        return 0;

     label16:
        $i6 = i20 + 1;

        if $i6 >= $i0 goto label18;

        $i7 = i20 + 1;

        $c8 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i7);

        $z5 = staticinvoke <org.apache.xml.utils.URI: boolean isAlphanum(char)>($c8);

        if $z5 != 0 goto label18;

        return 0;

     label17:
        $z3 = staticinvoke <org.apache.xml.utils.URI: boolean isAlphanum(char)>($c3);

        if $z3 != 0 goto label18;

        $i23 = (int) $c3;

        if $i23 == 45 goto label18;

        return 0;

     label18:
        i20 = i20 + 1;

     label19:
        if i20 < $i0 goto label15;

     label20:
        return 1;
    }

    private static boolean isDigit(char)
    {
        int $i1, $i2;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 48 goto label1;

        $i2 = (int) c0;

        if $i2 > 57 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isHex(char)
    {
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0, $z1;

        c0 := @parameter0: char;

        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isDigit(char)>(c0);

        if $z0 != 0 goto label2;

        $i1 = (int) c0;

        if $i1 < 97 goto label1;

        $i2 = (int) c0;

        if $i2 <= 102 goto label2;

     label1:
        $i3 = (int) c0;

        if $i3 < 65 goto label3;

        $i4 = (int) c0;

        if $i4 > 70 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    private static boolean isAlpha(char)
    {
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 97 goto label1;

        $i2 = (int) c0;

        if $i2 <= 122 goto label2;

     label1:
        $i3 = (int) c0;

        if $i3 < 65 goto label3;

        $i4 = (int) c0;

        if $i4 > 90 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private static boolean isAlphanum(char)
    {
        char c0;
        boolean $z0, $z1, $z2;

        c0 := @parameter0: char;

        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isAlpha(char)>(c0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.xml.utils.URI: boolean isDigit(char)>(c0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private static boolean isReservedCharacter(char)
    {
        int $i1, $i2, $i4;
        char c0;
        java.lang.String $r0;
        boolean $z0;

        c0 := @parameter0: char;

        $r0 = ";/?:@&=+$,";

        $i2 = (int) c0;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>($i2);

        $i4 = (int) -1;

        if $i1 == $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isUnreservedCharacter(char)
    {
        int $i1, $i2, $i4;
        char c0;
        java.lang.String $r0;
        boolean $z0, $z1;

        c0 := @parameter0: char;

        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isAlphanum(char)>(c0);

        if $z0 != 0 goto label1;

        $r0 = "-_.!~*\'() ";

        $i2 = (int) c0;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>($i2);

        $i4 = (int) -1;

        if $i1 == $i4 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private static boolean isURIString(java.lang.String)
    {
        char $c1, $c4, $c6;
        int $i0, $i2, $i3, $i5, i7, $i8;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i7 = 0;

        goto label8;

     label2:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i8 = (int) $c1;

        if $i8 != 37 goto label5;

        $i2 = i7 + 2;

        if $i2 >= $i0 goto label3;

        $i3 = i7 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $z2 = staticinvoke <org.apache.xml.utils.URI: boolean isHex(char)>($c4);

        if $z2 == 0 goto label3;

        $i5 = i7 + 2;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        $z3 = staticinvoke <org.apache.xml.utils.URI: boolean isHex(char)>($c6);

        if $z3 != 0 goto label4;

     label3:
        return 0;

     label4:
        i7 = i7 + 2;

        goto label7;

     label5:
        $z0 = staticinvoke <org.apache.xml.utils.URI: boolean isReservedCharacter(char)>($c1);

        if $z0 != 0 goto label7;

        $z1 = staticinvoke <org.apache.xml.utils.URI: boolean isUnreservedCharacter(char)>($c1);

        if $z1 == 0 goto label6;

        goto label7;

     label6:
        return 0;

     label7:
        i7 = i7 + 1;

     label8:
        if i7 < $i0 goto label2;

        return 1;
    }

    static void <clinit>()
    {
        <org.apache.xml.utils.URI: java.lang.String USERINFO_CHARACTERS> = ";:&=+$,";

        <org.apache.xml.utils.URI: java.lang.String SCHEME_CHARACTERS> = "+-.";

        <org.apache.xml.utils.URI: java.lang.String MARK_CHARACTERS> = "-_.!~*\'() ";

        <org.apache.xml.utils.URI: java.lang.String RESERVED_CHARACTERS> = ";/?:@&=+$,";

        <org.apache.xml.utils.URI: boolean DEBUG> = 0;

        return;
    }
}
