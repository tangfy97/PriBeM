class org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$ListStyler extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle
{
    private final java.lang.String type;

    void <init>(java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$ListStyler r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$ListStyler;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$ListStyler: java.lang.String type> = r1;

        return;
    }

    public void apply(org.waveprotocol.wave.client.editor.content.ContentElement, boolean)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$ListStyler r3;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.String $r4, $r5;
        org.waveprotocol.wave.client.editor.content.CMutableDocument $r1, $r2;
        boolean z0;

        r3 := @this: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$ListStyler;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.CMutableDocument getMutableDoc()>();

        if z0 == 0 goto label1;

        $r4 = "li";

        goto label2;

     label1:
        $r4 = null;

     label2:
        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.content.CMutableDocument: void setElementAttribute(java.lang.Object,java.lang.String,java.lang.String)>(r0, "t", $r4);

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.CMutableDocument getMutableDoc()>();

        if z0 == 0 goto label3;

        $r5 = r3.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$ListStyler: java.lang.String type>;

        goto label4;

     label3:
        $r5 = null;

     label4:
        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.CMutableDocument: void setElementAttribute(java.lang.Object,java.lang.String,java.lang.String)>(r0, "listyle", $r5);

        return;
    }

    public boolean isApplied(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$ListStyler r3;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.String $r1, $r2, $r4, $r5;
        boolean $z0, $z1, $z2;

        r3 := @this: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$ListStyler;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = "li";

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getAttribute(java.lang.String)>("t");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r4 = r3.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$ListStyler: java.lang.String type>;

        $r5 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getAttribute(java.lang.String)>("listyle");

        $z1 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }
}
