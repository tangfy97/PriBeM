public class org.apache.poi.ss.formula.FormulaRenderer extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.ss.formula.FormulaRenderer r0;

        r0 := @this: org.apache.poi.ss.formula.FormulaRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook, org.apache.poi.ss.formula.ptg.Ptg[])
    {
        java.lang.IllegalStateException $r4, $r5;
        org.apache.poi.ss.formula.ptg.AttrPtg r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        org.apache.poi.ss.formula.FormulaRenderingWorkbook r10;
        java.lang.StringBuilder $r13, $r14, $r16, $r21, $r22, $r23, $r24;
        org.apache.poi.ss.formula.ptg.Ptg r6;
        org.apache.poi.ss.formula.WorkbookDependentFormula r28;
        java.lang.String[] $r7, $r18;
        java.util.Stack $r2;
        org.apache.poi.ss.formula.ptg.Ptg[] r0;
        int $i0, i1, $i2, $i3, i4;
        java.lang.String $r8, $r9, $r11, $r15, $r17, $r19, $r25, r26, r30;
        java.lang.RuntimeException $r12;
        java.lang.IllegalArgumentException $r1;
        org.apache.poi.ss.formula.ptg.OperationPtg r29;
        java.lang.Object $r3, $r20;

        r10 := @parameter0: org.apache.poi.ss.formula.FormulaRenderingWorkbook;

        r0 := @parameter1: org.apache.poi.ss.formula.ptg.Ptg[];

        if r0 == null goto label01;

        $i0 = lengthof r0;

        if $i0 != 0 goto label02;

     label01:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ptgs must not be null");

        throw $r1;

     label02:
        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        i1 = lengthof r0;

        i4 = 0;

     label03:
        if i4 >= i1 goto label14;

        r6 = r0[i4];

        $z2 = r6 instanceof org.apache.poi.ss.formula.ptg.MemAreaPtg;

        if $z2 != 0 goto label13;

        $z3 = r6 instanceof org.apache.poi.ss.formula.ptg.MemFuncPtg;

        if $z3 != 0 goto label13;

        $z4 = r6 instanceof org.apache.poi.ss.formula.ptg.MemErrPtg;

        if $z4 == 0 goto label04;

        goto label13;

     label04:
        $z5 = r6 instanceof org.apache.poi.ss.formula.ptg.ParenthesisPtg;

        if $z5 == 0 goto label05;

        $r20 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        r26 = (java.lang.String) $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r25);

        goto label13;

     label05:
        $z6 = r6 instanceof org.apache.poi.ss.formula.ptg.AttrPtg;

        if $z6 == 0 goto label10;

        r27 = (org.apache.poi.ss.formula.ptg.AttrPtg) r6;

        $z9 = virtualinvoke r27.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isOptimizedIf()>();

        if $z9 != 0 goto label13;

        $z10 = virtualinvoke r27.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isOptimizedChoose()>();

        if $z10 != 0 goto label13;

        $z11 = virtualinvoke r27.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isSkip()>();

        if $z11 == 0 goto label06;

        goto label13;

     label06:
        $z12 = virtualinvoke r27.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isSpace()>();

        if $z12 == 0 goto label07;

        goto label13;

     label07:
        $z13 = virtualinvoke r27.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isSemiVolatile()>();

        if $z13 == 0 goto label08;

        goto label13;

     label08:
        $z14 = virtualinvoke r27.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isSum()>();

        if $z14 == 0 goto label09;

        $i3 = virtualinvoke r27.<org.apache.poi.ss.formula.ptg.AttrPtg: int getNumberOfOperands()>();

        $r18 = staticinvoke <org.apache.poi.ss.formula.FormulaRenderer: java.lang.String[] getOperands(java.util.Stack,int)>($r2, $i3);

        $r19 = virtualinvoke r27.<org.apache.poi.ss.formula.ptg.AttrPtg: java.lang.String toFormulaString(java.lang.String[])>($r18);

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r19);

        goto label13;

     label09:
        $r12 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected tAttr: ");

        $r15 = virtualinvoke r27.<org.apache.poi.ss.formula.ptg.AttrPtg: java.lang.String toString()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label10:
        $z7 = r6 instanceof org.apache.poi.ss.formula.WorkbookDependentFormula;

        if $z7 == 0 goto label11;

        r28 = (org.apache.poi.ss.formula.WorkbookDependentFormula) r6;

        $r11 = interfaceinvoke r28.<org.apache.poi.ss.formula.WorkbookDependentFormula: java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook)>(r10);

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r11);

        goto label13;

     label11:
        $z8 = r6 instanceof org.apache.poi.ss.formula.ptg.OperationPtg;

        if $z8 != 0 goto label12;

        $r9 = virtualinvoke r6.<org.apache.poi.ss.formula.ptg.Ptg: java.lang.String toFormulaString()>();

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9);

        goto label13;

     label12:
        r29 = (org.apache.poi.ss.formula.ptg.OperationPtg) r6;

        $i2 = virtualinvoke r29.<org.apache.poi.ss.formula.ptg.OperationPtg: int getNumberOfOperands()>();

        $r7 = staticinvoke <org.apache.poi.ss.formula.FormulaRenderer: java.lang.String[] getOperands(java.util.Stack,int)>($r2, $i2);

        $r8 = virtualinvoke r29.<org.apache.poi.ss.formula.ptg.OperationPtg: java.lang.String toFormulaString(java.lang.String[])>($r7);

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r8);

     label13:
        i4 = i4 + 1;

        goto label03;

     label14:
        $z0 = virtualinvoke $r2.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label15;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stack underflow");

        throw $r5;

     label15:
        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        r30 = (java.lang.String) $r3;

        $z1 = virtualinvoke $r2.<java.util.Stack: boolean isEmpty()>();

        if $z1 != 0 goto label16;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("too much stuff left on the stack");

        throw $r4;

     label16:
        return r30;
    }

    private static java.lang.String[] getOperands(java.util.Stack, int)
    {
        java.lang.IllegalStateException $r13;
        java.lang.String[] r0;
        java.util.Stack r1;
        int i0, $i1, $i2, i3, $i5;
        java.lang.String $r3, $r10;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r12;

        r1 := @parameter0: java.util.Stack;

        i0 := @parameter1: int;

        r0 = newarray (java.lang.String)[i0];

        i3 = i0 - 1;

     label1:
        if i3 < 0 goto label3;

        $z0 = virtualinvoke r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too few arguments supplied to operation. Expected (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") operands but got (");

        $i1 = i0 - i3;

        $i2 = $i1 - 1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r13;

     label2:
        $r2 = virtualinvoke r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = (java.lang.String) $r2;

        r0[i3] = $r3;

        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label3:
        return r0;
    }
}
