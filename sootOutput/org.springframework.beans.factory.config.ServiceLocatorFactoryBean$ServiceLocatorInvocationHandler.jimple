class org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    final org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0;

    private void <init>(org.springframework.beans.factory.config.ServiceLocatorFactoryBean)
    {
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean r1;
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler r0;

        r0 := @this: org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler;

        r1 := @parameter0: org.springframework.beans.factory.config.ServiceLocatorFactoryBean;

        r0.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Object[] r2;
        java.lang.Integer $r11;
        int $i0;
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean $r5;
        java.lang.Boolean $r13, $r14;
        java.lang.String $r7, $r9;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3, r10, $r12;
        java.lang.StringBuilder $r4, $r8;
        java.lang.Class $r6;
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler r1;

        r1 := @this: org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler;

        r10 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

        r2 := @parameter2: java.lang.Object[];

        $z0 = staticinvoke <org.springframework.util.ReflectionUtils: boolean isEqualsMethod(java.lang.reflect.Method)>(r0);

        if $z0 == 0 goto label2;

        $r12 = r2[0];

        if r10 != $r12 goto label1;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r14;

     label1:
        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r13;

     label2:
        $z1 = staticinvoke <org.springframework.util.ReflectionUtils: boolean isHashCodeMethod(java.lang.reflect.Method)>(r0);

        if $z1 == 0 goto label3;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r10);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r11;

     label3:
        $z2 = staticinvoke <org.springframework.util.ReflectionUtils: boolean isToStringMethod(java.lang.reflect.Method)>(r0);

        if $z2 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Service locator: ");

        $r5 = r1.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0>;

        $r6 = staticinvoke <org.springframework.beans.factory.config.ServiceLocatorFactoryBean: java.lang.Class access$0(org.springframework.beans.factory.config.ServiceLocatorFactoryBean)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label4:
        $r3 = specialinvoke r1.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: java.lang.Object invokeServiceLocatorMethod(java.lang.reflect.Method,java.lang.Object[])>(r0, r2);

        return $r3;
    }

    private java.lang.Object invokeServiceLocatorMethod(java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Exception
    {
        java.lang.Object[] r3;
        java.lang.reflect.Constructor $r13, $r16;
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean $r5, $r8, $r12, $r14, $r15;
        java.lang.String $r4;
        java.lang.reflect.Method r1;
        boolean $z0;
        org.springframework.beans.BeansException $r11;
        java.lang.Exception $r17;
        java.lang.Class $r2;
        java.lang.Object $r7, $r10;
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler r0;
        org.springframework.beans.factory.ListableBeanFactory $r6, $r9;

        r0 := @this: org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler;

        r1 := @parameter0: java.lang.reflect.Method;

        r3 := @parameter1: java.lang.Object[];

        $r2 = specialinvoke r0.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: java.lang.Class getServiceLocatorMethodReturnType(java.lang.reflect.Method)>(r1);

     label1:
        $r4 = specialinvoke r0.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: java.lang.String tryGetBeanName(java.lang.Object[])>(r3);

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r4);

        if $z0 == 0 goto label3;

        $r8 = r0.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0>;

        $r9 = staticinvoke <org.springframework.beans.factory.config.ServiceLocatorFactoryBean: org.springframework.beans.factory.ListableBeanFactory access$1(org.springframework.beans.factory.config.ServiceLocatorFactoryBean)>($r8);

        $r10 = interfaceinvoke $r9.<org.springframework.beans.factory.ListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>($r4, $r2);

     label2:
        return $r10;

     label3:
        $r5 = r0.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0>;

        $r6 = staticinvoke <org.springframework.beans.factory.config.ServiceLocatorFactoryBean: org.springframework.beans.factory.ListableBeanFactory access$1(org.springframework.beans.factory.config.ServiceLocatorFactoryBean)>($r5);

        $r7 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.lang.Object beanOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>($r6, $r2);

     label4:
        return $r7;

     label5:
        $r11 := @caughtexception;

        $r12 = r0.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0>;

        $r13 = staticinvoke <org.springframework.beans.factory.config.ServiceLocatorFactoryBean: java.lang.reflect.Constructor access$2(org.springframework.beans.factory.config.ServiceLocatorFactoryBean)>($r12);

        if $r13 == null goto label6;

        $r15 = r0.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0>;

        $r14 = r0.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0>;

        $r16 = staticinvoke <org.springframework.beans.factory.config.ServiceLocatorFactoryBean: java.lang.reflect.Constructor access$2(org.springframework.beans.factory.config.ServiceLocatorFactoryBean)>($r14);

        $r17 = virtualinvoke $r15.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean: java.lang.Exception createServiceLocatorException(java.lang.reflect.Constructor,org.springframework.beans.BeansException)>($r16, $r11);

        throw $r17;

     label6:
        throw $r11;

        catch org.springframework.beans.BeansException from label1 to label2 with label5;
        catch org.springframework.beans.BeansException from label3 to label4 with label5;
    }

    private java.lang.String tryGetBeanName(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.util.Properties $r3, $r9;
        int $i0;
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean $r2, $r8;
        java.lang.Object $r5, $r6;
        java.lang.String $r4, r7;
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler r1;

        r1 := @this: org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler;

        r0 := @parameter0: java.lang.Object[];

        r7 = "";

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 1 goto label1;

        $r5 = r0[0];

        if $r5 == null goto label1;

        $r6 = r0[0];

        r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

     label1:
        $r8 = r1.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0>;

        $r9 = staticinvoke <org.springframework.beans.factory.config.ServiceLocatorFactoryBean: java.util.Properties access$3(org.springframework.beans.factory.config.ServiceLocatorFactoryBean)>($r8);

        if $r9 == null goto label2;

        $r2 = r1.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0>;

        $r3 = staticinvoke <org.springframework.beans.factory.config.ServiceLocatorFactoryBean: java.util.Properties access$3(org.springframework.beans.factory.config.ServiceLocatorFactoryBean)>($r2);

        $r4 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r7);

        if $r4 == null goto label2;

        r7 = $r4;

     label2:
        return r7;
    }

    private java.lang.Class getServiceLocatorMethodReturnType(java.lang.reflect.Method) throws java.lang.NoSuchMethodException
    {
        java.lang.UnsupportedOperationException $r8;
        java.lang.Class[] $r1;
        int $i0;
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean $r3;
        java.lang.Class $r4, $r7, $r12;
        java.lang.StringBuilder $r9, $r10;
        java.lang.String $r5, $r11;
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler r2;
        java.lang.reflect.Method r0, $r6;
        boolean $z0;

        r2 := @this: org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r3 = r2.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: org.springframework.beans.factory.config.ServiceLocatorFactoryBean this$0>;

        $r4 = staticinvoke <org.springframework.beans.factory.config.ServiceLocatorFactoryBean: java.lang.Class access$0(org.springframework.beans.factory.config.ServiceLocatorFactoryBean)>($r3);

        $r5 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r5, $r1);

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $i0 = lengthof $r1;

        if $i0 > 1 goto label1;

        $r12 = <java.lang.Void: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

     label1:
        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("May only call methods with signature \'<type> xxx()\' or \'<type> xxx(<idtype> id)\' on factory interface, but tried to call: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label2:
        return $r7;
    }

    void <init>(org.springframework.beans.factory.config.ServiceLocatorFactoryBean, org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler)
    {
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean r1;
        org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler r0, r2;

        r0 := @this: org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler;

        r1 := @parameter0: org.springframework.beans.factory.config.ServiceLocatorFactoryBean;

        r2 := @parameter1: org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler;

        specialinvoke r0.<org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler: void <init>(org.springframework.beans.factory.config.ServiceLocatorFactoryBean)>(r1);

        return;
    }
}
