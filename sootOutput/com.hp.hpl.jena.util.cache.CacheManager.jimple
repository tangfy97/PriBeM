public class com.hp.hpl.jena.util.cache.CacheManager extends java.lang.Object
{
    public static final java.lang.String RAND;
    public static final java.lang.String ENHNODECACHE;

    private void <init>()
    {
        com.hp.hpl.jena.util.cache.CacheManager r0;

        r0 := @this: com.hp.hpl.jena.util.cache.CacheManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.util.cache.Cache createCache(java.lang.String, java.lang.String, int)
    {
        com.hp.hpl.jena.util.cache.EnhancedNodeCache $r6;
        com.hp.hpl.jena.util.cache.RandCache $r8;
        java.lang.Error $r1;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String r0, $r5, r7;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("RAND");

        if $z0 == 0 goto label1;

        $r8 = new com.hp.hpl.jena.util.cache.RandCache;

        specialinvoke $r8.<com.hp.hpl.jena.util.cache.RandCache: void <init>(java.lang.String,int)>(r7, i0);

        return $r8;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ENHNODECACHE");

        if $z1 == 0 goto label2;

        $r6 = new com.hp.hpl.jena.util.cache.EnhancedNodeCache;

        specialinvoke $r6.<com.hp.hpl.jena.util.cache.EnhancedNodeCache: void <init>(java.lang.String,int)>(r7, i0);

        return $r6;

     label2:
        $r1 = new java.lang.Error;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad cache type: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.Error: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.util.cache.CacheManager: java.lang.String ENHNODECACHE> = "ENHNODECACHE";

        <com.hp.hpl.jena.util.cache.CacheManager: java.lang.String RAND> = "RAND";

        return;
    }
}
