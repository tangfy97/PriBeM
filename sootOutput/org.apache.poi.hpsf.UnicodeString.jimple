class org.apache.poi.hpsf.UnicodeString extends java.lang.Object
{
    private static final org.apache.poi.util.POILogger logger;
    private byte[] _value;

    void <init>(byte[], int)
    {
        byte[] r1, $r2, $r3;
        org.apache.poi.hpsf.IllegalPropertySetDataException $r4;
        int $i0, $i1, i2, $i3, i4, i5, i6;
        java.lang.String $r9;
        org.apache.poi.hpsf.UnicodeString r0;
        boolean $z0, z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.poi.hpsf.UnicodeString;

        r1 := @parameter0: byte[];

        i4 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i4);

        i5 = $i0;

        i6 = i4 + 4;

        $z0 = virtualinvoke r0.<org.apache.poi.hpsf.UnicodeString: boolean validLength(int,byte[],int)>($i0, r1, i6);

        if $z0 != 0 goto label2;

        z1 = 0;

        i2 = i4 % 4;

        if i2 == 0 goto label1;

        i4 = i4 + i2;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i4);

        i5 = $i3;

        i6 = i4 + 4;

        z1 = virtualinvoke r0.<org.apache.poi.hpsf.UnicodeString: boolean validLength(int,byte[],int)>($i3, r1, i6);

     label1:
        if z1 != 0 goto label2;

        $r4 = new org.apache.poi.hpsf.IllegalPropertySetDataException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UnicodeString started at offset #");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not NULL-terminated");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.poi.hpsf.IllegalPropertySetDataException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        if i5 != 0 goto label3;

        $r3 = newarray (byte)[0];

        r0.<org.apache.poi.hpsf.UnicodeString: byte[] _value> = $r3;

        return;

     label3:
        $i1 = i5 * 2;

        $r2 = staticinvoke <org.apache.poi.util.LittleEndian: byte[] getByteArray(byte[],int,int)>(r1, i6, $i1);

        r0.<org.apache.poi.hpsf.UnicodeString: byte[] _value> = $r2;

        return;
    }

    boolean validLength(int, byte[], int)
    {
        byte[] r0;
        byte $b6, $b8;
        int i0, i1, $i2, i3, $i4, $i5, $i7;
        org.apache.poi.hpsf.UnicodeString r1;

        r1 := @this: org.apache.poi.hpsf.UnicodeString;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        i1 := @parameter2: int;

        if i0 != 0 goto label1;

        return 1;

     label1:
        $i2 = i0 * 2;

        i3 = i1 + $i2;

        $i4 = lengthof r0;

        if i3 > $i4 goto label2;

        $i5 = i3 - 1;

        $b6 = r0[$i5];

        if $b6 != 0 goto label2;

        $i7 = i3 - 2;

        $b8 = r0[$i7];

        if $b8 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    int getSize()
    {
        byte[] $r1;
        int $i0, $i1;
        org.apache.poi.hpsf.UnicodeString r0;

        r0 := @this: org.apache.poi.hpsf.UnicodeString;

        $r1 = r0.<org.apache.poi.hpsf.UnicodeString: byte[] _value>;

        $i0 = lengthof $r1;

        $i1 = 4 + $i0;

        return $i1;
    }

    byte[] getValue()
    {
        byte[] $r1;
        org.apache.poi.hpsf.UnicodeString r0;

        r0 := @this: org.apache.poi.hpsf.UnicodeString;

        $r1 = r0.<org.apache.poi.hpsf.UnicodeString: byte[] _value>;

        return $r1;
    }

    java.lang.String toJavaString()
    {
        byte[] $r1, $r2, $r3;
        org.apache.poi.util.POILogger $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String $r4, $r5;
        org.apache.poi.hpsf.UnicodeString r0;

        r0 := @this: org.apache.poi.hpsf.UnicodeString;

        $r1 = r0.<org.apache.poi.hpsf.UnicodeString: byte[] _value>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.poi.hpsf.UnicodeString: byte[] _value>;

        $r2 = r0.<org.apache.poi.hpsf.UnicodeString: byte[] _value>;

        $i1 = lengthof $r2;

        $i2 = $i1 >> 1;

        $r4 = staticinvoke <org.apache.poi.util.StringUtil: java.lang.String getFromUnicodeLE(byte[],int,int)>($r3, 0, $i2);

        $i3 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(0);

        $i7 = (int) -1;

        if $i3 != $i7 goto label2;

        $r7 = <org.apache.poi.hpsf.UnicodeString: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r7.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "String terminator (\\0) for UnicodeString property value not found.Continue without trimming and hope for the best.");

        return $r4;

     label2:
        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        if $i3 == $i5 goto label3;

        $r6 = <org.apache.poi.hpsf.UnicodeString: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r6.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "String terminator (\\0) for UnicodeString property value occured before the end of string. Trimming and hope for the best.");

     label3:
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        return $r5;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hpsf/UnicodeString;");

        <org.apache.poi.hpsf.UnicodeString: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
