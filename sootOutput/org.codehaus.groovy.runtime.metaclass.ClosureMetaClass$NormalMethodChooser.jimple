class org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser extends java.lang.Object implements org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$MethodChooser
{
    private final org.codehaus.groovy.reflection.FastArray methods;
    final java.lang.Class theClass;

    void <init>(java.lang.Class, org.codehaus.groovy.reflection.FastArray)
    {
        org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser r0;
        java.lang.Class r1;
        org.codehaus.groovy.reflection.FastArray r2;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.groovy.reflection.FastArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser: java.lang.Class theClass> = r1;

        r0.<org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser: org.codehaus.groovy.reflection.FastArray methods> = r2;

        return;
    }

    public java.lang.Object chooseMethod(java.lang.Class[], boolean)
    {
        java.lang.Object[] $r5;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2, $i3, i4;
        org.codehaus.groovy.reflection.FastArray $r3, $r4, $r10, $r12;
        boolean $z0, $z1, z2;
        java.lang.Class[] r0;
        org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser r2;
        java.lang.Object $r6, $r7, r8, $r11, $r13;
        java.lang.Class $r9;

        r2 := @this: org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser;

        r0 := @parameter0: java.lang.Class[];

        z2 := @parameter1: boolean;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r12 = r2.<org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser: org.codehaus.groovy.reflection.FastArray methods>;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object chooseEmptyMethodParams(org.codehaus.groovy.reflection.FastArray)>($r12);

        return $r13;

     label1:
        $i1 = lengthof r0;

        if $i1 != 1 goto label2;

        $r9 = r0[0];

        if $r9 != null goto label2;

        $r10 = r2.<org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser: org.codehaus.groovy.reflection.FastArray methods>;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object chooseMostGeneralMethodWith1NullParam(org.codehaus.groovy.reflection.FastArray)>($r10);

        return $r11;

     label2:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser: org.codehaus.groovy.reflection.FastArray methods>;

        $i2 = virtualinvoke $r3.<org.codehaus.groovy.reflection.FastArray: int size()>();

        $r4 = r2.<org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser: org.codehaus.groovy.reflection.FastArray methods>;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i4 = 0;

     label3:
        if i4 == $i2 goto label5;

        r8 = $r5[i4];

        $z1 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean isValidMethod(java.lang.Object,java.lang.Class[])>(r8, r0);

        if $z1 == 0 goto label4;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r8);

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        return null;

     label6:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i3 != 1 goto label7;

        $r7 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        return $r7;

     label7:
        $r6 = specialinvoke r2.<org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser: java.lang.Object chooseMostSpecificParams(java.lang.String,java.util.List,java.lang.Class[])>("doCall", $r1, r0);

        return $r6;
    }

    private java.lang.Object chooseMostSpecificParams(java.lang.String, java.util.List, java.lang.Class[])
    {
        org.codehaus.groovy.reflection.CachedClass[] $r30;
        byte $b2, $b3, $b4;
        boolean $z0, $z1, $z2, $z3, $z4;
        groovy.lang.GroovyRuntimeException $r47;
        java.util.List r1;
        org.codehaus.groovy.reflection.ParameterTypes $r29, $r38;
        long $l1, l5;
        java.lang.StringBuffer $r4, $r8, $r9, $r11, $r14, $r15, $r18, $r21, $r24, $r25, $r32, $r33, $r35, $r42, $r43, $r44, $r45, $r46;
        int $i0, $i6;
        java.lang.String $r7, r10, $r12, $r16, $r20, $r22, $r34, r40;
        java.util.LinkedList $r41;
        java.util.Iterator $r2, $r26;
        org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser r5;
        java.lang.Class[] r19, $r39;
        java.lang.Class $r6;
        java.lang.Object $r28, $r36, $r37;

        r5 := @this: org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r19 := @parameter2: java.lang.Class[];

        l5 = -1L;

        $r41 = new java.util.LinkedList;

        specialinvoke $r41.<java.util.LinkedList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r37 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r38 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: org.codehaus.groovy.reflection.ParameterTypes getParameterTypes(java.lang.Object)>($r37);

        $r39 = virtualinvoke $r38.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] getNativeParameterTypes()>();

        $z2 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean parametersAreCompatible(java.lang.Class[],java.lang.Class[])>(r19, $r39);

        if $z2 != 0 goto label02;

        goto label01;

     label02:
        $l1 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: long calculateParameterDistance(java.lang.Class[],org.codehaus.groovy.reflection.ParameterTypes)>(r19, $r38);

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label03;

        return $r37;

     label03:
        $z3 = virtualinvoke $r41.<java.util.LinkedList: boolean isEmpty()>();

        if $z3 == 0 goto label04;

        virtualinvoke $r41.<java.util.LinkedList: boolean add(java.lang.Object)>($r37);

        l5 = $l1;

        goto label06;

     label04:
        $b3 = $l1 cmp l5;

        $i6 = (int) $b3;

        if $i6 >= 0 goto label05;

        l5 = $l1;

        virtualinvoke $r41.<java.util.LinkedList: void clear()>();

        virtualinvoke $r41.<java.util.LinkedList: boolean add(java.lang.Object)>($r37);

        goto label06;

     label05:
        $b4 = $l1 cmp l5;

        if $b4 != 0 goto label06;

        virtualinvoke $r41.<java.util.LinkedList: boolean add(java.lang.Object)>($r37);

     label06:
        goto label01;

     label07:
        $i0 = virtualinvoke $r41.<java.util.LinkedList: int size()>();

        if $i0 != 1 goto label08;

        $r36 = virtualinvoke $r41.<java.util.LinkedList: java.lang.Object getFirst()>();

        return $r36;

     label08:
        $z0 = virtualinvoke $r41.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        return null;

     label09:
        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ambiguous method overloading for method ");

        $r6 = r5.<org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser: java.lang.Class theClass>;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#");

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".\nCannot resolve which method to invoke for ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r20 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>(r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" due to overlapping prototypes between:");

        r40 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        $r26 = virtualinvoke $r41.<java.util.LinkedList: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r28 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        $r29 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: org.codehaus.groovy.reflection.ParameterTypes getParameterTypes(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r40);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\t");

        $r34 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>($r30);

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        r40 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label10;

     label11:
        $r47 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r47.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>(r40);

        throw $r47;
    }
}
