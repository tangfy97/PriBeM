class thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl extends java.lang.Object implements thredds.catalog2.ThreddsMetadata$GeospatialCoverage, thredds.catalog2.builder.ThreddsMetadataBuilder$GeospatialCoverageBuilder
{
    private boolean isBuilt;
    private java.net.URI defaultCrsUri;
    private java.net.URI crsUri;
    private boolean isZPositiveUp;
    private boolean isGlobal;
    private java.util.List extent;

    void <init>()
    {
        java.lang.IllegalStateException $r4;
        java.net.URISyntaxException $r3;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10;
        java.net.URI $r1, $r2;
        java.lang.String $r9, $r11;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isBuilt> = 0;

     label1:
        $r1 = new java.net.URI;

        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>("urn:x-mycrs:2D-WGS84-ellipsoid");

        r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.net.URI defaultCrsUri> = $r1;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad URI syntax for default CRS URI [");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("urn:x-mycrs:2D-WGS84-ellipsoid");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r9 = virtualinvoke $r3.<java.net.URISyntaxException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r4;

     label4:
        $r2 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.net.URI defaultCrsUri>;

        r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.net.URI crsUri> = $r2;

        return;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public void setCRS(java.net.URI)
    {
        java.lang.IllegalStateException $r3;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        java.net.URI r1, $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        r1 := @parameter0: java.net.URI;

        $z0 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Builder has been built.");

        throw $r3;

     label1:
        if r1 != null goto label2;

        $r2 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.net.URI defaultCrsUri>;

        r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.net.URI crsUri> = $r2;

     label2:
        r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.net.URI crsUri> = r1;

        return;
    }

    public java.net.URI getCRS()
    {
        java.net.URI $r1;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.net.URI crsUri>;

        return $r1;
    }

    public void setGlobal(boolean)
    {
        java.lang.IllegalStateException $r1;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        boolean $z0, z1;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        z1 := @parameter0: boolean;

        $z0 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Builder has been built.");

        throw $r1;

     label1:
        r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isGlobal> = z1;

        return;
    }

    public boolean isGlobal()
    {
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isGlobal>;

        return $z0;
    }

    public void setZPositiveUp(boolean)
    {
        java.lang.IllegalStateException $r1;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        boolean $z0, z1;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        z1 := @parameter0: boolean;

        $z0 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Builder has been built.");

        throw $r1;

     label1:
        r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isZPositiveUp> = z1;

        return;
    }

    public boolean isZPositiveUp()
    {
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isZPositiveUp>;

        return $z0;
    }

    public thredds.catalog2.builder.ThreddsMetadataBuilder$GeospatialRangeBuilder addExtentBuilder()
    {
        java.lang.IllegalStateException $r5;
        java.util.List $r1, $r3;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialRangeImpl $r2;
        boolean $z0;
        java.util.ArrayList $r4;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Builder has been built.");

        throw $r5;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.util.List extent>;

        if $r1 != null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.util.List extent> = $r4;

     label2:
        $r2 = new thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialRangeImpl;

        specialinvoke $r2.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialRangeImpl: void <init>()>();

        $r3 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.util.List extent>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $r2;
    }

    public boolean removeExtentBuilder(thredds.catalog2.builder.ThreddsMetadataBuilder$GeospatialRangeBuilder)
    {
        java.lang.IllegalStateException $r5;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialRangeImpl $r3;
        java.util.List $r2, $r4;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        thredds.catalog2.builder.ThreddsMetadataBuilder$GeospatialRangeBuilder r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        r1 := @parameter0: thredds.catalog2.builder.ThreddsMetadataBuilder$GeospatialRangeBuilder;

        $z0 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Builder has been built.");

        throw $r5;

     label1:
        if r1 != null goto label2;

        return 1;

     label2:
        $r2 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.util.List extent>;

        if $r2 != null goto label3;

        return 0;

     label3:
        $r4 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.util.List extent>;

        $r3 = (thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialRangeImpl) r1;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r3);

        return $z1;
    }

    public java.util.List getExtentBuilders()
    {
        java.lang.IllegalStateException $r6;
        java.util.ArrayList $r2;
        java.util.List $r1, $r3, $r4, $r5;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Builder has been built.");

        throw $r6;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.util.List extent>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.util.List extent>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r4;
    }

    public java.util.List getExtent()
    {
        java.lang.IllegalStateException $r6;
        java.util.ArrayList $r2;
        java.util.List $r1, $r3, $r4, $r5;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Sorry, I\'ve escaped from my Builder before being built.");

        throw $r6;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.util.List extent>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: java.util.List extent>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r4;
    }

    public boolean isBuilt()
    {
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: boolean isBuilt>;

        return $z0;
    }

    public thredds.catalog2.builder.BuilderIssues getIssues()
    {
        thredds.catalog2.builder.BuilderIssues $r0;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r1;

        r1 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        $r0 = new thredds.catalog2.builder.BuilderIssues;

        specialinvoke $r0.<thredds.catalog2.builder.BuilderIssues: void <init>()>();

        return $r0;
    }

    public thredds.catalog2.ThreddsMetadata$GeospatialCoverage build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        return r0;
    }

    public volatile java.lang.Object build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.ThreddsMetadata$GeospatialCoverage $r1;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl;

        $r1 = virtualinvoke r0.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl$GeospatialCoverageImpl: thredds.catalog2.ThreddsMetadata$GeospatialCoverage build()>();

        return $r1;
    }
}
