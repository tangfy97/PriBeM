public abstract class org.springframework.util.CachingMapDecorator extends java.lang.Object implements java.util.Map, java.io.Serializable
{
    private static java.lang.Object NULL_VALUE;
    private final java.util.Map targetMap;
    private final boolean synchronize;
    private final boolean weak;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.springframework.util.CachingMapDecorator: java.lang.Object NULL_VALUE> = $r0;

        return;
    }

    public void <init>()
    {
        org.springframework.util.CachingMapDecorator r0;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        specialinvoke r0.<org.springframework.util.CachingMapDecorator: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        java.util.AbstractMap $r2;
        java.util.Map $r1;
        org.springframework.util.CachingMapDecorator r0;
        java.util.HashMap $r4;
        java.util.WeakHashMap $r3;
        boolean z0;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 == 0 goto label1;

        $r3 = new java.util.WeakHashMap;

        $r2 = $r3;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        goto label2;

     label1:
        $r4 = new java.util.HashMap;

        $r2 = $r4;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

     label2:
        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);

        r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap> = $r1;

        r0.<org.springframework.util.CachingMapDecorator: boolean synchronize> = 1;

        r0.<org.springframework.util.CachingMapDecorator: boolean weak> = z0;

        return;
    }

    public void <init>(boolean, int)
    {
        java.util.AbstractMap $r2;
        java.util.Map $r1;
        org.springframework.util.CachingMapDecorator r0;
        int i0;
        java.util.HashMap $r4;
        java.util.WeakHashMap $r3;
        boolean z0;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 == 0 goto label1;

        $r3 = new java.util.WeakHashMap;

        $r2 = $r3;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>(int)>(i0);

        goto label2;

     label1:
        $r4 = new java.util.HashMap;

        $r2 = $r4;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>(i0);

     label2:
        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);

        r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap> = $r1;

        r0.<org.springframework.util.CachingMapDecorator: boolean synchronize> = 1;

        r0.<org.springframework.util.CachingMapDecorator: boolean weak> = z0;

        return;
    }

    public void <init>(java.util.Map)
    {
        org.springframework.util.CachingMapDecorator r0;
        java.util.Map r1;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.springframework.util.CachingMapDecorator: void <init>(java.util.Map,boolean,boolean)>(r1, 0, 0);

        return;
    }

    public void <init>(java.util.Map, boolean, boolean)
    {
        java.util.Map r1, $r2;
        org.springframework.util.CachingMapDecorator r0;
        boolean z0, z1;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        r1 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "\'targetMap\' must not be null");

        if z0 == 0 goto label1;

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>(r1);

        goto label2;

     label1:
        $r2 = r1;

     label2:
        r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap> = $r2;

        r0.<org.springframework.util.CachingMapDecorator: boolean synchronize> = z0;

        r0.<org.springframework.util.CachingMapDecorator: boolean weak> = z1;

        return;
    }

    public int size()
    {
        org.springframework.util.CachingMapDecorator r0;
        int $i0;
        java.util.Map $r1;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        $r1 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.springframework.util.CachingMapDecorator r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        $r1 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Map $r2;
        org.springframework.util.CachingMapDecorator r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.Throwable $r3;
        java.util.Map $r2;
        org.springframework.util.CachingMapDecorator r1;
        java.lang.Object r0, $r4;
        boolean $z0, $z1, $z2;

        r1 := @this: org.springframework.util.CachingMapDecorator;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r4 = r0;

        goto label2;

     label1:
        $r4 = <org.springframework.util.CachingMapDecorator: java.lang.Object NULL_VALUE>;

     label2:
        $z0 = r1.<org.springframework.util.CachingMapDecorator: boolean synchronize>;

        if $z0 == 0 goto label7;

        $r2 = r1.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        entermonitor $r2;

     label3:
        $z2 = specialinvoke r1.<org.springframework.util.CachingMapDecorator: boolean containsValueOrReference(java.lang.Object)>($r4);

        exitmonitor $r2;

     label4:
        return $z2;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r3;

     label7:
        $z1 = specialinvoke r1.<org.springframework.util.CachingMapDecorator: boolean containsValueOrReference(java.lang.Object)>($r4);

        return $z1;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean containsValueOrReference(java.lang.Object)
    {
        java.util.Iterator $r5;
        java.util.Collection $r4;
        java.lang.ref.Reference $r7;
        java.util.Map $r2, $r3;
        org.springframework.util.CachingMapDecorator r0;
        java.lang.Object r1, $r6, $r8;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r6 instanceof java.lang.ref.Reference;

        if $z1 == 0 goto label3;

        $r7 = (java.lang.ref.Reference) $r6;

        $r8 = virtualinvoke $r7.<java.lang.ref.Reference: java.lang.Object get()>();

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label2;

        return 0;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.util.Map $r2;
        org.springframework.util.CachingMapDecorator r0;
        java.lang.Object r1, $r3, $r4;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = specialinvoke r0.<org.springframework.util.CachingMapDecorator: java.lang.Object unwrapReturnValue(java.lang.Object)>($r3);

        return $r4;
    }

    private java.lang.Object unwrapReturnValue(java.lang.Object)
    {
        java.lang.ref.Reference $r2;
        org.springframework.util.CachingMapDecorator r3;
        java.lang.Object r0, $r1, r4, $r5;
        boolean $z0;

        r3 := @this: org.springframework.util.CachingMapDecorator;

        r0 := @parameter0: java.lang.Object;

        r4 = r0;

        $z0 = r0 instanceof java.lang.ref.Reference;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.ref.Reference) r0;

        r4 = virtualinvoke $r2.<java.lang.ref.Reference: java.lang.Object get()>();

     label1:
        $r1 = <org.springframework.util.CachingMapDecorator: java.lang.Object NULL_VALUE>;

        if r4 != $r1 goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r5 = r4;

     label3:
        return $r5;
    }

    public void putAll(java.util.Map)
    {
        org.springframework.util.CachingMapDecorator r0;
        java.util.Map r1, $r2;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public void clear()
    {
        org.springframework.util.CachingMapDecorator r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        $r1 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public java.util.Set keySet()
    {
        java.lang.Throwable $r10;
        java.util.Collection $r4, $r9;
        java.util.Set $r3, $r8;
        java.util.Map $r2, $r5, $r7;
        org.springframework.util.CachingMapDecorator r0;
        java.util.LinkedHashSet $r1, $r6;
        boolean $z0;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        $z0 = r0.<org.springframework.util.CachingMapDecorator: boolean synchronize>;

        if $z0 == 0 goto label5;

        $r5 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        entermonitor $r5;

     label1:
        $r6 = new java.util.LinkedHashSet;

        $r7 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = (java.util.Collection) $r8;

        specialinvoke $r6.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r9);

        exitmonitor $r5;

     label2:
        return $r6;

     label3:
        $r10 := @caughtexception;

        exitmonitor $r5;

     label4:
        throw $r10;

     label5:
        $r1 = new java.util.LinkedHashSet;

        $r2 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = (java.util.Collection) $r3;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r4);

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Collection values()
    {
        java.lang.Throwable $r4;
        java.util.Collection $r1, $r3;
        java.util.Map $r2;
        org.springframework.util.CachingMapDecorator r0;
        boolean $z0;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        $z0 = r0.<org.springframework.util.CachingMapDecorator: boolean synchronize>;

        if $z0 == 0 goto label5;

        $r2 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        entermonitor $r2;

     label1:
        $r3 = specialinvoke r0.<org.springframework.util.CachingMapDecorator: java.util.Collection valuesCopy()>();

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

     label5:
        $r1 = specialinvoke r0.<org.springframework.util.CachingMapDecorator: java.util.Collection valuesCopy()>();

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private java.util.Collection valuesCopy()
    {
        java.util.Iterator $r4;
        java.util.Collection $r3;
        java.lang.ref.Reference $r7;
        java.util.Map $r2;
        org.springframework.util.CachingMapDecorator r1;
        java.lang.Object $r5, $r6, $r8, r9, $r10;
        java.util.LinkedList $r0;
        boolean $z0, $z1;

        r1 := @this: org.springframework.util.CachingMapDecorator;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = r1.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

        goto label5;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = $r5;

        $z0 = $r5 instanceof java.lang.ref.Reference;

        if $z0 == 0 goto label2;

        $r7 = (java.lang.ref.Reference) $r5;

        $r8 = virtualinvoke $r7.<java.lang.ref.Reference: java.lang.Object get()>();

        r9 = $r8;

        if $r8 != null goto label2;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        goto label5;

     label2:
        $r6 = <org.springframework.util.CachingMapDecorator: java.lang.Object NULL_VALUE>;

        if r9 != $r6 goto label3;

        $r10 = null;

        goto label4;

     label3:
        $r10 = r9;

     label4:
        virtualinvoke $r0.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

     label5:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return $r0;
    }

    public java.util.Set entrySet()
    {
        java.lang.Throwable $r4;
        java.util.Map $r2;
        org.springframework.util.CachingMapDecorator r0;
        java.util.Set $r1, $r3;
        boolean $z0;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        $z0 = r0.<org.springframework.util.CachingMapDecorator: boolean synchronize>;

        if $z0 == 0 goto label5;

        $r2 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        entermonitor $r2;

     label1:
        $r3 = specialinvoke r0.<org.springframework.util.CachingMapDecorator: java.util.Set entryCopy()>();

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

     label5:
        $r1 = specialinvoke r0.<org.springframework.util.CachingMapDecorator: java.util.Set entryCopy()>();

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private java.util.Set entryCopy()
    {
        java.util.LinkedHashMap $r0;
        java.util.Map $r2;
        org.springframework.util.CachingMapDecorator r1;
        boolean $z0, $z1;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3, $r12;
        java.lang.ref.Reference $r10;
        java.lang.Object $r5, $r7, $r8, $r9, $r11, r13, $r14;

        r1 := @this: org.springframework.util.CachingMapDecorator;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        $r2 = r1.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label5;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r13 = $r7;

        $z0 = $r7 instanceof java.lang.ref.Reference;

        if $z0 == 0 goto label2;

        $r10 = (java.lang.ref.Reference) $r7;

        $r11 = virtualinvoke $r10.<java.lang.ref.Reference: java.lang.Object get()>();

        r13 = $r11;

        if $r11 != null goto label2;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        goto label5;

     label2:
        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = <org.springframework.util.CachingMapDecorator: java.lang.Object NULL_VALUE>;

        if r13 != $r9 goto label3;

        $r14 = null;

        goto label4;

     label3:
        $r14 = r13;

     label4:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r14);

     label5:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r12 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        return $r12;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.Map $r5;
        org.springframework.util.CachingMapDecorator r1;
        java.lang.Object r0, r2, r4, $r6, $r7;
        java.lang.ref.WeakReference $r3;
        boolean $z0;

        r1 := @this: org.springframework.util.CachingMapDecorator;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        r4 = r0;

        if r0 != null goto label1;

        r4 = <org.springframework.util.CachingMapDecorator: java.lang.Object NULL_VALUE>;

        goto label2;

     label1:
        $z0 = virtualinvoke r1.<org.springframework.util.CachingMapDecorator: boolean useWeakValue(java.lang.Object,java.lang.Object)>(r2, r0);

        if $z0 == 0 goto label2;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        r4 = $r3;

     label2:
        $r5 = r1.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4);

        $r7 = specialinvoke r1.<org.springframework.util.CachingMapDecorator: java.lang.Object unwrapReturnValue(java.lang.Object)>($r6);

        return $r7;
    }

    protected boolean useWeakValue(java.lang.Object, java.lang.Object)
    {
        org.springframework.util.CachingMapDecorator r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $z0 = r0.<org.springframework.util.CachingMapDecorator: boolean weak>;

        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.lang.ref.Reference $r6;
        java.util.Map $r2;
        org.springframework.util.CachingMapDecorator r0;
        java.lang.Object r1, $r3, $r4, $r5, r7, $r8;
        boolean $z0;

        r0 := @this: org.springframework.util.CachingMapDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = $r3;

        $z0 = $r3 instanceof java.lang.ref.Reference;

        if $z0 == 0 goto label1;

        $r6 = (java.lang.ref.Reference) $r3;

        r7 = virtualinvoke $r6.<java.lang.ref.Reference: java.lang.Object get()>();

     label1:
        if r7 != null goto label2;

        $r5 = virtualinvoke r0.<org.springframework.util.CachingMapDecorator: java.lang.Object create(java.lang.Object)>(r1);

        virtualinvoke r0.<org.springframework.util.CachingMapDecorator: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        return $r5;

     label2:
        $r4 = <org.springframework.util.CachingMapDecorator: java.lang.Object NULL_VALUE>;

        if r7 != $r4 goto label3;

        $r8 = null;

        goto label4;

     label3:
        $r8 = r7;

     label4:
        return $r8;
    }

    protected abstract java.lang.Object create(java.lang.Object);

    public java.lang.String toString()
    {
        java.util.Map $r6;
        org.springframework.util.CachingMapDecorator r1;
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r8;

        r1 := @this: org.springframework.util.CachingMapDecorator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("CachingMapDecorator [");

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]:");

        $r6 = r1.<org.springframework.util.CachingMapDecorator: java.util.Map targetMap>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
