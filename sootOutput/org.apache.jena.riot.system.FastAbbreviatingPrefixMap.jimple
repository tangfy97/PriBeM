public class org.apache.jena.riot.system.FastAbbreviatingPrefixMap extends org.apache.jena.riot.system.PrefixMapBase
{
    private java.util.Map prefixes;
    private java.util.Map prefixesView;
    private org.apache.jena.atlas.lib.Trie abbrevs;

    public void <init>()
    {
        java.util.Map $r2, $r3;
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.util.HashMap $r1;
        org.apache.jena.atlas.lib.Trie $r4;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        specialinvoke r0.<org.apache.jena.riot.system.PrefixMapBase: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes> = $r1;

        $r2 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixesView> = $r3;

        $r4 = new org.apache.jena.atlas.lib.Trie;

        specialinvoke $r4.<org.apache.jena.atlas.lib.Trie: void <init>()>();

        r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: org.apache.jena.atlas.lib.Trie abbrevs> = $r4;

        return;
    }

    public void <init>(org.apache.jena.riot.system.PrefixMap)
    {
        org.apache.jena.riot.system.PrefixMap r5;
        java.util.Map $r2, $r3;
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.util.HashMap $r1;
        org.apache.jena.atlas.lib.Trie $r4;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        r5 := @parameter0: org.apache.jena.riot.system.PrefixMap;

        specialinvoke r0.<org.apache.jena.riot.system.PrefixMapBase: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes> = $r1;

        $r2 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixesView> = $r3;

        $r4 = new org.apache.jena.atlas.lib.Trie;

        specialinvoke $r4.<org.apache.jena.atlas.lib.Trie: void <init>()>();

        r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: org.apache.jena.atlas.lib.Trie abbrevs> = $r4;

        virtualinvoke r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: void putAll(org.apache.jena.riot.system.PrefixMap)>(r5);

        return;
    }

    public java.util.Map getMapping()
    {
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        $r1 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixesView>;

        return $r1;
    }

    public void add(java.lang.String, org.apache.jena.iri.IRI)
    {
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;
        java.lang.String $r1, $r8, $r10, r11;
        org.apache.jena.iri.IRI r4, r5;
        org.apache.jena.atlas.lib.Trie $r7, $r9;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        r11 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.jena.iri.IRI;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.lang.String canonicalPrefix(java.lang.String)>(r11);

        $r2 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (org.apache.jena.iri.IRI) $r3;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label1;

        return;

     label1:
        if r4 == null goto label2;

        $r9 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: org.apache.jena.atlas.lib.Trie abbrevs>;

        $r10 = virtualinvoke r4.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.jena.atlas.lib.Trie: void remove(java.lang.String)>($r10);

     label2:
        $r6 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r5);

        $r7 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: org.apache.jena.atlas.lib.Trie abbrevs>;

        $r8 = virtualinvoke r5.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        virtualinvoke $r7.<org.apache.jena.atlas.lib.Trie: void add(java.lang.String,java.lang.Object)>($r8, $r1);

        return;
    }

    public void delete(java.lang.String)
    {
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.util.Map $r2, $r7;
        java.lang.Object $r3;
        java.lang.String $r1, $r6, r8;
        org.apache.jena.iri.IRI r4;
        org.apache.jena.atlas.lib.Trie $r5;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        r8 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.lang.String canonicalPrefix(java.lang.String)>(r8);

        $r2 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (org.apache.jena.iri.IRI) $r3;

        if r4 != null goto label1;

        return;

     label1:
        $r5 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: org.apache.jena.atlas.lib.Trie abbrevs>;

        $r6 = virtualinvoke r4.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.jena.atlas.lib.Trie: void remove(java.lang.String)>($r6);

        $r7 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public boolean contains(java.lang.String)
    {
        java.util.Map $r2;
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.lang.String $r1, r3;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.lang.String canonicalPrefix(java.lang.String)>(r3);

        $r2 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.String abbreviate(java.lang.String)
    {
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.util.Map $r2;
        org.apache.jena.atlas.lib.Pair $r3;
        java.lang.StringBuilder $r4, $r7, $r8, $r11;
        java.lang.Object $r5, $r9;
        java.lang.String r1, $r6, $r10, $r12;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $r3 = virtualinvoke r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: org.apache.jena.atlas.lib.Pair abbrev(java.util.Map,java.lang.String,boolean)>($r2, r1, 1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r9 = virtualinvoke $r3.<org.apache.jena.atlas.lib.Pair: java.lang.Object getRight()>();

        $r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public org.apache.jena.atlas.lib.Pair abbrev(java.lang.String)
    {
        java.util.Map $r2;
        org.apache.jena.atlas.lib.Pair $r3;
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.lang.String r1;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $r3 = virtualinvoke r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: org.apache.jena.atlas.lib.Pair abbrev(java.util.Map,java.lang.String,boolean)>($r2, r1, 1);

        return $r3;
    }

    protected org.apache.jena.atlas.lib.Pair abbrev(java.util.Map, java.lang.String, boolean)
    {
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.util.Map $r5, r11;
        int $i0;
        org.apache.jena.atlas.lib.Pair $r10;
        java.lang.Object $r3, $r6;
        java.lang.String r1, r4, $r8, $r9;
        org.apache.jena.atlas.lib.Trie $r2;
        org.apache.jena.iri.IRI $r7;
        boolean z0, $z1;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        r11 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: org.apache.jena.atlas.lib.Trie abbrevs>;

        $r3 = virtualinvoke $r2.<org.apache.jena.atlas.lib.Trie: java.lang.Object longestMatch(java.lang.String)>(r1);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r7 = (org.apache.jena.iri.IRI) $r6;

        $r8 = virtualinvoke $r7.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        if z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: boolean isSafeLocalPart(java.lang.String)>($r9);

        if $z1 == 0 goto label3;

     label2:
        $r10 = staticinvoke <org.apache.jena.atlas.lib.Pair: org.apache.jena.atlas.lib.Pair create(java.lang.Object,java.lang.Object)>(r4, $r9);

        return $r10;

     label3:
        return null;
    }

    public java.lang.String expand(java.lang.String)
    {
        int $i0, $i1;
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r1;
        java.lang.String r0, $r2, $r3, $r4;

        r1 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = virtualinvoke r1.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.lang.String expand(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public java.lang.String expand(java.lang.String, java.lang.String)
    {
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.String $r1, $r6, r8, $r10, r11;
        org.apache.jena.iri.IRI r4;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        r11 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.lang.String canonicalPrefix(java.lang.String)>(r11);

        $r2 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (org.apache.jena.iri.IRI) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public boolean isEmpty()
    {
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        $r1 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public int size()
    {
        int $i0;
        org.apache.jena.riot.system.FastAbbreviatingPrefixMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.jena.riot.system.FastAbbreviatingPrefixMap;

        $r1 = r0.<org.apache.jena.riot.system.FastAbbreviatingPrefixMap: java.util.Map prefixes>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }
}
