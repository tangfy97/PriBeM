public abstract class org.apache.lucene.util.InfoStream extends java.lang.Object implements java.io.Closeable, java.lang.Cloneable
{
    public static final org.apache.lucene.util.InfoStream NO_OUTPUT;
    private static org.apache.lucene.util.InfoStream defaultInfoStream;

    public void <init>()
    {
        org.apache.lucene.util.InfoStream r0;

        r0 := @this: org.apache.lucene.util.InfoStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void message(java.lang.String, java.lang.String);

    public abstract boolean isEnabled(java.lang.String);

    public static synchronized org.apache.lucene.util.InfoStream getDefault()
    {
        org.apache.lucene.util.InfoStream $r0;

        $r0 = <org.apache.lucene.util.InfoStream: org.apache.lucene.util.InfoStream defaultInfoStream>;

        return $r0;
    }

    public static synchronized void setDefault(org.apache.lucene.util.InfoStream)
    {
        org.apache.lucene.util.InfoStream r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.lucene.util.InfoStream;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot set InfoStream default implementation to null. To disable logging use InfoStream.NO_OUTPUT");

        throw $r1;

     label1:
        <org.apache.lucene.util.InfoStream: org.apache.lucene.util.InfoStream defaultInfoStream> = r0;

        return;
    }

    public org.apache.lucene.util.InfoStream clone()
    {
        org.apache.lucene.util.InfoStream r0, $r2;
        java.lang.Error $r4;
        java.lang.Object $r1;
        java.lang.CloneNotSupportedException $r3;

        r0 := @this: org.apache.lucene.util.InfoStream;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.lucene.util.InfoStream) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.util.InfoStream r0, $r1;

        r0 := @this: org.apache.lucene.util.InfoStream;

        $r1 = virtualinvoke r0.<org.apache.lucene.util.InfoStream: org.apache.lucene.util.InfoStream clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.lucene.util.InfoStream $r1;
        org.apache.lucene.util.InfoStream$NoOutput $r0;

        $r0 = new org.apache.lucene.util.InfoStream$NoOutput;

        specialinvoke $r0.<org.apache.lucene.util.InfoStream$NoOutput: void <init>(org.apache.lucene.util.InfoStream$1)>(null);

        <org.apache.lucene.util.InfoStream: org.apache.lucene.util.InfoStream NO_OUTPUT> = $r0;

        $r1 = <org.apache.lucene.util.InfoStream: org.apache.lucene.util.InfoStream NO_OUTPUT>;

        <org.apache.lucene.util.InfoStream: org.apache.lucene.util.InfoStream defaultInfoStream> = $r1;

        return;
    }
}
