public class ucar.nc2.dataset.conv.EpicInsitu extends ucar.nc2.dataset.CoordSysBuilder
{

    public void <init>()
    {
        ucar.nc2.dataset.conv.EpicInsitu r0;

        r0 := @this: ucar.nc2.dataset.conv.EpicInsitu;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.EpicInsitu: java.lang.String conventionName> = "EpicInsitu";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.List $r1;
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dataset.conv.EpicInsitu r2;
        ucar.nc2.dataset.NetcdfDataset r0;

        r2 := @this: ucar.nc2.dataset.conv.EpicInsitu;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        specialinvoke r2.<ucar.nc2.dataset.conv.EpicInsitu: void findAxes(java.util.List)>($r1);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    private void findAxes(java.util.List)
    {
        java.util.Iterator $r1;
        ucar.nc2.dataset.conv.EpicInsitu r4;
        ucar.nc2.Structure $r5;
        java.util.List r0, $r6;
        java.lang.Object $r2;
        ucar.nc2.Variable r3;
        boolean $z0, $z1;

        r4 := @this: ucar.nc2.dataset.conv.EpicInsitu;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (ucar.nc2.Variable) $r2;

        specialinvoke r4.<ucar.nc2.dataset.conv.EpicInsitu: void checkIfAxis(ucar.nc2.Variable)>(r3);

        $z1 = r3 instanceof ucar.nc2.Structure;

        if $z1 == 0 goto label2;

        $r5 = (ucar.nc2.Structure) r3;

        $r6 = virtualinvoke $r5.<ucar.nc2.Structure: java.util.List getVariables()>();

        specialinvoke r4.<ucar.nc2.dataset.conv.EpicInsitu: void findAxes(java.util.List)>($r6);

     label2:
        goto label1;

     label3:
        return;
    }

    private void checkIfAxis(ucar.nc2.Variable)
    {
        ucar.nc2.constants.AxisType $r4, $r7, $r10, $r13;
        ucar.nc2.Variable r0;
        java.lang.String $r2, $r5, $r8, $r11, $r14;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.dataset.conv.EpicInsitu r15;
        ucar.nc2.Attribute $r1, $r3, $r6, $r9, $r12;

        r15 := @this: ucar.nc2.dataset.conv.EpicInsitu;

        r0 := @parameter0: ucar.nc2.Variable;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>("axis");

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("X");

        if $z0 == 0 goto label2;

        $r12 = new ucar.nc2.Attribute;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r14 = virtualinvoke $r13.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r14);

        virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

        goto label5;

     label2:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Y");

        if $z1 == 0 goto label3;

        $r9 = new ucar.nc2.Attribute;

        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r11 = virtualinvoke $r10.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r11);

        virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        goto label5;

     label3:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Z");

        if $z2 == 0 goto label4;

        $r6 = new ucar.nc2.Attribute;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r8 = virtualinvoke $r7.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r6.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r8);

        virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r6);

        goto label5;

     label4:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("T");

        if $z3 == 0 goto label5;

        $r3 = new ucar.nc2.Attribute;

        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r5 = virtualinvoke $r4.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r5);

        virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r3);

     label5:
        return;
    }
}
