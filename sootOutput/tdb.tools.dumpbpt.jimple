public class tdb.tools.dumpbpt extends arq.cmdline.CmdGeneral
{
    tdb.cmdline.ModLocation modLocation;

    public static transient void main(java.lang.String[])
    {
        java.lang.String[] r1;
        tdb.tools.dumpbpt $r0;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <org.apache.jena.atlas.logging.Log: boolean setLog4j()>();

        $r0 = new tdb.tools.dumpbpt;

        specialinvoke $r0.<tdb.tools.dumpbpt: void <init>(java.lang.String[])>(r1);

        virtualinvoke $r0.<tdb.tools.dumpbpt: void mainRun()>();

        return;
    }

    protected void <init>(java.lang.String[])
    {
        tdb.tools.dumpbpt r0;
        tdb.cmdline.ModLocation $r2, $r3;
        java.lang.String[] r1;

        r0 := @this: tdb.tools.dumpbpt;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<arq.cmdline.CmdGeneral: void <init>(java.lang.String[])>(r1);

        $r2 = new tdb.cmdline.ModLocation;

        specialinvoke $r2.<tdb.cmdline.ModLocation: void <init>()>();

        r0.<tdb.tools.dumpbpt: tdb.cmdline.ModLocation modLocation> = $r2;

        $r3 = r0.<tdb.tools.dumpbpt: tdb.cmdline.ModLocation modLocation>;

        specialinvoke r0.<arq.cmdline.CmdGeneral: void addModule(arq.cmdline.ArgModuleGeneral)>($r3);

        return;
    }

    protected void processModulesAndArgs()
    {
        com.hp.hpl.jena.tdb.base.file.Location $r3;
        java.util.List $r4;
        tdb.tools.dumpbpt r0;
        tdb.cmdline.ModLocation $r2;
        int $i0;
        arq.cmdline.ModVersion $r1, $r5;
        boolean $z0;

        r0 := @this: tdb.tools.dumpbpt;

        $r1 = r0.<tdb.tools.dumpbpt: arq.cmdline.ModVersion modVersion>;

        $z0 = virtualinvoke $r1.<arq.cmdline.ModVersion: boolean getVersionFlag()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<tdb.tools.dumpbpt: arq.cmdline.ModVersion modVersion>;

        virtualinvoke $r5.<arq.cmdline.ModVersion: void printVersionAndExit()>();

     label1:
        $r2 = r0.<tdb.tools.dumpbpt: tdb.cmdline.ModLocation modLocation>;

        $r3 = virtualinvoke $r2.<tdb.cmdline.ModLocation: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        if $r3 != null goto label2;

        virtualinvoke r0.<tdb.tools.dumpbpt: void cmdError(java.lang.String)>("Location required");

     label2:
        $r4 = specialinvoke r0.<arq.cmdline.CmdGeneral: java.util.List getPositional()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 0 goto label3;

        virtualinvoke r0.<tdb.tools.dumpbpt: void cmdError(java.lang.String)>("No index specified");

     label3:
        return;
    }

    protected java.lang.String getSummary()
    {
        tdb.tools.dumpbpt r1;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;

        r1 := @this: tdb.tools.dumpbpt;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<tdb.tools.dumpbpt: java.lang.String getCommandName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --loc=DIR IndexName");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected java.lang.String getCommandName()
    {
        java.lang.String $r1;
        tdb.tools.dumpbpt r0;

        r0 := @this: tdb.tools.dumpbpt;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r0);

        return $r1;
    }

    protected void exec()
    {
        com.hp.hpl.jena.tdb.base.file.Location $r4;
        com.hp.hpl.jena.tdb.index.RangeIndex $r26;
        com.hp.hpl.jena.tdb.base.record.Record r15, r30, r31;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r27;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r5;
        tdb.tools.dumpbpt r2;
        java.lang.StringBuilder $r9, $r10, $r11, $r16, $r18, $r19;
        java.lang.String[] $r0, $r1;
        tdb.cmdline.ModLocation $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String r8, $r12, $r20;
        java.io.PrintStream $r17, $r21, $r22, $r24, $r25, $r28;
        java.util.Iterator $r6, $r13, $r29;
        java.lang.Object $r7, $r14, $r23;

        r2 := @this: tdb.tools.dumpbpt;

        $r0 = <com.hp.hpl.jena.tdb.sys.Names: java.lang.String[] tripleIndexes>;

        staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r1 = <com.hp.hpl.jena.tdb.sys.Names: java.lang.String[] quadIndexes>;

        staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r3 = r2.<tdb.tools.dumpbpt: tdb.cmdline.ModLocation modLocation>;

        $r4 = virtualinvoke $r3.<tdb.cmdline.ModLocation: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        $r5 = specialinvoke r2.<arq.cmdline.CmdGeneral: java.util.List getPositional()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $i0 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i0 != 3 goto label02;

        goto label04;

     label02:
        $i1 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i1 != 4 goto label03;

        goto label04;

     label03:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong length: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<tdb.tools.dumpbpt: void cmdError(java.lang.String)>($r12);

     label04:
        $i2 = virtualinvoke r8.<java.lang.String: int length()>();

        $i3 = 8 * $i2;

        $i4 = <com.hp.hpl.jena.tdb.sys.SystemTDB: int BlockReadCacheSize>;

        $i5 = <com.hp.hpl.jena.tdb.sys.SystemTDB: int BlockWriteCacheSize>;

        $r26 = staticinvoke <com.hp.hpl.jena.tdb.store.bulkloader2.IndexFactory: com.hp.hpl.jena.tdb.index.RangeIndex openBPT(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,int,int,int,int)>($r4, r8, $i4, $i5, $i3, 0);

        $r27 = (com.hp.hpl.jena.tdb.index.bplustree.BPlusTree) $r26;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("---- Index contents");

        $r29 = virtualinvoke $r27.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: java.util.Iterator iterator()>();

        $z3 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label05;

        $r25 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("<<Empty>>");

     label05:
        $z4 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r23 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (com.hp.hpl.jena.tdb.base.record.Record) $r23;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <tdb.tools.dumpbpt: void printRecord(java.lang.String,java.io.PrintStream,com.hp.hpl.jena.tdb.base.record.Record,int)>("", $r24, r30, $i2);

        goto label05;

     label06:
        $r13 = virtualinvoke $r27.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: java.util.Iterator iterator()>();

        r31 = null;

        i6 = 0;

     label07:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.hp.hpl.jena.tdb.base.record.Record) $r14;

        i6 = i6 + 1;

        if r31 == null goto label08;

        $z2 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: boolean keyLT(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r31, r15);

        if $z2 != 0 goto label08;

        $r17 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key error@ ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r21 = <java.lang.System: java.io.PrintStream err>;

        staticinvoke <tdb.tools.dumpbpt: void printRecord(java.lang.String,java.io.PrintStream,com.hp.hpl.jena.tdb.base.record.Record,int)>("  ", $r21, r31, $i2);

        $r22 = <java.lang.System: java.io.PrintStream err>;

        staticinvoke <tdb.tools.dumpbpt: void printRecord(java.lang.String,java.io.PrintStream,com.hp.hpl.jena.tdb.base.record.Record,int)>("  ", $r22, r15, $i2);

     label08:
        r31 = r15;

        goto label07;

     label09:
        goto label01;

     label10:
        return;
    }

    private static void printRecord(java.lang.String, java.io.PrintStream, com.hp.hpl.jena.tdb.base.record.Record, int)
    {
        java.io.PrintStream r3;
        byte[] $r1, $r5;
        java.lang.Object[] $r4;
        byte $b3;
        com.hp.hpl.jena.tdb.base.record.Record r0;
        int i0, $i1, i2, $i4, i5, i6, $i7;
        java.lang.String r2;
        java.lang.Byte $r6;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.PrintStream;

        r0 := @parameter2: com.hp.hpl.jena.tdb.base.record.Record;

        i0 := @parameter3: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] getKey()>();

        $i1 = lengthof $r1;

        i2 = $i1 / i0;

        if r2 == null goto label1;

        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>(r2);

     label1:
        i5 = 0;

     label2:
        if i5 >= i0 goto label6;

        if i5 == 0 goto label3;

        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>(" ");

     label3:
        $i4 = i5 * i2;

        i6 = $i4;

     label4:
        $i7 = $i4 + i2;

        if i6 >= $i7 goto label5;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] getKey()>();

        $b3 = $r5[i6];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r4[0] = $r6;

        virtualinvoke r3.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%02x", $r4);

        i6 = i6 + 1;

        goto label4;

     label5:
        i5 = i5 + 1;

        goto label2;

     label6:
        virtualinvoke r3.<java.io.PrintStream: void println()>();

        return;
    }
}
