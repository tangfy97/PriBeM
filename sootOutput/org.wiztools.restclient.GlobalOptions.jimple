public final class org.wiztools.restclient.GlobalOptions extends java.lang.Object implements org.wiztools.restclient.IGlobalOptions
{
    private static final java.util.logging.Logger LOG;
    public static final java.lang.Integer DEFAULT_TIMEOUT_MILLIS;
    private static final java.io.File CONF_PROPERTY;
    private final java.util.Properties prop;
    java.util.concurrent.locks.Lock lock;
    private int requestTimeoutInMillis;

    public int getRequestTimeoutInMillis()
    {
        int $i0;
        org.wiztools.restclient.GlobalOptions r0;

        r0 := @this: org.wiztools.restclient.GlobalOptions;

        $i0 = r0.<org.wiztools.restclient.GlobalOptions: int requestTimeoutInMillis>;

        return $i0;
    }

    public void setRequestTimeoutInMillis(int)
    {
        int i0;
        org.wiztools.restclient.GlobalOptions r0;

        r0 := @this: org.wiztools.restclient.GlobalOptions;

        i0 := @parameter0: int;

        r0.<org.wiztools.restclient.GlobalOptions: int requestTimeoutInMillis> = i0;

        return;
    }

    public void <init>()
    {
        java.util.logging.Level $r12;
        java.lang.Thread $r15;
        org.wiztools.restclient.GlobalOptions r0;
        boolean $z0, $z1;
        java.util.Properties $r1, $r3, $r8;
        java.util.concurrent.locks.ReentrantLock $r2;
        org.wiztools.restclient.GlobalOptions$1 $r16;
        java.lang.Runtime $r14;
        java.io.IOException $r11;
        java.io.FileInputStream $r6;
        java.util.logging.Logger $r9, $r13;
        java.io.File $r4, $r5, $r7, $r10;

        r0 := @this: org.wiztools.restclient.GlobalOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Properties;

        specialinvoke $r1.<java.util.Properties: void <init>()>();

        r0.<org.wiztools.restclient.GlobalOptions: java.util.Properties prop> = $r1;

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.wiztools.restclient.GlobalOptions: java.util.concurrent.locks.Lock lock> = $r2;

        $r3 = r0.<org.wiztools.restclient.GlobalOptions: java.util.Properties prop>;

        virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("request-timeout-in-millis", "60000");

        $r4 = <org.wiztools.restclient.GlobalOptions: java.io.File CONF_DIR>;

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r9 = <org.wiztools.restclient.GlobalOptions: java.util.logging.Logger LOG>;

        virtualinvoke $r9.<java.util.logging.Logger: void info(java.lang.String)>("Configuration directory does not exist. Creating...");

        $r10 = <org.wiztools.restclient.GlobalOptions: java.io.File CONF_DIR>;

        virtualinvoke $r10.<java.io.File: boolean mkdir()>();

     label1:
        $r5 = <org.wiztools.restclient.GlobalOptions: java.io.File CONF_PROPERTY>;

        $z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label5;

     label2:
        $r8 = r0.<org.wiztools.restclient.GlobalOptions: java.util.Properties prop>;

        $r6 = new java.io.FileInputStream;

        $r7 = <org.wiztools.restclient.GlobalOptions: java.io.File CONF_PROPERTY>;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r7);

        virtualinvoke $r8.<java.util.Properties: void load(java.io.InputStream)>($r6);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r13 = <org.wiztools.restclient.GlobalOptions: java.util.logging.Logger LOG>;

        $r12 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r13.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r12, "Failed loading default properties!", $r11);

     label5:
        $r14 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r15 = new java.lang.Thread;

        $r16 = new org.wiztools.restclient.GlobalOptions$1;

        specialinvoke $r16.<org.wiztools.restclient.GlobalOptions$1: void <init>(org.wiztools.restclient.GlobalOptions)>(r0);

        specialinvoke $r15.<java.lang.Thread: void <init>(java.lang.Runnable)>($r16);

        virtualinvoke $r14.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r15);

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void setProperty(java.lang.String, java.lang.String)
    {
        java.util.Properties $r2;
        java.lang.String r1, r3;
        org.wiztools.restclient.GlobalOptions r0;

        r0 := @this: org.wiztools.restclient.GlobalOptions;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        if r3 != null goto label1;

        r3 = "";

     label1:
        $r2 = r0.<org.wiztools.restclient.GlobalOptions: java.util.Properties prop>;

        virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r1, r3);

        return;
    }

    public void removeProperty(java.lang.String)
    {
        java.lang.String r1;
        java.util.Properties $r2;
        org.wiztools.restclient.GlobalOptions r0;

        r0 := @this: org.wiztools.restclient.GlobalOptions;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.wiztools.restclient.GlobalOptions: java.util.Properties prop>;

        virtualinvoke $r2.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String getProperty(java.lang.String)
    {
        java.util.Properties $r2;
        java.lang.String r1, $r3;
        org.wiztools.restclient.GlobalOptions r0;

        r0 := @this: org.wiztools.restclient.GlobalOptions;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.wiztools.restclient.GlobalOptions: java.util.Properties prop>;

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public boolean isPropertyTrue(java.lang.String)
    {
        java.util.Properties $r2;
        java.lang.String r1, $r3;
        org.wiztools.restclient.GlobalOptions r0;
        boolean $z0;

        r0 := @this: org.wiztools.restclient.GlobalOptions;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.wiztools.restclient.GlobalOptions: java.util.Properties prop>;

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r3 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r3);

        return $z0;

     label1:
        return 0;
    }

    public void writeProperties()
    {
        java.util.Properties $r3;
        java.io.FileOutputStream $r0;
        java.io.IOException $r4;
        java.util.logging.Logger $r6;
        java.io.File $r1;
        org.wiztools.restclient.GlobalOptions r2;
        java.util.logging.Level $r5;

        r2 := @this: org.wiztools.restclient.GlobalOptions;

     label1:
        $r0 = new java.io.FileOutputStream;

        $r1 = <org.wiztools.restclient.GlobalOptions: java.io.File CONF_PROPERTY>;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        $r3 = r2.<org.wiztools.restclient.GlobalOptions: java.util.Properties prop>;

        virtualinvoke $r3.<java.util.Properties: void store(java.io.OutputStream,java.lang.String)>($r0, "RESTClient Properties");

        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <org.wiztools.restclient.GlobalOptions: java.util.logging.Logger LOG>;

        $r5 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r5, "Error writing to properties!", $r4);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void acquire()
    {
        java.util.concurrent.locks.Lock $r1;
        org.wiztools.restclient.GlobalOptions r0;

        r0 := @this: org.wiztools.restclient.GlobalOptions;

        $r1 = r0.<org.wiztools.restclient.GlobalOptions: java.util.concurrent.locks.Lock lock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

        return;
    }

    public void release()
    {
        java.util.concurrent.locks.Lock $r1;
        org.wiztools.restclient.GlobalOptions r0;

        r0 := @this: org.wiztools.restclient.GlobalOptions;

        $r1 = r0.<org.wiztools.restclient.GlobalOptions: java.util.concurrent.locks.Lock lock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;
    }

    static void <clinit>()
    {
        int $i1;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        java.lang.Integer $r6;
        java.io.File $r5, $r7;

        $r0 = class "Lorg/wiztools/restclient/GlobalOptions;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.wiztools.restclient.GlobalOptions: java.util.logging.Logger LOG> = $r2;

        $r6 = new java.lang.Integer;

        $i1 = (int) 60000;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i1);

        <org.wiztools.restclient.GlobalOptions: java.lang.Integer DEFAULT_TIMEOUT_MILLIS> = $r6;

        $r7 = new java.io.File;

        $r5 = <org.wiztools.restclient.GlobalOptions: java.io.File CONF_DIR>;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "rest-client.properties");

        <org.wiztools.restclient.GlobalOptions: java.io.File CONF_PROPERTY> = $r7;

        return;
    }
}
