final class com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10 extends com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$PcdataImpl
{

    transient void <init>(java.lang.Class, javax.xml.namespace.QName[])
    {
        java.lang.Class r1;
        javax.xml.namespace.QName[] r2;
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10 r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: javax.xml.namespace.QName[];

        specialinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$PcdataImpl: void <init>(java.lang.Class,javax.xml.namespace.QName[])>(r1, r2);

        return;
    }

    public javax.activation.DataHandler parse(java.lang.CharSequence)
    {
        byte[] $r3;
        java.lang.CharSequence r0;
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10 r8;
        com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data $r6;
        javax.activation.DataHandler $r1, $r7;
        com.sun.istack.ByteArrayDataSource $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r4;
        java.lang.String $r5;
        boolean $z0;

        r8 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10;

        r0 := @parameter0: java.lang.CharSequence;

        $z0 = r0 instanceof com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data;

        if $z0 == 0 goto label1;

        $r6 = (com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data) r0;

        $r7 = virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data: javax.activation.DataHandler getDataHandler()>();

        return $r7;

     label1:
        $r1 = new javax.activation.DataHandler;

        $r2 = new com.sun.istack.ByteArrayDataSource;

        $r3 = staticinvoke <com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl: byte[] access$100(java.lang.CharSequence)>(r0);

        $r4 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getInstance()>();

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String getXMIMEContentType()>();

        specialinvoke $r2.<com.sun.istack.ByteArrayDataSource: void <init>(byte[],java.lang.String)>($r3, $r5);

        specialinvoke $r1.<javax.activation.DataHandler: void <init>(javax.activation.DataSource)>($r2);

        return $r1;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data print(javax.activation.DataHandler)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data $r0;
        javax.activation.DataHandler r1;
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10 r2;

        r2 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10;

        r1 := @parameter0: javax.activation.DataHandler;

        $r0 = new com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data;

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data: void <init>()>();

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data: void set(javax.activation.DataHandler)>(r1);

        return $r0;
    }

    public volatile com.sun.xml.bind.v2.runtime.output.Pcdata print(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10 r0;
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data $r3;
        javax.activation.DataHandler $r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.activation.DataHandler) r1;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10: com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data print(javax.activation.DataHandler)>($r2);

        return $r3;
    }

    public volatile java.lang.Object parse(java.lang.CharSequence) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException
    {
        java.lang.CharSequence r1;
        javax.activation.DataHandler $r2;
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10 r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10: javax.activation.DataHandler parse(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.CharSequence print(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10 r0;
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data $r3;
        javax.activation.DataHandler $r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.activation.DataHandler) r1;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10: com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data print(javax.activation.DataHandler)>($r2);

        return $r3;
    }
}
