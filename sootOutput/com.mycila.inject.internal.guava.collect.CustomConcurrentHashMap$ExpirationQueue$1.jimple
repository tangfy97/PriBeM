class com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1 extends com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$AbstractReferenceEntry
{
    com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable;
    com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable;
    final com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue this$0;

    void <init>(com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue)
    {
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue r1;
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue;

        r0.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$AbstractReferenceEntry: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable> = r0;

        r0.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable> = r0;

        return;
    }

    public long getExpirationTime()
    {
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1;

        return 9223372036854775807L;
    }

    public void setExpirationTime(long)
    {
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1 r0;
        long l0;

        r0 := @this: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1;

        l0 := @parameter0: long;

        return;
    }

    public com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable()
    {
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1 r0;
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable>;

        return $r1;
    }

    public void setNextExpirable(com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1 r0;
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry;

        r0.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable> = r1;

        return;
    }

    public com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable()
    {
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1 r0;
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable>;

        return $r1;
    }

    public void setPreviousExpirable(com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1 r0;
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry;

        r0.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ExpirationQueue$1: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable> = r1;

        return;
    }
}
