public class com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry extends java.lang.Object
{
    private static com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry globalRegistry;
    private java.util.List registry;

    private void <init>()
    {
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry r0;
        java.util.ArrayList $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: java.util.List registry> = $r1;

        return;
    }

    private static synchronized com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry standardRegistry()
    {
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry $r0;
        com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosureFactory $r1;

        $r0 = new com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: void <init>()>();

        $r1 = new com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosureFactory;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosureFactory: void <init>()>();

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: void add(com.hp.hpl.jena.sparql.core.describe.DescribeHandlerFactory)>($r1);

        return $r0;
    }

    public static com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry get(com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry $r4;
        java.lang.Object $r3;
        com.hp.hpl.jena.sparql.util.Context r0, $r1;
        com.hp.hpl.jena.sparql.util.Symbol $r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r2 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol registryDescribeHandlers>;

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r2);

        $r4 = (com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry) $r3;

        return $r4;
    }

    public static void set(com.hp.hpl.jena.sparql.util.Context, com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry)
    {
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry r1;
        com.hp.hpl.jena.sparql.util.Symbol $r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry;

        $r2 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol registryDescribeHandlers>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Context: void set(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r2, r1);

        return;
    }

    public static com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry get()
    {
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry $r1, $r2, r4;
        com.hp.hpl.jena.sparql.util.Context $r0, $r3;

        $r0 = staticinvoke <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry get(com.hp.hpl.jena.sparql.util.Context)>($r0);

        r4 = $r1;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry standardRegistry()>();

        r4 = $r2;

        $r3 = staticinvoke <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Context getContext()>();

        staticinvoke <com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: void set(com.hp.hpl.jena.sparql.util.Context,com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry)>($r3, $r2);

     label1:
        return r4;
    }

    public void add(com.hp.hpl.jena.sparql.core.describe.DescribeHandlerFactory)
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerFactory r1;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerFactory;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: java.util.List registry>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(0, r1);

        return;
    }

    public void remove(com.hp.hpl.jena.sparql.core.describe.DescribeHandlerFactory)
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerFactory r1;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerFactory;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: java.util.List registry>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void clear()
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: java.util.List registry>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public java.util.List newHandlerList()
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandler $r6;
        java.util.ArrayList $r0;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry r1;
        int $i0;
        java.lang.Object $r4;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerFactory r5;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: java.util.List registry>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: java.util.Iterator handlers()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.sparql.core.describe.DescribeHandlerFactory) $r4;

        $r6 = interfaceinvoke r5.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerFactory: com.hp.hpl.jena.sparql.core.describe.DescribeHandler create()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r0;
    }

    public java.util.Iterator handlers()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: java.util.List registry>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry globalRegistry> = null;

        return;
    }
}
