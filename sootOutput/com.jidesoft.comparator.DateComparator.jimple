public class com.jidesoft.comparator.DateComparator extends java.lang.Object implements java.util.Comparator
{
    private static com.jidesoft.comparator.DateComparator singleton;

    protected void <init>()
    {
        com.jidesoft.comparator.DateComparator r0;

        r0 := @this: com.jidesoft.comparator.DateComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.jidesoft.comparator.DateComparator getInstance()
    {
        com.jidesoft.comparator.DateComparator $r0, $r1, $r2;

        $r0 = <com.jidesoft.comparator.DateComparator: com.jidesoft.comparator.DateComparator singleton>;

        if $r0 != null goto label1;

        $r2 = new com.jidesoft.comparator.DateComparator;

        specialinvoke $r2.<com.jidesoft.comparator.DateComparator: void <init>()>();

        <com.jidesoft.comparator.DateComparator: com.jidesoft.comparator.DateComparator singleton> = $r2;

     label1:
        $r1 = <com.jidesoft.comparator.DateComparator: com.jidesoft.comparator.DateComparator singleton>;

        return $r1;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        com.jidesoft.comparator.DateComparator r29;
        java.util.Date r27, r28;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r4, $r7, $r8, $r11, $r15, $r18, $r22, $r25, $r30, $r32, $r34;
        java.lang.ClassCastException $r31, $r33, $r35;
        int $i1, $i3;
        java.lang.String $r6, $r10, $r12, $r17, $r19, $r24, $r26;
        java.lang.Object r0, r1;
        java.lang.Class $r5, $r9, $r16, $r23;

        r29 := @this: com.jidesoft.comparator.DateComparator;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != null goto label2;

        $i1 = (int) -1;

        return $i1;

     label2:
        if r1 != null goto label3;

        return 1;

     label3:
        $z0 = r0 instanceof java.util.Date;

        if $z0 == 0 goto label7;

        $z2 = r1 instanceof java.util.Date;

        if $z2 == 0 goto label6;

        r27 = (java.util.Date) r0;

        r28 = (java.util.Date) r1;

        $z3 = virtualinvoke r27.<java.util.Date: boolean before(java.util.Date)>(r28);

        if $z3 == 0 goto label4;

        $i3 = (int) -1;

        return $i3;

     label4:
        $z4 = virtualinvoke r27.<java.util.Date: boolean equals(java.lang.Object)>(r28);

        if $z4 == 0 goto label5;

        return 0;

     label5:
        return 1;

     label6:
        $r31 = new java.lang.ClassCastException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The first argument of this method was not a Date but ");

        $r23 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.ClassCastException: void <init>(java.lang.String)>($r26);

        throw $r31;

     label7:
        $z1 = r1 instanceof java.util.Date;

        if $z1 == 0 goto label8;

        $r33 = new java.lang.ClassCastException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The second argument of this method was not a Date but ");

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.ClassCastException: void <init>(java.lang.String)>($r19);

        throw $r33;

     label8:
        $r35 = new java.lang.ClassCastException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Both arguments of this method were not Dates. They are ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.ClassCastException: void <init>(java.lang.String)>($r12);

        throw $r35;
    }

    static void <clinit>()
    {
        <com.jidesoft.comparator.DateComparator: com.jidesoft.comparator.DateComparator singleton> = null;

        return;
    }
}
