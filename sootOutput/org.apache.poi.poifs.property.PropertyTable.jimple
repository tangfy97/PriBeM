public final class org.apache.poi.poifs.property.PropertyTable extends org.apache.poi.poifs.property.PropertyTableBase implements org.apache.poi.poifs.storage.BlockWritable
{
    private org.apache.poi.poifs.common.POIFSBigBlockSize _bigBigBlockSize;
    private org.apache.poi.poifs.storage.BlockWritable[] _blocks;

    public void <init>(org.apache.poi.poifs.storage.HeaderBlock)
    {
        org.apache.poi.poifs.property.PropertyTable r0;
        org.apache.poi.poifs.storage.HeaderBlock r1;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r2;

        r0 := @this: org.apache.poi.poifs.property.PropertyTable;

        r1 := @parameter0: org.apache.poi.poifs.storage.HeaderBlock;

        specialinvoke r0.<org.apache.poi.poifs.property.PropertyTableBase: void <init>(org.apache.poi.poifs.storage.HeaderBlock)>(r1);

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSize()>();

        r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.common.POIFSBigBlockSize _bigBigBlockSize> = $r2;

        r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.storage.BlockWritable[] _blocks> = null;

        return;
    }

    public void <init>(org.apache.poi.poifs.storage.HeaderBlock, org.apache.poi.poifs.storage.RawDataBlockList) throws java.io.IOException
    {
        org.apache.poi.poifs.property.PropertyTable r0;
        java.util.List $r4;
        org.apache.poi.poifs.storage.RawDataBlockList r2;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r5;
        int $i0, $i2;
        org.apache.poi.poifs.storage.ListManagedBlock[] $r3;
        org.apache.poi.poifs.storage.HeaderBlock r1;

        r0 := @this: org.apache.poi.poifs.property.PropertyTable;

        r1 := @parameter0: org.apache.poi.poifs.storage.HeaderBlock;

        r2 := @parameter1: org.apache.poi.poifs.storage.RawDataBlockList;

        $i0 = virtualinvoke r1.<org.apache.poi.poifs.storage.HeaderBlock: int getPropertyStart()>();

        $i2 = (int) -1;

        $r3 = virtualinvoke r2.<org.apache.poi.poifs.storage.RawDataBlockList: org.apache.poi.poifs.storage.ListManagedBlock[] fetchBlocks(int,int)>($i0, $i2);

        $r4 = staticinvoke <org.apache.poi.poifs.property.PropertyFactory: java.util.List convertToProperties(org.apache.poi.poifs.storage.ListManagedBlock[])>($r3);

        specialinvoke r0.<org.apache.poi.poifs.property.PropertyTableBase: void <init>(org.apache.poi.poifs.storage.HeaderBlock,java.util.List)>(r1, $r4);

        $r5 = virtualinvoke r1.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSize()>();

        r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.common.POIFSBigBlockSize _bigBigBlockSize> = $r5;

        r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.storage.BlockWritable[] _blocks> = null;

        return;
    }

    public void preWrite()
    {
        java.lang.Object[] $r4;
        org.apache.poi.poifs.property.Property $r9, $r10;
        org.apache.poi.poifs.property.PropertyTable r0;
        org.apache.poi.poifs.property.Property[] $r3, r5;
        int $i0, $i1, $i2, i3, i4;
        org.apache.poi.poifs.storage.BlockWritable[] $r8;
        java.util.List $r1, $r2, $r6;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r7;

        r0 := @this: org.apache.poi.poifs.property.PropertyTable;

        $r2 = r0.<org.apache.poi.poifs.property.PropertyTable: java.util.List _properties>;

        $r1 = r0.<org.apache.poi.poifs.property.PropertyTable: java.util.List _properties>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (org.apache.poi.poifs.property.Property)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        r5 = (org.apache.poi.poifs.property.Property[]) $r4;

        i3 = 0;

     label1:
        $i1 = lengthof r5;

        if i3 >= $i1 goto label2;

        $r10 = r5[i3];

        virtualinvoke $r10.<org.apache.poi.poifs.property.Property: void setIndex(int)>(i3);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r7 = r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.common.POIFSBigBlockSize _bigBigBlockSize>;

        $r6 = r0.<org.apache.poi.poifs.property.PropertyTable: java.util.List _properties>;

        $r8 = staticinvoke <org.apache.poi.poifs.storage.PropertyBlock: org.apache.poi.poifs.storage.BlockWritable[] createPropertyBlockArray(org.apache.poi.poifs.common.POIFSBigBlockSize,java.util.List)>($r7, $r6);

        r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.storage.BlockWritable[] _blocks> = $r8;

        i4 = 0;

     label3:
        $i2 = lengthof r5;

        if i4 >= $i2 goto label4;

        $r9 = r5[i4];

        virtualinvoke $r9.<org.apache.poi.poifs.property.Property: void preWrite()>();

        i4 = i4 + 1;

        goto label3;

     label4:
        return;
    }

    public int countBlocks()
    {
        org.apache.poi.poifs.property.PropertyTable r0;
        org.apache.poi.poifs.storage.BlockWritable[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.poi.poifs.property.PropertyTable;

        $r1 = r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.storage.BlockWritable[] _blocks>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.storage.BlockWritable[] _blocks>;

        $i0 = lengthof $r2;

     label2:
        return $i0;
    }

    public void writeBlocks(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r4;
        org.apache.poi.poifs.storage.BlockWritable[] $r1, $r2, $r3;
        org.apache.poi.poifs.storage.BlockWritable $r5;
        org.apache.poi.poifs.property.PropertyTable r0;
        int $i0, i1;

        r0 := @this: org.apache.poi.poifs.property.PropertyTable;

        r4 := @parameter0: java.io.OutputStream;

        $r1 = r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.storage.BlockWritable[] _blocks>;

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $r2 = r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.storage.BlockWritable[] _blocks>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r0.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.storage.BlockWritable[] _blocks>;

        $r5 = $r3[i1];

        interfaceinvoke $r5.<org.apache.poi.poifs.storage.BlockWritable: void writeBlocks(java.io.OutputStream)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
