public class org.codehaus.groovy.antlr.treewalker.NodeCollector extends org.codehaus.groovy.antlr.treewalker.VisitorAdapter
{
    private java.util.List nodes;

    public void <init>()
    {
        org.codehaus.groovy.antlr.treewalker.NodeCollector r0;
        java.util.ArrayList $r1;

        r0 := @this: org.codehaus.groovy.antlr.treewalker.NodeCollector;

        specialinvoke r0.<org.codehaus.groovy.antlr.treewalker.VisitorAdapter: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.antlr.treewalker.NodeCollector: java.util.List nodes> = $r1;

        return;
    }

    public java.util.List getNodes()
    {
        java.util.List $r1;
        org.codehaus.groovy.antlr.treewalker.NodeCollector r0;

        r0 := @this: org.codehaus.groovy.antlr.treewalker.NodeCollector;

        $r1 = r0.<org.codehaus.groovy.antlr.treewalker.NodeCollector: java.util.List nodes>;

        return $r1;
    }

    public void visitDefault(org.codehaus.groovy.antlr.GroovySourceAST, int)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r1;
        java.util.List $r2;
        int i0;
        org.codehaus.groovy.antlr.treewalker.NodeCollector r0;

        r0 := @this: org.codehaus.groovy.antlr.treewalker.NodeCollector;

        r1 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $r2 = r0.<org.codehaus.groovy.antlr.treewalker.NodeCollector: java.util.List nodes>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }
}
