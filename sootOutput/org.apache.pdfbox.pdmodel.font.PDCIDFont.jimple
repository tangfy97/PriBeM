public abstract class org.apache.pdfbox.pdmodel.font.PDCIDFont extends org.apache.pdfbox.pdmodel.font.PDSimpleFont
{
    private static final org.apache.commons.logging.Log log;
    private java.util.Map widthCache;
    private long defaultWidth;

    public void <init>()
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache> = null;

        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: long defaultWidth> = 0L;

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        org.apache.pdfbox.cos.COSDictionary r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r1);

        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache> = null;

        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: long defaultWidth> = 0L;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: void extractWidths()>();

        return;
    }

    public org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox() throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r1;
        java.lang.RuntimeException $r0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("getFontBoundingBox(): Not yet implemented");

        throw $r0;
    }

    public long getDefaultWidth()
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        org.apache.pdfbox.cos.COSName $r1;
        long $l0, $l3, $l4;
        org.apache.pdfbox.cos.COSDictionary $r2;
        byte $b1;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.cos.COSNumber r4;
        int $i2;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        $l0 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: long defaultWidth>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.cos.COSDictionary font>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DW>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSNumber) $r3;

        if r4 == null goto label1;

        $i2 = virtualinvoke r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>();

        $l3 = (long) $i2;

        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: long defaultWidth> = $l3;

        goto label2;

     label1:
        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: long defaultWidth> = 1000L;

     label2:
        $l4 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: long defaultWidth>;

        return $l4;
    }

    public void setDefaultWidth(long)
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSDictionary $r2;
        long l0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        l0 := @parameter0: long;

        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: long defaultWidth> = l0;

        $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.cos.COSDictionary font>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DW>;

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setLong(org.apache.pdfbox.cos.COSName,long)>($r1, l0);

        return;
    }

    public float getFontWidth(byte[], int, int) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        byte[] r1;
        java.lang.Float r5;
        long $l0;
        java.lang.Integer $r3;
        java.util.Map $r2;
        int i1, i2, $i3;
        float f0;
        java.lang.Object $r4;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $l0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: long getDefaultWidth()>();

        f0 = (float) $l0;

        $i3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: int getCodeFromArray(byte[],int,int)>(r1, i1, i2);

        $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.lang.Float) $r4;

        if r5 == null goto label1;

        f0 = virtualinvoke r5.<java.lang.Float: float floatValue()>();

     label1:
        return f0;
    }

    private void extractWidths()
    {
        java.lang.Float $r13, $r17;
        java.lang.Integer $r12, $r16;
        org.apache.pdfbox.cos.COSNumber r8, r19, r20, r21;
        java.util.Map $r1, $r11, $r15;
        boolean $z0;
        org.apache.pdfbox.cos.COSDictionary $r4;
        org.apache.pdfbox.cos.COSBase $r5, $r7, $r9, $r10, $r14;
        float $f0, $f1;
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        org.apache.pdfbox.cos.COSArray r6, r18;
        java.util.HashMap $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        org.apache.pdfbox.cos.COSName $r3;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache>;

        if $r1 != null goto label7;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache> = $r2;

        $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.cos.COSDictionary font>;

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName W>;

        $r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3);

        r6 = (org.apache.pdfbox.cos.COSArray) $r5;

        if r6 == null goto label7;

        $i0 = virtualinvoke r6.<org.apache.pdfbox.cos.COSArray: int size()>();

        i7 = 0;

     label1:
        if i7 >= $i0 goto label7;

        i8 = i7 + 1;

        $r7 = virtualinvoke r6.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i7);

        r8 = (org.apache.pdfbox.cos.COSNumber) $r7;

        i7 = i8 + 1;

        $r9 = virtualinvoke r6.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i8);

        $z0 = $r9 instanceof org.apache.pdfbox.cos.COSArray;

        if $z0 == 0 goto label4;

        r18 = (org.apache.pdfbox.cos.COSArray) $r9;

        $i4 = virtualinvoke r8.<org.apache.pdfbox.cos.COSNumber: int intValue()>();

        $i5 = virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: int size()>();

        i9 = 0;

     label2:
        if i9 >= $i5 goto label3;

        $r14 = virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i9);

        r19 = (org.apache.pdfbox.cos.COSNumber) $r14;

        $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache>;

        $i6 = $i4 + i9;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $f1 = virtualinvoke r19.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

        i9 = i9 + 1;

        goto label2;

     label3:
        goto label6;

     label4:
        r20 = (org.apache.pdfbox.cos.COSNumber) $r9;

        $i1 = i7;

        i7 = i7 + 1;

        $r10 = virtualinvoke r6.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i1);

        r21 = (org.apache.pdfbox.cos.COSNumber) $r10;

        $i2 = virtualinvoke r8.<org.apache.pdfbox.cos.COSNumber: int intValue()>();

        $i3 = virtualinvoke r20.<org.apache.pdfbox.cos.COSNumber: int intValue()>();

        $f0 = virtualinvoke r21.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        i10 = $i2;

     label5:
        if i10 > $i3 goto label6;

        $r11 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);

        i10 = i10 + 1;

        goto label5;

     label6:
        goto label1;

     label7:
        return;
    }

    public float getFontHeight(byte[], int, int) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        byte[] r2;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor $r1;
        byte $b0, $b1, $b2, $b3, $b6;
        int i4, i5;
        float $f0, $f1, $f2, f3;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        r2 := @parameter0: byte[];

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>();

        $f0 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getXHeight()>();

        $f1 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getCapHeight()>();

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $b3 = $f1 cmpl 0.0F;

        if $b3 == 0 goto label1;

        $f2 = $f0 + $f1;

        f3 = $f2 / 2.0F;

        goto label4;

     label1:
        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label2;

        f3 = $f0;

        goto label4;

     label2:
        $b2 = $f1 cmpl 0.0F;

        if $b2 == 0 goto label3;

        f3 = $f1;

        goto label4;

     label3:
        f3 = 0.0F;

     label4:
        $b6 = f3 cmpl 0.0F;

        if $b6 != 0 goto label5;

        f3 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getAscent()>();

     label5:
        return f3;
    }

    public float getAverageFontWidth() throws java.io.IOException
    {
        byte $b1, $b3;
        org.apache.pdfbox.cos.COSNumber r6, r10, r12;
        boolean $z0;
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSBase $r3, $r5, $r7, $r8, $r9;
        float f0, $f1, $f2, $f3, $f4, f5, f6, f7;
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        org.apache.pdfbox.cos.COSArray r4, r11;
        long $l0;
        int $i2, $i4, i5, i6, i7, $i8, $i9;
        org.apache.pdfbox.cos.COSName $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        f5 = 0.0F;

        f6 = 0.0F;

        $l0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: long getDefaultWidth()>();

        f0 = (float) $l0;

        $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.cos.COSDictionary font>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName W>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r4 == null goto label6;

        i5 = 0;

     label1:
        $i2 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i5 >= $i2 goto label6;

        i6 = i5 + 1;

        $r5 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i5);

        r6 = (org.apache.pdfbox.cos.COSNumber) $r5;

        $r7 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i6);

        $z0 = $r7 instanceof org.apache.pdfbox.cos.COSArray;

        if $z0 == 0 goto label4;

        r11 = (org.apache.pdfbox.cos.COSArray) $r7;

        i7 = 0;

     label2:
        $i4 = virtualinvoke r11.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i7 >= $i4 goto label3;

        $r9 = virtualinvoke r11.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i7);

        r10 = (org.apache.pdfbox.cos.COSNumber) $r9;

        $f4 = virtualinvoke r10.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        f5 = f5 + $f4;

        f6 = f6 + 1.0F;

        i7 = i7 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        i6 = i6 + 1;

        $r8 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i6);

        r12 = (org.apache.pdfbox.cos.COSNumber) $r8;

        $f2 = virtualinvoke r12.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        $b3 = $f2 cmpl 0.0F;

        $i8 = (int) $b3;

        if $i8 <= 0 goto label5;

        $f3 = virtualinvoke r12.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        f5 = f5 + $f3;

        f6 = f6 + 1.0F;

     label5:
        i5 = i6 + 1;

        goto label1;

     label6:
        $f1 = f5 / f6;

        f7 = $f1;

        $b1 = $f1 cmpg 0.0F;

        $i9 = (int) $b1;

        if $i9 > 0 goto label7;

        f7 = f0;

     label7:
        return f7;
    }

    public float getFontWidth(int)
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        java.lang.Float $r6;
        long $l0;
        java.lang.Integer $r2, $r4;
        java.util.Map $r1, $r3;
        int i1;
        float f0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        i1 := @parameter0: int;

        $l0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: long getDefaultWidth()>();

        f0 = (float) $l0;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (java.lang.Float) $r5;

        f0 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

     label1:
        return f0;
    }

    private java.lang.String getCIDSystemInfo()
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        int $i0;
        java.lang.String $r6, $r8, r16;
        org.apache.pdfbox.cos.COSName $r1, $r5, $r7, $r9;
        org.apache.pdfbox.cos.COSDictionary $r2, r4;
        org.apache.pdfbox.cos.COSBase $r3;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        r16 = null;

        $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.cos.COSDictionary font>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CIDSYSTEMINFO>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSDictionary) $r3;

        if r4 == null goto label1;

        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ORDERING>;

        $r6 = virtualinvoke r4.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r5);

        $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName REGISTRY>;

        $r8 = virtualinvoke r4.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r7);

        $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUPPLEMENT>;

        $i0 = virtualinvoke r4.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r16;
    }

    protected void determineEncoding()
    {
        java.util.Map $r34;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8, $r11, $r13, $r14, $r15, $r19, $r21, $r22, $r23, $r27, $r29, $r30, $r31;
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        java.lang.Throwable $r25;
        int $i0;
        java.lang.String $r1, $r3, $r9, $r16, $r24, $r32, r33;
        java.io.IOException $r26;
        org.apache.fontbox.cmap.CMap $r17, $r18, $r36, $r37;
        org.apache.commons.logging.Log $r12, $r20, $r28;
        java.lang.Object $r35;
        java.io.InputStream $r10, r38;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        $r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.lang.String getCIDSystemInfo()>();

        if $r1 == null goto label13;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("Identity");

        if $z0 == 0 goto label01;

        r33 = "Identity-H";

        goto label03;

     label01:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("Adobe-UCS-");

        if $z1 == 0 goto label02;

        r33 = "Adobe-Identity-UCS";

        goto label03;

     label02:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>("-");

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-UCS2");

        r33 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r34 = <org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map cmapObjects>;

        $r35 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>(r33);

        $r36 = (org.apache.fontbox.cmap.CMap) $r35;

        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.fontbox.cmap.CMap cmap> = $r36;

        $r37 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.fontbox.cmap.CMap cmap>;

        if $r37 != null goto label14;

        r38 = null;

     label04:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org/apache/pdfbox/resources/cmap/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <org.apache.pdfbox.util.ResourceLoader: java.io.InputStream loadResource(java.lang.String)>($r9);

        r38 = $r10;

        if $r10 == null goto label05;

        $r17 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.fontbox.cmap.CMap parseCmap(java.lang.String,java.io.InputStream)>("org/apache/pdfbox/resources/cmap/", $r10);

        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.fontbox.cmap.CMap cmap> = $r17;

        $r18 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.fontbox.cmap.CMap cmap>;

        if $r18 != null goto label06;

        $r20 = <org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.commons.logging.Log log>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Could not parse predefined CMAP file for \'");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r24);

        goto label06;

     label05:
        $r12 = <org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.commons.logging.Log log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Debug: \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' isn\'t a predefined CMap, most likely it\'s embedded in the pdf itself.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label06:
        goto label15;

     label07:
        goto label12;

     label08:
        $r26 := @caughtexception;

        $r28 = <org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.commons.logging.Log log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Could not find predefined CMAP file for \'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r32);

        goto label16;

     label09:
        goto label12;

     label10:
        $r25 := @caughtexception;

        goto label17;

     label11:
        throw $r25;

     label12:
        goto label14;

     label13:
        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: void determineEncoding()>();

     label14:
        return;

     label15:
        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>($r10);

        goto label07;

     label16:
        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>(r38);

        goto label09;

     label17:
        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>(r38);

        goto label11;

        catch java.io.IOException from label04 to label06 with label08;
        catch java.lang.Throwable from label04 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.lang.String encode(byte[], int, int) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        byte[] r2;
        org.apache.fontbox.cmap.CMap $r1, $r3;
        int i0, i1, $i2;
        java.lang.String r4;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.fontbox.cmap.CMap cmap>;

        if $r1 == null goto label1;

        $i2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: int getCodeFromArray(byte[],int,int)>(r2, i0, i1);

        $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.fontbox.cmap.CMap cmap>;

        r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.lang.String cmapEncoding(int,int,boolean,org.apache.fontbox.cmap.CMap)>($i2, i1, 1, $r3);

        goto label2;

     label1:
        r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: java.lang.String encode(byte[],int,int)>(r2, i0, i1);

     label2:
        return r4;
    }

    public void clear()
    {
        org.apache.pdfbox.pdmodel.font.PDCIDFont r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFont;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: void clear()>();

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widthCache> = null;

     label1:
        return;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/font/PDCIDFont;");

        <org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.commons.logging.Log log> = $r0;

        return;
    }
}
