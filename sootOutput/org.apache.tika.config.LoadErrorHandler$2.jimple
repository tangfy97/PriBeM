final class org.apache.tika.config.LoadErrorHandler$2 extends java.lang.Object implements org.apache.tika.config.LoadErrorHandler
{

    void <init>()
    {
        org.apache.tika.config.LoadErrorHandler$2 r0;

        r0 := @this: org.apache.tika.config.LoadErrorHandler$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void handleLoadError(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r7;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r3;
        org.apache.tika.config.LoadErrorHandler$2 r8;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String r0, $r6;

        r8 := @this: org.apache.tika.config.LoadErrorHandler$2;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Throwable;

        $r1 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(r0);

        $r3 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r6, r7);

        return;
    }
}
