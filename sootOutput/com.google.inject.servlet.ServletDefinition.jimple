class com.google.inject.servlet.ServletDefinition extends java.lang.Object implements com.google.inject.spi.ProviderWithExtensionVisitor
{
    private final java.lang.String pattern;
    private final com.google.inject.Key servletKey;
    private final com.google.inject.servlet.UriPatternMatcher patternMatcher;
    private final java.util.Map initParams;
    private final javax.servlet.http.HttpServlet servletInstance;
    private final java.util.concurrent.atomic.AtomicReference httpServlet;

    public void <init>(java.lang.String, com.google.inject.Key, com.google.inject.servlet.UriPatternMatcher, java.util.Map, javax.servlet.http.HttpServlet)
    {
        javax.servlet.http.HttpServlet r8;
        com.google.inject.servlet.ServletDefinition r0;
        com.google.inject.Key r3;
        java.util.HashMap $r5;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.util.Map r6, $r7;
        java.lang.String r2;
        com.google.inject.servlet.UriPatternMatcher r4;

        r0 := @this: com.google.inject.servlet.ServletDefinition;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: com.google.inject.Key;

        r4 := @parameter2: com.google.inject.servlet.UriPatternMatcher;

        r6 := @parameter3: java.util.Map;

        r8 := @parameter4: javax.servlet.http.HttpServlet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r0.<com.google.inject.servlet.ServletDefinition: java.util.concurrent.atomic.AtomicReference httpServlet> = $r1;

        r0.<com.google.inject.servlet.ServletDefinition: java.lang.String pattern> = r2;

        r0.<com.google.inject.servlet.ServletDefinition: com.google.inject.Key servletKey> = r3;

        r0.<com.google.inject.servlet.ServletDefinition: com.google.inject.servlet.UriPatternMatcher patternMatcher> = r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>(r6);

        $r7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r5);

        r0.<com.google.inject.servlet.ServletDefinition: java.util.Map initParams> = $r7;

        r0.<com.google.inject.servlet.ServletDefinition: javax.servlet.http.HttpServlet servletInstance> = r8;

        return;
    }

    public com.google.inject.servlet.ServletDefinition get()
    {
        com.google.inject.servlet.ServletDefinition r0;

        r0 := @this: com.google.inject.servlet.ServletDefinition;

        return r0;
    }

    public java.lang.Object acceptExtensionVisitor(com.google.inject.spi.BindingTargetVisitor, com.google.inject.spi.ProviderInstanceBinding)
    {
        com.google.inject.spi.BindingTargetVisitor r0;
        com.google.inject.Key $r7;
        com.google.inject.spi.ProviderInstanceBinding r1;
        java.util.Map $r9, $r16;
        com.google.inject.servlet.LinkedServletBindingImpl $r5;
        java.lang.String $r8, $r15;
        boolean $z0;
        javax.servlet.http.HttpServlet $r4, $r14;
        com.google.inject.servlet.ServletModuleTargetVisitor $r10, $r17;
        com.google.inject.servlet.ServletDefinition r3;
        java.lang.Object $r2, $r11, $r18;
        com.google.inject.servlet.InstanceServletBindingImpl $r12;
        com.google.inject.servlet.UriPatternMatcher $r6, $r13;

        r3 := @this: com.google.inject.servlet.ServletDefinition;

        r0 := @parameter0: com.google.inject.spi.BindingTargetVisitor;

        r1 := @parameter1: com.google.inject.spi.ProviderInstanceBinding;

        $z0 = r0 instanceof com.google.inject.servlet.ServletModuleTargetVisitor;

        if $z0 == 0 goto label2;

        $r4 = r3.<com.google.inject.servlet.ServletDefinition: javax.servlet.http.HttpServlet servletInstance>;

        if $r4 == null goto label1;

        $r17 = (com.google.inject.servlet.ServletModuleTargetVisitor) r0;

        $r12 = new com.google.inject.servlet.InstanceServletBindingImpl;

        $r16 = r3.<com.google.inject.servlet.ServletDefinition: java.util.Map initParams>;

        $r15 = r3.<com.google.inject.servlet.ServletDefinition: java.lang.String pattern>;

        $r14 = r3.<com.google.inject.servlet.ServletDefinition: javax.servlet.http.HttpServlet servletInstance>;

        $r13 = r3.<com.google.inject.servlet.ServletDefinition: com.google.inject.servlet.UriPatternMatcher patternMatcher>;

        specialinvoke $r12.<com.google.inject.servlet.InstanceServletBindingImpl: void <init>(java.util.Map,java.lang.String,javax.servlet.http.HttpServlet,com.google.inject.servlet.UriPatternMatcher)>($r16, $r15, $r14, $r13);

        $r18 = interfaceinvoke $r17.<com.google.inject.servlet.ServletModuleTargetVisitor: java.lang.Object visit(com.google.inject.servlet.InstanceServletBinding)>($r12);

        return $r18;

     label1:
        $r10 = (com.google.inject.servlet.ServletModuleTargetVisitor) r0;

        $r5 = new com.google.inject.servlet.LinkedServletBindingImpl;

        $r9 = r3.<com.google.inject.servlet.ServletDefinition: java.util.Map initParams>;

        $r8 = r3.<com.google.inject.servlet.ServletDefinition: java.lang.String pattern>;

        $r7 = r3.<com.google.inject.servlet.ServletDefinition: com.google.inject.Key servletKey>;

        $r6 = r3.<com.google.inject.servlet.ServletDefinition: com.google.inject.servlet.UriPatternMatcher patternMatcher>;

        specialinvoke $r5.<com.google.inject.servlet.LinkedServletBindingImpl: void <init>(java.util.Map,java.lang.String,com.google.inject.Key,com.google.inject.servlet.UriPatternMatcher)>($r9, $r8, $r7, $r6);

        $r11 = interfaceinvoke $r10.<com.google.inject.servlet.ServletModuleTargetVisitor: java.lang.Object visit(com.google.inject.servlet.LinkedServletBinding)>($r5);

        return $r11;

     label2:
        $r2 = interfaceinvoke r0.<com.google.inject.spi.BindingTargetVisitor: java.lang.Object visit(com.google.inject.spi.ProviderInstanceBinding)>(r1);

        return $r2;
    }

    boolean shouldServe(java.lang.String)
    {
        com.google.inject.servlet.ServletDefinition r0;
        java.lang.String r1;
        com.google.inject.servlet.UriPatternMatcher $r2;
        boolean $z0;

        r0 := @this: com.google.inject.servlet.ServletDefinition;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.inject.servlet.ServletDefinition: com.google.inject.servlet.UriPatternMatcher patternMatcher>;

        $z0 = interfaceinvoke $r2.<com.google.inject.servlet.UriPatternMatcher: boolean matches(java.lang.String)>(r1);

        return $z0;
    }

    public void init(javax.servlet.ServletContext, com.google.inject.Injector, java.util.Set) throws javax.servlet.ServletException
    {
        com.google.inject.servlet.ServletDefinition$1 $r9;
        javax.servlet.ServletException $r11;
        com.google.inject.Key $r2, $r4, $r14;
        java.util.concurrent.atomic.AtomicReference $r7;
        java.lang.String $r17;
        boolean $z0, $z1;
        javax.servlet.http.HttpServlet r6;
        com.google.inject.servlet.ServletDefinition r1;
        java.util.Set r8;
        com.google.inject.Binding $r3;
        com.google.inject.Injector r0;
        java.lang.Object $r5;
        javax.servlet.ServletContext r10;
        java.lang.StringBuilder $r12, $r13, $r15, $r16;

        r1 := @this: com.google.inject.servlet.ServletDefinition;

        r10 := @parameter0: javax.servlet.ServletContext;

        r0 := @parameter1: com.google.inject.Injector;

        r8 := @parameter2: java.util.Set;

        $r2 = r1.<com.google.inject.servlet.ServletDefinition: com.google.inject.Key servletKey>;

        $r3 = interfaceinvoke r0.<com.google.inject.Injector: com.google.inject.Binding getBinding(com.google.inject.Key)>($r2);

        $z0 = staticinvoke <com.google.inject.Scopes: boolean isSingleton(com.google.inject.Binding)>($r3);

        if $z0 != 0 goto label1;

        $r11 = new javax.servlet.ServletException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Servlets must be bound as singletons. ");

        $r14 = r1.<com.google.inject.servlet.ServletDefinition: com.google.inject.Key servletKey>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was not bound in singleton scope.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<javax.servlet.ServletException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label1:
        $r4 = r1.<com.google.inject.servlet.ServletDefinition: com.google.inject.Key servletKey>;

        $r5 = interfaceinvoke r0.<com.google.inject.Injector: java.lang.Object getInstance(com.google.inject.Key)>($r4);

        r6 = (javax.servlet.http.HttpServlet) $r5;

        $r7 = r1.<com.google.inject.servlet.ServletDefinition: java.util.concurrent.atomic.AtomicReference httpServlet>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r6);

        $z1 = interfaceinvoke r8.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return;

     label2:
        $r9 = new com.google.inject.servlet.ServletDefinition$1;

        specialinvoke $r9.<com.google.inject.servlet.ServletDefinition$1: void <init>(com.google.inject.servlet.ServletDefinition,javax.servlet.ServletContext)>(r1, r10);

        virtualinvoke r6.<javax.servlet.http.HttpServlet: void init(javax.servlet.ServletConfig)>($r9);

        interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>(r6);

        return;
    }

    public void destroy(java.util.Set)
    {
        java.lang.Throwable $r5;
        javax.servlet.http.HttpServlet r3;
        com.google.inject.servlet.ServletDefinition r0;
        java.util.Set r4;
        java.lang.Object $r2;
        java.util.concurrent.atomic.AtomicReference $r1;
        boolean $z0;

        r0 := @this: com.google.inject.servlet.ServletDefinition;

        r4 := @parameter0: java.util.Set;

        $r1 = r0.<com.google.inject.servlet.ServletDefinition: java.util.concurrent.atomic.AtomicReference httpServlet>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r3 = (javax.servlet.http.HttpServlet) $r2;

        if null == r3 goto label1;

        $z0 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        virtualinvoke r3.<javax.servlet.http.HttpServlet: void destroy()>();

     label3:
        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3);

        goto label6;

     label4:
        $r5 := @caughtexception;

     label5:
        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3);

        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean service(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.ServletRequest r0;
        com.google.inject.servlet.ServletDefinition r5;
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.ServletResponse r6;
        int $i0;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;

        r5 := @this: com.google.inject.servlet.ServletDefinition;

        r0 := @parameter0: javax.servlet.ServletRequest;

        r6 := @parameter1: javax.servlet.ServletResponse;

        r1 = (javax.servlet.http.HttpServletRequest) r0;

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r3 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getContextPath()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = virtualinvoke r5.<com.google.inject.servlet.ServletDefinition: boolean shouldServe(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        virtualinvoke r5.<com.google.inject.servlet.ServletDefinition: void doService(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r6);

     label1:
        return $z0;
    }

    void doService(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.ServletRequest r2;
        javax.servlet.http.HttpServlet $r7;
        com.google.inject.servlet.ServletDefinition r1;
        com.google.inject.servlet.ServletDefinition$2 $r0;
        java.util.concurrent.atomic.AtomicReference $r4;
        javax.servlet.http.HttpServletRequest $r3;
        javax.servlet.ServletResponse r6;
        java.lang.Object $r5;

        r1 := @this: com.google.inject.servlet.ServletDefinition;

        r2 := @parameter0: javax.servlet.ServletRequest;

        r6 := @parameter1: javax.servlet.ServletResponse;

        $r0 = new com.google.inject.servlet.ServletDefinition$2;

        $r3 = (javax.servlet.http.HttpServletRequest) r2;

        specialinvoke $r0.<com.google.inject.servlet.ServletDefinition$2: void <init>(com.google.inject.servlet.ServletDefinition,javax.servlet.http.HttpServletRequest,javax.servlet.ServletRequest)>(r1, $r3, r2);

        $r4 = r1.<com.google.inject.servlet.ServletDefinition: java.util.concurrent.atomic.AtomicReference httpServlet>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r7 = (javax.servlet.http.HttpServlet) $r5;

        virtualinvoke $r7.<javax.servlet.http.HttpServlet: void service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>($r0, r6);

        return;
    }

    java.lang.String getKey()
    {
        com.google.inject.Key $r1;
        java.lang.String $r2;
        com.google.inject.servlet.ServletDefinition r0;

        r0 := @this: com.google.inject.servlet.ServletDefinition;

        $r1 = r0.<com.google.inject.servlet.ServletDefinition: com.google.inject.Key servletKey>;

        $r2 = virtualinvoke $r1.<com.google.inject.Key: java.lang.String toString()>();

        return $r2;
    }

    java.lang.String getPattern()
    {
        java.lang.String $r1;
        com.google.inject.servlet.ServletDefinition r0;

        r0 := @this: com.google.inject.servlet.ServletDefinition;

        $r1 = r0.<com.google.inject.servlet.ServletDefinition: java.lang.String pattern>;

        return $r1;
    }

    public volatile java.lang.Object get()
    {
        com.google.inject.servlet.ServletDefinition r0, $r1;

        r0 := @this: com.google.inject.servlet.ServletDefinition;

        $r1 = virtualinvoke r0.<com.google.inject.servlet.ServletDefinition: com.google.inject.servlet.ServletDefinition get()>();

        return $r1;
    }

    static com.google.inject.Key access$000(com.google.inject.servlet.ServletDefinition)
    {
        com.google.inject.Key $r1;
        com.google.inject.servlet.ServletDefinition r0;

        r0 := @parameter0: com.google.inject.servlet.ServletDefinition;

        $r1 = r0.<com.google.inject.servlet.ServletDefinition: com.google.inject.Key servletKey>;

        return $r1;
    }

    static java.util.Map access$100(com.google.inject.servlet.ServletDefinition)
    {
        com.google.inject.servlet.ServletDefinition r0;
        java.util.Map $r1;

        r0 := @parameter0: com.google.inject.servlet.ServletDefinition;

        $r1 = r0.<com.google.inject.servlet.ServletDefinition: java.util.Map initParams>;

        return $r1;
    }

    static com.google.inject.servlet.UriPatternMatcher access$200(com.google.inject.servlet.ServletDefinition)
    {
        com.google.inject.servlet.UriPatternMatcher $r1;
        com.google.inject.servlet.ServletDefinition r0;

        r0 := @parameter0: com.google.inject.servlet.ServletDefinition;

        $r1 = r0.<com.google.inject.servlet.ServletDefinition: com.google.inject.servlet.UriPatternMatcher patternMatcher>;

        return $r1;
    }
}
