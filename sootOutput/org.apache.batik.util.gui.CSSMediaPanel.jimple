public class org.apache.batik.util.gui.CSSMediaPanel extends javax.swing.JPanel implements org.apache.batik.util.gui.resource.ActionMap
{
    protected static final java.lang.String RESOURCES;
    protected static java.util.ResourceBundle bundle;
    protected static org.apache.batik.util.resources.ResourceManager resources;
    protected javax.swing.JButton removeButton;
    protected javax.swing.JButton addButton;
    protected javax.swing.JButton clearButton;
    protected javax.swing.DefaultListModel listModel;
    protected javax.swing.JList mediaList;
    protected java.util.Map listeners;

    public void <init>()
    {
        org.apache.batik.util.gui.resource.ButtonFactory $r28;
        javax.swing.border.Border $r10, $r25;
        org.apache.batik.util.gui.CSSMediaPanel$MediaListDataListener $r22;
        java.util.Map $r5, $r7, $r9;
        javax.swing.border.TitledBorder $r13;
        org.apache.batik.util.gui.CSSMediaPanel$RemoveButtonAction $r6;
        org.apache.batik.util.gui.CSSMediaPanel$MediaListSelectionListener $r20;
        org.apache.batik.util.gui.CSSMediaPanel$ClearButtonAction $r8;
        java.awt.GridBagLayout $r1;
        org.apache.batik.util.gui.CSSMediaPanel$AddButtonAction $r4;
        java.awt.Insets $r15;
        java.util.HashMap $r3;
        java.util.ResourceBundle $r29;
        org.apache.batik.util.gui.CSSMediaPanel r0;
        java.lang.String $r12;
        javax.swing.JButton $r30, $r31, $r32, $r33, $r34, $r35;
        javax.swing.JList $r16, $r17, $r19, $r21, $r27;
        javax.swing.JScrollPane $r24;
        javax.swing.DefaultListModel $r2, $r18, $r23;
        org.apache.batik.util.gui.ExtendedGridBagConstraints $r14;
        org.apache.batik.util.resources.ResourceManager $r11;
        javax.swing.JViewport $r26;

        r0 := @this: org.apache.batik.util.gui.CSSMediaPanel;

        $r1 = new java.awt.GridBagLayout;

        specialinvoke $r1.<java.awt.GridBagLayout: void <init>()>();

        specialinvoke r0.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r1);

        $r2 = new javax.swing.DefaultListModel;

        specialinvoke $r2.<javax.swing.DefaultListModel: void <init>()>();

        r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.util.gui.CSSMediaPanel: java.util.Map listeners> = $r3;

        $r5 = r0.<org.apache.batik.util.gui.CSSMediaPanel: java.util.Map listeners>;

        $r4 = new org.apache.batik.util.gui.CSSMediaPanel$AddButtonAction;

        specialinvoke $r4.<org.apache.batik.util.gui.CSSMediaPanel$AddButtonAction: void <init>(org.apache.batik.util.gui.CSSMediaPanel)>(r0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AddButtonAction", $r4);

        $r7 = r0.<org.apache.batik.util.gui.CSSMediaPanel: java.util.Map listeners>;

        $r6 = new org.apache.batik.util.gui.CSSMediaPanel$RemoveButtonAction;

        specialinvoke $r6.<org.apache.batik.util.gui.CSSMediaPanel$RemoveButtonAction: void <init>(org.apache.batik.util.gui.CSSMediaPanel)>(r0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("RemoveButtonAction", $r6);

        $r9 = r0.<org.apache.batik.util.gui.CSSMediaPanel: java.util.Map listeners>;

        $r8 = new org.apache.batik.util.gui.CSSMediaPanel$ClearButtonAction;

        specialinvoke $r8.<org.apache.batik.util.gui.CSSMediaPanel$ClearButtonAction: void <init>(org.apache.batik.util.gui.CSSMediaPanel)>(r0);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ClearButtonAction", $r8);

        $r10 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        $r11 = <org.apache.batik.util.gui.CSSMediaPanel: org.apache.batik.util.resources.ResourceManager resources>;

        $r12 = virtualinvoke $r11.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Panel.title");

        $r13 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String)>($r10, $r12);

        virtualinvoke r0.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r13);

        $r14 = new org.apache.batik.util.gui.ExtendedGridBagConstraints;

        specialinvoke $r14.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void <init>()>();

        $r15 = new java.awt.Insets;

        specialinvoke $r15.<java.awt.Insets: void <init>(int,int,int,int)>(5, 5, 5, 5);

        $r14.<java.awt.GridBagConstraints: java.awt.Insets insets> = $r15;

        $r16 = new javax.swing.JList;

        specialinvoke $r16.<javax.swing.JList: void <init>()>();

        r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JList mediaList> = $r16;

        $r17 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JList mediaList>;

        virtualinvoke $r17.<javax.swing.JList: void setSelectionMode(int)>(0);

        $r19 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JList mediaList>;

        $r18 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel>;

        virtualinvoke $r19.<javax.swing.JList: void setModel(javax.swing.ListModel)>($r18);

        $r21 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JList mediaList>;

        $r20 = new org.apache.batik.util.gui.CSSMediaPanel$MediaListSelectionListener;

        specialinvoke $r20.<org.apache.batik.util.gui.CSSMediaPanel$MediaListSelectionListener: void <init>(org.apache.batik.util.gui.CSSMediaPanel)>(r0);

        virtualinvoke $r21.<javax.swing.JList: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r20);

        $r23 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel>;

        $r22 = new org.apache.batik.util.gui.CSSMediaPanel$MediaListDataListener;

        specialinvoke $r22.<org.apache.batik.util.gui.CSSMediaPanel$MediaListDataListener: void <init>(org.apache.batik.util.gui.CSSMediaPanel)>(r0);

        virtualinvoke $r23.<javax.swing.AbstractListModel: void addListDataListener(javax.swing.event.ListDataListener)>($r22);

        $r24 = new javax.swing.JScrollPane;

        specialinvoke $r24.<javax.swing.JScrollPane: void <init>()>();

        $r25 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLoweredBevelBorder()>();

        virtualinvoke $r24.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r25);

        $r14.<java.awt.GridBagConstraints: double weightx> = 1.0;

        $r14.<java.awt.GridBagConstraints: double weighty> = 1.0;

        $r14.<java.awt.GridBagConstraints: int fill> = 1;

        virtualinvoke $r14.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(0, 0, 1, 3);

        $r26 = virtualinvoke $r24.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $r27 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JList mediaList>;

        virtualinvoke $r26.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r27);

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r24, $r14);

        $r28 = new org.apache.batik.util.gui.resource.ButtonFactory;

        $r29 = <org.apache.batik.util.gui.CSSMediaPanel: java.util.ResourceBundle bundle>;

        specialinvoke $r28.<org.apache.batik.util.gui.resource.ButtonFactory: void <init>(java.util.ResourceBundle,org.apache.batik.util.gui.resource.ActionMap)>($r29, r0);

        $r14.<java.awt.GridBagConstraints: double weightx> = 0.0;

        $r14.<java.awt.GridBagConstraints: double weighty> = 0.0;

        $r14.<java.awt.GridBagConstraints: int fill> = 2;

        $r14.<java.awt.GridBagConstraints: int anchor> = 11;

        $r30 = virtualinvoke $r28.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("AddButton");

        r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JButton addButton> = $r30;

        virtualinvoke $r14.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(1, 0, 1, 1);

        $r31 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JButton addButton>;

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r31, $r14);

        $r32 = virtualinvoke $r28.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("RemoveButton");

        r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JButton removeButton> = $r32;

        virtualinvoke $r14.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(1, 1, 1, 1);

        $r33 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JButton removeButton>;

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r33, $r14);

        $r34 = virtualinvoke $r28.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("ClearButton");

        r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JButton clearButton> = $r34;

        virtualinvoke $r14.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(1, 2, 1, 1);

        $r35 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JButton clearButton>;

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r35, $r14);

        virtualinvoke r0.<org.apache.batik.util.gui.CSSMediaPanel: void updateButtons()>();

        return;
    }

    protected void updateButtons()
    {
        javax.swing.JButton $r2, $r4;
        javax.swing.JList $r1;
        javax.swing.DefaultListModel $r3;
        org.apache.batik.util.gui.CSSMediaPanel r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.batik.util.gui.CSSMediaPanel;

        $r2 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JButton removeButton>;

        $r1 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JList mediaList>;

        $z0 = virtualinvoke $r1.<javax.swing.JList: boolean isSelectionEmpty()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        virtualinvoke $r2.<javax.swing.AbstractButton: void setEnabled(boolean)>($z2);

        $r4 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.JButton clearButton>;

        $r3 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel>;

        $z1 = virtualinvoke $r3.<javax.swing.DefaultListModel: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        virtualinvoke $r4.<javax.swing.AbstractButton: void setEnabled(boolean)>($z3);

        return;
    }

    public void setMedia(java.util.List)
    {
        java.util.List r2;
        javax.swing.DefaultListModel $r1, $r4;
        java.util.Iterator $r3;
        org.apache.batik.util.gui.CSSMediaPanel r0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.batik.util.gui.CSSMediaPanel;

        r2 := @parameter0: java.util.List;

        $r1 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel>;

        virtualinvoke $r1.<javax.swing.DefaultListModel: void removeAllElements()>();

        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel>;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r4.<javax.swing.DefaultListModel: void addElement(java.lang.Object)>($r5);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public void setMedia(java.lang.String)
    {
        javax.swing.DefaultListModel $r1, $r4;
        org.apache.batik.util.gui.CSSMediaPanel r0;
        java.util.StringTokenizer $r2;
        java.lang.String r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.batik.util.gui.CSSMediaPanel;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel>;

        virtualinvoke $r1.<javax.swing.DefaultListModel: void removeAllElements()>();

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r3, " ");

        goto label2;

     label1:
        $r4 = r0.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel>;

        $r5 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r4.<javax.swing.DefaultListModel: void addElement(java.lang.Object)>($r5);

     label2:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label1;

        return;
    }

    public java.util.List getMedia()
    {
        java.util.Enumeration $r4;
        java.util.ArrayList $r0;
        javax.swing.DefaultListModel $r2, $r3;
        org.apache.batik.util.gui.CSSMediaPanel r1;
        int $i0;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.apache.batik.util.gui.CSSMediaPanel;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel>;

        $i0 = virtualinvoke $r2.<javax.swing.DefaultListModel: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = r1.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel>;

        $r4 = virtualinvoke $r3.<javax.swing.DefaultListModel: java.util.Enumeration elements()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label1;

        return $r0;
    }

    public java.lang.String getMediaAsString()
    {
        java.util.Enumeration $r3;
        javax.swing.DefaultListModel $r2;
        java.lang.StringBuffer $r0;
        org.apache.batik.util.gui.CSSMediaPanel r1;
        java.lang.Object $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r1 := @this: org.apache.batik.util.gui.CSSMediaPanel;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.batik.util.gui.CSSMediaPanel: javax.swing.DefaultListModel listModel>;

        $r3 = virtualinvoke $r2.<javax.swing.DefaultListModel: java.util.Enumeration elements()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (java.lang.String) $r4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public static int showDialog(java.awt.Component, java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        java.awt.Component r0;

        r0 := @parameter0: java.awt.Component;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <org.apache.batik.util.gui.CSSMediaPanel: int showDialog(java.awt.Component,java.lang.String,java.lang.String)>(r0, r1, "");

        return $i0;
    }

    public static int showDialog(java.awt.Component, java.lang.String, java.util.List)
    {
        java.util.List r3;
        int $i0;
        org.apache.batik.util.gui.CSSMediaPanel$Dialog $r0;
        java.lang.String r2;
        java.awt.Component r1;

        r1 := @parameter0: java.awt.Component;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r0 = new org.apache.batik.util.gui.CSSMediaPanel$Dialog;

        specialinvoke $r0.<org.apache.batik.util.gui.CSSMediaPanel$Dialog: void <init>(java.awt.Component,java.lang.String,java.util.List)>(r1, r2, r3);

        virtualinvoke $r0.<java.awt.Dialog: void setModal(boolean)>(1);

        virtualinvoke $r0.<java.awt.Window: void pack()>();

        virtualinvoke $r0.<java.awt.Component: void setVisible(boolean)>(1);

        $i0 = virtualinvoke $r0.<org.apache.batik.util.gui.CSSMediaPanel$Dialog: int getReturnCode()>();

        return $i0;
    }

    public static int showDialog(java.awt.Component, java.lang.String, java.lang.String)
    {
        int $i0;
        org.apache.batik.util.gui.CSSMediaPanel$Dialog $r0;
        java.lang.String r2, r3;
        java.awt.Component r1;

        r1 := @parameter0: java.awt.Component;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.apache.batik.util.gui.CSSMediaPanel$Dialog;

        specialinvoke $r0.<org.apache.batik.util.gui.CSSMediaPanel$Dialog: void <init>(java.awt.Component,java.lang.String,java.lang.String)>(r1, r2, r3);

        virtualinvoke $r0.<java.awt.Dialog: void setModal(boolean)>(1);

        virtualinvoke $r0.<java.awt.Window: void pack()>();

        virtualinvoke $r0.<java.awt.Component: void setVisible(boolean)>(1);

        $i0 = virtualinvoke $r0.<org.apache.batik.util.gui.CSSMediaPanel$Dialog: int getReturnCode()>();

        return $i0;
    }

    public javax.swing.Action getAction(java.lang.String) throws org.apache.batik.util.gui.resource.MissingListenerException
    {
        org.apache.batik.util.gui.CSSMediaPanel r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        javax.swing.Action $r4;

        r0 := @this: org.apache.batik.util.gui.CSSMediaPanel;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.util.gui.CSSMediaPanel: java.util.Map listeners>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (javax.swing.Action) $r3;

        return $r4;
    }

    public static void main(java.lang.String[])
    {
        int $i0;
        java.io.PrintStream $r0;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        $i0 = staticinvoke <org.apache.batik.util.gui.CSSMediaPanel: int showDialog(java.awt.Component,java.lang.String,java.lang.String)>(null, "Test", "all aural braille embossed handheld print projection screen tty tv");

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(int)>($i0);

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r1, $r3;
        java.util.Locale $r0;
        org.apache.batik.util.resources.ResourceManager $r2;

        <org.apache.batik.util.gui.CSSMediaPanel: java.lang.String RESOURCES> = "org.apache.batik.util.gui.resources.CSSMediaPanel";

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.apache.batik.util.gui.resources.CSSMediaPanel", $r0);

        <org.apache.batik.util.gui.CSSMediaPanel: java.util.ResourceBundle bundle> = $r1;

        $r2 = new org.apache.batik.util.resources.ResourceManager;

        $r3 = <org.apache.batik.util.gui.CSSMediaPanel: java.util.ResourceBundle bundle>;

        specialinvoke $r2.<org.apache.batik.util.resources.ResourceManager: void <init>(java.util.ResourceBundle)>($r3);

        <org.apache.batik.util.gui.CSSMediaPanel: org.apache.batik.util.resources.ResourceManager resources> = $r2;

        return;
    }
}
