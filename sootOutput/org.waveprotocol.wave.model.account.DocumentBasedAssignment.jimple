class org.waveprotocol.wave.model.account.DocumentBasedAssignment extends java.lang.Object implements org.waveprotocol.wave.model.account.ObservableAssignment, org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener
{
    private final org.waveprotocol.wave.model.adt.ObservableStructuredValue value;
    private final org.waveprotocol.wave.model.util.CopyOnWriteSet listeners;

    public static org.waveprotocol.wave.model.account.DocumentBasedAssignment create(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue $r4;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment $r0;
        org.waveprotocol.wave.model.util.Serializer $r3;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r1;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue $r5;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r2 := @parameter1: java.lang.Object;

        $r0 = new org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        $r3 = <org.waveprotocol.wave.model.util.Serializer: org.waveprotocol.wave.model.util.Serializer STRING>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue create(org.waveprotocol.wave.model.document.util.DocumentEventRouter,java.lang.Object,org.waveprotocol.wave.model.util.Serializer,java.lang.Class)>(r1, r2, $r3, class "Lorg/waveprotocol/wave/model/account/DocumentBasedAssignment$Key;");

        specialinvoke $r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: void <init>(org.waveprotocol.wave.model.adt.ObservableStructuredValue)>($r4);

        $r5 = $r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: org.waveprotocol.wave.model.adt.ObservableStructuredValue value>;

        interfaceinvoke $r5.<org.waveprotocol.wave.model.adt.ObservableStructuredValue: void addListener(java.lang.Object)>($r0);

        return $r0;
    }

    static org.waveprotocol.wave.model.adt.docbased.Factory factory()
    {
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$1 $r0;

        $r0 = new org.waveprotocol.wave.model.account.DocumentBasedAssignment$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment$1: void <init>()>();

        return $r0;
    }

    public void <init>(org.waveprotocol.wave.model.adt.ObservableStructuredValue)
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment r0;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue r2;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        r2 := @parameter0: org.waveprotocol.wave.model.adt.ObservableStructuredValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet create()>();

        r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners> = $r1;

        r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: org.waveprotocol.wave.model.adt.ObservableStructuredValue value> = r2;

        return;
    }

    public void addListener(org.waveprotocol.wave.model.account.ObservableAssignment$Listener)
    {
        org.waveprotocol.wave.model.account.ObservableAssignment$Listener r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment r0;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        r1 := @parameter0: org.waveprotocol.wave.model.account.ObservableAssignment$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(org.waveprotocol.wave.model.account.ObservableAssignment$Listener)
    {
        org.waveprotocol.wave.model.account.ObservableAssignment$Listener r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment r0;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        r1 := @parameter0: org.waveprotocol.wave.model.account.ObservableAssignment$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void setRole(org.waveprotocol.wave.model.account.Role)
    {
        org.waveprotocol.wave.model.account.DocumentBasedAssignment r0;
        org.waveprotocol.wave.model.util.Serializer $r2;
        org.waveprotocol.wave.model.account.Role r1;
        java.lang.String $r5;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key $r4;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue $r3;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        r1 := @parameter0: org.waveprotocol.wave.model.account.Role;

        $r3 = r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: org.waveprotocol.wave.model.adt.ObservableStructuredValue value>;

        $r4 = <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ROLE>;

        $r2 = <org.waveprotocol.wave.model.account.RoleSerializer: org.waveprotocol.wave.model.util.Serializer INSTANCE>;

        $r5 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>(r1);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.adt.ObservableStructuredValue: void set(java.lang.Enum,java.lang.Object)>($r4, $r5);

        return;
    }

    public org.waveprotocol.wave.model.account.Role getRole()
    {
        org.waveprotocol.wave.model.account.DocumentBasedAssignment r0;
        org.waveprotocol.wave.model.util.Serializer $r3;
        org.waveprotocol.wave.model.account.Role $r7;
        java.lang.Object $r4, $r6;
        java.lang.String $r5;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key $r1;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue $r2;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        $r3 = <org.waveprotocol.wave.model.account.RoleSerializer: org.waveprotocol.wave.model.util.Serializer INSTANCE>;

        $r2 = r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: org.waveprotocol.wave.model.adt.ObservableStructuredValue value>;

        $r1 = <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ROLE>;

        $r4 = interfaceinvoke $r2.<org.waveprotocol.wave.model.adt.ObservableStructuredValue: java.lang.Object get(java.lang.Enum)>($r1);

        $r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke $r3.<org.waveprotocol.wave.model.util.Serializer: java.lang.Object fromString(java.lang.String)>($r5);

        $r7 = (org.waveprotocol.wave.model.account.Role) $r6;

        return $r7;
    }

    public void onValuesChanged(java.util.Map, java.util.Map)
    {
        org.waveprotocol.wave.model.account.DocumentBasedAssignment r0;
        java.util.Iterator $r2;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        java.util.Map r5, r6;
        org.waveprotocol.wave.model.account.ObservableAssignment$Listener r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        r5 := @parameter0: java.util.Map;

        r6 := @parameter1: java.util.Map;

        $r1 = r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.account.ObservableAssignment$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.account.ObservableAssignment$Listener: void onChanged()>();

        goto label1;

     label2:
        return;
    }

    public void onDeleted()
    {
        org.waveprotocol.wave.model.account.DocumentBasedAssignment r0;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        return;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getParticipant()
    {
        org.waveprotocol.wave.model.account.DocumentBasedAssignment r0;
        java.lang.Object $r3;
        java.lang.String $r4;
        org.waveprotocol.wave.model.wave.ParticipantId $r5;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key $r1;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue $r2;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        $r2 = r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: org.waveprotocol.wave.model.adt.ObservableStructuredValue value>;

        $r1 = <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ADDRESS>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.adt.ObservableStructuredValue: java.lang.Object get(java.lang.Enum)>($r1);

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId ofUnsafe(java.lang.String)>($r4);

        return $r5;
    }

    public volatile void removeListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.account.ObservableAssignment$Listener $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment r0;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.account.ObservableAssignment$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: void removeListener(org.waveprotocol.wave.model.account.ObservableAssignment$Listener)>($r2);

        return;
    }

    public volatile void addListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.account.ObservableAssignment$Listener $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment r0;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.account.ObservableAssignment$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment: void addListener(org.waveprotocol.wave.model.account.ObservableAssignment$Listener)>($r2);

        return;
    }
}
