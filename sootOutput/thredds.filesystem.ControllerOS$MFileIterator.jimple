class thredds.filesystem.ControllerOS$MFileIterator extends java.lang.Object implements java.util.Iterator
{
    java.util.List files;
    int count;
    final thredds.filesystem.ControllerOS this$0;

    void <init>(thredds.filesystem.ControllerOS, java.io.File)
    {
        thredds.filesystem.ControllerOS$MFileIterator r0;
        java.util.List $r4;
        thredds.filesystem.ControllerOS r1;
        java.io.File[] $r3;
        java.io.File r2;

        r0 := @this: thredds.filesystem.ControllerOS$MFileIterator;

        r1 := @parameter0: thredds.filesystem.ControllerOS;

        r2 := @parameter1: java.io.File;

        r0.<thredds.filesystem.ControllerOS$MFileIterator: thredds.filesystem.ControllerOS this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.filesystem.ControllerOS$MFileIterator: int count> = 0;

        $r3 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        r0.<thredds.filesystem.ControllerOS$MFileIterator: java.util.List files> = $r4;

        return;
    }

    void <init>(thredds.filesystem.ControllerOS, java.util.List)
    {
        thredds.filesystem.ControllerOS$MFileIterator r0;
        java.util.List r2;
        thredds.filesystem.ControllerOS r1;

        r0 := @this: thredds.filesystem.ControllerOS$MFileIterator;

        r1 := @parameter0: thredds.filesystem.ControllerOS;

        r2 := @parameter1: java.util.List;

        r0.<thredds.filesystem.ControllerOS$MFileIterator: thredds.filesystem.ControllerOS this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.filesystem.ControllerOS$MFileIterator: int count> = 0;

        r0.<thredds.filesystem.ControllerOS$MFileIterator: java.util.List files> = r2;

        return;
    }

    public boolean hasNext()
    {
        thredds.filesystem.ControllerOS$MFileIterator r0;
        java.util.List $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: thredds.filesystem.ControllerOS$MFileIterator;

        $i0 = r0.<thredds.filesystem.ControllerOS$MFileIterator: int count>;

        $r1 = r0.<thredds.filesystem.ControllerOS$MFileIterator: java.util.List files>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public thredds.inventory.MFile next()
    {
        thredds.filesystem.ControllerOS$MFileIterator r0;
        java.util.List $r1;
        thredds.filesystem.MFileOS $r4;
        int $i0, $i1;
        java.lang.Object $r2;
        java.io.File r3;

        r0 := @this: thredds.filesystem.ControllerOS$MFileIterator;

        $r1 = r0.<thredds.filesystem.ControllerOS$MFileIterator: java.util.List files>;

        $i0 = r0.<thredds.filesystem.ControllerOS$MFileIterator: int count>;

        $i1 = $i0 + 1;

        r0.<thredds.filesystem.ControllerOS$MFileIterator: int count> = $i1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        r3 = (java.io.File) $r2;

        $r4 = new thredds.filesystem.MFileOS;

        specialinvoke $r4.<thredds.filesystem.MFileOS: void <init>(java.io.File)>(r3);

        return $r4;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        thredds.filesystem.ControllerOS$MFileIterator r1;

        r1 := @this: thredds.filesystem.ControllerOS$MFileIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        thredds.filesystem.ControllerOS$MFileIterator r0;
        thredds.inventory.MFile $r1;

        r0 := @this: thredds.filesystem.ControllerOS$MFileIterator;

        $r1 = virtualinvoke r0.<thredds.filesystem.ControllerOS$MFileIterator: thredds.inventory.MFile next()>();

        return $r1;
    }
}
