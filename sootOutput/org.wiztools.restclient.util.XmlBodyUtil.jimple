class org.wiztools.restclient.util.XmlBodyUtil extends java.lang.Object
{

    private void <init>()
    {
        org.wiztools.restclient.util.XmlBodyUtil r0;

        r0 := @this: org.wiztools.restclient.util.XmlBodyUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static org.wiztools.restclient.bean.ReqEntity getReqEntity(nu.xom.Element)
    {
        byte[] $r22;
        java.net.URL $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.wiztools.restclient.bean.ReqEntityUrlStreamBean $r19;
        org.wiztools.restclient.bean.ReqEntityStringBean $r30;
        org.wiztools.restclient.bean.ReqEntityMultipartBean $r15;
        java.util.List $r14;
        java.lang.StringBuilder $r10, $r11, $r12;
        nu.xom.Element r0, $r2;
        org.wiztools.restclient.XMLException $r9;
        int $i0;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r13, $r18, $r21, $r25, $r29;
        java.net.MalformedURLException $r31;
        org.wiztools.restclient.bean.ReqEntityByteArrayBean $r23;
        org.wiztools.restclient.bean.ReqEntityFileBean $r26;
        java.lang.RuntimeException $r32;
        java.io.File $r27;
        org.wiztools.restclient.bean.ContentType $r16, $r20, $r24, $r28;
        nu.xom.Elements $r1;

        r0 := @parameter0: nu.xom.Element;

        $r1 = virtualinvoke r0.<nu.xom.Element: nu.xom.Elements getChildElements()>();

        $i0 = virtualinvoke $r1.<nu.xom.Elements: int size()>();

        if 0 >= $i0 goto label9;

        $r2 = virtualinvoke $r1.<nu.xom.Elements: nu.xom.Element get(int)>(0);

        $r3 = virtualinvoke $r2.<nu.xom.Element: java.lang.String getLocalName()>();

        $r4 = "string";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r28 = staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: org.wiztools.restclient.bean.ContentType getContentType(nu.xom.Element)>($r2);

        $r29 = virtualinvoke $r2.<nu.xom.Element: java.lang.String getValue()>();

        $r30 = new org.wiztools.restclient.bean.ReqEntityStringBean;

        specialinvoke $r30.<org.wiztools.restclient.bean.ReqEntityStringBean: void <init>(java.lang.String,org.wiztools.restclient.bean.ContentType)>($r29, $r28);

        return $r30;

     label1:
        $r5 = "file";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r24 = staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: org.wiztools.restclient.bean.ContentType getContentType(nu.xom.Element)>($r2);

        $r25 = virtualinvoke $r2.<nu.xom.Element: java.lang.String getValue()>();

        $r26 = new org.wiztools.restclient.bean.ReqEntityFileBean;

        $r27 = new java.io.File;

        specialinvoke $r27.<java.io.File: void <init>(java.lang.String)>($r25);

        specialinvoke $r26.<org.wiztools.restclient.bean.ReqEntityFileBean: void <init>(java.io.File,org.wiztools.restclient.bean.ContentType)>($r27, $r24);

        return $r26;

     label2:
        $r6 = "byte-array";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        $r20 = staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: org.wiztools.restclient.bean.ContentType getContentType(nu.xom.Element)>($r2);

        $r21 = virtualinvoke $r2.<nu.xom.Element: java.lang.String getValue()>();

        $r22 = staticinvoke <org.wiztools.restclient.util.Util: byte[] base64decodeByteArray(java.lang.String)>($r21);

        $r23 = new org.wiztools.restclient.bean.ReqEntityByteArrayBean;

        specialinvoke $r23.<org.wiztools.restclient.bean.ReqEntityByteArrayBean: void <init>(byte[],org.wiztools.restclient.bean.ContentType)>($r22, $r20);

        return $r23;

     label3:
        $r7 = "url-stream";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z3 == 0 goto label7;

     label4:
        $r16 = staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: org.wiztools.restclient.bean.ContentType getContentType(nu.xom.Element)>($r2);

        $r17 = new java.net.URL;

        $r18 = virtualinvoke $r2.<nu.xom.Element: java.lang.String getValue()>();

        specialinvoke $r17.<java.net.URL: void <init>(java.lang.String)>($r18);

        $r19 = new org.wiztools.restclient.bean.ReqEntityUrlStreamBean;

        specialinvoke $r19.<org.wiztools.restclient.bean.ReqEntityUrlStreamBean: void <init>(org.wiztools.restclient.bean.ContentType,java.net.URL)>($r16, $r17);

     label5:
        return $r19;

     label6:
        $r31 := @caughtexception;

        $r32 = new java.lang.RuntimeException;

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r31);

        throw $r32;

     label7:
        $r8 = "multipart";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z4 == 0 goto label8;

        $r14 = staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: java.util.List getMultipartParts(nu.xom.Element)>($r2);

        $r15 = new org.wiztools.restclient.bean.ReqEntityMultipartBean;

        specialinvoke $r15.<org.wiztools.restclient.bean.ReqEntityMultipartBean: void <init>(java.util.List)>($r14);

        return $r15;

     label8:
        $r9 = new org.wiztools.restclient.XMLException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported element encountered inside <body>: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.wiztools.restclient.XMLException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label9:
        return null;

        catch java.net.MalformedURLException from label4 to label5 with label6;
    }

    private static java.util.List getMultipartParts(nu.xom.Element)
    {
        nu.xom.Element r1, $r3;
        org.wiztools.restclient.bean.ReqEntityPart $r4;
        int $i0, i1;
        nu.xom.Elements $r2;
        java.util.ArrayList $r0;

        r1 := @parameter0: nu.xom.Element;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<nu.xom.Element: nu.xom.Elements getChildElements()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke $r2.<nu.xom.Elements: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke $r2.<nu.xom.Elements: nu.xom.Element get(int)>(i1);

        $r4 = staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: org.wiztools.restclient.bean.ReqEntityPart getMultipartPart(nu.xom.Element)>($r3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static org.wiztools.restclient.bean.ReqEntityPart getMultipartPart(nu.xom.Element)
    {
        nu.xom.Element r0;
        org.wiztools.restclient.XMLException $r6;
        java.lang.String $r1, $r2, $r4, $r5, $r10, $r12, $r14;
        boolean $z0, $z1;
        org.wiztools.restclient.bean.ReqEntityFilePartBean $r13;
        java.io.File $r11;
        java.lang.StringBuilder $r7, $r8, $r9;
        org.wiztools.restclient.bean.ContentType $r3;
        org.wiztools.restclient.bean.ReqEntityStringPartBean $r15;

        r0 := @parameter0: nu.xom.Element;

        $r1 = virtualinvoke r0.<nu.xom.Element: java.lang.String getLocalName()>();

        $r2 = virtualinvoke r0.<nu.xom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r3 = staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: org.wiztools.restclient.bean.ContentType getContentType(nu.xom.Element)>(r0);

        $r4 = "string";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r14 = virtualinvoke r0.<nu.xom.Element: java.lang.String getValue()>();

        $r15 = new org.wiztools.restclient.bean.ReqEntityStringPartBean;

        specialinvoke $r15.<org.wiztools.restclient.bean.ReqEntityStringPartBean: void <init>(java.lang.String,org.wiztools.restclient.bean.ContentType,java.lang.String)>($r2, $r3, $r14);

        return $r15;

     label1:
        $r5 = "file";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        $r11 = new java.io.File;

        $r12 = virtualinvoke r0.<nu.xom.Element: java.lang.String getValue()>();

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r12);

        $r13 = new org.wiztools.restclient.bean.ReqEntityFilePartBean;

        specialinvoke $r13.<org.wiztools.restclient.bean.ReqEntityFilePartBean: void <init>(java.lang.String,org.wiztools.restclient.bean.ContentType,java.io.File)>($r2, $r3, $r11);

        return $r13;

     label2:
        $r6 = new org.wiztools.restclient.XMLException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported element encountered inside <multipart>: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.wiztools.restclient.XMLException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    private static org.wiztools.restclient.bean.ContentType getContentType(nu.xom.Element)
    {
        java.nio.charset.Charset $r4;
        nu.xom.Element r0;
        org.wiztools.restclient.bean.ContentTypeBean $r3;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @parameter0: nu.xom.Element;

        $r1 = virtualinvoke r0.<nu.xom.Element: java.lang.String getAttributeValue(java.lang.String)>("content-type");

        $r2 = virtualinvoke r0.<nu.xom.Element: java.lang.String getAttributeValue(java.lang.String)>("charset");

        $z0 = staticinvoke <org.wiztools.commons.StringUtil: boolean isNotEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

        $r3 = new org.wiztools.restclient.bean.ContentTypeBean;

        if $r2 == null goto label1;

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);

        goto label2;

     label1:
        $r4 = null;

     label2:
        specialinvoke $r3.<org.wiztools.restclient.bean.ContentTypeBean: void <init>(java.lang.String,java.nio.charset.Charset)>($r1, $r4);

        return $r3;

     label3:
        return null;
    }

    static nu.xom.Element getReqEntity(org.wiztools.restclient.bean.ReqEntity)
    {
        byte[] $r24;
        java.net.URL $r20;
        org.wiztools.restclient.bean.ReqEntityPart r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.wiztools.restclient.bean.ReqEntityString r33;
        java.util.List $r3;
        org.wiztools.restclient.bean.ReqEntityFilePart r39;
        nu.xom.Element $r0, $r2, $r7, $r13, $r18, $r22, $r26, $r30;
        org.wiztools.restclient.bean.ReqEntityUrlStream r36;
        java.lang.String $r10, $r12, $r16, $r17, $r21, $r25, $r29, $r32;
        org.wiztools.restclient.bean.ReqEntityMultipart r37;
        org.wiztools.restclient.bean.ReqEntityFile r34;
        java.util.Iterator $r4;
        org.wiztools.restclient.bean.ReqEntityStringPart r38;
        java.io.File $r11, $r28;
        nu.xom.Attribute $r9, $r15;
        org.wiztools.restclient.bean.ReqEntityByteArray r35;
        org.wiztools.restclient.bean.ReqEntity r1;
        java.lang.Object $r5;
        org.wiztools.restclient.bean.ContentType $r8, $r14, $r19, $r23, $r27, $r31;

        r1 := @parameter0: org.wiztools.restclient.bean.ReqEntity;

        $r0 = new nu.xom.Element;

        specialinvoke $r0.<nu.xom.Element: void <init>(java.lang.String)>("body");

        $z0 = r1 instanceof org.wiztools.restclient.bean.ReqEntityString;

        if $z0 == 0 goto label1;

        r33 = (org.wiztools.restclient.bean.ReqEntityString) r1;

        $r30 = new nu.xom.Element;

        specialinvoke $r30.<nu.xom.Element: void <init>(java.lang.String)>("string");

        $r31 = interfaceinvoke r33.<org.wiztools.restclient.bean.ReqEntityString: org.wiztools.restclient.bean.ContentType getContentType()>();

        staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: void addContentTypeCharsetAttribute(org.wiztools.restclient.bean.ContentType,nu.xom.Element)>($r31, $r30);

        $r32 = interfaceinvoke r33.<org.wiztools.restclient.bean.ReqEntityString: java.lang.String getBody()>();

        virtualinvoke $r30.<nu.xom.Element: void appendChild(java.lang.String)>($r32);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r30);

        goto label9;

     label1:
        $z1 = r1 instanceof org.wiztools.restclient.bean.ReqEntityFile;

        if $z1 == 0 goto label2;

        r34 = (org.wiztools.restclient.bean.ReqEntityFile) r1;

        $r26 = new nu.xom.Element;

        specialinvoke $r26.<nu.xom.Element: void <init>(java.lang.String)>("file");

        $r27 = interfaceinvoke r34.<org.wiztools.restclient.bean.ReqEntityFile: org.wiztools.restclient.bean.ContentType getContentType()>();

        staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: void addContentTypeCharsetAttribute(org.wiztools.restclient.bean.ContentType,nu.xom.Element)>($r27, $r26);

        $r28 = interfaceinvoke r34.<org.wiztools.restclient.bean.ReqEntityFile: java.io.File getBody()>();

        $r29 = virtualinvoke $r28.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r26.<nu.xom.Element: void appendChild(java.lang.String)>($r29);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r26);

        goto label9;

     label2:
        $z2 = r1 instanceof org.wiztools.restclient.bean.ReqEntityByteArray;

        if $z2 == 0 goto label3;

        r35 = (org.wiztools.restclient.bean.ReqEntityByteArray) r1;

        $r22 = new nu.xom.Element;

        specialinvoke $r22.<nu.xom.Element: void <init>(java.lang.String)>("byte-array");

        $r23 = interfaceinvoke r35.<org.wiztools.restclient.bean.ReqEntityByteArray: org.wiztools.restclient.bean.ContentType getContentType()>();

        staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: void addContentTypeCharsetAttribute(org.wiztools.restclient.bean.ContentType,nu.xom.Element)>($r23, $r22);

        $r24 = interfaceinvoke r35.<org.wiztools.restclient.bean.ReqEntityByteArray: byte[] getBody()>();

        $r25 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String base64encode(byte[])>($r24);

        virtualinvoke $r22.<nu.xom.Element: void appendChild(java.lang.String)>($r25);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r22);

        goto label9;

     label3:
        $z3 = r1 instanceof org.wiztools.restclient.bean.ReqEntityUrlStream;

        if $z3 == 0 goto label4;

        r36 = (org.wiztools.restclient.bean.ReqEntityUrlStream) r1;

        $r18 = new nu.xom.Element;

        specialinvoke $r18.<nu.xom.Element: void <init>(java.lang.String)>("url-stream");

        $r19 = interfaceinvoke r36.<org.wiztools.restclient.bean.ReqEntityUrlStream: org.wiztools.restclient.bean.ContentType getContentType()>();

        staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: void addContentTypeCharsetAttribute(org.wiztools.restclient.bean.ContentType,nu.xom.Element)>($r19, $r18);

        $r20 = interfaceinvoke r36.<org.wiztools.restclient.bean.ReqEntityUrlStream: java.net.URL getUrl()>();

        $r21 = virtualinvoke $r20.<java.net.URL: java.lang.String toString()>();

        virtualinvoke $r18.<nu.xom.Element: void appendChild(java.lang.String)>($r21);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r18);

        goto label9;

     label4:
        $z4 = r1 instanceof org.wiztools.restclient.bean.ReqEntityMultipart;

        if $z4 == 0 goto label9;

        r37 = (org.wiztools.restclient.bean.ReqEntityMultipart) r1;

        $r2 = new nu.xom.Element;

        specialinvoke $r2.<nu.xom.Element: void <init>(java.lang.String)>("multipart");

        $r3 = interfaceinvoke r37.<org.wiztools.restclient.bean.ReqEntityMultipart: java.util.List getBody()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z5 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label8;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.wiztools.restclient.bean.ReqEntityPart) $r5;

        $z6 = r6 instanceof org.wiztools.restclient.bean.ReqEntityStringPart;

        if $z6 == 0 goto label6;

        r38 = (org.wiztools.restclient.bean.ReqEntityStringPart) r6;

        $r13 = new nu.xom.Element;

        specialinvoke $r13.<nu.xom.Element: void <init>(java.lang.String)>("string");

        $r14 = interfaceinvoke r38.<org.wiztools.restclient.bean.ReqEntityStringPart: org.wiztools.restclient.bean.ContentType getContentType()>();

        staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: void addContentTypeCharsetAttribute(org.wiztools.restclient.bean.ContentType,nu.xom.Element)>($r14, $r13);

        $r15 = new nu.xom.Attribute;

        $r16 = interfaceinvoke r38.<org.wiztools.restclient.bean.ReqEntityStringPart: java.lang.String getName()>();

        specialinvoke $r15.<nu.xom.Attribute: void <init>(java.lang.String,java.lang.String)>("name", $r16);

        virtualinvoke $r13.<nu.xom.Element: void addAttribute(nu.xom.Attribute)>($r15);

        $r17 = interfaceinvoke r38.<org.wiztools.restclient.bean.ReqEntityStringPart: java.lang.String getPart()>();

        virtualinvoke $r13.<nu.xom.Element: void appendChild(java.lang.String)>($r17);

        virtualinvoke $r2.<nu.xom.Element: void appendChild(nu.xom.Node)>($r13);

        goto label7;

     label6:
        $z7 = r6 instanceof org.wiztools.restclient.bean.ReqEntityFilePart;

        if $z7 == 0 goto label7;

        r39 = (org.wiztools.restclient.bean.ReqEntityFilePart) r6;

        $r7 = new nu.xom.Element;

        specialinvoke $r7.<nu.xom.Element: void <init>(java.lang.String)>("file");

        $r8 = interfaceinvoke r39.<org.wiztools.restclient.bean.ReqEntityFilePart: org.wiztools.restclient.bean.ContentType getContentType()>();

        staticinvoke <org.wiztools.restclient.util.XmlBodyUtil: void addContentTypeCharsetAttribute(org.wiztools.restclient.bean.ContentType,nu.xom.Element)>($r8, $r7);

        $r9 = new nu.xom.Attribute;

        $r10 = interfaceinvoke r39.<org.wiztools.restclient.bean.ReqEntityFilePart: java.lang.String getName()>();

        specialinvoke $r9.<nu.xom.Attribute: void <init>(java.lang.String,java.lang.String)>("name", $r10);

        virtualinvoke $r7.<nu.xom.Element: void addAttribute(nu.xom.Attribute)>($r9);

        $r11 = interfaceinvoke r39.<org.wiztools.restclient.bean.ReqEntityFilePart: java.io.File getPart()>();

        $r12 = virtualinvoke $r11.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r7.<nu.xom.Element: void appendChild(java.lang.String)>($r12);

        virtualinvoke $r2.<nu.xom.Element: void appendChild(nu.xom.Node)>($r7);

     label7:
        goto label5;

     label8:
        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r2);

     label9:
        return $r0;
    }

    private static void addContentTypeCharsetAttribute(org.wiztools.restclient.bean.ContentType, nu.xom.Element)
    {
        nu.xom.Element r1;
        nu.xom.Attribute $r2, $r5;
        java.nio.charset.Charset $r4, $r6;
        org.wiztools.restclient.bean.ContentType r0;
        java.lang.String $r3, $r7;

        r0 := @parameter0: org.wiztools.restclient.bean.ContentType;

        r1 := @parameter1: nu.xom.Element;

        if r0 == null goto label1;

        $r2 = new nu.xom.Attribute;

        $r3 = interfaceinvoke r0.<org.wiztools.restclient.bean.ContentType: java.lang.String getContentType()>();

        specialinvoke $r2.<nu.xom.Attribute: void <init>(java.lang.String,java.lang.String)>("content-type", $r3);

        virtualinvoke r1.<nu.xom.Element: void addAttribute(nu.xom.Attribute)>($r2);

        $r4 = interfaceinvoke r0.<org.wiztools.restclient.bean.ContentType: java.nio.charset.Charset getCharset()>();

        if $r4 == null goto label1;

        $r5 = new nu.xom.Attribute;

        $r6 = interfaceinvoke r0.<org.wiztools.restclient.bean.ContentType: java.nio.charset.Charset getCharset()>();

        $r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r5.<nu.xom.Attribute: void <init>(java.lang.String,java.lang.String)>("charset", $r7);

        virtualinvoke r1.<nu.xom.Element: void addAttribute(nu.xom.Attribute)>($r5);

     label1:
        return;
    }
}
