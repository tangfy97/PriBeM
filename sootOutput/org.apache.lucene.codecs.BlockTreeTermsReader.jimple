public class org.apache.lucene.codecs.BlockTreeTermsReader extends org.apache.lucene.codecs.FieldsProducer
{
    private final org.apache.lucene.store.IndexInput in;
    private final org.apache.lucene.codecs.PostingsReaderBase postingsReader;
    private final java.util.TreeMap fields;
    private long dirOffset;
    private long indexDirOffset;
    private java.lang.String segment;
    private final int version;
    final org.apache.lucene.util.fst.Outputs fstOutputs;
    final org.apache.lucene.util.BytesRef NO_OUTPUT;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.FieldInfos, org.apache.lucene.index.SegmentInfo, org.apache.lucene.codecs.PostingsReaderBase, org.apache.lucene.store.IOContext, java.lang.String, int) throws java.io.IOException
    {
        byte[] $r24, $r25;
        byte $b13, $b14, $b15, $b16;
        org.apache.lucene.index.FieldInfos r27;
        org.apache.lucene.store.IOContext r13;
        org.apache.lucene.index.SegmentInfo r7;
        java.lang.StringBuilder $r36, $r37, $r38, $r39, $r40, $r42, $r43, $r51, $r53, $r54, $r56, $r57, $r62, $r63, $r64, $r65, $r66, $r68, $r69, $r73, $r74, $r75, $r76, $r77, $r79, $r80, $r84, $r85, $r90, $r91, $r92, $r94, $r95, $r102, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r116, $r118, $r122, $r124, $r126, $r128, $r131;
        long $l2, $l5, l7, $l8, $l12, $l17, $l22, $l23;
        org.apache.lucene.codecs.PostingsReaderBase r6;
        org.apache.lucene.store.IndexInput $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r26, $r31, $r32, $r33, $r41, $r55, $r67, $r78, $r93, $r99, $r103, r114;
        java.util.TreeMap $r46, $r115;
        org.apache.lucene.util.fst.ByteSequenceOutputs $r2;
        int $i0, i1, $i3, $i4, $i6, $i9, $i10, $i11, $i18, $i19, $i20, i21, $i25, $i27, $i28, $i29, $i30, $i32, $i34;
        java.lang.Object $r4, $r48;
        java.lang.Throwable $r112;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r59, $r130;
        java.lang.AssertionError $r120, $r123;
        org.apache.lucene.util.fst.Outputs $r3;
        java.lang.String $r8, r10, $r11, $r12, $r44, $r47, $r52, $r58, $r70, $r81, $r86, $r96, $r97, $r98, $r111;
        org.apache.lucene.index.FieldInfo $r28;
        org.apache.lucene.index.CorruptIndexException $r117, $r119, $r125, $r127, $r129, $r132;
        org.apache.lucene.store.Directory r9;
        java.io.Closeable[] $r19, $r113;
        boolean $z0, $z1;
        org.apache.lucene.index.FieldInfo$IndexOptions $r29, $r30;
        org.apache.lucene.util.BytesRef $r5, $r121;
        org.apache.lucene.codecs.BlockTreeTermsReader r0;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader;

        r9 := @parameter0: org.apache.lucene.store.Directory;

        r27 := @parameter1: org.apache.lucene.index.FieldInfos;

        r7 := @parameter2: org.apache.lucene.index.SegmentInfo;

        r6 := @parameter3: org.apache.lucene.codecs.PostingsReaderBase;

        r13 := @parameter4: org.apache.lucene.store.IOContext;

        r10 := @parameter5: java.lang.String;

        i1 := @parameter6: int;

        specialinvoke r0.<org.apache.lucene.codecs.FieldsProducer: void <init>()>();

        $r115 = new java.util.TreeMap;

        specialinvoke $r115.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader: java.util.TreeMap fields> = $r115;

        $r2 = staticinvoke <org.apache.lucene.util.fst.ByteSequenceOutputs: org.apache.lucene.util.fst.ByteSequenceOutputs getSingleton()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs> = $r2;

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        $r5 = (org.apache.lucene.util.BytesRef) $r4;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.BytesRef NO_OUTPUT> = $r5;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.codecs.PostingsReaderBase postingsReader> = r6;

        $r8 = r7.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader: java.lang.String segment> = $r8;

        $r11 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: java.lang.String segment>;

        $r12 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r11, r10, "tim");

        $r14 = virtualinvoke r9.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r12, r13);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in> = $r14;

        r114 = null;

     label01:
        $r15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $i0 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader: int readHeader(org.apache.lucene.store.IndexInput)>($r15);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader: int version> = $i0;

        $i25 = (int) -1;

        if i1 == $i25 goto label02;

        $r97 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: java.lang.String segment>;

        $r98 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r97, r10, "tip");

        $r99 = virtualinvoke r9.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r98, r13);

        r114 = $r99;

        $i18 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader: int readIndexHeader(org.apache.lucene.store.IndexInput)>($r99);

        $i19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: int version>;

        if $i18 == $i19 goto label02;

        $r117 = new org.apache.lucene.index.CorruptIndexException;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mixmatched version files: ");

        $r103 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i20 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: int version>;

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r99);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r117.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r111);

        throw $r117;

     label02:
        $r16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        virtualinvoke r6.<org.apache.lucene.codecs.PostingsReaderBase: void init(org.apache.lucene.store.IndexInput)>($r16);

        $r17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $l2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: long dirOffset>;

        virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader: void seekDir(org.apache.lucene.store.IndexInput,long)>($r17, $l2);

        $i27 = (int) -1;

        if i1 == $i27 goto label03;

        $l17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: long indexDirOffset>;

        virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader: void seekDir(org.apache.lucene.store.IndexInput,long)>(r114, $l17);

     label03:
        $r18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $i3 = virtualinvoke $r18.<org.apache.lucene.store.IndexInput: int readVInt()>();

        if $i3 >= 0 goto label04;

        $r119 = new org.apache.lucene.index.CorruptIndexException;

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid numFields: ");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource=");

        $r93 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r119.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r96);

        throw $r119;

     label04:
        i21 = 0;

     label05:
        if i21 >= $i3 goto label17;

        $r20 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $i4 = virtualinvoke $r20.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r21 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $l5 = virtualinvoke $r21.<org.apache.lucene.store.IndexInput: long readVLong()>();

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label06;

        $b16 = $l5 cmp 0L;

        $i28 = (int) $b16;

        if $i28 >= 0 goto label06;

        $r120 = new java.lang.AssertionError;

        specialinvoke $r120.<java.lang.AssertionError: void <init>()>();

        throw $r120;

     label06:
        $r22 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $i6 = virtualinvoke $r22.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r121 = new org.apache.lucene.util.BytesRef;

        $r24 = newarray (byte)[$i6];

        specialinvoke $r121.<org.apache.lucene.util.BytesRef: void <init>(byte[])>($r24);

        $r26 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $r25 = $r121.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        virtualinvoke $r26.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>($r25, 0, $i6);

        $r121.<org.apache.lucene.util.BytesRef: int length> = $i6;

        $r28 = virtualinvoke r27.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>($i4);

        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label07;

        if $r28 != null goto label07;

        $r123 = new java.lang.AssertionError;

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field=");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r123.<java.lang.AssertionError: void <init>(java.lang.Object)>($r86);

        throw $r123;

     label07:
        $r29 = virtualinvoke $r28.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r30 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_ONLY>;

        if $r29 != $r30 goto label08;

        $l22 = -1L;

        goto label09;

     label08:
        $r31 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $l22 = virtualinvoke $r31.<org.apache.lucene.store.IndexInput: long readVLong()>();

     label09:
        l7 = $l22;

        $r32 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $l8 = virtualinvoke $r32.<org.apache.lucene.store.IndexInput: long readVLong()>();

        $r33 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $i9 = virtualinvoke $r33.<org.apache.lucene.store.IndexInput: int readVInt()>();

        if $i9 < 0 goto label10;

        $i11 = virtualinvoke r7.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i9 <= $i11 goto label11;

     label10:
        $r125 = new org.apache.lucene.index.CorruptIndexException;

        $r124 = new java.lang.StringBuilder;

        specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid docCount: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxDoc: ");

        $i10 = virtualinvoke r7.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource=");

        $r41 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r125.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r44);

        throw $r125;

     label11:
        $l12 = (long) $i9;

        $b13 = $l8 cmp $l12;

        $i29 = (int) $b13;

        if $i29 >= 0 goto label12;

        $r127 = new org.apache.lucene.index.CorruptIndexException;

        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid sumDocFreq: ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docCount: ");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource=");

        $r78 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r127.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r81);

        throw $r127;

     label12:
        $b14 = $l22 cmp -1L;

        if $b14 == 0 goto label13;

        $b15 = $l22 cmp $l8;

        $i30 = (int) $b15;

        if $i30 >= 0 goto label13;

        $r129 = new org.apache.lucene.index.CorruptIndexException;

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid sumTotalTermFreq: ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l22);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sumDocFreq: ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource=");

        $r67 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r129.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r70);

        throw $r129;

     label13:
        $i32 = (int) -1;

        if i1 == $i32 goto label14;

        $l23 = virtualinvoke r114.<org.apache.lucene.store.IndexInput: long readVLong()>();

        goto label15;

     label14:
        $l23 = 0L;

     label15:
        $r46 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: java.util.TreeMap fields>;

        $r47 = $r28.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r130 = new org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader;

        specialinvoke $r130.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: void <init>(org.apache.lucene.codecs.BlockTreeTermsReader,org.apache.lucene.index.FieldInfo,long,org.apache.lucene.util.BytesRef,long,long,int,long,org.apache.lucene.store.IndexInput)>(r0, $r28, $l5, $r121, l7, $l8, $i9, $l23, r114);

        $r48 = virtualinvoke $r46.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, $r130);

        $r59 = (org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader) $r48;

        if $r59 == null goto label16;

        $r132 = new org.apache.lucene.index.CorruptIndexException;

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("duplicate field: ");

        $r52 = $r28.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource=");

        $r55 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r132.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r58);

        throw $r132;

     label16:
        i21 = i21 + 1;

        goto label05;

     label17:
        $i34 = (int) -1;

        if i1 == $i34 goto label18;

        virtualinvoke r114.<org.apache.lucene.store.IndexInput: void close()>();

     label18:
        if 1 != 0 goto label22;

        $r19 = newarray (java.io.Closeable)[2];

        $r19[0] = r114;

        $r19[1] = r0;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r19);

        goto label22;

     label19:
        $r112 := @caughtexception;

     label20:
        if 0 != 0 goto label21;

        $r113 = newarray (java.io.Closeable)[2];

        $r113[0] = r114;

        $r113[1] = r0;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r113);

     label21:
        throw $r112;

     label22:
        return;

        catch java.lang.Throwable from label01 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    protected int readHeader(org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.codecs.BlockTreeTermsReader r1;
        int $i0;
        long $l1;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader;

        r0 := @parameter0: org.apache.lucene.store.IndexInput;

        $i0 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "BLOCK_TREE_TERMS_DICT", 0, 1);

        if $i0 >= 1 goto label1;

        $l1 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader: long dirOffset> = $l1;

     label1:
        return $i0;
    }

    protected int readIndexHeader(org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.codecs.BlockTreeTermsReader r1;
        int $i0;
        long $l1;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader;

        r0 := @parameter0: org.apache.lucene.store.IndexInput;

        $i0 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "BLOCK_TREE_TERMS_INDEX", 0, 1);

        if $i0 >= 1 goto label1;

        $l1 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader: long indexDirOffset> = $l1;

     label1:
        return $i0;
    }

    protected void seekDir(org.apache.lucene.store.IndexInput, long) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput r1;
        org.apache.lucene.codecs.BlockTreeTermsReader r0;
        int $i0;
        long $l1, $l2, l3;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader;

        r1 := @parameter0: org.apache.lucene.store.IndexInput;

        l3 := @parameter1: long;

        $i0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: int version>;

        if $i0 < 1 goto label1;

        $l1 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: long length()>();

        $l2 = $l1 - 8L;

        virtualinvoke r1.<org.apache.lucene.store.IndexInput: void seek(long)>($l2);

        l3 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: long readLong()>();

     label1:
        virtualinvoke r1.<org.apache.lucene.store.IndexInput: void seek(long)>(l3);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r5;
        org.apache.lucene.codecs.PostingsReaderBase $r3;
        org.apache.lucene.store.IndexInput $r2;
        java.util.TreeMap $r4, $r6;
        org.apache.lucene.codecs.BlockTreeTermsReader r1;
        java.io.Closeable[] $r0;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader;

     label1:
        $r0 = newarray (java.io.Closeable)[2];

        $r2 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.codecs.PostingsReaderBase postingsReader>;

        $r0[1] = $r3;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

     label2:
        $r4 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader: java.util.TreeMap fields>;

        virtualinvoke $r4.<java.util.TreeMap: void clear()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

     label4:
        $r6 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader: java.util.TreeMap fields>;

        virtualinvoke $r6.<java.util.TreeMap: void clear()>();

        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Iterator iterator()
    {
        java.util.TreeMap $r1;
        java.util.Iterator $r4;
        org.apache.lucene.codecs.BlockTreeTermsReader r0;
        java.util.Set $r2, $r3;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: java.util.TreeMap fields>;

        $r2 = virtualinvoke $r1.<java.util.TreeMap: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        return $r4;
    }

    public org.apache.lucene.index.Terms terms(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.Terms $r4;
        java.util.TreeMap $r2;
        org.apache.lucene.codecs.BlockTreeTermsReader r0;
        java.lang.Object $r3;
        java.lang.String r1;
        java.lang.AssertionError $r5;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader;

        r1 := @parameter0: java.lang.String;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: java.util.TreeMap fields>;

        $r3 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.lucene.index.Terms) $r3;

        return $r4;
    }

    public int size()
    {
        int $i0;
        java.util.TreeMap $r1;
        org.apache.lucene.codecs.BlockTreeTermsReader r0;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: java.util.TreeMap fields>;

        $i0 = virtualinvoke $r1.<java.util.TreeMap: int size()>();

        return $i0;
    }

    java.lang.String brToString(org.apache.lucene.util.BytesRef)
    {
        java.lang.Throwable $r7;
        org.apache.lucene.codecs.BlockTreeTermsReader r9;
        org.apache.lucene.util.BytesRef r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5;
        java.lang.String $r2, $r6, $r8;

        r9 := @this: org.apache.lucene.codecs.BlockTreeTermsReader;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        if r0 != null goto label1;

        return "null";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.lucene.util.BytesRef: java.lang.String utf8ToString()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke r0.<org.apache.lucene.util.BytesRef: java.lang.String toString()>();

        return $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static org.apache.lucene.codecs.PostingsReaderBase access$000(org.apache.lucene.codecs.BlockTreeTermsReader)
    {
        org.apache.lucene.codecs.PostingsReaderBase $r1;
        org.apache.lucene.codecs.BlockTreeTermsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.codecs.PostingsReaderBase postingsReader>;

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$400(org.apache.lucene.codecs.BlockTreeTermsReader)
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.BlockTreeTermsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput in>;

        return $r1;
    }

    static java.lang.String access$800(org.apache.lucene.codecs.BlockTreeTermsReader)
    {
        java.lang.String $r1;
        org.apache.lucene.codecs.BlockTreeTermsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader: java.lang.String segment>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/BlockTreeTermsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.BlockTreeTermsReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
