public class org.springframework.util.xml.XmlValidationModeDetector extends java.lang.Object
{
    public static final int VALIDATION_NONE;
    public static final int VALIDATION_AUTO;
    public static final int VALIDATION_DTD;
    public static final int VALIDATION_XSD;
    private static final java.lang.String DOCTYPE;
    private static final java.lang.String START_COMMENT;
    private static final java.lang.String END_COMMENT;
    private boolean inComment;

    public void <init>()
    {
        org.springframework.util.xml.XmlValidationModeDetector r0;

        r0 := @this: org.springframework.util.xml.XmlValidationModeDetector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int detectValidationMode(java.io.InputStream) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        java.io.InputStreamReader $r1;
        org.springframework.util.xml.XmlValidationModeDetector r3;
        java.io.CharConversionException $r6;
        byte $b0;
        java.io.BufferedReader $r0;
        java.lang.String $r4, $r7;
        java.io.InputStream r2;
        boolean $z0, $z1, $z2, $z3, z4;

        r3 := @this: org.springframework.util.xml.XmlValidationModeDetector;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new java.io.BufferedReader;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

     label01:
        z4 = 0;

        goto label05;

     label02:
        $r4 = specialinvoke r3.<org.springframework.util.xml.XmlValidationModeDetector: java.lang.String consumeCommentTokens(java.lang.String)>($r7);

        $z0 = r3.<org.springframework.util.xml.XmlValidationModeDetector: boolean inComment>;

        if $z0 != 0 goto label05;

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r4);

        if $z1 != 0 goto label03;

        goto label05;

     label03:
        $z2 = specialinvoke r3.<org.springframework.util.xml.XmlValidationModeDetector: boolean hasDoctype(java.lang.String)>($r4);

        if $z2 == 0 goto label04;

        z4 = 1;

        goto label06;

     label04:
        $z3 = specialinvoke r3.<org.springframework.util.xml.XmlValidationModeDetector: boolean hasOpeningTag(java.lang.String)>($r4);

        if $z3 == 0 goto label05;

        goto label06;

     label05:
        $r7 = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r7 != null goto label02;

     label06:
        if z4 == 0 goto label07;

        $b0 = 2;

        goto label08;

     label07:
        $b0 = 3;

     label08:
        virtualinvoke $r0.<java.io.BufferedReader: void close()>();

        return $b0;

     label09:
        $r6 := @caughtexception;

     label10:
        virtualinvoke $r0.<java.io.BufferedReader: void close()>();

        return 1;

     label11:
        $r5 := @caughtexception;

        virtualinvoke $r0.<java.io.BufferedReader: void close()>();

        throw $r5;

        catch java.io.CharConversionException from label01 to label08 with label09;
        catch java.lang.Throwable from label01 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    private boolean hasDoctype(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0;
        org.springframework.util.xml.XmlValidationModeDetector r1;

        r1 := @this: org.springframework.util.xml.XmlValidationModeDetector;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("DOCTYPE");

        $i2 = (int) -1;

        if $i0 <= $i2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean hasOpeningTag(java.lang.String)
    {
        char $c3;
        org.springframework.util.xml.XmlValidationModeDetector r0;
        int $i0, $i1, $i2, $i5;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.util.xml.XmlValidationModeDetector;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.springframework.util.xml.XmlValidationModeDetector: boolean inComment>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(60);

        $i5 = (int) -1;

        if $i0 <= $i5 goto label2;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= $i0 goto label2;

        $i2 = $i0 + 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        $z1 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c3);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private java.lang.String consumeCommentTokens(java.lang.String)
    {
        org.springframework.util.xml.XmlValidationModeDetector r0;
        int $i0, $i1, $i3, $i5;
        java.lang.String $r1, r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.util.xml.XmlValidationModeDetector;

        r2 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("<!--");

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("-->");

        $i5 = (int) -1;

        if $i1 != $i5 goto label2;

        return r2;

     label1:
        $z0 = r0.<org.springframework.util.xml.XmlValidationModeDetector: boolean inComment>;

        if $z0 != 0 goto label2;

        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("<!--");

        if $z1 != 0 goto label2;

        return $r3;

     label2:
        $r3 = specialinvoke r0.<org.springframework.util.xml.XmlValidationModeDetector: java.lang.String consume(java.lang.String)>(r2);

        r2 = $r3;

        if $r3 != null goto label1;

        return $r3;
    }

    private java.lang.String consume(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r1, $r2;
        org.springframework.util.xml.XmlValidationModeDetector r0;
        boolean $z0;

        r0 := @this: org.springframework.util.xml.XmlValidationModeDetector;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.springframework.util.xml.XmlValidationModeDetector: boolean inComment>;

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<org.springframework.util.xml.XmlValidationModeDetector: int endComment(java.lang.String)>(r1);

        goto label2;

     label1:
        $i0 = specialinvoke r0.<org.springframework.util.xml.XmlValidationModeDetector: int startComment(java.lang.String)>(r1);

     label2:
        $i2 = (int) -1;

        if $i0 != $i2 goto label3;

        $r2 = null;

        goto label4;

     label3:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

     label4:
        return $r2;
    }

    private int startComment(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        org.springframework.util.xml.XmlValidationModeDetector r0;

        r0 := @this: org.springframework.util.xml.XmlValidationModeDetector;

        r1 := @parameter0: java.lang.String;

        $i0 = specialinvoke r0.<org.springframework.util.xml.XmlValidationModeDetector: int commentToken(java.lang.String,java.lang.String,boolean)>(r1, "<!--", 1);

        return $i0;
    }

    private int endComment(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        org.springframework.util.xml.XmlValidationModeDetector r0;

        r0 := @this: org.springframework.util.xml.XmlValidationModeDetector;

        r1 := @parameter0: java.lang.String;

        $i0 = specialinvoke r0.<org.springframework.util.xml.XmlValidationModeDetector: int commentToken(java.lang.String,java.lang.String,boolean)>(r1, "-->", 0);

        return $i0;
    }

    private int commentToken(java.lang.String, java.lang.String, boolean)
    {
        org.springframework.util.xml.XmlValidationModeDetector r2;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String r0, r1;
        boolean z0;

        r2 := @this: org.springframework.util.xml.XmlValidationModeDetector;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1);

        $i4 = (int) -1;

        if $i0 <= $i4 goto label1;

        r2.<org.springframework.util.xml.XmlValidationModeDetector: boolean inComment> = z0;

     label1:
        $i6 = (int) -1;

        if $i0 != $i6 goto label2;

        $i2 = $i0;

        goto label3;

     label2:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

     label3:
        return $i2;
    }

    public static void <clinit>()
    {
        <org.springframework.util.xml.XmlValidationModeDetector: java.lang.String END_COMMENT> = "-->";

        <org.springframework.util.xml.XmlValidationModeDetector: java.lang.String START_COMMENT> = "<!--";

        <org.springframework.util.xml.XmlValidationModeDetector: java.lang.String DOCTYPE> = "DOCTYPE";

        <org.springframework.util.xml.XmlValidationModeDetector: int VALIDATION_XSD> = 3;

        <org.springframework.util.xml.XmlValidationModeDetector: int VALIDATION_DTD> = 2;

        <org.springframework.util.xml.XmlValidationModeDetector: int VALIDATION_AUTO> = 1;

        <org.springframework.util.xml.XmlValidationModeDetector: int VALIDATION_NONE> = 0;

        return;
    }
}
