class org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields extends org.apache.lucene.index.Fields
{
    private final int[] fieldNums;
    private final int[] fieldFlags;
    private final int[] fieldNumOffs;
    private final int[] numTerms;
    private final int[] fieldLengths;
    private final int[][] prefixLengths;
    private final int[][] suffixLengths;
    private final int[][] termFreqs;
    private final int[][] positionIndex;
    private final int[][] positions;
    private final int[][] startOffsets;
    private final int[][] lengths;
    private final int[][] payloadIndex;
    private final org.apache.lucene.util.BytesRef suffixBytes;
    private final org.apache.lucene.util.BytesRef payloadBytes;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.compressing.CompressingTermVectorsReader this$0;

    public void <init>(org.apache.lucene.codecs.compressing.CompressingTermVectorsReader, int[], int[], int[], int[], int[], int[][], int[][], int[][], int[][], int[][], int[][], int[][], org.apache.lucene.util.BytesRef, int[][], org.apache.lucene.util.BytesRef)
    {
        int[][] r7, r8, r9, r10, r11, r12, r13, r15;
        int[] r2, r3, r4, r5, r6;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader r1;
        org.apache.lucene.util.BytesRef r14, r16;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields r0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields;

        r1 := @parameter0: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader;

        r2 := @parameter1: int[];

        r3 := @parameter2: int[];

        r4 := @parameter3: int[];

        r5 := @parameter4: int[];

        r6 := @parameter5: int[];

        r7 := @parameter6: int[][];

        r8 := @parameter7: int[][];

        r9 := @parameter8: int[][];

        r10 := @parameter9: int[][];

        r11 := @parameter10: int[][];

        r12 := @parameter11: int[][];

        r13 := @parameter12: int[][];

        r14 := @parameter13: org.apache.lucene.util.BytesRef;

        r15 := @parameter14: int[][];

        r16 := @parameter15: org.apache.lucene.util.BytesRef;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader this$0> = r1;

        specialinvoke r0.<org.apache.lucene.index.Fields: void <init>()>();

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldNums> = r2;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldFlags> = r3;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldNumOffs> = r4;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] numTerms> = r5;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldLengths> = r6;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] prefixLengths> = r7;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] suffixLengths> = r8;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] termFreqs> = r9;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] positionIndex> = r10;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] positions> = r11;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] startOffsets> = r12;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] lengths> = r13;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: org.apache.lucene.util.BytesRef payloadBytes> = r14;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] payloadIndex> = r15;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: org.apache.lucene.util.BytesRef suffixBytes> = r16;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields$1 $r0;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields r1;

        r1 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields;

        $r0 = new org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields$1;

        specialinvoke $r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields$1: void <init>(org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields)>(r1);

        return $r0;
    }

    public org.apache.lucene.index.Terms terms(java.lang.String) throws java.io.IOException
    {
        byte[] $r22;
        int[][] $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        int[] $r5, $r6, $r7, $r9, $r10, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r37;
        org.apache.lucene.index.FieldInfos $r2;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r20, $r21, $r32, $r39;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields r0;
        java.lang.AssertionError $r38;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTerms $r40;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, $i17, $i19, $i21;
        java.lang.String r3;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader $r1, $r23;
        org.apache.lucene.index.FieldInfo $r4;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader this$0>;

        $r2 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsReader: org.apache.lucene.index.FieldInfos access$200(org.apache.lucene.codecs.compressing.CompressingTermVectorsReader)>($r1);

        $r4 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r3);

        if $r4 != null goto label01;

        return null;

     label01:
        $i17 = (int) -1;

        i11 = $i17;

        i12 = 0;

     label02:
        $r5 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldNumOffs>;

        $i0 = lengthof $r5;

        if i12 >= $i0 goto label04;

        $r37 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldNums>;

        $r36 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldNumOffs>;

        $i8 = $r36[i12];

        $i10 = $r37[$i8];

        $i9 = $r4.<org.apache.lucene.index.FieldInfo: int number>;

        if $i10 != $i9 goto label03;

        i11 = i12;

        goto label04;

     label03:
        i12 = i12 + 1;

        goto label02;

     label04:
        $i19 = (int) -1;

        if i11 == $i19 goto label05;

        $r6 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] numTerms>;

        $i1 = $r6[i11];

        if $i1 != 0 goto label06;

     label05:
        return null;

     label06:
        i13 = 0;

        $i21 = (int) -1;

        i14 = $i21;

        i15 = 0;

     label07:
        $r7 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldNumOffs>;

        $i2 = lengthof $r7;

        if i15 >= $i2 goto label10;

        if i15 >= i11 goto label08;

        $r35 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldLengths>;

        $i7 = $r35[i15];

        i13 = i13 + $i7;

        goto label09;

     label08:
        $r34 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldLengths>;

        i14 = $r34[i15];

        goto label10;

     label09:
        i15 = i15 + 1;

        goto label07;

     label10:
        $z0 = <org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: boolean $assertionsDisabled>;

        if $z0 != 0 goto label11;

        if i14 >= 0 goto label11;

        $r38 = new java.lang.AssertionError;

        specialinvoke $r38.<java.lang.AssertionError: void <init>()>();

        throw $r38;

     label11:
        $r40 = new org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTerms;

        $r23 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader this$0>;

        $r9 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] numTerms>;

        $i5 = $r9[i11];

        $r10 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldFlags>;

        $i6 = $r10[i11];

        $r11 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] prefixLengths>;

        $r24 = $r11[i11];

        $r12 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] suffixLengths>;

        $r25 = $r12[i11];

        $r13 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] termFreqs>;

        $r26 = $r13[i11];

        $r14 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] positionIndex>;

        $r27 = $r14[i11];

        $r15 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] positions>;

        $r28 = $r15[i11];

        $r16 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] startOffsets>;

        $r29 = $r16[i11];

        $r17 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] lengths>;

        $r30 = $r17[i11];

        $r18 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[][] payloadIndex>;

        $r31 = $r18[i11];

        $r32 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: org.apache.lucene.util.BytesRef payloadBytes>;

        $r39 = new org.apache.lucene.util.BytesRef;

        $r20 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: org.apache.lucene.util.BytesRef suffixBytes>;

        $r22 = $r20.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r21 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: org.apache.lucene.util.BytesRef suffixBytes>;

        $i3 = $r21.<org.apache.lucene.util.BytesRef: int offset>;

        $i4 = $i3 + i13;

        specialinvoke $r39.<org.apache.lucene.util.BytesRef: void <init>(byte[],int,int)>($r22, $i4, i14);

        specialinvoke $r40.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTerms: void <init>(org.apache.lucene.codecs.compressing.CompressingTermVectorsReader,int,int,int[],int[],int[],int[],int[],int[],int[],int[],org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>($r23, $i5, $i6, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r39);

        return $r40;
    }

    public int size()
    {
        int $i0;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields r0;
        int[] $r1;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldNumOffs>;

        $i0 = lengthof $r1;

        return $i0;
    }

    static int[] access$000(org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields)
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields r0;
        int[] $r1;

        r0 := @parameter0: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldNumOffs>;

        return $r1;
    }

    static int[] access$100(org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields)
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields r0;
        int[] $r1;

        r0 := @parameter0: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: int[] fieldNums>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/compressing/CompressingTermVectorsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVFields: boolean $assertionsDisabled> = $z1;

        return;
    }
}
