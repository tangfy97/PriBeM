public class ucar.nc2.util.cache.FileCache extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private static org.slf4j.Logger cacheLog;
    private static java.util.concurrent.ScheduledExecutorService exec;
    static boolean debug;
    static boolean debugPrint;
    static boolean debugCleanup;
    private java.lang.String name;
    private final int softLimit;
    private final int minElements;
    private final int hardLimit;
    private final java.util.concurrent.ConcurrentHashMap cache;
    private final java.util.concurrent.ConcurrentHashMap files;
    private final java.util.concurrent.atomic.AtomicBoolean hasScheduled;
    private final java.util.concurrent.atomic.AtomicBoolean disabled;
    private final java.util.concurrent.atomic.AtomicInteger cleanups;
    private final java.util.concurrent.atomic.AtomicInteger hits;
    private final java.util.concurrent.atomic.AtomicInteger miss;

    public static void shutdown()
    {
        java.util.concurrent.ScheduledExecutorService $r0, $r1;

        $r0 = <ucar.nc2.util.cache.FileCache: java.util.concurrent.ScheduledExecutorService exec>;

        if $r0 == null goto label1;

        $r1 = <ucar.nc2.util.cache.FileCache: java.util.concurrent.ScheduledExecutorService exec>;

        interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: void shutdown()>();

     label1:
        <ucar.nc2.util.cache.FileCache: java.util.concurrent.ScheduledExecutorService exec> = null;

        return;
    }

    public void <init>(int, int, int)
    {
        ucar.nc2.util.cache.FileCache r0;
        int i0, i1, i2, $i4;

        r0 := @this: ucar.nc2.util.cache.FileCache;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i4 = (int) -1;

        specialinvoke r0.<ucar.nc2.util.cache.FileCache: void <init>(java.lang.String,int,int,int,int)>("", i0, i1, $i4, i2);

        return;
    }

    public void <init>(int, int, int, int)
    {
        ucar.nc2.util.cache.FileCache r0;
        int i0, i1, i2, i3;

        r0 := @this: ucar.nc2.util.cache.FileCache;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<ucar.nc2.util.cache.FileCache: void <init>(java.lang.String,int,int,int,int)>("", i0, i1, i2, i3);

        return;
    }

    public void <init>(java.lang.String, int, int, int, int)
    {
        ucar.nc2.util.cache.FileCache r0;
        java.util.concurrent.atomic.AtomicBoolean $r1, $r2;
        long $l6, $l7;
        java.util.concurrent.atomic.AtomicInteger $r3, $r4, $r5;
        int i0, i1, i2, $i3, $i4, i5;
        java.util.concurrent.ScheduledExecutorService $r9, $r11, $r21;
        java.lang.String r6, $r20;
        ucar.nc2.util.cache.FileCache$CleanupTask $r10;
        org.slf4j.Logger $r14;
        java.util.concurrent.ConcurrentHashMap $r7, $r8;
        java.util.concurrent.TimeUnit $r12;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r18, $r19;

        r0 := @this: ucar.nc2.util.cache.FileCache;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i5 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean hasScheduled> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean disabled> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicInteger cleanups> = $r3;

        $r4 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicInteger hits> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicInteger miss> = $r5;

        r0.<ucar.nc2.util.cache.FileCache: java.lang.String name> = r6;

        r0.<ucar.nc2.util.cache.FileCache: int minElements> = i0;

        r0.<ucar.nc2.util.cache.FileCache: int softLimit> = i1;

        r0.<ucar.nc2.util.cache.FileCache: int hardLimit> = i2;

        $r7 = new java.util.concurrent.ConcurrentHashMap;

        $i3 = 2 * i1;

        specialinvoke $r7.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>($i3, 0.75F, 8);

        r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache> = $r7;

        $r8 = new java.util.concurrent.ConcurrentHashMap;

        $i4 = 4 * i1;

        specialinvoke $r8.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>($i4, 0.75F, 8);

        r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files> = $r8;

        if i5 <= 0 goto label2;

        $r9 = <ucar.nc2.util.cache.FileCache: java.util.concurrent.ScheduledExecutorService exec>;

        if $r9 != null goto label1;

        $r21 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor()>();

        <ucar.nc2.util.cache.FileCache: java.util.concurrent.ScheduledExecutorService exec> = $r21;

     label1:
        $r11 = <ucar.nc2.util.cache.FileCache: java.util.concurrent.ScheduledExecutorService exec>;

        $r10 = new ucar.nc2.util.cache.FileCache$CleanupTask;

        specialinvoke $r10.<ucar.nc2.util.cache.FileCache$CleanupTask: void <init>(ucar.nc2.util.cache.FileCache,ucar.nc2.util.cache.FileCache$1)>(r0, null);

        $l7 = (long) i5;

        $l6 = (long) i5;

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r11.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r10, $l7, $l6, $r12);

        $r14 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cleanup every ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" secs");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String)>($r20);

     label2:
        return;
    }

    public void disable()
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        ucar.nc2.util.cache.FileCache r0;

        r0 := @this: ucar.nc2.util.cache.FileCache;

        $r1 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean disabled>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        virtualinvoke r0.<ucar.nc2.util.cache.FileCache: void clearCache(boolean)>(1);

        return;
    }

    public void enable()
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        ucar.nc2.util.cache.FileCache r0;

        r0 := @this: ucar.nc2.util.cache.FileCache;

        $r1 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean disabled>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;
    }

    public ucar.nc2.util.cache.FileCacheable acquire(ucar.nc2.util.cache.FileFactory, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.util.cache.FileCacheable $r4;
        ucar.nc2.util.cache.FileCache r0;
        int $i1;
        java.lang.String r2;
        ucar.nc2.util.cache.FileFactory r1;

        r0 := @this: ucar.nc2.util.cache.FileCache;

        r1 := @parameter0: ucar.nc2.util.cache.FileFactory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: ucar.nc2.util.CancelTask;

        $i1 = (int) -1;

        $r4 = virtualinvoke r0.<ucar.nc2.util.cache.FileCache: ucar.nc2.util.cache.FileCacheable acquire(ucar.nc2.util.cache.FileFactory,java.lang.Object,java.lang.String,int,ucar.nc2.util.CancelTask,java.lang.Object)>(r1, r2, r2, $i1, r3, null);

        return $r4;
    }

    public ucar.nc2.util.cache.FileCacheable acquire(ucar.nc2.util.cache.FileFactory, java.lang.Object, java.lang.String, int, ucar.nc2.util.CancelTask, java.lang.Object) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r5;
        ucar.nc2.util.cache.FileCache$CleanupTask $r16;
        java.lang.StringBuilder $r19, $r21, $r23, $r25, $r27, $r29, $r36, $r38, $r40, $r41, $r42, $r43, $r45, $r47, $r49, $r51, $r52, $r53, $r54, $r56;
        ucar.nc2.util.cache.FileFactory r3;
        java.lang.Throwable $r59, $r60, $r61;
        long $l2;
        java.util.concurrent.ScheduledExecutorService $r17;
        ucar.nc2.util.cache.FileCache$CacheElement r13, $r34;
        java.lang.String r4, $r24, $r30, $r39, $r44, $r46, $r50, $r55, $r57;
        ucar.nc2.util.cache.FileCacheable $r1, $r7;
        ucar.nc2.util.cache.FileCache r0;
        java.util.Date $r22, $r28;
        java.util.concurrent.atomic.AtomicInteger $r2, $r58;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8;
        java.util.concurrent.ConcurrentHashMap $r10, $r11, $r31, $r35;
        java.util.concurrent.atomic.AtomicBoolean $r9, $r14, $r15, $r32, $r33;
        int i0, $i1, $i3, $i4, $i5, $i6;
        java.io.PrintStream $r20, $r26, $r37;
        org.slf4j.Logger $r8, $r48;
        java.util.concurrent.TimeUnit $r18;
        java.lang.Object r6, $r12, r62;

        r0 := @this: ucar.nc2.util.cache.FileCache;

        r3 := @parameter0: ucar.nc2.util.cache.FileFactory;

        r62 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r5 := @parameter4: ucar.nc2.util.CancelTask;

        r6 := @parameter5: java.lang.Object;

        if null != r62 goto label01;

        r62 = r4;

     label01:
        $r1 = specialinvoke r0.<ucar.nc2.util.cache.FileCache: ucar.nc2.util.cache.FileCacheable acquireCacheOnly(java.lang.Object)>(r62);

        if $r1 == null goto label02;

        $r58 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicInteger hits>;

        virtualinvoke $r58.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        return $r1;

     label02:
        $r2 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicInteger miss>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r7 = interfaceinvoke r3.<ucar.nc2.util.cache.FileFactory: ucar.nc2.util.cache.FileCacheable open(java.lang.String,int,ucar.nc2.util.CancelTask,java.lang.Object)>(r4, i0, r5, r6);

        $r8 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $z0 = interfaceinvoke $r8.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label03;

        $r48 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r50 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" acquire ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r62);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r55 = interfaceinvoke $r7.<ucar.nc2.util.cache.FileCacheable: java.lang.String getLocation()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r48.<org.slf4j.Logger: void debug(java.lang.String)>($r57);

     label03:
        $z1 = <ucar.nc2.util.cache.FileCache: boolean debugPrint>;

        if $z1 == 0 goto label04;

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  FileCache ");

        $r39 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" acquire ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r62);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r44 = interfaceinvoke $r7.<ucar.nc2.util.cache.FileCacheable: java.lang.String getLocation()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r46);

     label04:
        if r5 == null goto label06;

        $z6 = interfaceinvoke r5.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z6 == 0 goto label06;

        if $r7 == null goto label05;

        interfaceinvoke $r7.<ucar.nc2.util.cache.FileCacheable: void close()>();

     label05:
        return null;

     label06:
        $r9 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean disabled>;

        $z2 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z2 == 0 goto label07;

        return $r7;

     label07:
        $r10 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        entermonitor $r10;

     label08:
        $r11 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $r12 = virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r62);

        r13 = (ucar.nc2.util.cache.FileCache$CacheElement) $r12;

        if r13 != null goto label09;

        $r35 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $r34 = new ucar.nc2.util.cache.FileCache$CacheElement;

        specialinvoke $r34.<ucar.nc2.util.cache.FileCache$CacheElement: void <init>(ucar.nc2.util.cache.FileCache,ucar.nc2.util.cache.FileCacheable,java.lang.Object)>(r0, $r7, r62);

        virtualinvoke $r35.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r62, $r34);

     label09:
        exitmonitor $r10;

     label10:
        goto label13;

     label11:
        $r61 := @caughtexception;

        exitmonitor $r10;

     label12:
        throw $r61;

     label13:
        if r13 == null goto label18;

        entermonitor r13;

     label14:
        virtualinvoke r13.<ucar.nc2.util.cache.FileCache$CacheElement: ucar.nc2.util.cache.FileCache$CacheElement$CacheFile addFile(ucar.nc2.util.cache.FileCacheable)>($r7);

        exitmonitor r13;

     label15:
        goto label18;

     label16:
        $r60 := @caughtexception;

        exitmonitor r13;

     label17:
        throw $r60;

     label18:
        z7 = 0;

        z8 = 0;

        $r14 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean hasScheduled>;

        entermonitor $r14;

     label19:
        $r15 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean hasScheduled>;

        $z3 = virtualinvoke $r15.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z3 != 0 goto label21;

        $r31 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $i3 = virtualinvoke $r31.<java.util.concurrent.ConcurrentHashMap: int size()>();

        $i4 = r0.<ucar.nc2.util.cache.FileCache: int hardLimit>;

        if $i3 <= $i4 goto label20;

        $i6 = r0.<ucar.nc2.util.cache.FileCache: int hardLimit>;

        if $i6 <= 0 goto label20;

        z7 = 1;

        $r33 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean hasScheduled>;

        virtualinvoke $r33.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(1);

        goto label21;

     label20:
        $i5 = r0.<ucar.nc2.util.cache.FileCache: int softLimit>;

        if $i3 <= $i5 goto label21;

        $r32 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean hasScheduled>;

        virtualinvoke $r32.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(1);

        z8 = 1;

     label21:
        exitmonitor $r14;

     label22:
        goto label25;

     label23:
        $r59 := @caughtexception;

        exitmonitor $r14;

     label24:
        throw $r59;

     label25:
        if z7 == 0 goto label27;

        $z5 = <ucar.nc2.util.cache.FileCache: boolean debugCleanup>;

        if $z5 == 0 goto label26;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CleanupTask due to hard limit time=");

        $r28 = new java.util.Date;

        specialinvoke $r28.<java.util.Date: void <init>()>();

        $l2 = virtualinvoke $r28.<java.util.Date: long getTime()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label26:
        $i1 = r0.<ucar.nc2.util.cache.FileCache: int hardLimit>;

        virtualinvoke r0.<ucar.nc2.util.cache.FileCache: void cleanup(int)>($i1);

        goto label28;

     label27:
        if z8 == 0 goto label28;

        $r17 = <ucar.nc2.util.cache.FileCache: java.util.concurrent.ScheduledExecutorService exec>;

        $r16 = new ucar.nc2.util.cache.FileCache$CleanupTask;

        specialinvoke $r16.<ucar.nc2.util.cache.FileCache$CleanupTask: void <init>(ucar.nc2.util.cache.FileCache,ucar.nc2.util.cache.FileCache$1)>(r0, null);

        $r18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        interfaceinvoke $r17.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r16, 100L, $r18);

        $z4 = <ucar.nc2.util.cache.FileCache: boolean debugCleanup>;

        if $z4 == 0 goto label28;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CleanupTask scheduled due to soft limit time=");

        $r22 = new java.util.Date;

        specialinvoke $r22.<java.util.Date: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label28:
        return $r7;

        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label19 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    private ucar.nc2.util.cache.FileCacheable acquireCacheOnly(java.lang.Object)
    {
        ucar.nc2.util.cache.FileCacheable r52;
        ucar.nc2.util.cache.FileCache r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.util.List $r33;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r22, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r39, $r41, $r43, $r44, $r46, $r47, $r49;
        ucar.nc2.util.cache.FileCache$CacheElement$CacheFile r36;
        java.lang.Throwable $r51;
        java.util.concurrent.atomic.AtomicBoolean $r1, $r37;
        ucar.nc2.util.cache.FileCache$CacheElement r5;
        java.lang.String $r10, $r15, $r19, $r23, $r28, $r32, $r42, $r45, $r48, $r50;
        java.io.PrintStream $r8;
        org.slf4j.Logger $r6, $r21, $r40;
        java.util.Iterator $r34;
        java.io.IOException $r38;
        java.lang.Object r2, $r4, $r35;

        r0 := @this: ucar.nc2.util.cache.FileCache;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean disabled>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label01;

        return null;

     label01:
        r52 = null;

        $r3 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (ucar.nc2.util.cache.FileCache$CacheElement) $r4;

        if r5 == null goto label09;

        entermonitor r5;

     label02:
        $r33 = r5.<ucar.nc2.util.cache.FileCache$CacheElement: java.util.List list>;

        $r34 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        $r35 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        r36 = (ucar.nc2.util.cache.FileCache$CacheElement$CacheFile) $r35;

        $r37 = r36.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: java.util.concurrent.atomic.AtomicBoolean isLocked>;

        $z5 = virtualinvoke $r37.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z5 == 0 goto label04;

        r52 = r36.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: ucar.nc2.util.cache.FileCacheable ncfile>;

        goto label05;

     label04:
        goto label03;

     label05:
        exitmonitor r5;

     label06:
        goto label09;

     label07:
        $r51 := @caughtexception;

        exitmonitor r5;

     label08:
        throw $r51;

     label09:
        if r52 == null goto label14;

     label10:
        $z1 = interfaceinvoke r52.<ucar.nc2.util.cache.FileCacheable: boolean sync()>();

        $r6 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $z2 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label11;

        $r21 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r23 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aquire from cache ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r28 = interfaceinvoke r52.<ucar.nc2.util.cache.FileCacheable: java.lang.String getLocation()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changed = ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String)>($r32);

     label11:
        $z3 = <ucar.nc2.util.cache.FileCache: boolean debugPrint>;

        if $z3 == 0 goto label12;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  FileCache ");

        $r10 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aquire from cache ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = interfaceinvoke r52.<ucar.nc2.util.cache.FileCacheable: java.lang.String getLocation()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changed = ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label12:
        goto label14;

     label13:
        $r38 := @caughtexception;

        $r40 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger log>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r42 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" synch failed on ");

        $r45 = interfaceinvoke r52.<ucar.nc2.util.cache.FileCacheable: java.lang.String getLocation()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r48 = virtualinvoke $r38.<java.io.IOException: java.lang.String getMessage()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r40.<org.slf4j.Logger: void error(java.lang.String)>($r50);

        return null;

     label14:
        return r52;

        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.io.IOException from label10 to label12 with label13;
    }

    public void release(ucar.nc2.util.cache.FileCacheable) throws java.io.IOException
    {
        ucar.nc2.util.cache.FileCacheable r0;
        ucar.nc2.util.cache.FileCache r1;
        boolean $z0, $z1, $z2, $z3;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13, $r18, $r20, $r22, $r23, $r25, $r27, $r29, $r31, $r32, $r34, $r36, $r38, $r40, $r41, $r43, $r44;
        ucar.nc2.util.cache.FileCache$CacheElement$CacheFile r5;
        java.util.concurrent.atomic.AtomicBoolean $r2, $r15, $r16;
        long $l0;
        int $i1, $i2;
        java.lang.String $r9, $r12, $r14, $r21, $r24, $r26, $r30, $r33, $r35, $r39, $r42, $r45;
        java.io.PrintStream $r19;
        org.slf4j.Logger $r17, $r28, $r37;
        java.io.IOException $r6;
        java.lang.Object $r4;

        r1 := @this: ucar.nc2.util.cache.FileCache;

        r0 := @parameter0: ucar.nc2.util.cache.FileCacheable;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean disabled>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r0.<ucar.nc2.util.cache.FileCacheable: void setFileCache(ucar.nc2.util.cache.FileCache)>(null);

        interfaceinvoke r0.<ucar.nc2.util.cache.FileCacheable: void close()>();

        return;

     label2:
        $r3 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (ucar.nc2.util.cache.FileCache$CacheElement$CacheFile) $r4;

        if r5 == null goto label6;

        $r15 = r5.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: java.util.concurrent.atomic.AtomicBoolean isLocked>;

        $z1 = virtualinvoke $r15.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z1 != 0 goto label3;

        $r37 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r39 = r1.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" release ");

        $r42 = interfaceinvoke r0.<ucar.nc2.util.cache.FileCacheable: java.lang.String getLocation()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not locked");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<org.slf4j.Logger: void warn(java.lang.String)>($r45);

     label3:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r5.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: long lastAccessed> = $l0;

        $i1 = r5.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: int countAccessed>;

        $i2 = $i1 + 1;

        r5.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: int countAccessed> = $i2;

        $r16 = r5.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: java.util.concurrent.atomic.AtomicBoolean isLocked>;

        virtualinvoke $r16.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r17 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $z2 = interfaceinvoke $r17.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label4;

        $r28 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r30 = r1.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" release ");

        $r33 = interfaceinvoke r0.<ucar.nc2.util.cache.FileCacheable: java.lang.String getLocation()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String)>($r35);

     label4:
        $z3 = <ucar.nc2.util.cache.FileCache: boolean debugPrint>;

        if $z3 == 0 goto label5;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  FileCache ");

        $r21 = r1.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" release ");

        $r24 = interfaceinvoke r0.<ucar.nc2.util.cache.FileCacheable: java.lang.String getLocation()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label5:
        return;

     label6:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r9 = r1.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" release does not have file in cache = ");

        $r12 = interfaceinvoke r0.<ucar.nc2.util.cache.FileCacheable: java.lang.String getLocation()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r6;
    }

    public java.lang.String getInfo(ucar.nc2.util.cache.FileCacheable) throws java.io.IOException
    {
        ucar.nc2.util.cache.FileCacheable r0;
        ucar.nc2.util.cache.FileCache r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        ucar.nc2.util.cache.FileCache$CacheElement$CacheFile r4;

        r1 := @this: ucar.nc2.util.cache.FileCache;

        r0 := @parameter0: ucar.nc2.util.cache.FileCacheable;

        if r0 != null goto label1;

        return "";

     label1:
        $r2 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (ucar.nc2.util.cache.FileCache$CacheElement$CacheFile) $r3;

        if r4 == null goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is in cache= ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label2:
        return "File not in cache";
    }

    java.util.Map getCache()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        ucar.nc2.util.cache.FileCache r0;

        r0 := @this: ucar.nc2.util.cache.FileCache;

        $r1 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        return $r1;
    }

    public synchronized void clearCache(boolean)
    {
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r26, $r28, $r30, $r31, $r32, $r46, $r48, $r50, $r51, $r52;
        ucar.nc2.util.cache.FileCache$CacheElement$CacheFile r56, r57;
        java.lang.Throwable $r54, $r55;
        java.util.ArrayList $r0;
        ucar.nc2.util.cache.FileCache$CacheElement r35;
        java.lang.String $r14, $r23, $r29, $r33, $r49, $r53;
        java.io.IOException $r45;
        ucar.nc2.util.cache.FileCacheable $r58, $r59;
        ucar.nc2.util.cache.FileCache r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Collection $r4, $r8, $r43;
        java.util.concurrent.ConcurrentHashMap $r2, $r3, $r6, $r7, $r21, $r38, $r41, $r42, $r44;
        java.util.List $r36;
        java.util.concurrent.atomic.AtomicBoolean $r25, $r40;
        int $i0, $i1, $i2, $i3, $i4;
        org.slf4j.Logger $r12, $r27, $r47;
        java.util.Iterator $r5, $r9, $r10;
        java.lang.Object $r24, $r34, $r37, $r39;

        r1 := @this: ucar.nc2.util.cache.FileCache;

        z0 := @parameter0: boolean;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: int size()>();

        $i1 = 2 * $i0;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i1);

        if z0 == 0 goto label01;

        $r41 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        virtualinvoke $r41.<java.util.concurrent.ConcurrentHashMap: void clear()>();

        $r42 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $r43 = virtualinvoke $r42.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r43);

        $r44 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        virtualinvoke $r44.<java.util.concurrent.ConcurrentHashMap: void clear()>();

        goto label17;

     label01:
        $r3 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r39 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r56 = (ucar.nc2.util.cache.FileCache$CacheElement$CacheFile) $r39;

        $r40 = r56.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: java.util.concurrent.atomic.AtomicBoolean isLocked>;

        $z4 = virtualinvoke $r40.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z4 == 0 goto label03;

        virtualinvoke r56.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: void remove()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r56);

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

     label03:
        goto label02;

     label04:
        $r6 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        entermonitor $r6;

     label05:
        $r7 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $r8 = virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r34 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r35 = (ucar.nc2.util.cache.FileCache$CacheElement) $r34;

        entermonitor r35;

     label07:
        $r36 = r35.<ucar.nc2.util.cache.FileCache$CacheElement: java.util.List list>;

        $i4 = interfaceinvoke $r36.<java.util.List: int size()>();

        if $i4 != 0 goto label08;

        $r38 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $r37 = r35.<ucar.nc2.util.cache.FileCache$CacheElement: java.lang.Object hashKey>;

        virtualinvoke $r38.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r37);

     label08:
        exitmonitor r35;

     label09:
        goto label12;

     label10:
        $r55 := @caughtexception;

        exitmonitor r35;

     label11:
        throw $r55;

     label12:
        goto label06;

     label13:
        exitmonitor $r6;

     label14:
        goto label17;

     label15:
        $r54 := @caughtexception;

        exitmonitor $r6;

     label16:
        throw $r54;

     label17:
        $r10 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z5 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label23;

        $r24 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r57 = (ucar.nc2.util.cache.FileCache$CacheElement$CacheFile) $r24;

        if z0 == 0 goto label19;

        $r25 = r57.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: java.util.concurrent.atomic.AtomicBoolean isLocked>;

        $z3 = virtualinvoke $r25.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z3 == 0 goto label19;

        $r27 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r29 = r1.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" force close locked file= ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String)>($r33);

     label19:
        $r58 = r57.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: ucar.nc2.util.cache.FileCacheable ncfile>;

        interfaceinvoke $r58.<ucar.nc2.util.cache.FileCacheable: void setFileCache(ucar.nc2.util.cache.FileCache)>(null);

        $r59 = r57.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: ucar.nc2.util.cache.FileCacheable ncfile>;

        interfaceinvoke $r59.<ucar.nc2.util.cache.FileCacheable: void close()>();

        r57.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: ucar.nc2.util.cache.FileCacheable ncfile> = null;

     label20:
        goto label22;

     label21:
        $r45 := @caughtexception;

        $r47 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger log>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r49 = r1.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" close failed on ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String)>($r53);

     label22:
        goto label18;

     label23:
        $r12 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*FileCache ");

        $r14 = r1.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clearCache force= ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deleted= ");

        $i2 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" left=");

        $r21 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $i3 = virtualinvoke $r21.<java.util.concurrent.ConcurrentHashMap: int size()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>($r23);

        return;

        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label05 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.io.IOException from label19 to label20 with label21;
    }

    public void showCache(java.util.Formatter)
    {
        java.lang.Throwable $r21;
        java.lang.Object[] $r7, $r10, $r14;
        ucar.nc2.util.cache.FileCacheable $r13, $r18;
        ucar.nc2.util.cache.FileCache r1;
        java.util.Date $r17;
        java.util.concurrent.atomic.AtomicBoolean $r15;
        long $l3;
        java.lang.Integer $r9, $r16;
        java.util.ArrayList $r0;
        java.util.Formatter r6;
        int $i0, $i1, $i2;
        ucar.nc2.util.cache.FileCache$CacheElement r22;
        java.lang.String $r8, $r24;
        boolean $z0, $z1;
        java.util.Iterator $r5, $r11;
        java.util.Collection $r4;
        java.util.concurrent.ConcurrentHashMap $r2, $r3;
        java.util.List $r20;
        java.lang.Object $r12, $r19;
        ucar.nc2.util.cache.FileCache$CacheElement$CacheFile r23;

        r1 := @this: ucar.nc2.util.cache.FileCache;

        r6 := @parameter0: java.util.Formatter;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r19 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r22 = (ucar.nc2.util.cache.FileCache$CacheElement) $r19;

        entermonitor r22;

     label02:
        $r20 = r22.<ucar.nc2.util.cache.FileCache$CacheElement: java.util.List list>;

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r20);

        exitmonitor r22;

     label03:
        goto label06;

     label04:
        $r21 := @caughtexception;

        exitmonitor r22;

     label05:
        throw $r21;

     label06:
        goto label01;

     label07:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r0);

        $r7 = newarray (java.lang.Object)[2];

        $r8 = r1.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r7[0] = $r8;

        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[1] = $r9;

        virtualinvoke r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("FileCache %s (%d):%n", $r7);

        $r10 = newarray (java.lang.Object)[0];

        virtualinvoke r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("isLocked  accesses lastAccess                   location %n", $r10);

        $r11 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r23 = (ucar.nc2.util.cache.FileCache$CacheElement$CacheFile) $r12;

        $r13 = r23.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: ucar.nc2.util.cache.FileCacheable ncfile>;

        if $r13 == null goto label09;

        $r18 = r23.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: ucar.nc2.util.cache.FileCacheable ncfile>;

        $r24 = interfaceinvoke $r18.<ucar.nc2.util.cache.FileCacheable: java.lang.String getLocation()>();

        goto label10;

     label09:
        $r24 = "null";

     label10:
        $r14 = newarray (java.lang.Object)[4];

        $r15 = r23.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: java.util.concurrent.atomic.AtomicBoolean isLocked>;

        $r14[0] = $r15;

        $i2 = r23.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: int countAccessed>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r14[1] = $r16;

        $r17 = new java.util.Date;

        $l3 = r23.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: long lastAccessed>;

        specialinvoke $r17.<java.util.Date: void <init>(long)>($l3);

        $r14[2] = $r17;

        $r14[3] = $r24;

        virtualinvoke r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%8s %9d %s %s %n", $r14);

        goto label08;

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    public java.util.List showCache()
    {
        java.lang.Throwable $r12;
        ucar.nc2.util.cache.FileCache r1;
        java.util.ArrayList $r0, $r6;
        int $i0, $i1;
        ucar.nc2.util.cache.FileCache$CacheElement r13;
        java.lang.String $r9;
        boolean $z0, $z1;
        java.util.Iterator $r5, $r7;
        java.util.Collection $r4;
        java.util.concurrent.ConcurrentHashMap $r2, $r3;
        java.util.List $r11;
        java.lang.Object $r8, $r10;
        ucar.nc2.util.cache.FileCache$CacheElement$CacheFile r14;

        r1 := @this: ucar.nc2.util.cache.FileCache;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = r1.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r10 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (ucar.nc2.util.cache.FileCache$CacheElement) $r10;

        entermonitor r13;

     label2:
        $r11 = r13.<ucar.nc2.util.cache.FileCache$CacheElement: java.util.List list>;

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r11);

        exitmonitor r13;

     label3:
        goto label6;

     label4:
        $r12 := @caughtexception;

        exitmonitor r13;

     label5:
        throw $r12;

     label6:
        goto label1;

     label7:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r0);

        $r6 = new java.util.ArrayList;

        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        $r7 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label8:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r14 = (ucar.nc2.util.cache.FileCache$CacheElement$CacheFile) $r8;

        $r9 = virtualinvoke r14.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label8;

     label9:
        return $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void showStats(java.util.Formatter)
    {
        java.lang.Object[] $r1;
        ucar.nc2.util.cache.FileCache r2;
        java.lang.Integer $r4, $r6, $r8, $r11;
        java.util.Formatter r0;
        java.util.concurrent.atomic.AtomicInteger $r3, $r5;
        int $i0, $i1, $i2, $i3;
        java.util.Collection $r10;
        java.util.concurrent.ConcurrentHashMap $r7, $r9;

        r2 := @this: ucar.nc2.util.cache.FileCache;

        r0 := @parameter0: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[4];

        $r3 = r2.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicInteger hits>;

        $i0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r4;

        $r5 = r2.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicInteger miss>;

        $i1 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r6;

        $r7 = r2.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $i2 = virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: int size()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r8;

        $r9 = r2.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $i3 = interfaceinvoke $r10.<java.util.Collection: int size()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[3] = $r11;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  hits= %d miss= %d nfiles= %d elems= %d\n", $r1);

        return;
    }

    synchronized void cleanup(int)
    {
        java.lang.StringBuilder $r3, $r5, $r7, $r8, $r10, $r11, $r12, $r22, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r36, $r38, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r58, $r60, $r62, $r63, $r64, $r65, $r66, $r68, $r70, $r72, $r73, $r74, $r75, $r76, $r82, $r84, $r86, $r87, $r89, $r90, $r91, $r97, $r99, $r101, $r102, $r104;
        long $l5, $l6, l15;
        ucar.nc2.util.cache.FileCache$CacheElement r114;
        java.io.IOException $r96;
        ucar.nc2.util.cache.FileCacheable $r50, $r52, $r53;
        ucar.nc2.util.cache.FileCache r0;
        java.util.Date $r9, $r88;
        java.util.concurrent.atomic.AtomicInteger $r14;
        java.util.Collection $r17, $r112;
        java.util.concurrent.ConcurrentHashMap $r2, $r16, $r51, $r57, $r110, $r111;
        java.util.concurrent.atomic.AtomicBoolean $r1, $r35, $r79, $r81, $r93, $r95;
        int $i0, $i1, i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        java.io.PrintStream $r37, $r69, $r83;
        org.slf4j.Logger $r4, $r23, $r59, $r98;
        java.lang.Object $r49, $r54, $r56, $r78, $r80;
        ucar.nc2.util.cache.FileCache$CacheElement$CacheFile r108, r109, r115;
        java.lang.Throwable $r94, $r106, $r107;
        java.util.ArrayList $r15, $r19;
        java.lang.String $r6, $r13, $r25, $r34, $r39, $r48, $r61, $r67, $r71, $r77, $r85, $r92, $r100, $r103, $r105;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.List $r55;
        java.util.Iterator $r18, $r20, $r21, $r113;

        r0 := @this: ucar.nc2.util.cache.FileCache;

        i2 := @parameter0: int;

        $r1 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean disabled>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r2 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: int size()>();

        $i1 = r0.<ucar.nc2.util.cache.FileCache: int minElements>;

        if $i0 > $i1 goto label03;

     label02:
        $r93 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean hasScheduled>;

        virtualinvoke $r93.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;

     label03:
        $r4 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FileCache ");

        $r6 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cleanup started at ");

        $r9 = new java.util.Date;

        specialinvoke $r9.<java.util.Date: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for cleanup maxElements=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r13);

        $z1 = <ucar.nc2.util.cache.FileCache: boolean debugCleanup>;

        if $z1 == 0 goto label04;

        $r83 = <java.lang.System: java.io.PrintStream out>;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FileCache ");

        $r85 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cleanup started at ");

        $r88 = new java.util.Date;

        specialinvoke $r88.<java.util.Date: void <init>()>();

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r88);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for cleanup maxElements=");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>($r92);

     label04:
        $r14 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicInteger cleanups>;

        virtualinvoke $r14.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r15 = new java.util.ArrayList;

        $i3 = $i0 + 10;

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i3);

        $r16 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $r17 = virtualinvoke $r16.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $r18 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z8 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label07;

        $r80 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r108 = (ucar.nc2.util.cache.FileCache$CacheElement$CacheFile) $r80;

        $r81 = r108.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: java.util.concurrent.atomic.AtomicBoolean isLocked>;

        $z7 = virtualinvoke $r81.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z7 != 0 goto label06;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r108);

     label06:
        goto label05;

     label07:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r15);

        $i4 = r0.<ucar.nc2.util.cache.FileCache: int minElements>;

        i12 = $i0 - $i4;

        i13 = $i0 - i2;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>(i12);

        i14 = 0;

        $r20 = virtualinvoke $r15.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        if i14 >= i12 goto label10;

        $r78 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r109 = (ucar.nc2.util.cache.FileCache$CacheElement$CacheFile) $r78;

        $r79 = r109.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: java.util.concurrent.atomic.AtomicBoolean isLocked>;

        $z6 = virtualinvoke $r79.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z6 == 0 goto label09;

        virtualinvoke r109.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: void remove()>();

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>(r109);

        i14 = i14 + 1;

     label09:
        goto label08;

     label10:
        if i14 >= i13 goto label11;

        $r59 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r61 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cleanup couldnt remove enough to keep under the maximum= ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to locked files; currently at = ");

        $i10 = $i0 - i14;

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r59.<org.slf4j.Logger: void warn(java.lang.String)>($r67);

        $z5 = <ucar.nc2.util.cache.FileCache: boolean debugCleanup>;

        if $z5 == 0 goto label11;

        $r69 = <java.lang.System: java.io.PrintStream out>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r71 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cleanup couldnt remove enough to keep under the maximum= ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to locked files; currently at = ");

        $i11 = $i0 - i14;

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r77);

     label11:
        $r110 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        entermonitor $r110;

     label12:
        $r111 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $r112 = virtualinvoke $r111.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $r113 = interfaceinvoke $r112.<java.util.Collection: java.util.Iterator iterator()>();

     label13:
        $z9 = interfaceinvoke $r113.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label20;

        $r54 = interfaceinvoke $r113.<java.util.Iterator: java.lang.Object next()>();

        r114 = (ucar.nc2.util.cache.FileCache$CacheElement) $r54;

        entermonitor r114;

     label14:
        $r55 = r114.<ucar.nc2.util.cache.FileCache$CacheElement: java.util.List list>;

        $i9 = interfaceinvoke $r55.<java.util.List: int size()>();

        if $i9 != 0 goto label15;

        $r57 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap cache>;

        $r56 = r114.<ucar.nc2.util.cache.FileCache$CacheElement: java.lang.Object hashKey>;

        virtualinvoke $r57.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r56);

     label15:
        exitmonitor r114;

     label16:
        goto label19;

     label17:
        $r107 := @caughtexception;

        exitmonitor r114;

     label18:
        throw $r107;

     label19:
        goto label13;

     label20:
        exitmonitor $r110;

     label21:
        goto label24;

     label22:
        $r106 := @caughtexception;

        exitmonitor $r110;

     label23:
        throw $r106;

     label24:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r21 = virtualinvoke $r19.<java.util.ArrayList: java.util.Iterator iterator()>();

     label25:
        $z3 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label30;

        $r49 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r115 = (ucar.nc2.util.cache.FileCache$CacheElement$CacheFile) $r49;

        $r51 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        $r50 = r115.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: ucar.nc2.util.cache.FileCacheable ncfile>;

        virtualinvoke $r51.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r50);

     label26:
        $r52 = r115.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: ucar.nc2.util.cache.FileCacheable ncfile>;

        interfaceinvoke $r52.<ucar.nc2.util.cache.FileCacheable: void setFileCache(ucar.nc2.util.cache.FileCache)>(null);

        $r53 = r115.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: ucar.nc2.util.cache.FileCacheable ncfile>;

        interfaceinvoke $r53.<ucar.nc2.util.cache.FileCacheable: void close()>();

        r115.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: ucar.nc2.util.cache.FileCacheable ncfile> = null;

     label27:
        goto label29;

     label28:
        $r96 := @caughtexception;

        $r98 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger log>;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileCache ");

        $r100 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" close failed on ");

        $r103 = virtualinvoke r115.<ucar.nc2.util.cache.FileCache$CacheElement$CacheFile: java.lang.String getCacheName()>();

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r98.<org.slf4j.Logger: void error(java.lang.String)>($r105);

     label29:
        goto label25;

     label30:
        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l15 = $l6 - $l5;

        $r23 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FileCache ");

        $r25 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cleanup had= ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" removed= ");

        $i7 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l15);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String)>($r34);

        $z4 = <ucar.nc2.util.cache.FileCache: boolean debugCleanup>;

        if $z4 == 0 goto label31;

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FileCache ");

        $r39 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cleanup had= ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" removed= ");

        $i8 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took=");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l15);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r48);

     label31:
        $r35 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean hasScheduled>;

        virtualinvoke $r35.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        goto label34;

     label32:
        $r94 := @caughtexception;

     label33:
        $r95 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.atomic.AtomicBoolean hasScheduled>;

        virtualinvoke $r95.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        throw $r94;

     label34:
        return;

        catch java.lang.Throwable from label14 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label12 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label03 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
    }

    static java.util.concurrent.ConcurrentHashMap access$200(ucar.nc2.util.cache.FileCache)
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        ucar.nc2.util.cache.FileCache r0;

        r0 := @parameter0: ucar.nc2.util.cache.FileCache;

        $r1 = r0.<ucar.nc2.util.cache.FileCache: java.util.concurrent.ConcurrentHashMap files>;

        return $r1;
    }

    static java.lang.String access$300(ucar.nc2.util.cache.FileCache)
    {
        java.lang.String $r1;
        ucar.nc2.util.cache.FileCache r0;

        r0 := @parameter0: ucar.nc2.util.cache.FileCache;

        $r1 = r0.<ucar.nc2.util.cache.FileCache: java.lang.String name>;

        return $r1;
    }

    static org.slf4j.Logger access$400()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog>;

        return $r0;
    }

    static int access$500(ucar.nc2.util.cache.FileCache)
    {
        int $i0;
        ucar.nc2.util.cache.FileCache r0;

        r0 := @parameter0: ucar.nc2.util.cache.FileCache;

        $i0 = r0.<ucar.nc2.util.cache.FileCache: int softLimit>;

        return $i0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0, $r1;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/util/cache/FileCache;");

        <ucar.nc2.util.cache.FileCache: org.slf4j.Logger log> = $r0;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>("cacheLogger");

        <ucar.nc2.util.cache.FileCache: org.slf4j.Logger cacheLog> = $r1;

        <ucar.nc2.util.cache.FileCache: boolean debug> = 0;

        <ucar.nc2.util.cache.FileCache: boolean debugPrint> = 0;

        <ucar.nc2.util.cache.FileCache: boolean debugCleanup> = 0;

        return;
    }
}
