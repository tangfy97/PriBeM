public final class org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder extends java.lang.Object
{
    private java.lang.String waveletName;
    private final java.util.List appliedDelta;
    private org.waveprotocol.wave.federation.ProtocolHashedVersion commitNotice;
    private org.waveprotocol.wave.federation.ProtocolHashedVersion resultingVersion;
    private org.waveprotocol.box.common.comms.WaveletSnapshot snapshot;
    private java.lang.Boolean marker;
    private java.lang.String channelId;

    public void <init>()
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.util.List appliedDelta> = $r1;

        return;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder setWaveletName(java.lang.String)
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.lang.String waveletName> = r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder addAllAppliedDelta(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        org.waveprotocol.wave.federation.ProtocolWaveletDelta r4;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r2;
        java.lang.Object $r3;
        boolean $z0;

        r2 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.federation.ProtocolWaveletDelta) $r3;

        virtualinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder addAppliedDelta(org.waveprotocol.wave.federation.ProtocolWaveletDelta)>(r4);

        goto label1;

     label2:
        return r2;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder setAppliedDelta(int, org.waveprotocol.wave.federation.ProtocolWaveletDelta)
    {
        java.util.List $r2;
        org.waveprotocol.wave.federation.ProtocolWaveletDelta r1;
        int i0;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.federation.ProtocolWaveletDelta;

        $r2 = r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.util.List appliedDelta>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder addAppliedDelta(org.waveprotocol.wave.federation.ProtocolWaveletDelta)
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;
        java.util.List $r2;
        org.waveprotocol.wave.federation.ProtocolWaveletDelta r1;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletDelta;

        $r2 = r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.util.List appliedDelta>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder clearAppliedDelta()
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        $r1 = r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.util.List appliedDelta>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder clearCommitNotice()
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion commitNotice> = null;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder setCommitNotice(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion commitNotice> = r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder clearResultingVersion()
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion resultingVersion> = null;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder setResultingVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion resultingVersion> = r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder clearSnapshot()
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: org.waveprotocol.box.common.comms.WaveletSnapshot snapshot> = null;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder setSnapshot(org.waveprotocol.box.common.comms.WaveletSnapshot)
    {
        org.waveprotocol.box.common.comms.WaveletSnapshot r1;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r1 := @parameter0: org.waveprotocol.box.common.comms.WaveletSnapshot;

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: org.waveprotocol.box.common.comms.WaveletSnapshot snapshot> = r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder clearMarker()
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.lang.Boolean marker> = null;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder setMarker(boolean)
    {
        java.lang.Boolean $r1;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;
        boolean z0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.lang.Boolean marker> = $r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder clearChannelId()
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.lang.String channelId> = null;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder setChannelId(java.lang.String)
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.lang.String channelId> = r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolWaveletUpdate build(org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder$Factory)
    {
        org.waveprotocol.box.common.comms.WaveletSnapshot $r7;
        java.util.List $r4;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdate $r1;
        java.lang.Boolean $r8;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder r2;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder$Factory r0;
        java.lang.String $r3, $r9;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r5, $r6;
        boolean $z0;

        r2 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder;

        r0 := @parameter0: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder$Factory: org.waveprotocol.box.common.comms.ProtocolWaveletUpdate create()>();

        $r3 = r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.lang.String waveletName>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: void setWaveletName(java.lang.String)>($r3);

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: void clearAppliedDelta()>();

        $r4 = r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.util.List appliedDelta>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: void addAllAppliedDelta(java.util.List)>($r4);

        $r5 = r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion commitNotice>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: void setCommitNotice(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r5);

        $r6 = r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion resultingVersion>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: void setResultingVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r6);

        $r7 = r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: org.waveprotocol.box.common.comms.WaveletSnapshot snapshot>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: void setSnapshot(org.waveprotocol.box.common.comms.WaveletSnapshot)>($r7);

        $r8 = r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.lang.Boolean marker>;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: void setMarker(boolean)>($z0);

        $r9 = r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdateBuilder: java.lang.String channelId>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: void setChannelId(java.lang.String)>($r9);

        return $r1;
    }
}
