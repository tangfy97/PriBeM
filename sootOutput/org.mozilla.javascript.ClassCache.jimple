public class org.mozilla.javascript.ClassCache extends java.lang.Object
{
    private static final java.lang.Object AKEY;
    private volatile boolean cachingIsEnabled;
    java.util.Hashtable classTable;
    java.util.Hashtable javaAdapterGeneratedClasses;
    org.mozilla.javascript.ScriptableObject scope;
    private java.util.Hashtable interfaceAdapterCache;
    private int generatedClassSerial;

    public void <init>()
    {
        java.util.Hashtable $r1, $r2;
        org.mozilla.javascript.ClassCache r0;

        r0 := @this: org.mozilla.javascript.ClassCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.ClassCache: boolean cachingIsEnabled> = 1;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.mozilla.javascript.ClassCache: java.util.Hashtable classTable> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.mozilla.javascript.ClassCache: java.util.Hashtable javaAdapterGeneratedClasses> = $r2;

        return;
    }

    public static org.mozilla.javascript.ClassCache get(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.ClassCache $r3, r4;
        java.lang.Object $r1, $r2;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        $r1 = <org.mozilla.javascript.ClassCache: java.lang.Object AKEY>;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getTopScopeValue(org.mozilla.javascript.Scriptable,java.lang.Object)>(r0, $r1);

        r4 = (org.mozilla.javascript.ClassCache) $r2;

        if r4 != null goto label1;

        $r3 = new org.mozilla.javascript.ClassCache;

        specialinvoke $r3.<org.mozilla.javascript.ClassCache: void <init>()>();

        r4 = $r3;

     label1:
        return r4;
    }

    public boolean associate(org.mozilla.javascript.ScriptableObject)
    {
        org.mozilla.javascript.ScriptableObject r0;
        org.mozilla.javascript.Scriptable $r1;
        org.mozilla.javascript.ClassCache r2;
        java.lang.Object $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r2 := @this: org.mozilla.javascript.ClassCache;

        r0 := @parameter0: org.mozilla.javascript.ScriptableObject;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getParentScope()>();

        if $r1 == null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r3 = <org.mozilla.javascript.ClassCache: java.lang.Object AKEY>;

        $r4 = virtualinvoke r0.<org.mozilla.javascript.ScriptableObject: java.lang.Object associateValue(java.lang.Object,java.lang.Object)>($r3, r2);

        if r2 != $r4 goto label2;

        r2.<org.mozilla.javascript.ClassCache: org.mozilla.javascript.ScriptableObject scope> = r0;

        return 1;

     label2:
        return 0;
    }

    public synchronized void clearCaches()
    {
        java.util.Hashtable $r1, $r2;
        org.mozilla.javascript.ClassCache r0;

        r0 := @this: org.mozilla.javascript.ClassCache;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.mozilla.javascript.ClassCache: java.util.Hashtable classTable> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.mozilla.javascript.ClassCache: java.util.Hashtable javaAdapterGeneratedClasses> = $r2;

        r0.<org.mozilla.javascript.ClassCache: java.util.Hashtable interfaceAdapterCache> = null;

        return;
    }

    public final boolean isCachingEnabled()
    {
        org.mozilla.javascript.ClassCache r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.ClassCache;

        $z0 = r0.<org.mozilla.javascript.ClassCache: boolean cachingIsEnabled>;

        return $z0;
    }

    public synchronized void setCachingEnabled(boolean)
    {
        boolean z0, $z1;
        org.mozilla.javascript.ClassCache r0;

        r0 := @this: org.mozilla.javascript.ClassCache;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.mozilla.javascript.ClassCache: boolean cachingIsEnabled>;

        if z0 != $z1 goto label1;

        return;

     label1:
        if z0 != 0 goto label2;

        virtualinvoke r0.<org.mozilla.javascript.ClassCache: void clearCaches()>();

     label2:
        r0.<org.mozilla.javascript.ClassCache: boolean cachingIsEnabled> = z0;

        return;
    }

    public boolean isInvokerOptimizationEnabled()
    {
        org.mozilla.javascript.ClassCache r0;

        r0 := @this: org.mozilla.javascript.ClassCache;

        return 0;
    }

    public synchronized void setInvokerOptimizationEnabled(boolean)
    {
        org.mozilla.javascript.ClassCache r0;
        boolean z0;

        r0 := @this: org.mozilla.javascript.ClassCache;

        z0 := @parameter0: boolean;

        return;
    }

    public final synchronized int newClassSerialNumber()
    {
        int $i0, $i1;
        org.mozilla.javascript.ClassCache r0;

        r0 := @this: org.mozilla.javascript.ClassCache;

        $i0 = r0.<org.mozilla.javascript.ClassCache: int generatedClassSerial>;

        $i1 = $i0 + 1;

        r0.<org.mozilla.javascript.ClassCache: int generatedClassSerial> = $i1;

        return $i1;
    }

    java.lang.Object getInterfaceAdapter(java.lang.Class)
    {
        org.mozilla.javascript.ClassCache r0;
        java.lang.Class r2;
        java.lang.Object r3;
        java.util.Hashtable r1;

        r0 := @this: org.mozilla.javascript.ClassCache;

        r2 := @parameter0: java.lang.Class;

        r1 = r0.<org.mozilla.javascript.ClassCache: java.util.Hashtable interfaceAdapterCache>;

        if r1 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

     label2:
        return r3;
    }

    synchronized void cacheInterfaceAdapter(java.lang.Class, java.lang.Object)
    {
        org.mozilla.javascript.ClassCache r0;
        java.lang.Class r2;
        java.lang.Object r3;
        java.util.Hashtable $r1, $r4, $r5;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.ClassCache;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Object;

        $z0 = r0.<org.mozilla.javascript.ClassCache: boolean cachingIsEnabled>;

        if $z0 == 0 goto label2;

        $r1 = r0.<org.mozilla.javascript.ClassCache: java.util.Hashtable interfaceAdapterCache>;

        if $r1 != null goto label1;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<org.mozilla.javascript.ClassCache: java.util.Hashtable interfaceAdapterCache> = $r5;

     label1:
        $r4 = r0.<org.mozilla.javascript.ClassCache: java.util.Hashtable interfaceAdapterCache>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label2:
        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.ClassCache: java.lang.Object AKEY> = $r0;

        return;
    }
}
