public final class org.apache.poi.util.LittleEndianByteArrayOutputStream extends java.lang.Object implements org.apache.poi.util.LittleEndianOutput, org.apache.poi.util.DelayableLittleEndianOutput
{
    private final byte[] _buf;
    private final int _endIndex;
    private int _writeIndex;

    public void <init>(byte[], int, int)
    {
        byte[] r6;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r9, $r19;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;
        java.lang.IllegalArgumentException $r1, $r10;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        r6 := @parameter0: byte[];

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 < 0 goto label1;

        $i2 = lengthof r6;

        if i0 <= $i2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified startOffset (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of allowable range (0..");

        $i1 = lengthof r6;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label2:
        r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf> = r6;

        r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex> = i0;

        $i4 = i0 + i3;

        r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _endIndex> = $i4;

        $i5 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _endIndex>;

        if $i5 < i0 goto label3;

        $i10 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _endIndex>;

        $i9 = lengthof r6;

        if $i10 <= $i9 goto label4;

     label3:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("calculated end index (");

        $i6 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _endIndex>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of allowable range (");

        $i7 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $i8 = lengthof r6;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r10;

     label4:
        return;
    }

    public void <init>(byte[], int)
    {
        byte[] r1;
        int i0, $i1, $i2;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = lengthof r1;

        $i2 = $i1 - i0;

        specialinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void <init>(byte[],int,int)>(r1, i0, $i2);

        return;
    }

    private void checkPosition(int)
    {
        int i0, $i1, $i2, $i3;
        java.lang.RuntimeException $r1;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        i0 := @parameter0: int;

        $i2 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _endIndex>;

        $i1 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        $i3 = $i2 - $i1;

        if i0 <= $i3 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Buffer overrun");

        throw $r1;

     label1:
        return;
    }

    public void writeByte(int)
    {
        byte[] $r1;
        byte $b3;
        int $i0, $i1, i2;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        i2 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void checkPosition(int)>(1);

        $r1 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf>;

        $i0 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex> = $i1;

        $b3 = (byte) i2;

        $r1[$i0] = $b3;

        return;
    }

    public void writeDouble(double)
    {
        long $l0;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;
        double d0;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeLong(long)>($l0);

        return;
    }

    public void writeInt(int)
    {
        byte[] $r1, $r2, $r3, $r4;
        byte $b3, $b6, $b9, $b12;
        int i0, $i1, $i2, $i4, $i5, $i7, $i8, $i10, $i11, i13, i14, i15, i16, i17;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void checkPosition(int)>(4);

        i13 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        $r1 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf>;

        i14 = i13 + 1;

        $i1 = i0 >>> 0;

        $i2 = $i1 & 255;

        $b3 = (byte) $i2;

        $r1[i13] = $b3;

        $r2 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf>;

        i15 = i14 + 1;

        $i4 = i0 >>> 8;

        $i5 = $i4 & 255;

        $b6 = (byte) $i5;

        $r2[i14] = $b6;

        $r3 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf>;

        i16 = i15 + 1;

        $i7 = i0 >>> 16;

        $i8 = $i7 & 255;

        $b9 = (byte) $i8;

        $r3[i15] = $b9;

        $r4 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf>;

        i17 = i16 + 1;

        $i10 = i0 >>> 24;

        $i11 = $i10 & 255;

        $b12 = (byte) $i11;

        $r4[i16] = $b12;

        r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex> = i17;

        return;
    }

    public void writeLong(long)
    {
        int $i2, $i4;
        long l0, $l1, $l3;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        l0 := @parameter0: long;

        $l1 = l0 >> 0;

        $i2 = (int) $l1;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>($i2);

        $l3 = l0 >> 32;

        $i4 = (int) $l3;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>($i4);

        return;
    }

    public void writeShort(int)
    {
        byte[] $r1, $r2;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;
        byte $b3, $b6;
        int i0, $i1, $i2, $i4, $i5, i7, i8, i9;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void checkPosition(int)>(2);

        i7 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        $r1 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf>;

        i8 = i7 + 1;

        $i1 = i0 >>> 0;

        $i2 = $i1 & 255;

        $b3 = (byte) $i2;

        $r1[i7] = $b3;

        $r2 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf>;

        i9 = i8 + 1;

        $i4 = i0 >>> 8;

        $i5 = $i4 & 255;

        $b6 = (byte) $i5;

        $r2[i8] = $b6;

        r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex> = i9;

        return;
    }

    public void write(byte[])
    {
        byte[] r0, $r2;
        int i0, $i1, $i2, $i3;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r1;

        r1 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        r0 := @parameter0: byte[];

        i0 = lengthof r0;

        specialinvoke r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void checkPosition(int)>(i0);

        $r2 = r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf>;

        $i1 = r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r2, $i1, i0);

        $i2 = r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        $i3 = $i2 + i0;

        r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex> = $i3;

        return;
    }

    public void write(byte[], int, int)
    {
        byte[] r1, $r2;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void checkPosition(int)>(i0);

        $r2 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf>;

        $i2 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, $r2, $i2, i0);

        $i3 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        $i4 = $i3 + i0;

        r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex> = $i4;

        return;
    }

    public int getWriteIndex()
    {
        int $i0;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        $i0 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        return $i0;
    }

    public org.apache.poi.util.LittleEndianOutput createDelayedOutput(int)
    {
        byte[] $r2;
        int i0, $i1, $i2, $i3;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0, $r1;

        r0 := @this: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void checkPosition(int)>(i0);

        $r1 = new org.apache.poi.util.LittleEndianByteArrayOutputStream;

        $r2 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: byte[] _buf>;

        $i1 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        specialinvoke $r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void <init>(byte[],int,int)>($r2, $i1, i0);

        $i2 = r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex>;

        $i3 = $i2 + i0;

        r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int _writeIndex> = $i3;

        return $r1;
    }
}
