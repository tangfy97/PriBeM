public class org.apache.xalan.templates.ElemElement extends org.apache.xalan.templates.ElemUse
{
    protected org.apache.xalan.templates.AVT m_name_avt;
    protected org.apache.xalan.templates.AVT m_namespace_avt;

    public void <init>()
    {
        org.apache.xalan.templates.ElemElement r0;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        specialinvoke r0.<org.apache.xalan.templates.ElemUse: void <init>()>();

        r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt> = null;

        r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt> = null;

        return;
    }

    public void setName(org.apache.xalan.templates.AVT)
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.AVT r1;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: org.apache.xalan.templates.AVT;

        r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt> = r1;

        return;
    }

    public org.apache.xalan.templates.AVT getName()
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.AVT $r1;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        $r1 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        return $r1;
    }

    public void setNamespace(org.apache.xalan.templates.AVT)
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.AVT r1;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: org.apache.xalan.templates.AVT;

        r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt> = r1;

        return;
    }

    public org.apache.xalan.templates.AVT getNamespace()
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.AVT $r1;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        $r1 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        return $r1;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.AVT $r4, $r5, $r6, $r7;
        org.apache.xalan.templates.StylesheetRoot r1;
        java.util.Vector $r3;
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r2;
        int $i0, $i1;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r2 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r4 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        if null == $r4 goto label1;

        $r7 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        $i1 = virtualinvoke $r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r7.<org.apache.xalan.templates.AVT: void fixupVariables(java.util.Vector,int)>($r3, $i1);

     label1:
        $r5 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        if null == $r5 goto label2;

        $r6 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        $i0 = virtualinvoke $r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r6.<org.apache.xalan.templates.AVT: void fixupVariables(java.util.Vector,int)>($r3, $i0);

     label2:
        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemElement r0;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        return 46;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemElement r0;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        return "element";
    }

    protected java.lang.String resolvePrefix(org.apache.xml.serializer.SerializationHandler, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemElement r1;
        java.lang.String r0, r3;
        org.apache.xml.serializer.SerializationHandler r2;

        r1 := @this: org.apache.xalan.templates.ElemElement;

        r2 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return r0;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.MsgMgr $r10, $r14, $r21, $r25;
        org.apache.xml.serializer.SerializationHandler $r1;
        org.apache.xalan.trace.TraceManager $r6, $r23;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Exception $r24;
        org.apache.xalan.templates.ElemElement r3;
        java.lang.Object[] $r11, $r22, $r26;
        org.apache.xalan.templates.AVT $r4, $r5, $r8, $r12, $r20;
        org.apache.xpath.XPathContext $r2;
        java.lang.StringBuffer $r15, $r16, $r17, $r19;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r7, $r9, $r13, $r18, $r27, r28, r29, r30, $r31;
        org.apache.xalan.transformer.TransformerImpl r0;

        r3 := @this: org.apache.xalan.templates.ElemElement;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label01;

        $r23 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r23.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r3);

     label01:
        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()>();

        $r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $i0 = virtualinvoke $r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r4 = r3.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        if $r4 != null goto label02;

        $r27 = null;

        goto label03;

     label02:
        $r5 = r3.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        $r27 = virtualinvoke $r5.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r2, $i0, r3);

     label03:
        r28 = $r27;

        r29 = null;

        r30 = "";

        if $r27 == null goto label04;

        $r20 = r3.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        $z1 = virtualinvoke $r20.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z1 != 0 goto label04;

        $z2 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidQName(java.lang.String)>($r27);

        if $z2 != 0 goto label04;

        $r21 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r22 = newarray (java.lang.Object)[2];

        $r22[0] = "name";

        $r22[1] = $r27;

        virtualinvoke $r21.<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r3, "WG_ILLEGAL_ATTRIBUTE_VALUE", $r22);

        r28 = null;

        goto label13;

     label04:
        if r28 == null goto label13;

        $r7 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getPrefixPart(java.lang.String)>(r28);

        r29 = $r7;

        $r8 = r3.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        if null == $r8 goto label09;

        $r12 = r3.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        $r13 = virtualinvoke $r12.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r2, $i0, r3);

        r30 = $r13;

        if null == $r13 goto label05;

        if $r7 == null goto label06;

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i3 <= 0 goto label06;

        $i4 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i4 != 0 goto label06;

     label05:
        $r14 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        virtualinvoke $r14.<org.apache.xalan.transformer.MsgMgr: void error(javax.xml.transform.SourceLocator,java.lang.String)>(r3, "ER_NULL_URI_NAMESPACE");

        goto label13;

     label06:
        $r31 = virtualinvoke r3.<org.apache.xalan.templates.ElemElement: java.lang.String resolvePrefix(org.apache.xml.serializer.SerializationHandler,java.lang.String,java.lang.String)>($r1, $r7, $r13);

        r29 = $r31;

        if null != $r31 goto label07;

        r29 = "";

     label07:
        $i2 = virtualinvoke r29.<java.lang.String: int length()>();

        if $i2 <= 0 goto label08;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r29);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r18 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)>(r28);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        r28 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label13;

     label08:
        r28 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)>(r28);

        goto label13;

     label09:
        $r9 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNamespaceForPrefix(java.lang.String)>($r7);

        r30 = $r9;

        if null != $r9 goto label10;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 != 0 goto label10;

        r30 = "";

        goto label11;

     label10:
        if null != $r9 goto label11;

        $r10 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r7;

        virtualinvoke $r10.<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r3, "WG_COULD_NOT_RESOLVE_PREFIX", $r11);

        r28 = null;

     label11:
        goto label13;

     label12:
        $r24 := @caughtexception;

        $r25 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = $r7;

        virtualinvoke $r25.<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r3, "WG_COULD_NOT_RESOLVE_PREFIX", $r26);

        r28 = null;

     label13:
        virtualinvoke r3.<org.apache.xalan.templates.ElemElement: void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)>(r28, r29, r30, r0);

        $z3 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z3 == 0 goto label14;

        $r6 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r6.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r3);

     label14:
        return;

        catch java.lang.Exception from label09 to label11 with label12;
    }

    void constructNode(java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.TransformerException $r9;
        org.apache.xml.serializer.SerializationHandler $r1;
        org.apache.xalan.templates.ElemElement r6;
        org.xml.sax.SAXException $r8;
        java.lang.String r2, r3, r4, $r5, $r7;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean z0;

        r6 := @this: org.apache.xalan.templates.ElemElement;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r0 := @parameter3: org.apache.xalan.transformer.TransformerImpl;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        if null != r2 goto label2;

        z0 = 0;

        goto label4;

     label2:
        if null == r3 goto label3;

        interfaceinvoke $r1.<org.apache.xml.serializer.ExtendedContentHandler: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r3, r4, 1);

     label3:
        $r5 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)>(r2);

        interfaceinvoke $r1.<org.apache.xml.serializer.ExtendedContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String)>(r4, $r5, r2);

        specialinvoke r6.<org.apache.xalan.templates.ElemUse: void execute(org.apache.xalan.transformer.TransformerImpl)>(r0);

        z0 = 1;

     label4:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r6, z0);

        if null == r2 goto label5;

        $r7 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)>(r2);

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r4, $r7, r2);

        if null == r3 goto label5;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>(r3);

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        $r9 = new javax.xml.transform.TransformerException;

        specialinvoke $r9.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label7:
        return;

        catch org.xml.sax.SAXException from label1 to label5 with label6;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xalan.templates.XSLTVisitor r1;
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.AVT $r2, $r3, $r4, $r5;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $r2 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        if null == $r2 goto label1;

        $r5 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        virtualinvoke $r5.<org.apache.xalan.templates.AVT: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

     label1:
        $r3 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        if null == $r3 goto label2;

        $r4 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        virtualinvoke $r4.<org.apache.xalan.templates.AVT: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

     label2:
        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r1, z0);

        return;
    }
}
