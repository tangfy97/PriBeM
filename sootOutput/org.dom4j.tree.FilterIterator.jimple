public abstract class org.dom4j.tree.FilterIterator extends java.lang.Object implements java.util.Iterator
{
    protected java.util.Iterator proxy;
    private java.lang.Object next;
    private boolean first;

    public void <init>(java.util.Iterator)
    {
        java.util.Iterator r1;
        org.dom4j.tree.FilterIterator r0;

        r0 := @this: org.dom4j.tree.FilterIterator;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.tree.FilterIterator: boolean first> = 1;

        r0.<org.dom4j.tree.FilterIterator: java.util.Iterator proxy> = r1;

        return;
    }

    public boolean hasNext()
    {
        java.lang.Object $r1, $r2;
        org.dom4j.tree.FilterIterator r0;
        boolean $z0, $z1;

        r0 := @this: org.dom4j.tree.FilterIterator;

        $z0 = r0.<org.dom4j.tree.FilterIterator: boolean first>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.dom4j.tree.FilterIterator: java.lang.Object findNext()>();

        r0.<org.dom4j.tree.FilterIterator: java.lang.Object next> = $r2;

        r0.<org.dom4j.tree.FilterIterator: boolean first> = 0;

     label1:
        $r1 = r0.<org.dom4j.tree.FilterIterator: java.lang.Object next>;

        if $r1 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.Object next() throws java.util.NoSuchElementException
    {
        java.lang.Object r1, $r2;
        java.util.NoSuchElementException $r3;
        org.dom4j.tree.FilterIterator r0;
        boolean $z0;

        r0 := @this: org.dom4j.tree.FilterIterator;

        $z0 = virtualinvoke r0.<org.dom4j.tree.FilterIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        r1 = r0.<org.dom4j.tree.FilterIterator: java.lang.Object next>;

        $r2 = virtualinvoke r0.<org.dom4j.tree.FilterIterator: java.lang.Object findNext()>();

        r0.<org.dom4j.tree.FilterIterator: java.lang.Object next> = $r2;

        return r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.dom4j.tree.FilterIterator r1;

        r1 := @this: org.dom4j.tree.FilterIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    protected abstract boolean matches(java.lang.Object);

    protected java.lang.Object findNext()
    {
        java.util.Iterator $r1, $r2, $r3;
        java.lang.Object $r4;
        org.dom4j.tree.FilterIterator r0;
        boolean $z0, $z1;

        r0 := @this: org.dom4j.tree.FilterIterator;

        $r1 = r0.<org.dom4j.tree.FilterIterator: java.util.Iterator proxy>;

        if $r1 == null goto label4;

     label1:
        $r2 = r0.<org.dom4j.tree.FilterIterator: java.util.Iterator proxy>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<org.dom4j.tree.FilterIterator: java.util.Iterator proxy>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $r4 == null goto label2;

        $z1 = virtualinvoke r0.<org.dom4j.tree.FilterIterator: boolean matches(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        return $r4;

     label2:
        goto label1;

     label3:
        r0.<org.dom4j.tree.FilterIterator: java.util.Iterator proxy> = null;

     label4:
        return null;
    }
}
