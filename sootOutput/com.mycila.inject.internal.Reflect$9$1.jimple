class com.mycila.inject.internal.Reflect$9$1 extends java.lang.Object implements com.mycila.inject.internal.guava.base.Predicate
{
    final java.util.List val$thisMethods;
    final com.mycila.inject.internal.Reflect$9 this$0;

    void <init>(com.mycila.inject.internal.Reflect$9, java.util.List)
    {
        java.util.List r2;
        com.mycila.inject.internal.Reflect$9$1 r0;
        com.mycila.inject.internal.Reflect$9 r1;

        r0 := @this: com.mycila.inject.internal.Reflect$9$1;

        r1 := @parameter0: com.mycila.inject.internal.Reflect$9;

        r2 := @parameter1: java.util.List;

        r0.<com.mycila.inject.internal.Reflect$9$1: com.mycila.inject.internal.Reflect$9 this$0> = r1;

        r0.<com.mycila.inject.internal.Reflect$9$1: java.util.List val$thisMethods> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(com.mycila.inject.internal.Signature)
    {
        com.mycila.inject.internal.Signature r1, r5;
        java.util.List $r2, $r3;
        int $i0, $i2;
        java.lang.Object $r4;
        com.mycila.inject.internal.Reflect$9$1 r0;
        java.lang.reflect.Method $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: com.mycila.inject.internal.Reflect$9$1;

        r1 := @parameter0: com.mycila.inject.internal.Signature;

        $r2 = r0.<com.mycila.inject.internal.Reflect$9$1: java.util.List val$thisMethods>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return 1;

     label1:
        $r3 = r0.<com.mycila.inject.internal.Reflect$9$1: java.util.List val$thisMethods>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        r5 = (com.mycila.inject.internal.Signature) $r4;

        $r7 = r5.<com.mycila.inject.internal.Signature: java.lang.reflect.Method method>;

        $r6 = r1.<com.mycila.inject.internal.Signature: java.lang.reflect.Method method>;

        $z0 = staticinvoke <com.mycila.inject.internal.Reflect: boolean access$400(java.lang.reflect.Method,java.lang.reflect.Method)>($r7, $r6);

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public volatile boolean apply(java.lang.Object)
    {
        com.mycila.inject.internal.Signature $r2;
        java.lang.Object r1;
        com.mycila.inject.internal.Reflect$9$1 r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.Reflect$9$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.mycila.inject.internal.Signature) r1;

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.Reflect$9$1: boolean apply(com.mycila.inject.internal.Signature)>($r2);

        return $z0;
    }
}
