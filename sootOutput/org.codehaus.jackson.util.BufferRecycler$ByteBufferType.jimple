public final enum class org.codehaus.jackson.util.BufferRecycler$ByteBufferType extends java.lang.Enum
{
    public static final enum org.codehaus.jackson.util.BufferRecycler$ByteBufferType READ_IO_BUFFER;
    public static final enum org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER;
    public static final enum org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER;
    private final int size;
    private static final org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] $VALUES;

    public static org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] values()
    {
        org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.codehaus.jackson.util.BufferRecycler$ByteBufferType: org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.codehaus.jackson.util.BufferRecycler$ByteBufferType[]) $r1;

        return $r2;
    }

    public static org.codehaus.jackson.util.BufferRecycler$ByteBufferType valueOf(java.lang.String)
    {
        org.codehaus.jackson.util.BufferRecycler$ByteBufferType $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/util/BufferRecycler$ByteBufferType;", r0);

        $r2 = (org.codehaus.jackson.util.BufferRecycler$ByteBufferType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        org.codehaus.jackson.util.BufferRecycler$ByteBufferType r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.codehaus.jackson.util.BufferRecycler$ByteBufferType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.codehaus.jackson.util.BufferRecycler$ByteBufferType: int size> = i1;

        return;
    }

    static int access$000(org.codehaus.jackson.util.BufferRecycler$ByteBufferType)
    {
        int $i0;
        org.codehaus.jackson.util.BufferRecycler$ByteBufferType r0;

        r0 := @parameter0: org.codehaus.jackson.util.BufferRecycler$ByteBufferType;

        $i0 = r0.<org.codehaus.jackson.util.BufferRecycler$ByteBufferType: int size>;

        return $i0;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.util.BufferRecycler$ByteBufferType $r0, $r1, $r2, $r4, $r5, $r6;
        org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] $r3;

        $r0 = new org.codehaus.jackson.util.BufferRecycler$ByteBufferType;

        specialinvoke $r0.<org.codehaus.jackson.util.BufferRecycler$ByteBufferType: void <init>(java.lang.String,int,int)>("READ_IO_BUFFER", 0, 4000);

        <org.codehaus.jackson.util.BufferRecycler$ByteBufferType: org.codehaus.jackson.util.BufferRecycler$ByteBufferType READ_IO_BUFFER> = $r0;

        $r1 = new org.codehaus.jackson.util.BufferRecycler$ByteBufferType;

        specialinvoke $r1.<org.codehaus.jackson.util.BufferRecycler$ByteBufferType: void <init>(java.lang.String,int,int)>("WRITE_ENCODING_BUFFER", 1, 4000);

        <org.codehaus.jackson.util.BufferRecycler$ByteBufferType: org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER> = $r1;

        $r2 = new org.codehaus.jackson.util.BufferRecycler$ByteBufferType;

        specialinvoke $r2.<org.codehaus.jackson.util.BufferRecycler$ByteBufferType: void <init>(java.lang.String,int,int)>("WRITE_CONCAT_BUFFER", 2, 2000);

        <org.codehaus.jackson.util.BufferRecycler$ByteBufferType: org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER> = $r2;

        $r3 = newarray (org.codehaus.jackson.util.BufferRecycler$ByteBufferType)[3];

        $r4 = <org.codehaus.jackson.util.BufferRecycler$ByteBufferType: org.codehaus.jackson.util.BufferRecycler$ByteBufferType READ_IO_BUFFER>;

        $r3[0] = $r4;

        $r5 = <org.codehaus.jackson.util.BufferRecycler$ByteBufferType: org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER>;

        $r3[1] = $r5;

        $r6 = <org.codehaus.jackson.util.BufferRecycler$ByteBufferType: org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER>;

        $r3[2] = $r6;

        <org.codehaus.jackson.util.BufferRecycler$ByteBufferType: org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] $VALUES> = $r3;

        return;
    }
}
