public class com.adobe.xmp.impl.FixASCIIControlsReader extends java.io.PushbackReader
{
    private static final int STATE_START;
    private static final int STATE_AMP;
    private static final int STATE_HASH;
    private static final int STATE_HEX;
    private static final int STATE_DIG1;
    private static final int STATE_ERROR;
    private static final int BUFFER_SIZE;
    private int state;
    private int control;
    private int digits;

    public void <init>(java.io.Reader)
    {
        com.adobe.xmp.impl.FixASCIIControlsReader r0;
        java.io.Reader r1;

        r0 := @this: com.adobe.xmp.impl.FixASCIIControlsReader;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.io.PushbackReader: void <init>(java.io.Reader,int)>(r1, 8);

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 0;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control> = 0;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int digits> = 0;

        return;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        com.adobe.xmp.impl.FixASCIIControlsReader r1;
        int i0, i1, $i2, $i5, $i6, $i7, $i8, i9, i10, i11, $i13, $i15;
        boolean $z0, z1, $z3, $z4;
        char $c3, $c4, c12;
        char[] r0, r2;

        r1 := @this: com.adobe.xmp.impl.FixASCIIControlsReader;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i9 = 0;

        i10 = 0;

        i11 = i0;

        r0 = newarray (char)[8];

        z1 = 1;

     label01:
        if z1 == 0 goto label09;

        if i10 >= i1 goto label09;

        $i2 = specialinvoke r1.<java.io.PushbackReader: int read(char[],int,int)>(r0, i9, 1);

        if $i2 != 1 goto label02;

        $z4 = 1;

        $z3 = 1;

        goto label03;

     label02:
        $z4 = 0;

        $z3 = 0;

     label03:
        z1 = $z4;

        if $z3 == 0 goto label08;

        $c3 = r0[i9];

        $c4 = specialinvoke r1.<com.adobe.xmp.impl.FixASCIIControlsReader: char processChar(char)>($c3);

        c12 = $c4;

        $i5 = r1.<com.adobe.xmp.impl.FixASCIIControlsReader: int state>;

        if $i5 != 0 goto label05;

        $z0 = staticinvoke <com.adobe.xmp.impl.Utils: boolean isControlChar(char)>($c4);

        if $z0 == 0 goto label04;

        c12 = 32;

     label04:
        $i8 = i11;

        i11 = i11 + 1;

        r2[$i8] = c12;

        i9 = 0;

        i10 = i10 + 1;

        goto label07;

     label05:
        $i6 = r1.<com.adobe.xmp.impl.FixASCIIControlsReader: int state>;

        if $i6 != 5 goto label06;

        $i7 = i9 + 1;

        virtualinvoke r1.<com.adobe.xmp.impl.FixASCIIControlsReader: void unread(char[],int,int)>(r0, 0, $i7);

        i9 = 0;

        goto label07;

     label06:
        i9 = i9 + 1;

     label07:
        goto label01;

     label08:
        if i9 <= 0 goto label01;

        virtualinvoke r1.<com.adobe.xmp.impl.FixASCIIControlsReader: void unread(char[],int,int)>(r0, 0, i9);

        r1.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 5;

        i9 = 0;

        z1 = 1;

        goto label01;

     label09:
        if i10 > 0 goto label10;

        if z1 == 0 goto label11;

     label10:
        $i13 = i10;

        goto label12;

     label11:
        $i15 = (int) -1;

        $i13 = $i15;

     label12:
        return $i13;
    }

    private char processChar(char)
    {
        com.adobe.xmp.impl.FixASCIIControlsReader r0;
        boolean $z0, $z1;
        int $i0, $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39;
        char c1, $c3, $c5, $c14, $c16;

        r0 := @this: com.adobe.xmp.impl.FixASCIIControlsReader;

        c1 := @parameter0: char;

        $i0 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label03;
            case 2: goto label06;
            case 3: goto label15;
            case 4: goto label10;
            case 5: goto label23;
            default: goto label24;
        };

     label01:
        $i25 = (int) c1;

        if $i25 != 38 goto label02;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 1;

     label02:
        return c1;

     label03:
        $i26 = (int) c1;

        if $i26 != 35 goto label04;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 2;

        goto label05;

     label04:
        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 5;

     label05:
        return c1;

     label06:
        $i27 = (int) c1;

        if $i27 != 120 goto label07;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control> = 0;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int digits> = 0;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 3;

        goto label09;

     label07:
        $i28 = (int) c1;

        if 48 > $i28 goto label08;

        $i29 = (int) c1;

        if $i29 > 57 goto label08;

        $i17 = staticinvoke <java.lang.Character: int digit(char,int)>(c1, 10);

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control> = $i17;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int digits> = 1;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 4;

        goto label09;

     label08:
        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 5;

     label09:
        return c1;

     label10:
        $i30 = (int) c1;

        if 48 > $i30 goto label12;

        $i31 = (int) c1;

        if $i31 > 57 goto label12;

        $i6 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control>;

        $i7 = $i6 * 10;

        $i8 = staticinvoke <java.lang.Character: int digit(char,int)>(c1, 10);

        $i9 = $i7 + $i8;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control> = $i9;

        $i10 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int digits>;

        $i11 = $i10 + 1;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int digits> = $i11;

        $i12 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int digits>;

        if $i12 > 5 goto label11;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 4;

        goto label14;

     label11:
        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 5;

        goto label14;

     label12:
        $i32 = (int) c1;

        if $i32 != 59 goto label13;

        $i2 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control>;

        $c3 = (char) $i2;

        $z0 = staticinvoke <com.adobe.xmp.impl.Utils: boolean isControlChar(char)>($c3);

        if $z0 == 0 goto label13;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 0;

        $i4 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control>;

        $c5 = (char) $i4;

        return $c5;

     label13:
        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 5;

     label14:
        return c1;

     label15:
        $i33 = (int) c1;

        if 48 > $i33 goto label16;

        $i34 = (int) c1;

        if $i34 <= 57 goto label18;

     label16:
        $i35 = (int) c1;

        if 97 > $i35 goto label17;

        $i36 = (int) c1;

        if $i36 <= 102 goto label18;

     label17:
        $i37 = (int) c1;

        if 65 > $i37 goto label20;

        $i38 = (int) c1;

        if $i38 > 70 goto label20;

     label18:
        $i18 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control>;

        $i19 = $i18 * 16;

        $i20 = staticinvoke <java.lang.Character: int digit(char,int)>(c1, 16);

        $i21 = $i19 + $i20;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control> = $i21;

        $i22 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int digits>;

        $i23 = $i22 + 1;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int digits> = $i23;

        $i24 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int digits>;

        if $i24 > 4 goto label19;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 3;

        goto label22;

     label19:
        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 5;

        goto label22;

     label20:
        $i39 = (int) c1;

        if $i39 != 59 goto label21;

        $i13 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control>;

        $c14 = (char) $i13;

        $z1 = staticinvoke <com.adobe.xmp.impl.Utils: boolean isControlChar(char)>($c14);

        if $z1 == 0 goto label21;

        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 0;

        $i15 = r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int control>;

        $c16 = (char) $i15;

        return $c16;

     label21:
        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 5;

     label22:
        return c1;

     label23:
        r0.<com.adobe.xmp.impl.FixASCIIControlsReader: int state> = 0;

        return c1;

     label24:
        return c1;
    }

    public static void <clinit>()
    {
        <com.adobe.xmp.impl.FixASCIIControlsReader: int BUFFER_SIZE> = 8;

        <com.adobe.xmp.impl.FixASCIIControlsReader: int STATE_ERROR> = 5;

        <com.adobe.xmp.impl.FixASCIIControlsReader: int STATE_DIG1> = 4;

        <com.adobe.xmp.impl.FixASCIIControlsReader: int STATE_HEX> = 3;

        <com.adobe.xmp.impl.FixASCIIControlsReader: int STATE_HASH> = 2;

        <com.adobe.xmp.impl.FixASCIIControlsReader: int STATE_AMP> = 1;

        <com.adobe.xmp.impl.FixASCIIControlsReader: int STATE_START> = 0;

        return;
    }
}
