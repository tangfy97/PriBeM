public class org.apache.http.impl.client.DefaultBackoffStrategy extends java.lang.Object implements org.apache.http.client.ConnectionBackoffStrategy
{

    public void <init>()
    {
        org.apache.http.impl.client.DefaultBackoffStrategy r0;

        r0 := @this: org.apache.http.impl.client.DefaultBackoffStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean shouldBackoff(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        org.apache.http.impl.client.DefaultBackoffStrategy r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.http.impl.client.DefaultBackoffStrategy;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = r0 instanceof java.net.SocketTimeoutException;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof java.net.ConnectException;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean shouldBackoff(org.apache.http.HttpResponse)
    {
        int $i0;
        org.apache.http.HttpResponse r0;
        org.apache.http.StatusLine $r1;
        org.apache.http.impl.client.DefaultBackoffStrategy r2;
        boolean $z0;

        r2 := @this: org.apache.http.impl.client.DefaultBackoffStrategy;

        r0 := @parameter0: org.apache.http.HttpResponse;

        $r1 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r1.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 != 503 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
