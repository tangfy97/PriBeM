class ucar.nc2.iosp.hdf4.H4header$Vinfo extends java.lang.Object implements java.lang.Comparable
{
    short refno;
    ucar.nc2.Variable v;
    java.util.List tags;
    ucar.nc2.iosp.hdf4.H4header$TagData data;
    int elemSize;
    java.lang.Object fillValue;
    boolean isLinked;
    boolean isCompressed;
    boolean isChunked;
    boolean hasNoData;
    int start;
    int length;
    long[] segPos;
    int[] segSize;
    java.util.List chunks;
    int[] chunkSize;
    final ucar.nc2.iosp.hdf4.H4header this$0;

    void <init>(ucar.nc2.iosp.hdf4.H4header, short)
    {
        ucar.nc2.iosp.hdf4.H4header$Vinfo r0;
        short s0;
        ucar.nc2.iosp.hdf4.H4header r1;
        java.lang.Short $r4;
        java.util.Map $r3;
        int $i2;
        java.util.ArrayList $r5;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        r1 := @parameter0: ucar.nc2.iosp.hdf4.H4header;

        s0 := @parameter1: short;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: java.util.List tags> = $r5;

        $i2 = (int) -1;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int start> = $i2;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: short refno> = s0;

        $r3 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: java.util.Map access$100(ucar.nc2.iosp.hdf4.H4header)>(r1);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r0);

        return;
    }

    void setVariable(ucar.nc2.Variable)
    {
        ucar.nc2.iosp.hdf4.H4header$Vinfo r0;
        ucar.nc2.Variable r1;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        r1 := @parameter0: ucar.nc2.Variable;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.Variable v> = r1;

        virtualinvoke r1.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>(r0);

        return;
    }

    public int compareTo(ucar.nc2.iosp.hdf4.H4header$Vinfo)
    {
        ucar.nc2.iosp.hdf4.H4header$Vinfo r0, r1;
        short $s0, $s1;
        int $i2, $i3, $i4;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        r1 := @parameter0: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        $s1 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: short refno>;

        $s0 = r1.<ucar.nc2.iosp.hdf4.H4header$Vinfo: short refno>;

        $i3 = (int) $s1;

        $i4 = (int) $s0;

        $i2 = $i3 - $i4;

        return $i2;
    }

    void setData(ucar.nc2.iosp.hdf4.H4header$TagData, int) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf4.H4header$Vinfo r0;
        int i0;
        ucar.nc2.iosp.hdf4.H4header$TagData r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        r1 := @parameter0: ucar.nc2.iosp.hdf4.H4header$TagData;

        i0 := @parameter1: int;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data> = r1;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int elemSize> = i0;

        if r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean hasNoData> = $z0;

        return;
    }

    void setFillValue(ucar.nc2.Attribute)
    {
        ucar.nc2.iosp.hdf4.H4header$Vinfo r0;
        ucar.nc2.Attribute r4;
        ucar.ma2.DataType $r2, $r3;
        ucar.nc2.Variable $r1;
        java.io.Serializable $r5;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        r4 := @parameter0: ucar.nc2.Attribute;

        $r1 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.Variable v>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r2 != $r3 goto label1;

        $r5 = virtualinvoke r4.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        goto label2;

     label1:
        $r5 = virtualinvoke r4.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

     label2:
        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: java.lang.Object fillValue> = $r5;

        return;
    }

    void setLayoutInfo() throws java.io.IOException
    {
        ucar.nc2.iosp.hdf4.H4header$SpecialChunked $r7, $r10, $r13, $r16;
        int[] $r14;
        ucar.nc2.iosp.hdf4.H4header$TagData $r1, $r2, $r4, $r6, $r8, $r9, $r12, $r15, $r17, $r19, $r24;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r11, $r20, $r23, $r26;
        ucar.nc2.iosp.hdf4.H4header$Vinfo r0;
        ucar.nc2.iosp.hdf4.H4header$SpecialLinked $r3, $r21, $r22, $r25;
        ucar.nc2.iosp.hdf4.H4header$SpecialComp $r5, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        $r1 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        if $r1 != null goto label01;

        return;

     label01:
        $r2 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        $r3 = $r2.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialLinked linked>;

        if null == $r3 goto label02;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean isLinked> = 1;

        $r24 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        $r25 = $r24.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialLinked linked>;

        $r26 = virtualinvoke $r25.<ucar.nc2.iosp.hdf4.H4header$SpecialLinked: java.util.List getLinkedDataBlocks()>();

        $i7 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int elemSize>;

        specialinvoke r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: void setDataBlocks(java.util.List,int)>($r26, $i7);

        goto label14;

     label02:
        $r4 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        $r5 = $r4.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialComp compress>;

        if null == $r5 goto label10;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean isCompressed> = 1;

        $r17 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        $r18 = $r17.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialComp compress>;

        $r19 = virtualinvoke $r18.<ucar.nc2.iosp.hdf4.H4header$SpecialComp: ucar.nc2.iosp.hdf4.H4header$TagData getDataTag()>();

        $r20 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: java.util.List tags>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r21 = $r19.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialLinked linked>;

        if $r21 == null goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean isLinked> = $z2;

        $z1 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean isLinked>;

        if $z1 == 0 goto label05;

        $r22 = $r19.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialLinked linked>;

        $r23 = virtualinvoke $r22.<ucar.nc2.iosp.hdf4.H4header$SpecialLinked: java.util.List getLinkedDataBlocks()>();

        $i6 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int elemSize>;

        specialinvoke r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: void setDataBlocks(java.util.List,int)>($r23, $i6);

        goto label09;

     label05:
        $i2 = $r19.<ucar.nc2.iosp.hdf4.H4header$TagData: int offset>;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int start> = $i2;

        $i3 = $r19.<ucar.nc2.iosp.hdf4.H4header$TagData: int length>;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int length> = $i3;

        $i4 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int start>;

        if $i4 < 0 goto label06;

        $i5 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int length>;

        if $i5 >= 0 goto label07;

     label06:
        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean hasNoData> = $z3;

     label09:
        goto label14;

     label10:
        $r6 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        $r7 = $r6.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialChunked chunked>;

        if null == $r7 goto label11;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean isChunked> = 1;

        $r9 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        $r10 = $r9.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialChunked chunked>;

        $r11 = virtualinvoke $r10.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: java.util.List getDataChunks()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: java.util.List chunks> = $r11;

        $r12 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        $r13 = $r12.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialChunked chunked>;

        $r14 = $r13.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int[] chunk_length>;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int[] chunkSize> = $r14;

        $r15 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        $r16 = $r15.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialChunked chunked>;

        $z0 = $r16.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: boolean isCompressed>;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean isCompressed> = $z0;

        goto label14;

     label11:
        $r8 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        $i0 = $r8.<ucar.nc2.iosp.hdf4.H4header$TagData: int offset>;

        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int start> = $i0;

        $i1 = r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int start>;

        if $i1 >= 0 goto label12;

        $z4 = 1;

        goto label13;

     label12:
        $z4 = 0;

     label13:
        r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean hasNoData> = $z4;

     label14:
        return;
    }

    private void setDataBlocks(java.util.List, int)
    {
        ucar.nc2.iosp.hdf4.H4header$Vinfo r1;
        ucar.nc2.iosp.hdf4.H4header$TagLinkedBlock r6;
        long $l2;
        long[] $r2, $r7;
        int[] $r3, $r8;
        int $i0, $i1, $i3, i4, i5;
        boolean $z0;
        java.util.Iterator $r4;
        java.util.List r0;
        java.lang.Object $r5;

        r1 := @this: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        r0 := @parameter0: java.util.List;

        i4 := @parameter1: int;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $r2 = newarray (long)[$i0];

        r1.<ucar.nc2.iosp.hdf4.H4header$Vinfo: long[] segPos> = $r2;

        $r3 = newarray (int)[$i0];

        r1.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int[] segSize> = $r3;

        i5 = 0;

        $r4 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (ucar.nc2.iosp.hdf4.H4header$TagLinkedBlock) $r5;

        $r7 = r1.<ucar.nc2.iosp.hdf4.H4header$Vinfo: long[] segPos>;

        $i1 = r6.<ucar.nc2.iosp.hdf4.H4header$TagLinkedBlock: int offset>;

        $l2 = (long) $i1;

        $r7[i5] = $l2;

        $r8 = r1.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int[] segSize>;

        $i3 = r6.<ucar.nc2.iosp.hdf4.H4header$TagLinkedBlock: int length>;

        $r8[i5] = $i3;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.Integer $r13, $r14, $r15;
        java.util.Formatter $r0;
        java.lang.Short $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r16;
        ucar.nc2.iosp.hdf4.H4header$Tag r20;
        ucar.nc2.iosp.hdf4.H4header$Vinfo r2;
        java.lang.Object[] $r1, $r7, $r12, $r21;
        short $s0;
        int $i1, $i2, $i3;
        java.lang.Boolean $r8, $r9, $r10, $r11;
        ucar.nc2.Variable $r4;
        java.lang.String $r5, $r18, $r22;
        java.util.Iterator $r17;
        java.lang.Object $r6, $r19;

        r2 := @this: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        $r1 = newarray (java.lang.Object)[3];

        $s0 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: short refno>;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $r1[0] = $r3;

        $r4 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: ucar.nc2.Variable v>;

        $r5 = virtualinvoke $r4.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r1[1] = $r5;

        $r6 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: java.lang.Object fillValue>;

        $r1[2] = $r6;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("refno=%d name=%s fillValue=%s %n", $r1);

        $r7 = newarray (java.lang.Object)[4];

        $z0 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean isChunked>;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r7[0] = $r8;

        $z1 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean isCompressed>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r7[1] = $r9;

        $z2 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean isLinked>;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r7[2] = $r10;

        $z3 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: boolean hasNoData>;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r7[3] = $r11;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" isChunked=%s isCompressed=%s isLinked=%s hasNoData=%s %n", $r7);

        $r12 = newarray (java.lang.Object)[3];

        $i1 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int elemSize>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r12[0] = $r13;

        $i2 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int start>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r12[1] = $r14;

        $i3 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int length>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r12[2] = $r15;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" elemSize=%d data start=%d length=%s %n%n", $r12);

        $r16 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: java.util.List tags>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label2;

        $r19 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r20 = (ucar.nc2.iosp.hdf4.H4header$Tag) $r19;

        $r21 = newarray (java.lang.Object)[1];

        $r22 = virtualinvoke r20.<ucar.nc2.iosp.hdf4.H4header$Tag: java.lang.String detail()>();

        $r21[0] = $r22;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" %s%n", $r21);

        goto label1;

     label2:
        $r18 = virtualinvoke $r0.<java.util.Formatter: java.lang.String toString()>();

        return $r18;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ucar.nc2.iosp.hdf4.H4header$Vinfo r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.iosp.hdf4.H4header$Vinfo) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int compareTo(ucar.nc2.iosp.hdf4.H4header$Vinfo)>($r2);

        return $i0;
    }
}
