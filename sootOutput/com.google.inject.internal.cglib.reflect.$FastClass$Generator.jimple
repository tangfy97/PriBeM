public class com.google.inject.internal.cglib.reflect.$FastClass$Generator extends com.google.inject.internal.cglib.core.$AbstractClassGenerator
{
    private static final com.google.inject.internal.cglib.core.$AbstractClassGenerator$Source SOURCE;
    private java.lang.Class type;

    public void <init>()
    {
        com.google.inject.internal.cglib.reflect.$FastClass$Generator r0;
        com.google.inject.internal.cglib.core.$AbstractClassGenerator$Source $r1;

        r0 := @this: com.google.inject.internal.cglib.reflect.$FastClass$Generator;

        $r1 = <com.google.inject.internal.cglib.reflect.$FastClass$Generator: com.google.inject.internal.cglib.core.$AbstractClassGenerator$Source SOURCE>;

        specialinvoke r0.<com.google.inject.internal.cglib.core.$AbstractClassGenerator: void <init>(com.google.inject.internal.cglib.core.$AbstractClassGenerator$Source)>($r1);

        return;
    }

    public void setType(java.lang.Class)
    {
        java.lang.Class r1;
        com.google.inject.internal.cglib.reflect.$FastClass$Generator r0;

        r0 := @this: com.google.inject.internal.cglib.reflect.$FastClass$Generator;

        r1 := @parameter0: java.lang.Class;

        r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: java.lang.Class type> = r1;

        return;
    }

    public com.google.inject.internal.cglib.reflect.$FastClass create()
    {
        com.google.inject.internal.cglib.reflect.$FastClass $r6;
        java.lang.Class $r1, $r3;
        java.lang.Object $r5;
        java.lang.String $r2, $r4;
        com.google.inject.internal.cglib.reflect.$FastClass$Generator r0;

        r0 := @this: com.google.inject.internal.cglib.reflect.$FastClass$Generator;

        $r1 = r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: java.lang.Class type>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: void setNamePrefix(java.lang.String)>($r2);

        $r3 = r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: java.lang.Class type>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = specialinvoke r0.<com.google.inject.internal.cglib.core.$AbstractClassGenerator: java.lang.Object create(java.lang.Object)>($r4);

        $r6 = (com.google.inject.internal.cglib.reflect.$FastClass) $r5;

        return $r6;
    }

    protected java.lang.ClassLoader getDefaultClassLoader()
    {
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;
        com.google.inject.internal.cglib.reflect.$FastClass$Generator r0;

        r0 := @this: com.google.inject.internal.cglib.reflect.$FastClass$Generator;

        $r1 = r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: java.lang.Class type>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        return $r2;
    }

    public void generateClass(com.google.inject.internal.asm.$ClassVisitor) throws java.lang.Exception
    {
        java.lang.Class $r4;
        java.lang.String $r3;
        com.google.inject.internal.cglib.reflect.$FastClassEmitter $r0;
        com.google.inject.internal.asm.$ClassVisitor r1;
        com.google.inject.internal.cglib.reflect.$FastClass$Generator r2;

        r2 := @this: com.google.inject.internal.cglib.reflect.$FastClass$Generator;

        r1 := @parameter0: com.google.inject.internal.asm.$ClassVisitor;

        $r0 = new com.google.inject.internal.cglib.reflect.$FastClassEmitter;

        $r3 = virtualinvoke r2.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: java.lang.String getClassName()>();

        $r4 = r2.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: java.lang.Class type>;

        specialinvoke $r0.<com.google.inject.internal.cglib.reflect.$FastClassEmitter: void <init>(com.google.inject.internal.asm.$ClassVisitor,java.lang.String,java.lang.Class)>(r1, $r3, $r4);

        return;
    }

    protected java.lang.Object firstInstance(java.lang.Class)
    {
        java.lang.Object[] $r3;
        java.lang.Class[] $r1;
        com.google.inject.internal.cglib.reflect.$FastClass$Generator r4;
        java.lang.Class r0, $r2, $r5, $r7;
        java.lang.Object $r6;

        r4 := @this: com.google.inject.internal.cglib.reflect.$FastClass$Generator;

        r0 := @parameter0: java.lang.Class;

        $r1 = newarray (java.lang.Class)[1];

        $r2 = <com.google.inject.internal.cglib.reflect.$FastClass: java.lang.Class class$java$lang$Class>;

        if $r2 != null goto label1;

        $r7 = staticinvoke <com.google.inject.internal.cglib.reflect.$FastClass: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <com.google.inject.internal.cglib.reflect.$FastClass: java.lang.Class class$java$lang$Class> = $r7;

        goto label2;

     label1:
        $r7 = <com.google.inject.internal.cglib.reflect.$FastClass: java.lang.Class class$java$lang$Class>;

     label2:
        $r1[0] = $r7;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = r4.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: java.lang.Class type>;

        $r3[0] = $r5;

        $r6 = staticinvoke <com.google.inject.internal.cglib.core.$ReflectUtils: java.lang.Object newInstance(java.lang.Class,java.lang.Class[],java.lang.Object[])>(r0, $r1, $r3);

        return $r6;
    }

    protected java.lang.Object nextInstance(java.lang.Object)
    {
        java.lang.Object r0;
        com.google.inject.internal.cglib.reflect.$FastClass$Generator r1;

        r1 := @this: com.google.inject.internal.cglib.reflect.$FastClass$Generator;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r1, $r3;
        java.lang.String $r2;
        com.google.inject.internal.cglib.core.$AbstractClassGenerator$Source $r0;

        $r0 = new com.google.inject.internal.cglib.core.$AbstractClassGenerator$Source;

        $r1 = <com.google.inject.internal.cglib.reflect.$FastClass: java.lang.Class class$net$sf$cglib$reflect$FastClass>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.google.inject.internal.cglib.reflect.$FastClass: java.lang.Class class$(java.lang.String)>("com.google.inject.internal.cglib.reflect.$FastClass");

        <com.google.inject.internal.cglib.reflect.$FastClass: java.lang.Class class$net$sf$cglib$reflect$FastClass> = $r3;

        goto label2;

     label1:
        $r3 = <com.google.inject.internal.cglib.reflect.$FastClass: java.lang.Class class$net$sf$cglib$reflect$FastClass>;

     label2:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<com.google.inject.internal.cglib.core.$AbstractClassGenerator$Source: void <init>(java.lang.String)>($r2);

        <com.google.inject.internal.cglib.reflect.$FastClass$Generator: com.google.inject.internal.cglib.core.$AbstractClassGenerator$Source SOURCE> = $r0;

        return;
    }
}
