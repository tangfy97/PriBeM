public class org.apache.batik.gvt.text.ArabicTextHandler extends java.lang.Object
{
    private static final int arabicStart;
    private static final int arabicEnd;
    private static final java.text.AttributedCharacterIterator$Attribute ARABIC_FORM;
    private static final java.lang.Integer ARABIC_NONE;
    private static final java.lang.Integer ARABIC_ISOLATED;
    private static final java.lang.Integer ARABIC_TERMINAL;
    private static final java.lang.Integer ARABIC_INITIAL;
    private static final java.lang.Integer ARABIC_MEDIAL;
    static int singleCharFirst;
    static int singleCharLast;
    static int[][] singleCharRemappings;
    static int doubleCharFirst;
    static int doubleCharLast;
    static int[][][] doubleCharRemappings;

    private void <init>()
    {
        org.apache.batik.gvt.text.ArabicTextHandler r0;

        r0 := @this: org.apache.batik.gvt.text.ArabicTextHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.text.AttributedString assignArabicForms(java.text.AttributedString)
    {
        java.lang.Float r30, r31, $r38, $r39;
        java.lang.Integer $r1, $r11, $r13, r33, r34, $r35, $r40;
        java.util.Map $r17;
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute $r18, $r20, $r23, $r24, $r26, $r27;
        java.text.AttributedCharacterIterator$Attribute $r2, $r4, $r5, $r6, $r8, $r10, $r12;
        java.lang.StringBuffer $r36;
        java.lang.String $r16;
        int[] r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.text.AttributedString r28, $r37;
        java.text.AttributedCharacterIterator $r0, $r3, $r32;
        int $i0, $i1, i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i31, i33, i34, i35, i36, i37, i39, i41, i42, $i44, $i46, $i48, $i49, $i50, $i52, $i54, $i56, $i57, $i59, $i61, $i62, $i64;
        char c5, $c11, c29, c30, c32, c38, c40, $c43;
        java.lang.Object $r7, $r19, $r21;

        r28 := @parameter0: java.text.AttributedString;

        $z0 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean containsArabic(java.text.AttributedString)>(r28);

        if $z0 != 0 goto label01;

        return r28;

     label01:
        $r0 = virtualinvoke r28.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        $i0 = interfaceinvoke $r0.<java.text.CharacterIterator: int getEndIndex()>();

        $i1 = interfaceinvoke $r0.<java.text.CharacterIterator: int getBeginIndex()>();

        i2 = $i0 - $i1;

        r29 = null;

        if i2 < 3 goto label08;

        c29 = interfaceinvoke $r0.<java.text.CharacterIterator: char first()>();

        c30 = interfaceinvoke $r0.<java.text.CharacterIterator: char next()>();

        i31 = 1;

        c32 = interfaceinvoke $r0.<java.text.CharacterIterator: char next()>();

        goto label07;

     label02:
        $z8 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharTransparent(char)>(c30);

        if $z8 == 0 goto label06;

        $z9 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean hasSubstitute(char,char)>(c29, c32);

        if $z9 == 0 goto label06;

        if r29 != null goto label05;

        r29 = newarray (int)[i2];

        i33 = 0;

        goto label04;

     label03:
        $i26 = interfaceinvoke $r0.<java.text.CharacterIterator: int getBeginIndex()>();

        $i27 = i33 + $i26;

        r29[i33] = $i27;

        i33 = i33 + 1;

     label04:
        if i33 < i2 goto label03;

     label05:
        $i28 = r29[i31];

        $i23 = i31 - 1;

        $i24 = r29[$i23];

        r29[i31] = $i24;

        $i25 = i31 - 1;

        r29[$i25] = $i28;

     label06:
        c29 = c30;

        c30 = c32;

        c32 = interfaceinvoke $r0.<java.text.CharacterIterator: char next()>();

        i31 = i31 + 1;

     label07:
        $i44 = (int) c32;

        $i46 = (int) 65535;

        if $i44 != $i46 goto label02;

     label08:
        if r29 == null goto label15;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>(int)>(i2);

        i34 = 0;

        goto label10;

     label09:
        $i10 = r29[i34];

        $c11 = interfaceinvoke $r0.<java.text.CharacterIterator: char setIndex(int)>($i10);

        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c11);

        i34 = i34 + 1;

     label10:
        if i34 < i2 goto label09;

        $r37 = new java.text.AttributedString;

        $r16 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r37.<java.text.AttributedString: void <init>(java.lang.String)>($r16);

        i35 = 0;

        goto label12;

     label11:
        $i12 = r29[i35];

        interfaceinvoke $r0.<java.text.CharacterIterator: char setIndex(int)>($i12);

        $r17 = interfaceinvoke $r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();

        $i13 = i35 + 1;

        virtualinvoke $r37.<java.text.AttributedString: void addAttributes(java.util.Map,int,int)>($r17, i35, $i13);

        i35 = i35 + 1;

     label12:
        if i35 < i2 goto label11;

        $i14 = r29[0];

        $i15 = interfaceinvoke $r0.<java.text.CharacterIterator: int getBeginIndex()>();

        if $i14 == $i15 goto label14;

        $i16 = r29[0];

        interfaceinvoke $r0.<java.text.CharacterIterator: char setIndex(int)>($i16);

        $r18 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute X>;

        $r19 = interfaceinvoke $r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r18);

        r30 = (java.lang.Float) $r19;

        $r20 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute Y>;

        $r21 = interfaceinvoke $r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r20);

        r31 = (java.lang.Float) $r21;

        if r30 == null goto label13;

        $z7 = virtualinvoke r30.<java.lang.Float: boolean isNaN()>();

        if $z7 != 0 goto label13;

        $r26 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute X>;

        $r38 = new java.lang.Float;

        specialinvoke $r38.<java.lang.Float: void <init>(float)>(#NaNF);

        $i22 = r29[0];

        $i20 = r29[0];

        $i21 = $i20 + 1;

        virtualinvoke $r37.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r26, $r38, $i22, $i21);

        $r27 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute X>;

        virtualinvoke $r37.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r27, r30, 0, 1);

     label13:
        if r31 == null goto label14;

        $z6 = virtualinvoke r31.<java.lang.Float: boolean isNaN()>();

        if $z6 != 0 goto label14;

        $r23 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute Y>;

        $r39 = new java.lang.Float;

        specialinvoke $r39.<java.lang.Float: void <init>(float)>(#NaNF);

        $i19 = r29[0];

        $i17 = r29[0];

        $i18 = $i17 + 1;

        virtualinvoke $r37.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r23, $r39, $i19, $i18);

        $r24 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute Y>;

        virtualinvoke $r37.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r24, r31, 0, 1);

     label14:
        r28 = $r37;

     label15:
        $r32 = virtualinvoke r28.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        $i48 = (int) -1;

        i36 = $i48;

        i37 = interfaceinvoke $r32.<java.text.CharacterIterator: int getBeginIndex()>();

        c38 = interfaceinvoke $r32.<java.text.CharacterIterator: char first()>();

        goto label19;

     label16:
        $i49 = (int) c38;

        if $i49 < 1536 goto label17;

        $i50 = (int) c38;

        if $i50 > 1791 goto label17;

        $i52 = (int) -1;

        if i36 != $i52 goto label18;

        i36 = i37;

        goto label18;

     label17:
        $i54 = (int) -1;

        if i36 == $i54 goto label18;

        $r2 = <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedCharacterIterator$Attribute ARABIC_FORM>;

        $r1 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_NONE>;

        virtualinvoke r28.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r2, $r1, i36, i37);

        $i56 = (int) -1;

        i36 = $i56;

     label18:
        c38 = interfaceinvoke $r32.<java.text.CharacterIterator: char next()>();

        i37 = i37 + 1;

     label19:
        $i57 = (int) c38;

        $i59 = (int) 65535;

        if $i57 != $i59 goto label16;

        $i61 = (int) -1;

        if i36 == $i61 goto label20;

        $r12 = <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedCharacterIterator$Attribute ARABIC_FORM>;

        $r11 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_NONE>;

        virtualinvoke r28.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r12, $r11, i36, i37);

     label20:
        $r3 = virtualinvoke r28.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        i39 = interfaceinvoke $r3.<java.text.CharacterIterator: int getBeginIndex()>();

        $r13 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_NONE>;

        goto label33;

     label21:
        $r4 = <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedCharacterIterator$Attribute ARABIC_FORM>;

        $i3 = interfaceinvoke $r3.<java.text.AttributedCharacterIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>($r4);

        $r5 = <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedCharacterIterator$Attribute ARABIC_FORM>;

        $i4 = interfaceinvoke $r3.<java.text.AttributedCharacterIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>($r5);

        i39 = $i4;

        c40 = interfaceinvoke $r3.<java.text.CharacterIterator: char setIndex(int)>($i3);

        $r6 = <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedCharacterIterator$Attribute ARABIC_FORM>;

        $r7 = interfaceinvoke $r3.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r6);

        r33 = (java.lang.Integer) $r7;

        if r33 != null goto label22;

        goto label33;

     label22:
        i41 = $i3;

        i42 = $i3 - 1;

        goto label32;

     label23:
        c5 = c40;

        c40 = interfaceinvoke $r3.<java.text.CharacterIterator: char setIndex(int)>(i41);

        goto label25;

     label24:
        i41 = i41 + 1;

        c40 = interfaceinvoke $r3.<java.text.CharacterIterator: char setIndex(int)>(i41);

     label25:
        $z1 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharTransparent(char)>(c40);

        if $z1 == 0 goto label26;

        if i41 < $i4 goto label24;

     label26:
        if i41 < $i4 goto label27;

        goto label33;

     label27:
        r34 = r33;

        r33 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_NONE>;

        if i42 < $i3 goto label29;

        $z3 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharShapesRight(char)>(c5);

        if $z3 == 0 goto label28;

        $z5 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharShapesLeft(char)>(c40);

        if $z5 == 0 goto label28;

        $r40 = new java.lang.Integer;

        $i7 = virtualinvoke r34.<java.lang.Integer: int intValue()>();

        $i8 = $i7 + 1;

        specialinvoke $r40.<java.lang.Integer: void <init>(int)>($i8);

        $r10 = <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedCharacterIterator$Attribute ARABIC_FORM>;

        $i9 = i42 + 1;

        virtualinvoke r28.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r10, $r40, i42, $i9);

        r33 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_INITIAL>;

        goto label30;

     label28:
        $z4 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharShaped(char)>(c40);

        if $z4 == 0 goto label30;

        r33 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_ISOLATED>;

        goto label30;

     label29:
        $z2 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharShaped(char)>(c40);

        if $z2 == 0 goto label30;

        r33 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_ISOLATED>;

     label30:
        $r35 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_NONE>;

        if r33 == $r35 goto label31;

        $r8 = <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedCharacterIterator$Attribute ARABIC_FORM>;

        $i6 = i41 + 1;

        virtualinvoke r28.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r8, r33, i41, $i6);

     label31:
        i42 = i41;

        i41 = i41 + 1;

     label32:
        if i41 < $i4 goto label23;

     label33:
        $c43 = interfaceinvoke $r3.<java.text.CharacterIterator: char setIndex(int)>(i39);

        $i62 = (int) $c43;

        $i64 = (int) 65535;

        if $i62 != $i64 goto label21;

        return r28;
    }

    public static boolean arabicChar(char)
    {
        int $i1, $i2;
        char c0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 1536 goto label1;

        $i2 = (int) c0;

        if $i2 > 1791 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean containsArabic(java.text.AttributedString)
    {
        java.text.AttributedString r0;
        java.text.AttributedCharacterIterator $r1;
        boolean $z0;

        r0 := @parameter0: java.text.AttributedString;

        $r1 = virtualinvoke r0.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        $z0 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean containsArabic(java.text.AttributedCharacterIterator)>($r1);

        return $z0;
    }

    public static boolean containsArabic(java.text.AttributedCharacterIterator)
    {
        java.text.AttributedCharacterIterator r0;
        int $i1, $i3;
        char c0;
        boolean $z0;

        r0 := @parameter0: java.text.AttributedCharacterIterator;

        c0 = interfaceinvoke r0.<java.text.CharacterIterator: char first()>();

        goto label3;

     label1:
        $z0 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicChar(char)>(c0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        c0 = interfaceinvoke r0.<java.text.CharacterIterator: char next()>();

     label3:
        $i1 = (int) c0;

        $i3 = (int) 65535;

        if $i1 != $i3 goto label1;

        return 0;
    }

    public static boolean arabicCharTransparent(char)
    {
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 1611 goto label1;

        $i2 = (int) c0;

        if $i2 <= 1773 goto label2;

     label1:
        return 0;

     label2:
        $i3 = (int) c0;

        if $i3 <= 1621 goto label5;

        $i4 = (int) c0;

        if $i4 == 1648 goto label5;

        $i5 = (int) c0;

        if $i5 < 1750 goto label3;

        $i6 = (int) c0;

        if $i6 <= 1764 goto label5;

     label3:
        $i7 = (int) c0;

        if $i7 < 1767 goto label4;

        $i8 = (int) c0;

        if $i8 <= 1768 goto label5;

     label4:
        $i9 = (int) c0;

        if $i9 < 1770 goto label6;

     label5:
        return 1;

     label6:
        return 0;
    }

    private static boolean arabicCharShapesRight(char)
    {
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        boolean $z0;
        char c0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 1570 goto label1;

        $i2 = (int) c0;

        if $i2 <= 1573 goto label8;

     label1:
        $i3 = (int) c0;

        if $i3 == 1575 goto label8;

        $i4 = (int) c0;

        if $i4 == 1577 goto label8;

        $i5 = (int) c0;

        if $i5 < 1583 goto label2;

        $i6 = (int) c0;

        if $i6 <= 1586 goto label8;

     label2:
        $i7 = (int) c0;

        if $i7 == 1608 goto label8;

        $i8 = (int) c0;

        if $i8 < 1649 goto label3;

        $i9 = (int) c0;

        if $i9 <= 1651 goto label8;

     label3:
        $i10 = (int) c0;

        if $i10 < 1653 goto label4;

        $i11 = (int) c0;

        if $i11 <= 1655 goto label8;

     label4:
        $i12 = (int) c0;

        if $i12 < 1672 goto label5;

        $i13 = (int) c0;

        if $i13 <= 1689 goto label8;

     label5:
        $i14 = (int) c0;

        if $i14 == 1728 goto label8;

        $i15 = (int) c0;

        if $i15 < 1730 goto label6;

        $i16 = (int) c0;

        if $i16 <= 1739 goto label8;

     label6:
        $i17 = (int) c0;

        if $i17 == 1741 goto label8;

        $i18 = (int) c0;

        if $i18 == 1743 goto label8;

        $i19 = (int) c0;

        if $i19 < 1746 goto label7;

        $i20 = (int) c0;

        if $i20 <= 1747 goto label8;

     label7:
        $z0 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharShapesDuel(char)>(c0);

        if $z0 == 0 goto label9;

     label8:
        return 1;

     label9:
        return 0;
    }

    private static boolean arabicCharShapesDuel(char)
    {
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        char c0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 == 1574 goto label8;

        $i2 = (int) c0;

        if $i2 == 1576 goto label8;

        $i3 = (int) c0;

        if $i3 < 1578 goto label1;

        $i4 = (int) c0;

        if $i4 <= 1582 goto label8;

     label1:
        $i5 = (int) c0;

        if $i5 < 1587 goto label2;

        $i6 = (int) c0;

        if $i6 <= 1594 goto label8;

     label2:
        $i7 = (int) c0;

        if $i7 < 1601 goto label3;

        $i8 = (int) c0;

        if $i8 <= 1607 goto label8;

     label3:
        $i9 = (int) c0;

        if $i9 < 1609 goto label4;

        $i10 = (int) c0;

        if $i10 <= 1610 goto label8;

     label4:
        $i11 = (int) c0;

        if $i11 < 1656 goto label5;

        $i12 = (int) c0;

        if $i12 <= 1671 goto label8;

     label5:
        $i13 = (int) c0;

        if $i13 < 1690 goto label6;

        $i14 = (int) c0;

        if $i14 <= 1727 goto label8;

     label6:
        $i15 = (int) c0;

        if $i15 == 1729 goto label8;

        $i16 = (int) c0;

        if $i16 == 1740 goto label8;

        $i17 = (int) c0;

        if $i17 == 1742 goto label8;

        $i18 = (int) c0;

        if $i18 < 1744 goto label7;

        $i19 = (int) c0;

        if $i19 <= 1745 goto label8;

     label7:
        $i20 = (int) c0;

        if $i20 < 1786 goto label9;

        $i21 = (int) c0;

        if $i21 > 1788 goto label9;

     label8:
        return 1;

     label9:
        return 0;
    }

    private static boolean arabicCharShapesLeft(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $z0 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharShapesDuel(char)>(c0);

        return $z0;
    }

    private static boolean arabicCharShaped(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $z0 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharShapesRight(char)>(c0);

        return $z0;
    }

    public static boolean hasSubstitute(char, char)
    {
        int[][] r1;
        int[] $r2;
        int $i1, $i2, $i3, $i4, $i5, $i7, i8, $i9, $i10, $i11, $i12;
        char c0, c6;
        int[][][] $r0;

        c0 := @parameter0: char;

        c6 := @parameter1: char;

        $i1 = <org.apache.batik.gvt.text.ArabicTextHandler: int doubleCharFirst>;

        $i9 = (int) c0;

        if $i9 < $i1 goto label1;

        $i2 = <org.apache.batik.gvt.text.ArabicTextHandler: int doubleCharLast>;

        $i10 = (int) c0;

        if $i10 <= $i2 goto label2;

     label1:
        return 0;

     label2:
        $r0 = <org.apache.batik.gvt.text.ArabicTextHandler: int[][][] doubleCharRemappings>;

        $i3 = <org.apache.batik.gvt.text.ArabicTextHandler: int doubleCharFirst>;

        $i11 = (int) c0;

        $i4 = $i11 - $i3;

        r1 = $r0[$i4];

        if r1 != null goto label3;

        return 0;

     label3:
        i8 = 0;

        goto label6;

     label4:
        $r2 = r1[i8];

        $i7 = $r2[0];

        $i12 = (int) c6;

        if $i7 != $i12 goto label5;

        return 1;

     label5:
        i8 = i8 + 1;

     label6:
        $i5 = lengthof r1;

        if i8 < $i5 goto label4;

        return 0;
    }

    public static int getSubstituteChar(char, char, int)
    {
        int[][] r1;
        int[] $r2, $r3;
        int i0, $i2, $i3, $i4, $i5, $i6, $i8, $i9, i10, $i12, $i13, $i14, $i16, $i17, $i19, $i20, $i22;
        char c1, c7;
        int[][][] $r0;

        c1 := @parameter0: char;

        c7 := @parameter1: char;

        i0 := @parameter2: int;

        if i0 != 0 goto label1;

        $i12 = (int) -1;

        return $i12;

     label1:
        $i2 = <org.apache.batik.gvt.text.ArabicTextHandler: int doubleCharFirst>;

        $i13 = (int) c1;

        if $i13 < $i2 goto label2;

        $i3 = <org.apache.batik.gvt.text.ArabicTextHandler: int doubleCharLast>;

        $i14 = (int) c1;

        if $i14 <= $i3 goto label3;

     label2:
        $i16 = (int) -1;

        return $i16;

     label3:
        $r0 = <org.apache.batik.gvt.text.ArabicTextHandler: int[][][] doubleCharRemappings>;

        $i4 = <org.apache.batik.gvt.text.ArabicTextHandler: int doubleCharFirst>;

        $i17 = (int) c1;

        $i5 = $i17 - $i4;

        r1 = $r0[$i5];

        if r1 != null goto label4;

        $i19 = (int) -1;

        return $i19;

     label4:
        i10 = 0;

        goto label7;

     label5:
        $r2 = r1[i10];

        $i8 = $r2[0];

        $i20 = (int) c7;

        if $i8 != $i20 goto label6;

        $r3 = r1[i10];

        $i9 = $r3[i0];

        return $i9;

     label6:
        i10 = i10 + 1;

     label7:
        $i6 = lengthof r1;

        if i10 < $i6 goto label5;

        $i22 = (int) -1;

        return $i22;
    }

    public static int getSubstituteChar(char, int)
    {
        int[][] $r0;
        int[] r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i13, $i14, $i16;
        char c1;

        c1 := @parameter0: char;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $i9 = (int) -1;

        return $i9;

     label1:
        $i2 = <org.apache.batik.gvt.text.ArabicTextHandler: int singleCharFirst>;

        $i10 = (int) c1;

        if $i10 < $i2 goto label2;

        $i3 = <org.apache.batik.gvt.text.ArabicTextHandler: int singleCharLast>;

        $i11 = (int) c1;

        if $i11 <= $i3 goto label3;

     label2:
        $i13 = (int) -1;

        return $i13;

     label3:
        $r0 = <org.apache.batik.gvt.text.ArabicTextHandler: int[][] singleCharRemappings>;

        $i4 = <org.apache.batik.gvt.text.ArabicTextHandler: int singleCharFirst>;

        $i14 = (int) c1;

        $i5 = $i14 - $i4;

        r1 = $r0[$i5];

        if r1 != null goto label4;

        $i16 = (int) -1;

        return $i16;

     label4:
        $i6 = i0 - 1;

        $i7 = r1[$i6];

        return $i7;
    }

    public static java.lang.String createSubstituteString(java.text.AttributedCharacterIterator)
    {
        java.lang.Integer r4, r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.text.AttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator$Attribute $r2, $r5;
        java.lang.StringBuffer $r17;
        int $i0, $i1, i2, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i13, $i14, $i16, $i17, i19, $i22, $i24, $i26, $i28;
        java.lang.String $r16;
        char $c3, $c9, $c12, $c15, $c18, c20;
        java.lang.Object $r3, $r6;

        r0 := @parameter0: java.text.AttributedCharacterIterator;

        $i0 = interfaceinvoke r0.<java.text.CharacterIterator: int getBeginIndex()>();

        $i1 = interfaceinvoke r0.<java.text.CharacterIterator: int getEndIndex()>();

        i2 = $i1 - $i0;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>(int)>(i2);

        i19 = $i0;

        goto label10;

     label01:
        $c3 = interfaceinvoke r0.<java.text.CharacterIterator: char setIndex(int)>(i19);

        c20 = $c3;

        $z0 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicChar(char)>($c3);

        if $z0 != 0 goto label02;

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label09;

     label02:
        $r2 = <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedCharacterIterator$Attribute ARABIC_FORM>;

        $r3 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r2);

        r4 = (java.lang.Integer) $r3;

        $z1 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean charStartsLigature(char)>($c3);

        if $z1 == 0 goto label07;

        $i7 = i19 + 1;

        if $i7 >= $i1 goto label07;

        $i8 = i19 + 1;

        $c9 = interfaceinvoke r0.<java.text.CharacterIterator: char setIndex(int)>($i8);

        $r5 = <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedCharacterIterator$Attribute ARABIC_FORM>;

        $r6 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r5);

        r7 = (java.lang.Integer) $r6;

        if r4 == null goto label07;

        if r7 == null goto label07;

        $r8 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_TERMINAL>;

        $z2 = virtualinvoke r4.<java.lang.Integer: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label04;

        $r14 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_INITIAL>;

        $z6 = virtualinvoke r7.<java.lang.Integer: boolean equals(java.lang.Object)>($r14);

        if $z6 == 0 goto label04;

        $r15 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_ISOLATED>;

        $i16 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $i17 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: int getSubstituteChar(char,char,int)>($c3, $c9, $i16);

        $i22 = (int) -1;

        if $i17 <= $i22 goto label03;

        $c18 = (char) $i17;

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c18);

        i19 = i19 + 1;

        goto label09;

     label03:
        goto label07;

     label04:
        $r9 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_TERMINAL>;

        $z3 = virtualinvoke r4.<java.lang.Integer: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label06;

        $r13 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_TERMINAL>;

        $i13 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i14 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: int getSubstituteChar(char,char,int)>($c3, $c9, $i13);

        $i24 = (int) -1;

        if $i14 <= $i24 goto label05;

        $c15 = (char) $i14;

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c15);

        i19 = i19 + 1;

        goto label09;

     label05:
        goto label07;

     label06:
        $r10 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_MEDIAL>;

        $z4 = virtualinvoke r4.<java.lang.Integer: boolean equals(java.lang.Object)>($r10);

        if $z4 == 0 goto label07;

        $r11 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_MEDIAL>;

        $z5 = virtualinvoke r7.<java.lang.Integer: boolean equals(java.lang.Object)>($r11);

        if $z5 == 0 goto label07;

        $r12 = <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_MEDIAL>;

        $i10 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $i11 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: int getSubstituteChar(char,char,int)>($c3, $c9, $i10);

        $i26 = (int) -1;

        if $i11 <= $i26 goto label07;

        $c12 = (char) $i11;

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c12);

        i19 = i19 + 1;

        goto label09;

     label07:
        if r4 == null goto label08;

        $i4 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        if $i4 <= 0 goto label08;

        $i5 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $i6 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: int getSubstituteChar(char,int)>($c3, $i5);

        $i28 = (int) -1;

        if $i6 <= $i28 goto label08;

        c20 = (char) $i6;

     label08:
        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c20);

     label09:
        i19 = i19 + 1;

     label10:
        if i19 < $i1 goto label01;

        $r16 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;
    }

    public static boolean charStartsLigature(char)
    {
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 == 1611 goto label1;

        $i2 = (int) c0;

        if $i2 == 1612 goto label1;

        $i3 = (int) c0;

        if $i3 == 1613 goto label1;

        $i4 = (int) c0;

        if $i4 == 1614 goto label1;

        $i5 = (int) c0;

        if $i5 == 1615 goto label1;

        $i6 = (int) c0;

        if $i6 == 1616 goto label1;

        $i7 = (int) c0;

        if $i7 == 1617 goto label1;

        $i8 = (int) c0;

        if $i8 == 1618 goto label1;

        $i9 = (int) c0;

        if $i9 == 1570 goto label1;

        $i10 = (int) c0;

        if $i10 == 1571 goto label1;

        $i11 = (int) c0;

        if $i11 == 1573 goto label1;

        $i12 = (int) c0;

        if $i12 != 1575 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static int getNumChars(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $z0 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean isLigature(char)>(c0);

        if $z0 == 0 goto label1;

        return 2;

     label1:
        return 1;
    }

    public static boolean isLigature(char)
    {
        char c0;
        int $i1, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i21;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        $i3 = (int) 65136;

        if $i1 < $i3 goto label1;

        $i4 = (int) c0;

        $i6 = (int) 65276;

        if $i4 <= $i6 goto label2;

     label1:
        return 0;

     label2:
        $i7 = (int) c0;

        $i9 = (int) 65138;

        if $i7 <= $i9 goto label4;

        $i10 = (int) c0;

        $i12 = (int) 65140;

        if $i10 == $i12 goto label4;

        $i13 = (int) c0;

        $i15 = (int) 65142;

        if $i13 < $i15 goto label3;

        $i16 = (int) c0;

        $i18 = (int) 65151;

        if $i16 <= $i18 goto label4;

     label3:
        $i19 = (int) c0;

        $i21 = (int) 65269;

        if $i19 < $i21 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.Integer $r1, $r2, $r3, $r4, $r5;
        int[] $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r45, $r47, $r49, $r51, $r53, $r54, $r56, $r58, $r60, $r61, $r63, $r64, $r66, $r67, $r69, $r70, $r72, $r73;
        int $i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23, $i25, $i27, $i29, $i31, $i33, $i35, $i37, $i39, $i41, $i43, $i45, $i47, $i49, $i51, $i53, $i55, $i57, $i59, $i61, $i63, $i65, $i67, $i69, $i71, $i73, $i75, $i77, $i79, $i81, $i83, $i85, $i87, $i89, $i91, $i93, $i95, $i97, $i99, $i101, $i103, $i105, $i107, $i109, $i111, $i113, $i115, $i117, $i119, $i121, $i123, $i125, $i127, $i129, $i131, $i133, $i135, $i137, $i139, $i141, $i143, $i145, $i147, $i149, $i151, $i153, $i155, $i157, $i159, $i161, $i163, $i165, $i167, $i169, $i171, $i173, $i175, $i177, $i179, $i181, $i183, $i185, $i187, $i189, $i191, $i193, $i195, $i197, $i199, $i201, $i203, $i205, $i207, $i209, $i211, $i213, $i215, $i217, $i219, $i221, $i223, $i225, $i227, $i229, $i231, $i233, $i235, $i237, $i239, $i241, $i243, $i245, $i247, $i249, $i251, $i253, $i255, $i257, $i259, $i261, $i263, $i265, $i267, $i269, $i271, $i273, $i275, $i277, $i279, $i281, $i283, $i285, $i287, $i289, $i291, $i293, $i295, $i297, $i299, $i301, $i303, $i305, $i307, $i309, $i311, $i313, $i315, $i317, $i319, $i321, $i323, $i325, $i327, $i329, $i331, $i333, $i335, $i337, $i339, $i341, $i343, $i345, $i347, $i349, $i351, $i353, $i355, $i357, $i359, $i361, $i363, $i365, $i367, $i369, $i371, $i373, $i375, $i377, $i379, $i381, $i383, $i385, $i387, $i389, $i391, $i393, $i395, $i397, $i399, $i401, $i403, $i405, $i407, $i409, $i411, $i413, $i415, $i417, $i419, $i421, $i423, $i425, $i427, $i429, $i431;
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute $r0;
        int[][][] $r43;
        int[][] $r6, $r44, $r46, $r48, $r50, $r52, $r55, $r57, $r59, $r62, $r65, $r68, $r71;

        <org.apache.batik.gvt.text.ArabicTextHandler: int arabicEnd> = 1791;

        <org.apache.batik.gvt.text.ArabicTextHandler: int arabicStart> = 1536;

        $r0 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute ARABIC_FORM>;

        <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedCharacterIterator$Attribute ARABIC_FORM> = $r0;

        $r1 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: java.lang.Integer ARABIC_NONE>;

        <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_NONE> = $r1;

        $r2 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: java.lang.Integer ARABIC_ISOLATED>;

        <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_ISOLATED> = $r2;

        $r3 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: java.lang.Integer ARABIC_TERMINAL>;

        <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_TERMINAL> = $r3;

        $r4 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: java.lang.Integer ARABIC_INITIAL>;

        <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_INITIAL> = $r4;

        $r5 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: java.lang.Integer ARABIC_MEDIAL>;

        <org.apache.batik.gvt.text.ArabicTextHandler: java.lang.Integer ARABIC_MEDIAL> = $r5;

        <org.apache.batik.gvt.text.ArabicTextHandler: int singleCharFirst> = 1569;

        <org.apache.batik.gvt.text.ArabicTextHandler: int singleCharLast> = 1610;

        $r6 = newarray (int[])[42];

        $r7 = newarray (int)[4];

        $i1 = (int) 65152;

        $r7[0] = $i1;

        $i3 = (int) -1;

        $r7[1] = $i3;

        $i5 = (int) -1;

        $r7[2] = $i5;

        $i7 = (int) -1;

        $r7[3] = $i7;

        $r6[0] = $r7;

        $r8 = newarray (int)[4];

        $i9 = (int) 65153;

        $r8[0] = $i9;

        $i11 = (int) 65154;

        $r8[1] = $i11;

        $i13 = (int) -1;

        $r8[2] = $i13;

        $i15 = (int) -1;

        $r8[3] = $i15;

        $r6[1] = $r8;

        $r9 = newarray (int)[4];

        $i17 = (int) 65155;

        $r9[0] = $i17;

        $i19 = (int) 65156;

        $r9[1] = $i19;

        $i21 = (int) -1;

        $r9[2] = $i21;

        $i23 = (int) -1;

        $r9[3] = $i23;

        $r6[2] = $r9;

        $r10 = newarray (int)[4];

        $i25 = (int) 65157;

        $r10[0] = $i25;

        $i27 = (int) 65158;

        $r10[1] = $i27;

        $i29 = (int) -1;

        $r10[2] = $i29;

        $i31 = (int) -1;

        $r10[3] = $i31;

        $r6[3] = $r10;

        $r11 = newarray (int)[4];

        $i33 = (int) 65159;

        $r11[0] = $i33;

        $i35 = (int) 65160;

        $r11[1] = $i35;

        $i37 = (int) -1;

        $r11[2] = $i37;

        $i39 = (int) -1;

        $r11[3] = $i39;

        $r6[4] = $r11;

        $r12 = newarray (int)[4];

        $i41 = (int) 65161;

        $r12[0] = $i41;

        $i43 = (int) 65162;

        $r12[1] = $i43;

        $i45 = (int) 65163;

        $r12[2] = $i45;

        $i47 = (int) 65164;

        $r12[3] = $i47;

        $r6[5] = $r12;

        $r13 = newarray (int)[4];

        $i49 = (int) 65165;

        $r13[0] = $i49;

        $i51 = (int) 65166;

        $r13[1] = $i51;

        $i53 = (int) -1;

        $r13[2] = $i53;

        $i55 = (int) -1;

        $r13[3] = $i55;

        $r6[6] = $r13;

        $r14 = newarray (int)[4];

        $i57 = (int) 65167;

        $r14[0] = $i57;

        $i59 = (int) 65168;

        $r14[1] = $i59;

        $i61 = (int) 65169;

        $r14[2] = $i61;

        $i63 = (int) 65170;

        $r14[3] = $i63;

        $r6[7] = $r14;

        $r15 = newarray (int)[4];

        $i65 = (int) 65171;

        $r15[0] = $i65;

        $i67 = (int) 65172;

        $r15[1] = $i67;

        $i69 = (int) -1;

        $r15[2] = $i69;

        $i71 = (int) -1;

        $r15[3] = $i71;

        $r6[8] = $r15;

        $r16 = newarray (int)[4];

        $i73 = (int) 65173;

        $r16[0] = $i73;

        $i75 = (int) 65174;

        $r16[1] = $i75;

        $i77 = (int) 65175;

        $r16[2] = $i77;

        $i79 = (int) 65176;

        $r16[3] = $i79;

        $r6[9] = $r16;

        $r17 = newarray (int)[4];

        $i81 = (int) 65177;

        $r17[0] = $i81;

        $i83 = (int) 65178;

        $r17[1] = $i83;

        $i85 = (int) 65179;

        $r17[2] = $i85;

        $i87 = (int) 65180;

        $r17[3] = $i87;

        $r6[10] = $r17;

        $r18 = newarray (int)[4];

        $i89 = (int) 65181;

        $r18[0] = $i89;

        $i91 = (int) 65182;

        $r18[1] = $i91;

        $i93 = (int) 65183;

        $r18[2] = $i93;

        $i95 = (int) 65184;

        $r18[3] = $i95;

        $r6[11] = $r18;

        $r19 = newarray (int)[4];

        $i97 = (int) 65185;

        $r19[0] = $i97;

        $i99 = (int) 65186;

        $r19[1] = $i99;

        $i101 = (int) 65187;

        $r19[2] = $i101;

        $i103 = (int) 65188;

        $r19[3] = $i103;

        $r6[12] = $r19;

        $r20 = newarray (int)[4];

        $i105 = (int) 65189;

        $r20[0] = $i105;

        $i107 = (int) 65190;

        $r20[1] = $i107;

        $i109 = (int) 65191;

        $r20[2] = $i109;

        $i111 = (int) 65192;

        $r20[3] = $i111;

        $r6[13] = $r20;

        $r21 = newarray (int)[4];

        $i113 = (int) 65193;

        $r21[0] = $i113;

        $i115 = (int) 65194;

        $r21[1] = $i115;

        $i117 = (int) -1;

        $r21[2] = $i117;

        $i119 = (int) -1;

        $r21[3] = $i119;

        $r6[14] = $r21;

        $r22 = newarray (int)[4];

        $i121 = (int) 65195;

        $r22[0] = $i121;

        $i123 = (int) 65196;

        $r22[1] = $i123;

        $i125 = (int) -1;

        $r22[2] = $i125;

        $i127 = (int) -1;

        $r22[3] = $i127;

        $r6[15] = $r22;

        $r23 = newarray (int)[4];

        $i129 = (int) 65197;

        $r23[0] = $i129;

        $i131 = (int) 65198;

        $r23[1] = $i131;

        $i133 = (int) -1;

        $r23[2] = $i133;

        $i135 = (int) -1;

        $r23[3] = $i135;

        $r6[16] = $r23;

        $r24 = newarray (int)[4];

        $i137 = (int) 65199;

        $r24[0] = $i137;

        $i139 = (int) 65200;

        $r24[1] = $i139;

        $i141 = (int) -1;

        $r24[2] = $i141;

        $i143 = (int) -1;

        $r24[3] = $i143;

        $r6[17] = $r24;

        $r25 = newarray (int)[4];

        $i145 = (int) 65201;

        $r25[0] = $i145;

        $i147 = (int) 65202;

        $r25[1] = $i147;

        $i149 = (int) 65203;

        $r25[2] = $i149;

        $i151 = (int) 65204;

        $r25[3] = $i151;

        $r6[18] = $r25;

        $r26 = newarray (int)[4];

        $i153 = (int) 65205;

        $r26[0] = $i153;

        $i155 = (int) 65206;

        $r26[1] = $i155;

        $i157 = (int) 65207;

        $r26[2] = $i157;

        $i159 = (int) 65208;

        $r26[3] = $i159;

        $r6[19] = $r26;

        $r27 = newarray (int)[4];

        $i161 = (int) 65209;

        $r27[0] = $i161;

        $i163 = (int) 65210;

        $r27[1] = $i163;

        $i165 = (int) 65211;

        $r27[2] = $i165;

        $i167 = (int) 65212;

        $r27[3] = $i167;

        $r6[20] = $r27;

        $r28 = newarray (int)[4];

        $i169 = (int) 65213;

        $r28[0] = $i169;

        $i171 = (int) 65214;

        $r28[1] = $i171;

        $i173 = (int) 65215;

        $r28[2] = $i173;

        $i175 = (int) 65216;

        $r28[3] = $i175;

        $r6[21] = $r28;

        $r29 = newarray (int)[4];

        $i177 = (int) 65217;

        $r29[0] = $i177;

        $i179 = (int) 65218;

        $r29[1] = $i179;

        $i181 = (int) 65219;

        $r29[2] = $i181;

        $i183 = (int) 65220;

        $r29[3] = $i183;

        $r6[22] = $r29;

        $r30 = newarray (int)[4];

        $i185 = (int) 65221;

        $r30[0] = $i185;

        $i187 = (int) 65222;

        $r30[1] = $i187;

        $i189 = (int) 65223;

        $r30[2] = $i189;

        $i191 = (int) 65224;

        $r30[3] = $i191;

        $r6[23] = $r30;

        $r31 = newarray (int)[4];

        $i193 = (int) 65225;

        $r31[0] = $i193;

        $i195 = (int) 65226;

        $r31[1] = $i195;

        $i197 = (int) 65227;

        $r31[2] = $i197;

        $i199 = (int) 65228;

        $r31[3] = $i199;

        $r6[24] = $r31;

        $r32 = newarray (int)[4];

        $i201 = (int) 65229;

        $r32[0] = $i201;

        $i203 = (int) 65230;

        $r32[1] = $i203;

        $i205 = (int) 65231;

        $r32[2] = $i205;

        $i207 = (int) 65232;

        $r32[3] = $i207;

        $r6[25] = $r32;

        $r6[26] = null;

        $r6[27] = null;

        $r6[28] = null;

        $r6[29] = null;

        $r6[30] = null;

        $r6[31] = null;

        $r33 = newarray (int)[4];

        $i209 = (int) 65233;

        $r33[0] = $i209;

        $i211 = (int) 65234;

        $r33[1] = $i211;

        $i213 = (int) 65235;

        $r33[2] = $i213;

        $i215 = (int) 65236;

        $r33[3] = $i215;

        $r6[32] = $r33;

        $r34 = newarray (int)[4];

        $i217 = (int) 65237;

        $r34[0] = $i217;

        $i219 = (int) 65238;

        $r34[1] = $i219;

        $i221 = (int) 65239;

        $r34[2] = $i221;

        $i223 = (int) 65240;

        $r34[3] = $i223;

        $r6[33] = $r34;

        $r35 = newarray (int)[4];

        $i225 = (int) 65241;

        $r35[0] = $i225;

        $i227 = (int) 65242;

        $r35[1] = $i227;

        $i229 = (int) 65243;

        $r35[2] = $i229;

        $i231 = (int) 65244;

        $r35[3] = $i231;

        $r6[34] = $r35;

        $r36 = newarray (int)[4];

        $i233 = (int) 65245;

        $r36[0] = $i233;

        $i235 = (int) 65246;

        $r36[1] = $i235;

        $i237 = (int) 65247;

        $r36[2] = $i237;

        $i239 = (int) 65248;

        $r36[3] = $i239;

        $r6[35] = $r36;

        $r37 = newarray (int)[4];

        $i241 = (int) 65249;

        $r37[0] = $i241;

        $i243 = (int) 65250;

        $r37[1] = $i243;

        $i245 = (int) 65251;

        $r37[2] = $i245;

        $i247 = (int) 65252;

        $r37[3] = $i247;

        $r6[36] = $r37;

        $r38 = newarray (int)[4];

        $i249 = (int) 65253;

        $r38[0] = $i249;

        $i251 = (int) 65254;

        $r38[1] = $i251;

        $i253 = (int) 65255;

        $r38[2] = $i253;

        $i255 = (int) 65256;

        $r38[3] = $i255;

        $r6[37] = $r38;

        $r39 = newarray (int)[4];

        $i257 = (int) 65257;

        $r39[0] = $i257;

        $i259 = (int) 65258;

        $r39[1] = $i259;

        $i261 = (int) 65259;

        $r39[2] = $i261;

        $i263 = (int) 65260;

        $r39[3] = $i263;

        $r6[38] = $r39;

        $r40 = newarray (int)[4];

        $i265 = (int) 65261;

        $r40[0] = $i265;

        $i267 = (int) 65262;

        $r40[1] = $i267;

        $i269 = (int) -1;

        $r40[2] = $i269;

        $i271 = (int) -1;

        $r40[3] = $i271;

        $r6[39] = $r40;

        $r41 = newarray (int)[4];

        $i273 = (int) 65263;

        $r41[0] = $i273;

        $i275 = (int) 65264;

        $r41[1] = $i275;

        $i277 = (int) -1;

        $r41[2] = $i277;

        $i279 = (int) -1;

        $r41[3] = $i279;

        $r6[40] = $r41;

        $r42 = newarray (int)[4];

        $i281 = (int) 65265;

        $r42[0] = $i281;

        $i283 = (int) 65266;

        $r42[1] = $i283;

        $i285 = (int) 65267;

        $r42[2] = $i285;

        $i287 = (int) 65268;

        $r42[3] = $i287;

        $r6[41] = $r42;

        <org.apache.batik.gvt.text.ArabicTextHandler: int[][] singleCharRemappings> = $r6;

        <org.apache.batik.gvt.text.ArabicTextHandler: int doubleCharFirst> = 1570;

        <org.apache.batik.gvt.text.ArabicTextHandler: int doubleCharLast> = 1618;

        $r43 = newarray (int[][])[43];

        $r44 = newarray (int[])[1];

        $r45 = newarray (int)[5];

        $r45[0] = 1604;

        $i289 = (int) 65269;

        $r45[1] = $i289;

        $i291 = (int) 65270;

        $r45[2] = $i291;

        $i293 = (int) -1;

        $r45[3] = $i293;

        $i295 = (int) -1;

        $r45[4] = $i295;

        $r44[0] = $r45;

        $r43[0] = $r44;

        $r46 = newarray (int[])[1];

        $r47 = newarray (int)[5];

        $r47[0] = 1604;

        $i297 = (int) 65271;

        $r47[1] = $i297;

        $i299 = (int) 65272;

        $r47[2] = $i299;

        $i301 = (int) -1;

        $r47[3] = $i301;

        $i303 = (int) -1;

        $r47[4] = $i303;

        $r46[0] = $r47;

        $r43[1] = $r46;

        $r43[2] = null;

        $r48 = newarray (int[])[1];

        $r49 = newarray (int)[5];

        $r49[0] = 1604;

        $i305 = (int) 65273;

        $r49[1] = $i305;

        $i307 = (int) 65274;

        $r49[2] = $i307;

        $i309 = (int) -1;

        $r49[3] = $i309;

        $i311 = (int) -1;

        $r49[4] = $i311;

        $r48[0] = $r49;

        $r43[3] = $r48;

        $r43[4] = null;

        $r50 = newarray (int[])[1];

        $r51 = newarray (int)[5];

        $r51[0] = 1604;

        $i313 = (int) 65275;

        $r51[1] = $i313;

        $i315 = (int) 65276;

        $r51[2] = $i315;

        $i317 = (int) -1;

        $r51[3] = $i317;

        $i319 = (int) -1;

        $r51[4] = $i319;

        $r50[0] = $r51;

        $r43[5] = $r50;

        $r43[6] = null;

        $r43[7] = null;

        $r43[8] = null;

        $r43[9] = null;

        $r43[10] = null;

        $r43[11] = null;

        $r43[12] = null;

        $r43[13] = null;

        $r43[14] = null;

        $r43[15] = null;

        $r43[16] = null;

        $r43[17] = null;

        $r43[18] = null;

        $r43[19] = null;

        $r43[20] = null;

        $r43[21] = null;

        $r43[22] = null;

        $r43[23] = null;

        $r43[24] = null;

        $r43[25] = null;

        $r43[26] = null;

        $r43[27] = null;

        $r43[28] = null;

        $r43[29] = null;

        $r43[30] = null;

        $r43[31] = null;

        $r43[32] = null;

        $r43[33] = null;

        $r43[34] = null;

        $r52 = newarray (int[])[2];

        $r53 = newarray (int)[5];

        $r53[0] = 32;

        $i321 = (int) 65136;

        $r53[1] = $i321;

        $i323 = (int) -1;

        $r53[2] = $i323;

        $i325 = (int) -1;

        $r53[3] = $i325;

        $i327 = (int) -1;

        $r53[4] = $i327;

        $r52[0] = $r53;

        $r54 = newarray (int)[5];

        $r54[0] = 1600;

        $i329 = (int) -1;

        $r54[1] = $i329;

        $i331 = (int) -1;

        $r54[2] = $i331;

        $i333 = (int) -1;

        $r54[3] = $i333;

        $i335 = (int) 65137;

        $r54[4] = $i335;

        $r52[1] = $r54;

        $r43[35] = $r52;

        $r55 = newarray (int[])[1];

        $r56 = newarray (int)[5];

        $r56[0] = 32;

        $i337 = (int) 65138;

        $r56[1] = $i337;

        $i339 = (int) -1;

        $r56[2] = $i339;

        $i341 = (int) -1;

        $r56[3] = $i341;

        $i343 = (int) -1;

        $r56[4] = $i343;

        $r55[0] = $r56;

        $r43[36] = $r55;

        $r57 = newarray (int[])[1];

        $r58 = newarray (int)[5];

        $r58[0] = 32;

        $i345 = (int) 65140;

        $r58[1] = $i345;

        $i347 = (int) -1;

        $r58[2] = $i347;

        $i349 = (int) -1;

        $r58[3] = $i349;

        $i351 = (int) -1;

        $r58[4] = $i351;

        $r57[0] = $r58;

        $r43[37] = $r57;

        $r59 = newarray (int[])[2];

        $r60 = newarray (int)[5];

        $r60[0] = 32;

        $i353 = (int) 65142;

        $r60[1] = $i353;

        $i355 = (int) -1;

        $r60[2] = $i355;

        $i357 = (int) -1;

        $r60[3] = $i357;

        $i359 = (int) -1;

        $r60[4] = $i359;

        $r59[0] = $r60;

        $r61 = newarray (int)[5];

        $r61[0] = 1600;

        $i361 = (int) -1;

        $r61[1] = $i361;

        $i363 = (int) -1;

        $r61[2] = $i363;

        $i365 = (int) -1;

        $r61[3] = $i365;

        $i367 = (int) 65143;

        $r61[4] = $i367;

        $r59[1] = $r61;

        $r43[38] = $r59;

        $r62 = newarray (int[])[2];

        $r63 = newarray (int)[5];

        $r63[0] = 32;

        $i369 = (int) 65144;

        $r63[1] = $i369;

        $i371 = (int) -1;

        $r63[2] = $i371;

        $i373 = (int) -1;

        $r63[3] = $i373;

        $i375 = (int) -1;

        $r63[4] = $i375;

        $r62[0] = $r63;

        $r64 = newarray (int)[5];

        $r64[0] = 1600;

        $i377 = (int) -1;

        $r64[1] = $i377;

        $i379 = (int) -1;

        $r64[2] = $i379;

        $i381 = (int) -1;

        $r64[3] = $i381;

        $i383 = (int) 65145;

        $r64[4] = $i383;

        $r62[1] = $r64;

        $r43[39] = $r62;

        $r65 = newarray (int[])[2];

        $r66 = newarray (int)[5];

        $r66[0] = 32;

        $i385 = (int) 65146;

        $r66[1] = $i385;

        $i387 = (int) -1;

        $r66[2] = $i387;

        $i389 = (int) -1;

        $r66[3] = $i389;

        $i391 = (int) -1;

        $r66[4] = $i391;

        $r65[0] = $r66;

        $r67 = newarray (int)[5];

        $r67[0] = 1600;

        $i393 = (int) -1;

        $r67[1] = $i393;

        $i395 = (int) -1;

        $r67[2] = $i395;

        $i397 = (int) -1;

        $r67[3] = $i397;

        $i399 = (int) 65147;

        $r67[4] = $i399;

        $r65[1] = $r67;

        $r43[40] = $r65;

        $r68 = newarray (int[])[2];

        $r69 = newarray (int)[5];

        $r69[0] = 32;

        $i401 = (int) 65148;

        $r69[1] = $i401;

        $i403 = (int) -1;

        $r69[2] = $i403;

        $i405 = (int) -1;

        $r69[3] = $i405;

        $i407 = (int) -1;

        $r69[4] = $i407;

        $r68[0] = $r69;

        $r70 = newarray (int)[5];

        $r70[0] = 1600;

        $i409 = (int) -1;

        $r70[1] = $i409;

        $i411 = (int) -1;

        $r70[2] = $i411;

        $i413 = (int) -1;

        $r70[3] = $i413;

        $i415 = (int) 65149;

        $r70[4] = $i415;

        $r68[1] = $r70;

        $r43[41] = $r68;

        $r71 = newarray (int[])[2];

        $r72 = newarray (int)[5];

        $r72[0] = 32;

        $i417 = (int) 65150;

        $r72[1] = $i417;

        $i419 = (int) -1;

        $r72[2] = $i419;

        $i421 = (int) -1;

        $r72[3] = $i421;

        $i423 = (int) -1;

        $r72[4] = $i423;

        $r71[0] = $r72;

        $r73 = newarray (int)[5];

        $r73[0] = 1600;

        $i425 = (int) -1;

        $r73[1] = $i425;

        $i427 = (int) -1;

        $r73[2] = $i427;

        $i429 = (int) -1;

        $r73[3] = $i429;

        $i431 = (int) 65151;

        $r73[4] = $i431;

        $r71[1] = $r73;

        $r43[42] = $r71;

        <org.apache.batik.gvt.text.ArabicTextHandler: int[][][] doubleCharRemappings> = $r43;

        return;
    }
}
