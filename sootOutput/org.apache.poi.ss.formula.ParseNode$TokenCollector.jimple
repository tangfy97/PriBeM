final class org.apache.poi.ss.formula.ParseNode$TokenCollector extends java.lang.Object
{
    private final org.apache.poi.ss.formula.ptg.Ptg[] _ptgs;
    private int _offset;

    public void <init>(int)
    {
        int i0;
        org.apache.poi.ss.formula.ParseNode$TokenCollector r0;
        org.apache.poi.ss.formula.ptg.Ptg[] $r1;

        r0 := @this: org.apache.poi.ss.formula.ParseNode$TokenCollector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.apache.poi.ss.formula.ptg.Ptg)[i0];

        r0.<org.apache.poi.ss.formula.ParseNode$TokenCollector: org.apache.poi.ss.formula.ptg.Ptg[] _ptgs> = $r1;

        r0.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int _offset> = 0;

        return;
    }

    public int sumTokenSizes(int, int)
    {
        org.apache.poi.ss.formula.ptg.Ptg $r2;
        org.apache.poi.ss.formula.ParseNode$TokenCollector r0;
        org.apache.poi.ss.formula.ptg.Ptg[] $r1;
        int i0, i1, $i2, i3, i4;

        r0 := @this: org.apache.poi.ss.formula.ParseNode$TokenCollector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i3 = 0;

        i4 = i0;

     label1:
        if i4 >= i1 goto label2;

        $r1 = r0.<org.apache.poi.ss.formula.ParseNode$TokenCollector: org.apache.poi.ss.formula.ptg.Ptg[] _ptgs>;

        $r2 = $r1[i4];

        $i2 = virtualinvoke $r2.<org.apache.poi.ss.formula.ptg.Ptg: int getSize()>();

        i3 = i3 + $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    public int createPlaceholder()
    {
        int $i0, $i1;
        org.apache.poi.ss.formula.ParseNode$TokenCollector r0;

        r0 := @this: org.apache.poi.ss.formula.ParseNode$TokenCollector;

        $i0 = r0.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int _offset>;

        $i1 = $i0 + 1;

        r0.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int _offset> = $i1;

        return $i0;
    }

    public void add(org.apache.poi.ss.formula.ptg.Ptg)
    {
        org.apache.poi.ss.formula.ptg.Ptg r0;
        org.apache.poi.ss.formula.ptg.Ptg[] $r2;
        int $i0, $i1, $i2;
        org.apache.poi.ss.formula.ParseNode$TokenCollector r1;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.poi.ss.formula.ParseNode$TokenCollector;

        r0 := @parameter0: org.apache.poi.ss.formula.ptg.Ptg;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token must not be null");

        throw $r3;

     label1:
        $r2 = r1.<org.apache.poi.ss.formula.ParseNode$TokenCollector: org.apache.poi.ss.formula.ptg.Ptg[] _ptgs>;

        $i0 = r1.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int _offset>;

        $r2[$i0] = r0;

        $i1 = r1.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int _offset>;

        $i2 = $i1 + 1;

        r1.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int _offset> = $i2;

        return;
    }

    public void setPlaceholder(int, org.apache.poi.ss.formula.ptg.Ptg)
    {
        org.apache.poi.ss.formula.ptg.Ptg $r2, r3;
        java.lang.IllegalStateException $r5;
        org.apache.poi.ss.formula.ParseNode$TokenCollector r0;
        org.apache.poi.ss.formula.ptg.Ptg[] $r1, $r4;
        int i0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: org.apache.poi.ss.formula.ParseNode$TokenCollector;

        i0 := @parameter0: int;

        r3 := @parameter1: org.apache.poi.ss.formula.ptg.Ptg;

        $r1 = r0.<org.apache.poi.ss.formula.ParseNode$TokenCollector: org.apache.poi.ss.formula.ptg.Ptg[] _ptgs>;

        $r2 = $r1[i0];

        if $r2 == null goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid placeholder index (");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        $r4 = r0.<org.apache.poi.ss.formula.ParseNode$TokenCollector: org.apache.poi.ss.formula.ptg.Ptg[] _ptgs>;

        $r4[i0] = r3;

        return;
    }

    public org.apache.poi.ss.formula.ptg.Ptg[] getResult()
    {
        org.apache.poi.ss.formula.ParseNode$TokenCollector r0;
        org.apache.poi.ss.formula.ptg.Ptg[] $r1;

        r0 := @this: org.apache.poi.ss.formula.ParseNode$TokenCollector;

        $r1 = r0.<org.apache.poi.ss.formula.ParseNode$TokenCollector: org.apache.poi.ss.formula.ptg.Ptg[] _ptgs>;

        return $r1;
    }
}
