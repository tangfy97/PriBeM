class org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet extends java.lang.Object
{
    private final org.waveprotocol.wave.model.version.HashedVersion version0;
    private final java.util.Set explicitParticipants;
    private final java.util.Set implicitParticipants;
    private org.waveprotocol.wave.model.version.HashedVersion currentVersion;

    void <init>(org.waveprotocol.wave.model.id.WaveletName, org.waveprotocol.wave.model.version.HashedVersion)
    {
        java.util.HashSet $r1, $r2;
        org.waveprotocol.wave.model.id.WaveletName r5;
        org.waveprotocol.wave.model.version.HashedVersion r3, $r4;
        org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet r0;

        r0 := @this: org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet;

        r5 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        r3 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: java.util.Set explicitParticipants> = $r1;

        $r2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: java.util.Set implicitParticipants> = $r2;

        r0.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: org.waveprotocol.wave.model.version.HashedVersion version0> = r3;

        $r4 = r0.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: org.waveprotocol.wave.model.version.HashedVersion version0>;

        r0.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: org.waveprotocol.wave.model.version.HashedVersion currentVersion> = $r4;

        return;
    }

    synchronized org.waveprotocol.wave.model.version.HashedVersion getCurrentVersion()
    {
        org.waveprotocol.wave.model.version.HashedVersion $r1;
        org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet r0;

        r0 := @this: org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet;

        $r1 = r0.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: org.waveprotocol.wave.model.version.HashedVersion currentVersion>;

        return $r1;
    }

    synchronized void setCurrentVersion(org.waveprotocol.wave.model.version.HashedVersion)
    {
        org.waveprotocol.wave.model.version.HashedVersion r1;
        org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet r0;

        r0 := @this: org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet;

        r1 := @parameter0: org.waveprotocol.wave.model.version.HashedVersion;

        r0.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: org.waveprotocol.wave.model.version.HashedVersion currentVersion> = r1;

        return;
    }

    static org.waveprotocol.wave.model.version.HashedVersion access$002(org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet, org.waveprotocol.wave.model.version.HashedVersion)
    {
        org.waveprotocol.wave.model.version.HashedVersion r1;
        org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet r0;

        r0 := @parameter0: org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet;

        r1 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        r0.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: org.waveprotocol.wave.model.version.HashedVersion currentVersion> = r1;

        return r1;
    }

    static java.util.Set access$100(org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet)
    {
        java.util.Set $r1;
        org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet r0;

        r0 := @parameter0: org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet;

        $r1 = r0.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: java.util.Set explicitParticipants>;

        return $r1;
    }

    static java.util.Set access$200(org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet)
    {
        java.util.Set $r1;
        org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet r0;

        r0 := @parameter0: org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet;

        $r1 = r0.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: java.util.Set implicitParticipants>;

        return $r1;
    }
}
