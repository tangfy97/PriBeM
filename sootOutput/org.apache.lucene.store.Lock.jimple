public abstract class org.apache.lucene.store.Lock extends java.lang.Object
{
    public static long LOCK_POLL_INTERVAL;
    public static final long LOCK_OBTAIN_WAIT_FOREVER;
    protected java.lang.Throwable failureReason;

    public void <init>()
    {
        org.apache.lucene.store.Lock r0;

        r0 := @this: org.apache.lucene.store.Lock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract boolean obtain() throws java.io.IOException;

    public boolean obtain(long) throws java.io.IOException
    {
        byte $b1, $b3, $b6, $b7;
        boolean z0;
        java.lang.StringBuilder $r2, $r4, $r11, $r12, $r14, $r17, $r18, $r19, $r24, $r26, $r27;
        org.apache.lucene.util.ThreadInterruptedException $r29;
        java.lang.Throwable $r6, $r8, $r9, $r13;
        org.apache.lucene.store.LockObtainFailedException $r28;
        long l0, $l2, $l4, $l5, $l8, l9;
        org.apache.lucene.store.Lock r0;
        int $i10, $i11;
        java.lang.String $r3, $r5, $r20, r23;
        java.lang.IllegalArgumentException $r25;
        java.lang.InterruptedException $r21;

        r0 := @this: org.apache.lucene.store.Lock;

        l0 := @parameter0: long;

        r0.<org.apache.lucene.store.Lock: java.lang.Throwable failureReason> = null;

        z0 = virtualinvoke r0.<org.apache.lucene.store.Lock: boolean obtain()>();

        $b1 = l0 cmp 0L;

        $i10 = (int) $b1;

        if $i10 >= 0 goto label1;

        $b7 = l0 cmp -1L;

        if $b7 == 0 goto label1;

        $r25 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lockWaitTimeout should be LOCK_OBTAIN_WAIT_FOREVER or a non-negative number (got ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r25;

     label1:
        $l2 = <org.apache.lucene.store.Lock: long LOCK_POLL_INTERVAL>;

        $l8 = l0 / $l2;

        l9 = 0L;

     label2:
        if z0 != 0 goto label9;

        $b3 = l0 cmp -1L;

        if $b3 == 0 goto label5;

        $l5 = l9;

        l9 = l9 + 1L;

        $b6 = $l5 cmp $l8;

        $i11 = (int) $b6;

        if $i11 < 0 goto label5;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock obtain timed out: ");

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r23 = $r5;

        $r6 = r0.<org.apache.lucene.store.Lock: java.lang.Throwable failureReason>;

        if $r6 == null goto label3;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = r0.<org.apache.lucene.store.Lock: java.lang.Throwable failureReason>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        r23 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r28 = new org.apache.lucene.store.LockObtainFailedException;

        specialinvoke $r28.<org.apache.lucene.store.LockObtainFailedException: void <init>(java.lang.String)>(r23);

        $r8 = r0.<org.apache.lucene.store.Lock: java.lang.Throwable failureReason>;

        if $r8 == null goto label4;

        $r9 = r0.<org.apache.lucene.store.Lock: java.lang.Throwable failureReason>;

        virtualinvoke $r28.<org.apache.lucene.store.LockObtainFailedException: java.lang.Throwable initCause(java.lang.Throwable)>($r9);

     label4:
        throw $r28;

     label5:
        $l4 = <org.apache.lucene.store.Lock: long LOCK_POLL_INTERVAL>;

        staticinvoke <java.lang.Thread: void sleep(long)>($l4);

     label6:
        goto label8;

     label7:
        $r21 := @caughtexception;

        $r29 = new org.apache.lucene.util.ThreadInterruptedException;

        specialinvoke $r29.<org.apache.lucene.util.ThreadInterruptedException: void <init>(java.lang.InterruptedException)>($r21);

        throw $r29;

     label8:
        z0 = virtualinvoke r0.<org.apache.lucene.store.Lock: boolean obtain()>();

        goto label2;

     label9:
        return z0;

        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    public abstract void release() throws java.io.IOException;

    public abstract boolean isLocked() throws java.io.IOException;

    static void <clinit>()
    {
        <org.apache.lucene.store.Lock: long LOCK_OBTAIN_WAIT_FOREVER> = -1L;

        <org.apache.lucene.store.Lock: long LOCK_POLL_INTERVAL> = 1000L;

        return;
    }
}
