public class org.bouncycastle.crypto.generators.BaseKDFBytesGenerator extends java.lang.Object implements org.bouncycastle.crypto.DerivationFunction
{
    private int counterStart;
    private org.bouncycastle.crypto.Digest digest;
    private byte[] shared;
    private byte[] iv;

    protected void <init>(int, org.bouncycastle.crypto.Digest)
    {
        org.bouncycastle.crypto.generators.BaseKDFBytesGenerator r0;
        int i0;
        org.bouncycastle.crypto.Digest r1;

        r0 := @this: org.bouncycastle.crypto.generators.BaseKDFBytesGenerator;

        i0 := @parameter0: int;

        r1 := @parameter1: org.bouncycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: int counterStart> = i0;

        r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest> = r1;

        return;
    }

    public void init(org.bouncycastle.crypto.DerivationParameters)
    {
        byte[] $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r1;
        org.bouncycastle.crypto.generators.BaseKDFBytesGenerator r2;
        org.bouncycastle.crypto.DerivationParameters r0;
        org.bouncycastle.crypto.params.ISO18033KDFParameters r7;
        org.bouncycastle.crypto.params.KDFParameters r6;
        boolean $z0, $z1;

        r2 := @this: org.bouncycastle.crypto.generators.BaseKDFBytesGenerator;

        r0 := @parameter0: org.bouncycastle.crypto.DerivationParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.KDFParameters;

        if $z0 == 0 goto label1;

        r6 = (org.bouncycastle.crypto.params.KDFParameters) r0;

        $r4 = virtualinvoke r6.<org.bouncycastle.crypto.params.KDFParameters: byte[] getSharedSecret()>();

        r2.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] shared> = $r4;

        $r5 = virtualinvoke r6.<org.bouncycastle.crypto.params.KDFParameters: byte[] getIV()>();

        r2.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] iv> = $r5;

        goto label3;

     label1:
        $z1 = r0 instanceof org.bouncycastle.crypto.params.ISO18033KDFParameters;

        if $z1 == 0 goto label2;

        r7 = (org.bouncycastle.crypto.params.ISO18033KDFParameters) r0;

        $r3 = virtualinvoke r7.<org.bouncycastle.crypto.params.ISO18033KDFParameters: byte[] getSeed()>();

        r2.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] shared> = $r3;

        r2.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] iv> = null;

        goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("KDF parameters required for KDF2Generator");

        throw $r1;

     label3:
        return;
    }

    public org.bouncycastle.crypto.Digest getDigest()
    {
        org.bouncycastle.crypto.generators.BaseKDFBytesGenerator r0;
        org.bouncycastle.crypto.Digest $r1;

        r0 := @this: org.bouncycastle.crypto.generators.BaseKDFBytesGenerator;

        $r1 = r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        return $r1;
    }

    public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException
    {
        byte[] r0, $r5, $r6, $r12, $r14, $r15, r19;
        org.bouncycastle.crypto.DataLengthException $r20;
        byte $b4, $b14, $b16, $b18, $b19;
        org.bouncycastle.crypto.generators.BaseKDFBytesGenerator r1;
        long l2, $l5, $l6, $l7, $l8, $l9;
        org.bouncycastle.crypto.Digest $r2, $r3, $r4, $r7, $r8, $r9, $r10, $r11, $r13, $r16;
        int $i0, $i1, $i3, i10, $i11, $i12, $i13, $i15, $i17, $i20, i21, i22, i23, i24, $i25;
        java.lang.IllegalArgumentException $r21;

        r1 := @this: org.bouncycastle.crypto.generators.BaseKDFBytesGenerator;

        r0 := @parameter0: byte[];

        i21 := @parameter1: int;

        i22 := @parameter2: int;

        $i0 = lengthof r0;

        $i1 = $i0 - i22;

        if $i1 >= i21 goto label1;

        $r20 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r20.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too small");

        throw $r20;

     label1:
        l2 = (long) i22;

        $r2 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i3 = interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $b4 = l2 cmp 8589934591L;

        $i25 = (int) $b4;

        if $i25 <= 0 goto label2;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output length too large");

        throw $r21;

     label2:
        $l5 = (long) $i3;

        $l6 = l2 + $l5;

        $l8 = $l6 - 1L;

        $l7 = (long) $i3;

        $l9 = $l8 / $l7;

        i10 = (int) $l9;

        $r3 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i11 = interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r19 = newarray (byte)[$i11];

        i23 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: int counterStart>;

        i24 = 0;

     label3:
        if i24 >= i10 goto label7;

        $r7 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $r6 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] shared>;

        $r5 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] shared>;

        $i12 = lengthof $r5;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r6, 0, $i12);

        $r8 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i13 = i23 >> 24;

        $b14 = (byte) $i13;

        interfaceinvoke $r8.<org.bouncycastle.crypto.Digest: void update(byte)>($b14);

        $r9 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i15 = i23 >> 16;

        $b16 = (byte) $i15;

        interfaceinvoke $r9.<org.bouncycastle.crypto.Digest: void update(byte)>($b16);

        $r10 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i17 = i23 >> 8;

        $b18 = (byte) $i17;

        interfaceinvoke $r10.<org.bouncycastle.crypto.Digest: void update(byte)>($b18);

        $r11 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $b19 = (byte) i23;

        interfaceinvoke $r11.<org.bouncycastle.crypto.Digest: void update(byte)>($b19);

        $r12 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] iv>;

        if $r12 == null goto label4;

        $r16 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $r15 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] iv>;

        $r14 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] iv>;

        $i20 = lengthof $r14;

        interfaceinvoke $r16.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r15, 0, $i20);

     label4:
        $r13 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r13.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r19, 0);

        if i22 <= $i3 goto label5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r0, i21, $i3);

        i21 = i21 + $i3;

        i22 = i22 - $i3;

        goto label6;

     label5:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r0, i21, i22);

     label6:
        i23 = i23 + 1;

        i24 = i24 + 1;

        goto label3;

     label7:
        $r4 = r1.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.Digest: void reset()>();

        return i22;
    }
}
