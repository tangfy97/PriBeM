final class com.hp.hpl.jena.graph.compose.CompositionBase$2 extends com.hp.hpl.jena.util.iterator.NiceIterator
{
    final com.hp.hpl.jena.util.iterator.ClosableIterator val$i;
    final java.util.Set val$seen;

    void <init>(com.hp.hpl.jena.util.iterator.ClosableIterator, java.util.Set)
    {
        java.util.Set r2;
        com.hp.hpl.jena.util.iterator.ClosableIterator r1;
        com.hp.hpl.jena.graph.compose.CompositionBase$2 r0;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$2;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.ClosableIterator;

        r2 := @parameter1: java.util.Set;

        r0.<com.hp.hpl.jena.graph.compose.CompositionBase$2: com.hp.hpl.jena.util.iterator.ClosableIterator val$i> = r1;

        r0.<com.hp.hpl.jena.graph.compose.CompositionBase$2: java.util.Set val$seen> = r2;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: void <init>()>();

        return;
    }

    public void remove()
    {
        com.hp.hpl.jena.util.iterator.ClosableIterator $r1;
        com.hp.hpl.jena.graph.compose.CompositionBase$2 r0;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$2;

        $r1 = r0.<com.hp.hpl.jena.graph.compose.CompositionBase$2: com.hp.hpl.jena.util.iterator.ClosableIterator val$i>;

        interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ClosableIterator: void remove()>();

        return;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.util.iterator.ClosableIterator $r1;
        com.hp.hpl.jena.graph.compose.CompositionBase$2 r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$2;

        $r1 = r0.<com.hp.hpl.jena.graph.compose.CompositionBase$2: com.hp.hpl.jena.util.iterator.ClosableIterator val$i>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ClosableIterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        com.hp.hpl.jena.graph.compose.CompositionBase$2 r0;
        java.util.Set $r3;
        java.lang.Object $r2;
        com.hp.hpl.jena.util.iterator.ClosableIterator $r1;
        java.lang.OutOfMemoryError $r4;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$2;

        $r1 = r0.<com.hp.hpl.jena.graph.compose.CompositionBase$2: com.hp.hpl.jena.util.iterator.ClosableIterator val$i>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ClosableIterator: java.lang.Object next()>();

     label1:
        $r3 = r0.<com.hp.hpl.jena.graph.compose.CompositionBase$2: java.util.Set val$seen>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        throw $r4;

     label4:
        return $r2;

        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
    }

    public void close()
    {
        com.hp.hpl.jena.util.iterator.ClosableIterator $r1;
        com.hp.hpl.jena.graph.compose.CompositionBase$2 r0;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$2;

        $r1 = r0.<com.hp.hpl.jena.graph.compose.CompositionBase$2: com.hp.hpl.jena.util.iterator.ClosableIterator val$i>;

        interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ClosableIterator: void close()>();

        return;
    }
}
