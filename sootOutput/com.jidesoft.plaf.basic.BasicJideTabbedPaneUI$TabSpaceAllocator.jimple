public class com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator extends java.lang.Object
{
    static final int startOffset;
    private java.awt.Insets insets;
    static final int tabWidth;
    static final int textIconGap;
    private com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs;

    public void <init>()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: java.awt.Insets insets> = null;

        return;
    }

    private void setInsets(java.awt.Insets)
    {
        java.awt.Insets r1, $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator r0;
        java.lang.Object $r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator;

        r1 := @parameter0: java.awt.Insets;

        $r2 = virtualinvoke r1.<java.awt.Insets: java.lang.Object clone()>();

        $r3 = (java.awt.Insets) $r2;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: java.awt.Insets insets> = $r3;

        return;
    }

    private void init(java.awt.Rectangle[], java.awt.Insets)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab $r4, $r7, $r10;
        java.awt.Rectangle $r9;
        java.awt.Insets r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] $r3, $r5, $r6, $r8;
        java.awt.Rectangle[] r2;
        int $i0, $i1, $i2, i3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator;

        r2 := @parameter0: java.awt.Rectangle[];

        r1 := @parameter1: java.awt.Insets;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: void setInsets(java.awt.Insets)>(r1);

        $i0 = lengthof r2;

        $r3 = newarray (com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab)[$i0];

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs> = $r3;

        i3 = 0;

     label1:
        $i1 = lengthof r2;

        if i3 >= $i1 goto label2;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $r4 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab;

        specialinvoke $r4.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: void <init>()>();

        $r5[i3] = $r4;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $r7 = $r6[i3];

        $r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int id> = i3;

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $r10 = $r8[i3];

        $r9 = r2[i3];

        $i2 = $r9.<java.awt.Rectangle: int width>;

        $r10.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int width> = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: void tabSort()>();

        return;
    }

    private void bestfit(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[], int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] r0;
        int i0, i1, $i2, $i3, i4, $i5, $i6, i7, i8, i9, i10;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab $r1, $r3, $r4, $r5, $r6;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[];

        i7 := @parameter1: int;

        i8 := @parameter2: int;

        i0 = lengthof r0;

        $r1 = r0[i8];

        i9 = $r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int width>;

        i1 = i8;

        $i2 = i0 - 1;

        if i8 != $i2 goto label1;

        $r6 = r0[i8];

        $r6.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int width> = i7;

        return;

     label1:
        $i3 = i0 - i8;

        i4 = i7 / $i3;

     label2:
        if i9 >= i4 goto label4;

        i7 = i7 - i9;

        i8 = i8 + 1;

        $i6 = i0 - 1;

        if i8 >= $i6 goto label3;

        $r5 = r0[i8];

        i9 = $r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int width>;

        goto label2;

     label3:
        $r4 = r0[i8];

        $r4.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int width> = i4;

        return;

     label4:
        if i8 != i1 goto label7;

        i10 = i8;

     label5:
        if i10 >= i0 goto label6;

        $r3 = r0[i10];

        $r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int width> = i4;

        i10 = i10 + 1;

        goto label5;

     label6:
        goto label8;

     label7:
        $i5 = i0 - 1;

        if i8 >= $i5 goto label8;

        specialinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: void bestfit(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[],int,int)>(r0, i7, i8);

     label8:
        return;
    }

    private void tabSort()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] $r1, $r3, $r5, $r7, $r9, $r10, $r13;
        int i0, $i1, $i2, $i3, i4, i5;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab $r2, $r4, $r6, $r8, $r11, $r12, $r14;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        i0 = lengthof $r1;

        $r2 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab;

        specialinvoke $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: void <init>()>();

        i4 = 0;

     label1:
        $i1 = i0 - 1;

        if i4 >= $i1 goto label5;

        i5 = i4 + 1;

     label2:
        if i5 >= i0 goto label4;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $r4 = $r3[i4];

        $i3 = $r4.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int width>;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $r6 = $r5[i5];

        $i2 = $r6.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int width>;

        if $i3 <= $i2 goto label3;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $r8 = $r7[i5];

        virtualinvoke $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: void copy(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab)>($r8);

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $r12 = $r9[i5];

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $r11 = $r10[i4];

        virtualinvoke $r12.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: void copy(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab)>($r11);

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $r14 = $r13[i4];

        virtualinvoke $r14.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: void copy(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab)>($r2);

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        return;
    }

    private void outpush(java.awt.Rectangle[])
    {
        java.awt.Rectangle $r2, $r3, $r4, $r5, $r7;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] r8;
        java.awt.Rectangle[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab r6;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator;

        r1 := @parameter0: java.awt.Rectangle[];

        r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        i0 = lengthof r8;

        i9 = 0;

     label1:
        if i9 >= i0 goto label2;

        r6 = r8[i9];

        $i7 = r6.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int id>;

        $r7 = r1[$i7];

        $i8 = r6.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab: int width>;

        $r7.<java.awt.Rectangle: int width> = $i8;

        i9 = i9 + 1;

        goto label1;

     label2:
        $r2 = r1[0];

        $r2.<java.awt.Rectangle: int x> = 4;

        i10 = 1;

     label3:
        $i1 = lengthof r1;

        if i10 >= $i1 goto label4;

        $r5 = r1[i10];

        $i2 = i10 - 1;

        $r3 = r1[$i2];

        $i5 = $r3.<java.awt.Rectangle: int x>;

        $i3 = i10 - 1;

        $r4 = r1[$i3];

        $i4 = $r4.<java.awt.Rectangle: int width>;

        $i6 = $i5 + $i4;

        $r5.<java.awt.Rectangle: int x> = $i6;

        i10 = i10 + 1;

        goto label3;

     label4:
        return;
    }

    public void reArrange(java.awt.Rectangle[], java.awt.Insets, int)
    {
        java.awt.Rectangle $r4, $r5, $r6;
        java.awt.Insets r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] $r3;
        java.awt.Rectangle[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9, $i10, $i11, $i12;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator;

        r1 := @parameter0: java.awt.Rectangle[];

        r2 := @parameter1: java.awt.Insets;

        i0 := @parameter2: int;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: void init(java.awt.Rectangle[],java.awt.Insets)>(r1, r2);

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: void bestfit(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[],int,int)>($r3, i0, 0);

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: void outpush(java.awt.Rectangle[])>(r1);

        $i1 = lengthof r1;

        $i2 = $i1 - 1;

        $r4 = r1[$i2];

        $i6 = $r4.<java.awt.Rectangle: int x>;

        $i3 = lengthof r1;

        $i4 = $i3 - 1;

        $r5 = r1[$i4];

        $i5 = $r5.<java.awt.Rectangle: int width>;

        i7 = $i6 + $i5;

        if i7 <= i0 goto label1;

        i8 = i7 - i0;

        $i9 = lengthof r1;

        $i10 = $i9 - 1;

        $r6 = r1[$i10];

        $i11 = $r6.<java.awt.Rectangle: int width>;

        $i12 = $i11 - i8;

        $r6.<java.awt.Rectangle: int width> = $i12;

     label1:
        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: void clearup()>();

        return;
    }

    private void clearup()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator r0;
        int $i0, i1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] $r1, $r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator;

        i1 = 0;

     label1:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs>;

        $r2[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$AbstractTab[] tabs> = null;

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: int textIconGap> = 8;

        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: int tabWidth> = 24;

        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: int startOffset> = 4;

        return;
    }
}
