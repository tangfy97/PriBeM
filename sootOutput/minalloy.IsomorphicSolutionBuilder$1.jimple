class minalloy.IsomorphicSolutionBuilder$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        minalloy.IsomorphicSolutionBuilder$1 r0;

        r0 := @this: minalloy.IsomorphicSolutionBuilder$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(minsolver.MinSolution, minsolver.MinSolution)
    {
        minsolver.MinSolution r0, r1;
        int $i0;
        minalloy.IsomorphicSolutionBuilder$1 r2;

        r2 := @this: minalloy.IsomorphicSolutionBuilder$1;

        r0 := @parameter0: minsolver.MinSolution;

        r1 := @parameter1: minsolver.MinSolution;

        $i0 = staticinvoke <minalloy.SolutionComparator: int compare(minsolver.MinSolution,minsolver.MinSolution)>(r0, r1);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        minsolver.MinSolution $r3, $r4;
        int $i0;
        java.lang.Object r1, r2;
        minalloy.IsomorphicSolutionBuilder$1 r0;

        r0 := @this: minalloy.IsomorphicSolutionBuilder$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (minsolver.MinSolution) r1;

        $r3 = (minsolver.MinSolution) r2;

        $i0 = virtualinvoke r0.<minalloy.IsomorphicSolutionBuilder$1: int compare(minsolver.MinSolution,minsolver.MinSolution)>($r4, $r3);

        return $i0;
    }
}
