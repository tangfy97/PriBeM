public abstract class com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture extends com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture
{
    private final com.mycila.inject.internal.guava.util.concurrent.ListenableFuture delegate;

    protected void <init>(com.mycila.inject.internal.guava.util.concurrent.ListenableFuture)
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture r0;
        com.mycila.inject.internal.guava.util.concurrent.ListenableFuture r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture;

        r1 := @parameter0: com.mycila.inject.internal.guava.util.concurrent.ListenableFuture;

        specialinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture: void <init>()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.mycila.inject.internal.guava.util.concurrent.ListenableFuture) $r2;

        r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture: com.mycila.inject.internal.guava.util.concurrent.ListenableFuture delegate> = $r3;

        return;
    }

    protected final com.mycila.inject.internal.guava.util.concurrent.ListenableFuture delegate()
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture r0;
        com.mycila.inject.internal.guava.util.concurrent.ListenableFuture $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture;

        $r1 = r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture: com.mycila.inject.internal.guava.util.concurrent.ListenableFuture delegate>;

        return $r1;
    }

    protected volatile java.util.concurrent.Future delegate()
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture r0;
        com.mycila.inject.internal.guava.util.concurrent.ListenableFuture $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture: com.mycila.inject.internal.guava.util.concurrent.ListenableFuture delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture r0;
        com.mycila.inject.internal.guava.util.concurrent.ListenableFuture $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture: com.mycila.inject.internal.guava.util.concurrent.ListenableFuture delegate()>();

        return $r1;
    }
}
