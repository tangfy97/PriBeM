class javax.mail.internet.AddressParser extends java.lang.Object
{
    public static final int NONSTRICT;
    public static final int PARSE_HEADER;
    public static final int STRICT;
    protected static final int UNKNOWN;
    protected static final int ROUTE_ADDR;
    protected static final int GROUP_ADDR;
    protected static final int SIMPLE_ADDR;
    protected static final int END_OF_TOKENS;
    protected static final int PERIOD;
    protected static final int LEFT_ANGLE;
    protected static final int RIGHT_ANGLE;
    protected static final int COMMA;
    protected static final int AT_SIGN;
    protected static final int SEMICOLON;
    protected static final int COLON;
    protected static final int QUOTED_LITERAL;
    protected static final int DOMAIN_LITERAL;
    protected static final int COMMENT;
    protected static final int ATOM;
    protected static final int WHITESPACE;
    private java.lang.String addresses;
    private int position;
    private int end;
    private int validationLevel;
    private static final byte[] CHARMAP;
    private static final byte FLG_SPECIAL;
    private static final byte FLG_CONTROL;
    private static final byte FLG_SPACE;

    public void <init>(java.lang.String, int)
    {
        int i0;
        javax.mail.internet.AddressParser r0;
        java.lang.String r1;

        r0 := @this: javax.mail.internet.AddressParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.mail.internet.AddressParser: java.lang.String addresses> = r1;

        r0.<javax.mail.internet.AddressParser: int validationLevel> = i0;

        return;
    }

    public javax.mail.internet.InternetAddress[] parseAddressList() throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser$TokenStream $r1;
        java.lang.Object[] $r6;
        javax.mail.internet.InternetAddress[] $r5, $r7, $r8;
        java.util.ArrayList $r2;
        javax.mail.internet.AddressParser r0;
        java.util.List $r3;
        int $i0;
        javax.mail.internet.AddressParser$AddressToken $r4;

        r0 := @this: javax.mail.internet.AddressParser;

        $r1 = specialinvoke r0.<javax.mail.internet.AddressParser: javax.mail.internet.AddressParser$TokenStream tokenizeAddress()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label1:
        $r3 = specialinvoke r0.<javax.mail.internet.AddressParser: java.util.List parseSingleAddress(javax.mail.internet.AddressParser$TokenStream,boolean)>($r1, 0);

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r3);

        $r4 = virtualinvoke $r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        $i0 = $r4.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 != 0 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        $r5 = newarray (javax.mail.internet.InternetAddress)[0];

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (javax.mail.internet.InternetAddress[]) $r6;

        $r8 = (javax.mail.internet.InternetAddress[]) $r7;

        return $r8;
    }

    public javax.mail.internet.InternetAddress parseAddress() throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser$TokenStream $r1;
        javax.mail.internet.AddressException $r6, $r8;
        javax.mail.internet.InternetAddress $r5;
        javax.mail.internet.AddressParser r0;
        java.util.List $r2;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String $r7, $r9;
        javax.mail.internet.AddressParser$AddressToken $r3;
        boolean $z0;

        r0 := @this: javax.mail.internet.AddressParser;

        $r1 = specialinvoke r0.<javax.mail.internet.AddressParser: javax.mail.internet.AddressParser$TokenStream tokenizeAddress()>();

        $r2 = specialinvoke r0.<javax.mail.internet.AddressParser: java.util.List parseSingleAddress(javax.mail.internet.AddressParser$TokenStream,boolean)>($r1, 0);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r8 = new javax.mail.internet.AddressException;

        $r9 = r0.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        specialinvoke $r8.<javax.mail.internet.AddressException: void <init>(java.lang.String,java.lang.String,int)>("Null address", $r9, 0);

        throw $r8;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 1 goto label2;

        $r6 = new javax.mail.internet.AddressException;

        $r7 = r0.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        specialinvoke $r6.<javax.mail.internet.AddressException: void <init>(java.lang.String,java.lang.String,int)>("Illegal Address", $r7, 0);

        throw $r6;

     label2:
        $r3 = virtualinvoke $r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        $i1 = $r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 == 0 goto label3;

        specialinvoke r0.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Illegal Address", $r3);

     label3:
        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (javax.mail.internet.InternetAddress) $r4;

        return $r5;
    }

    public void validateAddress() throws javax.mail.internet.AddressException
    {
        javax.mail.internet.InternetAddress r4;
        int $i0, $i1;
        java.lang.String $r5, $r8, $r10, $r12;
        boolean $z0;
        javax.mail.internet.AddressParser$TokenStream $r1;
        javax.mail.internet.AddressException $r7, $r9, $r11;
        javax.mail.internet.AddressParser r0;
        java.util.List $r2;
        java.lang.Object $r3;
        javax.mail.internet.AddressParser$AddressToken $r6;

        r0 := @this: javax.mail.internet.AddressParser;

        $r1 = specialinvoke r0.<javax.mail.internet.AddressParser: javax.mail.internet.AddressParser$TokenStream tokenizeAddress()>();

        $r2 = specialinvoke r0.<javax.mail.internet.AddressParser: java.util.List parseSingleAddress(javax.mail.internet.AddressParser$TokenStream,boolean)>($r1, 0);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r11 = new javax.mail.internet.AddressException;

        $r12 = r0.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        specialinvoke $r11.<javax.mail.internet.AddressException: void <init>(java.lang.String,java.lang.String,int)>("Null address", $r12, 0);

        throw $r11;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 1 goto label2;

        $r9 = new javax.mail.internet.AddressException;

        $r10 = r0.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        specialinvoke $r9.<javax.mail.internet.AddressException: void <init>(java.lang.String,java.lang.String,int)>("Illegal Address", $r10, 0);

        throw $r9;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (javax.mail.internet.InternetAddress) $r3;

        $r5 = r4.<javax.mail.internet.InternetAddress: java.lang.String personal>;

        if $r5 == null goto label3;

        $r7 = new javax.mail.internet.AddressException;

        $r8 = r0.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        specialinvoke $r7.<javax.mail.internet.AddressException: void <init>(java.lang.String,java.lang.String,int)>("Illegal Address", $r8, 0);

        throw $r7;

     label3:
        $r6 = virtualinvoke $r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        $i1 = $r6.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 == 0 goto label4;

        specialinvoke r0.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Illegal Address", $r6);

     label4:
        return;
    }

    public javax.mail.internet.InternetAddress[] extractGroupList() throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser$TokenStream $r1;
        java.lang.Object[] $r4;
        javax.mail.internet.InternetAddress[] $r3, $r5, $r6;
        java.util.ArrayList $r2;
        javax.mail.internet.AddressParser r0;
        java.util.List $r8;
        int $i0, $i1, $i2, $i3;
        javax.mail.internet.AddressParser$AddressToken r7, $r9;

        r0 := @this: javax.mail.internet.AddressParser;

        $r1 = specialinvoke r0.<javax.mail.internet.AddressParser: javax.mail.internet.AddressParser$TokenStream tokenizeAddress()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r7 = virtualinvoke $r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

     label1:
        $i0 = r7.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 == 58 goto label3;

        $i2 = r7.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 != 0 goto label2;

        specialinvoke r0.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Missing \':\'", r7);

     label2:
        r7 = virtualinvoke $r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        goto label1;

     label3:
        $r8 = specialinvoke r0.<javax.mail.internet.AddressParser: java.util.List parseSingleAddress(javax.mail.internet.AddressParser$TokenStream,boolean)>($r1, 1);

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r8);

        $r9 = virtualinvoke $r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        $i3 = $r9.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i3 != 59 goto label4;

        goto label5;

     label4:
        $i1 = $r9.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 != 0 goto label3;

        specialinvoke r0.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Missing \';\'", $r9);

        goto label3;

     label5:
        $r3 = newarray (javax.mail.internet.InternetAddress)[0];

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (javax.mail.internet.InternetAddress[]) $r4;

        $r6 = (javax.mail.internet.InternetAddress[]) $r5;

        return $r6;
    }

    private java.util.List parseSingleAddress(javax.mail.internet.AddressParser$TokenStream, boolean) throws javax.mail.internet.AddressException
    {
        java.util.ArrayList $r0;
        javax.mail.internet.InternetAddress $r5, $r17;
        byte b2, b5, b6, b7, b8;
        int $i0, $i1, $i3, $i4;
        java.lang.String $r4, r14, $r16;
        boolean z0, z1;
        javax.mail.internet.AddressParser$TokenStream r1, $r6, $r15, r18;
        javax.mail.internet.AddressParser r3;
        java.io.UnsupportedEncodingException $r9;
        javax.mail.internet.AddressParser$AddressToken $r2, $r7, $r8, r10, r11, r12, r13;

        r3 := @this: javax.mail.internet.AddressParser;

        r1 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        z0 := @parameter1: boolean;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r10 = null;

        r11 = null;

        r12 = null;

        r13 = null;

        z1 = 1;

        b2 = 0;

        b8 = 0;

        b7 = 0;

        b6 = 0;

        b5 = 0;

        $r2 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r2);

     label01:
        if b8 != 0 goto label17;

        $r7 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        $i1 = $r7.<javax.mail.internet.AddressParser$AddressToken: int type>;

        lookupswitch($i1)
        {
            case 0: goto label12;
            case 34: goto label05;
            case 40: goto label02;
            case 44: goto label13;
            case 46: goto label06;
            case 58: goto label10;
            case 59: goto label03;
            case 60: goto label08;
            case 62: goto label15;
            case 64: goto label06;
            case 65: goto label06;
            case 91: goto label05;
            default: goto label16;
        };

     label02:
        z1 = 0;

        goto label16;

     label03:
        if z0 == 0 goto label05;

        virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r7);

        if r12 != null goto label04;

        return $r0;

     label04:
        r13 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken previousToken(javax.mail.internet.AddressParser$AddressToken)>($r7);

        r10 = null;

        b2 = 3;

        b8 = 3;

        b7 = 3;

        b6 = 3;

        b5 = 3;

        goto label16;

     label05:
        z1 = 0;

     label06:
        if r12 != null goto label16;

        if r10 != null goto label07;

        r10 = $r7;

     label07:
        r12 = $r7;

        goto label16;

     label08:
        z1 = 0;

        b2 = 1;

        b8 = 1;

        b7 = 1;

        b6 = 1;

        b5 = 1;

        $r8 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        r12 = $r8;

        virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r8);

        if r10 == null goto label09;

        r11 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken previousToken(javax.mail.internet.AddressParser$AddressToken)>($r7);

     label09:
        r13 = specialinvoke r3.<javax.mail.internet.AddressParser: javax.mail.internet.AddressParser$AddressToken scanRouteAddress(javax.mail.internet.AddressParser$TokenStream,boolean)>(r1, 0);

        goto label16;

     label10:
        z1 = 0;

        if z0 == 0 goto label11;

        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Nested group element", $r7);

     label11:
        b2 = 2;

        b8 = 2;

        b7 = 2;

        b6 = 2;

        b5 = 2;

        r10 = null;

        r12 = $r2;

        r13 = specialinvoke r3.<javax.mail.internet.AddressParser: javax.mail.internet.AddressParser$AddressToken scanGroupAddress(javax.mail.internet.AddressParser$TokenStream)>(r1);

        goto label16;

     label12:
        if z0 == 0 goto label13;

        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Missing \';\'", $r7);

     label13:
        virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r7);

        if r12 != null goto label14;

        return $r0;

     label14:
        r13 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken previousToken(javax.mail.internet.AddressParser$AddressToken)>($r7);

        r10 = null;

        b2 = 3;

        b8 = 3;

        b7 = 3;

        b6 = 3;

        b5 = 3;

        goto label16;

     label15:
        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Unexpected \'>\'", $r7);

     label16:
        goto label01;

     label17:
        r14 = null;

        if r10 == null goto label18;

        $r6 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$TokenStream section(javax.mail.internet.AddressParser$AddressToken,javax.mail.internet.AddressParser$AddressToken)>(r10, r11);

        r14 = specialinvoke r3.<javax.mail.internet.AddressParser: java.lang.String personalToString(javax.mail.internet.AddressParser$TokenStream)>($r6);

        goto label19;

     label18:
        if b7 != 3 goto label19;

        $i0 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 != 40 goto label19;

        r14 = $r2.<javax.mail.internet.AddressParser$AddressToken: java.lang.String value>;

     label19:
        $r15 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$TokenStream section(javax.mail.internet.AddressParser$AddressToken,javax.mail.internet.AddressParser$AddressToken)>(r12, r13);

        $i3 = r3.<javax.mail.internet.AddressParser: int validationLevel>;

        if $i3 == 1 goto label23;

        tableswitch(b5)
        {
            case 1: goto label21;
            case 2: goto label20;
            case 3: goto label22;
            default: goto label23;
        };

     label20:
        specialinvoke r3.<javax.mail.internet.AddressParser: void validateGroup(javax.mail.internet.AddressParser$TokenStream)>($r15);

        goto label23;

     label21:
        specialinvoke r3.<javax.mail.internet.AddressParser: void validateRouteAddr(javax.mail.internet.AddressParser$TokenStream,boolean)>($r15, 0);

        goto label23;

     label22:
        specialinvoke r3.<javax.mail.internet.AddressParser: void validateSimpleAddress(javax.mail.internet.AddressParser$TokenStream)>($r15);

     label23:
        $i4 = r3.<javax.mail.internet.AddressParser: int validationLevel>;

        if $i4 != 0 goto label24;

        if b6 != 3 goto label24;

        if z1 != 0 goto label29;

     label24:
        virtualinvoke $r15.<javax.mail.internet.AddressParser$TokenStream: void reset()>();

        $r16 = specialinvoke r3.<javax.mail.internet.AddressParser: java.lang.String addressToString(javax.mail.internet.AddressParser$TokenStream)>($r15);

        $r17 = new javax.mail.internet.InternetAddress;

        specialinvoke $r17.<javax.mail.internet.InternetAddress: void <init>()>();

        virtualinvoke $r17.<javax.mail.internet.InternetAddress: void setAddress(java.lang.String)>($r16);

     label25:
        virtualinvoke $r17.<javax.mail.internet.InternetAddress: void setPersonal(java.lang.String)>(r14);

     label26:
        goto label28;

     label27:
        $r9 := @caughtexception;

     label28:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r17);

        return $r0;

     label29:
        virtualinvoke $r15.<javax.mail.internet.AddressParser$TokenStream: void reset()>();

        r18 = virtualinvoke $r15.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$TokenStream getBlankDelimitedToken()>();

     label30:
        if r18 == null goto label31;

        $r4 = specialinvoke r3.<javax.mail.internet.AddressParser: java.lang.String addressToString(javax.mail.internet.AddressParser$TokenStream)>(r18);

        $r5 = new javax.mail.internet.InternetAddress;

        specialinvoke $r5.<javax.mail.internet.InternetAddress: void <init>()>();

        virtualinvoke $r5.<javax.mail.internet.InternetAddress: void setAddress(java.lang.String)>($r4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        r18 = virtualinvoke $r15.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$TokenStream getBlankDelimitedToken()>();

        goto label30;

     label31:
        return $r0;

        catch java.io.UnsupportedEncodingException from label25 to label26 with label27;
    }

    private javax.mail.internet.AddressParser$AddressToken scanRouteAddress(javax.mail.internet.AddressParser$TokenStream, boolean) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser$TokenStream r0;
        javax.mail.internet.AddressParser r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        javax.mail.internet.AddressParser$AddressToken $r1, $r2, r4, r5;
        boolean z0, $z1, z2;

        r3 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        r4 = $r1;

        r5 = null;

        $i0 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 != 64 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z2 = $z1;

     label03:
        $i5 = r4.<javax.mail.internet.AddressParser$AddressToken: int type>;

        lookupswitch($i5)
        {
            case 0: goto label12;
            case 34: goto label04;
            case 44: goto label07;
            case 46: goto label04;
            case 58: goto label05;
            case 59: goto label13;
            case 60: goto label14;
            case 62: goto label08;
            case 64: goto label04;
            case 65: goto label04;
            case 91: goto label04;
            default: goto label15;
        };

     label04:
        goto label15;

     label05:
        if z2 != 0 goto label06;

        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Unexpected \':\'", r4);

     label06:
        z2 = 0;

        goto label15;

     label07:
        if z2 != 0 goto label15;

        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Unexpected \',\'", r4);

        goto label15;

     label08:
        if r5 != null goto label09;

        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Illegal address", r4);

     label09:
        $r2 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        if z0 == 0 goto label10;

        $i3 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i3 == 44 goto label11;

        $i4 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i4 == 59 goto label11;

        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Illegal address", $r2);

        goto label11;

     label10:
        $i1 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 == 44 goto label11;

        $i2 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 == 0 goto label11;

        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Illegal address", $r2);

     label11:
        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r2);

        return r5;

     label12:
        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Missing \'>\'", r4);

     label13:
        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Unexpected \';\'", r4);

     label14:
        specialinvoke r3.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Unexpected \'<\'", r4);

     label15:
        r5 = r4;

        r4 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        goto label03;
    }

    private javax.mail.internet.AddressParser$AddressToken scanGroupAddress(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser r1;
        javax.mail.internet.AddressParser$TokenStream r0;
        int $i0, $i1, $i2;
        javax.mail.internet.AddressParser$AddressToken $r2, r3;

        r1 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        r3 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

     label1:
        $i0 = r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 34: goto label2;
            case 44: goto label2;
            case 46: goto label2;
            case 58: goto label3;
            case 59: goto label6;
            case 60: goto label4;
            case 62: goto label8;
            case 64: goto label2;
            case 65: goto label2;
            case 91: goto label2;
            default: goto label9;
        };

     label2:
        goto label9;

     label3:
        specialinvoke r1.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Nested group", r3);

     label4:
        specialinvoke r1.<javax.mail.internet.AddressParser: javax.mail.internet.AddressParser$AddressToken scanRouteAddress(javax.mail.internet.AddressParser$TokenStream,boolean)>(r0, 1);

        goto label9;

     label5:
        specialinvoke r1.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Missing \';\'", r3);

     label6:
        $r2 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i1 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 == 44 goto label7;

        $i2 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 == 0 goto label7;

        specialinvoke r1.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Illegal address", r3);

     label7:
        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r2);

        return r3;

     label8:
        specialinvoke r1.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Unexpected \'>\'", r3);

     label9:
        r3 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        goto label1;
    }

    private javax.mail.internet.AddressParser$TokenStream tokenizeAddress() throws javax.mail.internet.AddressException
    {
        boolean $z0, $z1;
        javax.mail.internet.AddressParser$TokenStream $r13;
        javax.mail.internet.AddressParser r1;
        javax.mail.internet.AddressParser$AddressToken $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.lang.String $r2, $r4;
        char $c2, $c13;

        r1 := @this: javax.mail.internet.AddressParser;

        $r13 = new javax.mail.internet.AddressParser$TokenStream;

        specialinvoke $r13.<javax.mail.internet.AddressParser$TokenStream: void <init>(javax.mail.internet.AddressParser)>(r1);

        $r2 = r1.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        r1.<javax.mail.internet.AddressParser: int end> = $i0;

     label01:
        $z0 = specialinvoke r1.<javax.mail.internet.AddressParser: boolean moreCharacters()>();

        if $z0 == 0 goto label21;

        $c2 = specialinvoke r1.<javax.mail.internet.AddressParser: char currentChar()>();

        $i15 = (int) $c2;

        lookupswitch($i15)
        {
            case 9: goto label14;
            case 10: goto label14;
            case 13: goto label14;
            case 32: goto label14;
            case 34: goto label04;
            case 40: goto label02;
            case 41: goto label03;
            case 44: goto label10;
            case 46: goto label11;
            case 58: goto label09;
            case 59: goto label12;
            case 60: goto label07;
            case 62: goto label08;
            case 64: goto label13;
            case 91: goto label05;
            case 93: goto label06;
            default: goto label17;
        };

     label02:
        specialinvoke r1.<javax.mail.internet.AddressParser: void scanComment(javax.mail.internet.AddressParser$TokenStream)>($r13);

        goto label20;

     label03:
        $i11 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Unexpected \')\'", $i11);

     label04:
        specialinvoke r1.<javax.mail.internet.AddressParser: void scanQuotedLiteral(javax.mail.internet.AddressParser$TokenStream)>($r13);

        goto label20;

     label05:
        specialinvoke r1.<javax.mail.internet.AddressParser: void scanDomainLiteral(javax.mail.internet.AddressParser$TokenStream)>($r13);

        goto label20;

     label06:
        $i3 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Unexpected \']\'", $i3);

     label07:
        $r14 = new javax.mail.internet.AddressParser$AddressToken;

        $i4 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke $r14.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,int,int)>(r1, 60, $i4);

        virtualinvoke $r13.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r14);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label20;

     label08:
        $r15 = new javax.mail.internet.AddressParser$AddressToken;

        $i6 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke $r15.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,int,int)>(r1, 62, $i6);

        virtualinvoke $r13.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r15);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label20;

     label09:
        $r16 = new javax.mail.internet.AddressParser$AddressToken;

        $i8 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke $r16.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,int,int)>(r1, 58, $i8);

        virtualinvoke $r13.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r16);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label20;

     label10:
        $r17 = new javax.mail.internet.AddressParser$AddressToken;

        $i10 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke $r17.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,int,int)>(r1, 44, $i10);

        virtualinvoke $r13.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r17);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label20;

     label11:
        $r18 = new javax.mail.internet.AddressParser$AddressToken;

        $i9 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke $r18.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,int,int)>(r1, 46, $i9);

        virtualinvoke $r13.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r18);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label20;

     label12:
        $r19 = new javax.mail.internet.AddressParser$AddressToken;

        $i7 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke $r19.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,int,int)>(r1, 59, $i7);

        virtualinvoke $r13.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r19);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label20;

     label13:
        $r20 = new javax.mail.internet.AddressParser$AddressToken;

        $i5 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke $r20.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,int,int)>(r1, 64, $i5);

        virtualinvoke $r13.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r20);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label20;

     label14:
        $r21 = new javax.mail.internet.AddressParser$AddressToken;

        $i12 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke $r21.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,int,int)>(r1, 32, $i12);

        virtualinvoke $r13.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r21);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

     label15:
        $z1 = specialinvoke r1.<javax.mail.internet.AddressParser: boolean moreCharacters()>();

        if $z1 == 0 goto label20;

        $c13 = specialinvoke r1.<javax.mail.internet.AddressParser: char currentChar()>();

        $i16 = (int) $c13;

        if $i16 == 32 goto label16;

        $i17 = (int) $c13;

        if $i17 == 9 goto label16;

        $i18 = (int) $c13;

        if $i18 == 13 goto label16;

        $i19 = (int) $c13;

        if $i19 != 10 goto label20;

     label16:
        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label15;

     label17:
        $i20 = (int) $c2;

        if $i20 < 32 goto label18;

        $i21 = (int) $c2;

        if $i21 < 127 goto label19;

     label18:
        $i14 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Illegal character in address", $i14);

     label19:
        specialinvoke r1.<javax.mail.internet.AddressParser: void scanAtom(javax.mail.internet.AddressParser$TokenStream)>($r13);

     label20:
        goto label01;

     label21:
        $r22 = new javax.mail.internet.AddressParser$AddressToken;

        $r4 = r1.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        specialinvoke $r22.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,int,int)>(r1, 0, $i1);

        virtualinvoke $r13.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r22);

        return $r13;
    }

    private void nextChar()
    {
        int $i0, $i1;
        javax.mail.internet.AddressParser r0;

        r0 := @this: javax.mail.internet.AddressParser;

        $i0 = r0.<javax.mail.internet.AddressParser: int position>;

        $i1 = $i0 + 1;

        r0.<javax.mail.internet.AddressParser: int position> = $i1;

        return;
    }

    private char currentChar()
    {
        javax.mail.internet.AddressParser r0;
        int $i0;
        char $c1;
        java.lang.String $r1;

        r0 := @this: javax.mail.internet.AddressParser;

        $r1 = r0.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        $i0 = r0.<javax.mail.internet.AddressParser: int position>;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        return $c1;
    }

    private boolean moreCharacters()
    {
        javax.mail.internet.AddressParser r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: javax.mail.internet.AddressParser;

        $i1 = r0.<javax.mail.internet.AddressParser: int position>;

        $i0 = r0.<javax.mail.internet.AddressParser: int end>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void scanQuotedLiteral(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        java.lang.StringBuffer $r5;
        int $i0, $i2, $i3, $i5, $i6, $i7, $i8;
        java.lang.String $r4;
        boolean $z0, $z1;
        javax.mail.internet.AddressParser$TokenStream r2;
        char $c1, $c4;
        javax.mail.internet.AddressParser r1;
        javax.mail.internet.AddressParser$AddressToken $r6;

        r1 := @this: javax.mail.internet.AddressParser;

        r2 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

     label1:
        $z0 = specialinvoke r1.<javax.mail.internet.AddressParser: boolean moreCharacters()>();

        if $z0 == 0 goto label7;

        $c1 = specialinvoke r1.<javax.mail.internet.AddressParser: char currentChar()>();

        $i6 = (int) $c1;

        if $i6 != 92 goto label3;

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        $z1 = specialinvoke r1.<javax.mail.internet.AddressParser: boolean moreCharacters()>();

        if $z1 != 0 goto label2;

        $i5 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Missing \'\"\'", $i5);

     label2:
        $c4 = specialinvoke r1.<javax.mail.internet.AddressParser: char currentChar()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        goto label6;

     label3:
        $i7 = (int) $c1;

        if $i7 != 34 goto label4;

        $r6 = new javax.mail.internet.AddressParser$AddressToken;

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $i3 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke $r6.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,java.lang.String,int,int)>(r1, $r4, 34, $i3);

        virtualinvoke r2.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r6);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        return;

     label4:
        $i8 = (int) $c1;

        if $i8 != 13 goto label5;

        $i2 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Illegal line end in literal", $i2);

        goto label6;

     label5:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label6:
        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label1;

     label7:
        $i0 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Missing \'\"\'", $i0);

        return;
    }

    private void scanDomainLiteral(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        java.lang.StringBuffer $r5;
        int i0, $i1, $i3, $i4, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r4;
        boolean $z0, $z1;
        javax.mail.internet.AddressParser$TokenStream r2;
        char $c2, $c5, $c6;
        javax.mail.internet.AddressParser r1;
        javax.mail.internet.AddressParser$AddressToken $r6;

        r1 := @this: javax.mail.internet.AddressParser;

        r2 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        i0 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

     label1:
        $z0 = specialinvoke r1.<javax.mail.internet.AddressParser: boolean moreCharacters()>();

        if $z0 == 0 goto label8;

        $c2 = specialinvoke r1.<javax.mail.internet.AddressParser: char currentChar()>();

        $i8 = (int) $c2;

        if $i8 != 92 goto label3;

        $c5 = specialinvoke r1.<javax.mail.internet.AddressParser: char currentChar()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        $z1 = specialinvoke r1.<javax.mail.internet.AddressParser: boolean moreCharacters()>();

        if $z1 != 0 goto label2;

        $i7 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Missing \'\"\'", $i7);

     label2:
        $c6 = specialinvoke r1.<javax.mail.internet.AddressParser: char currentChar()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        goto label7;

     label3:
        $i9 = (int) $c2;

        if $i9 != 93 goto label4;

        $r6 = new javax.mail.internet.AddressParser$AddressToken;

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,java.lang.String,int,int)>(r1, $r4, 91, i0);

        virtualinvoke r2.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r6);

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        return;

     label4:
        $i10 = (int) $c2;

        if $i10 != 91 goto label5;

        $i4 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Unexpected \'[\'", $i4);

        goto label7;

     label5:
        $i11 = (int) $c2;

        if $i11 != 13 goto label6;

        $i3 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Illegal line end in domain literal", $i3);

        goto label7;

     label6:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label7:
        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label1;

     label8:
        $i1 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Missing \']\'", $i1);

        return;
    }

    private void scanAtom(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser$TokenStream r1;
        char $c2;
        javax.mail.internet.AddressParser r0;
        int i0, $i1;
        java.lang.String $r3, $r4;
        javax.mail.internet.AddressParser$AddressToken $r2;
        boolean $z0, $z1;

        r0 := @this: javax.mail.internet.AddressParser;

        r1 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        i0 = r0.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r0.<javax.mail.internet.AddressParser: void nextChar()>();

     label1:
        $z0 = specialinvoke r0.<javax.mail.internet.AddressParser: boolean moreCharacters()>();

        if $z0 == 0 goto label2;

        $c2 = specialinvoke r0.<javax.mail.internet.AddressParser: char currentChar()>();

        $z1 = staticinvoke <javax.mail.internet.AddressParser: boolean isAtom(char)>($c2);

        if $z1 == 0 goto label2;

        specialinvoke r0.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label1;

     label2:
        $r2 = new javax.mail.internet.AddressParser$AddressToken;

        $r3 = r0.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        $i1 = r0.<javax.mail.internet.AddressParser: int position>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        specialinvoke $r2.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,java.lang.String,int,int)>(r0, $r4, 65, i0);

        virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r2);

        return;
    }

    private void scanComment(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        java.lang.StringBuffer $r5;
        int i0, $i1, $i3, $i5, i6, $i7, $i8, $i9, $i11, $i12;
        java.lang.String $r4;
        boolean $z0, $z1;
        javax.mail.internet.AddressParser$TokenStream r2;
        char $c2, $c4;
        javax.mail.internet.AddressParser r1;
        javax.mail.internet.AddressParser$AddressToken $r6;

        r1 := @this: javax.mail.internet.AddressParser;

        r2 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        i0 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        i6 = 1;

     label1:
        $z0 = specialinvoke r1.<javax.mail.internet.AddressParser: boolean moreCharacters()>();

        if $z0 == 0 goto label9;

        $c2 = specialinvoke r1.<javax.mail.internet.AddressParser: char currentChar()>();

        $i7 = (int) $c2;

        if $i7 != 92 goto label3;

        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        $z1 = specialinvoke r1.<javax.mail.internet.AddressParser: boolean moreCharacters()>();

        if $z1 != 0 goto label2;

        $i5 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Missing \')\'", $i5);

     label2:
        $c4 = specialinvoke r1.<javax.mail.internet.AddressParser: char currentChar()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        goto label8;

     label3:
        $i8 = (int) $c2;

        if $i8 != 40 goto label4;

        i6 = i6 + 1;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label8;

     label4:
        $i9 = (int) $c2;

        if $i9 != 41 goto label6;

        $i11 = (int) -1;

        i6 = i6 + $i11;

        if i6 <= 0 goto label5;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label8;

     label5:
        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        $r6 = new javax.mail.internet.AddressParser$AddressToken;

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<javax.mail.internet.AddressParser$AddressToken: void <init>(javax.mail.internet.AddressParser,java.lang.String,int,int)>(r1, $r4, 40, i0);

        virtualinvoke r2.<javax.mail.internet.AddressParser$TokenStream: void addToken(javax.mail.internet.AddressParser$AddressToken)>($r6);

        return;

     label6:
        $i12 = (int) $c2;

        if $i12 != 13 goto label7;

        $i3 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Illegal line end in comment", $i3);

        goto label8;

     label7:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label8:
        specialinvoke r1.<javax.mail.internet.AddressParser: void nextChar()>();

        goto label1;

     label9:
        $i1 = r1.<javax.mail.internet.AddressParser: int position>;

        specialinvoke r1.<javax.mail.internet.AddressParser: void syntaxError(java.lang.String,int)>("Missing \')\'", $i1);

        return;
    }

    private void validateGroup(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser$TokenStream r0;
        javax.mail.internet.AddressParser r1;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        javax.mail.internet.AddressParser$AddressToken $r2, r3, $r4;

        r1 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        i5 = 0;

        r3 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

     label1:
        $i0 = r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 == 58 goto label3;

        $i3 = r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i3 == 65 goto label2;

        $i4 = r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i4 == 34 goto label2;

        specialinvoke r1.<javax.mail.internet.AddressParser: void invalidToken(javax.mail.internet.AddressParser$AddressToken)>(r3);

     label2:
        i5 = i5 + 1;

        r3 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        goto label1;

     label3:
        if i5 != 0 goto label4;

        specialinvoke r1.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Missing group identifier phrase", r3);

     label4:
        specialinvoke r1.<javax.mail.internet.AddressParser: void validateGroupMailbox(javax.mail.internet.AddressParser$TokenStream)>(r0);

        $r4 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i6 = $r4.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i6 != 59 goto label6;

        $r2 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i2 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 == 0 goto label5;

        specialinvoke r1.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Illegal group address", $r2);

     label5:
        return;

     label6:
        $i1 = $r4.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 == 44 goto label4;

        specialinvoke r1.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Illegal group address", $r4);

        goto label4;
    }

    private void validateGroupMailbox(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser r2;
        javax.mail.internet.AddressParser$TokenStream r0;
        int $i0, $i1, $i2;
        javax.mail.internet.AddressParser$AddressToken $r1, r3;

        r2 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        $r1 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i0 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 == 44 goto label01;

        $i1 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 != 59 goto label02;

     label01:
        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r1);

        return;

     label02:
        r3 = $r1;

     label03:
        if $r1 == null goto label10;

        $i2 = r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 34: goto label04;
            case 44: goto label07;
            case 46: goto label06;
            case 59: goto label07;
            case 60: goto label05;
            case 64: goto label06;
            case 65: goto label04;
            default: goto label09;
        };

     label04:
        goto label09;

     label05:
        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r1);

        specialinvoke r2.<javax.mail.internet.AddressParser: void validatePhrase(javax.mail.internet.AddressParser$TokenStream,boolean)>(r0, 0);

        specialinvoke r2.<javax.mail.internet.AddressParser: void validateRouteAddr(javax.mail.internet.AddressParser$TokenStream,boolean)>(r0, 1);

        return;

     label06:
        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r1);

        specialinvoke r2.<javax.mail.internet.AddressParser: void validateAddressSpec(javax.mail.internet.AddressParser$TokenStream)>(r0);

        return;

     label07:
        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r1);

        specialinvoke r2.<javax.mail.internet.AddressParser: void validateAddressSpec(javax.mail.internet.AddressParser$TokenStream)>(r0);

        return;

     label08:
        specialinvoke r2.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Missing \';\'", r3);

     label09:
        r3 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        goto label03;

     label10:
        return;
    }

    private void invalidToken(javax.mail.internet.AddressParser$AddressToken) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser r0;
        int $i0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r6;
        javax.mail.internet.AddressParser$AddressToken r3;

        r0 := @this: javax.mail.internet.AddressParser;

        r3 := @parameter0: javax.mail.internet.AddressParser$AddressToken;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected \'");

        $i0 = r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>($r6, r3);

        return;
    }

    private void syntaxError(java.lang.String, int) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser r2;
        javax.mail.internet.AddressException $r0;
        int i0;
        java.lang.String r1, $r3;

        r2 := @this: javax.mail.internet.AddressParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new javax.mail.internet.AddressException;

        $r3 = r2.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        specialinvoke $r0.<javax.mail.internet.AddressException: void <init>(java.lang.String,java.lang.String,int)>(r1, $r3, i0);

        throw $r0;
    }

    private void illegalAddress(java.lang.String, javax.mail.internet.AddressParser$AddressToken) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser r2;
        javax.mail.internet.AddressException $r0;
        int $i0;
        java.lang.String r1, $r4;
        javax.mail.internet.AddressParser$AddressToken r3;

        r2 := @this: javax.mail.internet.AddressParser;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.mail.internet.AddressParser$AddressToken;

        $r0 = new javax.mail.internet.AddressException;

        $r4 = r2.<javax.mail.internet.AddressParser: java.lang.String addresses>;

        $i0 = r3.<javax.mail.internet.AddressParser$AddressToken: int position>;

        specialinvoke $r0.<javax.mail.internet.AddressException: void <init>(java.lang.String,java.lang.String,int)>(r1, $r4, $i0);

        throw $r0;
    }

    private void validatePhrase(javax.mail.internet.AddressParser$TokenStream, boolean) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser$TokenStream r0;
        javax.mail.internet.AddressParser r2;
        int $i0, $i1, $i2, $i3;
        javax.mail.internet.AddressParser$AddressToken $r1, r3;
        boolean z0;

        r2 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i0 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 == 65 goto label1;

        $i2 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 == 34 goto label1;

        if z0 == 0 goto label1;

        specialinvoke r2.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Missing group phrase", $r1);

     label1:
        r3 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

     label2:
        $i3 = r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i3 == 65 goto label3;

        $i1 = r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 != 34 goto label4;

     label3:
        r3 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        goto label2;

     label4:
        return;
    }

    private void validateRouteAddr(javax.mail.internet.AddressParser$TokenStream, boolean) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser$TokenStream r0;
        javax.mail.internet.AddressParser r2;
        int $i0, $i1, $i2;
        javax.mail.internet.AddressParser$AddressToken $r1, $r3;
        boolean z0;

        r2 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i0 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 != 64 goto label1;

        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r1);

        specialinvoke r2.<javax.mail.internet.AddressParser: void validateRoute(javax.mail.internet.AddressParser$TokenStream)>(r0);

        goto label2;

     label1:
        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r1);

     label2:
        specialinvoke r2.<javax.mail.internet.AddressParser: void validateAddressSpec(javax.mail.internet.AddressParser$TokenStream)>(r0);

        $r3 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        if z0 == 0 goto label3;

        $i2 = $r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 == 62 goto label4;

        specialinvoke r2.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Missing \'>\'", $r3);

        goto label4;

     label3:
        $i1 = $r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 == 0 goto label4;

        specialinvoke r2.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Illegal Address", $r3);

     label4:
        return;
    }

    private void validateSimpleAddress(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser r0;
        javax.mail.internet.AddressParser$TokenStream r1;
        int $i0;
        javax.mail.internet.AddressParser$AddressToken $r2;

        r0 := @this: javax.mail.internet.AddressParser;

        r1 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        specialinvoke r0.<javax.mail.internet.AddressParser: void validateAddressSpec(javax.mail.internet.AddressParser$TokenStream)>(r1);

        $r2 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i0 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 == 0 goto label1;

        specialinvoke r0.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Illegal Address", $r2);

     label1:
        return;
    }

    private void validateAddressSpec(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser r0;
        javax.mail.internet.AddressParser$TokenStream r1;
        int $i0;
        javax.mail.internet.AddressParser$AddressToken $r2;

        r0 := @this: javax.mail.internet.AddressParser;

        r1 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        specialinvoke r0.<javax.mail.internet.AddressParser: void validateLocalPart(javax.mail.internet.AddressParser$TokenStream)>(r1);

        $r2 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i0 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 != 64 goto label1;

        specialinvoke r0.<javax.mail.internet.AddressParser: void validateDomain(javax.mail.internet.AddressParser$TokenStream)>(r1);

        goto label2;

     label1:
        virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r2);

     label2:
        return;
    }

    private void validateRoute(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser r1;
        javax.mail.internet.AddressParser$TokenStream r0;
        int $i0, $i1, $i2;
        javax.mail.internet.AddressParser$AddressToken $r2;

        r1 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

     label1:
        $r2 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i2 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 != 64 goto label2;

        specialinvoke r1.<javax.mail.internet.AddressParser: void validateDomain(javax.mail.internet.AddressParser$TokenStream)>(r0);

        goto label5;

     label2:
        $i0 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 != 44 goto label3;

        goto label1;

     label3:
        $i1 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 != 58 goto label4;

        return;

     label4:
        specialinvoke r1.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Missing \':\'", $r2);

     label5:
        goto label1;
    }

    private void validateLocalPart(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser r2;
        javax.mail.internet.AddressParser$TokenStream r0;
        int $i0, $i1, $i2;
        javax.mail.internet.AddressParser$AddressToken $r1, $r3;

        r2 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

     label1:
        $r1 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i0 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 == 65 goto label2;

        $i1 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 == 34 goto label2;

        specialinvoke r2.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Invalid local part", $r1);

     label2:
        $r3 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i2 = $r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 == 46 goto label3;

        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r3);

        return;

     label3:
        goto label1;
    }

    private void validateDomain(javax.mail.internet.AddressParser$TokenStream) throws javax.mail.internet.AddressException
    {
        javax.mail.internet.AddressParser r2;
        javax.mail.internet.AddressParser$TokenStream r0;
        int $i0, $i1, $i2;
        javax.mail.internet.AddressParser$AddressToken $r1, $r3;

        r2 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

     label1:
        $r1 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i0 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 == 65 goto label2;

        $i1 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 == 91 goto label2;

        specialinvoke r2.<javax.mail.internet.AddressParser: void illegalAddress(java.lang.String,javax.mail.internet.AddressParser$AddressToken)>("Invalid domain", $r1);

     label2:
        $r3 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextRealToken()>();

        $i2 = $r3.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 == 46 goto label3;

        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r3);

        return;

     label3:
        goto label1;
    }

    private java.lang.String personalToString(javax.mail.internet.AddressParser$TokenStream)
    {
        javax.mail.internet.AddressParser$TokenStream r0;
        javax.mail.internet.AddressParser r5;
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r7;
        javax.mail.internet.AddressParser$AddressToken $r1, $r2, $r4, r8;

        r5 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        $r1 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        $i0 = $r1.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        $i1 = $r2.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 != 0 goto label2;

        $r7 = $r1.<javax.mail.internet.AddressParser$AddressToken: java.lang.String value>;

        return $r7;

     label2:
        virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: void pushToken(javax.mail.internet.AddressParser$AddressToken)>($r1);

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        specialinvoke r5.<javax.mail.internet.AddressParser: void addTokenValue(javax.mail.internet.AddressParser$AddressToken,java.lang.StringBuffer)>($r4, $r3);

        r8 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

     label3:
        $i2 = r8.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 == 0 goto label4;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        specialinvoke r5.<javax.mail.internet.AddressParser: void addTokenValue(javax.mail.internet.AddressParser$AddressToken,java.lang.StringBuffer)>(r8, $r3);

        r8 = virtualinvoke r0.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        goto label3;

     label4:
        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    private java.lang.String addressToString(javax.mail.internet.AddressParser$TokenStream)
    {
        javax.mail.internet.AddressParser$TokenStream r1;
        char $c3;
        javax.mail.internet.AddressParser r3;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        javax.mail.internet.AddressParser$AddressToken r4;
        boolean z0;

        r3 := @this: javax.mail.internet.AddressParser;

        r1 := @parameter0: javax.mail.internet.AddressParser$TokenStream;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        z0 = 0;

        r4 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

     label1:
        $i0 = r4.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 == 0 goto label8;

        $i1 = r4.<javax.mail.internet.AddressParser$AddressToken: int type>;

        lookupswitch($i1)
        {
            case 34: goto label2;
            case 40: goto label6;
            case 44: goto label4;
            case 46: goto label4;
            case 58: goto label4;
            case 59: goto label4;
            case 60: goto label4;
            case 62: goto label4;
            case 64: goto label4;
            case 65: goto label2;
            case 91: goto label5;
            default: goto label7;
        };

     label2:
        if z0 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label3:
        specialinvoke r3.<javax.mail.internet.AddressParser: void addTokenValue(javax.mail.internet.AddressParser$AddressToken,java.lang.StringBuffer)>(r4, $r0);

        z0 = 1;

        goto label7;

     label4:
        $i2 = r4.<javax.mail.internet.AddressParser$AddressToken: int type>;

        $c3 = (char) $i2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        z0 = 0;

        goto label7;

     label5:
        specialinvoke r3.<javax.mail.internet.AddressParser: void addTokenValue(javax.mail.internet.AddressParser$AddressToken,java.lang.StringBuffer)>(r4, $r0);

        z0 = 0;

        goto label7;

     label6:
        specialinvoke r3.<javax.mail.internet.AddressParser: void addTokenValue(javax.mail.internet.AddressParser$AddressToken,java.lang.StringBuffer)>(r4, $r0);

        z0 = 0;

     label7:
        r4 = virtualinvoke r1.<javax.mail.internet.AddressParser$TokenStream: javax.mail.internet.AddressParser$AddressToken nextToken()>();

        goto label1;

     label8:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private void addTokenValue(javax.mail.internet.AddressParser$AddressToken, java.lang.StringBuffer)
    {
        javax.mail.internet.AddressParser r7;
        java.lang.StringBuffer r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        javax.mail.internet.AddressParser$AddressToken r0;

        r7 := @this: javax.mail.internet.AddressParser;

        r0 := @parameter0: javax.mail.internet.AddressParser$AddressToken;

        r1 := @parameter1: java.lang.StringBuffer;

        $i0 = r0.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i0 != 65 goto label1;

        $r6 = r0.<javax.mail.internet.AddressParser$AddressToken: java.lang.String value>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label4;

     label1:
        $i1 = r0.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i1 != 34 goto label2;

        $r4 = r0.<javax.mail.internet.AddressParser$AddressToken: java.lang.String value>;

        $r5 = staticinvoke <javax.mail.internet.AddressParser: java.lang.String formatQuotedString(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        goto label4;

     label2:
        $i2 = r0.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i2 != 91 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $r3 = r0.<javax.mail.internet.AddressParser$AddressToken: java.lang.String value>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        goto label4;

     label3:
        $i3 = r0.<javax.mail.internet.AddressParser$AddressToken: int type>;

        if $i3 != 40 goto label4;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r2 = r0.<javax.mail.internet.AddressParser$AddressToken: java.lang.String value>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

     label4:
        return;
    }

    private static boolean isSpace(char)
    {
        byte[] $r0;
        byte $b1, $b2;
        int $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 <= 127 goto label1;

        return 0;

     label1:
        $r0 = <javax.mail.internet.AddressParser: byte[] CHARMAP>;

        $i4 = (int) c0;

        $b1 = $r0[$i4];

        $b2 = $b1 & 4;

        if $b2 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean isAtom(char)
    {
        byte[] $r0;
        char c0;
        byte $b1, $b2;
        int $i3, $i4, $i5;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 <= 127 goto label1;

        return 0;

     label1:
        $i4 = (int) c0;

        if $i4 != 32 goto label2;

        return 0;

     label2:
        $r0 = <javax.mail.internet.AddressParser: byte[] CHARMAP>;

        $i5 = (int) c0;

        $b1 = $r0[$i5];

        $b2 = $b1 & 3;

        if $b2 != 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean containsCharacters(java.lang.String, java.lang.String)
    {
        int $i0, $i2, i3, $i4;
        char $c1;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($i4);

        if $i2 < 0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean containsSpecials(java.lang.String)
    {
        int $i0, i2, $i3;
        char $c1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 == 32 goto label3;

        $z0 = staticinvoke <javax.mail.internet.AddressParser: boolean isAtom(char)>($c1);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        return 1;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return 0;
    }

    public static boolean isAtom(java.lang.String)
    {
        int $i0, i2;
        char $c1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <javax.mail.internet.AddressParser: boolean isAtom(char)>($c1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static java.lang.String quoteString(java.lang.String)
    {
        java.lang.StringBuffer $r5, $r6;
        int $i0, $i1, $i2, $i4, $i5, $i6, i7, $i8, $i10, $i12, $i13, $i14;
        java.lang.String r0, $r2, $r4;
        boolean $z0;
        char $c3;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(92);

        $i10 = (int) -1;

        if $i0 != $i10 goto label2;

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(34);

        $i12 = (int) -1;

        if $i4 != $i12 goto label2;

        $z0 = staticinvoke <javax.mail.internet.AddressParser: boolean containsSpecials(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r5 = new java.lang.StringBuffer;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        $i6 = $i5 + 2;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>($i6);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

     label2:
        $r6 = new java.lang.StringBuffer;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 + 10;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        i7 = 0;

     label3:
        $i8 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 >= $i8 goto label6;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i13 = (int) $c3;

        if $i13 == 92 goto label4;

        $i14 = (int) $c3;

        if $i14 != 34 goto label5;

     label4:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

     label5:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        i7 = i7 + 1;

        goto label3;

     label6:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String formatQuotedString(java.lang.String)
    {
        java.lang.StringBuffer $r5, $r6;
        int $i0, $i1, $i2, $i4, $i5, $i6, i7, $i8, $i10, $i12, $i13, $i14;
        java.lang.String r0, $r2, $r4;
        char $c3;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(92);

        $i10 = (int) -1;

        if $i0 != $i10 goto label1;

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(34);

        $i12 = (int) -1;

        if $i4 != $i12 goto label1;

        $r5 = new java.lang.StringBuffer;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        $i6 = $i5 + 2;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>($i6);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

     label1:
        $r6 = new java.lang.StringBuffer;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 + 10;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        i7 = 0;

     label2:
        $i8 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 >= $i8 goto label5;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i13 = (int) $c3;

        if $i13 == 92 goto label3;

        $i14 = (int) $c3;

        if $i14 != 34 goto label4;

     label3:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

     label4:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        i7 = i7 + 1;

        goto label2;

     label5:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    static void <clinit>()
    {
        byte[] $r0;

        <javax.mail.internet.AddressParser: byte FLG_SPACE> = 4;

        <javax.mail.internet.AddressParser: byte FLG_CONTROL> = 2;

        <javax.mail.internet.AddressParser: byte FLG_SPECIAL> = 1;

        <javax.mail.internet.AddressParser: int WHITESPACE> = 32;

        <javax.mail.internet.AddressParser: int ATOM> = 65;

        <javax.mail.internet.AddressParser: int COMMENT> = 40;

        <javax.mail.internet.AddressParser: int DOMAIN_LITERAL> = 91;

        <javax.mail.internet.AddressParser: int QUOTED_LITERAL> = 34;

        <javax.mail.internet.AddressParser: int COLON> = 58;

        <javax.mail.internet.AddressParser: int SEMICOLON> = 59;

        <javax.mail.internet.AddressParser: int AT_SIGN> = 64;

        <javax.mail.internet.AddressParser: int COMMA> = 44;

        <javax.mail.internet.AddressParser: int RIGHT_ANGLE> = 62;

        <javax.mail.internet.AddressParser: int LEFT_ANGLE> = 60;

        <javax.mail.internet.AddressParser: int PERIOD> = 46;

        <javax.mail.internet.AddressParser: int END_OF_TOKENS> = 0;

        <javax.mail.internet.AddressParser: int SIMPLE_ADDR> = 3;

        <javax.mail.internet.AddressParser: int GROUP_ADDR> = 2;

        <javax.mail.internet.AddressParser: int ROUTE_ADDR> = 1;

        <javax.mail.internet.AddressParser: int UNKNOWN> = 0;

        <javax.mail.internet.AddressParser: int STRICT> = 2;

        <javax.mail.internet.AddressParser: int PARSE_HEADER> = 1;

        <javax.mail.internet.AddressParser: int NONSTRICT> = 0;

        $r0 = newarray (byte)[128];

        $r0[0] = 2;

        $r0[1] = 2;

        $r0[2] = 2;

        $r0[3] = 2;

        $r0[4] = 2;

        $r0[5] = 2;

        $r0[6] = 2;

        $r0[7] = 2;

        $r0[8] = 6;

        $r0[9] = 2;

        $r0[10] = 6;

        $r0[11] = 2;

        $r0[12] = 2;

        $r0[13] = 6;

        $r0[14] = 2;

        $r0[15] = 2;

        $r0[16] = 2;

        $r0[17] = 2;

        $r0[18] = 2;

        $r0[19] = 2;

        $r0[20] = 2;

        $r0[21] = 2;

        $r0[22] = 2;

        $r0[23] = 2;

        $r0[24] = 2;

        $r0[25] = 2;

        $r0[26] = 2;

        $r0[27] = 2;

        $r0[28] = 2;

        $r0[29] = 2;

        $r0[30] = 2;

        $r0[31] = 2;

        $r0[32] = 4;

        $r0[33] = 0;

        $r0[34] = 1;

        $r0[35] = 0;

        $r0[36] = 0;

        $r0[37] = 0;

        $r0[38] = 0;

        $r0[39] = 0;

        $r0[40] = 1;

        $r0[41] = 1;

        $r0[42] = 0;

        $r0[43] = 0;

        $r0[44] = 1;

        $r0[45] = 0;

        $r0[46] = 1;

        $r0[47] = 0;

        $r0[48] = 0;

        $r0[49] = 0;

        $r0[50] = 0;

        $r0[51] = 0;

        $r0[52] = 0;

        $r0[53] = 0;

        $r0[54] = 0;

        $r0[55] = 0;

        $r0[56] = 0;

        $r0[57] = 0;

        $r0[58] = 1;

        $r0[59] = 1;

        $r0[60] = 1;

        $r0[61] = 0;

        $r0[62] = 1;

        $r0[63] = 0;

        $r0[64] = 1;

        $r0[65] = 0;

        $r0[66] = 0;

        $r0[67] = 0;

        $r0[68] = 0;

        $r0[69] = 0;

        $r0[70] = 0;

        $r0[71] = 0;

        $r0[72] = 0;

        $r0[73] = 0;

        $r0[74] = 0;

        $r0[75] = 0;

        $r0[76] = 0;

        $r0[77] = 0;

        $r0[78] = 0;

        $r0[79] = 0;

        $r0[80] = 0;

        $r0[81] = 0;

        $r0[82] = 0;

        $r0[83] = 0;

        $r0[84] = 0;

        $r0[85] = 0;

        $r0[86] = 0;

        $r0[87] = 0;

        $r0[88] = 0;

        $r0[89] = 0;

        $r0[90] = 0;

        $r0[91] = 1;

        $r0[92] = 1;

        $r0[93] = 1;

        $r0[94] = 0;

        $r0[95] = 0;

        $r0[96] = 0;

        $r0[97] = 0;

        $r0[98] = 0;

        $r0[99] = 0;

        $r0[100] = 0;

        $r0[101] = 0;

        $r0[102] = 0;

        $r0[103] = 0;

        $r0[104] = 0;

        $r0[105] = 0;

        $r0[106] = 0;

        $r0[107] = 0;

        $r0[108] = 0;

        $r0[109] = 0;

        $r0[110] = 0;

        $r0[111] = 0;

        $r0[112] = 0;

        $r0[113] = 0;

        $r0[114] = 0;

        $r0[115] = 0;

        $r0[116] = 0;

        $r0[117] = 0;

        $r0[118] = 0;

        $r0[119] = 0;

        $r0[120] = 0;

        $r0[121] = 0;

        $r0[122] = 0;

        $r0[123] = 0;

        $r0[124] = 0;

        $r0[125] = 0;

        $r0[126] = 0;

        $r0[127] = 2;

        <javax.mail.internet.AddressParser: byte[] CHARMAP> = $r0;

        return;
    }
}
