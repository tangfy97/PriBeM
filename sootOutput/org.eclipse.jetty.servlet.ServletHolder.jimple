public class org.eclipse.jetty.servlet.ServletHolder extends org.eclipse.jetty.servlet.Holder implements org.eclipse.jetty.server.UserIdentity$Scope, java.lang.Comparable
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private int _initOrder;
    private boolean _initOnStartup;
    private java.util.Map _roleMap;
    private java.lang.String _forcedPath;
    private java.lang.String _runAsRole;
    private org.eclipse.jetty.security.RunAsToken _runAsToken;
    private org.eclipse.jetty.security.IdentityService _identityService;
    private javax.servlet.ServletRegistration$Dynamic _registration;
    private transient javax.servlet.Servlet _servlet;
    private transient org.eclipse.jetty.servlet.ServletHolder$Config _config;
    private transient long _unavailable;
    private transient boolean _enabled;
    private transient javax.servlet.UnavailableException _unavailableEx;
    public static final java.util.Map NO_MAPPED_ROLES;

    public void <init>()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        org.eclipse.jetty.servlet.Holder$Source $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source EMBEDDED>;

        specialinvoke r0.<org.eclipse.jetty.servlet.Holder: void <init>(org.eclipse.jetty.servlet.Holder$Source)>($r1);

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _initOnStartup> = 0;

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _enabled> = 1;

        return;
    }

    public void <init>(org.eclipse.jetty.servlet.Holder$Source)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        org.eclipse.jetty.servlet.Holder$Source r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r1 := @parameter0: org.eclipse.jetty.servlet.Holder$Source;

        specialinvoke r0.<org.eclipse.jetty.servlet.Holder: void <init>(org.eclipse.jetty.servlet.Holder$Source)>(r1);

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _initOnStartup> = 0;

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _enabled> = 1;

        return;
    }

    public void <init>(javax.servlet.Servlet)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        org.eclipse.jetty.servlet.Holder$Source $r1;
        javax.servlet.Servlet r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r2 := @parameter0: javax.servlet.Servlet;

        $r1 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source EMBEDDED>;

        specialinvoke r0.<org.eclipse.jetty.servlet.Holder: void <init>(org.eclipse.jetty.servlet.Holder$Source)>($r1);

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _initOnStartup> = 0;

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _enabled> = 1;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void setServlet(javax.servlet.Servlet)>(r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.Class)
    {
        org.eclipse.jetty.servlet.Holder$Source $r1;
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.Class r3;
        java.lang.String r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        $r1 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source EMBEDDED>;

        specialinvoke r0.<org.eclipse.jetty.servlet.Holder: void <init>(org.eclipse.jetty.servlet.Holder$Source)>($r1);

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _initOnStartup> = 0;

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _enabled> = 1;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void setName(java.lang.String)>(r2);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void setHeldClass(java.lang.Class)>(r3);

        return;
    }

    public void <init>(java.lang.String, javax.servlet.Servlet)
    {
        org.eclipse.jetty.servlet.Holder$Source $r1;
        javax.servlet.Servlet r3;
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.String r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.servlet.Servlet;

        $r1 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source EMBEDDED>;

        specialinvoke r0.<org.eclipse.jetty.servlet.Holder: void <init>(org.eclipse.jetty.servlet.Holder$Source)>($r1);

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _initOnStartup> = 0;

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _enabled> = 1;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void setName(java.lang.String)>(r2);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void setServlet(javax.servlet.Servlet)>(r3);

        return;
    }

    public void <init>(java.lang.Class)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.Class r2;
        org.eclipse.jetty.servlet.Holder$Source $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r2 := @parameter0: java.lang.Class;

        $r1 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source EMBEDDED>;

        specialinvoke r0.<org.eclipse.jetty.servlet.Holder: void <init>(org.eclipse.jetty.servlet.Holder$Source)>($r1);

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _initOnStartup> = 0;

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _enabled> = 1;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void setHeldClass(java.lang.Class)>(r2);

        return;
    }

    public javax.servlet.UnavailableException getUnavailableException()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        javax.servlet.UnavailableException $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        return $r1;
    }

    public synchronized void setServlet(javax.servlet.Servlet)
    {
        javax.servlet.Servlet r0;
        org.eclipse.jetty.servlet.ServletHolder r2;
        java.lang.IllegalArgumentException $r1;
        int $i0;
        java.lang.Class $r3, $r6;
        java.lang.StringBuilder $r5, $r8, $r9, $r10;
        java.lang.String $r4, $r7, $r11;
        boolean $z0;

        r2 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r0 := @parameter0: javax.servlet.Servlet;

        if r0 == null goto label1;

        $z0 = r0 instanceof javax.servlet.SingleThreadModel;

        if $z0 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label2:
        r2.<org.eclipse.jetty.servlet.ServletHolder: boolean _extInstance> = 1;

        r2.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = r0;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke r2.<org.eclipse.jetty.servlet.ServletHolder: void setHeldClass(java.lang.Class)>($r3);

        $r4 = virtualinvoke r2.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getName()>();

        if $r4 != null goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i0 = specialinvoke r2.<java.lang.Object: int hashCode()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.eclipse.jetty.servlet.ServletHolder: void setName(java.lang.String)>($r11);

     label3:
        return;
    }

    public int getInitOrder()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        int $i0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $i0 = r0.<org.eclipse.jetty.servlet.ServletHolder: int _initOrder>;

        return $i0;
    }

    public void setInitOrder(int)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        int i0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _initOnStartup> = 1;

        r0.<org.eclipse.jetty.servlet.ServletHolder: int _initOrder> = i0;

        return;
    }

    public boolean isSetInitOrder()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $z0 = r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _initOnStartup>;

        return $z0;
    }

    public int compareTo(java.lang.Object)
    {
        byte $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i10;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0;
        org.eclipse.jetty.servlet.ServletHolder r1, r2;
        java.lang.Object r0;

        r2 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.eclipse.jetty.servlet.ServletHolder;

        if $z0 == 0 goto label10;

        r1 = (org.eclipse.jetty.servlet.ServletHolder) r0;

        if r1 != r2 goto label01;

        return 0;

     label01:
        $i1 = r1.<org.eclipse.jetty.servlet.ServletHolder: int _initOrder>;

        $i0 = r2.<org.eclipse.jetty.servlet.ServletHolder: int _initOrder>;

        if $i1 >= $i0 goto label02;

        return 1;

     label02:
        $i3 = r1.<org.eclipse.jetty.servlet.ServletHolder: int _initOrder>;

        $i2 = r2.<org.eclipse.jetty.servlet.ServletHolder: int _initOrder>;

        if $i3 <= $i2 goto label03;

        $i10 = (int) -1;

        return $i10;

     label03:
        $r3 = r2.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _className>;

        if $r3 == null goto label04;

        $r6 = r1.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _className>;

        if $r6 == null goto label04;

        $r8 = r2.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _className>;

        $r7 = r1.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _className>;

        $i6 = virtualinvoke $r8.<java.lang.String: int compareTo(java.lang.String)>($r7);

        goto label05;

     label04:
        $i6 = 0;

     label05:
        i7 = $i6;

        if $i6 != 0 goto label06;

        $r5 = r2.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _name>;

        $r4 = r1.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _name>;

        i7 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

     label06:
        if i7 != 0 goto label09;

        $i4 = virtualinvoke r2.<org.eclipse.jetty.servlet.ServletHolder: int hashCode()>();

        $i5 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        if $i4 <= $i5 goto label07;

        $b8 = 1;

        goto label08;

     label07:
        $b8 = -1;

     label08:
        i7 = $b8;

     label09:
        return i7;

     label10:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        int $i0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: int compareTo(java.lang.Object)>(r1);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        int $i0;
        java.lang.String $r1, $r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _name>;

        if $r1 != null goto label1;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _name>;

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        return $i0;
    }

    public synchronized void setUserRoleLink(java.lang.String, java.lang.String)
    {
        java.util.Map $r1, $r4;
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.util.HashMap $r5;
        java.lang.String r2, r3;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.servlet.ServletHolder: java.util.Map _roleMap> = $r5;

     label1:
        $r4 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public java.lang.String getUserRoleLink(java.lang.String)
    {
        java.util.Map $r1, $r3;
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.Object $r4;
        java.lang.String r2, r5, $r6;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        if $r1 != null goto label1;

        return r2;

     label1:
        $r3 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.lang.String) $r4;

        if r5 != null goto label2;

        $r6 = r2;

        goto label3;

     label2:
        $r6 = r5;

     label3:
        return $r6;
    }

    public java.util.Map getRoleMap()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        if $r1 != null goto label1;

        $r2 = <org.eclipse.jetty.servlet.ServletHolder: java.util.Map NO_MAPPED_ROLES>;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

     label2:
        return $r2;
    }

    public java.lang.String getForcedPath()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _forcedPath>;

        return $r1;
    }

    public void setForcedPath(java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _forcedPath> = r1;

        return;
    }

    public boolean isEnabled()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $z0 = r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _enabled>;

        return $z0;
    }

    public void setEnabled(boolean)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _enabled> = z0;

        return;
    }

    public void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.security.IdentityService $r2, $r3, $r9;
        org.eclipse.jetty.servlet.ServletHolder$Config $r20;
        org.eclipse.jetty.security.RunAsToken $r10;
        java.lang.String $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.eclipse.jetty.servlet.ServletHandler $r1, $r12, $r15, $r18;
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.Exception $r11;
        org.eclipse.jetty.servlet.ServletHolder$SingleThreadedWrapper $r6;
        javax.servlet.UnavailableException $r14, $r17;
        java.lang.Class $r4, $r5, $r21;
        org.eclipse.jetty.util.log.Logger $r13, $r16, $r19;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable> = 0L;

        $z0 = r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _enabled>;

        if $z0 != 0 goto label01;

        return;

     label01:
        specialinvoke r0.<org.eclipse.jetty.servlet.Holder: void doStart()>();

     label02:
        goto label05;

     label03:
        $r17 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void makeUnavailable(javax.servlet.UnavailableException)>($r17);

        $r18 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $z5 = virtualinvoke $r18.<org.eclipse.jetty.servlet.ServletHandler: boolean isStartWithUnavailable()>();

        if $z5 == 0 goto label04;

        $r19 = <org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r19.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r17);

        return;

     label04:
        throw $r17;

     label05:
        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void checkServletType()>();

     label06:
        goto label09;

     label07:
        $r14 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void makeUnavailable(javax.servlet.UnavailableException)>($r14);

        $r15 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $z4 = virtualinvoke $r15.<org.eclipse.jetty.servlet.ServletHandler: boolean isStartWithUnavailable()>();

        if $z4 == 0 goto label08;

        $r16 = <org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r16.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r14);

        return;

     label08:
        throw $r14;

     label09:
        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.security.IdentityService getIdentityService()>();

        r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService> = $r2;

        $r3 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r3 == null goto label10;

        $r7 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _runAsRole>;

        if $r7 == null goto label10;

        $r9 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        $r8 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _runAsRole>;

        $r10 = interfaceinvoke $r9.<org.eclipse.jetty.security.IdentityService: org.eclipse.jetty.security.RunAsToken newRunAsToken(java.lang.String)>($r8);

        r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.RunAsToken _runAsToken> = $r10;

     label10:
        $r20 = new org.eclipse.jetty.servlet.ServletHolder$Config;

        specialinvoke $r20.<org.eclipse.jetty.servlet.ServletHolder$Config: void <init>(org.eclipse.jetty.servlet.ServletHolder)>(r0);

        r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHolder$Config _config> = $r20;

        $r21 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.Class _class>;

        if $r21 == null goto label11;

        $r5 = class "Ljavax/servlet/SingleThreadModel;";

        $r4 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.Class _class>;

        $z2 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z2 == 0 goto label11;

        $r6 = new org.eclipse.jetty.servlet.ServletHolder$SingleThreadedWrapper;

        specialinvoke $r6.<org.eclipse.jetty.servlet.ServletHolder$SingleThreadedWrapper: void <init>(org.eclipse.jetty.servlet.ServletHolder,org.eclipse.jetty.servlet.ServletHolder$1)>(r0, null);

        r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = $r6;

     label11:
        $z6 = r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _extInstance>;

        if $z6 != 0 goto label12;

        $z1 = r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _initOnStartup>;

        if $z1 == 0 goto label16;

     label12:
        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void initServlet()>();

     label13:
        goto label16;

     label14:
        $r11 := @caughtexception;

        $r12 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $z3 = virtualinvoke $r12.<org.eclipse.jetty.servlet.ServletHandler: boolean isStartWithUnavailable()>();

        if $z3 == 0 goto label15;

        $r13 = <org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r13.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r11);

        goto label16;

     label15:
        throw $r11;

     label16:
        return;

        catch javax.servlet.UnavailableException from label01 to label02 with label03;
        catch javax.servlet.UnavailableException from label05 to label06 with label07;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public void doStop() throws java.lang.Exception
    {
        java.lang.Throwable $r10;
        org.eclipse.jetty.security.IdentityService $r2, $r4, $r5, $r6, $r7, $r11, $r12, $r15, $r16;
        org.eclipse.jetty.server.UserIdentity $r8;
        org.eclipse.jetty.security.RunAsToken $r9;
        boolean $z0;
        javax.servlet.Servlet $r1, $r3;
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.Exception $r13;
        java.lang.Object r17;
        org.eclipse.jetty.util.log.Logger $r14;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r17 = null;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        if $r1 == null goto label09;

     label01:
        $r2 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r2 == null goto label02;

        $r7 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        $r6 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        $r8 = interfaceinvoke $r6.<org.eclipse.jetty.security.IdentityService: org.eclipse.jetty.server.UserIdentity getSystemUserIdentity()>();

        $r9 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.RunAsToken _runAsToken>;

        r17 = interfaceinvoke $r7.<org.eclipse.jetty.security.IdentityService: java.lang.Object setRunAs(org.eclipse.jetty.server.UserIdentity,org.eclipse.jetty.security.RunAsToken)>($r8, $r9);

     label02:
        $r3 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void destroyInstance(java.lang.Object)>($r3);

     label03:
        $r4 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r4 == null goto label09;

        $r5 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        interfaceinvoke $r5.<org.eclipse.jetty.security.IdentityService: void unsetRunAs(java.lang.Object)>(r17);

        goto label09;

     label04:
        $r13 := @caughtexception;

        $r14 = <org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r14.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r13);

     label05:
        $r15 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r15 == null goto label09;

        $r16 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        interfaceinvoke $r16.<org.eclipse.jetty.security.IdentityService: void unsetRunAs(java.lang.Object)>(r17);

        goto label09;

     label06:
        $r10 := @caughtexception;

     label07:
        $r11 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r11 == null goto label08;

        $r12 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        interfaceinvoke $r12.<org.eclipse.jetty.security.IdentityService: void unsetRunAs(java.lang.Object)>(r17);

     label08:
        throw $r10;

     label09:
        $z0 = r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _extInstance>;

        if $z0 != 0 goto label10;

        r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = null;

     label10:
        r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHolder$Config _config> = null;

        return;

        catch java.lang.Exception from label01 to label03 with label04;
        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public void destroyInstance(java.lang.Object) throws java.lang.Exception
    {
        org.eclipse.jetty.servlet.ServletHandler $r3;
        javax.servlet.Servlet r1;
        org.eclipse.jetty.servlet.ServletHolder r2;
        java.lang.Object r0;

        r2 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return;

     label1:
        r1 = (javax.servlet.Servlet) r0;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        virtualinvoke $r3.<org.eclipse.jetty.servlet.ServletHandler: void destroyServlet(javax.servlet.Servlet)>(r1);

        interfaceinvoke r1.<javax.servlet.Servlet: void destroy()>();

        return;
    }

    public synchronized javax.servlet.Servlet getServlet() throws javax.servlet.ServletException
    {
        long $l0, $l2, $l4, $l6, $l7;
        byte $b1, $b3, $b5, $b8;
        int $i9, $i10, $i11;
        javax.servlet.Servlet $r1, $r3;
        org.eclipse.jetty.servlet.ServletHolder r0;
        javax.servlet.UnavailableException $r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $l0 = r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label3;

        $l2 = r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable>;

        $b3 = $l2 cmp 0L;

        $i9 = (int) $b3;

        if $i9 < 0 goto label1;

        $l4 = r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable>;

        $b5 = $l4 cmp 0L;

        $i10 = (int) $b5;

        if $i10 <= 0 goto label2;

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l7 = r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable>;

        $b8 = $l6 cmp $l7;

        $i11 = (int) $b8;

        if $i11 >= 0 goto label2;

     label1:
        $r2 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        throw $r2;

     label2:
        r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable> = 0L;

        r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx> = null;

     label3:
        $r3 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        if $r3 != null goto label4;

        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void initServlet()>();

     label4:
        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        return $r1;
    }

    public javax.servlet.Servlet getServletInstance()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        javax.servlet.Servlet $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        return $r1;
    }

    public void checkServletType() throws javax.servlet.UnavailableException
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        javax.servlet.UnavailableException $r2;
        java.lang.Class $r1, $r5, $r9, $r10;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.Class _class>;

        if $r1 == null goto label1;

        $r10 = class "Ljavax/servlet/Servlet;";

        $r9 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.Class _class>;

        $z0 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9);

        if $z0 != 0 goto label2;

     label1:
        $r2 = new javax.servlet.UnavailableException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Servlet ");

        $r5 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.Class _class>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a javax.servlet.Servlet");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label2:
        return;
    }

    public boolean isAvailable()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        long $l0, $l2;
        java.lang.Exception $r1;
        byte $b1, $b3;
        org.eclipse.jetty.util.log.Logger $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: boolean isStarted()>();

        if $z0 == 0 goto label1;

        $l2 = r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        return 1;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet getServlet()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = <org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r1);

     label4:
        $z1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: boolean isStarted()>();

        if $z1 == 0 goto label5;

        $l0 = r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void makeUnavailable(javax.servlet.UnavailableException)
    {
        long $l1, $l2, $l3, $l6, $l7, $l8;
        byte $b9;
        int $i0, $i4, $i5;
        boolean $z0;
        org.eclipse.jetty.servlet.ServletHandler $r3;
        org.eclipse.jetty.servlet.ServletHolder r0;
        javax.servlet.UnavailableException r1, $r2, $r5, $r6;
        javax.servlet.ServletContext $r4;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r1 := @parameter0: javax.servlet.UnavailableException;

        $r2 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        if $r2 != r1 goto label1;

        $l8 = r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable>;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.servlet.ServletHandler: javax.servlet.ServletContext getServletContext()>();

        interfaceinvoke $r4.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>("unavailable", r1);

        r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx> = r1;

        r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable> = -1L;

        $z0 = virtualinvoke r1.<javax.servlet.UnavailableException: boolean isPermanent()>();

        if $z0 == 0 goto label2;

        r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable> = -1L;

        goto label4;

     label2:
        $r5 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        $i0 = virtualinvoke $r5.<javax.servlet.UnavailableException: int getUnavailableSeconds()>();

        if $i0 <= 0 goto label3;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        $i4 = virtualinvoke $r6.<javax.servlet.UnavailableException: int getUnavailableSeconds()>();

        $i5 = 1000 * $i4;

        $l6 = (long) $i5;

        $l7 = $l3 + $l6;

        r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable> = $l7;

        goto label4;

     label3:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 + 5000L;

        r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable> = $l2;

     label4:
        return;
    }

    private void makeUnavailable(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        org.eclipse.jetty.servlet.ServletHandler $r2;
        org.eclipse.jetty.servlet.ServletHolder r1;
        javax.servlet.UnavailableException $r7;
        int $i1;
        javax.servlet.ServletContext $r3;
        java.lang.String $r5;
        org.eclipse.jetty.util.log.Logger $r6;
        org.eclipse.jetty.servlet.ServletHolder$1 $r8;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = r0 instanceof javax.servlet.UnavailableException;

        if $z0 == 0 goto label1;

        $r7 = (javax.servlet.UnavailableException) r0;

        specialinvoke r1.<org.eclipse.jetty.servlet.ServletHolder: void makeUnavailable(javax.servlet.UnavailableException)>($r7);

        goto label4;

     label1:
        $r2 = r1.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.servlet.ServletHandler: javax.servlet.ServletContext getServletContext()>();

        if $r3 != null goto label2;

        $r6 = <org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Throwable)>("unavailable", r0);

        goto label3;

     label2:
        interfaceinvoke $r3.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>("unavailable", r0);

     label3:
        $r8 = new org.eclipse.jetty.servlet.ServletHolder$1;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $i1 = (int) -1;

        specialinvoke $r8.<org.eclipse.jetty.servlet.ServletHolder$1: void <init>(org.eclipse.jetty.servlet.ServletHolder,java.lang.String,int,java.lang.Throwable)>(r1, $r5, $i1, r0);

        r1.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx> = $r8;

        r1.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable> = -1L;

     label4:
        return;
    }

    private void initServlet() throws javax.servlet.ServletException
    {
        java.lang.Throwable $r14, $r21, $r24;
        javax.servlet.ServletException $r18, $r20;
        org.eclipse.jetty.security.IdentityService $r3, $r6, $r7, $r8, $r9, $r15, $r16;
        org.eclipse.jetty.servlet.ServletHolder$Config $r2, $r4, $r12;
        org.eclipse.jetty.server.UserIdentity $r10;
        org.eclipse.jetty.security.RunAsToken $r11;
        java.lang.String $r19;
        boolean $z0;
        javax.servlet.Servlet $r1, $r5, $r13;
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.Exception $r17;
        javax.servlet.UnavailableException $r22;
        java.lang.Object r23;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r23 = null;

     label01:
        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        if $r1 != null goto label02;

        $r13 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet newInstance()>();

        r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = $r13;

     label02:
        $r2 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHolder$Config _config>;

        if $r2 != null goto label03;

        $r12 = new org.eclipse.jetty.servlet.ServletHolder$Config;

        specialinvoke $r12.<org.eclipse.jetty.servlet.ServletHolder$Config: void <init>(org.eclipse.jetty.servlet.ServletHolder)>(r0);

        r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHolder$Config _config> = $r12;

     label03:
        $r3 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r3 == null goto label04;

        $r9 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        $r8 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        $r10 = interfaceinvoke $r8.<org.eclipse.jetty.security.IdentityService: org.eclipse.jetty.server.UserIdentity getSystemUserIdentity()>();

        $r11 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.RunAsToken _runAsToken>;

        r23 = interfaceinvoke $r9.<org.eclipse.jetty.security.IdentityService: java.lang.Object setRunAs(org.eclipse.jetty.server.UserIdentity,org.eclipse.jetty.security.RunAsToken)>($r10, $r11);

     label04:
        $z0 = specialinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: boolean isJspServlet()>();

        if $z0 == 0 goto label05;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void initJspServlet()>();

     label05:
        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void initMultiPart()>();

        $r5 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        $r4 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHolder$Config _config>;

        interfaceinvoke $r5.<javax.servlet.Servlet: void init(javax.servlet.ServletConfig)>($r4);

     label06:
        $r6 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r6 == null goto label15;

        $r7 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        interfaceinvoke $r7.<org.eclipse.jetty.security.IdentityService: void unsetRunAs(java.lang.Object)>(r23);

        goto label15;

     label07:
        $r22 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void makeUnavailable(javax.servlet.UnavailableException)>($r22);

        r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = null;

        r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHolder$Config _config> = null;

        throw $r22;

     label08:
        $r20 := @caughtexception;

        $r21 = virtualinvoke $r20.<javax.servlet.ServletException: java.lang.Throwable getCause()>();

        if $r21 != null goto label09;

        $r24 = $r20;

        goto label10;

     label09:
        $r24 = virtualinvoke $r20.<javax.servlet.ServletException: java.lang.Throwable getCause()>();

     label10:
        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void makeUnavailable(java.lang.Throwable)>($r24);

        r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = null;

        r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHolder$Config _config> = null;

        throw $r20;

     label11:
        $r17 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void makeUnavailable(java.lang.Throwable)>($r17);

        r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = null;

        r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHolder$Config _config> = null;

        $r18 = new javax.servlet.ServletException;

        $r19 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String toString()>();

        specialinvoke $r18.<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r17);

        throw $r18;

     label12:
        $r14 := @caughtexception;

     label13:
        $r15 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r15 == null goto label14;

        $r16 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        interfaceinvoke $r16.<org.eclipse.jetty.security.IdentityService: void unsetRunAs(java.lang.Object)>(r23);

     label14:
        throw $r14;

     label15:
        return;

        catch javax.servlet.UnavailableException from label01 to label06 with label07;
        catch javax.servlet.ServletException from label01 to label06 with label08;
        catch java.lang.Exception from label01 to label06 with label11;
        catch java.lang.Throwable from label01 to label06 with label12;
        catch java.lang.Throwable from label07 to label13 with label12;
    }

    protected void initJspServlet() throws java.lang.Exception
    {
        java.lang.Object[] $r17;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r3;
        java.lang.String $r5, $r8, $r9, $r10, $r11, $r16;
        boolean $z0;
        org.eclipse.jetty.servlet.ServletHandler $r1;
        org.eclipse.jetty.servlet.ServletHolder r0;
        org.eclipse.jetty.server.handler.ContextHandler $r4;
        javax.servlet.ServletContext $r2;
        java.lang.StringBuilder $r12, $r14, $r15;
        java.lang.ClassLoader $r6, $r7;
        org.eclipse.jetty.util.log.Logger $r13;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHandler: javax.servlet.ServletContext getServletContext()>();

        $r3 = (org.eclipse.jetty.server.handler.ContextHandler$Context) $r2;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.server.handler.ContextHandler$Context: org.eclipse.jetty.server.handler.ContextHandler getContextHandler()>();

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.server.handler.ContextHandler: java.lang.String getClassPath()>();

        virtualinvoke $r4.<org.eclipse.jetty.server.handler.ContextHandler: void setAttribute(java.lang.String,java.lang.Object)>("org.apache.catalina.jsp_classpath", $r5);

        $r6 = virtualinvoke $r4.<org.eclipse.jetty.server.handler.ContextHandler: java.lang.ClassLoader getClassLoader()>();

        $r7 = virtualinvoke $r6.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        $r8 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.String getClassPath(java.lang.ClassLoader)>($r7);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>("com.sun.appserv.jsp.classpath", $r8);

        $r9 = "?";

        $r10 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getInitParameter(java.lang.String)>("classpath");

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke $r4.<org.eclipse.jetty.server.handler.ContextHandler: java.lang.String getClassPath()>();

        $r13 = <org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.util.log.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("classpath=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = newarray (java.lang.Object)[0];

        interfaceinvoke $r13.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r16, $r17);

        if $r11 == null goto label1;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>("classpath", $r11);

     label1:
        return;
    }

    protected void initMultiPart() throws java.lang.Exception
    {
        javax.servlet.ServletRegistration$Dynamic $r1;
        org.eclipse.jetty.servlet.ServletHandler $r4;
        org.eclipse.jetty.servlet.ServletHolder r0;
        org.eclipse.jetty.server.Request$MultiPartCleanerListener $r8;
        org.eclipse.jetty.server.handler.ContextHandler $r7;
        javax.servlet.MultipartConfigElement $r3;
        org.eclipse.jetty.servlet.ServletHolder$Registration $r2;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r6;
        javax.servlet.ServletContext $r5;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.ServletRegistration$Dynamic getRegistration()>();

        $r2 = (org.eclipse.jetty.servlet.ServletHolder$Registration) $r1;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.servlet.ServletHolder$Registration: javax.servlet.MultipartConfigElement getMultipartConfig()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.servlet.ServletHandler: javax.servlet.ServletContext getServletContext()>();

        $r6 = (org.eclipse.jetty.server.handler.ContextHandler$Context) $r5;

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.server.handler.ContextHandler$Context: org.eclipse.jetty.server.handler.ContextHandler getContextHandler()>();

        $r8 = new org.eclipse.jetty.server.Request$MultiPartCleanerListener;

        specialinvoke $r8.<org.eclipse.jetty.server.Request$MultiPartCleanerListener: void <init>()>();

        virtualinvoke $r7.<org.eclipse.jetty.server.handler.ContextHandler: void addEventListener(java.util.EventListener)>($r8);

     label1:
        return;
    }

    public java.lang.String getContextPath()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        javax.servlet.ServletContext $r2;
        java.lang.String $r3;
        org.eclipse.jetty.servlet.ServletHolder$Config $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHolder$Config _config>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHolder$Config: javax.servlet.ServletContext getServletContext()>();

        $r3 = interfaceinvoke $r2.<javax.servlet.ServletContext: java.lang.String getContextPath()>();

        return $r3;
    }

    public java.util.Map getRoleRefMap()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.util.Map $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        return $r1;
    }

    public java.lang.String getRunAsRole()
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _runAsRole>;

        return $r1;
    }

    public void setRunAsRole(java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _runAsRole> = r1;

        return;
    }

    public void handle(org.eclipse.jetty.server.Request, javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws javax.servlet.ServletException, javax.servlet.UnavailableException, java.io.IOException
    {
        org.eclipse.jetty.server.Request r2;
        byte $b1;
        boolean $z0, $z1, $z2;
        javax.servlet.ServletRegistration$Dynamic $r5;
        javax.servlet.Servlet r31;
        org.eclipse.jetty.servlet.ServletHolder r0;
        javax.servlet.MultipartConfigElement $r7;
        org.eclipse.jetty.servlet.ServletHolder$Registration $r6;
        javax.servlet.ServletResponse r9;
        java.lang.StringBuilder $r18, $r19, $r21;
        java.lang.Throwable $r24, $r30;
        org.eclipse.jetty.security.IdentityService $r4, $r10, $r12, $r13, $r25, $r27;
        long $l0;
        org.eclipse.jetty.server.UserIdentity $r14;
        org.eclipse.jetty.security.RunAsToken $r15;
        java.lang.String $r3, $r11, $r16, $r22, $r26;
        javax.servlet.ServletRequest r8;
        javax.servlet.UnavailableException $r17, $r23, $r28, $r29;
        java.lang.Class $r1, $r20;
        java.lang.Object r32;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r2 := @parameter0: org.eclipse.jetty.server.Request;

        r8 := @parameter1: javax.servlet.ServletRequest;

        r9 := @parameter2: javax.servlet.ServletResponse;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.Class _class>;

        if $r1 != null goto label01;

        $r23 = new javax.servlet.UnavailableException;

        specialinvoke $r23.<javax.servlet.UnavailableException: void <init>(java.lang.String)>("Servlet Not Initialized");

        throw $r23;

     label01:
        r31 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        entermonitor r0;

     label02:
        $l0 = r0.<org.eclipse.jetty.servlet.ServletHolder: long _unavailable>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label03;

        $z2 = r0.<org.eclipse.jetty.servlet.ServletHolder: boolean _initOnStartup>;

        if $z2 != 0 goto label04;

     label03:
        r31 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet getServlet()>();

     label04:
        if r31 != null goto label05;

        $r17 = new javax.servlet.UnavailableException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instantiate ");

        $r20 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.Class _class>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label05:
        exitmonitor r0;

     label06:
        goto label09;

     label07:
        $r30 := @caughtexception;

        exitmonitor r0;

     label08:
        throw $r30;

     label09:
        r32 = null;

        $z0 = virtualinvoke r2.<org.eclipse.jetty.server.Request: boolean isAsyncSupported()>();

     label10:
        $r3 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _forcedPath>;

        if $r3 == null goto label11;

        $r16 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _forcedPath>;

        interfaceinvoke r8.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("org.apache.catalina.jsp_file", $r16);

     label11:
        $r4 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r4 == null goto label12;

        $r13 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        $r14 = virtualinvoke r2.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.UserIdentity getResolvedUserIdentity()>();

        $r15 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.RunAsToken _runAsToken>;

        r32 = interfaceinvoke $r13.<org.eclipse.jetty.security.IdentityService: java.lang.Object setRunAs(org.eclipse.jetty.server.UserIdentity,org.eclipse.jetty.security.RunAsToken)>($r14, $r15);

     label12:
        $z1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: boolean isAsyncSupported()>();

        if $z1 != 0 goto label13;

        virtualinvoke r2.<org.eclipse.jetty.server.Request: void setAsyncSupported(boolean)>(0);

     label13:
        $r5 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.ServletRegistration$Dynamic getRegistration()>();

        $r6 = (org.eclipse.jetty.servlet.ServletHolder$Registration) $r5;

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.servlet.ServletHolder$Registration: javax.servlet.MultipartConfigElement getMultipartConfig()>();

        if $r7 == null goto label14;

        interfaceinvoke r8.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.multipartConfig", $r7);

     label14:
        interfaceinvoke r31.<javax.servlet.Servlet: void service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r8, r9);

     label15:
        virtualinvoke r2.<org.eclipse.jetty.server.Request: void setAsyncSupported(boolean)>($z0);

        $r10 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r10 == null goto label16;

        $r12 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        interfaceinvoke $r12.<org.eclipse.jetty.security.IdentityService: void unsetRunAs(java.lang.Object)>(r32);

     label16:
        if 0 == 0 goto label22;

        $r11 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getName()>();

        interfaceinvoke r8.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.error.servlet_name", $r11);

        goto label22;

     label17:
        $r28 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: void makeUnavailable(javax.servlet.UnavailableException)>($r28);

        $r29 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        throw $r29;

     label18:
        $r24 := @caughtexception;

     label19:
        virtualinvoke r2.<org.eclipse.jetty.server.Request: void setAsyncSupported(boolean)>($z0);

        $r25 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        if $r25 == null goto label20;

        $r27 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.security.IdentityService _identityService>;

        interfaceinvoke $r27.<org.eclipse.jetty.security.IdentityService: void unsetRunAs(java.lang.Object)>(r32);

     label20:
        if 1 == 0 goto label21;

        $r26 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getName()>();

        interfaceinvoke r8.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.error.servlet_name", $r26);

     label21:
        throw $r24;

     label22:
        return;

        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch javax.servlet.UnavailableException from label10 to label15 with label17;
        catch java.lang.Throwable from label10 to label15 with label18;
        catch java.lang.Throwable from label17 to label19 with label18;
    }

    private boolean isJspServlet()
    {
        javax.servlet.Servlet $r1, $r2;
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.Class r4;
        java.lang.String $r3;
        boolean z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        z0 = 0;

     label2:
        if r4 == null goto label3;

        if z0 != 0 goto label3;

        $r3 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        z0 = specialinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: boolean isJspServlet(java.lang.String)>($r3);

        r4 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label2;

     label3:
        return z0;
    }

    private boolean isJspServlet(java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHolder r2;
        java.lang.String r0, $r1;
        boolean $z0;

        r2 := @this: org.eclipse.jetty.servlet.ServletHolder;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = "org.apache.jasper.servlet.JspServlet";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    public javax.servlet.ServletRegistration$Dynamic getRegistration()
    {
        javax.servlet.ServletRegistration$Dynamic $r1, $r2;
        org.eclipse.jetty.servlet.ServletHolder$Registration $r3;
        org.eclipse.jetty.servlet.ServletHolder r0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.ServletRegistration$Dynamic _registration>;

        if $r1 != null goto label1;

        $r3 = new org.eclipse.jetty.servlet.ServletHolder$Registration;

        specialinvoke $r3.<org.eclipse.jetty.servlet.ServletHolder$Registration: void <init>(org.eclipse.jetty.servlet.ServletHolder)>(r0);

        r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.ServletRegistration$Dynamic _registration> = $r3;

     label1:
        $r2 = r0.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.ServletRegistration$Dynamic _registration>;

        return $r2;
    }

    protected javax.servlet.Servlet newInstance() throws javax.servlet.ServletException, java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        java.lang.Throwable $r10;
        java.lang.IllegalAccessException $r11;
        org.eclipse.jetty.servlet.ServletHandler $r1;
        javax.servlet.ServletException $r9;
        javax.servlet.Servlet $r5, $r8;
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.InstantiationException $r12;
        javax.servlet.ServletContext $r2;
        java.lang.Class $r4, $r6;
        java.lang.Object $r7;
        org.eclipse.jetty.servlet.ServletContextHandler$Context $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHandler: javax.servlet.ServletContext getServletContext()>();

        if $r2 != null goto label3;

        $r6 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.Class getHeldClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Object newInstance()>();

        $r8 = (javax.servlet.Servlet) $r7;

     label2:
        return $r8;

     label3:
        $r3 = (org.eclipse.jetty.servlet.ServletContextHandler$Context) $r2;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.Class getHeldClass()>();

        $r5 = virtualinvoke $r3.<org.eclipse.jetty.servlet.ServletContextHandler$Context: javax.servlet.Servlet createServlet(java.lang.Class)>($r4);

     label4:
        return $r5;

     label5:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<javax.servlet.ServletException: java.lang.Throwable getRootCause()>();

        $z0 = $r10 instanceof java.lang.InstantiationException;

        if $z0 == 0 goto label6;

        $r12 = (java.lang.InstantiationException) $r10;

        throw $r12;

     label6:
        $z1 = $r10 instanceof java.lang.IllegalAccessException;

        if $z1 == 0 goto label7;

        $r11 = (java.lang.IllegalAccessException) $r10;

        throw $r11;

     label7:
        throw $r9;

        catch javax.servlet.ServletException from label1 to label2 with label5;
        catch javax.servlet.ServletException from label3 to label4 with label5;
    }

    static java.lang.String access$100(org.eclipse.jetty.servlet.ServletHolder)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.String $r1;

        r0 := @parameter0: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _runAsRole>;

        return $r1;
    }

    static java.lang.String access$102(org.eclipse.jetty.servlet.ServletHolder, java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        java.lang.String r1;

        r0 := @parameter0: org.eclipse.jetty.servlet.ServletHolder;

        r1 := @parameter1: java.lang.String;

        r0.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String _runAsRole> = r1;

        return r1;
    }

    static org.eclipse.jetty.util.log.Logger access$200()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.util.log.Logger LOG>;

        return $r0;
    }

    static org.eclipse.jetty.servlet.ServletHolder$Config access$300(org.eclipse.jetty.servlet.ServletHolder)
    {
        org.eclipse.jetty.servlet.ServletHolder r0;
        org.eclipse.jetty.servlet.ServletHolder$Config $r1;

        r0 := @parameter0: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHolder$Config _config>;

        return $r1;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;
        java.util.Map $r1;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/servlet/ServletHolder;");

        <org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        <org.eclipse.jetty.servlet.ServletHolder: java.util.Map NO_MAPPED_ROLES> = $r1;

        return;
    }
}
