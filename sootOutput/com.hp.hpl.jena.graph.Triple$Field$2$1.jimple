class com.hp.hpl.jena.graph.Triple$Field$2$1 extends com.hp.hpl.jena.util.iterator.Filter
{
    final com.hp.hpl.jena.graph.Node val$n;
    final com.hp.hpl.jena.graph.Triple$Field$2 this$0;

    void <init>(com.hp.hpl.jena.graph.Triple$Field$2, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Triple$Field$2$1 r0;
        com.hp.hpl.jena.graph.Triple$Field$2 r1;
        com.hp.hpl.jena.graph.Node r2;

        r0 := @this: com.hp.hpl.jena.graph.Triple$Field$2$1;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple$Field$2;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r0.<com.hp.hpl.jena.graph.Triple$Field$2$1: com.hp.hpl.jena.graph.Triple$Field$2 this$0> = r1;

        r0.<com.hp.hpl.jena.graph.Triple$Field$2$1: com.hp.hpl.jena.graph.Node val$n> = r2;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.Filter: void <init>()>();

        return;
    }

    public boolean accept(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.Triple$Field$2$1 r0;
        com.hp.hpl.jena.graph.Node $r2, $r3;
        com.hp.hpl.jena.graph.Triple r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.Triple$Field$2$1;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.graph.Triple$Field$2$1: com.hp.hpl.jena.graph.Node val$n>;

        $r3 = staticinvoke <com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node access$100(com.hp.hpl.jena.graph.Triple)>(r1);

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: boolean sameValueAs(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean accept(java.lang.Object)
    {
        com.hp.hpl.jena.graph.Triple$Field$2$1 r0;
        java.lang.Object r1;
        com.hp.hpl.jena.graph.Triple $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.Triple$Field$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.graph.Triple) r1;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Triple$Field$2$1: boolean accept(com.hp.hpl.jena.graph.Triple)>($r2);

        return $z0;
    }
}
