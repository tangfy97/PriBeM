class org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator extends java.lang.Object implements java.util.Iterator
{
    java.lang.Class 'cls';
    java.util.Iterator internal;

    public void <init>(java.lang.Class, java.util.Iterator)
    {
        org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator r0;
        java.lang.Class r2;
        java.util.Iterator r1;

        r0 := @this: org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator;

        r2 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator: java.util.Iterator internal> = r1;

        r0.<org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator: java.lang.Class 'cls'> = r2;

        return;
    }

    public boolean hasNext()
    {
        org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator;

        $r1 = r0.<org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator: java.util.Iterator internal>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.Iterator $r1;
        org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator r0;
        java.lang.Object $r2, $r4;
        java.lang.Class $r3;

        r0 := @this: org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator;

        $r1 = r0.<org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator: java.util.Iterator internal>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = r0.<org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator: java.lang.Class 'cls'>;

        $r4 = staticinvoke <org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object createProxyWrapper(java.lang.Object,java.lang.Class)>($r2, $r3);

        return $r4;
    }

    public void remove()
    {
        org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator r0;
        java.util.Iterator $r1;

        r0 := @this: org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator;

        $r1 = r0.<org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator: java.util.Iterator internal>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }
}
