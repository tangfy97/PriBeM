public interface  org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants extends java.lang.Object
{
    public static final char[] SyntheticName;
    public static final char[] ConstantValueName;
    public static final char[] LineNumberTableName;
    public static final char[] LocalVariableTableName;
    public static final char[] InnerClassName;
    public static final char[] CodeName;
    public static final char[] ExceptionsName;
    public static final char[] SourceName;
    public static final char[] DeprecatedName;
    public static final char[] SignatureName;
    public static final char[] LocalVariableTypeTableName;
    public static final char[] EnclosingMethodName;
    public static final char[] AnnotationDefaultName;
    public static final char[] RuntimeInvisibleAnnotationsName;
    public static final char[] RuntimeVisibleAnnotationsName;
    public static final char[] RuntimeInvisibleParameterAnnotationsName;
    public static final char[] RuntimeVisibleParameterAnnotationsName;
    public static final char[] StackMapTableName;
    public static final char[] InconsistentHierarchy;
    public static final char[] VarargsName;
    public static final char[] StackMapName;
    public static final char[] MissingTypesName;

    static void <clinit>()
    {
        java.lang.String $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42;
        char[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43;

        $r0 = "Synthetic";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] SyntheticName> = $r1;

        $r2 = "ConstantValue";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] ConstantValueName> = $r3;

        $r4 = "LineNumberTable";

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] LineNumberTableName> = $r5;

        $r6 = "LocalVariableTable";

        $r7 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] LocalVariableTableName> = $r7;

        $r8 = "InnerClasses";

        $r9 = virtualinvoke $r8.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] InnerClassName> = $r9;

        $r10 = "Code";

        $r11 = virtualinvoke $r10.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] CodeName> = $r11;

        $r12 = "Exceptions";

        $r13 = virtualinvoke $r12.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] ExceptionsName> = $r13;

        $r14 = "SourceFile";

        $r15 = virtualinvoke $r14.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] SourceName> = $r15;

        $r16 = "Deprecated";

        $r17 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] DeprecatedName> = $r17;

        $r18 = "Signature";

        $r19 = virtualinvoke $r18.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] SignatureName> = $r19;

        $r20 = "LocalVariableTypeTable";

        $r21 = virtualinvoke $r20.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] LocalVariableTypeTableName> = $r21;

        $r22 = "EnclosingMethod";

        $r23 = virtualinvoke $r22.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] EnclosingMethodName> = $r23;

        $r24 = "AnnotationDefault";

        $r25 = virtualinvoke $r24.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] AnnotationDefaultName> = $r25;

        $r26 = "RuntimeInvisibleAnnotations";

        $r27 = virtualinvoke $r26.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeInvisibleAnnotationsName> = $r27;

        $r28 = "RuntimeVisibleAnnotations";

        $r29 = virtualinvoke $r28.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeVisibleAnnotationsName> = $r29;

        $r30 = "RuntimeInvisibleParameterAnnotations";

        $r31 = virtualinvoke $r30.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeInvisibleParameterAnnotationsName> = $r31;

        $r32 = "RuntimeVisibleParameterAnnotations";

        $r33 = virtualinvoke $r32.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeVisibleParameterAnnotationsName> = $r33;

        $r34 = "StackMapTable";

        $r35 = virtualinvoke $r34.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] StackMapTableName> = $r35;

        $r36 = "InconsistentHierarchy";

        $r37 = virtualinvoke $r36.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] InconsistentHierarchy> = $r37;

        $r38 = "Varargs";

        $r39 = virtualinvoke $r38.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] VarargsName> = $r39;

        $r40 = "StackMap";

        $r41 = virtualinvoke $r40.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] StackMapName> = $r41;

        $r42 = "MissingTypes";

        $r43 = virtualinvoke $r42.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] MissingTypesName> = $r43;

        return;
    }
}
