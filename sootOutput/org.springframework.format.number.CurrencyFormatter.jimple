public class org.springframework.format.number.CurrencyFormatter extends org.springframework.format.number.AbstractNumberFormatter
{
    private static final boolean roundingModeOnDecimalFormat;
    private int fractionDigits;
    private java.math.RoundingMode roundingMode;
    private java.util.Currency currency;

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        boolean $z0;

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "Ljava/math/RoundingMode;";

        $z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Ljava/text/DecimalFormat;", "setRoundingMode", $r0);

        <org.springframework.format.number.CurrencyFormatter: boolean roundingModeOnDecimalFormat> = $z0;

        return;
    }

    public void <init>()
    {
        org.springframework.format.number.CurrencyFormatter r0;

        r0 := @this: org.springframework.format.number.CurrencyFormatter;

        specialinvoke r0.<org.springframework.format.number.AbstractNumberFormatter: void <init>()>();

        r0.<org.springframework.format.number.CurrencyFormatter: int fractionDigits> = 2;

        return;
    }

    public void setFractionDigits(int)
    {
        int i0;
        org.springframework.format.number.CurrencyFormatter r0;

        r0 := @this: org.springframework.format.number.CurrencyFormatter;

        i0 := @parameter0: int;

        r0.<org.springframework.format.number.CurrencyFormatter: int fractionDigits> = i0;

        return;
    }

    public void setRoundingMode(java.math.RoundingMode)
    {
        org.springframework.format.number.CurrencyFormatter r0;
        java.math.RoundingMode r1;

        r0 := @this: org.springframework.format.number.CurrencyFormatter;

        r1 := @parameter0: java.math.RoundingMode;

        r0.<org.springframework.format.number.CurrencyFormatter: java.math.RoundingMode roundingMode> = r1;

        return;
    }

    public void setCurrency(java.util.Currency)
    {
        java.util.Currency r1;
        org.springframework.format.number.CurrencyFormatter r0;

        r0 := @this: org.springframework.format.number.CurrencyFormatter;

        r1 := @parameter0: java.util.Currency;

        r0.<org.springframework.format.number.CurrencyFormatter: java.util.Currency currency> = r1;

        return;
    }

    public java.math.BigDecimal parse(java.lang.String, java.util.Locale) throws java.text.ParseException
    {
        org.springframework.format.number.CurrencyFormatter r0;
        java.math.BigDecimal r6;
        java.util.Locale r2;
        int $i0, $i1;
        java.lang.String r1;
        java.lang.Number $r3;
        java.math.RoundingMode $r4, $r5;

        r0 := @this: org.springframework.format.number.CurrencyFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        $r3 = specialinvoke r0.<org.springframework.format.number.AbstractNumberFormatter: java.lang.Number parse(java.lang.String,java.util.Locale)>(r1, r2);

        r6 = (java.math.BigDecimal) $r3;

        if r6 == null goto label2;

        $r4 = r0.<org.springframework.format.number.CurrencyFormatter: java.math.RoundingMode roundingMode>;

        if $r4 == null goto label1;

        $i1 = r0.<org.springframework.format.number.CurrencyFormatter: int fractionDigits>;

        $r5 = r0.<org.springframework.format.number.CurrencyFormatter: java.math.RoundingMode roundingMode>;

        r6 = virtualinvoke r6.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>($i1, $r5);

        goto label2;

     label1:
        $i0 = r0.<org.springframework.format.number.CurrencyFormatter: int fractionDigits>;

        r6 = virtualinvoke r6.<java.math.BigDecimal: java.math.BigDecimal setScale(int)>($i0);

     label2:
        return r6;
    }

    protected java.text.NumberFormat getNumberFormat(java.util.Locale)
    {
        org.springframework.format.number.CurrencyFormatter r3;
        java.text.DecimalFormat r2;
        java.util.Currency $r5, $r7;
        java.text.NumberFormat $r1;
        java.util.Locale r0;
        int $i0, $i1;
        java.math.RoundingMode $r4, $r6;
        boolean $z0;

        r3 := @this: org.springframework.format.number.CurrencyFormatter;

        r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>(r0);

        r2 = (java.text.DecimalFormat) $r1;

        virtualinvoke r2.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1);

        $i0 = r3.<org.springframework.format.number.CurrencyFormatter: int fractionDigits>;

        virtualinvoke r2.<java.text.DecimalFormat: void setMaximumFractionDigits(int)>($i0);

        $i1 = r3.<org.springframework.format.number.CurrencyFormatter: int fractionDigits>;

        virtualinvoke r2.<java.text.DecimalFormat: void setMinimumFractionDigits(int)>($i1);

        $r4 = r3.<org.springframework.format.number.CurrencyFormatter: java.math.RoundingMode roundingMode>;

        if $r4 == null goto label1;

        $z0 = <org.springframework.format.number.CurrencyFormatter: boolean roundingModeOnDecimalFormat>;

        if $z0 == 0 goto label1;

        $r6 = r3.<org.springframework.format.number.CurrencyFormatter: java.math.RoundingMode roundingMode>;

        virtualinvoke r2.<java.text.DecimalFormat: void setRoundingMode(java.math.RoundingMode)>($r6);

     label1:
        $r7 = r3.<org.springframework.format.number.CurrencyFormatter: java.util.Currency currency>;

        if $r7 == null goto label2;

        $r5 = r3.<org.springframework.format.number.CurrencyFormatter: java.util.Currency currency>;

        virtualinvoke r2.<java.text.DecimalFormat: void setCurrency(java.util.Currency)>($r5);

     label2:
        return r2;
    }

    public volatile java.lang.Number parse(java.lang.String, java.util.Locale) throws java.text.ParseException
    {
        java.math.BigDecimal $r3;
        org.springframework.format.number.CurrencyFormatter r0;
        java.util.Locale r2;
        java.lang.String r1;

        r0 := @this: org.springframework.format.number.CurrencyFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        $r3 = virtualinvoke r0.<org.springframework.format.number.CurrencyFormatter: java.math.BigDecimal parse(java.lang.String,java.util.Locale)>(r1, r2);

        return $r3;
    }
}
