public final class org.codehaus.stax2.ri.typed.StringBase64Decoder extends org.codehaus.stax2.ri.typed.Base64DecoderBase
{
    java.lang.String _currSegment;
    int _currSegmentPtr;
    int _currSegmentEnd;

    public void <init>()
    {
        org.codehaus.stax2.ri.typed.StringBase64Decoder r0;

        r0 := @this: org.codehaus.stax2.ri.typed.StringBase64Decoder;

        specialinvoke r0.<org.codehaus.stax2.ri.typed.Base64DecoderBase: void <init>()>();

        return;
    }

    public void init(org.codehaus.stax2.typed.Base64Variant, boolean, java.lang.String)
    {
        org.codehaus.stax2.ri.typed.StringBase64Decoder r0;
        org.codehaus.stax2.typed.Base64Variant r1;
        int $i0;
        java.lang.String r2;
        boolean z0;

        r0 := @this: org.codehaus.stax2.ri.typed.StringBase64Decoder;

        r1 := @parameter0: org.codehaus.stax2.typed.Base64Variant;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: org.codehaus.stax2.typed.Base64Variant _variant> = r1;

        if z0 == 0 goto label1;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 0;

     label1:
        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.String _currSegment> = r2;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr> = 0;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentEnd> = $i0;

        return;
    }

    public int decode(byte[], int, int) throws java.lang.IllegalArgumentException
    {
        byte[] r4;
        byte $b12, $b16, $b20;
        org.codehaus.stax2.ri.typed.StringBase64Decoder r0;
        java.lang.StringBuffer $r19, $r20, $r22;
        java.lang.String $r1, $r5, $r8, $r11, $r14, $r21;
        java.lang.IllegalStateException $r23;
        org.codehaus.stax2.typed.Base64Variant $r2, $r6, $r9, $r12, $r15;
        boolean $z0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i55, $i56, i57, $i58, $i59, $i60, $i62, $i64;
        char $c7, $c25, $c36, $c45, $c54;
        java.lang.IllegalArgumentException $r3, $r7, $r10, $r13, $r16;

        r0 := @this: org.codehaus.stax2.ri.typed.StringBase64Decoder;

        r4 := @parameter0: byte[];

        i57 := @parameter1: int;

        i1 := @parameter2: int;

        i0 = i57;

        i2 = i57 + i1;

     label01:
        $i58 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state>;

        tableswitch($i58)
        {
            case 0: goto label02;
            case 1: goto label05;
            case 2: goto label08;
            case 3: goto label12;
            case 4: goto label16;
            case 5: goto label18;
            case 6: goto label20;
            case 7: goto label22;
            default: goto label25;
        };

     label02:
        $i51 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr>;

        $i50 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentEnd>;

        if $i51 < $i50 goto label03;

        goto label26;

     label03:
        $r14 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.String _currSegment>;

        $i52 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr>;

        $i53 = $i52 + 1;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr> = $i53;

        $c54 = virtualinvoke $r14.<java.lang.String: char charAt(int)>($i52);

        $i60 = (int) $c54;

        if $i60 <= 32 goto label02;

        $r15 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        $i55 = virtualinvoke $r15.<org.codehaus.stax2.typed.Base64Variant: int decodeBase64Char(char)>($c54);

        if $i55 >= 0 goto label04;

        $r16 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.IllegalArgumentException reportInvalidChar(char,int)>($c54, 0);

        throw $r16;

     label04:
        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData> = $i55;

     label05:
        $i42 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr>;

        $i41 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentEnd>;

        if $i42 < $i41 goto label06;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 1;

        goto label26;

     label06:
        $r11 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.String _currSegment>;

        $i43 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr>;

        $i44 = $i43 + 1;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr> = $i44;

        $c45 = virtualinvoke $r11.<java.lang.String: char charAt(int)>($i43);

        $r12 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        $i46 = virtualinvoke $r12.<org.codehaus.stax2.typed.Base64Variant: int decodeBase64Char(char)>($c45);

        if $i46 >= 0 goto label07;

        $r13 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.IllegalArgumentException reportInvalidChar(char,int)>($c45, 1);

        throw $r13;

     label07:
        $i47 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData>;

        $i48 = $i47 << 6;

        $i49 = $i48 | $i46;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData> = $i49;

     label08:
        $i33 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr>;

        $i32 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentEnd>;

        if $i33 < $i32 goto label09;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 2;

        goto label26;

     label09:
        $r8 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.String _currSegment>;

        $i34 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr>;

        $i35 = $i34 + 1;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr> = $i35;

        $c36 = virtualinvoke $r8.<java.lang.String: char charAt(int)>($i34);

        $r9 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        $i37 = virtualinvoke $r9.<org.codehaus.stax2.typed.Base64Variant: int decodeBase64Char(char)>($c36);

        if $i37 >= 0 goto label11;

        $i62 = (int) -2;

        if $i37 == $i62 goto label10;

        $r10 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.IllegalArgumentException reportInvalidChar(char,int)>($c36, 2);

        throw $r10;

     label10:
        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 7;

        goto label01;

     label11:
        $i38 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData>;

        $i39 = $i38 << 6;

        $i40 = $i39 | $i37;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData> = $i40;

     label12:
        $i22 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr>;

        $i21 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentEnd>;

        if $i22 < $i21 goto label13;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 3;

        goto label26;

     label13:
        $r5 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.String _currSegment>;

        $i23 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr>;

        $i24 = $i23 + 1;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr> = $i24;

        $c25 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i23);

        $r6 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        $i26 = virtualinvoke $r6.<org.codehaus.stax2.typed.Base64Variant: int decodeBase64Char(char)>($c25);

        if $i26 >= 0 goto label15;

        $i64 = (int) -2;

        if $i26 == $i64 goto label14;

        $r7 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.IllegalArgumentException reportInvalidChar(char,int)>($c25, 3);

        throw $r7;

     label14:
        $i30 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData>;

        $i31 = $i30 >> 2;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData> = $i31;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 5;

        goto label01;

     label15:
        $i27 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData>;

        $i28 = $i27 << 6;

        $i29 = $i28 | $i26;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData> = $i29;

     label16:
        if i57 < i2 goto label17;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 4;

        goto label26;

     label17:
        $i17 = i57;

        i57 = i57 + 1;

        $i18 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData>;

        $i19 = $i18 >> 16;

        $b20 = (byte) $i19;

        r4[$i17] = $b20;

     label18:
        if i57 < i2 goto label19;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 5;

        goto label26;

     label19:
        $i13 = i57;

        i57 = i57 + 1;

        $i14 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData>;

        $i15 = $i14 >> 8;

        $b16 = (byte) $i15;

        r4[$i13] = $b16;

     label20:
        if i57 < i2 goto label21;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 6;

        goto label26;

     label21:
        $i10 = i57;

        i57 = i57 + 1;

        $i11 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData>;

        $b12 = (byte) $i11;

        r4[$i10] = $b12;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 0;

        goto label01;

     label22:
        $i4 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr>;

        $i3 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentEnd>;

        if $i4 < $i3 goto label23;

        goto label26;

     label23:
        $r1 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.String _currSegment>;

        $i5 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr>;

        $i6 = $i5 + 1;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _currSegmentPtr> = $i6;

        $c7 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i5);

        $r2 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        $z0 = virtualinvoke $r2.<org.codehaus.stax2.typed.Base64Variant: boolean usesPaddingChar(char)>($c7);

        if $z0 != 0 goto label24;

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: java.lang.IllegalArgumentException reportInvalidChar(char,int,java.lang.String)>($c7, 3, "expected padding character \'=\'");

        throw $r3;

     label24:
        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state> = 6;

        $i8 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData>;

        $i9 = $i8 >> 4;

        r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _decodedData> = $i9;

        goto label01;

     label25:
        $r23 = new java.lang.IllegalStateException;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal internal state ");

        $i56 = r0.<org.codehaus.stax2.ri.typed.StringBase64Decoder: int _state>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i56);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r23;

     label26:
        $i59 = i57 - i0;

        return $i59;
    }
}
