public abstract class com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext extends java.lang.Object implements com.hp.hpl.jena.rdf.arp.ARPErrorNumbers, com.hp.hpl.jena.rdf.arp.lang.LanguageTagCodes
{
    protected final java.lang.String lang;
    protected final com.hp.hpl.jena.rdf.arp.impl.Taint langTaint;
    final com.hp.hpl.jena.rdf.arp.impl.Taint baseTaint;
    protected final org.apache.jena.iri.IRI uri;
    protected final com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext document;

    protected void <init>(boolean, com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext, org.apache.jena.iri.IRI, com.hp.hpl.jena.rdf.arp.impl.Taint, java.lang.String, com.hp.hpl.jena.rdf.arp.impl.Taint)
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r2, r3;
        java.lang.String r1;
        org.apache.jena.iri.IRI r4;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r0, r5, $r6;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        z0 := @parameter0: boolean;

        r5 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r4 := @parameter2: org.apache.jena.iri.IRI;

        r3 := @parameter3: com.hp.hpl.jena.rdf.arp.impl.Taint;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: com.hp.hpl.jena.rdf.arp.impl.Taint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: java.lang.String lang> = r1;

        r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.Taint langTaint> = r2;

        r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.Taint baseTaint> = r3;

        r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: org.apache.jena.iri.IRI uri> = r4;

        if z0 == 0 goto label2;

        if r5 != null goto label1;

        $r6 = r0;

        goto label3;

     label1:
        $r6 = r5;

        goto label3;

     label2:
        $r6 = null;

     label3:
        r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext document> = $r6;

        return;
    }

    protected static com.hp.hpl.jena.rdf.arp.impl.Taint initTaint(com.hp.hpl.jena.rdf.arp.impl.XMLHandler, org.apache.jena.iri.IRI) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.TaintImpl $r0;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r1;
        org.apache.jena.iri.IRI r2;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r2 := @parameter1: org.apache.jena.iri.IRI;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.TaintImpl;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.TaintImpl: void <init>()>();

        staticinvoke <com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: void checkURI(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.Taint,org.apache.jena.iri.IRI)>(r1, $r0, r2);

        return $r0;
    }

    public com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext withBase(com.hp.hpl.jena.rdf.arp.impl.XMLHandler, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint $r8;
        com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext $r10, $r11;
        com.hp.hpl.jena.rdf.arp.impl.TaintImpl $r0;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r2;
        java.lang.String r3, $r9;
        org.apache.jena.iri.IRI $r4, $r7, $r12;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.rdf.arp.impl.XMLContext $r5;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r1, $r6;

        r1 := @this: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r2 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r3 := @parameter1: java.lang.String;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.TaintImpl;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.TaintImpl: void <init>()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: org.apache.jena.iri.IRI resolveAsURI(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,boolean)>(r2, $r0, r3, 0);

        $z0 = virtualinvoke $r4.<org.apache.jena.iri.IRI: boolean isRelative()>();

        if $z0 == 0 goto label1;

        $r11 = new com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext;

        $r12 = virtualinvoke $r4.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(java.lang.String)>("");

        specialinvoke $r11.<com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,int,org.apache.jena.iri.IRI)>(r2, 215, $r12);

        return $r11;

     label1:
        $z1 = virtualinvoke $r4.<org.apache.jena.iri.IRI: boolean hasViolation(boolean)>(0);

        if $z1 == 0 goto label2;

        $r10 = new com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext;

        specialinvoke $r10.<com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,int,org.apache.jena.iri.IRI)>(r2, 214, $r4);

        return $r10;

     label2:
        $r5 = new com.hp.hpl.jena.rdf.arp.impl.XMLContext;

        $z2 = virtualinvoke r1.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: boolean keepDocument(com.hp.hpl.jena.rdf.arp.impl.XMLHandler)>(r2);

        $r6 = r1.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext document>;

        $r7 = virtualinvoke $r4.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(java.lang.String)>("");

        $r9 = r1.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: java.lang.String lang>;

        $r8 = r1.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.Taint langTaint>;

        specialinvoke $r5.<com.hp.hpl.jena.rdf.arp.impl.XMLContext: void <init>(boolean,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext,org.apache.jena.iri.IRI,com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,com.hp.hpl.jena.rdf.arp.impl.Taint)>($z2, $r6, $r7, $r0, $r9, $r8);

        return $r5;
    }

    abstract boolean keepDocument(com.hp.hpl.jena.rdf.arp.impl.XMLHandler);

    protected com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext withLang(com.hp.hpl.jena.rdf.arp.impl.XMLHandler, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint $r4;
        com.hp.hpl.jena.rdf.arp.impl.TaintImpl $r0;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r2;
        java.lang.String r3;
        org.apache.jena.iri.IRI $r5;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r1, $r6;

        r1 := @this: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r2 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r3 := @parameter1: java.lang.String;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.TaintImpl;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.TaintImpl: void <init>()>();

        specialinvoke r1.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: void checkXMLLang(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>(r2, $r0, r3);

        $r5 = r1.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: org.apache.jena.iri.IRI uri>;

        $r4 = r1.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.Taint baseTaint>;

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext clone(org.apache.jena.iri.IRI,com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,com.hp.hpl.jena.rdf.arp.impl.Taint)>($r5, $r4, r3, $r0);

        return $r6;
    }

    abstract com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext clone(org.apache.jena.iri.IRI, com.hp.hpl.jena.rdf.arp.impl.Taint, java.lang.String, com.hp.hpl.jena.rdf.arp.impl.Taint);

    public java.lang.String getLang(com.hp.hpl.jena.rdf.arp.impl.Taint)
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint $r1, r3;
        java.lang.String $r2;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r3 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.Taint langTaint>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.arp.impl.Taint: boolean isTainted()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r3.<com.hp.hpl.jena.rdf.arp.impl.Taint: void taint()>();

     label1:
        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: java.lang.String lang>;

        return $r2;
    }

    final org.apache.jena.iri.IRI resolveAsURI(com.hp.hpl.jena.rdf.arp.impl.XMLHandler, com.hp.hpl.jena.rdf.arp.impl.Taint, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r2;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r1;
        java.lang.String r3;
        org.apache.jena.iri.IRI $r4;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r2 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.Taint;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: org.apache.jena.iri.IRI resolveAsURI(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,boolean)>(r1, r2, r3, 1);

        return $r4;
    }

    final org.apache.jena.iri.IRI resolveAsURI(com.hp.hpl.jena.rdf.arp.impl.XMLHandler, com.hp.hpl.jena.rdf.arp.impl.Taint, java.lang.String, boolean) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r5;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r4;
        org.apache.jena.iri.IRI $r2, $r3;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r4 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r5 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.Taint;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: org.apache.jena.iri.IRI uri>;

        $r3 = virtualinvoke $r2.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(java.lang.String)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: void checkBaseUse(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,org.apache.jena.iri.IRI)>(r4, r5, r1, $r3);

     label1:
        staticinvoke <com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: void checkURI(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.Taint,org.apache.jena.iri.IRI)>(r4, r5, $r3);

        return $r3;
    }

    abstract void checkBaseUse(com.hp.hpl.jena.rdf.arp.impl.XMLHandler, com.hp.hpl.jena.rdf.arp.impl.Taint, java.lang.String, org.apache.jena.iri.IRI) throws org.xml.sax.SAXParseException;

    protected static void checkURI(com.hp.hpl.jena.rdf.arp.impl.XMLHandler, com.hp.hpl.jena.rdf.arp.impl.Taint, org.apache.jena.iri.IRI) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r6;
        int $i0, $i1;
        java.lang.String $r4, $r10, $r13, $r16;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r5;
        org.apache.jena.iri.IRI r0;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r14, $r15;
        org.apache.jena.iri.Violation r3;

        r5 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r6 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.Taint;

        r0 := @parameter2: org.apache.jena.iri.IRI;

        $z0 = virtualinvoke r0.<org.apache.jena.iri.IRI: boolean hasViolation(boolean)>(0);

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke r0.<org.apache.jena.iri.IRI: java.util.Iterator violations(boolean)>(0);

     label1:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.jena.iri.Violation) $r2;

        $r4 = virtualinvoke r3.<org.apache.jena.iri.Violation: java.lang.String getShortMessage()>();

        virtualinvoke r0.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        $i0 = virtualinvoke r3.<org.apache.jena.iri.Violation: int getViolationCode()>();

        if $i0 != 57 goto label2;

        $i1 = virtualinvoke r3.<org.apache.jena.iri.Violation: int getComponent()>();

        if $i1 != 2 goto label2;

        $z2 = virtualinvoke r5.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: boolean allowRelativeURIs()>();

        if $z2 != 0 goto label3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Relative URIs are not permitted in RDF: specifically <");

        $r13 = virtualinvoke r0.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r6, 136, $r16);

        goto label3;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad URI: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r6, 107, $r10);

     label3:
        goto label1;

     label4:
        return;
    }

    public java.lang.String resolve(com.hp.hpl.jena.rdf.arp.impl.XMLHandler, com.hp.hpl.jena.rdf.arp.impl.Taint, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r2;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r1;
        java.lang.String r3, $r5;
        org.apache.jena.iri.IRI $r4;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r2 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.Taint;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: org.apache.jena.iri.IRI resolveAsURI(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,boolean)>(r1, r2, r3, 1);

        $r5 = virtualinvoke $r4.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r5;
    }

    private void checkXMLLang(com.hp.hpl.jena.rdf.arp.impl.XMLHandler, com.hp.hpl.jena.rdf.arp.impl.Taint, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.lang.LanguageTagSyntaxException $r25;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r15, $r16, $r17, $r20, $r21, $r22, $r29, $r30, $r31, $r32;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r27;
        com.hp.hpl.jena.rdf.arp.impl.Taint r3;
        com.hp.hpl.jena.rdf.arp.lang.LanguageTag $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String r0, $r8, $r13, $r18, $r23, $r24, $r26;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r2;

        r27 := @this: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r2 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r3 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.Taint;

        r0 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r28 = new com.hp.hpl.jena.rdf.arp.lang.LanguageTag;

        specialinvoke $r28.<com.hp.hpl.jena.rdf.arp.lang.LanguageTag: void <init>(java.lang.String)>(r0);

        $i0 = virtualinvoke $r28.<com.hp.hpl.jena.rdf.arp.lang.LanguageTag: int tagType()>();

        $i7 = (int) 32768;

        if $i0 != $i7 goto label2;

        $r24 = virtualinvoke $r28.<com.hp.hpl.jena.rdf.arp.lang.LanguageTag: java.lang.String errorMessage()>();

        virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r3, 116, $r24);

     label2:
        $i1 = $i0 & 512;

        if $i1 != 512 goto label3;

        virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r3, 116, "Unnecessary use of language tag \"und\" prohibited by RFC3066");

     label3:
        $i2 = $i0 & 8192;

        if $i2 != 8192 goto label4;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Use of deprecated language tag \"");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r3, 117, $r23);

     label4:
        $i3 = $i0 & 2;

        if $i3 != 2 goto label5;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Use of (IANA) private language tag \"");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r3, 1, $r18);

        goto label7;

     label5:
        $i4 = $i0 & 2048;

        if $i4 != 2048 goto label6;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Use of (ISO639-2) local use language tag \"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r3, 1, $r13);

        goto label7;

     label6:
        $i5 = $i0 & 128;

        if $i5 != 128 goto label7;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Use of additional private subtags on language \"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r3, 1, $r8);

     label7:
        goto label9;

     label8:
        $r25 := @caughtexception;

        $r26 = virtualinvoke $r25.<com.hp.hpl.jena.rdf.arp.lang.LanguageTagSyntaxException: java.lang.String getMessage()>();

        virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r3, 115, $r26);

     label9:
        return;

        catch com.hp.hpl.jena.rdf.arp.lang.LanguageTagSyntaxException from label1 to label7 with label8;
    }
}
