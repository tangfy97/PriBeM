public class org.eclipse.jdt.internal.compiler.parser.RecoveredStatement extends org.eclipse.jdt.internal.compiler.parser.RecoveredElement
{
    public org.eclipse.jdt.internal.compiler.ast.Statement statement;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Statement, org.eclipse.jdt.internal.compiler.parser.RecoveredElement, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement r2;
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement r0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Statement;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: void <init>(org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r1, i0);

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement statement> = r2;

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.ASTNode parseTree()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement r0;
        org.eclipse.jdt.internal.compiler.ast.Statement $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement statement>;

        return $r1;
    }

    public int sourceEnd()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement r0;
        org.eclipse.jdt.internal.compiler.ast.Statement $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement statement>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd>;

        return $i0;
    }

    public java.lang.String toString(int)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement $r6;
        java.lang.StringBuffer $r0, $r4, $r5, $r7, $r8;
        int i0, $i1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement r1;
        java.lang.String $r2, $r3, $r9;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: java.lang.String tabString(int)>(i0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Recovered statement:\n");

        $r6 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement statement>;

        $i1 = i0 + 1;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>(10);

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Statement: java.lang.StringBuffer print(int,java.lang.StringBuffer)>($i1, $r5);

        $r8 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public org.eclipse.jdt.internal.compiler.ast.Statement updatedStatement()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement r0;
        org.eclipse.jdt.internal.compiler.ast.Statement $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement statement>;

        return $r1;
    }

    public void updateParseTree()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement updatedStatement()>();

        return;
    }

    public void updateSourceEndIfNecessary(int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement $r1, $r2;
        int $i0, i1, i2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement;

        i2 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement statement>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd>;

        if $i0 != 0 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement statement>;

        $r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd> = i1;

     label1:
        return;
    }
}
