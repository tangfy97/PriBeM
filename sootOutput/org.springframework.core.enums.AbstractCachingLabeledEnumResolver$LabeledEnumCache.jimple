class org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache extends org.springframework.util.CachingMapDecorator
{
    final org.springframework.core.enums.AbstractCachingLabeledEnumResolver this$0;

    public void <init>(org.springframework.core.enums.AbstractCachingLabeledEnumResolver)
    {
        org.springframework.core.enums.AbstractCachingLabeledEnumResolver r1;
        org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache r0;

        r0 := @this: org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache;

        r1 := @parameter0: org.springframework.core.enums.AbstractCachingLabeledEnumResolver;

        r0.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache: org.springframework.core.enums.AbstractCachingLabeledEnumResolver this$0> = r1;

        specialinvoke r0.<org.springframework.util.CachingMapDecorator: void <init>(boolean)>(1);

        return;
    }

    protected java.util.Map create(java.lang.Class)
    {
        java.util.HashMap $r11;
        java.util.Map $r16;
        int $i0;
        java.lang.String $r10;
        boolean $z0, $z1;
        org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache r0;
        java.util.Iterator $r12;
        org.springframework.core.enums.LabeledEnum r14;
        java.util.Set $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Class r1;
        org.springframework.core.enums.AbstractCachingLabeledEnumResolver $r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.Object $r13;
        java.lang.Comparable $r15;

        r0 := @this: org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache: org.springframework.core.enums.AbstractCachingLabeledEnumResolver this$0>;

        $r3 = virtualinvoke $r2.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver: java.util.Set findLabeledEnums(java.lang.Class)>(r1);

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unsupported labeled enumeration type \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("make sure you\'ve properly defined this enumeration! ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("If it is static, are the class and its fields public/static/final?");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label2:
        $r11 = new java.util.HashMap;

        $i0 = interfaceinvoke $r3.<java.util.Set: int size()>();

        specialinvoke $r11.<java.util.HashMap: void <init>(int)>($i0);

        $r12 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.springframework.core.enums.LabeledEnum) $r13;

        $r15 = interfaceinvoke r14.<org.springframework.core.enums.LabeledEnum: java.lang.Comparable getCode()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r14);

     label4:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        $r16 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r11);

        return $r16;
    }

    protected boolean useWeakValue(java.lang.Class, java.util.Map)
    {
        java.util.Map r16;
        java.lang.String $r12, $r15;
        boolean $z0, $z1;
        org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache r1;
        java.lang.Class r0, $r3;
        org.springframework.core.enums.AbstractCachingLabeledEnumResolver $r2, $r5, $r7, $r9;
        org.apache.commons.logging.Log $r6, $r8, $r11;
        java.lang.StringBuilder $r10, $r13, $r14;
        java.lang.ClassLoader $r4;

        r1 := @this: org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache;

        r0 := @parameter0: java.lang.Class;

        r16 := @parameter1: java.util.Map;

        $r2 = r1.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache: org.springframework.core.enums.AbstractCachingLabeledEnumResolver this$0>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = staticinvoke <org.springframework.util.ClassUtils: boolean isCacheSafe(java.lang.Class,java.lang.ClassLoader)>(r0, $r4);

        if $z0 != 0 goto label2;

        $r5 = r1.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache: org.springframework.core.enums.AbstractCachingLabeledEnumResolver this$0>;

        $r6 = $r5.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver: org.apache.commons.logging.Log logger>;

        if $r6 == null goto label1;

        $r7 = r1.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache: org.springframework.core.enums.AbstractCachingLabeledEnumResolver this$0>;

        $r8 = $r7.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r9 = r1.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache: org.springframework.core.enums.AbstractCachingLabeledEnumResolver this$0>;

        $r11 = $r9.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver: org.apache.commons.logging.Log logger>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Not strongly caching class [");

        $r12 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] because it is not cache-safe");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label1:
        return 1;

     label2:
        return 0;
    }

    protected volatile boolean useWeakValue(java.lang.Object, java.lang.Object)
    {
        org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache r0;
        java.util.Map $r3;
        java.lang.Object r1, r2;
        java.lang.Class $r4;
        boolean $z0;

        r0 := @this: org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Class) r1;

        $r3 = (java.util.Map) r2;

        $z0 = virtualinvoke r0.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache: boolean useWeakValue(java.lang.Class,java.util.Map)>($r4, $r3);

        return $z0;
    }

    protected volatile java.lang.Object create(java.lang.Object)
    {
        org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache r0;
        java.util.Map $r3;
        java.lang.Object r1;
        java.lang.Class $r2;

        r0 := @this: org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Class) r1;

        $r3 = virtualinvoke r0.<org.springframework.core.enums.AbstractCachingLabeledEnumResolver$LabeledEnumCache: java.util.Map create(java.lang.Class)>($r2);

        return $r3;
    }
}
