public class org.apache.xml.serialize.Encodings extends java.lang.Object
{
    static final int DEFAULT_LAST_PRINTABLE;
    static final int LAST_PRINTABLE_UNICODE;
    static final java.lang.String[] UNICODE_ENCODINGS;
    static final java.lang.String DEFAULT_ENCODING;
    static java.util.Hashtable _encodings;
    static final java.lang.String JIS_DANGER_CHARS;

    public void <init>()
    {
        org.apache.xml.serialize.Encodings r0;

        r0 := @this: org.apache.xml.serialize.Encodings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static org.apache.xml.serialize.EncodingInfo getEncodingInfo(java.lang.String, boolean) throws java.io.UnsupportedEncodingException
    {
        java.util.Locale $r0;
        boolean $z0, z1, $z2;
        java.io.UnsupportedEncodingException $r38;
        java.lang.String[] $r6, $r7, $r10, $r17, $r18, $r22;
        org.apache.xml.serialize.EncodingInfo $r5, $r16, $r28, r33, r34, $r35, $r36, $r37, $r39, $r40;
        int $i0, $i1, $i2, $i3, i4, i5, $i7, $i9, $i11;
        java.lang.String $r1, $r2, $r8, $r19, $r21, $r25, $r30, r32;
        java.util.Hashtable $r3, $r11, $r14, $r23, $r26, $r31;
        java.lang.Object $r4, $r15, $r27;

        r32 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        if r32 != null goto label02;

        $r26 = <org.apache.xml.serialize.Encodings: java.util.Hashtable _encodings>;

        $r27 = virtualinvoke $r26.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("UTF8");

        $r28 = (org.apache.xml.serialize.EncodingInfo) $r27;

        if $r28 == null goto label01;

        return $r28;

     label01:
        $r35 = new org.apache.xml.serialize.EncodingInfo;

        $r30 = staticinvoke <org.apache.xerces.util.EncodingMap: java.lang.String getJava2IANAMapping(java.lang.String)>("UTF8");

        $i7 = (int) 65535;

        specialinvoke $r35.<org.apache.xml.serialize.EncodingInfo: void <init>(java.lang.String,java.lang.String,int)>($r30, "UTF8", $i7);

        $r31 = <org.apache.xml.serialize.Encodings: java.util.Hashtable _encodings>;

        virtualinvoke $r31.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("UTF8", $r35);

        return $r35;

     label02:
        $r0 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke r32.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r0);

        $r2 = staticinvoke <org.apache.xerces.util.EncodingMap: java.lang.String getIANA2JavaMapping(java.lang.String)>($r1);

        if $r2 != null goto label10;

        if z1 == 0 goto label09;

        staticinvoke <org.apache.xml.serialize.EncodingInfo: void testJavaEncodingName(java.lang.String)>($r1);

        $r14 = <org.apache.xml.serialize.Encodings: java.util.Hashtable _encodings>;

        $r15 = virtualinvoke $r14.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r16 = (org.apache.xml.serialize.EncodingInfo) $r15;

        r33 = $r16;

        if $r16 == null goto label03;

        return $r16;

     label03:
        i4 = 0;

        goto label06;

     label04:
        $r18 = <org.apache.xml.serialize.Encodings: java.lang.String[] UNICODE_ENCODINGS>;

        $r19 = $r18[i4];

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z2 == 0 goto label05;

        $r36 = new org.apache.xml.serialize.EncodingInfo;

        $r21 = staticinvoke <org.apache.xerces.util.EncodingMap: java.lang.String getJava2IANAMapping(java.lang.String)>($r1);

        $i9 = (int) 65535;

        specialinvoke $r36.<org.apache.xml.serialize.EncodingInfo: void <init>(java.lang.String,java.lang.String,int)>($r21, $r1, $i9);

        r33 = $r36;

        goto label07;

     label05:
        i4 = i4 + 1;

     label06:
        $r17 = <org.apache.xml.serialize.Encodings: java.lang.String[] UNICODE_ENCODINGS>;

        $i2 = lengthof $r17;

        if i4 < $i2 goto label04;

     label07:
        $r22 = <org.apache.xml.serialize.Encodings: java.lang.String[] UNICODE_ENCODINGS>;

        $i3 = lengthof $r22;

        if i4 != $i3 goto label08;

        $r37 = new org.apache.xml.serialize.EncodingInfo;

        $r25 = staticinvoke <org.apache.xerces.util.EncodingMap: java.lang.String getJava2IANAMapping(java.lang.String)>($r1);

        specialinvoke $r37.<org.apache.xml.serialize.EncodingInfo: void <init>(java.lang.String,java.lang.String,int)>($r25, $r1, 127);

        r33 = $r37;

     label08:
        $r23 = <org.apache.xml.serialize.Encodings: java.util.Hashtable _encodings>;

        virtualinvoke $r23.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r33);

        return r33;

     label09:
        $r38 = new java.io.UnsupportedEncodingException;

        specialinvoke $r38.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r1);

        throw $r38;

     label10:
        $r3 = <org.apache.xml.serialize.Encodings: java.util.Hashtable _encodings>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (org.apache.xml.serialize.EncodingInfo) $r4;

        r34 = $r5;

        if $r5 == null goto label11;

        return $r5;

     label11:
        i5 = 0;

        goto label14;

     label12:
        $r7 = <org.apache.xml.serialize.Encodings: java.lang.String[] UNICODE_ENCODINGS>;

        $r8 = $r7[i5];

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label13;

        $r39 = new org.apache.xml.serialize.EncodingInfo;

        $i11 = (int) 65535;

        specialinvoke $r39.<org.apache.xml.serialize.EncodingInfo: void <init>(java.lang.String,java.lang.String,int)>($r1, $r2, $i11);

        r34 = $r39;

        goto label15;

     label13:
        i5 = i5 + 1;

     label14:
        $r6 = <org.apache.xml.serialize.Encodings: java.lang.String[] UNICODE_ENCODINGS>;

        $i0 = lengthof $r6;

        if i5 < $i0 goto label12;

     label15:
        $r10 = <org.apache.xml.serialize.Encodings: java.lang.String[] UNICODE_ENCODINGS>;

        $i1 = lengthof $r10;

        if i5 != $i1 goto label16;

        $r40 = new org.apache.xml.serialize.EncodingInfo;

        specialinvoke $r40.<org.apache.xml.serialize.EncodingInfo: void <init>(java.lang.String,java.lang.String,int)>($r1, $r2, 127);

        r34 = $r40;

     label16:
        $r11 = <org.apache.xml.serialize.Encodings: java.util.Hashtable _encodings>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r34);

        return r34;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.Hashtable $r1;

        <org.apache.xml.serialize.Encodings: java.lang.String JIS_DANGER_CHARS> = "\\~\u007f\u00a2\u00a3\u00a5\u00ac\u2014\u2015\u2016\u2026\u203e\u203e\u2225\u222f\u301c\uff3c\uff5e\uffe0\uffe1\uffe2\uffe3";

        <org.apache.xml.serialize.Encodings: java.lang.String DEFAULT_ENCODING> = "UTF8";

        <org.apache.xml.serialize.Encodings: int LAST_PRINTABLE_UNICODE> = 65535;

        <org.apache.xml.serialize.Encodings: int DEFAULT_LAST_PRINTABLE> = 127;

        $r0 = newarray (java.lang.String)[6];

        $r0[0] = "Unicode";

        $r0[1] = "UnicodeBig";

        $r0[2] = "UnicodeLittle";

        $r0[3] = "GB2312";

        $r0[4] = "UTF8";

        $r0[5] = "UTF-16";

        <org.apache.xml.serialize.Encodings: java.lang.String[] UNICODE_ENCODINGS> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serialize.Encodings: java.util.Hashtable _encodings> = $r1;

        return;
    }
}
