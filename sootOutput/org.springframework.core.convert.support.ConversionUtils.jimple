abstract class org.springframework.core.convert.support.ConversionUtils extends java.lang.Object
{

    void <init>()
    {
        org.springframework.core.convert.support.ConversionUtils r0;

        r0 := @this: org.springframework.core.convert.support.ConversionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object invokeConverter(org.springframework.core.convert.converter.GenericConverter, java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        org.springframework.core.convert.ConversionFailedException $r6, $r7;
        java.lang.Exception $r5;
        org.springframework.core.convert.TypeDescriptor r2, r3;
        org.springframework.core.convert.converter.GenericConverter r0;
        java.lang.Object r1, $r4;

        r0 := @parameter0: org.springframework.core.convert.converter.GenericConverter;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.springframework.core.convert.TypeDescriptor;

        r3 := @parameter3: org.springframework.core.convert.TypeDescriptor;

     label1:
        $r4 = interfaceinvoke r0.<org.springframework.core.convert.converter.GenericConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>(r1, r2, r3);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r5 := @caughtexception;

        $r6 = new org.springframework.core.convert.ConversionFailedException;

        specialinvoke $r6.<org.springframework.core.convert.ConversionFailedException: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.lang.Object,java.lang.Throwable)>(r2, r3, r1, $r5);

        throw $r6;

        catch org.springframework.core.convert.ConversionFailedException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static boolean canConvertElements(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.ConversionService)
    {
        org.springframework.core.convert.TypeDescriptor r0, r1;
        java.lang.Class $r3, $r4;
        org.springframework.core.convert.ConversionService r2;
        boolean $z0, $z1;

        r1 := @parameter0: org.springframework.core.convert.TypeDescriptor;

        r0 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        r2 := @parameter2: org.springframework.core.convert.ConversionService;

        if r0 != null goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 1;

     label2:
        $z0 = interfaceinvoke r2.<org.springframework.core.convert.ConversionService: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>(r1, r0);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $r3 = virtualinvoke r1.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>();

        $r4 = virtualinvoke r0.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>();

        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }
}
