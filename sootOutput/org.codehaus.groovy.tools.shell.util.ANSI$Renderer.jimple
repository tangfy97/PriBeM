public class org.codehaus.groovy.tools.shell.util.ANSI$Renderer extends java.lang.Object
{
    public static final java.lang.String BEGIN_TOKEN;
    private static final int BEGIN_TOKEN_SIZE;
    public static final java.lang.String END_TOKEN;
    private static final int END_TOKEN_SIZE;
    public static final java.lang.String CODE_TEXT_SEPARATOR;
    public static final java.lang.String CODE_LIST_SEPARATOR;
    private final org.codehaus.groovy.tools.shell.util.ANSI$Buffer buff;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer $r1;
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer r0;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Renderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.codehaus.groovy.tools.shell.util.ANSI$Buffer;

        specialinvoke $r1.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: void <init>()>();

        r0.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer buff> = $r1;

        return;
    }

    public java.lang.String render(java.lang.String) throws org.codehaus.groovy.tools.shell.util.ANSI$Renderer$RenderException
    {
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer$RenderException $r9;
        java.lang.AssertionError $r14;
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer $r2, $r4, $r7;
        java.lang.StringBuffer $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        java.lang.String r0, $r3, $r5, $r6, $r8, $r13;
        boolean $z0;
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer r1;

        r1 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Renderer;

        r0 := @parameter0: java.lang.String;

        $z0 = <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r0 != null goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        i7 = 0;

     label2:
        $i8 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 >= $i8 goto label5;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("@|", i7);

        if $i0 >= 0 goto label3;

        goto label5;

     label3:
        $i1 = <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: int BEGIN_TOKEN_SIZE>;

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("|", $i2);

        if $i3 >= 0 goto label4;

        $r9 = new org.codehaus.groovy.tools.shell.util.ANSI$Renderer$RenderException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Missing \'|\': ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer$RenderException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label4:
        $i4 = <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: int BEGIN_TOKEN_SIZE>;

        $i5 = $i0 + $i4;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i5, $i3);

        $r7 = r1.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer buff>;

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i7, $i0);

        virtualinvoke $r7.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer append(java.lang.String)>($r8);

        specialinvoke r1.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: void evaluate(java.lang.String)>($r6);

        $i6 = <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: int END_TOKEN_SIZE>;

        i7 = $i3 + $i6;

        goto label2;

     label5:
        $r2 = r1.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer buff>;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i7);

        virtualinvoke $r2.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer append(java.lang.String)>($r3);

        $r4 = r1.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer buff>;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: java.lang.String toString()>();

        return $r5;
    }

    private void evaluate(java.lang.String) throws org.codehaus.groovy.tools.shell.util.ANSI$Renderer$RenderException
    {
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer$RenderException $r9;
        java.lang.String[] $r2;
        java.lang.AssertionError $r14;
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer $r5, $r6, $r8;
        java.lang.StringBuffer $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r0, $r1, $r3, $r7, $r13;
        boolean $z0;
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer r4;

        r4 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Renderer;

        r0 := @parameter0: java.lang.String;

        $z0 = <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r0 != null goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(" ");

        if $i0 >= 0 goto label2;

        $r9 = new org.codehaus.groovy.tools.shell.util.ANSI$Renderer$RenderException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Missing ANSI code/text separator \' \': ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer$RenderException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        i5 = 0;

     label3:
        $i3 = lengthof $r2;

        if i5 >= $i3 goto label4;

        $r7 = $r2[i5];

        $i4 = staticinvoke <org.codehaus.groovy.tools.shell.util.ANSI$Code: int forName(java.lang.String)>($r7);

        $r8 = r4.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer buff>;

        virtualinvoke $r8.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer attrib(int)>($i4);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r5 = r4.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer buff>;

        virtualinvoke $r5.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer append(java.lang.String)>($r3);

        $r6 = r4.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer buff>;

        virtualinvoke $r6.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer attrib(int)>(0);

        return;
    }

    public static boolean test(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("@|");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String encode(java.lang.String, int)
    {
        java.lang.StringBuffer $r0, $r2, $r3, $r5, $r6;
        int i0;
        java.lang.String $r1, r4, $r7;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("@|");

        $r1 = staticinvoke <org.codehaus.groovy.tools.shell.util.ANSI$Code: java.lang.String name(int)>(i0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("|");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        int $i0, $i1;
        java.lang.Class $r0, $r3;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: java.lang.String CODE_LIST_SEPARATOR> = ",";

        <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: java.lang.String CODE_TEXT_SEPARATOR> = " ";

        <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: java.lang.String END_TOKEN> = "|";

        <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: java.lang.String BEGIN_TOKEN> = "@|";

        $r0 = <org.codehaus.groovy.tools.shell.util.ANSI: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <org.codehaus.groovy.tools.shell.util.ANSI: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.ANSI");

        <org.codehaus.groovy.tools.shell.util.ANSI: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI> = $r3;

        goto label2;

     label1:
        $r3 = <org.codehaus.groovy.tools.shell.util.ANSI: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI>;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: boolean $assertionsDisabled> = $z1;

        $r1 = "@|";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: int BEGIN_TOKEN_SIZE> = $i0;

        $r2 = "|";

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: int END_TOKEN_SIZE> = $i1;

        return;
    }
}
