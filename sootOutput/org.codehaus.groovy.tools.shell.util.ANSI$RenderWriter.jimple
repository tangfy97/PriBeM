public class org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter extends java.io.PrintWriter
{
    private final org.codehaus.groovy.tools.shell.util.ANSI$Renderer renderer;

    public void <init>(java.io.OutputStream)
    {
        org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter r0;
        java.io.OutputStream r1;
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer $r2;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r1);

        $r2 = new org.codehaus.groovy.tools.shell.util.ANSI$Renderer;

        specialinvoke $r2.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: void <init>()>();

        r0.<org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter: org.codehaus.groovy.tools.shell.util.ANSI$Renderer renderer> = $r2;

        return;
    }

    public void <init>(java.io.OutputStream, boolean)
    {
        org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter r0;
        java.io.OutputStream r1;
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer $r2;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>(r1, z0);

        $r2 = new org.codehaus.groovy.tools.shell.util.ANSI$Renderer;

        specialinvoke $r2.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: void <init>()>();

        r0.<org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter: org.codehaus.groovy.tools.shell.util.ANSI$Renderer renderer> = $r2;

        return;
    }

    public void <init>(java.io.Writer)
    {
        org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter r0;
        java.io.Writer r1;
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer $r2;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        $r2 = new org.codehaus.groovy.tools.shell.util.ANSI$Renderer;

        specialinvoke $r2.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: void <init>()>();

        r0.<org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter: org.codehaus.groovy.tools.shell.util.ANSI$Renderer renderer> = $r2;

        return;
    }

    public void <init>(java.io.Writer, boolean)
    {
        org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter r0;
        java.io.Writer r1;
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer $r2;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter;

        r1 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>(r1, z0);

        $r2 = new org.codehaus.groovy.tools.shell.util.ANSI$Renderer;

        specialinvoke $r2.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: void <init>()>();

        r0.<org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter: org.codehaus.groovy.tools.shell.util.ANSI$Renderer renderer> = $r2;

        return;
    }

    public void write(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter r1;
        java.lang.String r0, $r3;
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer $r2;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.codehaus.groovy.tools.shell.util.ANSI$Renderer: boolean test(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r2 = r1.<org.codehaus.groovy.tools.shell.util.ANSI$RenderWriter: org.codehaus.groovy.tools.shell.util.ANSI$Renderer renderer>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.tools.shell.util.ANSI$Renderer: java.lang.String render(java.lang.String)>(r0);

        specialinvoke r1.<java.io.PrintWriter: void write(java.lang.String)>($r3);

        goto label2;

     label1:
        specialinvoke r1.<java.io.PrintWriter: void write(java.lang.String)>(r0);

     label2:
        return;
    }
}
