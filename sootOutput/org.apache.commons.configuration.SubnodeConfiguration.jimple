public class org.apache.commons.configuration.SubnodeConfiguration extends org.apache.commons.configuration.HierarchicalConfiguration
{
    private static final long serialVersionUID;
    private org.apache.commons.configuration.HierarchicalConfiguration parent;
    private java.lang.String subnodeKey;

    public void <init>(org.apache.commons.configuration.HierarchicalConfiguration, org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        java.lang.IllegalArgumentException $r3, $r4;
        org.apache.commons.configuration.SubnodeConfiguration r0;
        org.apache.commons.configuration.tree.ConfigurationNode r2;

        r0 := @this: org.apache.commons.configuration.SubnodeConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration;

        r2 := @parameter1: org.apache.commons.configuration.tree.ConfigurationNode;

        specialinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parent configuration must not be null!");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Root node must not be null!");

        throw $r3;

     label2:
        virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: void setRootNode(org.apache.commons.configuration.tree.ConfigurationNode)>(r2);

        r0.<org.apache.commons.configuration.SubnodeConfiguration: org.apache.commons.configuration.HierarchicalConfiguration parent> = r1;

        virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: void initFromParent(org.apache.commons.configuration.HierarchicalConfiguration)>(r1);

        return;
    }

    public org.apache.commons.configuration.HierarchicalConfiguration getParent()
    {
        org.apache.commons.configuration.HierarchicalConfiguration $r1;
        org.apache.commons.configuration.SubnodeConfiguration r0;

        r0 := @this: org.apache.commons.configuration.SubnodeConfiguration;

        $r1 = r0.<org.apache.commons.configuration.SubnodeConfiguration: org.apache.commons.configuration.HierarchicalConfiguration parent>;

        return $r1;
    }

    public java.lang.String getSubnodeKey()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.SubnodeConfiguration r0;

        r0 := @this: org.apache.commons.configuration.SubnodeConfiguration;

        $r1 = r0.<org.apache.commons.configuration.SubnodeConfiguration: java.lang.String subnodeKey>;

        return $r1;
    }

    public void setSubnodeKey(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.SubnodeConfiguration r0;

        r0 := @this: org.apache.commons.configuration.SubnodeConfiguration;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.SubnodeConfiguration: java.lang.String subnodeKey> = r1;

        return;
    }

    public org.apache.commons.configuration.tree.ConfigurationNode getRootNode()
    {
        org.apache.commons.configuration.HierarchicalConfiguration $r2;
        java.lang.Exception $r8;
        org.apache.commons.configuration.tree.ConfigurationNode r6, $r7, $r9;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r1, $r3;
        org.apache.commons.configuration.SubnodeConfiguration r0;

        r0 := @this: org.apache.commons.configuration.SubnodeConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: java.lang.String getSubnodeKey()>();

        if $r1 == null goto label6;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: org.apache.commons.configuration.HierarchicalConfiguration getParent()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: java.lang.String getSubnodeKey()>();

        $r4 = virtualinvoke $r2.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>($r3);

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 == 1 goto label2;

        virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: void setSubnodeKey(java.lang.String)>(null);

        goto label4;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (org.apache.commons.configuration.tree.ConfigurationNode) $r5;

        $r7 = specialinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        if r6 == $r7 goto label3;

        virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: void setRootNode(org.apache.commons.configuration.tree.ConfigurationNode)>(r6);

     label3:
        return r6;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: void setSubnodeKey(java.lang.String)>(null);

     label6:
        $r9 = specialinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        return $r9;

        catch java.lang.Exception from label1 to label3 with label5;
    }

    protected org.apache.commons.configuration.SubnodeConfiguration createSubnodeConfiguration(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.HierarchicalConfiguration $r2, $r4;
        org.apache.commons.configuration.SubnodeConfiguration $r0, r1;
        org.apache.commons.configuration.tree.ConfigurationNode r3;

        r1 := @this: org.apache.commons.configuration.SubnodeConfiguration;

        r3 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $r0 = new org.apache.commons.configuration.SubnodeConfiguration;

        $r2 = virtualinvoke r1.<org.apache.commons.configuration.SubnodeConfiguration: org.apache.commons.configuration.HierarchicalConfiguration getParent()>();

        specialinvoke $r0.<org.apache.commons.configuration.SubnodeConfiguration: void <init>(org.apache.commons.configuration.HierarchicalConfiguration,org.apache.commons.configuration.tree.ConfigurationNode)>($r2, r3);

        $r4 = virtualinvoke r1.<org.apache.commons.configuration.SubnodeConfiguration: org.apache.commons.configuration.HierarchicalConfiguration getParent()>();

        virtualinvoke $r4.<org.apache.commons.configuration.HierarchicalConfiguration: void registerSubnodeConfiguration(org.apache.commons.configuration.SubnodeConfiguration)>($r0);

        return $r0;
    }

    protected org.apache.commons.configuration.SubnodeConfiguration createSubnodeConfiguration(org.apache.commons.configuration.tree.ConfigurationNode, java.lang.String)
    {
        org.apache.commons.configuration.tree.ExpressionEngine $r8;
        java.util.Iterator $r6;
        org.apache.commons.configuration.HierarchicalConfiguration $r7;
        org.apache.commons.configuration.tree.ConfigurationNode r1, $r5, $r10, r12;
        java.util.ArrayList $r4;
        java.lang.Object $r9;
        java.lang.String $r3, r11, r13;
        org.apache.commons.configuration.SubnodeConfiguration r0, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.SubnodeConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        r11 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: org.apache.commons.configuration.SubnodeConfiguration createSubnodeConfiguration(org.apache.commons.configuration.tree.ConfigurationNode)>(r1);

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: java.lang.String getSubnodeKey()>();

        if $r3 == null goto label5;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = specialinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        r12 = r1;

     label1:
        if r12 == $r5 goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r12);

        r12 = interfaceinvoke r12.<org.apache.commons.configuration.tree.ConfigurationNode: org.apache.commons.configuration.tree.ConfigurationNode getParentNode()>();

        goto label1;

     label2:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r4);

        r13 = virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: java.lang.String getSubnodeKey()>();

        $r6 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: org.apache.commons.configuration.HierarchicalConfiguration getParent()>();

        $r8 = virtualinvoke $r7.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine getExpressionEngine()>();

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.apache.commons.configuration.tree.ConfigurationNode) $r9;

        r13 = interfaceinvoke $r8.<org.apache.commons.configuration.tree.ExpressionEngine: java.lang.String nodeKey(org.apache.commons.configuration.tree.ConfigurationNode,java.lang.String)>($r10, r13);

        goto label3;

     label4:
        virtualinvoke $r2.<org.apache.commons.configuration.SubnodeConfiguration: void setSubnodeKey(java.lang.String)>(r13);

     label5:
        return $r2;
    }

    protected org.apache.commons.configuration.HierarchicalConfiguration$Node createNode(java.lang.String)
    {
        org.apache.commons.configuration.HierarchicalConfiguration $r1;
        java.lang.String r2;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r3;
        org.apache.commons.configuration.SubnodeConfiguration r0;

        r0 := @this: org.apache.commons.configuration.SubnodeConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: org.apache.commons.configuration.HierarchicalConfiguration getParent()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node createNode(java.lang.String)>(r2);

        return $r3;
    }

    protected void initFromParent(org.apache.commons.configuration.HierarchicalConfiguration)
    {
        org.apache.commons.configuration.tree.ExpressionEngine $r2;
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        char $c0;
        org.apache.commons.configuration.SubnodeConfiguration r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.SubnodeConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration;

        $r2 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine getExpressionEngine()>();

        virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: void setExpressionEngine(org.apache.commons.configuration.tree.ExpressionEngine)>($r2);

        $c0 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: char getListDelimiter()>();

        virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: void setListDelimiter(char)>($c0);

        $z0 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: boolean isDelimiterParsingDisabled()>();

        virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: void setDelimiterParsingDisabled(boolean)>($z0);

        $z1 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: boolean isThrowExceptionOnMissing()>();

        virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: void setThrowExceptionOnMissing(boolean)>($z1);

        return;
    }

    protected java.lang.Object interpolate(java.lang.Object)
    {
        org.apache.commons.configuration.HierarchicalConfiguration $r1;
        java.lang.Object r2, $r3;
        org.apache.commons.configuration.SubnodeConfiguration r0;

        r0 := @this: org.apache.commons.configuration.SubnodeConfiguration;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: org.apache.commons.configuration.HierarchicalConfiguration getParent()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.HierarchicalConfiguration: java.lang.Object interpolate(java.lang.Object)>(r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.configuration.SubnodeConfiguration: long serialVersionUID> = 3105734147019386480L;

        return;
    }
}
