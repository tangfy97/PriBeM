public final class org.apache.lucene.index.NoMergePolicy extends org.apache.lucene.index.MergePolicy
{
    public static final org.apache.lucene.index.MergePolicy NO_COMPOUND_FILES;
    public static final org.apache.lucene.index.MergePolicy COMPOUND_FILES;
    private final boolean useCompoundFile;

    private void <init>(boolean)
    {
        org.apache.lucene.index.NoMergePolicy r0;
        boolean z0;

        r0 := @this: org.apache.lucene.index.NoMergePolicy;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.lucene.index.MergePolicy: void <init>()>();

        r0.<org.apache.lucene.index.NoMergePolicy: boolean useCompoundFile> = z0;

        return;
    }

    public void close()
    {
        org.apache.lucene.index.NoMergePolicy r0;

        r0 := @this: org.apache.lucene.index.NoMergePolicy;

        return;
    }

    public org.apache.lucene.index.MergePolicy$MergeSpecification findMerges(org.apache.lucene.index.MergePolicy$MergeTrigger, org.apache.lucene.index.SegmentInfos)
    {
        org.apache.lucene.index.NoMergePolicy r0;
        org.apache.lucene.index.MergePolicy$MergeTrigger r1;
        org.apache.lucene.index.SegmentInfos r2;

        r0 := @this: org.apache.lucene.index.NoMergePolicy;

        r1 := @parameter0: org.apache.lucene.index.MergePolicy$MergeTrigger;

        r2 := @parameter1: org.apache.lucene.index.SegmentInfos;

        return null;
    }

    public org.apache.lucene.index.MergePolicy$MergeSpecification findForcedMerges(org.apache.lucene.index.SegmentInfos, int, java.util.Map)
    {
        org.apache.lucene.index.NoMergePolicy r0;
        java.util.Map r2;
        int i0;
        org.apache.lucene.index.SegmentInfos r1;

        r0 := @this: org.apache.lucene.index.NoMergePolicy;

        r1 := @parameter0: org.apache.lucene.index.SegmentInfos;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Map;

        return null;
    }

    public org.apache.lucene.index.MergePolicy$MergeSpecification findForcedDeletesMerges(org.apache.lucene.index.SegmentInfos)
    {
        org.apache.lucene.index.NoMergePolicy r0;
        org.apache.lucene.index.SegmentInfos r1;

        r0 := @this: org.apache.lucene.index.NoMergePolicy;

        r1 := @parameter0: org.apache.lucene.index.SegmentInfos;

        return null;
    }

    public boolean useCompoundFile(org.apache.lucene.index.SegmentInfos, org.apache.lucene.index.SegmentInfoPerCommit)
    {
        org.apache.lucene.index.NoMergePolicy r0;
        org.apache.lucene.index.SegmentInfoPerCommit r2;
        org.apache.lucene.index.SegmentInfos r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.NoMergePolicy;

        r1 := @parameter0: org.apache.lucene.index.SegmentInfos;

        r2 := @parameter1: org.apache.lucene.index.SegmentInfoPerCommit;

        $z0 = r0.<org.apache.lucene.index.NoMergePolicy: boolean useCompoundFile>;

        return $z0;
    }

    public void setIndexWriter(org.apache.lucene.index.IndexWriter)
    {
        org.apache.lucene.index.NoMergePolicy r0;
        org.apache.lucene.index.IndexWriter r1;

        r0 := @this: org.apache.lucene.index.NoMergePolicy;

        r1 := @parameter0: org.apache.lucene.index.IndexWriter;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.NoMergePolicy r0;

        r0 := @this: org.apache.lucene.index.NoMergePolicy;

        return "NoMergePolicy";
    }

    static void <clinit>()
    {
        org.apache.lucene.index.NoMergePolicy $r0, $r1;

        $r0 = new org.apache.lucene.index.NoMergePolicy;

        specialinvoke $r0.<org.apache.lucene.index.NoMergePolicy: void <init>(boolean)>(0);

        <org.apache.lucene.index.NoMergePolicy: org.apache.lucene.index.MergePolicy NO_COMPOUND_FILES> = $r0;

        $r1 = new org.apache.lucene.index.NoMergePolicy;

        specialinvoke $r1.<org.apache.lucene.index.NoMergePolicy: void <init>(boolean)>(1);

        <org.apache.lucene.index.NoMergePolicy: org.apache.lucene.index.MergePolicy COMPOUND_FILES> = $r1;

        return;
    }
}
