final class com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1 extends java.lang.Object implements com.mycila.inject.internal.guava.collect.BstBalancePolicy
{
    final com.mycila.inject.internal.guava.collect.BstAggregate val$countAggregate;

    void <init>(com.mycila.inject.internal.guava.collect.BstAggregate)
    {
        com.mycila.inject.internal.guava.collect.BstAggregate r1;
        com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.BstAggregate;

        r0.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1: com.mycila.inject.internal.guava.collect.BstAggregate val$countAggregate> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.mycila.inject.internal.guava.collect.BstNode balance(com.mycila.inject.internal.guava.collect.BstNodeFactory, com.mycila.inject.internal.guava.collect.BstNode, com.mycila.inject.internal.guava.collect.BstNode, com.mycila.inject.internal.guava.collect.BstNode)
    {
        com.mycila.inject.internal.guava.collect.BstNodeFactory r0, $r5;
        com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1 r7;
        com.mycila.inject.internal.guava.collect.BstNode r2, r3, r4, $r6;
        java.lang.Object $r1;

        r7 := @this: com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.BstNodeFactory;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.BstNode;

        r3 := @parameter2: com.mycila.inject.internal.guava.collect.BstNode;

        r4 := @parameter3: com.mycila.inject.internal.guava.collect.BstNode;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r5 = (com.mycila.inject.internal.guava.collect.BstNodeFactory) $r1;

        $r6 = virtualinvoke $r5.<com.mycila.inject.internal.guava.collect.BstNodeFactory: com.mycila.inject.internal.guava.collect.BstNode createNode(com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r2, r3, r4);

        return $r6;
    }

    public com.mycila.inject.internal.guava.collect.BstNode combine(com.mycila.inject.internal.guava.collect.BstNodeFactory, com.mycila.inject.internal.guava.collect.BstNode, com.mycila.inject.internal.guava.collect.BstNode)
    {
        com.mycila.inject.internal.guava.collect.BstAggregate $r3, $r4;
        com.mycila.inject.internal.guava.collect.BstNodeFactory r5;
        com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1 r2;
        int $i0, $i1;
        com.mycila.inject.internal.guava.collect.BstNode r0, r1, $r7, $r8, $r10, $r11, $r13, $r15, $r16, $r17;
        com.mycila.inject.internal.guava.collect.BstSide $r6, $r9, $r12, $r14;

        r2 := @this: com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1;

        r5 := @parameter0: com.mycila.inject.internal.guava.collect.BstNodeFactory;

        r0 := @parameter1: com.mycila.inject.internal.guava.collect.BstNode;

        r1 := @parameter2: com.mycila.inject.internal.guava.collect.BstNode;

        if r0 != null goto label1;

        return r1;

     label1:
        if r1 != null goto label2;

        return r0;

     label2:
        $r3 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1: com.mycila.inject.internal.guava.collect.BstAggregate val$countAggregate>;

        $i0 = interfaceinvoke $r3.<com.mycila.inject.internal.guava.collect.BstAggregate: int treeValue(com.mycila.inject.internal.guava.collect.BstNode)>(r0);

        $r4 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1: com.mycila.inject.internal.guava.collect.BstAggregate val$countAggregate>;

        $i1 = interfaceinvoke $r4.<com.mycila.inject.internal.guava.collect.BstAggregate: int treeValue(com.mycila.inject.internal.guava.collect.BstNode)>(r1);

        if $i0 <= $i1 goto label3;

        $r12 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide LEFT>;

        $r13 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r12);

        $r14 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide RIGHT>;

        $r15 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r14);

        $r16 = virtualinvoke r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1: com.mycila.inject.internal.guava.collect.BstNode combine(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, $r15, r1);

        $r17 = virtualinvoke r5.<com.mycila.inject.internal.guava.collect.BstNodeFactory: com.mycila.inject.internal.guava.collect.BstNode createNode(com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r0, $r13, $r16);

        return $r17;

     label3:
        $r6 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide LEFT>;

        $r7 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r6);

        $r8 = virtualinvoke r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$1: com.mycila.inject.internal.guava.collect.BstNode combine(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, r0, $r7);

        $r9 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide RIGHT>;

        $r10 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r9);

        $r11 = virtualinvoke r5.<com.mycila.inject.internal.guava.collect.BstNodeFactory: com.mycila.inject.internal.guava.collect.BstNode createNode(com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r1, $r8, $r10);

        return $r11;
    }
}
