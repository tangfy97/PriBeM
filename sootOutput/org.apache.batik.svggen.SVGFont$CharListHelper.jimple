class org.apache.batik.svggen.SVGFont$CharListHelper extends java.lang.Object
{
    private int nUsed;
    private int[] charList;
    private java.lang.StringBuffer freshChars;

    void <init>()
    {
        org.apache.batik.svggen.SVGFont$CharListHelper r0;
        int[] $r1;
        java.lang.StringBuffer $r2;

        r0 := @this: org.apache.batik.svggen.SVGFont$CharListHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int nUsed> = 0;

        $r1 = newarray (int)[40];

        r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int[] charList> = $r1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>(40);

        r0.<org.apache.batik.svggen.SVGFont$CharListHelper: java.lang.StringBuffer freshChars> = $r2;

        return;
    }

    java.lang.String getNewChars()
    {
        org.apache.batik.svggen.SVGFont$CharListHelper r0;
        java.lang.String $r2;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.batik.svggen.SVGFont$CharListHelper;

        $r1 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: java.lang.StringBuffer freshChars>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    void clearNewChars()
    {
        org.apache.batik.svggen.SVGFont$CharListHelper r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.batik.svggen.SVGFont$CharListHelper;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(40);

        r0.<org.apache.batik.svggen.SVGFont$CharListHelper: java.lang.StringBuffer freshChars> = $r1;

        return;
    }

    boolean add(int)
    {
        int[] $r1, $r2, $r3, $r4, $r5, r7, $r8;
        java.lang.StringBuffer $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15;
        char $c9;
        org.apache.batik.svggen.SVGFont$CharListHelper r0;

        r0 := @this: org.apache.batik.svggen.SVGFont$CharListHelper;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int[] charList>;

        $i1 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int nUsed>;

        $i2 = staticinvoke <org.apache.batik.svggen.SVGFont$CharListHelper: int binSearch(int[],int,int)>($r1, $i1, i0);

        if $i2 < 0 goto label1;

        return 0;

     label1:
        $i4 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int nUsed>;

        $r2 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int[] charList>;

        $i3 = lengthof $r2;

        if $i4 != $i3 goto label2;

        $i12 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int nUsed>;

        $i13 = $i12 + 20;

        r7 = newarray (int)[$i13];

        $r8 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int[] charList>;

        $i14 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int nUsed>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r7, 0, $i14);

        r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int[] charList> = r7;

     label2:
        $i5 = neg $i2;

        $i15 = $i5 - 1;

        $r4 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int[] charList>;

        $r3 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int[] charList>;

        $i8 = $i15 + 1;

        $i6 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int nUsed>;

        $i7 = $i6 - $i15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i15, $r3, $i8, $i7);

        $r5 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int[] charList>;

        $r5[$i15] = i0;

        $r6 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: java.lang.StringBuffer freshChars>;

        $c9 = (char) i0;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        $i10 = r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int nUsed>;

        $i11 = $i10 + 1;

        r0.<org.apache.batik.svggen.SVGFont$CharListHelper: int nUsed> = $i11;

        return 1;
    }

    static int binSearch(int[], int, int)
    {
        int[] r0;
        int i0, $i1, i2, i3, i4, $i5, $i6, i7, i8;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i4 := @parameter2: int;

        i7 = 0;

        i8 = i0 - 1;

        goto label4;

     label1:
        $i1 = i7 + i8;

        i2 = $i1 >>> 1;

        i3 = r0[i2];

        if i3 >= i4 goto label2;

        i7 = i2 + 1;

        goto label4;

     label2:
        if i3 <= i4 goto label3;

        i8 = i2 - 1;

        goto label4;

     label3:
        return i2;

     label4:
        if i7 <= i8 goto label1;

        $i5 = i7 + 1;

        $i6 = neg $i5;

        return $i6;
    }
}
