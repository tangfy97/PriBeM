public class org.waveprotocol.wave.client.editor.content.HtmlPoint extends java.lang.Object
{
    private com.google.gwt.dom.client.Node node;
    private int offset;
    static final boolean $assertionsDisabled;

    public void <init>(com.google.gwt.dom.client.Node, int)
    {
        org.waveprotocol.wave.client.editor.content.HtmlPoint r0;
        int i0;
        java.lang.AssertionError $r2;
        com.google.gwt.dom.client.Node r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.HtmlPoint;

        r1 := @parameter0: com.google.gwt.dom.client.Node;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <org.waveprotocol.wave.client.editor.content.HtmlPoint: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 >= 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: com.google.gwt.dom.client.Node node> = r1;

        r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: int offset> = i0;

        return;
    }

    public com.google.gwt.dom.client.Node getNode()
    {
        org.waveprotocol.wave.client.editor.content.HtmlPoint r0;
        com.google.gwt.dom.client.Node $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.HtmlPoint;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: com.google.gwt.dom.client.Node node>;

        return $r1;
    }

    public void setNode(com.google.gwt.dom.client.Node)
    {
        org.waveprotocol.wave.client.editor.content.HtmlPoint r0;
        com.google.gwt.dom.client.Node r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.HtmlPoint;

        r1 := @parameter0: com.google.gwt.dom.client.Node;

        r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: com.google.gwt.dom.client.Node node> = r1;

        return;
    }

    public int getOffset()
    {
        int $i0;
        org.waveprotocol.wave.client.editor.content.HtmlPoint r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.HtmlPoint;

        $i0 = r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: int offset>;

        return $i0;
    }

    public void setOffset(int)
    {
        org.waveprotocol.wave.client.editor.content.HtmlPoint r0;
        int i0;
        java.lang.AssertionError $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.HtmlPoint;

        i0 := @parameter0: int;

        $z0 = <org.waveprotocol.wave.client.editor.content.HtmlPoint: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 >= 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: int offset> = i0;

        return;
    }

    public org.waveprotocol.wave.model.document.util.Point toPoint()
    {
        org.waveprotocol.wave.client.editor.content.HtmlPoint r0;
        java.lang.AssertionError $r3;
        int $i0, $i1, $i2, $i3;
        com.google.gwt.dom.client.Node $r1, $r4;
        org.waveprotocol.wave.model.document.util.Point $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.HtmlPoint;

        $z0 = <org.waveprotocol.wave.client.editor.content.HtmlPoint: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i1 = r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: int offset>;

        if $i1 < 0 goto label1;

        $i2 = r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: int offset>;

        $r4 = r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: com.google.gwt.dom.client.Node node>;

        $i3 = virtualinvoke $r4.<com.google.gwt.dom.client.Node: int getChildCount()>();

        if $i2 < $i3 goto label2;

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r1 = r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: com.google.gwt.dom.client.Node node>;

        $i0 = r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: int offset>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.common.util.DomHelper: org.waveprotocol.wave.model.document.util.Point nodeOffsetToNodeletPoint(com.google.gwt.dom.client.Node,int)>($r1, $i0);

        return $r2;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.document.util.PointRange $r1;
        org.waveprotocol.wave.client.editor.content.HtmlPoint r0;
        java.lang.String $r4;
        com.google.gwt.dom.client.Node $r2;
        org.waveprotocol.wave.model.document.util.Point $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.content.HtmlPoint;

        $r2 = r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: com.google.gwt.dom.client.Node node>;

        $r1 = new org.waveprotocol.wave.model.document.util.PointRange;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.HtmlPoint: org.waveprotocol.wave.model.document.util.Point toPoint()>();

        specialinvoke $r1.<org.waveprotocol.wave.model.document.util.PointRange: void <init>(org.waveprotocol.wave.model.document.util.Point)>($r3);

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.HTMLPretty: java.lang.String printSingleLine(com.google.gwt.dom.client.Node,org.waveprotocol.wave.model.document.util.PointRange)>($r2, $r1);

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/client/editor/content/HtmlPoint;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.client.editor.content.HtmlPoint: boolean $assertionsDisabled> = $z1;

        return;
    }
}
