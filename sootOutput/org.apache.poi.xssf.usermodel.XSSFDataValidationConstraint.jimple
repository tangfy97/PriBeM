public class org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint extends java.lang.Object implements org.apache.poi.ss.usermodel.DataValidationConstraint
{
    private java.lang.String formula1;
    private java.lang.String formula2;
    private int validationType;
    private int operator;
    private java.lang.String[] explicitListOfValues;

    public void <init>(java.lang.String[])
    {
        int $i0, $i2, $i4;
        java.lang.String[] r1;
        java.lang.IllegalArgumentException $r3;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType> = $i2;

        $i4 = (int) -1;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator> = $i4;

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List validation with explicit values must specify at least one value");

        throw $r3;

     label2:
        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType> = 3;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: void setExplicitListValues(java.lang.String[])>(r1);

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: void validate()>();

        return;
    }

    public void <init>(int, java.lang.String)
    {
        int i0, $i2, $i4;
        java.lang.String r1;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType> = $i2;

        $i4 = (int) -1;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator> = $i4;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: void setFormula1(java.lang.String)>(r1);

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType> = i0;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: void validate()>();

        return;
    }

    public void <init>(int, int, java.lang.String)
    {
        int i0, i1, $i3, $i5;
        java.lang.String r1;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i3 = (int) -1;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType> = $i3;

        $i5 = (int) -1;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator> = $i5;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: void setFormula1(java.lang.String)>(r1);

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType> = i0;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator> = i1;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: void validate()>();

        return;
    }

    public void <init>(int, int, java.lang.String, java.lang.String)
    {
        java.lang.String[] $r3;
        int i0, i1, $i3, $i5;
        java.lang.String r1, r2;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i3 = (int) -1;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType> = $i3;

        $i5 = (int) -1;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator> = $i5;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: void setFormula1(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: void setFormula2(java.lang.String)>(r2);

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType> = i0;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator> = i1;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: void validate()>();

        if 3 != i0 goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String[] explicitListOfValues> = $r3;

     label1:
        return;
    }

    public java.lang.String[] getExplicitListValues()
    {
        java.lang.String[] $r1;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String[] explicitListOfValues>;

        return $r1;
    }

    public java.lang.String getFormula1()
    {
        java.lang.String $r1;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String formula1>;

        return $r1;
    }

    public java.lang.String getFormula2()
    {
        java.lang.String $r1;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String formula2>;

        return $r1;
    }

    public int getOperator()
    {
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        $i0 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator>;

        return $i0;
    }

    public int getValidationType()
    {
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        $i0 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType>;

        return $i0;
    }

    public void setExplicitListValues(java.lang.String[])
    {
        java.lang.String[] r1, $r2, $r3;
        int $i0, $i1, $i2, i3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, r6;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        r1 := @parameter0: java.lang.String[];

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String[] explicitListOfValues> = r1;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String[] explicitListOfValues>;

        if $r2 == null goto label4;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String[] explicitListOfValues>;

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("\"");

        i3 = 0;

     label1:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label3;

        r6 = r1[i3];

        $i2 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();

        if $i2 <= 1 goto label2;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        i3 = i3 + 1;

        goto label1;

     label3:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: void setFormula1(java.lang.String)>($r5);

     label4:
        return;
    }

    public void setFormula1(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String removeLeadingEquals(java.lang.String)>(r1);

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String formula1> = $r2;

        return;
    }

    protected java.lang.String removeLeadingEquals(java.lang.String)
    {
        int $i1;
        char $c0;
        java.lang.String r1, $r2;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: boolean isFormulaEmpty(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r1;

        goto label3;

     label1:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        if $i1 != 61 goto label2;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        goto label3;

     label2:
        $r2 = r1;

     label3:
        return $r2;
    }

    public void setFormula2(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String removeLeadingEquals(java.lang.String)>(r1);

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String formula2> = $r2;

        return;
    }

    public void setOperator(int)
    {
        int i0;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        i0 := @parameter0: int;

        r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator> = i0;

        return;
    }

    public void validate()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String $r1, $r2, $r6;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r0;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        $i0 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType>;

        if $i1 != 3 goto label2;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String formula1>;

        $z2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: boolean isFormulaEmpty(java.lang.String)>($r6);

        if $z2 == 0 goto label6;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A valid formula or a list of values must be specified for list validation.");

        throw $r8;

     label2:
        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String formula1>;

        $z0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: boolean isFormulaEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Formula is not specified. Formula is required for all validation types except explicit list validation.");

        throw $r9;

     label3:
        $i2 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType>;

        if $i2 == 7 goto label6;

        $i3 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator>;

        $i7 = (int) -1;

        if $i3 != $i7 goto label4;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("This validation type requires an operator to be specified.");

        throw $r10;

     label4:
        $i4 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator>;

        if $i4 == 0 goto label5;

        $i5 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator>;

        if $i5 != 1 goto label6;

     label5:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String formula2>;

        $z1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: boolean isFormulaEmpty(java.lang.String)>($r2);

        if $z1 == 0 goto label6;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Between and not between comparisons require two formulae to be specified.");

        throw $r11;

     label6:
        return;
    }

    protected boolean isFormulaEmpty(java.lang.String)
    {
        int $i0;
        java.lang.String r0, $r1;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r2;
        boolean $z0;

        r2 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.lang.String prettyPrint()
    {
        java.lang.Integer $r3, $r7;
        java.util.Map $r2, $r6;
        java.util.List $r21;
        java.lang.StringBuilder $r0, $r10, $r12, $r13, $r14, $r16, $r17, $r19, $r22, $r23, $r24, $r25;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STDataValidationType$Enum r5;
        java.lang.String[] $r18, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STDataValidationOperator$Enum r9;
        java.lang.String $r11, $r15, $r26, $r27;
        org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint r1;
        java.lang.Object $r4, $r8;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = <org.apache.poi.xssf.usermodel.XSSFDataValidation: java.util.Map validationTypeMappings>;

        $i0 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.STDataValidationType$Enum) $r4;

        $r6 = <org.apache.poi.xssf.usermodel.XSSFDataValidation: java.util.Map operatorTypeMappings>;

        $i1 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int operator>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r9 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.STDataValidationOperator$Enum) $r8;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $i2 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType>;

        if $i2 == 0 goto label4;

        $i3 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType>;

        if $i3 == 3 goto label1;

        $i4 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType>;

        if $i4 == 0 goto label1;

        $i5 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType>;

        if $i5 == 7 goto label1;

        $r24 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label1:
        $i6 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: int validationType>;

        if $i6 != 3 goto label2;

        $r18 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String[] explicitListOfValues>;

        if $r18 == null goto label2;

        $r19 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r20 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String[] explicitListOfValues>;

        $r21 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label3;

     label2:
        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String formula1>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label3:
        $r26 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String formula2>;

        if $r26 == null goto label4;

        $r14 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r15 = r1.<org.apache.poi.xssf.usermodel.XSSFDataValidationConstraint: java.lang.String formula2>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label4:
        $r27 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r27;
    }
}
