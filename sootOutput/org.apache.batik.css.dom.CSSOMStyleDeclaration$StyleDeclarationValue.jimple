public class org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue extends org.apache.batik.css.dom.CSSOMValue implements org.apache.batik.css.dom.CSSOMValue$ValueProvider
{
    protected java.lang.String property;
    private final org.apache.batik.css.dom.CSSOMStyleDeclaration this$0;

    public void <init>(org.apache.batik.css.dom.CSSOMStyleDeclaration, java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration$1 $r2;
        org.apache.batik.css.dom.CSSOMStyleDeclaration r1;
        java.lang.String r3;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue;

        r1 := @parameter0: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.batik.css.dom.CSSOMValue: void <init>(org.apache.batik.css.dom.CSSOMValue$ValueProvider)>(null);

        r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue: org.apache.batik.css.dom.CSSOMStyleDeclaration this$0> = r1;

        r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider> = r0;

        $r2 = new org.apache.batik.css.dom.CSSOMStyleDeclaration$1;

        specialinvoke $r2.<org.apache.batik.css.dom.CSSOMStyleDeclaration$1: void <init>(org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue)>(r0);

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMValue: void setModificationHandler(org.apache.batik.css.dom.CSSOMValue$ModificationHandler)>($r2);

        r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue: java.lang.String property> = r3;

        return;
    }

    public org.apache.batik.css.engine.value.Value getValue()
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider $r3;
        org.apache.batik.css.dom.CSSOMStyleDeclaration $r1;
        java.lang.String $r2;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue r0;
        org.apache.batik.css.engine.value.Value $r4;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue: org.apache.batik.css.dom.CSSOMStyleDeclaration this$0>;

        $r3 = $r1.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider valueProvider>;

        $r2 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue: java.lang.String property>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider: org.apache.batik.css.engine.value.Value getValue(java.lang.String)>($r2);

        return $r4;
    }

    static org.apache.batik.css.dom.CSSOMStyleDeclaration access$000(org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue)
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration $r1;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue r0;

        r0 := @parameter0: org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue: org.apache.batik.css.dom.CSSOMStyleDeclaration this$0>;

        return $r1;
    }
}
