public class com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler extends com.hp.hpl.jena.assembler.assemblers.AssemblerBase implements com.hp.hpl.jena.assembler.Assembler
{

    public void <init>()
    {
        com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler;

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: void <init>()>();

        return;
    }

    public java.lang.Object open(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r3;
        com.hp.hpl.jena.reasoner.ReasonerFactory $r4, $r5, $r6;
        com.hp.hpl.jena.assembler.Mode r7;
        com.hp.hpl.jena.rdf.model.Resource r1, $r2;
        com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler;

        r3 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r7 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Resource ReasonerFactory>;

        virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: void checkType(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>(r1, $r2);

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.reasoner.ReasonerFactory getReasonerFactory(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        $r5 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.reasoner.ReasonerFactory addRules(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.reasoner.ReasonerFactory)>(r1, r3, $r4);

        $r6 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.reasoner.ReasonerFactory addSchema(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.reasoner.ReasonerFactory)>(r1, r3, $r5);

        return $r6;
    }

    private com.hp.hpl.jena.reasoner.ReasonerFactory addSchema(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.reasoner.ReasonerFactory)
    {
        com.hp.hpl.jena.assembler.Assembler r4;
        com.hp.hpl.jena.reasoner.ReasonerFactory r2;
        com.hp.hpl.jena.rdf.model.Resource r0;
        com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler$1 $r6;
        com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler r3;
        com.hp.hpl.jena.rdf.model.Property $r1;
        com.hp.hpl.jena.graph.Graph $r5;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter1: com.hp.hpl.jena.assembler.Assembler;

        r2 := @parameter2: com.hp.hpl.jena.reasoner.ReasonerFactory;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property ja_schema>;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r3.<com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.graph.Graph loadSchema(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Assembler)>(r0, r4);

        $r6 = new com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler$1;

        specialinvoke $r6.<com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler$1: void <init>(com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler,com.hp.hpl.jena.reasoner.ReasonerFactory,com.hp.hpl.jena.graph.Graph)>(r3, r2, $r5);

        return $r6;

     label1:
        return r2;
    }

    private com.hp.hpl.jena.graph.Graph loadSchema(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Assembler)
    {
        com.hp.hpl.jena.assembler.Assembler r5;
        com.hp.hpl.jena.rdf.model.Statement $r6;
        com.hp.hpl.jena.rdf.model.Resource r1, $r7;
        com.hp.hpl.jena.rdf.model.StmtIterator $r3;
        com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler r4;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.graph.Graph $r0;
        boolean $z0;

        r4 := @this: com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r5 := @parameter1: com.hp.hpl.jena.assembler.Assembler;

        $r0 = staticinvoke <com.hp.hpl.jena.graph.Factory: com.hp.hpl.jena.graph.Graph createDefaultGraph()>();

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property ja_schema>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r2);

     label1:
        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r7 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.rdf.model.Resource getResource(com.hp.hpl.jena.rdf.model.Statement)>($r6);

        specialinvoke r4.<com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: void loadSchema(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>($r0, r5, $r7);

        goto label1;

     label2:
        return $r0;
    }

    private void loadSchema(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r0;
        com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler r5;
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.graph.Graph r3, $r4;

        r5 := @this: com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler;

        r3 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r0 := @parameter1: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter2: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.assembler.Assembler: com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        staticinvoke <com.hp.hpl.jena.graph.GraphUtil: void addInto(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>(r3, $r4);

        return;
    }

    private com.hp.hpl.jena.reasoner.ReasonerFactory addRules(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.reasoner.ReasonerFactory)
    {
        com.hp.hpl.jena.assembler.Assembler r1;
        com.hp.hpl.jena.reasoner.ReasonerFactory r4;
        com.hp.hpl.jena.assembler.exceptions.CannotHaveRulesException $r5;
        com.hp.hpl.jena.rdf.model.Resource r2;
        java.util.ArrayList $r0;
        com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler$2 $r6;
        java.util.List $r3;
        com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler r7;
        int $i0;
        boolean $z0;

        r7 := @this: com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.assembler.Assembler;

        r4 := @parameter2: com.hp.hpl.jena.reasoner.ReasonerFactory;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler: java.util.List addRules(java.util.List,com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>($r0, r1, r2);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $z0 = r4 instanceof com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasonerFactory;

        if $z0 == 0 goto label1;

        $r6 = new com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler$2;

        specialinvoke $r6.<com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler$2: void <init>(com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler,com.hp.hpl.jena.reasoner.ReasonerFactory,java.util.List)>(r7, r4, $r3);

        return $r6;

     label1:
        $r5 = new com.hp.hpl.jena.assembler.exceptions.CannotHaveRulesException;

        specialinvoke $r5.<com.hp.hpl.jena.assembler.exceptions.CannotHaveRulesException: void <init>(com.hp.hpl.jena.rdf.model.Resource)>(r2);

        throw $r5;

     label2:
        return r4;
    }

    protected com.hp.hpl.jena.reasoner.Reasoner getReasoner(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r1;
        com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler r3;
        com.hp.hpl.jena.reasoner.Reasoner $r2;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r3 := @this: com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.reasoner.ReasonerFactory getReasonerFactory(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.reasoner.Reasoner create(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        return $r2;
    }

    protected static com.hp.hpl.jena.reasoner.ReasonerFactory getReasonerFactory(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r4;
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.String $r3;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property reasonerURL>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        $r3 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: java.lang.String getOptionalClassName(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        if $r3 == null goto label1;

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.reasoner.ReasonerFactory getReasonerFactoryByClassName(com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(r0, $r3);

        goto label3;

     label1:
        if $r2 != null goto label2;

        $r4 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasonerFactory: com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasonerFactory theInstance()>();

        goto label3;

     label2:
        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.reasoner.ReasonerFactory getReasonerFactoryByURL(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>(r0, $r2);

     label3:
        return $r4;
    }

    private static com.hp.hpl.jena.reasoner.ReasonerFactory getReasonerFactoryByClassName(com.hp.hpl.jena.rdf.model.Resource, java.lang.String)
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r3, $r4;
        java.lang.Class $r2;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: java.lang.Class loadClass(com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(r0, r1);

        staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: void mustBeReasonerFactory(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>(r0, $r2);

        $r3 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.reasoner.ReasonerFactory resultFromStatic(java.lang.Class,java.lang.String)>($r2, "theInstance");

        if $r3 != null goto label1;

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.reasoner.ReasonerFactory createInstance(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>(r0, $r2);

        goto label2;

     label1:
        $r4 = $r3;

     label2:
        return $r4;
    }

    private static com.hp.hpl.jena.reasoner.ReasonerFactory createInstance(com.hp.hpl.jena.rdf.model.Resource, java.lang.Class)
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r2;
        java.lang.Exception $r3;
        com.hp.hpl.jena.rdf.model.Resource r5;
        com.hp.hpl.jena.assembler.exceptions.AssemblerException $r4;
        java.lang.Class r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;

        r5 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter1: java.lang.Class;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        $r2 = (com.hp.hpl.jena.reasoner.ReasonerFactory) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new com.hp.hpl.jena.assembler.exceptions.AssemblerException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not create instance of ");

        $r8 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: void <init>(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,java.lang.Throwable)>(r5, $r10, $r3);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static com.hp.hpl.jena.reasoner.ReasonerFactory resultFromStatic(java.lang.Class, java.lang.String)
    {
        java.lang.Object[] $r4;
        com.hp.hpl.jena.reasoner.ReasonerFactory $r6;
        java.lang.Class[] $r2;
        java.lang.Exception $r7;
        java.lang.Class r0;
        java.lang.Object $r5;
        java.lang.String r1;
        java.lang.reflect.Method $r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = (java.lang.Class[]) null;

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, $r2);

        $r4 = (java.lang.Object[]) null;

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

        $r6 = (com.hp.hpl.jena.reasoner.ReasonerFactory) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void mustBeReasonerFactory(com.hp.hpl.jena.rdf.model.Resource, java.lang.Class)
    {
        com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException $r2;
        java.lang.Class r0, $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;
        boolean $z0;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter1: java.lang.Class;

        $r1 = class "Lcom/hp/hpl/jena/reasoner/ReasonerFactory;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r2 = new com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException;

        specialinvoke $r2.<com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException: void <init>(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class,java.lang.Class)>(r3, class "Lcom/hp/hpl/jena/reasoner/ReasonerFactory;", r0);

        throw $r2;

     label1:
        return;
    }

    private static java.lang.String getOptionalClassName(com.hp.hpl.jena.rdf.model.Resource)
    {
        java.lang.String $r2;
        com.hp.hpl.jena.rdf.model.Resource r0;
        com.hp.hpl.jena.rdf.model.Property $r1;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property reasonerClass>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: java.lang.String getOptionalClassName(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        return $r2;
    }

    public static com.hp.hpl.jena.reasoner.ReasonerFactory getReasonerFactoryByURL(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.reasoner.ReasonerRegistry $r2;
        com.hp.hpl.jena.reasoner.ReasonerFactory $r3;
        com.hp.hpl.jena.assembler.exceptions.UnknownReasonerException $r4;
        java.lang.String $r1;
        com.hp.hpl.jena.rdf.model.Resource r0, r5;

        r5 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $r2 = staticinvoke <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.ReasonerRegistry theRegistry()>();

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.ReasonerFactory getFactory(java.lang.String)>($r1);

        if $r3 != null goto label1;

        $r4 = new com.hp.hpl.jena.assembler.exceptions.UnknownReasonerException;

        specialinvoke $r4.<com.hp.hpl.jena.assembler.exceptions.UnknownReasonerException: void <init>(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>(r5, r0);

        throw $r4;

     label1:
        return $r3;
    }
}
