public class org.waveprotocol.wave.model.document.indexed.IndexedDocProvider extends java.lang.Object implements org.waveprotocol.wave.model.document.indexed.IndexedDocument$Provider
{
    private final org.waveprotocol.wave.model.document.raw.RawDocument$Provider substrateProvider;
    private static final java.lang.Object ONE_OBJECT;
    private static final java.lang.Object ANOTHER_OBJECT;

    public static org.waveprotocol.wave.model.document.indexed.IndexedDocProvider create(org.waveprotocol.wave.model.document.raw.RawDocument$Provider)
    {
        org.waveprotocol.wave.model.document.raw.RawDocument$Provider r1;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider $r0;

        r1 := @parameter0: org.waveprotocol.wave.model.document.raw.RawDocument$Provider;

        $r0 = new org.waveprotocol.wave.model.document.indexed.IndexedDocProvider;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: void <init>(org.waveprotocol.wave.model.document.raw.RawDocument$Provider)>(r1);

        return $r0;
    }

    private void <init>(org.waveprotocol.wave.model.document.raw.RawDocument$Provider)
    {
        org.waveprotocol.wave.model.document.raw.RawDocument$Provider r1;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider;

        r1 := @parameter0: org.waveprotocol.wave.model.document.raw.RawDocument$Provider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.raw.RawDocument$Provider substrateProvider> = r1;

        return;
    }

    private org.waveprotocol.wave.model.document.indexed.IndexedDocument adapt(org.waveprotocol.wave.model.document.raw.RawDocument, org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)
    {
        org.waveprotocol.wave.model.document.raw.RawDocument r4;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r3;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider r6;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema r5;
        java.lang.Object $r1, $r2;
        org.waveprotocol.wave.model.document.indexed.AnnotationTree $r0;

        r6 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider;

        r4 := @parameter0: org.waveprotocol.wave.model.document.raw.RawDocument;

        r5 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema;

        $r0 = new org.waveprotocol.wave.model.document.indexed.AnnotationTree;

        $r2 = <org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: java.lang.Object ONE_OBJECT>;

        $r1 = <org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: java.lang.Object ANOTHER_OBJECT>;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.indexed.AnnotationTree: void <init>(java.lang.Object,java.lang.Object,org.waveprotocol.wave.model.document.indexed.AnnotationSetListener)>($r2, $r1, null);

        $r3 = new org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl;

        specialinvoke $r3.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void <init>(org.waveprotocol.wave.model.document.raw.RawDocument,org.waveprotocol.wave.model.document.indexed.RawAnnotationSet,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)>(r4, $r0, r5);

        return $r3;
    }

    public org.waveprotocol.wave.model.document.indexed.IndexedDocument create(java.lang.String, java.util.Map)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument $r7;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema $r5;
        org.waveprotocol.wave.model.document.raw.RawDocument$Provider $r3;
        org.waveprotocol.wave.model.document.raw.RawDocument $r6;
        java.util.Map r2;
        java.lang.Object $r4;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.raw.RawDocument$Provider substrateProvider>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.document.raw.RawDocument$Factory: java.lang.Object create(java.lang.String,java.util.Map)>(r1, r2);

        $r6 = (org.waveprotocol.wave.model.document.raw.RawDocument) $r4;

        $r5 = <org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema NO_SCHEMA_CONSTRAINTS>;

        $r7 = specialinvoke r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.indexed.IndexedDocument adapt(org.waveprotocol.wave.model.document.raw.RawDocument,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)>($r6, $r5);

        return $r7;
    }

    public org.waveprotocol.wave.model.document.indexed.IndexedDocument parse(java.lang.String)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument $r4;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema $r3;
        org.waveprotocol.wave.model.document.operation.DocInitialization $r1;
        org.waveprotocol.wave.model.document.parser.XmlParseException $r5;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r6;

        r2 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: org.waveprotocol.wave.model.document.operation.DocInitialization docInitializationFromXml(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label4:
        $r3 = <org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema NO_SCHEMA_CONSTRAINTS>;

        $r4 = virtualinvoke r2.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.indexed.IndexedDocument build(org.waveprotocol.wave.model.document.operation.DocInitialization,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)>($r1, $r3);

        return $r4;

        catch org.waveprotocol.wave.model.document.parser.XmlParseException from label1 to label2 with label3;
    }

    public org.waveprotocol.wave.model.document.indexed.IndexedDocument build(org.waveprotocol.wave.model.document.operation.DocInitialization, org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r3;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider r4;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema r8;
        org.waveprotocol.wave.model.document.raw.RawDocument$Provider $r6;
        org.waveprotocol.wave.model.document.operation.DocInitialization r10;
        org.waveprotocol.wave.model.document.indexed.AnnotationTree $r0;
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl $r5;
        org.waveprotocol.wave.model.document.raw.RawDocument $r9;
        org.waveprotocol.wave.model.operation.OperationException $r11;
        java.lang.Object $r1, $r2, $r7;
        org.waveprotocol.wave.model.operation.OperationRuntimeException $r12;

        r4 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider;

        r10 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

        r8 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema;

        $r0 = new org.waveprotocol.wave.model.document.indexed.AnnotationTree;

        $r2 = <org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: java.lang.Object ONE_OBJECT>;

        $r1 = <org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: java.lang.Object ANOTHER_OBJECT>;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.indexed.AnnotationTree: void <init>(java.lang.Object,java.lang.Object,org.waveprotocol.wave.model.document.indexed.AnnotationSetListener)>($r2, $r1, null);

        $r3 = new org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl;

        $r6 = r4.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.raw.RawDocument$Provider substrateProvider>;

        $r5 = <org.waveprotocol.wave.model.document.operation.Attributes: org.waveprotocol.wave.model.document.operation.impl.AttributesImpl EMPTY_MAP>;

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.document.raw.RawDocument$Provider: java.lang.Object create(java.lang.String,java.util.Map)>("doc", $r5);

        $r9 = (org.waveprotocol.wave.model.document.raw.RawDocument) $r7;

        specialinvoke $r3.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void <init>(org.waveprotocol.wave.model.document.raw.RawDocument,org.waveprotocol.wave.model.document.indexed.RawAnnotationSet,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)>($r9, $r0, r8);

     label1:
        virtualinvoke $r3.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void consume(org.waveprotocol.wave.model.document.operation.DocOp)>(r10);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new org.waveprotocol.wave.model.operation.OperationRuntimeException;

        specialinvoke $r12.<org.waveprotocol.wave.model.operation.OperationRuntimeException: void <init>(java.lang.String,org.waveprotocol.wave.model.operation.OperationException)>("Invalid initialization", $r11);

        throw $r12;

     label4:
        return $r3;

        catch org.waveprotocol.wave.model.operation.OperationException from label1 to label2 with label3;
    }

    public org.waveprotocol.wave.model.document.indexed.IndexedDocument build(org.waveprotocol.wave.model.document.operation.DocInitialization, org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema, org.waveprotocol.wave.model.document.indexed.DocumentHandler) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema r6;
        org.waveprotocol.wave.model.document.raw.RawDocument$Provider $r4;
        org.waveprotocol.wave.model.document.operation.DocInitialization r8;
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl $r3;
        org.waveprotocol.wave.model.document.raw.RawDocument $r7;
        org.waveprotocol.wave.model.document.indexed.ObservableIndexedDocument $r0;
        java.lang.Object $r5;
        org.waveprotocol.wave.model.document.indexed.DocumentHandler r1;

        r2 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider;

        r8 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

        r6 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema;

        r1 := @parameter2: org.waveprotocol.wave.model.document.indexed.DocumentHandler;

        $r0 = new org.waveprotocol.wave.model.document.indexed.ObservableIndexedDocument;

        $r4 = r2.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.raw.RawDocument$Provider substrateProvider>;

        $r3 = <org.waveprotocol.wave.model.document.operation.Attributes: org.waveprotocol.wave.model.document.operation.impl.AttributesImpl EMPTY_MAP>;

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.document.raw.RawDocument$Provider: java.lang.Object create(java.lang.String,java.util.Map)>("doc", $r3);

        $r7 = (org.waveprotocol.wave.model.document.raw.RawDocument) $r5;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.indexed.ObservableIndexedDocument: void <init>(org.waveprotocol.wave.model.document.indexed.DocumentHandler,org.waveprotocol.wave.model.document.raw.RawDocument,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)>(r1, $r7, r6);

        virtualinvoke $r0.<org.waveprotocol.wave.model.document.indexed.ObservableIndexedDocument: void consume(org.waveprotocol.wave.model.document.operation.DocOp)>(r8);

        return $r0;
    }

    public volatile java.lang.Object parse(java.lang.String)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument $r2;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.indexed.IndexedDocument parse(java.lang.String)>(r1);

        return $r2;
    }

    public volatile java.lang.Object create(java.lang.String, java.util.Map)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument $r3;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider r0;
        java.util.Map r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.indexed.IndexedDocument create(java.lang.String,java.util.Map)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Object $r0, $r1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: java.lang.Object ONE_OBJECT> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: java.lang.Object ANOTHER_OBJECT> = $r1;

        return;
    }
}
