public class com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType extends com.hp.hpl.jena.datatypes.BaseDatatype implements com.hp.hpl.jena.datatypes.RDFDatatype
{
    public static final com.hp.hpl.jena.datatypes.RDFDatatype theXMLLiteralType;

    private void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType r0;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.datatypes.BaseDatatype: void <init>(java.lang.String)>(r1);

        return;
    }

    public java.lang.String unparse(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;
        com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType r2;

        r2 := @this: com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.Object parse(java.lang.String) throws com.hp.hpl.jena.datatypes.DatatypeFormatException
    {
        java.lang.String r1;
        com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType r0;
        com.hp.hpl.jena.datatypes.DatatypeFormatException $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType: boolean isValid(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r2 = new com.hp.hpl.jena.datatypes.DatatypeFormatException;

        specialinvoke $r2.<com.hp.hpl.jena.datatypes.DatatypeFormatException: void <init>(java.lang.String)>("Bad rdf:XMLLiteral");

        throw $r2;

     label1:
        return r1;
    }

    public boolean isValid(java.lang.String)
    {
        com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType$1 $r3;
        com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType$2 $r6;
        java.lang.String r7, $r14;
        com.hp.hpl.jena.shared.BrokenException $r17;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r2, $r5;
        boolean[] $r0;
        java.io.IOException $r16;
        com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType r4;
        java.io.StringReader $r8;
        org.xml.sax.SAXException $r15;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;
        com.hp.hpl.jena.rdf.arp.ARP $r1;

        r4 := @this: com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType;

        r7 := @parameter0: java.lang.String;

        $r0 = newarray (boolean)[3];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r1 = new com.hp.hpl.jena.rdf.arp.ARP;

        specialinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARP: void <init>()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARP: com.hp.hpl.jena.rdf.arp.ARPHandlers getHandlers()>();

        $r3 = new com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType$1;

        specialinvoke $r3.<com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType$1: void <init>(com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType,boolean[])>(r4, $r0);

        virtualinvoke $r2.<com.hp.hpl.jena.rdf.arp.ARPHandlers: org.xml.sax.ErrorHandler setErrorHandler(org.xml.sax.ErrorHandler)>($r3);

        $r5 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARP: com.hp.hpl.jena.rdf.arp.ARPHandlers getHandlers()>();

        $r6 = new com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType$2;

        specialinvoke $r6.<com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType$2: void <init>(com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType,boolean[],java.lang.String)>(r4, $r0, r7);

        virtualinvoke $r5.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.StatementHandler setStatementHandler(com.hp.hpl.jena.rdf.arp.StatementHandler)>($r6);

     label1:
        $r8 = new java.io.StringReader;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<rdf:RDF  xmlns:rdf=\'http://www.w3.org/1999/02/22-rdf-syntax-ns#\'>\n<rdf:Description><rdf:value rdf:parseType=\'Literal\'>");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</rdf:value>\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</rdf:Description></rdf:RDF>");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.StringReader: void <init>(java.lang.String)>($r14);

        virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARP: void load(java.io.Reader)>($r8);

     label2:
        goto label5;

     label3:
        $r16 := @caughtexception;

        $r17 = new com.hp.hpl.jena.shared.BrokenException;

        specialinvoke $r17.<com.hp.hpl.jena.shared.BrokenException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label4:
        $r15 := @caughtexception;

        return 0;

     label5:
        $z0 = $r0[0];

        if $z0 != 0 goto label6;

        $z1 = $r0[1];

        if $z1 == 0 goto label6;

        $z2 = $r0[2];

        if $z2 == 0 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        return $z3;

        catch java.io.IOException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label1 to label2 with label4;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType $r0;

        $r0 = new com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: java.lang.String getURI()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLLiteral");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType: void <init>(java.lang.String)>($r5);

        <com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType: com.hp.hpl.jena.datatypes.RDFDatatype theXMLLiteralType> = $r0;

        return;
    }
}
