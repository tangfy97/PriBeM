public class com.hp.hpl.jena.sparql.core.ResultBinding extends com.hp.hpl.jena.sparql.core.QuerySolutionBase
{
    com.hp.hpl.jena.sparql.engine.binding.Binding binding;
    com.hp.hpl.jena.rdf.model.Model model;

    public void <init>(com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.sparql.core.ResultBinding r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.ResultBinding;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r2 := @parameter1: com.hp.hpl.jena.sparql.engine.binding.Binding;

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.QuerySolutionBase: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.rdf.model.Model model> = r1;

        r0.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.sparql.engine.binding.Binding binding> = r2;

        return;
    }

    protected com.hp.hpl.jena.rdf.model.RDFNode _get(java.lang.String)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r6;
        com.hp.hpl.jena.sparql.core.ResultBinding r0;
        com.hp.hpl.jena.rdf.model.Model $r5;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r4;
        com.hp.hpl.jena.sparql.core.Var $r3;

        r0 := @this: com.hp.hpl.jena.sparql.core.ResultBinding;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(java.lang.String)>(r1);

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.Binding: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>($r3);

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = r0.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.rdf.model.Model model>;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.util.ModelUtils: com.hp.hpl.jena.rdf.model.RDFNode convertGraphNodeToRDFNode(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.Model)>($r4, $r5);

        return $r6;
    }

    protected boolean _contains(java.lang.String)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        com.hp.hpl.jena.sparql.core.ResultBinding r0;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.core.Var $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.ResultBinding;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(java.lang.String)>(r1);

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.Binding: boolean contains(com.hp.hpl.jena.sparql.core.Var)>($r3);

        return $z0;
    }

    public java.util.Iterator varNames()
    {
        java.util.Iterator $r3, $r4;
        com.hp.hpl.jena.sparql.core.ResultBinding r1;
        com.hp.hpl.jena.sparql.core.Var r6;
        java.util.ArrayList $r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        java.lang.Object $r5;
        java.lang.String $r7;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.core.ResultBinding;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.Binding: java.util.Iterator vars()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.sparql.core.Var) $r5;

        $r7 = virtualinvoke r6.<com.hp.hpl.jena.sparql.core.Var: java.lang.String getVarName()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r4 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

        return $r4;
    }

    public com.hp.hpl.jena.sparql.engine.binding.Binding getBinding()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        com.hp.hpl.jena.sparql.core.ResultBinding r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.ResultBinding;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1, $r2;
        com.hp.hpl.jena.sparql.core.ResultBinding r0;
        java.lang.String $r3;

        r0 := @this: com.hp.hpl.jena.sparql.core.ResultBinding;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        if $r1 != null goto label1;

        return "<no binding>";

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public static boolean equals(com.hp.hpl.jena.sparql.core.ResultBinding, com.hp.hpl.jena.sparql.core.ResultBinding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1, $r3;
        com.hp.hpl.jena.sparql.core.ResultBinding r0, r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.ResultBinding;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.ResultBinding;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.sparql.engine.binding.Binding getBinding()>();

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.core.ResultBinding: com.hp.hpl.jena.sparql.engine.binding.Binding getBinding()>();

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingBase: boolean equals(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r1, $r3);

        return $z0;
    }
}
