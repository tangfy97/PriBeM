public class org.apache.commons.cli.CommandLine extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.List args;
    private java.util.List options;

    void <init>()
    {
        org.apache.commons.cli.CommandLine r0;
        java.util.LinkedList $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.cli.CommandLine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.commons.cli.CommandLine: java.util.List args> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.cli.CommandLine: java.util.List options> = $r2;

        return;
    }

    public boolean hasOption(java.lang.String)
    {
        java.util.List $r2;
        org.apache.commons.cli.CommandLine r0;
        java.lang.String r1;
        org.apache.commons.cli.Option $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.CommandLine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.cli.CommandLine: java.util.List options>;

        $r3 = specialinvoke r0.<org.apache.commons.cli.CommandLine: org.apache.commons.cli.Option resolveOption(java.lang.String)>(r1);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean hasOption(char)
    {
        org.apache.commons.cli.CommandLine r0;
        char c0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.CommandLine;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        $z0 = virtualinvoke r0.<org.apache.commons.cli.CommandLine: boolean hasOption(java.lang.String)>($r1);

        return $z0;
    }

    public java.lang.Object getOptionObject(java.lang.String)
    {
        java.io.PrintStream $r5;
        org.apache.commons.cli.ParseException $r3;
        java.lang.StringBuffer $r4, $r6, $r7, $r8, $r10;
        org.apache.commons.cli.CommandLine r0;
        java.lang.Object $r2;
        java.lang.String r1, $r9, $r11;

        r0 := @this: org.apache.commons.cli.CommandLine;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.cli.CommandLine: java.lang.Object getParsedOptionValue(java.lang.String)>(r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception found converting ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to desired type: ");

        $r9 = virtualinvoke $r3.<org.apache.commons.cli.ParseException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r11);

        return null;

        catch org.apache.commons.cli.ParseException from label1 to label2 with label3;
    }

    public java.lang.Object getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
    {
        org.apache.commons.cli.CommandLine r0;
        java.lang.Object $r4, $r5;
        java.lang.String r1, $r2;
        org.apache.commons.cli.Option $r3;

        r0 := @this: org.apache.commons.cli.CommandLine;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.cli.CommandLine: java.lang.String getOptionValue(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<org.apache.commons.cli.CommandLine: org.apache.commons.cli.Option resolveOption(java.lang.String)>(r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r3.<org.apache.commons.cli.Option: java.lang.Object getType()>();

        if $r2 != null goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r5 = staticinvoke <org.apache.commons.cli.TypeHandler: java.lang.Object createValue(java.lang.String,java.lang.Object)>($r2, $r4);

     label3:
        return $r5;
    }

    public java.lang.Object getOptionObject(char)
    {
        org.apache.commons.cli.CommandLine r0;
        char c0;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.cli.CommandLine;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        $r2 = virtualinvoke r0.<org.apache.commons.cli.CommandLine: java.lang.Object getOptionObject(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getOptionValue(java.lang.String)
    {
        org.apache.commons.cli.CommandLine r0;
        java.lang.String[] $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.commons.cli.CommandLine;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.cli.CommandLine: java.lang.String[] getOptionValues(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = $r2[0];

     label2:
        return $r3;
    }

    public java.lang.String getOptionValue(char)
    {
        org.apache.commons.cli.CommandLine r0;
        char c0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.commons.cli.CommandLine;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        $r2 = virtualinvoke r0.<org.apache.commons.cli.CommandLine: java.lang.String getOptionValue(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String[] getOptionValues(java.lang.String)
    {
        java.lang.Object[] $r5;
        java.lang.String[] $r4, $r6, $r13;
        java.util.ArrayList $r0;
        int $i0;
        org.apache.commons.cli.CommandLine r1;
        java.lang.String r9, $r10, $r12;
        org.apache.commons.cli.Option r8;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r3;
        java.util.List $r2, $r11;
        java.lang.Object $r7;

        r1 := @this: org.apache.commons.cli.CommandLine;

        r9 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.commons.cli.CommandLine: java.util.List options>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.commons.cli.Option) $r7;

        $r10 = virtualinvoke r8.<org.apache.commons.cli.Option: java.lang.String getOpt()>();

        $z2 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label2;

        $r12 = virtualinvoke r8.<org.apache.commons.cli.Option: java.lang.String getLongOpt()>();

        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z3 == 0 goto label3;

     label2:
        $r11 = virtualinvoke r8.<org.apache.commons.cli.Option: java.util.List getValuesList()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r11);

     label3:
        goto label1;

     label4:
        $z1 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label5;

        $r13 = null;

        goto label6;

     label5:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        $r13 = (java.lang.String[]) $r6;

     label6:
        return $r13;
    }

    private org.apache.commons.cli.Option resolveOption(java.lang.String)
    {
        java.util.Iterator $r3;
        java.util.List $r2;
        org.apache.commons.cli.CommandLine r1;
        java.lang.Object $r4;
        java.lang.String $r0, $r6, $r7, r8;
        org.apache.commons.cli.Option r5;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.commons.cli.CommandLine;

        r8 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.commons.cli.Util: java.lang.String stripLeadingHyphens(java.lang.String)>(r8);

        $r2 = r1.<org.apache.commons.cli.CommandLine: java.util.List options>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.cli.Option) $r4;

        $r6 = virtualinvoke r5.<org.apache.commons.cli.Option: java.lang.String getOpt()>();

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        return r5;

     label2:
        $r7 = virtualinvoke r5.<org.apache.commons.cli.Option: java.lang.String getLongOpt()>();

        $z2 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label3;

        return r5;

     label3:
        goto label1;

     label4:
        return null;
    }

    public java.lang.String[] getOptionValues(char)
    {
        org.apache.commons.cli.CommandLine r0;
        char c0;
        java.lang.String[] $r2;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.cli.CommandLine;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        $r2 = virtualinvoke r0.<org.apache.commons.cli.CommandLine: java.lang.String[] getOptionValues(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getOptionValue(java.lang.String, java.lang.String)
    {
        org.apache.commons.cli.CommandLine r0;
        java.lang.String r1, $r2, r3, $r4;

        r0 := @this: org.apache.commons.cli.CommandLine;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.cli.CommandLine: java.lang.String getOptionValue(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r4 = $r2;

        goto label2;

     label1:
        $r4 = r3;

     label2:
        return $r4;
    }

    public java.lang.String getOptionValue(char, java.lang.String)
    {
        org.apache.commons.cli.CommandLine r0;
        char c0;
        java.lang.String $r1, r2, $r3;

        r0 := @this: org.apache.commons.cli.CommandLine;

        c0 := @parameter0: char;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        $r3 = virtualinvoke r0.<org.apache.commons.cli.CommandLine: java.lang.String getOptionValue(java.lang.String,java.lang.String)>($r1, r2);

        return $r3;
    }

    public java.util.Properties getOptionProperties(java.lang.String)
    {
        int $i0, $i1;
        org.apache.commons.cli.CommandLine r1;
        java.lang.String r6, $r7, $r12;
        org.apache.commons.cli.Option r5;
        boolean $z0, $z1, $z2;
        java.util.Properties $r0;
        java.util.Iterator $r3;
        java.util.List $r2, $r8;
        java.lang.Object $r4, $r9, $r10, $r11;

        r1 := @this: org.apache.commons.cli.CommandLine;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        $r2 = r1.<org.apache.commons.cli.CommandLine: java.util.List options>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.cli.Option) $r4;

        $r7 = virtualinvoke r5.<org.apache.commons.cli.Option: java.lang.String getOpt()>();

        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label2;

        $r12 = virtualinvoke r5.<org.apache.commons.cli.Option: java.lang.String getLongOpt()>();

        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label4;

     label2:
        $r8 = virtualinvoke r5.<org.apache.commons.cli.Option: java.util.List getValuesList()>();

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 < 2 goto label3;

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(1);

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        goto label4;

     label3:
        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i1 != 1 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, "true");

     label4:
        goto label1;

     label5:
        return $r0;
    }

    public java.lang.String[] getArgs()
    {
        java.util.List $r1, $r3;
        int $i0;
        org.apache.commons.cli.CommandLine r0;
        java.lang.String[] r2;

        r0 := @this: org.apache.commons.cli.CommandLine;

        $r1 = r0.<org.apache.commons.cli.CommandLine: java.util.List args>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (java.lang.String)[$i0];

        $r3 = r0.<org.apache.commons.cli.CommandLine: java.util.List args>;

        interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        return r2;
    }

    public java.util.List getArgList()
    {
        org.apache.commons.cli.CommandLine r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.cli.CommandLine;

        $r1 = r0.<org.apache.commons.cli.CommandLine: java.util.List args>;

        return $r1;
    }

    void addArg(java.lang.String)
    {
        org.apache.commons.cli.CommandLine r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: org.apache.commons.cli.CommandLine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.cli.CommandLine: java.util.List args>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    void addOption(org.apache.commons.cli.Option)
    {
        org.apache.commons.cli.CommandLine r0;
        java.util.List $r2;
        org.apache.commons.cli.Option r1;

        r0 := @this: org.apache.commons.cli.CommandLine;

        r1 := @parameter0: org.apache.commons.cli.Option;

        $r2 = r0.<org.apache.commons.cli.CommandLine: java.util.List options>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.cli.CommandLine r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.commons.cli.CommandLine;

        $r1 = r0.<org.apache.commons.cli.CommandLine: java.util.List options>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public org.apache.commons.cli.Option[] getOptions()
    {
        java.util.List r1;
        java.lang.Object[] $r3;
        int $i0;
        org.apache.commons.cli.CommandLine r0;
        org.apache.commons.cli.Option[] r2, $r4, $r5;

        r0 := @this: org.apache.commons.cli.CommandLine;

        r1 = r0.<org.apache.commons.cli.CommandLine: java.util.List options>;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        r2 = newarray (org.apache.commons.cli.Option)[$i0];

        $r3 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        $r4 = (org.apache.commons.cli.Option[]) $r3;

        $r5 = (org.apache.commons.cli.Option[]) $r4;

        return $r5;
    }

    public static void <clinit>()
    {
        <org.apache.commons.cli.CommandLine: long serialVersionUID> = 1L;

        return;
    }
}
