class minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1 extends minsolver.fol2sat.MinTranslationRecord
{
    final minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 this$2;

    void <init>(minsolver.fol2sat.MinMemoryLogger$MemoryLog$1)
    {
        minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 r1;
        minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1 r0;

        r0 := @this: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1;

        r1 := @parameter0: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1;

        r0.<minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 this$2> = r1;

        specialinvoke r0.<minsolver.fol2sat.MinTranslationRecord: void <init>()>();

        return;
    }

    public java.util.Map env()
    {
        minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1 r1;
        java.util.Map $r0;

        r1 := @this: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1;

        $r0 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r0;
    }

    public int literal()
    {
        minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1 r0;
        int[] $r3;
        int $i0, $i1;
        minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 $r1, $r4;
        minsolver.fol2sat.MinMemoryLogger$MemoryLog $r2;

        r0 := @this: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1;

        $r1 = r0.<minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 this$2>;

        $r2 = staticinvoke <minsolver.fol2sat.MinMemoryLogger$MemoryLog$1: minsolver.fol2sat.MinMemoryLogger$MemoryLog access$1(minsolver.fol2sat.MinMemoryLogger$MemoryLog$1)>($r1);

        $r3 = staticinvoke <minsolver.fol2sat.MinMemoryLogger$MemoryLog: int[] access$1(minsolver.fol2sat.MinMemoryLogger$MemoryLog)>($r2);

        $r4 = r0.<minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 this$2>;

        $i0 = $r4.<minsolver.fol2sat.MinMemoryLogger$MemoryLog$1: int index>;

        $i1 = $r3[$i0];

        return $i1;
    }

    public kodkod.ast.Node node()
    {
        minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1 r0;
        int $i0;
        minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 $r1, $r4;
        minsolver.fol2sat.MinMemoryLogger$MemoryLog $r2;
        kodkod.ast.Node[] $r3;
        kodkod.ast.Node $r5;

        r0 := @this: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1;

        $r1 = r0.<minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 this$2>;

        $r2 = staticinvoke <minsolver.fol2sat.MinMemoryLogger$MemoryLog$1: minsolver.fol2sat.MinMemoryLogger$MemoryLog access$1(minsolver.fol2sat.MinMemoryLogger$MemoryLog$1)>($r1);

        $r3 = staticinvoke <minsolver.fol2sat.MinMemoryLogger$MemoryLog: kodkod.ast.Node[] access$2(minsolver.fol2sat.MinMemoryLogger$MemoryLog)>($r2);

        $r4 = r0.<minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 this$2>;

        $i0 = $r4.<minsolver.fol2sat.MinMemoryLogger$MemoryLog$1: int index>;

        $r5 = $r3[$i0];

        return $r5;
    }

    public kodkod.ast.Formula translated()
    {
        minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 $r1;
        minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1 r0;
        kodkod.ast.Formula $r2;

        r0 := @this: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1;

        $r1 = r0.<minsolver.fol2sat.MinMemoryLogger$MemoryLog$1$1: minsolver.fol2sat.MinMemoryLogger$MemoryLog$1 this$2>;

        $r2 = $r1.<minsolver.fol2sat.MinMemoryLogger$MemoryLog$1: kodkod.ast.Formula root>;

        return $r2;
    }
}
