public class org.apache.pdfbox.util.PDFOperator extends java.lang.Object
{
    private java.lang.String theOperator;
    private byte[] imageData;
    private org.apache.pdfbox.util.ImageParameters imageParameters;
    private static final java.util.concurrent.ConcurrentHashMap operators;

    private void <init>(java.lang.String)
    {
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String r1, $r7;
        org.apache.pdfbox.util.PDFOperator r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.PDFOperator;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFOperator: java.lang.String theOperator> = r1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operators are not allowed to start with / \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        return;
    }

    public static org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)
    {
        java.util.concurrent.ConcurrentHashMap $r2, $r5, $r7;
        java.lang.Object $r3, $r6, $r8;
        java.lang.String r0;
        org.apache.pdfbox.util.PDFOperator $r1, $r4, r9;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ID");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("BI");

        if $z1 == 0 goto label2;

     label1:
        $r1 = new org.apache.pdfbox.util.PDFOperator;

        specialinvoke $r1.<org.apache.pdfbox.util.PDFOperator: void <init>(java.lang.String)>(r0);

        r9 = $r1;

        goto label3;

     label2:
        $r2 = <org.apache.pdfbox.util.PDFOperator: java.util.concurrent.ConcurrentHashMap operators>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r9 = (org.apache.pdfbox.util.PDFOperator) $r3;

        if r9 != null goto label3;

        $r5 = <org.apache.pdfbox.util.PDFOperator: java.util.concurrent.ConcurrentHashMap operators>;

        $r4 = new org.apache.pdfbox.util.PDFOperator;

        specialinvoke $r4.<org.apache.pdfbox.util.PDFOperator: void <init>(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r0, $r4);

        r9 = (org.apache.pdfbox.util.PDFOperator) $r6;

        if r9 != null goto label3;

        $r7 = <org.apache.pdfbox.util.PDFOperator: java.util.concurrent.ConcurrentHashMap operators>;

        $r8 = virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r9 = (org.apache.pdfbox.util.PDFOperator) $r8;

     label3:
        return r9;
    }

    public java.lang.String getOperation()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFOperator r0;

        r0 := @this: org.apache.pdfbox.util.PDFOperator;

        $r1 = r0.<org.apache.pdfbox.util.PDFOperator: java.lang.String theOperator>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        org.apache.pdfbox.util.PDFOperator r2;

        r2 := @this: org.apache.pdfbox.util.PDFOperator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PDFOperator{");

        $r3 = r2.<org.apache.pdfbox.util.PDFOperator: java.lang.String theOperator>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public byte[] getImageData()
    {
        byte[] $r1;
        org.apache.pdfbox.util.PDFOperator r0;

        r0 := @this: org.apache.pdfbox.util.PDFOperator;

        $r1 = r0.<org.apache.pdfbox.util.PDFOperator: byte[] imageData>;

        return $r1;
    }

    public void setImageData(byte[])
    {
        byte[] r1;
        org.apache.pdfbox.util.PDFOperator r0;

        r0 := @this: org.apache.pdfbox.util.PDFOperator;

        r1 := @parameter0: byte[];

        r0.<org.apache.pdfbox.util.PDFOperator: byte[] imageData> = r1;

        return;
    }

    public org.apache.pdfbox.util.ImageParameters getImageParameters()
    {
        org.apache.pdfbox.util.PDFOperator r0;
        org.apache.pdfbox.util.ImageParameters $r1;

        r0 := @this: org.apache.pdfbox.util.PDFOperator;

        $r1 = r0.<org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.ImageParameters imageParameters>;

        return $r1;
    }

    public void setImageParameters(org.apache.pdfbox.util.ImageParameters)
    {
        org.apache.pdfbox.util.PDFOperator r0;
        org.apache.pdfbox.util.ImageParameters r1;

        r0 := @this: org.apache.pdfbox.util.PDFOperator;

        r1 := @parameter0: org.apache.pdfbox.util.ImageParameters;

        r0.<org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.ImageParameters imageParameters> = r1;

        return;
    }

    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.apache.pdfbox.util.PDFOperator: java.util.concurrent.ConcurrentHashMap operators> = $r0;

        return;
    }
}
