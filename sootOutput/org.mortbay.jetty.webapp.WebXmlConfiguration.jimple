public class org.mortbay.jetty.webapp.WebXmlConfiguration extends java.lang.Object implements org.mortbay.jetty.webapp.Configuration
{
    protected org.mortbay.jetty.webapp.WebAppContext _context;
    protected org.mortbay.xml.XmlParser _xmlParser;
    protected java.lang.Object _filters;
    protected java.lang.Object _filterMappings;
    protected java.lang.Object _servlets;
    protected java.lang.Object _servletMappings;
    protected java.lang.Object _welcomeFiles;
    protected java.lang.Object _constraintMappings;
    protected java.lang.Object _listeners;
    protected java.util.Map _errorPages;
    protected boolean _hasJSP;
    protected java.lang.String _jspServletName;
    protected java.lang.String _jspServletClass;
    protected boolean _defaultWelcomeFileList;
    protected org.mortbay.jetty.servlet.ServletHandler _servletHandler;
    protected int _version;
    static java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext;
    static java.lang.Class class$org$mortbay$jetty$servlet$FilterHolder;
    static java.lang.Class class$org$mortbay$jetty$servlet$FilterMapping;
    static java.lang.Class class$org$mortbay$jetty$servlet$ServletHolder;
    static java.lang.Class class$org$mortbay$jetty$servlet$ServletMapping;
    static java.lang.Class class$java$util$EventListener;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$mortbay$jetty$security$ConstraintMapping;

    public void <init>()
    {
        org.mortbay.xml.XmlParser $r1;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.xml.XmlParser webXmlParser()>();

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.xml.XmlParser _xmlParser> = $r1;

        return;
    }

    public static org.mortbay.xml.XmlParser webXmlParser()
    {
        java.net.URL $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24;
        org.mortbay.xml.XmlParser $r0;
        java.lang.Class $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;

        $r0 = new org.mortbay.xml.XmlParser;

        specialinvoke $r0.<org.mortbay.xml.XmlParser: void <init>()>();

        $r1 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r1 != null goto label01;

        $r25 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r25;

        goto label02;

     label01:
        $r25 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label02:
        $r2 = virtualinvoke $r25.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/web-app_2_2.dtd");

        $r3 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r3 != null goto label03;

        $r26 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r26;

        goto label04;

     label03:
        $r26 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label04:
        $r4 = virtualinvoke $r26.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/web-app_2_3.dtd");

        $r5 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r5 != null goto label05;

        $r27 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r27;

        goto label06;

     label05:
        $r27 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label06:
        $r6 = virtualinvoke $r27.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/jsp_2_0.xsd");

        $r7 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r7 != null goto label07;

        $r28 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r28;

        goto label08;

     label07:
        $r28 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label08:
        $r8 = virtualinvoke $r28.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/jsp_2_1.xsd");

        $r9 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r9 != null goto label09;

        $r29 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r29;

        goto label10;

     label09:
        $r29 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label10:
        $r10 = virtualinvoke $r29.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/j2ee_1_4.xsd");

        $r11 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r11 != null goto label11;

        $r30 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r30;

        goto label12;

     label11:
        $r30 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label12:
        $r12 = virtualinvoke $r30.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/web-app_2_4.xsd");

        $r13 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r13 != null goto label13;

        $r31 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r31;

        goto label14;

     label13:
        $r31 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label14:
        $r14 = virtualinvoke $r31.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/web-app_2_5.xsd");

        $r15 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r15 != null goto label15;

        $r32 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r32;

        goto label16;

     label15:
        $r32 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label16:
        $r16 = virtualinvoke $r32.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/XMLSchema.dtd");

        $r17 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r17 != null goto label17;

        $r33 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r33;

        goto label18;

     label17:
        $r33 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label18:
        $r18 = virtualinvoke $r33.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/xml.xsd");

        $r19 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r19 != null goto label19;

        $r34 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r34;

        goto label20;

     label19:
        $r34 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label20:
        $r20 = virtualinvoke $r34.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/j2ee_web_services_client_1_1.xsd");

        $r21 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r21 != null goto label21;

        $r35 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r35;

        goto label22;

     label21:
        $r35 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label22:
        $r22 = virtualinvoke $r35.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/javaee_web_services_client_1_2.xsd");

        $r23 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

        if $r23 != null goto label23;

        $r36 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.webapp.WebAppContext");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext> = $r36;

        goto label24;

     label23:
        $r36 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$webapp$WebAppContext>;

     label24:
        $r24 = virtualinvoke $r36.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/javax/servlet/resources/datatypes.dtd");

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("web-app_2_2.dtd", $r2);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN", $r2);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("web.dtd", $r4);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("web-app_2_3.dtd", $r4);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN", $r4);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("XMLSchema.dtd", $r16);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://www.w3.org/2001/XMLSchema.dtd", $r16);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("-//W3C//DTD XMLSCHEMA 200102//EN", $r16);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("jsp_2_0.xsd", $r6);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://java.sun.com/xml/ns/j2ee/jsp_2_0.xsd", $r6);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("jsp_2_1.xsd", $r8);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://java.sun.com/xml/ns/javaee/jsp_2_1.xsd", $r8);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("j2ee_1_4.xsd", $r10);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://java.sun.com/xml/ns/j2ee/j2ee_1_4.xsd", $r10);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("web-app_2_4.xsd", $r12);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd", $r12);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("web-app_2_5.xsd", $r14);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", $r14);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("xml.xsd", $r18);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://www.w3.org/2001/xml.xsd", $r18);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("datatypes.dtd", $r24);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://www.w3.org/2001/datatypes.dtd", $r24);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("j2ee_web_services_client_1_1.xsd", $r20);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://www.ibm.com/webservices/xsd/j2ee_web_services_client_1_1.xsd", $r20);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("javaee_web_services_client_1_2.xsd", $r22);

        virtualinvoke $r0.<org.mortbay.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://www.ibm.com/webservices/xsd/javaee_web_services_client_1_2.xsd", $r22);

        return $r0;
    }

    public void setWebAppContext(org.mortbay.jetty.webapp.WebAppContext)
    {
        org.mortbay.jetty.webapp.WebAppContext r1;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r1 := @parameter0: org.mortbay.jetty.webapp.WebAppContext;

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext _context> = r1;

        return;
    }

    public org.mortbay.jetty.webapp.WebAppContext getWebAppContext()
    {
        org.mortbay.jetty.webapp.WebAppContext $r1;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        $r1 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext _context>;

        return $r1;
    }

    public void configureClassLoader() throws java.lang.Exception
    {
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        return;
    }

    public void configureDefaults() throws java.lang.Exception
    {
        java.net.URL $r5;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;
        org.mortbay.jetty.webapp.WebAppContext $r1, $r2;
        int $i0;
        org.mortbay.resource.Resource $r4, r8;
        java.lang.Object $r7;
        java.lang.String $r3, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        $r1 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext _context>;

        $z0 = virtualinvoke $r1.<org.mortbay.jetty.webapp.WebAppContext: boolean isStarted()>();

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <org.mortbay.log.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>("Cannot configure webapp after it is started");

     label1:
        return;

     label2:
        $r2 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r3 = virtualinvoke $r2.<org.mortbay.jetty.webapp.WebAppContext: java.lang.String getDefaultsDescriptor()>();

        if $r3 == null goto label6;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

        $r4 = staticinvoke <org.mortbay.resource.Resource: org.mortbay.resource.Resource newSystemResource(java.lang.String)>($r3);

        r8 = $r4;

        if $r4 != null goto label3;

        r8 = staticinvoke <org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.lang.String)>($r3);

     label3:
        $r5 = virtualinvoke r8.<org.mortbay.resource.Resource: java.net.URL getURL()>();

        $r6 = virtualinvoke $r5.<java.net.URL: java.lang.String toString()>();

        virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: void configure(java.lang.String)>($r6);

        $r7 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _welcomeFiles>;

        if $r7 == null goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: boolean _defaultWelcomeFileList> = $z2;

     label6:
        return;
    }

    public void configureWebApp() throws java.lang.Exception
    {
        java.net.URL $r2, $r7;
        org.mortbay.xml.XmlParser $r6;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;
        org.mortbay.jetty.webapp.WebAppContext $r1, $r3;
        int $i0;
        org.mortbay.resource.Resource $r5, r10;
        java.lang.String $r4, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        $r1 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext _context>;

        $z0 = virtualinvoke $r1.<org.mortbay.jetty.webapp.WebAppContext: boolean isStarted()>();

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <org.mortbay.log.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>("Cannot configure webapp after it is started");

     label1:
        return;

     label2:
        $r2 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.net.URL findWebXml()>();

        if $r2 == null goto label3;

        $r9 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: void configure(java.lang.String)>($r9);

     label3:
        $r3 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r4 = virtualinvoke $r3.<org.mortbay.jetty.webapp.WebAppContext: java.lang.String getOverrideDescriptor()>();

        if $r4 == null goto label5;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $r5 = staticinvoke <org.mortbay.resource.Resource: org.mortbay.resource.Resource newSystemResource(java.lang.String)>($r4);

        r10 = $r5;

        if $r5 != null goto label4;

        r10 = staticinvoke <org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.lang.String)>($r4);

     label4:
        $r6 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.xml.XmlParser _xmlParser>;

        virtualinvoke $r6.<org.mortbay.xml.XmlParser: void setValidating(boolean)>(0);

        $r7 = virtualinvoke r10.<org.mortbay.resource.Resource: java.net.URL getURL()>();

        $r8 = virtualinvoke $r7.<java.net.URL: java.lang.String toString()>();

        virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: void configure(java.lang.String)>($r8);

     label5:
        return;
    }

    protected java.net.URL findWebXml() throws java.io.IOException, java.net.MalformedURLException
    {
        java.net.URL $r11, $r13;
        java.lang.StringBuffer $r4, $r5, $r8, $r9;
        org.mortbay.resource.Resource $r3, $r12, $r15;
        java.lang.String $r2, $r7, $r10;
        boolean $z0, $z1, $z2, $z3;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;
        org.mortbay.jetty.webapp.WebAppContext $r1, $r6, $r14;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r2 = virtualinvoke $r1.<org.mortbay.jetty.webapp.WebAppContext: java.lang.String getDescriptor()>();

        if $r2 == null goto label1;

        $r12 = staticinvoke <org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.lang.String)>($r2);

        $z2 = virtualinvoke $r12.<org.mortbay.resource.Resource: boolean exists()>();

        if $z2 == 0 goto label1;

        $z3 = virtualinvoke $r12.<org.mortbay.resource.Resource: boolean isDirectory()>();

        if $z3 != 0 goto label1;

        $r13 = virtualinvoke $r12.<org.mortbay.resource.Resource: java.net.URL getURL()>();

        return $r13;

     label1:
        $r14 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r15 = virtualinvoke $r14.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.resource.Resource getWebInf()>();

        if $r15 == null goto label3;

        $z0 = virtualinvoke $r15.<org.mortbay.resource.Resource: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r15.<org.mortbay.resource.Resource: org.mortbay.resource.Resource addPath(java.lang.String)>("web.xml");

        $z1 = virtualinvoke $r3.<org.mortbay.resource.Resource: boolean exists()>();

        if $z1 == 0 goto label2;

        $r11 = virtualinvoke $r3.<org.mortbay.resource.Resource: java.net.URL getURL()>();

        return $r11;

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No WEB-INF/web.xml in ");

        $r6 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r7 = virtualinvoke $r6.<org.mortbay.jetty.webapp.WebAppContext: java.lang.String getWar()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". Serving files and default/dynamic servlets only");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>($r10);

     label3:
        return null;
    }

    public void configure(java.lang.String) throws java.lang.Exception
    {
        org.mortbay.xml.XmlParser $r2;
        org.mortbay.xml.XmlParser$Node $r3;
        java.lang.String r1;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.xml.XmlParser _xmlParser>;

        $r3 = virtualinvoke $r2.<org.mortbay.xml.XmlParser: org.mortbay.xml.XmlParser$Node parse(java.lang.String)>(r1);

        virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initialize(org.mortbay.xml.XmlParser$Node)>($r3);

        return;
    }

    public void deconfigureWebApp() throws java.lang.Exception
    {
        org.mortbay.jetty.servlet.ServletHandler $r2, $r3, $r4, $r5, $r6;
        org.mortbay.jetty.servlet.ErrorPageErrorHandler $r15;
        boolean $z0;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;
        org.mortbay.jetty.security.SecurityHandler $r10, $r17;
        org.mortbay.jetty.webapp.WebAppContext $r1, $r7, $r8, $r9, $r11, $r13, $r16;
        org.mortbay.jetty.handler.ErrorHandler $r12, $r14;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r2 = virtualinvoke $r1.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.servlet.ServletHandler getServletHandler()>();

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler> = $r2;

        $r3 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        virtualinvoke $r3.<org.mortbay.jetty.servlet.ServletHandler: void setFilters(org.mortbay.jetty.servlet.FilterHolder[])>(null);

        $r4 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        virtualinvoke $r4.<org.mortbay.jetty.servlet.ServletHandler: void setFilterMappings(org.mortbay.jetty.servlet.FilterMapping[])>(null);

        $r5 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        virtualinvoke $r5.<org.mortbay.jetty.servlet.ServletHandler: void setServlets(org.mortbay.jetty.servlet.ServletHolder[])>(null);

        $r6 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        virtualinvoke $r6.<org.mortbay.jetty.servlet.ServletHandler: void setServletMappings(org.mortbay.jetty.servlet.ServletMapping[])>(null);

        $r7 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        virtualinvoke $r7.<org.mortbay.jetty.webapp.WebAppContext: void setEventListeners(java.util.EventListener[])>(null);

        $r8 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        virtualinvoke $r8.<org.mortbay.jetty.webapp.WebAppContext: void setWelcomeFiles(java.lang.String[])>(null);

        $r9 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r10 = virtualinvoke $r9.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.security.SecurityHandler getSecurityHandler()>();

        if $r10 == null goto label1;

        $r16 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r17 = virtualinvoke $r16.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.security.SecurityHandler getSecurityHandler()>();

        virtualinvoke $r17.<org.mortbay.jetty.security.SecurityHandler: void setConstraintMappings(org.mortbay.jetty.security.ConstraintMapping[])>(null);

     label1:
        $r11 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r12 = virtualinvoke $r11.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.handler.ErrorHandler getErrorHandler()>();

        $z0 = $r12 instanceof org.mortbay.jetty.servlet.ErrorPageErrorHandler;

        if $z0 == 0 goto label2;

        $r13 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r14 = virtualinvoke $r13.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.handler.ErrorHandler getErrorHandler()>();

        $r15 = (org.mortbay.jetty.servlet.ErrorPageErrorHandler) $r14;

        virtualinvoke $r15.<org.mortbay.jetty.servlet.ErrorPageErrorHandler: void setErrorPages(java.util.Map)>(null);

     label2:
        return;
    }

    protected void initialize(org.mortbay.xml.XmlParser$Node) throws java.lang.ClassNotFoundException, javax.servlet.UnavailableException
    {
        java.util.Map $r75, $r80, $r98;
        org.mortbay.jetty.servlet.FilterMapping[] $r7, $r42, $r43;
        java.util.EventListener[] $r16, $r60, $r61;
        java.lang.Exception $r89;
        org.mortbay.jetty.security.SecurityHandler $r22, $r69;
        org.mortbay.jetty.handler.ErrorHandler $r26, $r77, $r79, $r87;
        org.mortbay.jetty.servlet.ServletHandler $r2, $r3, $r6, $r9, $r12, $r34, $r40, $r46, $r52;
        java.lang.StringBuffer $r90, $r91, $r92, $r93, $r94;
        java.lang.String $r28, $r29, $r30, $r31, $r83, $r85, $r95;
        org.mortbay.jetty.security.ConstraintMapping[] $r23, $r73, $r74;
        javax.servlet.UnavailableException $r96;
        java.lang.ClassNotFoundException $r97;
        org.mortbay.xml.XmlParser $r84;
        org.mortbay.jetty.servlet.ErrorPageErrorHandler $r81, $r88;
        org.mortbay.jetty.servlet.ServletHolder[] $r10, $r48, $r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;
        java.util.List $r5, $r8, $r11, $r14, $r17, $r20, $r24;
        org.mortbay.jetty.servlet.FilterHolder[] $r4, $r36, $r37;
        java.lang.String[] $r19, $r66, $r67;
        org.mortbay.jetty.servlet.ServletMapping[] $r13, $r54, $r55;
        int $i0;
        org.mortbay.xml.XmlParser$Node r27, r100;
        java.util.Iterator $r99;
        org.mortbay.jetty.webapp.WebAppContext $r1, $r15, $r18, $r21, $r25, $r56, $r62, $r68, $r76, $r78, $r86;
        java.lang.Class $r32, $r38, $r44, $r50, $r57, $r63, $r70, $r101, $r102, $r103, $r104, $r105, $r106, $r107;
        java.lang.Object $r33, $r35, $r39, $r41, $r45, $r47, $r51, $r53, $r58, $r59, $r64, $r65, $r71, $r72, $r82;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r27 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r2 = virtualinvoke $r1.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.servlet.ServletHandler getServletHandler()>();

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler> = $r2;

        $r3 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r4 = virtualinvoke $r3.<org.mortbay.jetty.servlet.ServletHandler: org.mortbay.jetty.servlet.FilterHolder[] getFilters()>();

        $r5 = staticinvoke <org.mortbay.util.LazyList: java.util.List array2List(java.lang.Object[])>($r4);

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _filters> = $r5;

        $r6 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r7 = virtualinvoke $r6.<org.mortbay.jetty.servlet.ServletHandler: org.mortbay.jetty.servlet.FilterMapping[] getFilterMappings()>();

        $r8 = staticinvoke <org.mortbay.util.LazyList: java.util.List array2List(java.lang.Object[])>($r7);

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _filterMappings> = $r8;

        $r9 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r10 = virtualinvoke $r9.<org.mortbay.jetty.servlet.ServletHandler: org.mortbay.jetty.servlet.ServletHolder[] getServlets()>();

        $r11 = staticinvoke <org.mortbay.util.LazyList: java.util.List array2List(java.lang.Object[])>($r10);

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _servlets> = $r11;

        $r12 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r13 = virtualinvoke $r12.<org.mortbay.jetty.servlet.ServletHandler: org.mortbay.jetty.servlet.ServletMapping[] getServletMappings()>();

        $r14 = staticinvoke <org.mortbay.util.LazyList: java.util.List array2List(java.lang.Object[])>($r13);

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _servletMappings> = $r14;

        $r15 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r16 = virtualinvoke $r15.<org.mortbay.jetty.webapp.WebAppContext: java.util.EventListener[] getEventListeners()>();

        $r17 = staticinvoke <org.mortbay.util.LazyList: java.util.List array2List(java.lang.Object[])>($r16);

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _listeners> = $r17;

        $r18 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r19 = virtualinvoke $r18.<org.mortbay.jetty.webapp.WebAppContext: java.lang.String[] getWelcomeFiles()>();

        $r20 = staticinvoke <org.mortbay.util.LazyList: java.util.List array2List(java.lang.Object[])>($r19);

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _welcomeFiles> = $r20;

        $r21 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r22 = virtualinvoke $r21.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.security.SecurityHandler getSecurityHandler()>();

        $r23 = virtualinvoke $r22.<org.mortbay.jetty.security.SecurityHandler: org.mortbay.jetty.security.ConstraintMapping[] getConstraintMappings()>();

        $r24 = staticinvoke <org.mortbay.util.LazyList: java.util.List array2List(java.lang.Object[])>($r23);

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _constraintMappings> = $r24;

        $r25 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r26 = virtualinvoke $r25.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.handler.ErrorHandler getErrorHandler()>();

        $z0 = $r26 instanceof org.mortbay.jetty.servlet.ErrorPageErrorHandler;

        if $z0 == 0 goto label01;

        $r86 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r87 = virtualinvoke $r86.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.handler.ErrorHandler getErrorHandler()>();

        $r88 = (org.mortbay.jetty.servlet.ErrorPageErrorHandler) $r87;

        $r98 = virtualinvoke $r88.<org.mortbay.jetty.servlet.ErrorPageErrorHandler: java.util.Map getErrorPages()>();

        goto label02;

     label01:
        $r98 = null;

     label02:
        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.util.Map _errorPages> = $r98;

        $r28 = virtualinvoke r27.<org.mortbay.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String,java.lang.String)>("version", "DTD");

        $r29 = "2.5";

        $z1 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z1 == 0 goto label03;

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: int _version> = 25;

        goto label05;

     label03:
        $r30 = "2.4";

        $z2 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z2 == 0 goto label04;

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: int _version> = 24;

        goto label05;

     label04:
        $r31 = "DTD";

        $z3 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z3 == 0 goto label05;

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: int _version> = 23;

        $r84 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.xml.XmlParser _xmlParser>;

        $r85 = virtualinvoke $r84.<org.mortbay.xml.XmlParser: java.lang.String getDTD()>();

        if $r85 == null goto label05;

        $i0 = virtualinvoke $r85.<java.lang.String: int indexOf(java.lang.String)>("web-app_2_2");

        if $i0 < 0 goto label05;

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: int _version> = 22;

     label05:
        $r99 = virtualinvoke r27.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator()>();

        r100 = null;

     label06:
        $z6 = interfaceinvoke $r99.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label13;

     label07:
        $r82 = interfaceinvoke $r99.<java.util.Iterator: java.lang.Object next()>();

        $z5 = $r82 instanceof org.mortbay.xml.XmlParser$Node;

        if $z5 != 0 goto label09;

     label08:
        goto label06;

     label09:
        r100 = (org.mortbay.xml.XmlParser$Node) $r82;

        $r83 = virtualinvoke r100.<org.mortbay.xml.XmlParser$Node: java.lang.String getTag()>();

        virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initWebXmlElement(java.lang.String,org.mortbay.xml.XmlParser$Node)>($r83, r100);

     label10:
        goto label06;

     label11:
        $r97 := @caughtexception;

        throw $r97;

     label12:
        $r89 := @caughtexception;

        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Configuration problem at ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r100);

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r89);

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>($r95);

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.Throwable)>($r89);

        $r96 = new javax.servlet.UnavailableException;

        specialinvoke $r96.<javax.servlet.UnavailableException: void <init>(java.lang.String)>("Configuration problem");

        throw $r96;

     label13:
        $r34 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r33 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _filters>;

        $r32 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$FilterHolder>;

        if $r32 != null goto label14;

        $r101 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.servlet.FilterHolder");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$FilterHolder> = $r101;

        goto label15;

     label14:
        $r101 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$FilterHolder>;

     label15:
        $r35 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object toArray(java.lang.Object,java.lang.Class)>($r33, $r101);

        $r36 = (org.mortbay.jetty.servlet.FilterHolder[]) $r35;

        $r37 = (org.mortbay.jetty.servlet.FilterHolder[]) $r36;

        virtualinvoke $r34.<org.mortbay.jetty.servlet.ServletHandler: void setFilters(org.mortbay.jetty.servlet.FilterHolder[])>($r37);

        $r40 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r39 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _filterMappings>;

        $r38 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$FilterMapping>;

        if $r38 != null goto label16;

        $r102 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.servlet.FilterMapping");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$FilterMapping> = $r102;

        goto label17;

     label16:
        $r102 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$FilterMapping>;

     label17:
        $r41 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object toArray(java.lang.Object,java.lang.Class)>($r39, $r102);

        $r42 = (org.mortbay.jetty.servlet.FilterMapping[]) $r41;

        $r43 = (org.mortbay.jetty.servlet.FilterMapping[]) $r42;

        virtualinvoke $r40.<org.mortbay.jetty.servlet.ServletHandler: void setFilterMappings(org.mortbay.jetty.servlet.FilterMapping[])>($r43);

        $r46 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r45 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _servlets>;

        $r44 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$ServletHolder>;

        if $r44 != null goto label18;

        $r103 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.servlet.ServletHolder");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$ServletHolder> = $r103;

        goto label19;

     label18:
        $r103 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$ServletHolder>;

     label19:
        $r47 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object toArray(java.lang.Object,java.lang.Class)>($r45, $r103);

        $r48 = (org.mortbay.jetty.servlet.ServletHolder[]) $r47;

        $r49 = (org.mortbay.jetty.servlet.ServletHolder[]) $r48;

        virtualinvoke $r46.<org.mortbay.jetty.servlet.ServletHandler: void setServlets(org.mortbay.jetty.servlet.ServletHolder[])>($r49);

        $r52 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r51 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _servletMappings>;

        $r50 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$ServletMapping>;

        if $r50 != null goto label20;

        $r104 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.servlet.ServletMapping");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$ServletMapping> = $r104;

        goto label21;

     label20:
        $r104 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$servlet$ServletMapping>;

     label21:
        $r53 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object toArray(java.lang.Object,java.lang.Class)>($r51, $r104);

        $r54 = (org.mortbay.jetty.servlet.ServletMapping[]) $r53;

        $r55 = (org.mortbay.jetty.servlet.ServletMapping[]) $r54;

        virtualinvoke $r52.<org.mortbay.jetty.servlet.ServletHandler: void setServletMappings(org.mortbay.jetty.servlet.ServletMapping[])>($r55);

        $r56 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r58 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _listeners>;

        $r57 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$java$util$EventListener>;

        if $r57 != null goto label22;

        $r105 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("java.util.EventListener");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$java$util$EventListener> = $r105;

        goto label23;

     label22:
        $r105 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$java$util$EventListener>;

     label23:
        $r59 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object toArray(java.lang.Object,java.lang.Class)>($r58, $r105);

        $r60 = (java.util.EventListener[]) $r59;

        $r61 = (java.util.EventListener[]) $r60;

        virtualinvoke $r56.<org.mortbay.jetty.webapp.WebAppContext: void setEventListeners(java.util.EventListener[])>($r61);

        $r62 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r64 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _welcomeFiles>;

        $r63 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$java$lang$String>;

        if $r63 != null goto label24;

        $r106 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$java$lang$String> = $r106;

        goto label25;

     label24:
        $r106 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$java$lang$String>;

     label25:
        $r65 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object toArray(java.lang.Object,java.lang.Class)>($r64, $r106);

        $r66 = (java.lang.String[]) $r65;

        $r67 = (java.lang.String[]) $r66;

        virtualinvoke $r62.<org.mortbay.jetty.webapp.WebAppContext: void setWelcomeFiles(java.lang.String[])>($r67);

        $r68 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r69 = virtualinvoke $r68.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.security.SecurityHandler getSecurityHandler()>();

        $r71 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _constraintMappings>;

        $r70 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$security$ConstraintMapping>;

        if $r70 != null goto label26;

        $r107 = staticinvoke <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.security.ConstraintMapping");

        <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$security$ConstraintMapping> = $r107;

        goto label27;

     label26:
        $r107 = <org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Class class$org$mortbay$jetty$security$ConstraintMapping>;

     label27:
        $r72 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object toArray(java.lang.Object,java.lang.Class)>($r71, $r107);

        $r73 = (org.mortbay.jetty.security.ConstraintMapping[]) $r72;

        $r74 = (org.mortbay.jetty.security.ConstraintMapping[]) $r73;

        virtualinvoke $r69.<org.mortbay.jetty.security.SecurityHandler: void setConstraintMappings(org.mortbay.jetty.security.ConstraintMapping[])>($r74);

        $r75 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.util.Map _errorPages>;

        if $r75 == null goto label28;

        $r76 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r77 = virtualinvoke $r76.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.handler.ErrorHandler getErrorHandler()>();

        $z4 = $r77 instanceof org.mortbay.jetty.servlet.ErrorPageErrorHandler;

        if $z4 == 0 goto label28;

        $r78 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r79 = virtualinvoke $r78.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.handler.ErrorHandler getErrorHandler()>();

        $r81 = (org.mortbay.jetty.servlet.ErrorPageErrorHandler) $r79;

        $r80 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.util.Map _errorPages>;

        virtualinvoke $r81.<org.mortbay.jetty.servlet.ErrorPageErrorHandler: void setErrorPages(java.util.Map)>($r80);

     label28:
        return;

        catch java.lang.ClassNotFoundException from label07 to label08 with label11;
        catch java.lang.ClassNotFoundException from label09 to label10 with label11;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label12;
    }

    protected void initWebXmlElement(java.lang.String, org.mortbay.xml.XmlParser$Node) throws java.lang.Exception
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        org.mortbay.jetty.webapp.WebXmlConfiguration r21;
        java.lang.StringBuffer $r24, $r25, $r26;
        org.mortbay.xml.XmlParser$Node r22;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r27;

        r21 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: java.lang.String;

        r22 := @parameter1: org.mortbay.xml.XmlParser$Node;

        $r1 = "display-name";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label01;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initDisplayName(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label01:
        $r2 = "description";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label02;

        goto label21;

     label02:
        $r3 = "context-param";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label03;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initContextParam(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label03:
        $r4 = "servlet";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label04;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initServlet(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label04:
        $r5 = "servlet-mapping";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label05;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initServletMapping(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label05:
        $r6 = "session-config";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label06;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initSessionConfig(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label06:
        $r7 = "mime-mapping";

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z6 == 0 goto label07;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initMimeConfig(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label07:
        $r8 = "welcome-file-list";

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z7 == 0 goto label08;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initWelcomeFileList(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label08:
        $r9 = "locale-encoding-mapping-list";

        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z8 == 0 goto label09;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initLocaleEncodingList(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label09:
        $r10 = "error-page";

        $z9 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z9 == 0 goto label10;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initErrorPage(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label10:
        $r11 = "taglib";

        $z10 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z10 == 0 goto label11;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initTagLib(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label11:
        $r12 = "jsp-config";

        $z11 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z11 == 0 goto label12;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initJspConfig(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label12:
        $r13 = "resource-ref";

        $z12 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z12 == 0 goto label13;

        $z21 = staticinvoke <org.mortbay.log.Log: boolean isDebugEnabled()>();

        if $z21 == 0 goto label21;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No implementation: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>($r27);

        goto label21;

     label13:
        $r14 = "security-constraint";

        $z13 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z13 == 0 goto label14;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initSecurityConstraint(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label14:
        $r15 = "login-config";

        $z14 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z14 == 0 goto label15;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initLoginConfig(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label15:
        $r16 = "security-role";

        $z15 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z15 == 0 goto label16;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initSecurityRole(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label16:
        $r17 = "filter";

        $z16 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z16 == 0 goto label17;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initFilter(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label17:
        $r18 = "filter-mapping";

        $z17 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z17 == 0 goto label18;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initFilterMapping(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label18:
        $r19 = "listener";

        $z18 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z18 == 0 goto label19;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initListener(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label19:
        $r20 = "distributable";

        $z19 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z19 == 0 goto label20;

        virtualinvoke r21.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initDistributable(org.mortbay.xml.XmlParser$Node)>(r22);

        goto label21;

     label20:
        $z20 = staticinvoke <org.mortbay.log.Log: boolean isDebugEnabled()>();

        if $z20 == 0 goto label21;

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Element {} not handled in {}", r0, r21);

        $r23 = virtualinvoke r22.<org.mortbay.xml.XmlParser$Node: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>($r23);

     label21:
        return;
    }

    protected void initDisplayName(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.jetty.webapp.WebAppContext $r1;
        org.mortbay.xml.XmlParser$Node r2;
        java.lang.String $r3;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r2 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r3 = virtualinvoke r2.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        virtualinvoke $r1.<org.mortbay.jetty.webapp.WebAppContext: void setDisplayName(java.lang.String)>($r3);

        return;
    }

    protected void initContextParam(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.jetty.webapp.WebXmlConfiguration r3;
        org.mortbay.jetty.webapp.WebAppContext $r4;
        java.lang.StringBuffer $r6, $r7, $r8, $r9, $r10;
        java.util.Map $r5;
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String $r1, $r2, $r11;
        boolean $z0;

        r3 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-name", 0, 1);

        $r2 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-value", 0, 1);

        $z0 = staticinvoke <org.mortbay.log.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ContextParam: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>($r11);

     label1:
        $r4 = virtualinvoke r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r5 = virtualinvoke $r4.<org.mortbay.jetty.webapp.WebAppContext: java.util.Map getInitParams()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    protected void initFilter(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.jetty.servlet.ServletHandler $r3, $r11;
        org.mortbay.xml.XmlParser$Node r0, r8;
        java.lang.String $r1, $r5, $r9, $r10;
        boolean $z0;
        java.util.Iterator $r6;
        org.mortbay.jetty.servlet.FilterHolder $r4, $r12, r15;
        org.mortbay.jetty.webapp.WebXmlConfiguration r2;
        java.lang.Object $r7, $r13, $r14;

        r2 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("filter-name", 0, 1);

        $r3 = r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r4 = virtualinvoke $r3.<org.mortbay.jetty.servlet.ServletHandler: org.mortbay.jetty.servlet.FilterHolder getFilter(java.lang.String)>($r1);

        r15 = $r4;

        if $r4 != null goto label1;

        $r11 = r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r12 = virtualinvoke $r11.<org.mortbay.jetty.servlet.ServletHandler: org.mortbay.jetty.servlet.FilterHolder newFilterHolder()>();

        r15 = $r12;

        virtualinvoke $r12.<org.mortbay.jetty.servlet.FilterHolder: void setName(java.lang.String)>($r1);

        $r13 = r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _filters>;

        $r14 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r13, $r12);

        r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _filters> = $r14;

     label1:
        $r5 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("filter-class", 0, 1);

        if $r5 == null goto label2;

        virtualinvoke r15.<org.mortbay.jetty.servlet.FilterHolder: void setClassName(java.lang.String)>($r5);

     label2:
        $r6 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("init-param");

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.mortbay.xml.XmlParser$Node) $r7;

        $r9 = virtualinvoke r8.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-name", 0, 1);

        $r10 = virtualinvoke r8.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-value", 0, 1);

        virtualinvoke r15.<org.mortbay.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>($r9, $r10);

        goto label3;

     label4:
        return;
    }

    protected void initFilterMapping(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.jetty.servlet.FilterMapping $r2;
        boolean $z0, $z1, $z2;
        org.mortbay.jetty.webapp.WebXmlConfiguration r16;
        java.lang.Object[] $r6, $r12;
        java.lang.String[] $r5, $r7, $r8, $r11, $r13, $r14;
        java.util.ArrayList $r3, $r9;
        int $i0, $i1, $i2, i3;
        org.mortbay.xml.XmlParser$Node r0, $r20, $r23, $r26;
        java.lang.String $r1, $r21, $r24, $r27, $r28;
        java.util.Iterator $r4, $r10, $r15;
        java.lang.Object $r17, $r18, $r19, $r22, $r25;

        r16 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("filter-name", 0, 1);

        $r2 = new org.mortbay.jetty.servlet.FilterMapping;

        specialinvoke $r2.<org.mortbay.jetty.servlet.FilterMapping: void <init>()>();

        virtualinvoke $r2.<org.mortbay.jetty.servlet.FilterMapping: void setFilterName(java.lang.String)>($r1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("url-pattern");

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r25 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r26 = (org.mortbay.xml.XmlParser$Node) $r25;

        $r27 = virtualinvoke $r26.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r28 = virtualinvoke r16.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String normalizePattern(java.lang.String)>($r27);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        goto label1;

     label2:
        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        $r8 = (java.lang.String[]) $r7;

        virtualinvoke $r2.<org.mortbay.jetty.servlet.FilterMapping: void setPathSpecs(java.lang.String[])>($r8);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("servlet-name");

     label3:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r22 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (org.mortbay.xml.XmlParser$Node) $r22;

        $r24 = virtualinvoke $r23.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        goto label3;

     label4:
        $i1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $r11 = newarray (java.lang.String)[$i1];

        $r12 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $r13 = (java.lang.String[]) $r12;

        $r14 = (java.lang.String[]) $r13;

        virtualinvoke $r2.<org.mortbay.jetty.servlet.FilterMapping: void setServletNames(java.lang.String[])>($r14);

        i3 = 0;

        $r15 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("dispatcher");

     label5:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r19 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (org.mortbay.xml.XmlParser$Node) $r19;

        $r21 = virtualinvoke $r20.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $i2 = staticinvoke <org.mortbay.jetty.servlet.Dispatcher: int type(java.lang.String)>($r21);

        i3 = i3 | $i2;

        goto label5;

     label6:
        virtualinvoke $r2.<org.mortbay.jetty.servlet.FilterMapping: void setDispatches(int)>(i3);

        $r17 = r16.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _filterMappings>;

        $r18 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r17, $r2);

        r16.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _filterMappings> = $r18;

        return;
    }

    protected java.lang.String normalizePattern(java.lang.String)
    {
        org.mortbay.jetty.webapp.WebXmlConfiguration r5;
        java.lang.StringBuffer $r1, $r2, $r3;
        int $i0;
        java.lang.String r0, $r4;
        boolean $z0, $z1;

        r5 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("*");

        if $z1 != 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

     label1:
        return r0;
    }

    protected void initServlet(org.mortbay.xml.XmlParser$Node)
    {
        java.lang.Exception $r48;
        org.mortbay.jetty.servlet.ServletHandler $r4, $r44;
        java.lang.StringBuffer $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r37, $r38, $r39, $r49, $r50, $r51, $r52, $r62, $r63, $r65, $r66, $r67;
        java.lang.String $r1, $r2, $r7, $r8, $r11, $r13, $r14, $r22, $r23, $r24, $r25, $r26, $r28, $r32, $r33, $r34, $r36, $r40, $r42, $r43, $r53, $r56, r59, $r64, $r68;
        java.io.File $r30, $r31;
        java.lang.ClassNotFoundException $r54;
        org.mortbay.jetty.servlet.ServletHolder $r5, $r45, r57;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.mortbay.jetty.webapp.WebXmlConfiguration r3;
        int $i0, $i1, $i2, i3;
        org.mortbay.xml.XmlParser$Node r0, $r9, $r10, r58, r61;
        java.util.Iterator $r6, $r60;
        org.mortbay.jetty.webapp.WebAppContext $r29, $r35, $r55;
        java.lang.Object $r12, $r41, $r46, $r47;
        java.lang.Class $r27;

        r3 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        $r2 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("servlet-name", 0, 1);

        $r4 = r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r5 = virtualinvoke $r4.<org.mortbay.jetty.servlet.ServletHandler: org.mortbay.jetty.servlet.ServletHolder getServlet(java.lang.String)>($r2);

        r57 = $r5;

        if $r5 != null goto label01;

        $r44 = r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r45 = virtualinvoke $r44.<org.mortbay.jetty.servlet.ServletHandler: org.mortbay.jetty.servlet.ServletHolder newServletHolder()>();

        r57 = $r45;

        virtualinvoke $r45.<org.mortbay.jetty.servlet.ServletHolder: void setName(java.lang.String)>($r2);

        $r46 = r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _servlets>;

        $r47 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r46, $r45);

        r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _servlets> = $r47;

     label01:
        $r6 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("init-param");

     label02:
        $z5 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label03;

        $r41 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r58 = (org.mortbay.xml.XmlParser$Node) $r41;

        $r42 = virtualinvoke r58.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-name", 0, 1);

        $r43 = virtualinvoke r58.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-value", 0, 1);

        virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>($r42, $r43);

        goto label02;

     label03:
        $r7 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("servlet-class", 0, 1);

        r59 = $r7;

        if $r1 == null goto label09;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("jsp");

        if $z2 == 0 goto label09;

        r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String _jspServletName> = $r2;

        r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String _jspServletClass> = $r7;

     label04:
        $r27 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <org.mortbay.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>($r27, $r7);

        r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: boolean _hasJSP> = 1;

     label05:
        goto label07;

     label06:
        $r54 := @caughtexception;

        $r55 = r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext _context>;

        $r56 = virtualinvoke $r55.<org.mortbay.jetty.webapp.WebAppContext: java.lang.String getContextPath()>();

        staticinvoke <org.mortbay.log.Log: void info(java.lang.String,java.lang.Object,java.lang.Object)>("NO JSP Support for {}, did not find {}", $r56, $r7);

        r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: boolean _hasJSP> = 0;

        r59 = "org.mortbay.servlet.NoJspServlet";

        r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String _jspServletClass> = "org.mortbay.servlet.NoJspServlet";

     label07:
        $r28 = virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String getInitParameter(java.lang.String)>("scratchdir");

        if $r28 != null goto label09;

        $r29 = virtualinvoke r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r30 = virtualinvoke $r29.<org.mortbay.jetty.webapp.WebAppContext: java.io.File getTempDirectory()>();

        $r31 = new java.io.File;

        specialinvoke $r31.<java.io.File: void <init>(java.io.File,java.lang.String)>($r30, "jsp");

        $z3 = virtualinvoke $r31.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label08;

        virtualinvoke $r31.<java.io.File: boolean mkdir()>();

     label08:
        $r32 = virtualinvoke $r31.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>("scratchdir", $r32);

        $r33 = "?";

        $r34 = virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String getInitParameter(java.lang.String)>("classpath");

        $z4 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z4 == 0 goto label09;

        $r35 = virtualinvoke r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r36 = virtualinvoke $r35.<org.mortbay.jetty.webapp.WebAppContext: java.lang.String getClassPath()>();

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("classpath=");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>($r40);

        if $r36 == null goto label09;

        virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>("classpath", $r36);

     label09:
        if r59 == null goto label10;

        virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: void setClassName(java.lang.String)>(r59);

     label10:
        $r8 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("jsp-file", 0, 1);

        if $r8 == null goto label11;

        virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: void setForcedPath(java.lang.String)>($r8);

        $r26 = r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String _jspServletClass>;

        virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: void setClassName(java.lang.String)>($r26);

     label11:
        $r9 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("load-on-startup");

        if $r9 == null goto label17;

        $r23 = virtualinvoke $r9.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r24.<java.lang.String: boolean startsWith(java.lang.String)>("t");

        if $z1 == 0 goto label12;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>("Deprecated boolean load-on-startup.  Please use integer");

        virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: void setInitOrder(int)>(1);

        goto label17;

     label12:
        i3 = 0;

     label13:
        if $r24 == null goto label14;

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r25.<java.lang.String: int length()>();

        if $i2 <= 0 goto label14;

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r24);

     label14:
        goto label16;

     label15:
        $r48 := @caughtexception;

        $r49 = new java.lang.StringBuffer;

        specialinvoke $r49.<java.lang.StringBuffer: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot parse load-on-startup ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". Please use integer");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>($r53);

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r48);

     label16:
        virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: void setInitOrder(int)>(i3);

     label17:
        $r60 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("security-role-ref");

     label18:
        $z6 = interfaceinvoke $r60.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label22;

        $r12 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        r61 = (org.mortbay.xml.XmlParser$Node) $r12;

        $r13 = virtualinvoke r61.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("role-name", 0, 1);

        $r14 = virtualinvoke r61.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("role-link", 0, 1);

        if $r13 == null goto label20;

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i0 <= 0 goto label20;

        if $r14 == null goto label20;

        $i1 = virtualinvoke $r14.<java.lang.String: int length()>();

        if $i1 <= 0 goto label20;

        $z0 = staticinvoke <org.mortbay.log.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label19;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("link role ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>($r22);

     label19:
        virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: void setUserRoleLink(java.lang.String,java.lang.String)>($r13, $r14);

        goto label21;

     label20:
        $r62 = new java.lang.StringBuffer;

        specialinvoke $r62.<java.lang.StringBuffer: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ignored invalid security-role-ref element: servlet-name=");

        $r64 = virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String getName()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r61);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>($r68);

     label21:
        goto label18;

     label22:
        $r10 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("run-as");

        if $r10 == null goto label23;

        $r11 = virtualinvoke $r10.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("role-name", 0, 1);

        if $r11 == null goto label23;

        virtualinvoke r57.<org.mortbay.jetty.servlet.ServletHolder: void setRunAs(java.lang.String)>($r11);

     label23:
        return;

        catch java.lang.ClassNotFoundException from label04 to label05 with label06;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    protected void initServletMapping(org.mortbay.xml.XmlParser$Node)
    {
        java.lang.Object[] $r6;
        java.lang.String[] $r5, $r7, $r8;
        java.util.ArrayList $r3;
        int $i0;
        org.mortbay.xml.XmlParser$Node r0, $r13;
        java.lang.String $r1, $r14, $r15;
        boolean $z0;
        java.util.Iterator $r4;
        org.mortbay.jetty.servlet.ServletMapping $r2;
        org.mortbay.jetty.webapp.WebXmlConfiguration r9;
        java.lang.Object $r10, $r11, $r12;

        r9 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("servlet-name", 0, 1);

        $r2 = new org.mortbay.jetty.servlet.ServletMapping;

        specialinvoke $r2.<org.mortbay.jetty.servlet.ServletMapping: void <init>()>();

        virtualinvoke $r2.<org.mortbay.jetty.servlet.ServletMapping: void setServletName(java.lang.String)>($r1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("url-pattern");

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (org.mortbay.xml.XmlParser$Node) $r12;

        $r14 = virtualinvoke $r13.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r15 = virtualinvoke r9.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String normalizePattern(java.lang.String)>($r14);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        goto label1;

     label2:
        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        $r8 = (java.lang.String[]) $r7;

        virtualinvoke $r2.<org.mortbay.jetty.servlet.ServletMapping: void setPathSpecs(java.lang.String[])>($r8);

        $r10 = r9.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _servletMappings>;

        $r11 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r10, $r2);

        r9.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _servletMappings> = $r11;

        return;
    }

    protected void initListener(org.mortbay.xml.XmlParser$Node)
    {
        java.lang.StringBuffer $r8, $r9, $r10, $r13, $r14, $r15;
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String $r1, $r11, $r16;
        boolean $z0;
        java.lang.Exception $r12;
        org.mortbay.jetty.webapp.WebXmlConfiguration r2;
        org.mortbay.jetty.webapp.WebAppContext $r3;
        java.lang.Class $r4;
        java.lang.Object $r5, $r6, $r7;

        r2 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("listener-class", 0, 1);

     label1:
        $r3 = virtualinvoke r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r4 = virtualinvoke $r3.<org.mortbay.jetty.webapp.WebAppContext: java.lang.Class loadClass(java.lang.String)>($r1);

        $r5 = virtualinvoke r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object newListenerInstance(java.lang.Class)>($r4);

        $z0 = $r5 instanceof java.util.EventListener;

        if $z0 != 0 goto label3;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Not an EventListener: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>($r11);

     label2:
        return;

     label3:
        $r6 = r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _listeners>;

        $r7 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r6, $r5);

        r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _listeners> = $r7;

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate listener ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String,java.lang.Throwable)>($r16, $r12);

        return;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    protected java.lang.Object newListenerInstance(java.lang.Class) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.lang.Class r0;
        java.lang.Object $r1;
        org.mortbay.jetty.webapp.WebXmlConfiguration r2;

        r2 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        return $r1;
    }

    protected void initDistributable(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.jetty.webapp.WebAppContext $r1;
        org.mortbay.xml.XmlParser$Node r2;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r2 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $z0 = virtualinvoke $r1.<org.mortbay.jetty.webapp.WebAppContext: boolean isDistributable()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<org.mortbay.jetty.webapp.WebAppContext: void setDistributable(boolean)>(1);

     label1:
        return;
    }

    protected void initSessionConfig(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.jetty.SessionManager $r6;
        org.mortbay.jetty.webapp.WebXmlConfiguration r3;
        org.mortbay.jetty.servlet.SessionHandler $r5;
        org.mortbay.jetty.webapp.WebAppContext $r4;
        int $i0, $i1;
        org.mortbay.xml.XmlParser$Node r0, $r1;
        java.lang.String $r2;

        r3 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("session-timeout");

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $r4 = virtualinvoke r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r5 = virtualinvoke $r4.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.servlet.SessionHandler getSessionHandler()>();

        $r6 = virtualinvoke $r5.<org.mortbay.jetty.servlet.SessionHandler: org.mortbay.jetty.SessionManager getSessionManager()>();

        $i1 = $i0 * 60;

        interfaceinvoke $r6.<org.mortbay.jetty.SessionManager: void setMaxInactiveInterval(int)>($i1);

     label1:
        return;
    }

    protected void initMimeConfig(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.jetty.MimeTypes $r6;
        org.mortbay.jetty.webapp.WebXmlConfiguration r2;
        org.mortbay.jetty.webapp.WebAppContext $r5;
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String $r1, r3, $r4;
        boolean $z0;

        r2 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("extension", 0, 1);

        r3 = $r1;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label1;

        r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        $r4 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("mime-type", 0, 1);

        $r5 = virtualinvoke r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r6 = virtualinvoke $r5.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.MimeTypes getMimeTypes()>();

        virtualinvoke $r6.<org.mortbay.jetty.MimeTypes: void addMimeMapping(java.lang.String,java.lang.String)>(r3, $r4);

        return;
    }

    protected void initWelcomeFileList(org.mortbay.xml.XmlParser$Node)
    {
        java.util.Iterator $r2;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;
        org.mortbay.xml.XmlParser$Node r1, r4;
        java.lang.Object $r3, $r6, $r7;
        java.lang.String $r5;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r1 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $z0 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: boolean _defaultWelcomeFileList>;

        if $z0 == 0 goto label1;

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _welcomeFiles> = null;

     label1:
        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: boolean _defaultWelcomeFileList> = 0;

        $r2 = virtualinvoke r1.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("welcome-file");

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.mortbay.xml.XmlParser$Node) $r3;

        $r5 = virtualinvoke r4.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r6 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _welcomeFiles>;

        $r7 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r6, $r5);

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _welcomeFiles> = $r7;

        goto label2;

     label3:
        return;
    }

    protected void initLocaleEncodingList(org.mortbay.xml.XmlParser$Node)
    {
        java.util.Iterator $r1;
        org.mortbay.jetty.webapp.WebXmlConfiguration r6;
        org.mortbay.jetty.webapp.WebAppContext $r7;
        org.mortbay.xml.XmlParser$Node r0, r3;
        java.lang.Object $r2;
        java.lang.String $r4, $r5;
        boolean $z0;

        r6 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("locale-encoding-mapping");

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.mortbay.xml.XmlParser$Node) $r2;

        $r4 = virtualinvoke r3.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("locale", 0, 1);

        $r5 = virtualinvoke r3.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("encoding", 0, 1);

        $r7 = virtualinvoke r6.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        virtualinvoke $r7.<org.mortbay.jetty.webapp.WebAppContext: void addLocaleEncoding(java.lang.String,java.lang.String)>($r4, $r5);

        goto label1;

     label2:
        return;
    }

    protected void initErrorPage(org.mortbay.xml.XmlParser$Node)
    {
        java.util.HashMap $r4;
        org.mortbay.jetty.webapp.WebXmlConfiguration r2;
        java.util.Map $r3, $r7;
        int $i0;
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String $r1, r5, $r6;

        r2 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("error-code", 0, 1);

        r5 = $r1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        r5 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("exception-type", 0, 1);

     label2:
        $r6 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("location", 0, 1);

        $r7 = r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.util.Map _errorPages>;

        if $r7 != null goto label3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.util.Map _errorPages> = $r4;

     label3:
        $r3 = r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.util.Map _errorPages>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r6);

        return;
    }

    protected void initTagLib(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.jetty.webapp.WebAppContext $r4;
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String $r1, $r2;
        org.mortbay.jetty.webapp.WebXmlConfiguration r3;

        r3 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("taglib-uri", 0, 1);

        $r2 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("taglib-location", 0, 1);

        $r4 = virtualinvoke r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        virtualinvoke $r4.<org.mortbay.jetty.webapp.WebAppContext: void setResourceAlias(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    protected void initJspConfig(org.mortbay.xml.XmlParser$Node)
    {
        java.lang.String[] $r5;
        int $i0, $i1, i2;
        org.mortbay.xml.XmlParser$Node r0, $r11, $r15, $r18, r20;
        java.lang.String $r3, $r12, $r13, $r16, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r1, $r9;
        org.mortbay.jetty.servlet.ServletMapping $r4;
        org.mortbay.jetty.webapp.WebXmlConfiguration r2;
        java.lang.Object $r6, $r7, $r8, $r10, $r14, r19;

        r2 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: int size()>();

        if i2 >= $i0 goto label3;

        $r14 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.Object get(int)>(i2);

        $z2 = $r14 instanceof org.mortbay.xml.XmlParser$Node;

        if $z2 == 0 goto label2;

        $r16 = "taglib";

        $r15 = (org.mortbay.xml.XmlParser$Node) $r14;

        $r17 = virtualinvoke $r15.<org.mortbay.xml.XmlParser$Node: java.lang.String getTag()>();

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z3 == 0 goto label2;

        $r18 = (org.mortbay.xml.XmlParser$Node) $r14;

        virtualinvoke r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: void initTagLib(org.mortbay.xml.XmlParser$Node)>($r18);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("jsp-property-group");

        r19 = null;

     label4:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.mortbay.xml.XmlParser$Node) $r8;

        $r9 = virtualinvoke r20.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("url-pattern");

     label5:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (org.mortbay.xml.XmlParser$Node) $r10;

        $r12 = virtualinvoke $r11.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r13 = virtualinvoke r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String normalizePattern(java.lang.String)>($r12);

        r19 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>(r19, $r13);

        goto label5;

     label6:
        goto label4;

     label7:
        $i1 = staticinvoke <org.mortbay.util.LazyList: int size(java.lang.Object)>(r19);

        if $i1 <= 0 goto label8;

        $r3 = virtualinvoke r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String getJSPServletName()>();

        if $r3 == null goto label8;

        $r4 = new org.mortbay.jetty.servlet.ServletMapping;

        specialinvoke $r4.<org.mortbay.jetty.servlet.ServletMapping: void <init>()>();

        virtualinvoke $r4.<org.mortbay.jetty.servlet.ServletMapping: void setServletName(java.lang.String)>($r3);

        $r5 = staticinvoke <org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>(r19);

        virtualinvoke $r4.<org.mortbay.jetty.servlet.ServletMapping: void setPathSpecs(java.lang.String[])>($r5);

        $r6 = r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _servletMappings>;

        $r7 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r6, $r4);

        r2.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _servletMappings> = $r7;

     label8:
        return;
    }

    protected void initSecurityConstraint(org.mortbay.xml.XmlParser$Node)
    {
        java.lang.CloneNotSupportedException $r39;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.mortbay.jetty.webapp.WebXmlConfiguration r12;
        java.lang.String[] $r35;
        org.mortbay.jetty.security.ConstraintMapping $r15, $r21;
        java.lang.StringBuffer $r30, $r31, $r32;
        int $i0;
        org.mortbay.xml.XmlParser$Node r1, $r2, $r3, $r10, $r19, $r24, $r37, r42;
        org.mortbay.jetty.security.Constraint $r0, r7;
        java.lang.String $r5, $r11, $r13, $r20, $r25, $r26, $r27, $r28, $r29, $r33, $r38;
        java.util.Iterator $r8, $r14, $r34, $r41;
        java.lang.Object $r4, $r6, $r9, $r16, $r17, $r18, $r22, $r23, $r36, r40;

        r12 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r1 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r0 = new org.mortbay.jetty.security.Constraint;

        specialinvoke $r0.<org.mortbay.jetty.security.Constraint: void <init>()>();

     label01:
        $r2 = virtualinvoke r1.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("auth-constraint");

        if $r2 == null goto label04;

        virtualinvoke $r0.<org.mortbay.jetty.security.Constraint: void setAuthenticate(boolean)>(1);

        $r34 = virtualinvoke $r2.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("role-name");

        r40 = null;

     label02:
        $z6 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label03;

        $r36 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        $r37 = (org.mortbay.xml.XmlParser$Node) $r36;

        $r38 = virtualinvoke $r37.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        r40 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>(r40, $r38);

        goto label02;

     label03:
        $r35 = staticinvoke <org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>(r40);

        virtualinvoke $r0.<org.mortbay.jetty.security.Constraint: void setRoles(java.lang.String[])>($r35);

     label04:
        $r3 = virtualinvoke r1.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("user-data-constraint");

        if $r3 == null goto label09;

        $r24 = virtualinvoke $r3.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("transport-guarantee");

        $r25 = virtualinvoke $r24.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String toUpperCase()>();

        if $r26 == null goto label05;

        $i0 = virtualinvoke $r26.<java.lang.String: int length()>();

        if $i0 == 0 goto label05;

        $r27 = "NONE";

        $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z3 == 0 goto label06;

     label05:
        virtualinvoke $r0.<org.mortbay.jetty.security.Constraint: void setDataConstraint(int)>(0);

        goto label09;

     label06:
        $r28 = "INTEGRAL";

        $z4 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z4 == 0 goto label07;

        virtualinvoke $r0.<org.mortbay.jetty.security.Constraint: void setDataConstraint(int)>(1);

        goto label09;

     label07:
        $r29 = "CONFIDENTIAL";

        $z5 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z5 == 0 goto label08;

        virtualinvoke $r0.<org.mortbay.jetty.security.Constraint: void setDataConstraint(int)>(2);

        goto label09;

     label08:
        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown user-data-constraint:");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>($r33);

        virtualinvoke $r0.<org.mortbay.jetty.security.Constraint: void setDataConstraint(int)>(2);

     label09:
        $r41 = virtualinvoke r1.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("web-resource-collection");

     label10:
        $z7 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label16;

        $r4 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (org.mortbay.xml.XmlParser$Node) $r4;

        $r5 = virtualinvoke r42.<org.mortbay.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("web-resource-name", 0, 1);

        $r6 = virtualinvoke $r0.<org.mortbay.jetty.security.Constraint: java.lang.Object clone()>();

        r7 = (org.mortbay.jetty.security.Constraint) $r6;

        virtualinvoke r7.<org.mortbay.jetty.security.Constraint: void setName(java.lang.String)>($r5);

        $r8 = virtualinvoke r42.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("url-pattern");

     label11:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.mortbay.xml.XmlParser$Node) $r9;

        $r11 = virtualinvoke $r10.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r13 = virtualinvoke r12.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String normalizePattern(java.lang.String)>($r11);

        $r14 = virtualinvoke r42.<org.mortbay.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("http-method");

        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

     label12:
        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r18 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (org.mortbay.xml.XmlParser$Node) $r18;

        $r20 = virtualinvoke $r19.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r21 = new org.mortbay.jetty.security.ConstraintMapping;

        specialinvoke $r21.<org.mortbay.jetty.security.ConstraintMapping: void <init>()>();

        virtualinvoke $r21.<org.mortbay.jetty.security.ConstraintMapping: void setMethod(java.lang.String)>($r20);

        virtualinvoke $r21.<org.mortbay.jetty.security.ConstraintMapping: void setPathSpec(java.lang.String)>($r13);

        virtualinvoke $r21.<org.mortbay.jetty.security.ConstraintMapping: void setConstraint(org.mortbay.jetty.security.Constraint)>(r7);

        $r22 = r12.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _constraintMappings>;

        $r23 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r22, $r21);

        r12.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _constraintMappings> = $r23;

        goto label12;

     label13:
        $r15 = new org.mortbay.jetty.security.ConstraintMapping;

        specialinvoke $r15.<org.mortbay.jetty.security.ConstraintMapping: void <init>()>();

        virtualinvoke $r15.<org.mortbay.jetty.security.ConstraintMapping: void setPathSpec(java.lang.String)>($r13);

        virtualinvoke $r15.<org.mortbay.jetty.security.ConstraintMapping: void setConstraint(org.mortbay.jetty.security.Constraint)>(r7);

        $r16 = r12.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _constraintMappings>;

        $r17 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r16, $r15);

        r12.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.Object _constraintMappings> = $r17;

     label14:
        goto label11;

     label15:
        goto label10;

     label16:
        goto label18;

     label17:
        $r39 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.Throwable)>($r39);

     label18:
        return;

        catch java.lang.CloneNotSupportedException from label01 to label16 with label17;
    }

    protected void initLoginConfig(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.jetty.security.FormAuthenticator $r34, r35;
        org.mortbay.jetty.Server $r42;
        org.mortbay.jetty.security.UserRealm[] $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.mortbay.jetty.security.UserRealm $r17, $r18, r45;
        org.mortbay.jetty.handler.ContextHandler$SContext $r40;
        org.mortbay.jetty.webapp.WebXmlConfiguration r3;
        org.mortbay.jetty.security.SecurityHandler $r5, $r7, $r38;
        org.mortbay.jetty.security.DigestAuthenticator $r32;
        java.lang.StringBuffer $r13, $r14, $r15, $r26, $r27, $r28;
        int $i0, i1;
        org.mortbay.xml.XmlParser$Node r0, $r1, $r8, $r9, $r10, $r39;
        org.mortbay.jetty.security.ClientCertAuthenticator $r30, $r31;
        java.lang.String r2, $r11, $r12, $r16, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r29, $r44;
        org.mortbay.jetty.security.BasicAuthenticator $r33;
        org.mortbay.jetty.security.Authenticator r36;
        org.mortbay.jetty.webapp.WebAppContext $r4, $r6, $r37;
        org.mortbay.jetty.handler.ContextHandler $r41;

        r3 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("auth-method");

        r35 = null;

        if $r1 == null goto label07;

        r36 = null;

        $r20 = virtualinvoke $r1.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r21 = "FORM";

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z1 == 0 goto label01;

        $r34 = new org.mortbay.jetty.security.FormAuthenticator;

        specialinvoke $r34.<org.mortbay.jetty.security.FormAuthenticator: void <init>()>();

        r35 = $r34;

        r36 = $r34;

        goto label06;

     label01:
        $r22 = "BASIC";

        $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z2 == 0 goto label02;

        $r33 = new org.mortbay.jetty.security.BasicAuthenticator;

        specialinvoke $r33.<org.mortbay.jetty.security.BasicAuthenticator: void <init>()>();

        r36 = $r33;

        goto label06;

     label02:
        $r23 = "DIGEST";

        $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z3 == 0 goto label03;

        $r32 = new org.mortbay.jetty.security.DigestAuthenticator;

        specialinvoke $r32.<org.mortbay.jetty.security.DigestAuthenticator: void <init>()>();

        r36 = $r32;

        goto label06;

     label03:
        $r24 = "CLIENT_CERT";

        $z4 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z4 == 0 goto label04;

        $r31 = new org.mortbay.jetty.security.ClientCertAuthenticator;

        specialinvoke $r31.<org.mortbay.jetty.security.ClientCertAuthenticator: void <init>()>();

        r36 = $r31;

        goto label06;

     label04:
        $r25 = "CLIENT-CERT";

        $z5 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z5 == 0 goto label05;

        $r30 = new org.mortbay.jetty.security.ClientCertAuthenticator;

        specialinvoke $r30.<org.mortbay.jetty.security.ClientCertAuthenticator: void <init>()>();

        r36 = $r30;

        goto label06;

     label05:
        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("UNKNOWN AUTH METHOD: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>($r29);

     label06:
        $r37 = virtualinvoke r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r38 = virtualinvoke $r37.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.security.SecurityHandler getSecurityHandler()>();

        virtualinvoke $r38.<org.mortbay.jetty.security.SecurityHandler: void setAuthenticator(org.mortbay.jetty.security.Authenticator)>(r36);

     label07:
        $r39 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("realm-name");

        $r40 = staticinvoke <org.mortbay.jetty.handler.ContextHandler: org.mortbay.jetty.handler.ContextHandler$SContext getCurrentContext()>();

        $r41 = virtualinvoke $r40.<org.mortbay.jetty.handler.ContextHandler$SContext: org.mortbay.jetty.handler.ContextHandler getContextHandler()>();

        $r42 = virtualinvoke $r41.<org.mortbay.jetty.handler.ContextHandler: org.mortbay.jetty.Server getServer()>();

        $r43 = virtualinvoke $r42.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] getUserRealms()>();

        if $r39 != null goto label08;

        $r44 = "default";

        goto label09;

     label08:
        $r44 = virtualinvoke $r39.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

     label09:
        r2 = $r44;

        $r4 = virtualinvoke r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r5 = virtualinvoke $r4.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.security.SecurityHandler getSecurityHandler()>();

        r45 = virtualinvoke $r5.<org.mortbay.jetty.security.SecurityHandler: org.mortbay.jetty.security.UserRealm getUserRealm()>();

        i1 = 0;

     label10:
        if r45 != null goto label12;

        if $r43 == null goto label12;

        $i0 = lengthof $r43;

        if i1 >= $i0 goto label12;

        $r17 = $r43[i1];

        if $r17 == null goto label11;

        $r18 = $r43[i1];

        $r19 = interfaceinvoke $r18.<org.mortbay.jetty.security.UserRealm: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z0 == 0 goto label11;

        r45 = $r43[i1];

     label11:
        i1 = i1 + 1;

        goto label10;

     label12:
        if r45 != null goto label13;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown realm: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>($r16);

        goto label14;

     label13:
        $r6 = virtualinvoke r3.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext getWebAppContext()>();

        $r7 = virtualinvoke $r6.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.security.SecurityHandler getSecurityHandler()>();

        virtualinvoke $r7.<org.mortbay.jetty.security.SecurityHandler: void setUserRealm(org.mortbay.jetty.security.UserRealm)>(r45);

     label14:
        $r8 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("form-login-config");

        if $r8 == null goto label17;

        if r35 != null goto label15;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>("FORM Authentication miss-configured");

        goto label17;

     label15:
        $r9 = virtualinvoke $r8.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("form-login-page");

        if $r9 == null goto label16;

        $r12 = virtualinvoke $r9.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        virtualinvoke r35.<org.mortbay.jetty.security.FormAuthenticator: void setLoginPage(java.lang.String)>($r12);

     label16:
        $r10 = virtualinvoke $r8.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>("form-error-page");

        if $r10 == null goto label17;

        $r11 = virtualinvoke $r10.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        virtualinvoke r35.<org.mortbay.jetty.security.FormAuthenticator: void setErrorPage(java.lang.String)>($r11);

     label17:
        return;
    }

    protected void initSecurityRole(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.xml.XmlParser$Node r1;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        r1 := @parameter0: org.mortbay.xml.XmlParser$Node;

        return;
    }

    protected java.lang.String getJSPServletName()
    {
        org.mortbay.jetty.servlet.ServletHolder r6;
        org.mortbay.jetty.servlet.PathMap$Entry $r4;
        org.mortbay.jetty.servlet.ServletHandler $r3;
        org.mortbay.jetty.webapp.WebXmlConfiguration r0;
        org.mortbay.jetty.webapp.WebAppContext $r2;
        java.lang.Object $r5;
        java.lang.String $r1, $r7, $r8;

        r0 := @this: org.mortbay.jetty.webapp.WebXmlConfiguration;

        $r1 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String _jspServletName>;

        if $r1 != null goto label1;

        $r2 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: org.mortbay.jetty.webapp.WebAppContext _context>;

        $r3 = virtualinvoke $r2.<org.mortbay.jetty.webapp.WebAppContext: org.mortbay.jetty.servlet.ServletHandler getServletHandler()>();

        $r4 = virtualinvoke $r3.<org.mortbay.jetty.servlet.ServletHandler: org.mortbay.jetty.servlet.PathMap$Entry getHolderEntry(java.lang.String)>("test.jsp");

        if $r4 == null goto label1;

        $r5 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (org.mortbay.jetty.servlet.ServletHolder) $r5;

        $r7 = virtualinvoke r6.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String getName()>();

        r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String _jspServletName> = $r7;

     label1:
        $r8 = r0.<org.mortbay.jetty.webapp.WebXmlConfiguration: java.lang.String _jspServletName>;

        return $r8;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
