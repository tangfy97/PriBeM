public class org.apache.pdfbox.util.operator.ShowTextGlyph extends org.apache.pdfbox.util.operator.OperatorProcessor
{

    public void <init>()
    {
        org.apache.pdfbox.util.operator.ShowTextGlyph r0;

        r0 := @this: org.apache.pdfbox.util.operator.ShowTextGlyph;

        specialinvoke r0.<org.apache.pdfbox.util.operator.OperatorProcessor: void <init>()>();

        return;
    }

    public void process(org.apache.pdfbox.util.PDFOperator, java.util.List) throws java.io.IOException
    {
        byte[] $r18;
        org.apache.pdfbox.cos.COSNumber $r19;
        org.apache.pdfbox.pdmodel.text.PDTextState $r6, $r9;
        org.apache.pdfbox.util.operator.ShowTextGlyph r3;
        boolean $z0, $z1;
        org.apache.pdfbox.pdmodel.graphics.PDGraphicsState $r5, $r8;
        java.util.List r0;
        org.apache.pdfbox.cos.COSBase $r10;
        float $f0, $f1, f2, $f3, $f4, $f5, $f6, f7;
        java.lang.StringBuilder $r12, $r13, $r14;
        org.apache.pdfbox.util.PDFOperator r25;
        org.apache.pdfbox.cos.COSArray r2;
        org.apache.pdfbox.cos.COSString $r16;
        int $i0, i1;
        java.lang.String $r15;
        java.io.IOException $r11;
        org.apache.pdfbox.util.PDFStreamEngine $r4, $r7, $r17, $r21, $r22;
        org.apache.pdfbox.util.Matrix $r20, $r23, $r24;
        java.lang.Object $r1;

        r3 := @this: org.apache.pdfbox.util.operator.ShowTextGlyph;

        r25 := @parameter0: org.apache.pdfbox.util.PDFOperator;

        r0 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (org.apache.pdfbox.cos.COSArray) $r1;

        $i0 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>();

        $r4 = r3.<org.apache.pdfbox.util.operator.ShowTextGlyph: org.apache.pdfbox.util.PDFStreamEngine context>;

        $r5 = virtualinvoke $r4.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState getGraphicsState()>();

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        $f0 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.text.PDTextState: float getFontSize()>();

        $r7 = r3.<org.apache.pdfbox.util.operator.ShowTextGlyph: org.apache.pdfbox.util.PDFStreamEngine context>;

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState getGraphicsState()>();

        $r9 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        $f1 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.text.PDTextState: float getHorizontalScalingPercent()>();

        f2 = $f1 / 100.0F;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label5;

        $r10 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i1);

        $z0 = $r10 instanceof org.apache.pdfbox.cos.COSNumber;

        if $z0 == 0 goto label2;

        $r19 = (org.apache.pdfbox.cos.COSNumber) $r10;

        $f3 = virtualinvoke $r19.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        $r20 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r20.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $f4 = $f3 / 1000.0F;

        $f5 = neg $f4;

        $f6 = $f5 * f2;

        f7 = $f6 * $f0;

        virtualinvoke $r20.<org.apache.pdfbox.util.Matrix: void setValue(int,int,float)>(2, 0, f7);

        $r22 = r3.<org.apache.pdfbox.util.operator.ShowTextGlyph: org.apache.pdfbox.util.PDFStreamEngine context>;

        $r21 = r3.<org.apache.pdfbox.util.operator.ShowTextGlyph: org.apache.pdfbox.util.PDFStreamEngine context>;

        $r23 = virtualinvoke $r21.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix getTextMatrix()>();

        $r24 = virtualinvoke $r20.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)>($r23, $r20);

        virtualinvoke $r22.<org.apache.pdfbox.util.PDFStreamEngine: void setTextMatrix(org.apache.pdfbox.util.Matrix)>($r24);

        goto label4;

     label2:
        $z1 = $r10 instanceof org.apache.pdfbox.cos.COSString;

        if $z1 == 0 goto label3;

        $r17 = r3.<org.apache.pdfbox.util.operator.ShowTextGlyph: org.apache.pdfbox.util.PDFStreamEngine context>;

        $r16 = (org.apache.pdfbox.cos.COSString) $r10;

        $r18 = virtualinvoke $r16.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        virtualinvoke $r17.<org.apache.pdfbox.util.PDFStreamEngine: void processEncodedText(byte[])>($r18);

        goto label4;

     label3:
        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type in array for TJ operation:");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }
}
