public class org.apache.batik.gvt.text.AttributedCharacterSpanIterator extends java.lang.Object implements java.text.AttributedCharacterIterator
{
    private java.text.AttributedCharacterIterator aci;
    private int begin;
    private int end;

    public void <init>(java.text.AttributedCharacterIterator, int, int)
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator r1, $r2;
        int $i0, i1, $i2, $i3, i4, $i5, $i6;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci> = r1;

        $i0 = interfaceinvoke r1.<java.text.CharacterIterator: int getEndIndex()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, i1);

        r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end> = $i2;

        $i3 = interfaceinvoke r1.<java.text.CharacterIterator: int getBeginIndex()>();

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i3, i4);

        r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int begin> = $i5;

        $r2 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $i6 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int begin>;

        interfaceinvoke $r2.<java.text.CharacterIterator: char setIndex(int)>($i6);

        return;
    }

    public java.util.Set getAllAttributeKeys()
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.util.Set $r2;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $r1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $r2 = interfaceinvoke $r1.<java.text.AttributedCharacterIterator: java.util.Set getAllAttributeKeys()>();

        return $r2;
    }

    public java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator$Attribute r1;
        java.text.AttributedCharacterIterator $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $r2 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $r3 = interfaceinvoke $r2.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>(r1);

        return $r3;
    }

    public java.util.Map getAttributes()
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator $r1;
        java.util.Map $r2;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $r1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $r2 = interfaceinvoke $r1.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();

        return $r2;
    }

    public int getRunLimit()
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $r1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $i0 = interfaceinvoke $r1.<java.text.AttributedCharacterIterator: int getRunLimit()>();

        $i1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end>;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i2;
    }

    public int getRunLimit(java.text.AttributedCharacterIterator$Attribute)
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator$Attribute r1;
        java.text.AttributedCharacterIterator $r2;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $r2 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $i0 = interfaceinvoke $r2.<java.text.AttributedCharacterIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>(r1);

        $i1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end>;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i2;
    }

    public int getRunLimit(java.util.Set)
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator $r2;
        int $i0, $i1, $i2;
        java.util.Set r1;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $i0 = interfaceinvoke $r2.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>(r1);

        $i1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end>;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i2;
    }

    public int getRunStart()
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $r1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $i0 = interfaceinvoke $r1.<java.text.AttributedCharacterIterator: int getRunStart()>();

        $i1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int begin>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    public int getRunStart(java.text.AttributedCharacterIterator$Attribute)
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator$Attribute r1;
        java.text.AttributedCharacterIterator $r2;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $r2 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $i0 = interfaceinvoke $r2.<java.text.AttributedCharacterIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>(r1);

        $i1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int begin>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    public int getRunStart(java.util.Set)
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator $r2;
        int $i0, $i1, $i2;
        java.util.Set r1;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $i0 = interfaceinvoke $r2.<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>(r1);

        $i1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int begin>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    public java.lang.Object clone()
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator $r0, r1;
        java.text.AttributedCharacterIterator $r2, $r4;
        int $i0, $i1;
        java.lang.Object $r3;

        r1 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $r0 = new org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $r2 = r1.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $r3 = interfaceinvoke $r2.<java.text.CharacterIterator: java.lang.Object clone()>();

        $r4 = (java.text.AttributedCharacterIterator) $r3;

        $i1 = r1.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int begin>;

        $i0 = r1.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end>;

        specialinvoke $r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: void <init>(java.text.AttributedCharacterIterator,int,int)>($r4, $i1, $i0);

        return $r0;
    }

    public char current()
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        char $c0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $r1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char current()>();

        return $c0;
    }

    public char first()
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator $r1;
        int $i0;
        char $c1;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $r1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $i0 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int begin>;

        $c1 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>($i0);

        return $c1;
    }

    public int getBeginIndex()
    {
        int $i0;
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $i0 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int begin>;

        return $i0;
    }

    public int getEndIndex()
    {
        int $i0;
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $i0 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end>;

        return $i0;
    }

    public int getIndex()
    {
        int $i0;
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $r1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $i0 = interfaceinvoke $r1.<java.text.CharacterIterator: int getIndex()>();

        return $i0;
    }

    public char last()
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        int $i0, $i1;
        char $c2;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $i0 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end>;

        $i1 = $i0 - 1;

        $c2 = virtualinvoke r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: char setIndex(int)>($i1);

        return $c2;
    }

    public char next()
    {
        char $c4, $c5;
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int getIndex()>();

        $i1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end>;

        $i2 = $i1 - 1;

        if $i0 >= $i2 goto label1;

        $r1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $c5 = interfaceinvoke $r1.<java.text.CharacterIterator: char next()>();

        return $c5;

     label1:
        $i3 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end>;

        $c4 = virtualinvoke r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: char setIndex(int)>($i3);

        return $c4;
    }

    public char previous()
    {
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator $r1;
        int $i0, $i1;
        char $c2;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int getIndex()>();

        $i1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int begin>;

        if $i0 <= $i1 goto label1;

        $r1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        $c2 = interfaceinvoke $r1.<java.text.CharacterIterator: char previous()>();

        return $c2;

     label1:
        return 65535;
    }

    public char setIndex(int)
    {
        char c6;
        org.apache.batik.gvt.text.AttributedCharacterSpanIterator r0;
        java.text.AttributedCharacterIterator $r1;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.batik.gvt.text.AttributedCharacterSpanIterator;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int begin>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i1);

        $i3 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end>;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $r1 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: java.text.AttributedCharacterIterator aci>;

        c6 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>($i4);

        $i5 = r0.<org.apache.batik.gvt.text.AttributedCharacterSpanIterator: int end>;

        if $i4 != $i5 goto label1;

        c6 = 65535;

     label1:
        return c6;
    }
}
