public class org.bouncycastle.crypto.signers.ISO9796d2PSSSigner extends java.lang.Object implements org.bouncycastle.crypto.SignerWithRecovery
{
    public static final int TRAILER_IMPLICIT;
    public static final int TRAILER_RIPEMD160;
    public static final int TRAILER_RIPEMD128;
    public static final int TRAILER_SHA1;
    private org.bouncycastle.crypto.Digest digest;
    private org.bouncycastle.crypto.AsymmetricBlockCipher cipher;
    private java.security.SecureRandom random;
    private byte[] standardSalt;
    private int hLen;
    private int trailer;
    private int keyBits;
    private byte[] block;
    private byte[] mBuf;
    private int messageLength;
    private int saltLength;
    private boolean fullMessage;
    private byte[] recoveredMessage;

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int, boolean)
    {
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;
        org.bouncycastle.crypto.Digest r2;
        java.lang.IllegalArgumentException $r3;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;
        int $i0, i1;
        boolean z0, $z1, $z2, $z3;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        r2 := @parameter1: org.bouncycastle.crypto.Digest;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = r1;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest> = r2;

        $i0 = interfaceinvoke r2.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen> = $i0;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int saltLength> = i1;

        if z0 == 0 goto label1;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int trailer> = 188;

        goto label5;

     label1:
        $z1 = r2 instanceof org.bouncycastle.crypto.digests.SHA1Digest;

        if $z1 == 0 goto label2;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int trailer> = 13260;

        goto label5;

     label2:
        $z2 = r2 instanceof org.bouncycastle.crypto.digests.RIPEMD160Digest;

        if $z2 == 0 goto label3;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int trailer> = 12748;

        goto label5;

     label3:
        $z3 = r2 instanceof org.bouncycastle.crypto.digests.RIPEMD128Digest;

        if $z3 == 0 goto label4;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int trailer> = 13004;

        goto label5;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no valid trailer for digest");

        throw $r3;

     label5:
        return;
    }

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int)
    {
        int i0;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;
        org.bouncycastle.crypto.Digest r2;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        r2 := @parameter1: org.bouncycastle.crypto.Digest;

        i0 := @parameter2: int;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,int,boolean)>(r1, r2, i0, 0);

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        byte[] $r2, $r4, $r5, $r7, $r10, $r11, $r12, $r21;
        java.security.SecureRandom $r8, $r15;
        org.bouncycastle.crypto.params.ParametersWithRandom r16;
        java.math.BigInteger $r20;
        org.bouncycastle.crypto.CipherParameters r1, $r9, $r14;
        boolean $z0, $z1, z2;
        org.bouncycastle.crypto.params.ParametersWithSalt r18;
        org.bouncycastle.crypto.Digest $r3, $r6;
        org.bouncycastle.crypto.params.RSAKeyParameters r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;
        java.lang.IllegalArgumentException $r13;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r19;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        z2 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        i14 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int saltLength>;

        $z0 = r1 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z0 == 0 goto label2;

        r16 = (org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r14 = virtualinvoke r16.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        r17 = (org.bouncycastle.crypto.params.RSAKeyParameters) $r14;

        if z2 == 0 goto label1;

        $r15 = virtualinvoke r16.<org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: java.security.SecureRandom random> = $r15;

     label1:
        goto label5;

     label2:
        $z1 = r1 instanceof org.bouncycastle.crypto.params.ParametersWithSalt;

        if $z1 == 0 goto label4;

        r18 = (org.bouncycastle.crypto.params.ParametersWithSalt) r1;

        $r9 = virtualinvoke r18.<org.bouncycastle.crypto.params.ParametersWithSalt: org.bouncycastle.crypto.CipherParameters getParameters()>();

        r17 = (org.bouncycastle.crypto.params.RSAKeyParameters) $r9;

        $r10 = virtualinvoke r18.<org.bouncycastle.crypto.params.ParametersWithSalt: byte[] getSalt()>();

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] standardSalt> = $r10;

        $r11 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] standardSalt>;

        i14 = lengthof $r11;

        $r12 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] standardSalt>;

        $i13 = lengthof $r12;

        $i12 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int saltLength>;

        if $i13 == $i12 goto label3;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Fixed salt is of wrong length");

        throw $r13;

     label3:
        goto label5;

     label4:
        r17 = (org.bouncycastle.crypto.params.RSAKeyParameters) r1;

        if z2 == 0 goto label5;

        $r8 = new java.security.SecureRandom;

        specialinvoke $r8.<java.security.SecureRandom: void <init>()>();

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: java.security.SecureRandom random> = $r8;

     label5:
        $r19 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        interfaceinvoke $r19.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z2, r17);

        $r20 = virtualinvoke r17.<org.bouncycastle.crypto.params.RSAKeyParameters: java.math.BigInteger getModulus()>();

        $i15 = virtualinvoke $r20.<java.math.BigInteger: int bitLength()>();

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int keyBits> = $i15;

        $i16 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int keyBits>;

        $i17 = $i16 + 7;

        $i18 = $i17 / 8;

        $r21 = newarray (byte)[$i18];

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block> = $r21;

        $i19 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int trailer>;

        if $i19 != 188 goto label6;

        $r5 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i6 = lengthof $r5;

        $r6 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i7 = interfaceinvoke $r6.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $i8 = $i6 - $i7;

        $i9 = $i8 - i14;

        $i10 = $i9 - 1;

        $i11 = $i10 - 1;

        $r7 = newarray (byte)[$i11];

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf> = $r7;

        goto label7;

     label6:
        $r2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i0 = lengthof $r2;

        $r3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i1 = interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $i2 = $i0 - $i1;

        $i3 = $i2 - i14;

        $i4 = $i3 - 1;

        $i5 = $i4 - 2;

        $r4 = newarray (byte)[$i5];

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf> = $r4;

     label7:
        virtualinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void reset()>();

        return;
    }

    private boolean isSameAs(byte[], byte[])
    {
        byte[] r1, r2;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;
        byte $b3, $b4;
        int $i0, $i1, $i2, i5, $i6, $i7;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        r2 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        $i1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength>;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        i5 = 0;

     label2:
        $i2 = lengthof r1;

        if i5 == $i2 goto label4;

        $b4 = r2[i5];

        $b3 = r1[i5];

        $i6 = (int) $b4;

        $i7 = (int) $b3;

        if $i6 == $i7 goto label3;

        return 0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return 1;
    }

    private void clearBlock(byte[])
    {
        byte[] r0;
        int $i0, i1;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r1;

        r1 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        r0 := @parameter0: byte[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 == $i0 goto label2;

        r0[i1] = 0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void update(byte)
    {
        byte[] $r1, $r3;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;
        org.bouncycastle.crypto.Digest $r2;
        byte b2;
        int $i0, $i1, $i3, $i4;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        b2 := @parameter0: byte;

        $i1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength>;

        $r1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label1;

        $r3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        $i3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength>;

        $i4 = $i3 + 1;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength> = $i4;

        $r3[$i3] = b2;

        goto label2;

     label1:
        $r2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: void update(byte)>(b2);

     label2:
        return;
    }

    public void update(byte[], int, int)
    {
        byte[] r1, $r3;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;
        org.bouncycastle.crypto.Digest $r2;
        byte $b2;
        int $i0, $i1, i3, i4, $i6;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        r1 := @parameter0: byte[];

        i3 := @parameter1: int;

        i4 := @parameter2: int;

     label1:
        if i4 <= 0 goto label2;

        $i1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength>;

        $r3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        $i0 = lengthof $r3;

        if $i1 >= $i0 goto label2;

        $b2 = r1[i3];

        virtualinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void update(byte)>($b2);

        i3 = i3 + 1;

        $i6 = (int) -1;

        i4 = i4 + $i6;

        goto label1;

     label2:
        if i4 <= 0 goto label3;

        $r2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, i3, i4);

     label3:
        return;
    }

    public void reset()
    {
        byte[] $r2, $r3, $r4, $r5;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;
        org.bouncycastle.crypto.Digest $r1;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        $r1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void reset()>();

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength> = 0;

        $r2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        if $r2 == null goto label1;

        $r5 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r5);

     label1:
        $r3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        if $r3 == null goto label2;

        $r4 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r4);

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage> = null;

     label2:
        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: boolean fullMessage> = 0;

        return;
    }

    public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException
    {
        byte[] r2, r4, $r6, $r9, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r35, $r36, $r37, r38;
        java.security.SecureRandom $r10;
        byte $b39, $b43, $b45, $b46, $b47, $b51, $b52, $b53, $b54, b56, b59, b60, b61;
        long $l3;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;
        org.bouncycastle.crypto.Digest $r1, $r3, $r5, $r7, $r8, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i40, $i41, $i42, $i44, $i48, $i49, $i50, $i55, i57, $i58;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r30;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        $r1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r2 = newarray (byte)[$i0];

        $r3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

        r4 = newarray (byte)[8];

        $i1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength>;

        $i2 = $i1 * 8;

        $l3 = (long) $i2;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void LtoOSP(long,byte[])>($l3, r4);

        $r5 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i4 = lengthof r4;

        interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r4, 0, $i4);

        $r7 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $r6 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        $i5 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength>;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r6, 0, $i5);

        $r8 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i6 = lengthof r2;

        interfaceinvoke $r8.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r2, 0, $i6);

        $r9 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] standardSalt>;

        if $r9 == null goto label1;

        r38 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] standardSalt>;

        goto label2;

     label1:
        $i7 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int saltLength>;

        r38 = newarray (byte)[$i7];

        $r10 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: java.security.SecureRandom random>;

        virtualinvoke $r10.<java.security.SecureRandom: void nextBytes(byte[])>(r38);

     label2:
        $r11 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i8 = lengthof r38;

        interfaceinvoke $r11.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r38, 0, $i8);

        $r12 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i9 = interfaceinvoke $r12.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $r37 = newarray (byte)[$i9];

        $r13 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r13.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r37, 0);

        b56 = 2;

        b61 = 2;

        b60 = 2;

        b59 = 2;

        $i10 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int trailer>;

        if $i10 != 188 goto label3;

        b56 = 1;

        b61 = 1;

        b60 = 1;

        b59 = 1;

     label3:
        $r14 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i12 = lengthof $r14;

        $i11 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength>;

        $i14 = $i12 - $i11;

        $i13 = lengthof r38;

        $i16 = $i14 - $i13;

        $i15 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i17 = $i16 - $i15;

        $i18 = $i17 - b60;

        $i55 = $i18 - 1;

        $r15 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $r15[$i55] = 1;

        $r17 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        $r16 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i20 = $i55 + 1;

        $i19 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, $r16, $i20, $i19);

        $r18 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i22 = $i55 + 1;

        $i21 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength>;

        $i24 = $i22 + $i21;

        $i23 = lengthof r38;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r38, 0, $r18, $i24, $i23);

        $i29 = lengthof $r37;

        $r19 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i26 = lengthof $r19;

        $i25 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i27 = $i26 - $i25;

        $i28 = $i27 - b59;

        $r20 = specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] maskGeneratorFunction1(byte[],int,int,int)>($r37, 0, $i29, $i28);

        i57 = 0;

     label4:
        $i58 = lengthof $r20;

        if i57 == $i58 goto label5;

        $r36 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $b52 = $r36[i57];

        $b51 = $r20[i57];

        $b53 = $b52 ^ $b51;

        $b54 = (byte) $b53;

        $r36[i57] = $b54;

        i57 = i57 + 1;

        goto label4;

     label5:
        $r22 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $r21 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i31 = lengthof $r21;

        $i30 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i32 = $i31 - $i30;

        $i34 = $i32 - b61;

        $i33 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r37, 0, $r22, $i34, $i33);

        $i35 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int trailer>;

        if $i35 != 188 goto label6;

        $r35 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $r34 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i49 = lengthof $r34;

        $i50 = $i49 - 1;

        $r35[$i50] = -68;

        goto label7;

     label6:
        $r24 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $r23 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i36 = lengthof $r23;

        $i40 = $i36 - 2;

        $i37 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int trailer>;

        $i38 = $i37 >>> 8;

        $b39 = (byte) $i38;

        $r24[$i40] = $b39;

        $r26 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $r25 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i41 = lengthof $r25;

        $i44 = $i41 - 1;

        $i42 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int trailer>;

        $b43 = (byte) $i42;

        $r26[$i44] = $b43;

     label7:
        $r27 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $b45 = $r27[0];

        $b46 = $b45 & 127;

        $b47 = (byte) $b46;

        $r27[0] = $b47;

        $r30 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $r29 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $r28 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        $i48 = lengthof $r28;

        $r31 = interfaceinvoke $r30.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r29, 0, $i48);

        $r32 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r32);

        $r33 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] block>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r33);

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength> = 0;

        return $r31;
    }

    public boolean verifySignature(byte[])
    {
        byte[] r1, $r3, $r5, $r6, $r7, $r8, $r10, $r12, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, r33, r34, $r35, $r37;
        byte $b7, $b12, $b16, $b19, $b20, $b21, $b44, $b45, $b48, $b49, $b50, $b51, $b52, b60, b78, b79, b80;
        long $l31;
        short $s8, $s9, $s13, $s17, $s81, $s82, $s84;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i10, $i11, $i14, $i15, $i18, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i46, $i47, $i53, $i54, $i55, $i56, $i57, $i58, $i59, i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, i72, $i73, i74, i75, i76, $i77, $i83, $i85, $i86, $i87;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r2;
        java.lang.Exception $r32;
        java.lang.IllegalStateException $r38, $r39, $r40;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.bouncycastle.crypto.Digest $r4, $r9, $r11, $r13, $r14, $r15, $r23, $r27, $r29, $r36;
        java.lang.IllegalArgumentException $r41;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        r1 := @parameter0: byte[];

     label01:
        $r2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i0 = lengthof r1;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r1, 0, $i0);

        r33 = $r3;

     label02:
        goto label04;

     label03:
        $r32 := @caughtexception;

        return 0;

     label04:
        $i4 = lengthof $r3;

        $i1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int keyBits>;

        $i2 = $i1 + 7;

        $i3 = $i2 / 8;

        if $i4 >= $i3 goto label05;

        $i53 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int keyBits>;

        $i54 = $i53 + 7;

        $i55 = $i54 / 8;

        r34 = newarray (byte)[$i55];

        $i57 = lengthof r34;

        $i56 = lengthof $r3;

        $i59 = $i57 - $i56;

        $i58 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r34, $i59, $i58);

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r3);

        r33 = r34;

     label05:
        $i5 = lengthof r33;

        $i6 = $i5 - 1;

        $b7 = r33[$i6];

        $s81 = (short) $b7;

        $s8 = $s81 & 255;

        $s9 = $s8 ^ 188;

        if $s9 != 0 goto label06;

        b60 = 1;

        b80 = 1;

        b79 = 1;

        b78 = 1;

        goto label12;

     label06:
        $i10 = lengthof r33;

        $i11 = $i10 - 2;

        $b12 = r33[$i11];

        $s82 = (short) $b12;

        $s13 = $s82 & 255;

        $i83 = (int) $s13;

        $i18 = $i83 << 8;

        $i14 = lengthof r33;

        $i15 = $i14 - 1;

        $b16 = r33[$i15];

        $s84 = (short) $b16;

        $s17 = $s84 & 255;

        $i85 = (int) $s17;

        i61 = $i18 | $i85;

        lookupswitch(i61)
        {
            case 12748: goto label07;
            case 13004: goto label09;
            case 13260: goto label08;
            default: goto label10;
        };

     label07:
        $r29 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $z3 = $r29 instanceof org.bouncycastle.crypto.digests.RIPEMD160Digest;

        if $z3 != 0 goto label11;

        $r38 = new java.lang.IllegalStateException;

        specialinvoke $r38.<java.lang.IllegalStateException: void <init>(java.lang.String)>("signer should be initialised with RIPEMD160");

        throw $r38;

     label08:
        $r4 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $z0 = $r4 instanceof org.bouncycastle.crypto.digests.SHA1Digest;

        if $z0 != 0 goto label11;

        $r39 = new java.lang.IllegalStateException;

        specialinvoke $r39.<java.lang.IllegalStateException: void <init>(java.lang.String)>("signer should be initialised with SHA1");

        throw $r39;

     label09:
        $r27 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $z2 = $r27 instanceof org.bouncycastle.crypto.digests.RIPEMD128Digest;

        if $z2 != 0 goto label11;

        $r40 = new java.lang.IllegalStateException;

        specialinvoke $r40.<java.lang.IllegalStateException: void <init>(java.lang.String)>("signer should be initialised with RIPEMD128");

        throw $r40;

     label10:
        $r41 = new java.lang.IllegalArgumentException;

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unrecognised hash in signature");

        throw $r41;

     label11:
        b60 = 2;

        b80 = 2;

        b79 = 2;

        b78 = 2;

     label12:
        $i62 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $r35 = newarray (byte)[$i62];

        $r36 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r36.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r35, 0);

        $i63 = lengthof r33;

        $i64 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i65 = $i63 - $i64;

        $i66 = $i65 - b79;

        $i67 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i68 = lengthof r33;

        $i69 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i70 = $i68 - $i69;

        $i71 = $i70 - b80;

        $r37 = specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] maskGeneratorFunction1(byte[],int,int,int)>(r33, $i66, $i67, $i71);

        i72 = 0;

     label13:
        $i73 = lengthof $r37;

        if i72 == $i73 goto label14;

        $b50 = r33[i72];

        $b49 = $r37[i72];

        $b51 = $b50 ^ $b49;

        $b52 = (byte) $b51;

        r33[i72] = $b52;

        i72 = i72 + 1;

        goto label13;

     label14:
        $b19 = r33[0];

        $b20 = $b19 & 127;

        $b21 = (byte) $b20;

        r33[0] = $b21;

        i74 = 0;

     label15:
        $i22 = lengthof r33;

        if i74 == $i22 goto label17;

        $b48 = r33[i74];

        if $b48 != 1 goto label16;

        goto label17;

     label16:
        i74 = i74 + 1;

        goto label15;

     label17:
        i75 = i74 + 1;

        $i23 = lengthof r33;

        if i75 < $i23 goto label18;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>(r33);

        return 0;

     label18:
        if i75 <= 1 goto label19;

        $z4 = 1;

        goto label20;

     label19:
        $z4 = 0;

     label20:
        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: boolean fullMessage> = $z4;

        $i24 = lengthof $r37;

        $i26 = $i24 - i75;

        $i25 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int saltLength>;

        $i27 = $i26 - $i25;

        $r5 = newarray (byte)[$i27];

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage> = $r5;

        $r7 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        $r6 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        $i28 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r33, i75, $r7, 0, $i28);

        $r25 = newarray (byte)[8];

        $r8 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        $i29 = lengthof $r8;

        $i30 = $i29 * 8;

        $l31 = (long) $i30;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void LtoOSP(long,byte[])>($l31, $r25);

        $r9 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i32 = lengthof $r25;

        interfaceinvoke $r9.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r25, 0, $i32);

        $r10 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        $i33 = lengthof $r10;

        if $i33 == 0 goto label21;

        $r23 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $r22 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        $r21 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        $i46 = lengthof $r21;

        interfaceinvoke $r23.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r22, 0, $i46);

     label21:
        $r11 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i34 = lengthof $r35;

        interfaceinvoke $r11.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r35, 0, $i34);

        $r13 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $r12 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        $i35 = lengthof $r12;

        $i37 = i75 + $i35;

        $i36 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int saltLength>;

        interfaceinvoke $r13.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r33, $i37, $i36);

        $r14 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i38 = interfaceinvoke $r14.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $r24 = newarray (byte)[$i38];

        $r15 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r15.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r24, 0);

        $i39 = lengthof r33;

        $i41 = $i39 - b78;

        $i40 = lengthof $r24;

        $i47 = $i41 - $i40;

        i76 = 0;

     label22:
        $i77 = lengthof $r24;

        if i76 == $i77 goto label24;

        $b45 = $r24[i76];

        $i43 = $i47 + i76;

        $b44 = r33[$i43];

        $i86 = (int) $b45;

        $i87 = (int) $b44;

        if $i86 == $i87 goto label23;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>(r33);

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r24);

        $r20 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r20);

        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: boolean fullMessage> = 0;

        return 0;

     label23:
        i76 = i76 + 1;

        goto label22;

     label24:
        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>(r33);

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r24);

        $i42 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength>;

        if $i42 == 0 goto label26;

        $r18 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        $r17 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        $z1 = specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: boolean isSameAs(byte[],byte[])>($r18, $r17);

        if $z1 != 0 goto label25;

        $r19 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r19);

        return 0;

     label25:
        r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int messageLength> = 0;

     label26:
        $r16 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r16);

        return 1;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    public boolean hasFullMessage()
    {
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        $z0 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: boolean fullMessage>;

        return $z0;
    }

    public byte[] getRecoveredMessage()
    {
        byte[] $r1;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r0;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        $r1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] recoveredMessage>;

        return $r1;
    }

    private void ItoOSP(int, byte[])
    {
        byte[] r0;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r1;
        byte $b2, $b4, $b6, $b8;
        int i0, $i1, $i3, $i5, $i7;

        r1 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        $i1 = i0 >>> 24;

        $b2 = (byte) $i1;

        r0[0] = $b2;

        $i3 = i0 >>> 16;

        $b4 = (byte) $i3;

        r0[1] = $b4;

        $i5 = i0 >>> 8;

        $b6 = (byte) $i5;

        r0[2] = $b6;

        $i7 = i0 >>> 0;

        $b8 = (byte) $i7;

        r0[3] = $b8;

        return;
    }

    private void LtoOSP(long, byte[])
    {
        byte[] r0;
        long l0, $l1, $l4, $l7, $l10, $l13, $l16, $l19, $l22;
        byte $b3, $b6, $b9, $b12, $b15, $b18, $b21, $b24;
        int $i2, $i5, $i8, $i11, $i14, $i17, $i20, $i23;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r1;

        r1 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        l0 := @parameter0: long;

        r0 := @parameter1: byte[];

        $l1 = l0 >>> 56;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        r0[0] = $b3;

        $l4 = l0 >>> 48;

        $i5 = (int) $l4;

        $b6 = (byte) $i5;

        r0[1] = $b6;

        $l7 = l0 >>> 40;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        r0[2] = $b9;

        $l10 = l0 >>> 32;

        $i11 = (int) $l10;

        $b12 = (byte) $i11;

        r0[3] = $b12;

        $l13 = l0 >>> 24;

        $i14 = (int) $l13;

        $b15 = (byte) $i14;

        r0[4] = $b15;

        $l16 = l0 >>> 16;

        $i17 = (int) $l16;

        $b18 = (byte) $i17;

        r0[5] = $b18;

        $l19 = l0 >>> 8;

        $i20 = (int) $l19;

        $b21 = (byte) $i20;

        r0[6] = $b21;

        $l22 = l0 >>> 0;

        $i23 = (int) $l22;

        $b24 = (byte) $i23;

        r0[7] = $b24;

        return;
    }

    private byte[] maskGeneratorFunction1(byte[], int, int, int)
    {
        byte[] r0, r2, r3, r5;
        org.bouncycastle.crypto.Digest $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        org.bouncycastle.crypto.signers.ISO9796d2PSSSigner r1;

        r1 := @this: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner;

        r5 := @parameter0: byte[];

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        i0 := @parameter3: int;

        r0 = newarray (byte)[i0];

        $i1 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        r2 = newarray (byte)[$i1];

        r3 = newarray (byte)[4];

        i19 = 0;

        $r4 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.Digest: void reset()>();

     label1:
        $i2 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i3 = i0 / $i2;

        if i19 >= $i3 goto label2;

        specialinvoke r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void ItoOSP(int,byte[])>(i19, r3);

        $r9 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r9.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r5, i6, i7);

        $r10 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i15 = lengthof r3;

        interfaceinvoke $r10.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i15);

        $r11 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r11.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

        $i16 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i18 = i19 * $i16;

        $i17 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r0, $i18, $i17);

        i19 = i19 + 1;

        goto label1;

     label2:
        $i4 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i5 = i19 * $i4;

        if $i5 >= i0 goto label3;

        specialinvoke r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void ItoOSP(int,byte[])>(i19, r3);

        $r6 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r6.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r5, i6, i7);

        $r7 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i8 = lengthof r3;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i8);

        $r8 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r8.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

        $i9 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i14 = i19 * $i9;

        $i12 = lengthof r0;

        $i10 = r1.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int hLen>;

        $i11 = i19 * $i10;

        $i13 = $i12 - $i11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r0, $i14, $i13);

     label3:
        return r0;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int TRAILER_SHA1> = 13260;

        <org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int TRAILER_RIPEMD128> = 13004;

        <org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int TRAILER_RIPEMD160> = 12748;

        <org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: int TRAILER_IMPLICIT> = 188;

        return;
    }
}
