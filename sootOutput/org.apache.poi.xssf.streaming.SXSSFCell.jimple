public class org.apache.poi.xssf.streaming.SXSSFCell extends java.lang.Object implements org.apache.poi.ss.usermodel.Cell
{
    org.apache.poi.xssf.streaming.SXSSFRow _row;
    org.apache.poi.xssf.streaming.SXSSFCell$Value _value;
    org.apache.poi.ss.usermodel.CellStyle _style;
    org.apache.poi.xssf.streaming.SXSSFCell$Property _firstProperty;

    public void <init>(org.apache.poi.xssf.streaming.SXSSFRow, int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int i0;
        org.apache.poi.xssf.streaming.SXSSFRow r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        r1 := @parameter0: org.apache.poi.xssf.streaming.SXSSFRow;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFRow _row> = r1;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setType(int)>(i0);

        return;
    }

    public int getColumnIndex()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0;
        org.apache.poi.xssf.streaming.SXSSFRow $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFRow _row>;

        $i0 = virtualinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFRow: int getCellIndex(org.apache.poi.ss.usermodel.Cell)>(r0);

        return $i0;
    }

    public int getRowIndex()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0;
        org.apache.poi.xssf.streaming.SXSSFRow $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFRow _row>;

        $i0 = virtualinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFRow: int getRowNum()>();

        return $i0;
    }

    public org.apache.poi.ss.usermodel.Sheet getSheet()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.ss.usermodel.Sheet $r2;
        org.apache.poi.xssf.streaming.SXSSFRow $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFRow _row>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Sheet getSheet()>();

        return $r2;
    }

    public org.apache.poi.ss.usermodel.Row getRow()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFRow $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFRow _row>;

        return $r1;
    }

    public void setCellType(int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int i0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void ensureType(int)>(i0);

        return;
    }

    public int getCellType()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        return $i0;
    }

    public int getCachedFormulaResultType()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        java.lang.IllegalStateException $r4;
        org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue $r3;
        int $i0, $i1;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r2;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 == 2 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Only formula cells have cached results");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r3 = (org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue) $r2;

        $i1 = virtualinvoke $r3.<org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue: int getFormulaType()>();

        return $i1;
    }

    public void setCellValue(double)
    {
        org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue $r5;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r2, $r4;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFCell$NumericValue $r3;
        byte $b1, $b2;
        int $i0;
        org.apache.poi.ss.usermodel.FormulaError $r6, $r7;
        double d0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z0 == 0 goto label1;

        $r7 = <org.apache.poi.ss.usermodel.FormulaError: org.apache.poi.ss.usermodel.FormulaError DIV0>;

        $b2 = virtualinvoke $r7.<org.apache.poi.ss.usermodel.FormulaError: byte getCode()>();

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setCellErrorValue(byte)>($b2);

        goto label4;

     label1:
        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z1 == 0 goto label2;

        $r6 = <org.apache.poi.ss.usermodel.FormulaError: org.apache.poi.ss.usermodel.FormulaError NUM>;

        $b1 = virtualinvoke $r6.<org.apache.poi.ss.usermodel.FormulaError: byte getCode()>();

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setCellErrorValue(byte)>($b1);

        goto label4;

     label2:
        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void ensureTypeOrFormulaType(int)>(0);

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 != 2 goto label3;

        $r4 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r5 = (org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue) $r4;

        virtualinvoke $r5.<org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue: void setPreEvaluatedValue(double)>(d0);

        goto label4;

     label3:
        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r3 = (org.apache.poi.xssf.streaming.SXSSFCell$NumericValue) $r2;

        virtualinvoke $r3.<org.apache.poi.xssf.streaming.SXSSFCell$NumericValue: void setValue(double)>(d0);

     label4:
        return;
    }

    public void setCellValue(java.util.Date)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        java.util.Date r1;
        double $d0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        r1 := @parameter0: java.util.Date;

        $d0 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: double getExcelDate(java.util.Date,boolean)>(r1, 0);

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setCellValue(double)>($d0);

        return;
    }

    public void setCellValue(java.util.Calendar)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        java.util.Calendar r1;
        double $d0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        r1 := @parameter0: java.util.Calendar;

        $d0 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: double getExcelDate(java.util.Calendar,boolean)>(r1, 0);

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setCellValue(double)>($d0);

        return;
    }

    public void setCellValue(org.apache.poi.ss.usermodel.RichTextString)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue $r3;
        org.apache.poi.ss.usermodel.RichTextString r2;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        r2 := @parameter0: org.apache.poi.ss.usermodel.RichTextString;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void ensureRichTextStringType()>();

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r3 = (org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue) $r1;

        virtualinvoke $r3.<org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue: void setValue(org.apache.poi.ss.usermodel.RichTextString)>(r2);

        return;
    }

    public void setCellValue(java.lang.String)
    {
        org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue $r4;
        org.apache.poi.xssf.streaming.SXSSFCell$StringFormulaValue $r6;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r2, $r5;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0;
        java.lang.String r3;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        r3 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void ensureTypeOrFormulaType(int)>(1);

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 != 2 goto label1;

        $r5 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r6 = (org.apache.poi.xssf.streaming.SXSSFCell$StringFormulaValue) $r5;

        virtualinvoke $r6.<org.apache.poi.xssf.streaming.SXSSFCell$StringFormulaValue: void setPreEvaluatedValue(java.lang.String)>(r3);

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r4 = (org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue) $r2;

        virtualinvoke $r4.<org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue: void setValue(java.lang.String)>(r3);

     label2:
        return;
    }

    public void setCellFormula(java.lang.String) throws org.apache.poi.ss.formula.FormulaParseException
    {
        org.apache.poi.xssf.streaming.SXSSFCell r1;
        org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue $r3;
        int $i0;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r2;
        java.lang.String r0;

        r1 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.poi.xssf.streaming.SXSSFCell: void setType(int)>(3);

        return;

     label1:
        $i0 = virtualinvoke r1.<org.apache.poi.xssf.streaming.SXSSFCell: int computeTypeFromFormula(java.lang.String)>(r0);

        virtualinvoke r1.<org.apache.poi.xssf.streaming.SXSSFCell: void ensureFormulaType(int)>($i0);

        $r2 = r1.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r3 = (org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue) $r2;

        virtualinvoke $r3.<org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue: void setValue(java.lang.String)>(r0);

        return;
    }

    public java.lang.String getCellFormula()
    {
        org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue $r3;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r2, $r5;
        java.lang.RuntimeException $r6;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 == 2 goto label1;

        $r5 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i1 = interfaceinvoke $r5.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        $r6 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(2, $i1, 0);

        throw $r6;

     label1:
        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r3 = (org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue) $r2;

        $r4 = virtualinvoke $r3.<org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue: java.lang.String getValue()>();

        return $r4;
    }

    public double getNumericCellValue()
    {
        org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue r2;
        org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue $r4;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r3, $r6;
        java.lang.RuntimeException $r5, $r8;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFCell$NumericValue $r7;
        int $i0, $i1;
        double $d0, $d1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label1;
            default: goto label5;
        };

     label1:
        return 0.0;

     label2:
        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        r2 = (org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue) $r1;

        $i1 = virtualinvoke r2.<org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue: int getFormulaType()>();

        if $i1 == 0 goto label3;

        $r5 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(0, 2, 0);

        throw $r5;

     label3:
        $r3 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r4 = (org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue) $r3;

        $d0 = virtualinvoke $r4.<org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue: double getPreEvaluatedValue()>();

        return $d0;

     label4:
        $r6 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r7 = (org.apache.poi.xssf.streaming.SXSSFCell$NumericValue) $r6;

        $d1 = virtualinvoke $r7.<org.apache.poi.xssf.streaming.SXSSFCell$NumericValue: double getValue()>();

        return $d1;

     label5:
        $r8 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(0, $i0, 0);

        throw $r8;
    }

    public java.util.Date getDateCellValue()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        java.util.Date $r1;
        int $i0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        if $i0 != 3 goto label1;

        return null;

     label1:
        $d0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: double getNumericCellValue()>();

        $r1 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: java.util.Date getJavaDate(double,boolean)>($d0, 0);

        return $r1;
    }

    public org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()
    {
        org.apache.poi.ss.usermodel.Sheet $r4;
        org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue $r9;
        org.apache.poi.ss.usermodel.RichTextString $r7, $r10;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r8;
        org.apache.poi.xssf.streaming.SXSSFCell$StringValue r2;
        java.lang.RuntimeException $r11;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.ss.usermodel.Workbook $r5;
        int $i0, $i1;
        org.apache.poi.ss.usermodel.CreationHelper $r6;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        $i1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        if $i1 == 1 goto label1;

        $r11 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(1, $i0, 0);

        throw $r11;

     label1:
        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        r2 = (org.apache.poi.xssf.streaming.SXSSFCell$StringValue) $r1;

        $z0 = virtualinvoke r2.<org.apache.poi.xssf.streaming.SXSSFCell$StringValue: boolean isRichText()>();

        if $z0 == 0 goto label2;

        $r8 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r9 = (org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue) $r8;

        $r10 = virtualinvoke $r9.<org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue: org.apache.poi.ss.usermodel.RichTextString getValue()>();

        return $r10;

     label2:
        $r3 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: java.lang.String getStringCellValue()>();

        $r4 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.ss.usermodel.Sheet getSheet()>();

        $r5 = interfaceinvoke $r4.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Workbook getWorkbook()>();

        $r6 = interfaceinvoke $r5.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.CreationHelper getCreationHelper()>();

        $r7 = interfaceinvoke $r6.<org.apache.poi.ss.usermodel.CreationHelper: org.apache.poi.ss.usermodel.RichTextString createRichTextString(java.lang.String)>($r3);

        return $r7;
    }

    public java.lang.String getStringCellValue()
    {
        org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue $r10;
        org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue r2;
        org.apache.poi.xssf.streaming.SXSSFCell$StringFormulaValue $r4;
        org.apache.poi.xssf.streaming.SXSSFCell$StringValue $r8;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0, $i1;
        java.lang.String $r5, $r11, $r15;
        boolean $z0;
        org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue $r13;
        org.apache.poi.ss.usermodel.RichTextString $r14;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r3, $r7, $r9, $r12;
        java.lang.RuntimeException $r6, $r16;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label1;
            default: goto label6;
        };

     label1:
        return "";

     label2:
        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        r2 = (org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue) $r1;

        $i1 = virtualinvoke r2.<org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue: int getFormulaType()>();

        if $i1 == 1 goto label3;

        $r6 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(1, 2, 0);

        throw $r6;

     label3:
        $r3 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r4 = (org.apache.poi.xssf.streaming.SXSSFCell$StringFormulaValue) $r3;

        $r5 = virtualinvoke $r4.<org.apache.poi.xssf.streaming.SXSSFCell$StringFormulaValue: java.lang.String getPreEvaluatedValue()>();

        return $r5;

     label4:
        $r7 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r8 = (org.apache.poi.xssf.streaming.SXSSFCell$StringValue) $r7;

        $z0 = virtualinvoke $r8.<org.apache.poi.xssf.streaming.SXSSFCell$StringValue: boolean isRichText()>();

        if $z0 == 0 goto label5;

        $r12 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r13 = (org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue) $r12;

        $r14 = virtualinvoke $r13.<org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue: org.apache.poi.ss.usermodel.RichTextString getValue()>();

        $r15 = interfaceinvoke $r14.<org.apache.poi.ss.usermodel.RichTextString: java.lang.String getString()>();

        return $r15;

     label5:
        $r9 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r10 = (org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue) $r9;

        $r11 = virtualinvoke $r10.<org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue: java.lang.String getValue()>();

        return $r11;

     label6:
        $r16 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(1, $i0, 0);

        throw $r16;
    }

    public void setCellValue(boolean)
    {
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r2, $r4;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFCell$BooleanValue $r3;
        int $i0;
        org.apache.poi.xssf.streaming.SXSSFCell$BooleanFormulaValue $r5;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void ensureTypeOrFormulaType(int)>(4);

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 != 2 goto label1;

        $r4 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r5 = (org.apache.poi.xssf.streaming.SXSSFCell$BooleanFormulaValue) $r4;

        virtualinvoke $r5.<org.apache.poi.xssf.streaming.SXSSFCell$BooleanFormulaValue: void setPreEvaluatedValue(boolean)>(z0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r3 = (org.apache.poi.xssf.streaming.SXSSFCell$BooleanValue) $r2;

        virtualinvoke $r3.<org.apache.poi.xssf.streaming.SXSSFCell$BooleanValue: void setValue(boolean)>(z0);

     label2:
        return;
    }

    public void setCellErrorValue(byte)
    {
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r2, $r4;
        org.apache.poi.xssf.streaming.SXSSFCell$ErrorFormulaValue $r5;
        org.apache.poi.xssf.streaming.SXSSFCell$ErrorValue $r3;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        byte b1;
        int $i0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        b1 := @parameter0: byte;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void ensureType(int)>(5);

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 != 2 goto label1;

        $r4 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r5 = (org.apache.poi.xssf.streaming.SXSSFCell$ErrorFormulaValue) $r4;

        virtualinvoke $r5.<org.apache.poi.xssf.streaming.SXSSFCell$ErrorFormulaValue: void setPreEvaluatedValue(byte)>(b1);

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r3 = (org.apache.poi.xssf.streaming.SXSSFCell$ErrorValue) $r2;

        virtualinvoke $r3.<org.apache.poi.xssf.streaming.SXSSFCell$ErrorValue: void setValue(byte)>(b1);

     label2:
        return;
    }

    public boolean getBooleanCellValue()
    {
        org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue r4;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r3, $r5;
        java.lang.RuntimeException $r7, $r8;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFCell$BooleanValue $r2;
        int $i0, $i1;
        org.apache.poi.xssf.streaming.SXSSFCell$BooleanFormulaValue $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        return 0;

     label2:
        $r3 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        r4 = (org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue) $r3;

        $i1 = virtualinvoke r4.<org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue: int getFormulaType()>();

        if $i1 == 4 goto label3;

        $r7 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(4, 2, 0);

        throw $r7;

     label3:
        $r5 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r6 = (org.apache.poi.xssf.streaming.SXSSFCell$BooleanFormulaValue) $r5;

        $z1 = virtualinvoke $r6.<org.apache.poi.xssf.streaming.SXSSFCell$BooleanFormulaValue: boolean getPreEvaluatedValue()>();

        return $z1;

     label4:
        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r2 = (org.apache.poi.xssf.streaming.SXSSFCell$BooleanValue) $r1;

        $z0 = virtualinvoke $r2.<org.apache.poi.xssf.streaming.SXSSFCell$BooleanValue: boolean getValue()>();

        return $z0;

     label5:
        $r8 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(4, $i0, 0);

        throw $r8;
    }

    public byte getErrorCellValue()
    {
        org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue r4;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r3, $r5;
        java.lang.RuntimeException $r7, $r8;
        org.apache.poi.xssf.streaming.SXSSFCell$ErrorFormulaValue $r6;
        org.apache.poi.xssf.streaming.SXSSFCell$ErrorValue $r2;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        byte $b1, $b3;
        int $i0, $i2;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label5;
            case 5: goto label4;
            default: goto label5;
        };

     label1:
        return 0;

     label2:
        $r3 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        r4 = (org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue) $r3;

        $i2 = virtualinvoke r4.<org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue: int getFormulaType()>();

        if $i2 == 5 goto label3;

        $r7 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(5, 2, 0);

        throw $r7;

     label3:
        $r5 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r6 = (org.apache.poi.xssf.streaming.SXSSFCell$ErrorFormulaValue) $r5;

        $b3 = virtualinvoke $r6.<org.apache.poi.xssf.streaming.SXSSFCell$ErrorFormulaValue: byte getPreEvaluatedValue()>();

        return $b3;

     label4:
        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r2 = (org.apache.poi.xssf.streaming.SXSSFCell$ErrorValue) $r1;

        $b1 = virtualinvoke $r2.<org.apache.poi.xssf.streaming.SXSSFCell$ErrorValue: byte getValue()>();

        return $b1;

     label5:
        $r8 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(5, $i0, 0);

        throw $r8;
    }

    public void setCellStyle(org.apache.poi.ss.usermodel.CellStyle)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.ss.usermodel.CellStyle r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        r1 := @parameter0: org.apache.poi.ss.usermodel.CellStyle;

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.ss.usermodel.CellStyle _style> = r1;

        return;
    }

    public org.apache.poi.ss.usermodel.CellStyle getCellStyle()
    {
        org.apache.poi.ss.usermodel.Sheet $r4;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFWorkbook r6;
        org.apache.poi.ss.usermodel.Workbook $r5;
        org.apache.poi.ss.usermodel.Row $r3;
        org.apache.poi.ss.usermodel.CellStyle $r1, $r2, $r7;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.ss.usermodel.CellStyle _style>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.ss.usermodel.Row getRow()>();

        $r4 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.Row: org.apache.poi.ss.usermodel.Sheet getSheet()>();

        $r5 = interfaceinvoke $r4.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Workbook getWorkbook()>();

        r6 = (org.apache.poi.xssf.streaming.SXSSFWorkbook) $r5;

        $r7 = virtualinvoke r6.<org.apache.poi.xssf.streaming.SXSSFWorkbook: org.apache.poi.ss.usermodel.CellStyle getCellStyleAt(short)>(0);

        return $r7;

     label1:
        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.ss.usermodel.CellStyle _style>;

        return $r2;
    }

    public void setAsActiveCell()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        return;
    }

    public void setCellComment(org.apache.poi.ss.usermodel.Comment)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.ss.usermodel.Comment r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        r1 := @parameter0: org.apache.poi.ss.usermodel.Comment;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setProperty(int,java.lang.Object)>(1, r1);

        return;
    }

    public org.apache.poi.ss.usermodel.Comment getCellComment()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        java.lang.Object $r1;
        org.apache.poi.ss.usermodel.Comment $r2;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: java.lang.Object getPropertyValue(int)>(1);

        $r2 = (org.apache.poi.ss.usermodel.Comment) $r1;

        return $r2;
    }

    public void removeCellComment()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void removeProperty(int)>(1);

        return;
    }

    public org.apache.poi.ss.usermodel.Hyperlink getHyperlink()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        java.lang.Object $r1;
        org.apache.poi.ss.usermodel.Hyperlink $r2;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: java.lang.Object getPropertyValue(int)>(2);

        $r2 = (org.apache.poi.ss.usermodel.Hyperlink) $r1;

        return $r2;
    }

    public void setHyperlink(org.apache.poi.ss.usermodel.Hyperlink)
    {
        org.apache.poi.ss.usermodel.Sheet $r6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTHyperlink $r4;
        org.apache.poi.xssf.usermodel.XSSFHyperlink r2;
        org.apache.poi.ss.util.CellReference $r3;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0, $i1;
        org.apache.poi.xssf.streaming.SXSSFSheet $r7;
        org.apache.poi.xssf.usermodel.XSSFSheet $r8;
        java.lang.String $r5;
        org.apache.poi.ss.usermodel.Hyperlink r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        r1 := @parameter0: org.apache.poi.ss.usermodel.Hyperlink;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setProperty(int,java.lang.Object)>(2, r1);

        r2 = (org.apache.poi.xssf.usermodel.XSSFHyperlink) r1;

        $r3 = new org.apache.poi.ss.util.CellReference;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getRowIndex()>();

        $i1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getColumnIndex()>();

        specialinvoke $r3.<org.apache.poi.ss.util.CellReference: void <init>(int,int)>($i0, $i1);

        $r4 = virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFHyperlink: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTHyperlink getCTHyperlink()>();

        $r5 = virtualinvoke $r3.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTHyperlink: void setRef(java.lang.String)>($r5);

        $r6 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.ss.usermodel.Sheet getSheet()>();

        $r7 = (org.apache.poi.xssf.streaming.SXSSFSheet) $r6;

        $r8 = $r7.<org.apache.poi.xssf.streaming.SXSSFSheet: org.apache.poi.xssf.usermodel.XSSFSheet _sh>;

        virtualinvoke $r8.<org.apache.poi.xssf.usermodel.XSSFSheet: void addHyperlink(org.apache.poi.xssf.usermodel.XSSFHyperlink)>(r2);

        return;
    }

    public org.apache.poi.ss.util.CellRangeAddress getArrayFormulaRange()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        return null;
    }

    public boolean isPartOfArrayFormulaGroup()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        return 0;
    }

    public java.lang.String toString()
    {
        java.util.Date $r10;
        java.text.SimpleDateFormat $r17;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        byte $b1;
        int $i0, $i2, $i3;
        java.lang.String $r1, $r2, $r4, $r8, $r11, $r15, $r16;
        boolean $z0, $z1;
        double $d0;
        org.apache.poi.ss.usermodel.RichTextString $r3;
        java.lang.StringBuilder $r6, $r7, $r13, $r14, $r18, $r19;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 0: goto label07;
            case 1: goto label09;
            case 2: goto label06;
            case 3: goto label01;
            case 4: goto label02;
            case 5: goto label05;
            default: goto label10;
        };

     label01:
        return "";

     label02:
        $z0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: boolean getBooleanCellValue()>();

        if $z0 == 0 goto label03;

        $r16 = "TRUE";

        goto label04;

     label03:
        $r16 = "FALSE";

     label04:
        return $r16;

     label05:
        $b1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: byte getErrorCellValue()>();

        $i3 = (int) $b1;

        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.ErrorEval: java.lang.String getText(int)>($i3);

        return $r1;

     label06:
        $r2 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: java.lang.String getCellFormula()>();

        return $r2;

     label07:
        $z1 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: boolean isCellDateFormatted(org.apache.poi.ss.usermodel.Cell)>(r0);

        if $z1 == 0 goto label08;

        $r17 = new java.text.SimpleDateFormat;

        specialinvoke $r17.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("dd-MMM-yyyy");

        $r10 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: java.util.Date getDateCellValue()>();

        $r11 = virtualinvoke $r17.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r10);

        return $r11;

     label08:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $d0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: double getNumericCellValue()>();

        $r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label09:
        $r3 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label10:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Cell Type: ");

        $i2 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    void removeProperty(int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0, i1;
        org.apache.poi.xssf.streaming.SXSSFCell$Property $r1, $r2, r3, r4;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        i1 := @parameter0: int;

        r3 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Property _firstProperty>;

        r4 = null;

     label1:
        if r3 == null goto label2;

        $i0 = virtualinvoke r3.<org.apache.poi.xssf.streaming.SXSSFCell$Property: int getType()>();

        if $i0 == i1 goto label2;

        r4 = r3;

        r3 = r3.<org.apache.poi.xssf.streaming.SXSSFCell$Property: org.apache.poi.xssf.streaming.SXSSFCell$Property _next>;

        goto label1;

     label2:
        if r3 == null goto label4;

        if r4 == null goto label3;

        $r2 = r3.<org.apache.poi.xssf.streaming.SXSSFCell$Property: org.apache.poi.xssf.streaming.SXSSFCell$Property _next>;

        r4.<org.apache.poi.xssf.streaming.SXSSFCell$Property: org.apache.poi.xssf.streaming.SXSSFCell$Property _next> = $r2;

        goto label4;

     label3:
        $r1 = r3.<org.apache.poi.xssf.streaming.SXSSFCell$Property: org.apache.poi.xssf.streaming.SXSSFCell$Property _next>;

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Property _firstProperty> = $r1;

     label4:
        return;
    }

    void setProperty(int, java.lang.Object)
    {
        org.apache.poi.xssf.streaming.SXSSFCell$CommentProperty $r3;
        org.apache.poi.xssf.streaming.SXSSFCell$HyperlinkProperty $r1;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int i0, $i1;
        java.lang.Object r2;
        org.apache.poi.xssf.streaming.SXSSFCell$Property r4, r5;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        r4 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Property _firstProperty>;

        r5 = null;

     label1:
        if r4 == null goto label2;

        $i1 = virtualinvoke r4.<org.apache.poi.xssf.streaming.SXSSFCell$Property: int getType()>();

        if $i1 == i0 goto label2;

        r5 = r4;

        r4 = r4.<org.apache.poi.xssf.streaming.SXSSFCell$Property: org.apache.poi.xssf.streaming.SXSSFCell$Property _next>;

        goto label1;

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<org.apache.poi.xssf.streaming.SXSSFCell$Property: void setValue(java.lang.Object)>(r2);

        goto label8;

     label3:
        lookupswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label5;
            default: goto label6;
        };

     label4:
        $r3 = new org.apache.poi.xssf.streaming.SXSSFCell$CommentProperty;

        specialinvoke $r3.<org.apache.poi.xssf.streaming.SXSSFCell$CommentProperty: void <init>(java.lang.Object)>(r2);

        r4 = $r3;

        goto label6;

     label5:
        $r1 = new org.apache.poi.xssf.streaming.SXSSFCell$HyperlinkProperty;

        specialinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$HyperlinkProperty: void <init>(java.lang.Object)>(r2);

        r4 = $r1;

     label6:
        if r5 == null goto label7;

        r5.<org.apache.poi.xssf.streaming.SXSSFCell$Property: org.apache.poi.xssf.streaming.SXSSFCell$Property _next> = r4;

        goto label8;

     label7:
        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Property _firstProperty> = r4;

     label8:
        return;
    }

    java.lang.Object getPropertyValue(int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: java.lang.Object getPropertyValue(int,java.lang.String)>(i0, null);

        return $r1;
    }

    java.lang.Object getPropertyValue(int, java.lang.String)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.poi.xssf.streaming.SXSSFCell$Property r2;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Property _firstProperty>;

     label1:
        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<org.apache.poi.xssf.streaming.SXSSFCell$Property: int getType()>();

        if $i0 == i1 goto label2;

        r2 = r2.<org.apache.poi.xssf.streaming.SXSSFCell$Property: org.apache.poi.xssf.streaming.SXSSFCell$Property _next>;

        goto label1;

     label2:
        if r2 != null goto label3;

        $r3 = r1;

        goto label4;

     label3:
        $r3 = virtualinvoke r2.<org.apache.poi.xssf.streaming.SXSSFCell$Property: java.lang.Object getValue()>();

     label4:
        return $r3;
    }

    void ensurePlainStringType()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue $r2;
        int $i0;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r3;
        org.apache.poi.xssf.streaming.SXSSFCell$StringValue $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 != 1 goto label1;

        $r3 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r4 = (org.apache.poi.xssf.streaming.SXSSFCell$StringValue) $r3;

        $z0 = virtualinvoke $r4.<org.apache.poi.xssf.streaming.SXSSFCell$StringValue: boolean isRichText()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = new org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue;

        specialinvoke $r2.<org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r2;

     label2:
        return;
    }

    void ensureRichTextStringType()
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue $r2;
        int $i0;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r3;
        org.apache.poi.xssf.streaming.SXSSFCell$StringValue $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 != 1 goto label1;

        $r3 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r4 = (org.apache.poi.xssf.streaming.SXSSFCell$StringValue) $r3;

        $z0 = virtualinvoke $r4.<org.apache.poi.xssf.streaming.SXSSFCell$StringValue: boolean isRichText()>();

        if $z0 != 0 goto label2;

     label1:
        $r2 = new org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue;

        specialinvoke $r2.<org.apache.poi.xssf.streaming.SXSSFCell$RichTextValue: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r2;

     label2:
        return;
    }

    void ensureType(int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0, i1;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 == i1 goto label1;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setType(int)>(i1);

     label1:
        return;
    }

    void ensureFormulaType(int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue $r3;
        int $i0, i1, $i2;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r2;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 != 2 goto label1;

        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r3 = (org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue) $r2;

        $i2 = virtualinvoke $r3.<org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue: int getFormulaType()>();

        if $i2 == i1 goto label2;

     label1:
        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setFormulaType(int)>(i1);

     label2:
        return;
    }

    void ensureTypeOrFormulaType(int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue $r4;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r1, $r2, $r3, $r5;
        org.apache.poi.xssf.streaming.SXSSFCell$StringValue $r6;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int $i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i0 = interfaceinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i0 != i1 goto label2;

        if i1 != 1 goto label1;

        $r5 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r6 = (org.apache.poi.xssf.streaming.SXSSFCell$StringValue) $r5;

        $z0 = virtualinvoke $r6.<org.apache.poi.xssf.streaming.SXSSFCell$StringValue: boolean isRichText()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setType(int)>(1);

     label1:
        return;

     label2:
        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $i2 = interfaceinvoke $r2.<org.apache.poi.xssf.streaming.SXSSFCell$Value: int getType()>();

        if $i2 != 2 goto label4;

        $r3 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        $r4 = (org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue) $r3;

        $i3 = virtualinvoke $r4.<org.apache.poi.xssf.streaming.SXSSFCell$FormulaValue: int getFormulaType()>();

        if $i3 != i1 goto label3;

        return;

     label3:
        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setFormulaType(int)>(i1);

        return;

     label4:
        virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: void setType(int)>(i1);

        return;
    }

    void setType(int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue $r6;
        org.apache.poi.xssf.streaming.SXSSFCell$ErrorValue $r1;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        org.apache.poi.xssf.streaming.SXSSFCell$NumericValue $r9;
        int i0;
        java.lang.String $r8, $r14;
        org.apache.poi.xssf.streaming.SXSSFCell$BlankValue $r4;
        boolean $z0;
        org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue $r5;
        org.apache.poi.xssf.streaming.SXSSFCell$Value $r3, $r7;
        java.lang.IllegalArgumentException $r10;
        org.apache.poi.xssf.streaming.SXSSFCell$BooleanValue $r2;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label08;
            default: goto label09;
        };

     label01:
        $r9 = new org.apache.poi.xssf.streaming.SXSSFCell$NumericValue;

        specialinvoke $r9.<org.apache.poi.xssf.streaming.SXSSFCell$NumericValue: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r9;

        goto label10;

     label02:
        $r6 = new org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue;

        specialinvoke $r6.<org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue: void <init>()>();

        $r7 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        if $r7 == null goto label03;

        $r8 = specialinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: java.lang.String convertCellValueToString()>();

        virtualinvoke $r6.<org.apache.poi.xssf.streaming.SXSSFCell$PlainStringValue: void setValue(java.lang.String)>($r8);

     label03:
        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r6;

        goto label10;

     label04:
        $r5 = new org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue;

        specialinvoke $r5.<org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r5;

        goto label10;

     label05:
        $r4 = new org.apache.poi.xssf.streaming.SXSSFCell$BlankValue;

        specialinvoke $r4.<org.apache.poi.xssf.streaming.SXSSFCell$BlankValue: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r4;

        goto label10;

     label06:
        $r2 = new org.apache.poi.xssf.streaming.SXSSFCell$BooleanValue;

        specialinvoke $r2.<org.apache.poi.xssf.streaming.SXSSFCell$BooleanValue: void <init>()>();

        $r3 = r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value>;

        if $r3 == null goto label07;

        $z0 = specialinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: boolean convertCellValueToBoolean()>();

        virtualinvoke $r2.<org.apache.poi.xssf.streaming.SXSSFCell$BooleanValue: void setValue(boolean)>($z0);

     label07:
        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r2;

        goto label10;

     label08:
        $r1 = new org.apache.poi.xssf.streaming.SXSSFCell$ErrorValue;

        specialinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$ErrorValue: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r1;

        goto label10;

     label09:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal type ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label10:
        return;
    }

    void setFormulaType(int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue $r4;
        org.apache.poi.xssf.streaming.SXSSFCell$StringFormulaValue $r3;
        org.apache.poi.xssf.streaming.SXSSFCell$ErrorFormulaValue $r1;
        java.lang.IllegalArgumentException $r5;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        int i0;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        org.apache.poi.xssf.streaming.SXSSFCell$BooleanFormulaValue $r2;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label5;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label5;
        };

     label1:
        $r4 = new org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue;

        specialinvoke $r4.<org.apache.poi.xssf.streaming.SXSSFCell$NumericFormulaValue: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r4;

        goto label6;

     label2:
        $r3 = new org.apache.poi.xssf.streaming.SXSSFCell$StringFormulaValue;

        specialinvoke $r3.<org.apache.poi.xssf.streaming.SXSSFCell$StringFormulaValue: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r3;

        goto label6;

     label3:
        $r2 = new org.apache.poi.xssf.streaming.SXSSFCell$BooleanFormulaValue;

        specialinvoke $r2.<org.apache.poi.xssf.streaming.SXSSFCell$BooleanFormulaValue: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r2;

        goto label6;

     label4:
        $r1 = new org.apache.poi.xssf.streaming.SXSSFCell$ErrorFormulaValue;

        specialinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFCell$ErrorFormulaValue: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SXSSFCell: org.apache.poi.xssf.streaming.SXSSFCell$Value _value> = $r1;

        goto label6;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal type ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label6:
        return;
    }

    int computeTypeFromFormula(java.lang.String)
    {
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    private static java.lang.RuntimeException typeMismatch(int, int, boolean)
    {
        java.lang.IllegalStateException $r11;
        int i0, i1;
        java.lang.String $r2, $r5, $r10, $r12;
        boolean z0;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7, $r8, $r9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get a ");

        $r2 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.String getCellTypeName(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value from a ");

        $r5 = staticinvoke <org.apache.poi.xssf.streaming.SXSSFCell: java.lang.String getCellTypeName(int)>(i1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        if z0 == 0 goto label1;

        $r12 = "formula ";

        goto label2;

     label1:
        $r12 = "";

     label2:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cell");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        return $r11;
    }

    private static java.lang.String getCellTypeName(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label6;
            case 3: goto label1;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label7;
        };

     label1:
        return "blank";

     label2:
        return "text";

     label3:
        return "boolean";

     label4:
        return "error";

     label5:
        return "numeric";

     label6:
        return "formula";

     label7:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#unknown cell type (");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")#");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private boolean convertCellValueToBoolean()
    {
        java.lang.RuntimeException $r2;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        byte $b1;
        int $i0, i2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r1, $r7;
        boolean $z0, $z1, $z2;
        double $d0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        i2 = $i0;

        if $i0 != 2 goto label1;

        i2 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCachedFormulaResultType()>();

     label1:
        tableswitch(i2)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label8;
            case 3: goto label7;
            case 4: goto label2;
            case 5: goto label7;
            default: goto label8;
        };

     label2:
        $z0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: boolean getBooleanCellValue()>();

        return $z0;

     label3:
        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: java.lang.String getStringCellValue()>();

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r1);

        return $z1;

     label4:
        $d0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: double getNumericCellValue()>();

        $b1 = $d0 cmpl 0.0;

        if $b1 == 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;

     label7:
        return 0;

     label8:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected cell type (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    private java.lang.String convertCellValueToString()
    {
        java.lang.IllegalStateException $r5;
        org.apache.poi.xssf.streaming.SXSSFCell r0;
        byte $b1;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r10, $r11;
        boolean $z0;
        double $d0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        org.apache.poi.ss.usermodel.FormulaError $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 0: goto label6;
            case 1: goto label5;
            case 2: goto label8;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label7;
            default: goto label9;
        };

     label1:
        return "";

     label2:
        $z0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: boolean getBooleanCellValue()>();

        if $z0 == 0 goto label3;

        $r11 = "TRUE";

        goto label4;

     label3:
        $r11 = "FALSE";

     label4:
        return $r11;

     label5:
        $r3 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: java.lang.String getStringCellValue()>();

        return $r3;

     label6:
        $d0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: double getNumericCellValue()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        return $r4;

     label7:
        $b1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFCell: byte getErrorCellValue()>();

        $r1 = staticinvoke <org.apache.poi.ss.usermodel.FormulaError: org.apache.poi.ss.usermodel.FormulaError forInt(byte)>($b1);

        $r2 = virtualinvoke $r1.<org.apache.poi.ss.usermodel.FormulaError: java.lang.String getString()>();

        return $r2;

     label8:
        return "";

     label9:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected cell type (");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r5;
    }
}
