public class ucar.ma2.ArrayRagged extends ucar.ma2.Array
{

    protected void <init>(int[])
    {
        ucar.ma2.ArrayRagged r0;
        int[] r1;

        r0 := @this: ucar.ma2.ArrayRagged;

        r1 := @parameter0: int[];

        specialinvoke r0.<ucar.ma2.Array: void <init>(int[])>(r1);

        return;
    }

    public java.lang.Class getElementType()
    {
        ucar.ma2.ArrayRagged r0;

        r0 := @this: ucar.ma2.ArrayRagged;

        return null;
    }

    public ucar.ma2.Array createView(ucar.ma2.Index)
    {
        java.lang.UnsupportedOperationException $r2;
        ucar.ma2.ArrayRagged r1;
        byte $b2;
        ucar.ma2.Index r0;
        long $l0, $l1;

        r1 := @this: ucar.ma2.ArrayRagged;

        r0 := @parameter0: ucar.ma2.Index;

        $l0 = virtualinvoke r0.<ucar.ma2.Index: long getSize()>();

        $l1 = virtualinvoke r1.<ucar.ma2.ArrayRagged: long getSize()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        return r1;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public java.lang.Object getStorage()
    {
        ucar.ma2.ArrayRagged r0;

        r0 := @this: ucar.ma2.ArrayRagged;

        return null;
    }

    void copyFrom1DJavaArray(ucar.ma2.IndexIterator, java.lang.Object)
    {
        java.lang.Object r2;
        ucar.ma2.ArrayRagged r0;
        ucar.ma2.IndexIterator r1;

        r0 := @this: ucar.ma2.ArrayRagged;

        r1 := @parameter0: ucar.ma2.IndexIterator;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    void copyTo1DJavaArray(ucar.ma2.IndexIterator, java.lang.Object)
    {
        java.lang.Object r2;
        ucar.ma2.ArrayRagged r0;
        ucar.ma2.IndexIterator r1;

        r0 := @this: ucar.ma2.ArrayRagged;

        r1 := @parameter0: ucar.ma2.IndexIterator;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public ucar.ma2.Array copy()
    {
        java.lang.UnsupportedOperationException $r0;
        ucar.ma2.ArrayRagged r1;

        r1 := @this: ucar.ma2.ArrayRagged;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public double getDouble(ucar.ma2.Index)
    {
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setDouble(ucar.ma2.Index, double)
    {
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;
        ucar.ma2.ForbiddenConversionException $r0;
        double d0;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        d0 := @parameter1: double;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public float getFloat(ucar.ma2.Index)
    {
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setFloat(ucar.ma2.Index, float)
    {
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;
        float f0;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        f0 := @parameter1: float;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public long getLong(ucar.ma2.Index)
    {
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setLong(ucar.ma2.Index, long)
    {
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;
        long l0;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        l0 := @parameter1: long;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public int getInt(ucar.ma2.Index)
    {
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setInt(ucar.ma2.Index, int)
    {
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        i0 := @parameter1: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public short getShort(ucar.ma2.Index)
    {
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setShort(ucar.ma2.Index, short)
    {
        short s0;
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        s0 := @parameter1: short;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public byte getByte(ucar.ma2.Index)
    {
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setByte(ucar.ma2.Index, byte)
    {
        ucar.ma2.ArrayRagged r1;
        byte b0;
        ucar.ma2.Index r2;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        b0 := @parameter1: byte;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public boolean getBoolean(ucar.ma2.Index)
    {
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setBoolean(ucar.ma2.Index, boolean)
    {
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;
        ucar.ma2.ForbiddenConversionException $r0;
        boolean z0;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        z0 := @parameter1: boolean;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object getObject(ucar.ma2.Index)
    {
        ucar.ma2.ArrayRagged r0;
        ucar.ma2.Index r1;

        r0 := @this: ucar.ma2.ArrayRagged;

        r1 := @parameter0: ucar.ma2.Index;

        return null;
    }

    public void setObject(ucar.ma2.Index, java.lang.Object)
    {
        java.lang.Object r2;
        ucar.ma2.ArrayRagged r0;
        ucar.ma2.Index r1;

        r0 := @this: ucar.ma2.ArrayRagged;

        r1 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public char getChar(ucar.ma2.Index)
    {
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setChar(ucar.ma2.Index, char)
    {
        ucar.ma2.ArrayRagged r1;
        ucar.ma2.Index r2;
        char c0;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        r2 := @parameter0: ucar.ma2.Index;

        c0 := @parameter1: char;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public double getDouble(int)
    {
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setDouble(int, double)
    {
        ucar.ma2.ArrayRagged r1;
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        double d0;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public float getFloat(int)
    {
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setFloat(int, float)
    {
        ucar.ma2.ArrayRagged r1;
        int i0;
        float f0;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public long getLong(int)
    {
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setLong(int, long)
    {
        ucar.ma2.ArrayRagged r1;
        int i0;
        long l1;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public int getInt(int)
    {
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setInt(int, int)
    {
        ucar.ma2.ArrayRagged r1;
        int i0, i1;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public short getShort(int)
    {
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setShort(int, short)
    {
        short s1;
        ucar.ma2.ArrayRagged r1;
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        s1 := @parameter1: short;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public byte getByte(int)
    {
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setByte(int, byte)
    {
        ucar.ma2.ArrayRagged r1;
        byte b1;
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public char getChar(int)
    {
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setChar(int, char)
    {
        ucar.ma2.ArrayRagged r1;
        int i0;
        char c1;
        ucar.ma2.ForbiddenConversionException $r0;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        c1 := @parameter1: char;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public boolean getBoolean(int)
    {
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayRagged r1;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setBoolean(int, boolean)
    {
        ucar.ma2.ArrayRagged r1;
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        boolean z0;

        r1 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object getObject(int)
    {
        int i0;
        ucar.ma2.ArrayRagged r0;

        r0 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        return null;
    }

    public void setObject(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r1;
        ucar.ma2.ArrayRagged r0;

        r0 := @this: ucar.ma2.ArrayRagged;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        return;
    }
}
