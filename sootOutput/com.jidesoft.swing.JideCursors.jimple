public class com.jidesoft.swing.JideCursors extends java.lang.Object
{
    public static final int FIRST_CUSTOM_CURSOR;
    public static final int HSPLIT_CURSOR;
    public static final int VSPLIT_CURSOR;
    public static final int DRAG_CURSOR;
    public static final int DRAG_STOP_CURSOR;
    public static final int NORTH_CURSOR;
    public static final int SOUTH_CURSOR;
    public static final int EAST_CURSOR;
    public static final int WEST_CURSOR;
    public static final int TAB_CURSOR;
    public static final int FLOAT_CURSOR;
    public static final int VERTICAL_CURSOR;
    public static final int HORIZONTAL_CURSOR;
    public static final int DELETE_CURSOR;
    public static final int DRAG_TEXT_CURSOR;
    public static final int DRAG_TEXT_STOP_CURSOR;
    public static final int PERCENTAGE_CURSOR;
    public static final int MOVE_EAST_CURSOR;
    public static final int MOVE_WEST_CURSOR;
    public static final int LAST_CUSTOM_CURSOR;
    private static final java.awt.Cursor[] predefined;

    public void <init>()
    {
        com.jidesoft.swing.JideCursors r0;

        r0 := @this: com.jidesoft.swing.JideCursors;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.awt.Cursor getPredefinedCursor(int)
    {
        java.awt.Cursor $r2, $r4, $r6;
        java.lang.IllegalArgumentException $r0;
        java.awt.Cursor[] $r1, $r3, $r5;
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        if i0 < 20 goto label1;

        if i0 <= 38 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal cursor type");

        throw $r0;

     label2:
        $r1 = <com.jidesoft.swing.JideCursors: java.awt.Cursor[] predefined>;

        $i1 = i0 - 20;

        $r2 = $r1[$i1];

        if $r2 != null goto label3;

        $r5 = <com.jidesoft.swing.JideCursors: java.awt.Cursor[] predefined>;

        $i3 = i0 - 20;

        $r6 = staticinvoke <com.jidesoft.swing.JideCursors: java.awt.Cursor createCursor(int)>(i0);

        $r5[$i3] = $r6;

     label3:
        $r3 = <com.jidesoft.swing.JideCursors: java.awt.Cursor[] predefined>;

        $i2 = i0 - 20;

        $r4 = $r3[$i2];

        return $r4;
    }

    public static void setPredefinedCursor(int, java.awt.Cursor)
    {
        java.awt.Cursor[] $r2;
        java.awt.Cursor r1, $r3;
        int i0, $i1;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        r1 := @parameter1: java.awt.Cursor;

        if i0 < 20 goto label1;

        if i0 <= 38 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal cursor type");

        throw $r0;

     label2:
        $r2 = <com.jidesoft.swing.JideCursors: java.awt.Cursor[] predefined>;

        $i1 = i0 - 20;

        if r1 != null goto label3;

        $r3 = staticinvoke <com.jidesoft.swing.JideCursors: java.awt.Cursor createCursor(int)>(i0);

        goto label4;

     label3:
        $r3 = r1;

     label4:
        $r2[$i1] = $r3;

        return;
    }

    protected static java.awt.Cursor createCursor(int)
    {
        java.awt.Cursor $r2, $r6, $r7, $r8, $r12, $r13, $r14, $r18, $r19, $r20, $r24, $r25, $r26, $r30, $r31, $r32, $r36, $r37, $r38, $r42, $r43, $r44, $r48, $r49, $r50, $r54, $r55, $r56, $r60, $r61, $r62, $r66, $r67, $r68, $r72, $r73, $r74, $r78, $r79, $r80, $r84, $r85, $r86, $r90, $r91, $r92, $r96, $r97, $r98, $r102, $r103, $r104, $r108, $r109, $r111;
        java.awt.Image $r4, $r10, $r16, $r22, $r28, $r34, $r40, $r46, $r52, $r58, $r64, $r70, $r76, $r82, $r88, $r94, $r100, $r106;
        java.awt.Toolkit $r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.Exception $r110;
        javax.swing.ImageIcon r112, r113, r114, r115, r116, r117, r118, r119, r120, r121, r122, r123, r124, r125, r126, r127, r128, r129;
        java.awt.Point $r5, $r11, $r17, $r23, $r29, $r35, $r41, $r47, $r53, $r59, $r65, $r71, $r77, $r83, $r89, $r95, $r101, $r107;
        javax.swing.Icon $r3, $r9, $r15, $r21, $r27, $r33, $r39, $r45, $r51, $r57, $r63, $r69, $r75, $r81, $r87, $r93, $r99, $r105;
        java.awt.Dimension $r1;

        i1 := @parameter0: int;

     label001:
        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Dimension getBestCursorSize(int,int)>(32, 32);

        $i0 = virtualinvoke $r0.<java.awt.Toolkit: int getMaximumCursorColors()>();

        tableswitch(i1)
        {
            case 20: goto label002;
            case 21: goto label008;
            case 22: goto label014;
            case 23: goto label020;
            case 24: goto label038;
            case 25: goto label044;
            case 26: goto label050;
            case 27: goto label056;
            case 28: goto label062;
            case 29: goto label068;
            case 30: goto label074;
            case 31: goto label080;
            case 32: goto label086;
            case 33: goto label026;
            case 34: goto label032;
            case 35: goto label092;
            case 36: goto label098;
            case 37: goto label104;
            default: goto label110;
        };

     label002:
        $i19 = $r1.<java.awt.Dimension: int width>;

        if $i19 == 0 goto label006;

        if $i0 <= 3 goto label006;

        $r105 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.hsplit");

        r112 = (javax.swing.ImageIcon) $r105;

        if r112 != null goto label004;

        $r109 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(11);

     label003:
        return $r109;

     label004:
        $r106 = virtualinvoke r112.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r107 = new java.awt.Point;

        specialinvoke $r107.<java.awt.Point: void <init>(int,int)>(15, 15);

        $r108 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r106, $r107, "Horizonal Split");

     label005:
        return $r108;

     label006:
        $r104 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(11);

     label007:
        return $r104;

     label008:
        $i18 = $r1.<java.awt.Dimension: int width>;

        if $i18 == 0 goto label012;

        if $i0 <= 3 goto label012;

        $r99 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.vsplit");

        r113 = (javax.swing.ImageIcon) $r99;

        if r113 != null goto label010;

        $r103 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(9);

     label009:
        return $r103;

     label010:
        $r100 = virtualinvoke r113.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r101 = new java.awt.Point;

        specialinvoke $r101.<java.awt.Point: void <init>(int,int)>(15, 15);

        $r102 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r100, $r101, "Vertical Split");

     label011:
        return $r102;

     label012:
        $r98 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(9);

     label013:
        return $r98;

     label014:
        $i17 = $r1.<java.awt.Dimension: int width>;

        if $i17 == 0 goto label018;

        if $i0 <= 3 goto label018;

        $r93 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.drag");

        r114 = (javax.swing.ImageIcon) $r93;

        if r114 != null goto label016;

        $r97 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label015:
        return $r97;

     label016:
        $r94 = virtualinvoke r114.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r95 = new java.awt.Point;

        specialinvoke $r95.<java.awt.Point: void <init>(int,int)>(17, 12);

        $r96 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r94, $r95, "Drag");

     label017:
        return $r96;

     label018:
        $r92 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label019:
        return $r92;

     label020:
        $i16 = $r1.<java.awt.Dimension: int width>;

        if $i16 == 0 goto label024;

        if $i0 <= 3 goto label024;

        $r87 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.dragStop");

        r115 = (javax.swing.ImageIcon) $r87;

        if r115 != null goto label022;

        $r91 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label021:
        return $r91;

     label022:
        $r88 = virtualinvoke r115.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r89 = new java.awt.Point;

        specialinvoke $r89.<java.awt.Point: void <init>(int,int)>(17, 12);

        $r90 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r88, $r89, "Drag Stop");

     label023:
        return $r90;

     label024:
        $r86 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label025:
        return $r86;

     label026:
        $i6 = $r1.<java.awt.Dimension: int width>;

        if $i6 == 0 goto label030;

        if $i0 <= 3 goto label030;

        $r27 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.dragText");

        r116 = (javax.swing.ImageIcon) $r27;

        if r116 != null goto label028;

        $r31 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label027:
        return $r31;

     label028:
        $r28 = virtualinvoke r116.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r29 = new java.awt.Point;

        specialinvoke $r29.<java.awt.Point: void <init>(int,int)>(0, 0);

        $r30 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r28, $r29, "Drag Text");

     label029:
        return $r30;

     label030:
        $r26 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label031:
        return $r26;

     label032:
        $i5 = $r1.<java.awt.Dimension: int width>;

        if $i5 == 0 goto label036;

        if $i0 <= 3 goto label036;

        $r21 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.dragTextStop");

        r117 = (javax.swing.ImageIcon) $r21;

        if r117 != null goto label034;

        $r25 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label033:
        return $r25;

     label034:
        $r22 = virtualinvoke r117.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r23 = new java.awt.Point;

        specialinvoke $r23.<java.awt.Point: void <init>(int,int)>(15, 15);

        $r24 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r22, $r23, "Drag Text Stop");

     label035:
        return $r24;

     label036:
        $r20 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label037:
        return $r20;

     label038:
        $i15 = $r1.<java.awt.Dimension: int width>;

        if $i15 == 0 goto label042;

        if $i0 <= 3 goto label042;

        $r81 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.north");

        r118 = (javax.swing.ImageIcon) $r81;

        if r118 != null goto label040;

        $r85 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label039:
        return $r85;

     label040:
        $r82 = virtualinvoke r118.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r83 = new java.awt.Point;

        specialinvoke $r83.<java.awt.Point: void <init>(int,int)>(15, 10);

        $r84 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r82, $r83, "North");

     label041:
        return $r84;

     label042:
        $r80 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label043:
        return $r80;

     label044:
        $i14 = $r1.<java.awt.Dimension: int width>;

        if $i14 == 0 goto label048;

        if $i0 <= 3 goto label048;

        $r75 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.south");

        r119 = (javax.swing.ImageIcon) $r75;

        if r119 != null goto label046;

        $r79 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label045:
        return $r79;

     label046:
        $r76 = virtualinvoke r119.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r77 = new java.awt.Point;

        specialinvoke $r77.<java.awt.Point: void <init>(int,int)>(15, 20);

        $r78 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r76, $r77, "South");

     label047:
        return $r78;

     label048:
        $r74 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label049:
        return $r74;

     label050:
        $i13 = $r1.<java.awt.Dimension: int width>;

        if $i13 == 0 goto label054;

        if $i0 <= 3 goto label054;

        $r69 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.east");

        r120 = (javax.swing.ImageIcon) $r69;

        if r120 != null goto label052;

        $r73 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label051:
        return $r73;

     label052:
        $r70 = virtualinvoke r120.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r71 = new java.awt.Point;

        specialinvoke $r71.<java.awt.Point: void <init>(int,int)>(20, 15);

        $r72 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r70, $r71, "East");

     label053:
        return $r72;

     label054:
        $r68 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label055:
        return $r68;

     label056:
        $i12 = $r1.<java.awt.Dimension: int width>;

        if $i12 == 0 goto label060;

        if $i0 <= 3 goto label060;

        $r63 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.west");

        r121 = (javax.swing.ImageIcon) $r63;

        if r121 != null goto label058;

        $r67 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label057:
        return $r67;

     label058:
        $r64 = virtualinvoke r121.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r65 = new java.awt.Point;

        specialinvoke $r65.<java.awt.Point: void <init>(int,int)>(10, 15);

        $r66 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r64, $r65, "West");

     label059:
        return $r66;

     label060:
        $r62 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label061:
        return $r62;

     label062:
        $i11 = $r1.<java.awt.Dimension: int width>;

        if $i11 == 0 goto label066;

        if $i0 <= 3 goto label066;

        $r57 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.tab");

        r122 = (javax.swing.ImageIcon) $r57;

        if r122 != null goto label064;

        $r61 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label063:
        return $r61;

     label064:
        $r58 = virtualinvoke r122.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r59 = new java.awt.Point;

        specialinvoke $r59.<java.awt.Point: void <init>(int,int)>(15, 15);

        $r60 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r58, $r59, "Tabbed");

     label065:
        return $r60;

     label066:
        $r56 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label067:
        return $r56;

     label068:
        $i10 = $r1.<java.awt.Dimension: int width>;

        if $i10 == 0 goto label072;

        if $i0 <= 3 goto label072;

        $r51 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.float");

        r123 = (javax.swing.ImageIcon) $r51;

        if r123 != null goto label070;

        $r55 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label069:
        return $r55;

     label070:
        $r52 = virtualinvoke r123.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r53 = new java.awt.Point;

        specialinvoke $r53.<java.awt.Point: void <init>(int,int)>(15, 15);

        $r54 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r52, $r53, "Floating");

     label071:
        return $r54;

     label072:
        $r50 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label073:
        return $r50;

     label074:
        $i9 = $r1.<java.awt.Dimension: int width>;

        if $i9 == 0 goto label078;

        if $i0 <= 3 goto label078;

        $r45 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.vertical");

        r124 = (javax.swing.ImageIcon) $r45;

        if r124 != null goto label076;

        $r49 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label075:
        return $r49;

     label076:
        $r46 = virtualinvoke r124.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r47 = new java.awt.Point;

        specialinvoke $r47.<java.awt.Point: void <init>(int,int)>(15, 15);

        $r48 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r46, $r47, "Vertical");

     label077:
        return $r48;

     label078:
        $r44 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label079:
        return $r44;

     label080:
        $i8 = $r1.<java.awt.Dimension: int width>;

        if $i8 == 0 goto label084;

        if $i0 <= 3 goto label084;

        $r39 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.horizontal");

        r125 = (javax.swing.ImageIcon) $r39;

        if r125 != null goto label082;

        $r43 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label081:
        return $r43;

     label082:
        $r40 = virtualinvoke r125.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r41 = new java.awt.Point;

        specialinvoke $r41.<java.awt.Point: void <init>(int,int)>(15, 15);

        $r42 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r40, $r41, "Horizontal");

     label083:
        return $r42;

     label084:
        $r38 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label085:
        return $r38;

     label086:
        $i7 = $r1.<java.awt.Dimension: int width>;

        if $i7 == 0 goto label090;

        if $i0 <= 3 goto label090;

        $r33 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.delete");

        r126 = (javax.swing.ImageIcon) $r33;

        if r126 != null goto label088;

        $r37 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label087:
        return $r37;

     label088:
        $r34 = virtualinvoke r126.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r35 = new java.awt.Point;

        specialinvoke $r35.<java.awt.Point: void <init>(int,int)>(10, 10);

        $r36 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r34, $r35, "Delete");

     label089:
        return $r36;

     label090:
        $r32 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label091:
        return $r32;

     label092:
        $i4 = $r1.<java.awt.Dimension: int width>;

        if $i4 == 0 goto label096;

        if $i0 <= 3 goto label096;

        $r15 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.percentage");

        r127 = (javax.swing.ImageIcon) $r15;

        if r127 != null goto label094;

        $r19 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label093:
        return $r19;

     label094:
        $r16 = virtualinvoke r127.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r17 = new java.awt.Point;

        specialinvoke $r17.<java.awt.Point: void <init>(int,int)>(20, 15);

        $r18 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r16, $r17, "Percentage");

     label095:
        return $r18;

     label096:
        $r14 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label097:
        return $r14;

     label098:
        $i3 = $r1.<java.awt.Dimension: int width>;

        if $i3 == 0 goto label102;

        if $i0 <= 3 goto label102;

        $r9 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.moveEast");

        r128 = (javax.swing.ImageIcon) $r9;

        if r128 != null goto label100;

        $r13 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label099:
        return $r13;

     label100:
        $r10 = virtualinvoke r128.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r11 = new java.awt.Point;

        specialinvoke $r11.<java.awt.Point: void <init>(int,int)>(11, 15);

        $r12 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r10, $r11, "Move East");

     label101:
        return $r12;

     label102:
        $r8 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label103:
        return $r8;

     label104:
        $i2 = $r1.<java.awt.Dimension: int width>;

        if $i2 == 0 goto label108;

        if $i0 <= 3 goto label108;

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>("Cursor.moveWest");

        r129 = (javax.swing.ImageIcon) $r3;

        if r129 != null goto label106;

        $r7 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label105:
        return $r7;

     label106:
        $r4 = virtualinvoke r129.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r5 = new java.awt.Point;

        specialinvoke $r5.<java.awt.Point: void <init>(int,int)>(20, 15);

        $r6 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r4, $r5, "Move West");

     label107:
        return $r6;

     label108:
        $r2 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

     label109:
        return $r2;

     label110:
        return null;

     label111:
        $r110 := @caughtexception;

        $r111 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

        return $r111;

        catch java.lang.Exception from label001 to label003 with label111;
        catch java.lang.Exception from label004 to label005 with label111;
        catch java.lang.Exception from label006 to label007 with label111;
        catch java.lang.Exception from label008 to label009 with label111;
        catch java.lang.Exception from label010 to label011 with label111;
        catch java.lang.Exception from label012 to label013 with label111;
        catch java.lang.Exception from label014 to label015 with label111;
        catch java.lang.Exception from label016 to label017 with label111;
        catch java.lang.Exception from label018 to label019 with label111;
        catch java.lang.Exception from label020 to label021 with label111;
        catch java.lang.Exception from label022 to label023 with label111;
        catch java.lang.Exception from label024 to label025 with label111;
        catch java.lang.Exception from label026 to label027 with label111;
        catch java.lang.Exception from label028 to label029 with label111;
        catch java.lang.Exception from label030 to label031 with label111;
        catch java.lang.Exception from label032 to label033 with label111;
        catch java.lang.Exception from label034 to label035 with label111;
        catch java.lang.Exception from label036 to label037 with label111;
        catch java.lang.Exception from label038 to label039 with label111;
        catch java.lang.Exception from label040 to label041 with label111;
        catch java.lang.Exception from label042 to label043 with label111;
        catch java.lang.Exception from label044 to label045 with label111;
        catch java.lang.Exception from label046 to label047 with label111;
        catch java.lang.Exception from label048 to label049 with label111;
        catch java.lang.Exception from label050 to label051 with label111;
        catch java.lang.Exception from label052 to label053 with label111;
        catch java.lang.Exception from label054 to label055 with label111;
        catch java.lang.Exception from label056 to label057 with label111;
        catch java.lang.Exception from label058 to label059 with label111;
        catch java.lang.Exception from label060 to label061 with label111;
        catch java.lang.Exception from label062 to label063 with label111;
        catch java.lang.Exception from label064 to label065 with label111;
        catch java.lang.Exception from label066 to label067 with label111;
        catch java.lang.Exception from label068 to label069 with label111;
        catch java.lang.Exception from label070 to label071 with label111;
        catch java.lang.Exception from label072 to label073 with label111;
        catch java.lang.Exception from label074 to label075 with label111;
        catch java.lang.Exception from label076 to label077 with label111;
        catch java.lang.Exception from label078 to label079 with label111;
        catch java.lang.Exception from label080 to label081 with label111;
        catch java.lang.Exception from label082 to label083 with label111;
        catch java.lang.Exception from label084 to label085 with label111;
        catch java.lang.Exception from label086 to label087 with label111;
        catch java.lang.Exception from label088 to label089 with label111;
        catch java.lang.Exception from label090 to label091 with label111;
        catch java.lang.Exception from label092 to label093 with label111;
        catch java.lang.Exception from label094 to label095 with label111;
        catch java.lang.Exception from label096 to label097 with label111;
        catch java.lang.Exception from label098 to label099 with label111;
        catch java.lang.Exception from label100 to label101 with label111;
        catch java.lang.Exception from label102 to label103 with label111;
        catch java.lang.Exception from label104 to label105 with label111;
        catch java.lang.Exception from label106 to label107 with label111;
        catch java.lang.Exception from label108 to label109 with label111;
    }

    static void <clinit>()
    {
        java.awt.Cursor[] $r0;
        int i0;

        <com.jidesoft.swing.JideCursors: int LAST_CUSTOM_CURSOR> = 38;

        <com.jidesoft.swing.JideCursors: int MOVE_WEST_CURSOR> = 37;

        <com.jidesoft.swing.JideCursors: int MOVE_EAST_CURSOR> = 36;

        <com.jidesoft.swing.JideCursors: int PERCENTAGE_CURSOR> = 35;

        <com.jidesoft.swing.JideCursors: int DRAG_TEXT_STOP_CURSOR> = 34;

        <com.jidesoft.swing.JideCursors: int DRAG_TEXT_CURSOR> = 33;

        <com.jidesoft.swing.JideCursors: int DELETE_CURSOR> = 32;

        <com.jidesoft.swing.JideCursors: int HORIZONTAL_CURSOR> = 31;

        <com.jidesoft.swing.JideCursors: int VERTICAL_CURSOR> = 30;

        <com.jidesoft.swing.JideCursors: int FLOAT_CURSOR> = 29;

        <com.jidesoft.swing.JideCursors: int TAB_CURSOR> = 28;

        <com.jidesoft.swing.JideCursors: int WEST_CURSOR> = 27;

        <com.jidesoft.swing.JideCursors: int EAST_CURSOR> = 26;

        <com.jidesoft.swing.JideCursors: int SOUTH_CURSOR> = 25;

        <com.jidesoft.swing.JideCursors: int NORTH_CURSOR> = 24;

        <com.jidesoft.swing.JideCursors: int DRAG_STOP_CURSOR> = 23;

        <com.jidesoft.swing.JideCursors: int DRAG_CURSOR> = 22;

        <com.jidesoft.swing.JideCursors: int VSPLIT_CURSOR> = 21;

        <com.jidesoft.swing.JideCursors: int HSPLIT_CURSOR> = 20;

        <com.jidesoft.swing.JideCursors: int FIRST_CUSTOM_CURSOR> = 20;

        $r0 = newarray (java.awt.Cursor)[19];

        <com.jidesoft.swing.JideCursors: java.awt.Cursor[] predefined> = $r0;

        i0 = 20;

     label1:
        if i0 >= 38 goto label2;

        staticinvoke <com.jidesoft.swing.JideCursors: java.awt.Cursor getPredefinedCursor(int)>(i0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
}
