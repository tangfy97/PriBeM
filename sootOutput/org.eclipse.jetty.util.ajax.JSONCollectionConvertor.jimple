public class org.eclipse.jetty.util.ajax.JSONCollectionConvertor extends java.lang.Object implements org.eclipse.jetty.util.ajax.JSON$Convertor
{

    public void <init>()
    {
        org.eclipse.jetty.util.ajax.JSONCollectionConvertor r0;

        r0 := @this: org.eclipse.jetty.util.ajax.JSONCollectionConvertor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void toJSON(java.lang.Object, org.eclipse.jetty.util.ajax.JSON$Output)
    {
        org.eclipse.jetty.util.ajax.JSON$Output r0;
        java.lang.Object[] $r4;
        org.eclipse.jetty.util.ajax.JSONCollectionConvertor r5;
        java.util.Collection $r3;
        java.lang.Object r1;
        java.lang.Class $r2;

        r5 := @this: org.eclipse.jetty.util.ajax.JSONCollectionConvertor;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.eclipse.jetty.util.ajax.JSON$Output;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke r0.<org.eclipse.jetty.util.ajax.JSON$Output: void addClass(java.lang.Class)>($r2);

        $r3 = (java.util.Collection) r1;

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray()>();

        interfaceinvoke r0.<org.eclipse.jetty.util.ajax.JSON$Output: void add(java.lang.String,java.lang.Object)>("list", $r4);

        return;
    }

    public java.lang.Object fromJSON(java.util.Map)
    {
        java.lang.Object[] $r8, $r9;
        org.eclipse.jetty.util.ajax.JSONCollectionConvertor r0;
        java.util.Collection r13;
        java.lang.RuntimeException $r11, $r12;
        java.lang.Exception $r10;
        java.util.Map r2;
        java.lang.Class $r1, $r5;
        java.lang.Object $r3, $r6, $r7;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.ajax.JSONCollectionConvertor;

        r2 := @parameter0: java.util.Map;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("class");

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>($r1, $r4);

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

        r13 = (java.util.Collection) $r6;

        $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("list");

        $r8 = (java.lang.Object[]) $r7;

        $r9 = (java.lang.Object[]) $r8;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r13, $r9);

     label2:
        return r13;

     label3:
        $r10 := @caughtexception;

        $z0 = $r10 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label4;

        $r12 = (java.lang.RuntimeException) $r10;

        throw $r12;

     label4:
        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
