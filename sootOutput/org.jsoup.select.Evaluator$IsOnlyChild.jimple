public final class org.jsoup.select.Evaluator$IsOnlyChild extends org.jsoup.select.Evaluator
{

    public void <init>()
    {
        org.jsoup.select.Evaluator$IsOnlyChild r0;

        r0 := @this: org.jsoup.select.Evaluator$IsOnlyChild;

        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();

        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.nodes.Element r0, $r1, r4;
        org.jsoup.select.Evaluator$IsOnlyChild r3;
        int $i0;
        org.jsoup.select.Elements $r2;
        boolean $z0, $z1;

        r3 := @this: org.jsoup.select.Evaluator$IsOnlyChild;

        r4 := @parameter0: org.jsoup.nodes.Element;

        r0 := @parameter1: org.jsoup.nodes.Element;

        $r1 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();

        if $r1 == null goto label1;

        $z0 = $r1 instanceof org.jsoup.nodes.Document;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.select.Elements siblingElements()>();

        $i0 = virtualinvoke $r2.<org.jsoup.select.Elements: int size()>();

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$IsOnlyChild r0;

        r0 := @this: org.jsoup.select.Evaluator$IsOnlyChild;

        return ":only-child";
    }
}
