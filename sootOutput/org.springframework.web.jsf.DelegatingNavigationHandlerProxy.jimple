public class org.springframework.web.jsf.DelegatingNavigationHandlerProxy extends javax.faces.application.NavigationHandler
{
    public static final java.lang.String DEFAULT_TARGET_BEAN_NAME;
    private javax.faces.application.NavigationHandler originalNavigationHandler;

    public void <init>()
    {
        org.springframework.web.jsf.DelegatingNavigationHandlerProxy r0;

        r0 := @this: org.springframework.web.jsf.DelegatingNavigationHandlerProxy;

        specialinvoke r0.<javax.faces.application.NavigationHandler: void <init>()>();

        return;
    }

    public void <init>(javax.faces.application.NavigationHandler)
    {
        javax.faces.application.NavigationHandler r1;
        org.springframework.web.jsf.DelegatingNavigationHandlerProxy r0;

        r0 := @this: org.springframework.web.jsf.DelegatingNavigationHandlerProxy;

        r1 := @parameter0: javax.faces.application.NavigationHandler;

        specialinvoke r0.<javax.faces.application.NavigationHandler: void <init>()>();

        r0.<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: javax.faces.application.NavigationHandler originalNavigationHandler> = r1;

        return;
    }

    public void handleNavigation(javax.faces.context.FacesContext, java.lang.String, java.lang.String)
    {
        javax.faces.application.NavigationHandler $r2, $r5;
        org.springframework.web.jsf.DelegatingNavigationHandlerProxy r0;
        org.springframework.web.jsf.DecoratingNavigationHandler $r6;
        javax.faces.context.FacesContext r1;
        java.lang.String r3, r4;
        boolean $z0;

        r0 := @this: org.springframework.web.jsf.DelegatingNavigationHandlerProxy;

        r1 := @parameter0: javax.faces.context.FacesContext;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: javax.faces.application.NavigationHandler getDelegate(javax.faces.context.FacesContext)>(r1);

        $z0 = $r2 instanceof org.springframework.web.jsf.DecoratingNavigationHandler;

        if $z0 == 0 goto label1;

        $r6 = (org.springframework.web.jsf.DecoratingNavigationHandler) $r2;

        $r5 = r0.<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: javax.faces.application.NavigationHandler originalNavigationHandler>;

        virtualinvoke $r6.<org.springframework.web.jsf.DecoratingNavigationHandler: void handleNavigation(javax.faces.context.FacesContext,java.lang.String,java.lang.String,javax.faces.application.NavigationHandler)>(r1, r3, r4, $r5);

        goto label2;

     label1:
        virtualinvoke $r2.<javax.faces.application.NavigationHandler: void handleNavigation(javax.faces.context.FacesContext,java.lang.String,java.lang.String)>(r1, r3, r4);

     label2:
        return;
    }

    protected javax.faces.application.NavigationHandler getDelegate(javax.faces.context.FacesContext)
    {
        javax.faces.context.FacesContext r1;
        org.springframework.beans.factory.BeanFactory $r3;
        java.lang.Object $r4;
        javax.faces.application.NavigationHandler $r5;
        java.lang.String $r2;
        org.springframework.web.jsf.DelegatingNavigationHandlerProxy r0;

        r0 := @this: org.springframework.web.jsf.DelegatingNavigationHandlerProxy;

        r1 := @parameter0: javax.faces.context.FacesContext;

        $r2 = virtualinvoke r0.<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: java.lang.String getTargetBeanName(javax.faces.context.FacesContext)>(r1);

        $r3 = virtualinvoke r0.<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: org.springframework.beans.factory.BeanFactory getBeanFactory(javax.faces.context.FacesContext)>(r1);

        $r4 = interfaceinvoke $r3.<org.springframework.beans.factory.BeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>($r2, class "Ljavax/faces/application/NavigationHandler;");

        $r5 = (javax.faces.application.NavigationHandler) $r4;

        return $r5;
    }

    protected java.lang.String getTargetBeanName(javax.faces.context.FacesContext)
    {
        javax.faces.context.FacesContext r1;
        org.springframework.web.jsf.DelegatingNavigationHandlerProxy r0;

        r0 := @this: org.springframework.web.jsf.DelegatingNavigationHandlerProxy;

        r1 := @parameter0: javax.faces.context.FacesContext;

        return "jsfNavigationHandler";
    }

    protected org.springframework.beans.factory.BeanFactory getBeanFactory(javax.faces.context.FacesContext)
    {
        org.springframework.web.context.WebApplicationContext $r2;
        javax.faces.context.FacesContext r1;
        org.springframework.web.jsf.DelegatingNavigationHandlerProxy r0;

        r0 := @this: org.springframework.web.jsf.DelegatingNavigationHandlerProxy;

        r1 := @parameter0: javax.faces.context.FacesContext;

        $r2 = virtualinvoke r0.<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.faces.context.FacesContext)>(r1);

        return $r2;
    }

    protected org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.faces.context.FacesContext)
    {
        org.springframework.web.context.WebApplicationContext $r1;
        javax.faces.context.FacesContext r0;
        org.springframework.web.jsf.DelegatingNavigationHandlerProxy r2;

        r2 := @this: org.springframework.web.jsf.DelegatingNavigationHandlerProxy;

        r0 := @parameter0: javax.faces.context.FacesContext;

        $r1 = staticinvoke <org.springframework.web.jsf.FacesContextUtils: org.springframework.web.context.WebApplicationContext getRequiredWebApplicationContext(javax.faces.context.FacesContext)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.springframework.web.jsf.DelegatingNavigationHandlerProxy: java.lang.String DEFAULT_TARGET_BEAN_NAME> = "jsfNavigationHandler";

        return;
    }
}
