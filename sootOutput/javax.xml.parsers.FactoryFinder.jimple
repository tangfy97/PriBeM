final class javax.xml.parsers.FactoryFinder extends java.lang.Object
{
    private static boolean debug;
    private static java.util.Properties cacheProps;
    private static boolean firstTime;
    private static final int DEFAULT_LINE_LENGTH;
    static java.lang.Class class$javax$xml$parsers$FactoryFinder;

    private void <init>()
    {
        javax.xml.parsers.FactoryFinder r0;

        r0 := @this: javax.xml.parsers.FactoryFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void dPrint(java.lang.String)
    {
        java.io.PrintStream $r1;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String r3, $r5;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        $z0 = <javax.xml.parsers.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label1;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JAXP: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        return;
    }

    static java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader, boolean) throws javax.xml.parsers.FactoryFinder$ConfigurationError
    {
        javax.xml.parsers.FactoryFinder$ConfigurationError $r8, $r16;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r9, $r10, $r11, $r12, $r13, $r17, $r18, $r19, $r20;
        java.lang.String r0, $r6, $r14, $r21;
        boolean z0, $z1;
        java.lang.Exception $r7;
        java.lang.ClassNotFoundException $r15, $r22;
        java.lang.Class $r23, r26, $r27;
        java.lang.Object $r28;
        java.lang.ClassLoader $r24, r25;

        r0 := @parameter0: java.lang.String;

        r25 := @parameter1: java.lang.ClassLoader;

        z0 := @parameter2: boolean;

     label01:
        if r25 != null goto label02;

        r26 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        goto label09;

     label02:
        r26 = virtualinvoke r25.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label03:
        goto label09;

     label04:
        $r22 := @caughtexception;

        if z0 == 0 goto label08;

        $r23 = <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder>;

        if $r23 != null goto label05;

        $r27 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Class class$(java.lang.String)>("javax.xml.parsers.FactoryFinder");

        <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder> = $r27;

        goto label06;

     label05:
        $r27 = <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder>;

     label06:
        $r24 = virtualinvoke $r27.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r25 = $r24;

        if $r24 == null goto label07;

        r26 = virtualinvoke $r24.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

        goto label09;

     label07:
        r26 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        goto label09;

     label08:
        throw $r22;

     label09:
        $r28 = virtualinvoke r26.<java.lang.Class: java.lang.Object newInstance()>();

        $z1 = <javax.xml.parsers.FactoryFinder: boolean debug>;

        if $z1 == 0 goto label10;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("created new instance of ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r26);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" using ClassLoader: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r25);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r6);

     label10:
        return $r28;

     label11:
        $r15 := @caughtexception;

        $r16 = new javax.xml.parsers.FactoryFinder$ConfigurationError;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Provider ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not found");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<javax.xml.parsers.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r21, $r15);

        throw $r16;

     label12:
        $r7 := @caughtexception;

        $r8 = new javax.xml.parsers.FactoryFinder$ConfigurationError;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Provider ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" could not be instantiated: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<javax.xml.parsers.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r14, $r7);

        throw $r8;

        catch java.lang.ClassNotFoundException from label02 to label03 with label04;
        catch java.lang.ClassNotFoundException from label01 to label11 with label11;
        catch java.lang.Exception from label01 to label11 with label12;
    }

    static java.lang.Object find(java.lang.String, java.lang.String) throws javax.xml.parsers.FactoryFinder$ConfigurationError
    {
        java.lang.Exception $r50;
        java.lang.ClassLoader $r0, r53;
        java.lang.Throwable $r51;
        javax.xml.parsers.FactoryFinder$ConfigurationError $r21;
        java.lang.StringBuffer $r4, $r5, $r7, $r8, $r10, $r11, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r36, $r37, $r38, $r41, $r42, $r43, $r45, $r46, $r47;
        java.lang.String r1, $r2, $r3, $r6, $r9, $r12, $r14, r15, $r20, $r26, $r31, $r39, $r44, $r48;
        java.util.Properties $r13, r32, $r34;
        java.io.File $r33;
        java.lang.SecurityException $r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int $i0;
        java.io.FileInputStream $r35;
        java.lang.Object $r16, $r27, $r40, $r55;
        java.lang.Class $r49, $r54;

        r1 := @parameter0: java.lang.String;

        r15 := @parameter1: java.lang.String;

        $r0 = staticinvoke <javax.xml.parsers.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();

        r53 = $r0;

        if $r0 != null goto label03;

        $r49 = <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder>;

        if $r49 != null goto label01;

        $r54 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Class class$(java.lang.String)>("javax.xml.parsers.FactoryFinder");

        <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder> = $r54;

        goto label02;

     label01:
        $r54 = <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder>;

     label02:
        r53 = virtualinvoke $r54.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label03:
        $z8 = <javax.xml.parsers.FactoryFinder: boolean debug>;

        if $z8 == 0 goto label04;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("find factoryId =");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r48);

     label04:
        $r2 = staticinvoke <javax.xml.parsers.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>(r1);

        if $r2 == null goto label06;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label06;

        $z6 = <javax.xml.parsers.FactoryFinder: boolean debug>;

        if $z6 == 0 goto label05;

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("found system property, value=");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r44);

     label05:
        $r40 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>($r2, r53, 1);

        return $r40;

     label06:
        goto label08;

     label07:
        $r52 := @caughtexception;

     label08:
        $r3 = staticinvoke <javax.xml.parsers.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>("java.home");

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r6 = <java.io.File: java.lang.String separator>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("lib");

        $r9 = <java.io.File: java.lang.String separator>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("jaxp.properties");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = <javax.xml.parsers.FactoryFinder: boolean firstTime>;

        if $z0 == 0 goto label13;

        r32 = <javax.xml.parsers.FactoryFinder: java.util.Properties cacheProps>;

        entermonitor r32;

     label09:
        $z3 = <javax.xml.parsers.FactoryFinder: boolean firstTime>;

        if $z3 == 0 goto label11;

        $r33 = new java.io.File;

        specialinvoke $r33.<java.io.File: void <init>(java.lang.String)>($r12);

        <javax.xml.parsers.FactoryFinder: boolean firstTime> = 0;

        $z4 = staticinvoke <javax.xml.parsers.SecuritySupport: boolean doesFileExist(java.io.File)>($r33);

        if $z4 == 0 goto label11;

        $z5 = <javax.xml.parsers.FactoryFinder: boolean debug>;

        if $z5 == 0 goto label10;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Read properties file ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r33);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r39);

     label10:
        $r34 = <javax.xml.parsers.FactoryFinder: java.util.Properties cacheProps>;

        $r35 = staticinvoke <javax.xml.parsers.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)>($r33);

        virtualinvoke $r34.<java.util.Properties: void load(java.io.InputStream)>($r35);

     label11:
        exitmonitor r32;

        goto label13;

     label12:
        $r51 := @caughtexception;

        exitmonitor r32;

        throw $r51;

     label13:
        $r13 = <javax.xml.parsers.FactoryFinder: java.util.Properties cacheProps>;

        $r14 = virtualinvoke $r13.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        if $r14 == null goto label15;

        $z2 = <javax.xml.parsers.FactoryFinder: boolean debug>;

        if $z2 == 0 goto label14;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("found in $java.home/jaxp.properties, value=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r31);

     label14:
        $r27 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>($r14, r53, 1);

        return $r27;

     label15:
        goto label17;

     label16:
        $r50 := @caughtexception;

        $z7 = <javax.xml.parsers.FactoryFinder: boolean debug>;

        if $z7 == 0 goto label17;

        virtualinvoke $r50.<java.lang.Throwable: void printStackTrace()>();

     label17:
        $r55 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object findJarServiceProvider(java.lang.String)>(r1);

        if $r55 == null goto label18;

        return $r55;

     label18:
        if r15 != null goto label19;

        $r21 = new javax.xml.parsers.FactoryFinder$ConfigurationError;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Provider for ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cannot be found");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<javax.xml.parsers.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r26, null);

        throw $r21;

     label19:
        $z1 = <javax.xml.parsers.FactoryFinder: boolean debug>;

        if $z1 == 0 goto label20;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("loaded from fallback value: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r20);

     label20:
        $r16 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(r15, r53, 1);

        return $r16;

        catch java.lang.SecurityException from label04 to label06 with label07;
        catch java.lang.Throwable from label09 to label12 with label12;
        catch java.lang.Exception from label08 to label15 with label16;
    }

    private static java.lang.Object findJarServiceProvider(java.lang.String) throws javax.xml.parsers.FactoryFinder$ConfigurationError
    {
        boolean $z0, $z1, $z2;
        java.lang.ClassLoader $r5, $r7, $r25, r34;
        java.io.UnsupportedEncodingException $r31;
        java.lang.Throwable $r29;
        java.lang.StringBuffer $r0, $r1, $r3, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21;
        java.lang.String r2, $r4, $r10, $r11, $r16, $r22;
        java.io.IOException $r26, $r27, $r28, $r30;
        java.io.InputStreamReader $r9, $r33;
        java.lang.Class $r6, $r24, $r36, $r37;
        java.lang.Object $r12;
        java.io.BufferedReader $r8, $r32, r38;
        java.io.InputStream $r23, r35;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("META-INF/services/");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = staticinvoke <javax.xml.parsers.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();

        r34 = $r5;

        if $r5 == null goto label03;

        $r23 = staticinvoke <javax.xml.parsers.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r5, $r4);

        r35 = $r23;

        if $r23 != null goto label06;

        $r24 = <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder>;

        if $r24 != null goto label01;

        $r36 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Class class$(java.lang.String)>("javax.xml.parsers.FactoryFinder");

        <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder> = $r36;

        goto label02;

     label01:
        $r36 = <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder>;

     label02:
        $r25 = virtualinvoke $r36.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r34 = $r25;

        r35 = staticinvoke <javax.xml.parsers.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r25, $r4);

        goto label06;

     label03:
        $r6 = <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder>;

        if $r6 != null goto label04;

        $r37 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Class class$(java.lang.String)>("javax.xml.parsers.FactoryFinder");

        <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder> = $r37;

        goto label05;

     label04:
        $r37 = <javax.xml.parsers.FactoryFinder: java.lang.Class class$javax$xml$parsers$FactoryFinder>;

     label05:
        $r7 = virtualinvoke $r37.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r34 = $r7;

        r35 = staticinvoke <javax.xml.parsers.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r7, $r4);

     label06:
        if r35 != null goto label07;

        return null;

     label07:
        $z0 = <javax.xml.parsers.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label08;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("found jar resource=");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" using ClassLoader: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r34);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r22);

     label08:
        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r35, "UTF-8");

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r9, 80);

        r38 = $r8;

     label09:
        goto label11;

     label10:
        $r31 := @caughtexception;

        $r32 = new java.io.BufferedReader;

        $r33 = new java.io.InputStreamReader;

        specialinvoke $r33.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r35);

        specialinvoke $r32.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r33, 80);

        r38 = $r32;

     label11:
        $r10 = virtualinvoke r38.<java.io.BufferedReader: java.lang.String readLine()>();

     label12:
        goto label21;

     label13:
        goto label18;

     label14:
        $r30 := @caughtexception;

        goto label25;

     label15:
        return null;

     label16:
        $r29 := @caughtexception;

        goto label29;

     label17:
        throw $r29;

     label18:
        if $r10 == null goto label20;

        $r11 = "";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label20;

        $z2 = <javax.xml.parsers.FactoryFinder: boolean debug>;

        if $z2 == 0 goto label19;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("found in resource, value=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r16);

     label19:
        $r12 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>($r10, r34, 0);

        return $r12;

     label20:
        return null;

     label21:
        virtualinvoke r38.<java.io.BufferedReader: void close()>();

     label22:
        goto label24;

     label23:
        $r28 := @caughtexception;

     label24:
        goto label13;

     label25:
        virtualinvoke r38.<java.io.BufferedReader: void close()>();

     label26:
        goto label28;

     label27:
        $r27 := @caughtexception;

     label28:
        goto label15;

     label29:
        virtualinvoke r38.<java.io.BufferedReader: void close()>();

     label30:
        goto label32;

     label31:
        $r26 := @caughtexception;

     label32:
        goto label17;

        catch java.io.UnsupportedEncodingException from label08 to label09 with label10;
        catch java.io.IOException from label11 to label12 with label14;
        catch java.lang.Throwable from label11 to label16 with label16;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.io.IOException from label29 to label30 with label31;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.util.Properties $r0;
        java.lang.SecurityException $r3;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        <javax.xml.parsers.FactoryFinder: int DEFAULT_LINE_LENGTH> = 80;

        <javax.xml.parsers.FactoryFinder: boolean debug> = 0;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        <javax.xml.parsers.FactoryFinder: java.util.Properties cacheProps> = $r0;

        <javax.xml.parsers.FactoryFinder: boolean firstTime> = 1;

     label1:
        $r1 = staticinvoke <javax.xml.parsers.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>("jaxp.debug");

        if $r1 == null goto label2;

        $r2 = "false";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        <javax.xml.parsers.FactoryFinder: boolean debug> = $z1;

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        <javax.xml.parsers.FactoryFinder: boolean debug> = 0;

     label6:
        return;

        catch java.lang.SecurityException from label1 to label4 with label5;
    }
}
