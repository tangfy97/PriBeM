abstract class groovyjarjarantlr.BlockWithImpliedExitPath extends groovyjarjarantlr.AlternativeBlock
{
    protected int exitLookaheadDepth;
    protected groovyjarjarantlr.Lookahead[] exitCache;

    public void <init>(groovyjarjarantlr.Grammar)
    {
        groovyjarjarantlr.Lookahead[] $r3;
        int $i0, $i1;
        groovyjarjarantlr.BlockWithImpliedExitPath r0;
        groovyjarjarantlr.Grammar r1, $r2;

        r0 := @this: groovyjarjarantlr.BlockWithImpliedExitPath;

        r1 := @parameter0: groovyjarjarantlr.Grammar;

        specialinvoke r0.<groovyjarjarantlr.AlternativeBlock: void <init>(groovyjarjarantlr.Grammar)>(r1);

        $r2 = r0.<groovyjarjarantlr.BlockWithImpliedExitPath: groovyjarjarantlr.Grammar grammar>;

        $i0 = $r2.<groovyjarjarantlr.Grammar: int maxk>;

        $i1 = $i0 + 1;

        $r3 = newarray (groovyjarjarantlr.Lookahead)[$i1];

        r0.<groovyjarjarantlr.BlockWithImpliedExitPath: groovyjarjarantlr.Lookahead[] exitCache> = $r3;

        return;
    }

    public void <init>(groovyjarjarantlr.Grammar, groovyjarjarantlr.Token)
    {
        groovyjarjarantlr.Lookahead[] $r4;
        int $i0, $i1;
        groovyjarjarantlr.BlockWithImpliedExitPath r0;
        groovyjarjarantlr.Grammar r1, $r3;
        groovyjarjarantlr.Token r2;

        r0 := @this: groovyjarjarantlr.BlockWithImpliedExitPath;

        r1 := @parameter0: groovyjarjarantlr.Grammar;

        r2 := @parameter1: groovyjarjarantlr.Token;

        specialinvoke r0.<groovyjarjarantlr.AlternativeBlock: void <init>(groovyjarjarantlr.Grammar,groovyjarjarantlr.Token,boolean)>(r1, r2, 0);

        $r3 = r0.<groovyjarjarantlr.BlockWithImpliedExitPath: groovyjarjarantlr.Grammar grammar>;

        $i0 = $r3.<groovyjarjarantlr.Grammar: int maxk>;

        $i1 = $i0 + 1;

        $r4 = newarray (groovyjarjarantlr.Lookahead)[$i1];

        r0.<groovyjarjarantlr.BlockWithImpliedExitPath: groovyjarjarantlr.Lookahead[] exitCache> = $r4;

        return;
    }
}
