public abstract class org.apache.lucene.index.Fields extends java.lang.Object implements java.lang.Iterable
{
    public static final org.apache.lucene.index.Fields[] EMPTY_ARRAY;

    protected void <init>()
    {
        org.apache.lucene.index.Fields r0;

        r0 := @this: org.apache.lucene.index.Fields;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.util.Iterator iterator();

    public abstract org.apache.lucene.index.Terms terms(java.lang.String) throws java.io.IOException;

    public abstract int size();

    public long getUniqueTermCount() throws java.io.IOException
    {
        org.apache.lucene.index.Terms $r4;
        java.util.Iterator $r1;
        org.apache.lucene.index.Fields r0;
        long $l0, l2;
        byte $b1;
        java.lang.Object $r2;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.Fields;

        l2 = 0L;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.Fields: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke r0.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>(r3);

        if $r4 == null goto label3;

        $l0 = virtualinvoke $r4.<org.apache.lucene.index.Terms: long size()>();

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label2;

        return -1L;

     label2:
        l2 = l2 + $l0;

     label3:
        goto label1;

     label4:
        return l2;
    }

    static void <clinit>()
    {
        org.apache.lucene.index.Fields[] $r0;

        $r0 = newarray (org.apache.lucene.index.Fields)[0];

        <org.apache.lucene.index.Fields: org.apache.lucene.index.Fields[] EMPTY_ARRAY> = $r0;

        return;
    }
}
