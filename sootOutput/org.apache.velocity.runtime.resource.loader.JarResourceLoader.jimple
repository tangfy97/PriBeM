public class org.apache.velocity.runtime.resource.loader.JarResourceLoader extends org.apache.velocity.runtime.resource.loader.ResourceLoader
{
    private java.util.Map entryDirectory;
    private java.util.Map jarfiles;

    public void <init>()
    {
        java.util.HashMap $r1, $r2;
        org.apache.velocity.runtime.resource.loader.JarResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.JarResourceLoader;

        specialinvoke r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(559);

        r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: java.util.Map entryDirectory> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(89);

        r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: java.util.Map jarfiles> = $r2;

        return;
    }

    public void init(org.apache.commons.collections.ExtendedProperties)
    {
        java.util.Vector $r3, $r4, r14;
        java.lang.StringBuffer $r6, $r8, $r9;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r10, $r12;
        org.apache.commons.collections.ExtendedProperties r2;
        org.apache.velocity.runtime.resource.loader.JarResourceLoader r0;
        org.apache.velocity.runtime.log.Log $r1, $r5, $r7, $r13;
        java.lang.Object $r11;

        r0 := @this: org.apache.velocity.runtime.resource.loader.JarResourceLoader;

        r2 := @parameter0: org.apache.commons.collections.ExtendedProperties;

        $r1 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("JarResourceLoader : initialization starting.");

        $r3 = virtualinvoke r2.<org.apache.commons.collections.ExtendedProperties: java.util.Vector getVector(java.lang.String)>("path");

        r14 = $r3;

        staticinvoke <org.apache.velocity.util.StringUtils: java.util.List trimStrings(java.util.List)>($r3);

        if $r3 == null goto label1;

        $i3 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i3 != 0 goto label2;

     label1:
        $r4 = virtualinvoke r2.<org.apache.commons.collections.ExtendedProperties: java.util.Vector getVector(java.lang.String)>("resource.path");

        r14 = $r4;

        staticinvoke <org.apache.velocity.util.StringUtils: java.util.List trimStrings(java.util.List)>($r4);

        if $r4 == null goto label2;

        $i2 = virtualinvoke $r4.<java.util.Vector: int size()>();

        if $i2 <= 0 goto label2;

        $r13 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r13.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>("JarResourceLoader : you are using a deprecated configuration property for the JarResourceLoader -> \'<name>.resource.loader.resource.path\'. Please change to the conventional \'<name>.resource.loader.path\'.");

     label2:
        if r14 == null goto label4;

        $r7 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JarResourceLoader # of paths : ");

        $i0 = virtualinvoke r14.<java.util.Vector: int size()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r10);

        i4 = 0;

     label3:
        $i1 = virtualinvoke r14.<java.util.Vector: int size()>();

        if i4 >= $i1 goto label4;

        $r11 = virtualinvoke r14.<java.util.Vector: java.lang.Object get(int)>(i4);

        $r12 = (java.lang.String) $r11;

        specialinvoke r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: void loadJar(java.lang.String)>($r12);

        i4 = i4 + 1;

        goto label3;

     label4:
        $r5 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r5.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("JarResourceLoader : initialization complete.");

        return;
    }

    private void loadJar(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeServices $r3;
        java.lang.StringBuffer $r7, $r8, $r9, $r14, $r16, $r17, $r18;
        java.util.Map $r5;
        int $i0;
        java.lang.String $r6, $r19, r20;
        java.util.Hashtable $r4;
        boolean $z0, $z1;
        org.apache.velocity.runtime.resource.loader.JarHolder $r2;
        java.lang.RuntimeException $r11, $r13;
        org.apache.velocity.runtime.resource.loader.JarResourceLoader r0;
        org.apache.velocity.runtime.log.Log $r1, $r10, $r12, $r15;

        r0 := @this: org.apache.velocity.runtime.resource.loader.JarResourceLoader;

        r20 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z0 = virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r15 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JarResourceLoader : trying to load \"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r15.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r19);

     label1:
        if r20 != null goto label2;

        $r12 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r12.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>("JarResourceLoader : can not load JAR - JAR path is null");

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("JarResourceLoader : can not load JAR - JAR path is null");

        throw $r13;

     label2:
        $z1 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>("jar:");

        if $z1 != 0 goto label3;

        $r10 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r10.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>("JarResourceLoader : JAR path must start with jar: -> see java.net.JarURLConnection for information");

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("JarResourceLoader : JAR path must start with jar: -> see java.net.JarURLConnection for information");

        throw $r11;

     label3:
        $i0 = virtualinvoke r20.<java.lang.String: int indexOf(java.lang.String)>("!/");

        if $i0 >= 0 goto label4;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("!/");

        r20 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        specialinvoke r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: void closeJar(java.lang.String)>(r20);

        $r2 = new org.apache.velocity.runtime.resource.loader.JarHolder;

        $r3 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: org.apache.velocity.runtime.RuntimeServices rsvc>;

        specialinvoke $r2.<org.apache.velocity.runtime.resource.loader.JarHolder: void <init>(org.apache.velocity.runtime.RuntimeServices,java.lang.String)>($r3, r20);

        $r4 = virtualinvoke $r2.<org.apache.velocity.runtime.resource.loader.JarHolder: java.util.Hashtable getEntries()>();

        specialinvoke r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: void addEntries(java.util.Hashtable)>($r4);

        $r5 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: java.util.Map jarfiles>;

        $r6 = virtualinvoke $r2.<org.apache.velocity.runtime.resource.loader.JarHolder: java.lang.String getUrlPath()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r2);

        return;
    }

    private void closeJar(java.lang.String)
    {
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        org.apache.velocity.runtime.resource.loader.JarHolder r5;
        java.lang.String r1;
        org.apache.velocity.runtime.resource.loader.JarResourceLoader r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.JarResourceLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: java.util.Map jarfiles>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: java.util.Map jarfiles>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (org.apache.velocity.runtime.resource.loader.JarHolder) $r4;

        virtualinvoke r5.<org.apache.velocity.runtime.resource.loader.JarHolder: void close()>();

     label1:
        return;
    }

    private void addEntries(java.util.Hashtable)
    {
        java.util.Hashtable r1;
        org.apache.velocity.runtime.resource.loader.JarResourceLoader r0;
        java.util.Map $r2;

        r0 := @this: org.apache.velocity.runtime.resource.loader.JarResourceLoader;

        r1 := @parameter0: java.util.Hashtable;

        $r2 = r0.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: java.util.Map entryDirectory>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public java.io.InputStream getResourceStream(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException
    {
        java.util.Map $r15, $r21, $r23, $r24;
        boolean $z0, $z1, $z2, $z3;
        org.apache.velocity.runtime.resource.loader.JarHolder r26;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r9, $r11, $r12, $r17, $r18, $r19;
        int $i0;
        java.lang.String r0, $r1, $r7, $r13, $r20, r29, r30;
        org.apache.velocity.runtime.resource.loader.JarResourceLoader r8;
        org.apache.velocity.runtime.log.Log $r10;
        java.lang.Object $r22, $r25;
        org.apache.velocity.exception.ResourceNotFoundException $r14, $r16, $r28;
        java.io.InputStream $r27;

        r8 := @this: org.apache.velocity.runtime.resource.loader.JarResourceLoader;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r28 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r28.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>("Need to have a resource!");

        throw $r28;

     label1:
        $r1 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String normalizePath(java.lang.String)>(r0);

        r29 = $r1;

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JAR resource error : argument ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" contains .. and may be trying to access ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("content outside of template root.  Rejected.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = r8.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JarResourceLoader : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r13);

        $r14 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r14.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r14;

     label3:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 == 0 goto label4;

        r29 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

     label4:
        $r15 = r8.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: java.util.Map entryDirectory>;

        $z2 = interfaceinvoke $r15.<java.util.Map: boolean containsKey(java.lang.Object)>(r29);

        if $z2 == 0 goto label5;

        $r21 = r8.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: java.util.Map entryDirectory>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r29);

        r30 = (java.lang.String) $r22;

        $r23 = r8.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: java.util.Map jarfiles>;

        $z3 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>(r30);

        if $z3 == 0 goto label5;

        $r24 = r8.<org.apache.velocity.runtime.resource.loader.JarResourceLoader: java.util.Map jarfiles>;

        $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>(r30);

        r26 = (org.apache.velocity.runtime.resource.loader.JarHolder) $r25;

        $r27 = virtualinvoke r26.<org.apache.velocity.runtime.resource.loader.JarHolder: java.io.InputStream getResource(java.lang.String)>(r29);

        return $r27;

     label5:
        $r16 = new org.apache.velocity.exception.ResourceNotFoundException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JarResourceLoader Error: cannot find resource ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>($r20);

        throw $r16;
    }

    public boolean isSourceModified(org.apache.velocity.runtime.resource.Resource)
    {
        org.apache.velocity.runtime.resource.Resource r1;
        org.apache.velocity.runtime.resource.loader.JarResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.JarResourceLoader;

        r1 := @parameter0: org.apache.velocity.runtime.resource.Resource;

        return 1;
    }

    public long getLastModified(org.apache.velocity.runtime.resource.Resource)
    {
        org.apache.velocity.runtime.resource.Resource r1;
        org.apache.velocity.runtime.resource.loader.JarResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.JarResourceLoader;

        r1 := @parameter0: org.apache.velocity.runtime.resource.Resource;

        return 0L;
    }
}
