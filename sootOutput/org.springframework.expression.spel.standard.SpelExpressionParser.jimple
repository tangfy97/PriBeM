public class org.springframework.expression.spel.standard.SpelExpressionParser extends org.springframework.expression.common.TemplateAwareExpressionParser
{
    private final org.springframework.expression.spel.SpelParserConfiguration configuration;

    public void <init>()
    {
        org.springframework.expression.spel.standard.SpelExpressionParser r0;
        org.springframework.expression.spel.SpelParserConfiguration $r1;

        r0 := @this: org.springframework.expression.spel.standard.SpelExpressionParser;

        specialinvoke r0.<org.springframework.expression.common.TemplateAwareExpressionParser: void <init>()>();

        $r1 = new org.springframework.expression.spel.SpelParserConfiguration;

        specialinvoke $r1.<org.springframework.expression.spel.SpelParserConfiguration: void <init>(boolean,boolean)>(0, 0);

        r0.<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.spel.SpelParserConfiguration configuration> = $r1;

        return;
    }

    public void <init>(org.springframework.expression.spel.SpelParserConfiguration)
    {
        org.springframework.expression.spel.standard.SpelExpressionParser r0;
        org.springframework.expression.spel.SpelParserConfiguration r1;

        r0 := @this: org.springframework.expression.spel.standard.SpelExpressionParser;

        r1 := @parameter0: org.springframework.expression.spel.SpelParserConfiguration;

        specialinvoke r0.<org.springframework.expression.common.TemplateAwareExpressionParser: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "SpelParserConfiguration must not be null");

        r0.<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.spel.SpelParserConfiguration configuration> = r1;

        return;
    }

    protected org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String, org.springframework.expression.ParserContext) throws org.springframework.expression.ParseException
    {
        org.springframework.expression.spel.standard.SpelExpression $r5;
        org.springframework.expression.spel.standard.InternalSpelExpressionParser $r0;
        org.springframework.expression.ParserContext r4;
        org.springframework.expression.spel.standard.SpelExpressionParser r1;
        java.lang.String r3;
        org.springframework.expression.spel.SpelParserConfiguration $r2;

        r1 := @this: org.springframework.expression.spel.standard.SpelExpressionParser;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: org.springframework.expression.ParserContext;

        $r0 = new org.springframework.expression.spel.standard.InternalSpelExpressionParser;

        $r2 = r1.<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.spel.SpelParserConfiguration configuration>;

        specialinvoke $r0.<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void <init>(org.springframework.expression.spel.SpelParserConfiguration)>($r2);

        $r5 = virtualinvoke $r0.<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>(r3, r4);

        return $r5;
    }

    public org.springframework.expression.spel.standard.SpelExpression parseRaw(java.lang.String) throws org.springframework.expression.ParseException
    {
        org.springframework.expression.spel.standard.SpelExpressionParser r0;
        java.lang.String r1;
        org.springframework.expression.spel.standard.SpelExpression $r2;

        r0 := @this: org.springframework.expression.spel.standard.SpelExpressionParser;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>(r1, null);

        return $r2;
    }

    protected volatile org.springframework.expression.Expression doParseExpression(java.lang.String, org.springframework.expression.ParserContext) throws org.springframework.expression.ParseException
    {
        org.springframework.expression.spel.standard.SpelExpression $r3;
        org.springframework.expression.ParserContext r2;
        org.springframework.expression.spel.standard.SpelExpressionParser r0;
        java.lang.String r1;

        r0 := @this: org.springframework.expression.spel.standard.SpelExpressionParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.springframework.expression.ParserContext;

        $r3 = virtualinvoke r0.<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>(r1, r2);

        return $r3;
    }
}
