public class com.jhlabs.image.FadeFilter extends com.jhlabs.image.PointFilter
{
    private int width;
    private int height;
    private float angle;
    private float fadeStart;
    private float fadeWidth;
    private int sides;
    private boolean invert;
    private float m00;
    private float m01;
    private float m10;
    private float m11;

    public void <init>()
    {
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void <init>()>();

        r0.<com.jhlabs.image.FadeFilter: float angle> = 0.0F;

        r0.<com.jhlabs.image.FadeFilter: float fadeStart> = 1.0F;

        r0.<com.jhlabs.image.FadeFilter: float fadeWidth> = 10.0F;

        r0.<com.jhlabs.image.FadeFilter: float m00> = 1.0F;

        r0.<com.jhlabs.image.FadeFilter: float m01> = 0.0F;

        r0.<com.jhlabs.image.FadeFilter: float m10> = 0.0F;

        r0.<com.jhlabs.image.FadeFilter: float m11> = 1.0F;

        return;
    }

    public void setAngle(float)
    {
        com.jhlabs.image.FadeFilter r0;
        float f0, f1, f2, $f3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.jhlabs.image.FadeFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FadeFilter: float angle> = f0;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        f1 = (float) $d1;

        $d2 = (double) f0;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        f2 = (float) $d3;

        r0.<com.jhlabs.image.FadeFilter: float m00> = f1;

        r0.<com.jhlabs.image.FadeFilter: float m01> = f2;

        $f3 = neg f2;

        r0.<com.jhlabs.image.FadeFilter: float m10> = $f3;

        r0.<com.jhlabs.image.FadeFilter: float m11> = f1;

        return;
    }

    public float getAngle()
    {
        float $f0;
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        $f0 = r0.<com.jhlabs.image.FadeFilter: float angle>;

        return $f0;
    }

    public void setSides(int)
    {
        int i0;
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.FadeFilter: int sides> = i0;

        return;
    }

    public int getSides()
    {
        int $i0;
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        $i0 = r0.<com.jhlabs.image.FadeFilter: int sides>;

        return $i0;
    }

    public void setFadeStart(float)
    {
        float f0;
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FadeFilter: float fadeStart> = f0;

        return;
    }

    public float getFadeStart()
    {
        float $f0;
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        $f0 = r0.<com.jhlabs.image.FadeFilter: float fadeStart>;

        return $f0;
    }

    public void setFadeWidth(float)
    {
        float f0;
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FadeFilter: float fadeWidth> = f0;

        return;
    }

    public float getFadeWidth()
    {
        float $f0;
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        $f0 = r0.<com.jhlabs.image.FadeFilter: float fadeWidth>;

        return $f0;
    }

    public void setInvert(boolean)
    {
        com.jhlabs.image.FadeFilter r0;
        boolean z0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        z0 := @parameter0: boolean;

        r0.<com.jhlabs.image.FadeFilter: boolean invert> = z0;

        return;
    }

    public boolean getInvert()
    {
        com.jhlabs.image.FadeFilter r0;
        boolean $z0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        $z0 = r0.<com.jhlabs.image.FadeFilter: boolean invert>;

        return $z0;
    }

    public void setDimensions(int, int)
    {
        int i0, i1;
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.jhlabs.image.FadeFilter: int width> = i0;

        r0.<com.jhlabs.image.FadeFilter: int height> = i1;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void setDimensions(int,int)>(i0, i1);

        return;
    }

    public int filterRGB(int, int, int)
    {
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, $f13, $f14, $f15, f16, $f17, $f18, $f19, $f20, $f21, $f22;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, i10;
        double $d0, $d1;
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i5 := @parameter2: int;

        $f1 = r0.<com.jhlabs.image.FadeFilter: float m00>;

        $f0 = (float) i0;

        $f5 = $f1 * $f0;

        $f3 = r0.<com.jhlabs.image.FadeFilter: float m01>;

        $f2 = (float) i1;

        $f4 = $f3 * $f2;

        f16 = $f5 + $f4;

        $f7 = r0.<com.jhlabs.image.FadeFilter: float m10>;

        $f6 = (float) i0;

        $f11 = $f7 * $f6;

        $f9 = r0.<com.jhlabs.image.FadeFilter: float m11>;

        $f8 = (float) i1;

        $f10 = $f9 * $f8;

        f12 = $f11 + $f10;

        $i2 = r0.<com.jhlabs.image.FadeFilter: int sides>;

        if $i2 != 2 goto label1;

        $f14 = f16 * f16;

        $f13 = f12 * f12;

        $f15 = $f14 + $f13;

        $d0 = (double) $f15;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f16 = (float) $d1;

        goto label3;

     label1:
        $i3 = r0.<com.jhlabs.image.FadeFilter: int sides>;

        if $i3 != 3 goto label2;

        f16 = staticinvoke <com.jhlabs.image.ImageMath: float mod(float,float)>(f16, 16.0F);

        goto label3;

     label2:
        $i4 = r0.<com.jhlabs.image.FadeFilter: int sides>;

        if $i4 != 4 goto label3;

        f16 = virtualinvoke r0.<com.jhlabs.image.FadeFilter: float symmetry(float,float)>(f16, 16.0F);

     label3:
        $f17 = r0.<com.jhlabs.image.FadeFilter: float fadeStart>;

        $f18 = r0.<com.jhlabs.image.FadeFilter: float fadeStart>;

        $f19 = r0.<com.jhlabs.image.FadeFilter: float fadeWidth>;

        $f20 = $f18 + $f19;

        $f21 = staticinvoke <com.jhlabs.image.ImageMath: float smoothStep(float,float,float)>($f17, $f20, f16);

        $f22 = $f21 * 255.0F;

        $i9 = (int) $f22;

        i10 = $i9;

        $z0 = r0.<com.jhlabs.image.FadeFilter: boolean invert>;

        if $z0 == 0 goto label4;

        i10 = 255 - $i9;

     label4:
        $i7 = i10 << 24;

        $i6 = i5 & 16777215;

        $i8 = $i7 | $i6;

        return $i8;
    }

    public float symmetry(float, float)
    {
        com.jhlabs.image.FadeFilter r0;
        byte $b0;
        int $i1;
        float f0, $f1, $f2, $f3, $f4, f5;

        r0 := @this: com.jhlabs.image.FadeFilter;

        f5 := @parameter0: float;

        f0 := @parameter1: float;

        $f1 = 2.0F * f0;

        $f2 = staticinvoke <com.jhlabs.image.ImageMath: float mod(float,float)>(f5, $f1);

        $b0 = $f2 cmpl f0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $f3 = 2.0F * f0;

        $f4 = $f3 - $f2;

        return $f4;

     label1:
        return $f2;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.FadeFilter r0;

        r0 := @this: com.jhlabs.image.FadeFilter;

        return "Fade...";
    }
}
