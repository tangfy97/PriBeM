class org.eclipse.jetty.io.nio.SslConnection$SslBuffers extends java.lang.Object
{
    final org.eclipse.jetty.io.nio.NIOBuffer _in;
    final org.eclipse.jetty.io.nio.NIOBuffer _out;
    final org.eclipse.jetty.io.nio.NIOBuffer _unwrap;

    void <init>(int, int)
    {
        org.eclipse.jetty.io.nio.IndirectNIOBuffer $r1, $r2, $r3;
        org.eclipse.jetty.io.nio.SslConnection$SslBuffers r0;
        int i0, i1;

        r0 := @this: org.eclipse.jetty.io.nio.SslConnection$SslBuffers;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        specialinvoke $r1.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(int)>(i0);

        r0.<org.eclipse.jetty.io.nio.SslConnection$SslBuffers: org.eclipse.jetty.io.nio.NIOBuffer _in> = $r1;

        $r2 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        specialinvoke $r2.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(int)>(i0);

        r0.<org.eclipse.jetty.io.nio.SslConnection$SslBuffers: org.eclipse.jetty.io.nio.NIOBuffer _out> = $r2;

        $r3 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        specialinvoke $r3.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(int)>(i1);

        r0.<org.eclipse.jetty.io.nio.SslConnection$SslBuffers: org.eclipse.jetty.io.nio.NIOBuffer _unwrap> = $r3;

        return;
    }
}
