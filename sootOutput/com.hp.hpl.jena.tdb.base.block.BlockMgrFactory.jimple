public class com.hp.hpl.jena.tdb.base.block.BlockMgrFactory extends java.lang.Object
{
    public static boolean AddTracker;

    public void <init>()
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgrFactory r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.block.BlockMgrFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.tdb.base.block.BlockMgr tracker(com.hp.hpl.jena.tdb.base.block.BlockMgr)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        $z0 = r0 instanceof com.hp.hpl.jena.tdb.base.block.BlockMgrTracker;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrTracker: com.hp.hpl.jena.tdb.base.block.BlockMgr track(com.hp.hpl.jena.tdb.base.block.BlockMgr)>(r0);

        return $r1;
    }

    private static com.hp.hpl.jena.tdb.base.block.BlockMgr track(com.hp.hpl.jena.tdb.base.block.BlockMgr)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        $z0 = <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: boolean AddTracker>;

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr tracker(com.hp.hpl.jena.tdb.base.block.BlockMgr)>(r0);

        return $r1;
    }

    public static com.hp.hpl.jena.tdb.base.block.BlockMgr create(com.hp.hpl.jena.tdb.base.file.FileSet, java.lang.String, int, int, int)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r3, $r5;
        com.hp.hpl.jena.tdb.base.file.FileSet r0;
        int i0, i1, i2;
        java.lang.String r1, $r2, $r4;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.FileSet: boolean isMem()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.FileSet: java.lang.String filename(java.lang.String)>(r1);

        $r5 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr createMem(java.lang.String,int)>($r4, i0);

        return $r5;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.FileSet: java.lang.String filename(java.lang.String)>(r1);

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr createFile(java.lang.String,int,int,int)>($r2, i0, i1, i2);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.base.block.BlockMgr createMem(java.lang.String, int)
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem $r0;
        com.hp.hpl.jena.tdb.base.block.BlockMgrFreeChain $r3;
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r4;
        com.hp.hpl.jena.tdb.base.block.BlockMgrFileAccess $r2;
        int i0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: void <init>(java.lang.String,int)>(r1, i0);

        $r2 = new com.hp.hpl.jena.tdb.base.block.BlockMgrFileAccess;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.base.block.BlockMgrFileAccess: void <init>(com.hp.hpl.jena.tdb.base.file.BlockAccess,int)>($r0, i0);

        $r3 = new com.hp.hpl.jena.tdb.base.block.BlockMgrFreeChain;

        specialinvoke $r3.<com.hp.hpl.jena.tdb.base.block.BlockMgrFreeChain: void <init>(com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r2);

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr track(com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r3);

        return $r4;
    }

    public static com.hp.hpl.jena.tdb.base.block.BlockMgr createFile(java.lang.String, int, int, int)
    {
        com.hp.hpl.jena.tdb.base.block.FileMode $r1, $r8;
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r3, $r4;
        int[] $r0;
        int $i0, $i1, i2, i3, i4;
        java.lang.String r2, $r10;
        com.hp.hpl.jena.tdb.TDBException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;

        r2 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        i4 := @parameter3: int;

        $r0 = <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory$1: int[] $SwitchMap$com$hp$hpl$jena$tdb$base$block$FileMode>;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.sys.SystemTDB: com.hp.hpl.jena.tdb.base.block.FileMode fileMode()>();

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.block.FileMode: int ordinal()>();

        $i1 = $r0[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r4 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr createMMapFile(java.lang.String,int)>(r2, i2);

        return $r4;

     label2:
        $r3 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr createStdFile(java.lang.String,int,int,int)>(r2, i2, i3, i4);

        return $r3;

     label3:
        $r5 = new com.hp.hpl.jena.tdb.TDBException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown file mode: ");

        $r8 = staticinvoke <com.hp.hpl.jena.tdb.sys.SystemTDB: com.hp.hpl.jena.tdb.base.block.FileMode fileMode()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r10);

        throw $r5;
    }

    public static com.hp.hpl.jena.tdb.base.block.BlockMgr createMMapFile(java.lang.String, int)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r2, $r3;
        int i0;
        com.hp.hpl.jena.tdb.base.file.BlockAccessMapped $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new com.hp.hpl.jena.tdb.base.file.BlockAccessMapped;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMapped: void <init>(java.lang.String,int)>(r1, i0);

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr wrapFileAccess(com.hp.hpl.jena.tdb.base.file.BlockAccess,int)>($r0, i0);

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr track(com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r2);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.base.block.BlockMgr createStdFile(java.lang.String, int, int, int)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r2, $r4, $r5;
        int i0, i1, i2;
        java.lang.String r1, $r3;
        com.hp.hpl.jena.tdb.base.file.BlockAccessDirect $r0;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r0 = new com.hp.hpl.jena.tdb.base.file.BlockAccessDirect;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessDirect: void <init>(java.lang.String,int)>(r1, i0);

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr wrapFileAccess(com.hp.hpl.jena.tdb.base.file.BlockAccess,int)>($r0, i0);

        $r3 = staticinvoke <org.apache.jena.atlas.lib.FileOps: java.lang.String basename(java.lang.String)>(r1);

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrCache: com.hp.hpl.jena.tdb.base.block.BlockMgr create(java.lang.String,int,int,com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r3, i1, i2, $r2);

        $r5 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr track(com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r4);

        return $r5;
    }

    public static com.hp.hpl.jena.tdb.base.block.BlockMgr createStdFileNoCache(java.lang.String, int)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgrFileAccess $r2;
        int i0;
        java.lang.String r1;
        com.hp.hpl.jena.tdb.base.file.BlockAccessDirect $r0;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new com.hp.hpl.jena.tdb.base.file.BlockAccessDirect;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessDirect: void <init>(java.lang.String,int)>(r1, i0);

        $r2 = new com.hp.hpl.jena.tdb.base.block.BlockMgrFileAccess;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.base.block.BlockMgrFileAccess: void <init>(com.hp.hpl.jena.tdb.base.file.BlockAccess,int)>($r0, i0);

        return $r2;
    }

    private static com.hp.hpl.jena.tdb.base.block.BlockMgr wrapFileAccess(com.hp.hpl.jena.tdb.base.file.BlockAccess, int)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgrFreeChain $r2;
        com.hp.hpl.jena.tdb.base.block.BlockMgrFileAccess $r0;
        int i0;
        com.hp.hpl.jena.tdb.base.file.BlockAccess r1;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.file.BlockAccess;

        i0 := @parameter1: int;

        $r0 = new com.hp.hpl.jena.tdb.base.block.BlockMgrFileAccess;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.block.BlockMgrFileAccess: void <init>(com.hp.hpl.jena.tdb.base.file.BlockAccess,int)>(r1, i0);

        $r2 = new com.hp.hpl.jena.tdb.base.block.BlockMgrFreeChain;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.base.block.BlockMgrFreeChain: void <init>(com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r0);

        return $r2;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: boolean AddTracker> = 0;

        return;
    }
}
