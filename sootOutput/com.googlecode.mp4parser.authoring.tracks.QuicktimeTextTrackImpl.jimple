public class com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl extends com.googlecode.mp4parser.authoring.AbstractTrack
{
    com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData;
    com.coremedia.iso.boxes.SampleDescriptionBox sampleDescriptionBox;
    java.util.List subs;

    public java.util.List getSubs()
    {
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r0;
        java.util.List $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: java.util.List subs>;

        return $r1;
    }

    public void <init>()
    {
        java.util.Date $r6, $r8;
        com.coremedia.iso.boxes.SampleDescriptionBox $r3, $r5;
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r0;
        com.googlecode.mp4parser.boxes.apple.QuicktimeTextSampleEntry $r4;
        com.googlecode.mp4parser.authoring.TrackMetaData $r1, $r7, $r9, $r10;
        java.util.LinkedList $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        specialinvoke r0.<com.googlecode.mp4parser.authoring.AbstractTrack: void <init>()>();

        $r1 = new com.googlecode.mp4parser.authoring.TrackMetaData;

        specialinvoke $r1.<com.googlecode.mp4parser.authoring.TrackMetaData: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData> = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: java.util.List subs> = $r2;

        $r3 = new com.coremedia.iso.boxes.SampleDescriptionBox;

        specialinvoke $r3.<com.coremedia.iso.boxes.SampleDescriptionBox: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: com.coremedia.iso.boxes.SampleDescriptionBox sampleDescriptionBox> = $r3;

        $r4 = new com.googlecode.mp4parser.boxes.apple.QuicktimeTextSampleEntry;

        specialinvoke $r4.<com.googlecode.mp4parser.boxes.apple.QuicktimeTextSampleEntry: void <init>()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.boxes.apple.QuicktimeTextSampleEntry: void setDataReferenceIndex(int)>(1);

        $r5 = r0.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: com.coremedia.iso.boxes.SampleDescriptionBox sampleDescriptionBox>;

        virtualinvoke $r5.<com.coremedia.iso.boxes.SampleDescriptionBox: void addBox(com.coremedia.iso.boxes.Box)>($r4);

        $r7 = r0.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData>;

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>()>();

        virtualinvoke $r7.<com.googlecode.mp4parser.authoring.TrackMetaData: void setCreationTime(java.util.Date)>($r6);

        $r9 = r0.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData>;

        $r8 = new java.util.Date;

        specialinvoke $r8.<java.util.Date: void <init>()>();

        virtualinvoke $r9.<com.googlecode.mp4parser.authoring.TrackMetaData: void setModificationTime(java.util.Date)>($r8);

        $r10 = r0.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData>;

        virtualinvoke $r10.<com.googlecode.mp4parser.authoring.TrackMetaData: void setTimescale(long)>(1000L);

        return;
    }

    public java.util.List getSamples()
    {
        byte[] $r9, $r11, $r13, $r17;
        java.io.ByteArrayOutputStream $r24;
        java.lang.Error $r23, $r26;
        long $l0, l1, l5;
        java.nio.ByteBuffer $r14, $r18;
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r1;
        byte $b2, $b3;
        java.io.DataOutputStream $r25;
        int $i4, $i6, $i7;
        com.googlecode.mp4parser.authoring.SampleImpl $r22, $r27;
        java.lang.String $r8, $r10;
        java.util.LinkedList $r21;
        boolean $z0;
        java.util.Iterator $r3;
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line r5;
        java.io.IOException $r19;
        java.util.List $r2;
        java.lang.Object $r4;

        r1 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        $r21 = new java.util.LinkedList;

        specialinvoke $r21.<java.util.LinkedList: void <init>()>();

        l5 = 0L;

        $r2 = r1.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: java.util.List subs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label8;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line) $r4;

        $l0 = r5.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line: long 'from'>;

        l1 = $l0 - l5;

        $b2 = l1 cmp 0L;

        $i6 = (int) $b2;

        if $i6 <= 0 goto label2;

        $r22 = new com.googlecode.mp4parser.authoring.SampleImpl;

        $r17 = newarray (byte)[2];

        $r18 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r17);

        specialinvoke $r22.<com.googlecode.mp4parser.authoring.SampleImpl: void <init>(java.nio.ByteBuffer)>($r18);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r22);

        goto label3;

     label2:
        $b3 = l1 cmp 0L;

        $i7 = (int) $b3;

        if $i7 >= 0 goto label3;

        $r23 = new java.lang.Error;

        specialinvoke $r23.<java.lang.Error: void <init>(java.lang.String)>("Subtitle display times may not intersect");

        throw $r23;

     label3:
        $r24 = new java.io.ByteArrayOutputStream;

        specialinvoke $r24.<java.io.ByteArrayOutputStream: void <init>()>();

        $r25 = new java.io.DataOutputStream;

        specialinvoke $r25.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r24);

     label4:
        $r8 = r5.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line: java.lang.String text>;

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i4 = lengthof $r9;

        virtualinvoke $r25.<java.io.DataOutputStream: void writeShort(int)>($i4);

        $r10 = r5.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line: java.lang.String text>;

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r25.<java.io.DataOutputStream: void write(byte[])>($r11);

        virtualinvoke $r25.<java.io.DataOutputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

        $r26 = new java.lang.Error;

        specialinvoke $r26.<java.lang.Error: void <init>(java.lang.String)>("VM is broken. Does not support UTF-8");

        throw $r26;

     label7:
        $r27 = new com.googlecode.mp4parser.authoring.SampleImpl;

        $r13 = virtualinvoke $r24.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r14 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r13);

        specialinvoke $r27.<com.googlecode.mp4parser.authoring.SampleImpl: void <init>(java.nio.ByteBuffer)>($r14);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r27);

        l5 = r5.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line: long 'to'>;

     label8:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r21;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()
    {
        com.coremedia.iso.boxes.SampleDescriptionBox $r1;
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: com.coremedia.iso.boxes.SampleDescriptionBox sampleDescriptionBox>;

        return $r1;
    }

    public long[] getSampleDurations()
    {
        java.lang.Error $r14;
        long $l0, $l3, $l4, $l5, $l8, l9, l10;
        java.util.ArrayList $r13;
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r1;
        long[] r11;
        byte $b1, $b2;
        java.lang.Long $r5, $r7, r12;
        int $i6, $i7, i11, $i12, $i13;
        boolean $z0, $z1;
        java.util.Iterator $r3, $r8;
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line r10;
        java.util.List $r2;
        java.lang.Object $r4, $r9;

        r1 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        l9 = 0L;

        $r2 = r1.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: java.util.List subs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line) $r4;

        $l0 = r10.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line: long 'from'>;

        l10 = $l0 - l9;

        $b1 = l10 cmp 0L;

        $i12 = (int) $b1;

        if $i12 <= 0 goto label2;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l10);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label3;

     label2:
        $b2 = l10 cmp 0L;

        $i13 = (int) $b2;

        if $i13 >= 0 goto label3;

        $r14 = new java.lang.Error;

        specialinvoke $r14.<java.lang.Error: void <init>(java.lang.String)>("Subtitle display times may not intersect");

        throw $r14;

     label3:
        $l4 = r10.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line: long 'to'>;

        $l3 = r10.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line: long 'from'>;

        $l5 = $l4 - $l3;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r5);

        l9 = r10.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl$Line: long 'to'>;

     label4:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $i6 = interfaceinvoke $r13.<java.util.List: int size()>();

        r11 = newarray (long)[$i6];

        i11 = 0;

        $r8 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

        goto label6;

     label5:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.Long) $r9;

        $i7 = i11;

        i11 = i11 + 1;

        $l8 = virtualinvoke r12.<java.lang.Long: long longValue()>();

        r11[$i7] = $l8;

     label6:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label5;

        return r11;
    }

    public java.util.List getCompositionTimeEntries()
    {
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        return null;
    }

    public long[] getSyncSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        return null;
    }

    public java.util.List getSampleDependencies()
    {
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        return null;
    }

    public com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()
    {
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r0;
        com.googlecode.mp4parser.authoring.TrackMetaData $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData>;

        return $r1;
    }

    public java.lang.String getHandler()
    {
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        return "text";
    }

    public com.coremedia.iso.boxes.Box getMediaHeaderBox()
    {
        com.googlecode.mp4parser.boxes.apple.GenericMediaHeaderTextAtom $r2;
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom $r1;
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r3;
        com.googlecode.mp4parser.boxes.apple.GenericMediaHeaderAtom $r0;

        r3 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        $r0 = new com.googlecode.mp4parser.boxes.apple.GenericMediaHeaderAtom;

        specialinvoke $r0.<com.googlecode.mp4parser.boxes.apple.GenericMediaHeaderAtom: void <init>()>();

        $r1 = new com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        specialinvoke $r1.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: void <init>()>();

        virtualinvoke $r0.<com.googlecode.mp4parser.boxes.apple.GenericMediaHeaderAtom: void addBox(com.coremedia.iso.boxes.Box)>($r1);

        $r2 = new com.googlecode.mp4parser.boxes.apple.GenericMediaHeaderTextAtom;

        specialinvoke $r2.<com.googlecode.mp4parser.boxes.apple.GenericMediaHeaderTextAtom: void <init>()>();

        virtualinvoke $r0.<com.googlecode.mp4parser.boxes.apple.GenericMediaHeaderAtom: void addBox(com.coremedia.iso.boxes.Box)>($r2);

        return $r0;
    }

    public com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()
    {
        com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.QuicktimeTextTrackImpl;

        return null;
    }
}
