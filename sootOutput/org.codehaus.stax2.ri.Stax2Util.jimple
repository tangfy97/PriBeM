public final class org.codehaus.stax2.ri.Stax2Util extends java.lang.Object implements javax.xml.stream.XMLStreamConstants
{

    private void <init>()
    {
        org.codehaus.stax2.ri.Stax2Util r0;

        r0 := @this: org.codehaus.stax2.ri.Stax2Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String eventTypeDesc(int)
    {
        java.lang.StringBuffer $r0, $r1, $r2, $r3;
        int i0;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label09;
            case 4: goto label05;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label03;
            case 8: goto label04;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label10;
            case 12: goto label06;
            default: goto label12;
        };

     label01:
        return "START_ELEMENT";

     label02:
        return "END_ELEMENT";

     label03:
        return "START_DOCUMENT";

     label04:
        return "END_DOCUMENT";

     label05:
        return "CHARACTERS";

     label06:
        return "CDATA";

     label07:
        return "SPACE";

     label08:
        return "COMMENT";

     label09:
        return "PROCESSING_INSTRUCTION";

     label10:
        return "DTD";

     label11:
        return "ENTITY_REFERENCE";

     label12:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String trimSpaces(java.lang.String)
    {
        char $c1, $c2, $c4;
        int $i0, $i3, i5, i6, $i8, $i10;
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i5 = 0;

     label1:
        if i5 < $i0 goto label2;

        return null;

     label2:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $z0 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: boolean _isSpace(char)>($c1);

        if $z0 != 0 goto label3;

        goto label4;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        $i8 = (int) -1;

        i6 = $i0 + $i8;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $z1 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: boolean _isSpace(char)>($c2);

        if $z1 != 0 goto label7;

        if i5 != 0 goto label5;

        $r2 = r0;

        goto label6;

     label5:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i5);

     label6:
        return $r2;

     label7:
        $i10 = (int) -1;

        i6 = i6 + $i10;

        if i6 <= i5 goto label8;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $z2 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: boolean _isSpace(char)>($c4);

        if $z2 == 0 goto label8;

        goto label7;

     label8:
        $i3 = i6 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i5, $i3);

        return $r1;
    }

    private static final boolean _isSpace(char)
    {
        int $i1;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 > 32 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
