public class com.hp.hpl.jena.sparql.sse.builders.BuilderPath extends java.lang.Object
{
    protected java.util.Map dispatch;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildPath;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildNotOneOf;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildSeq;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildAlt;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildMod;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildFixedLength;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildDistinct;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildMulti;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildShortest;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildZeroOrMore1;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildZeroOrMoreN;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildZeroOrOne;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildOneOrMore1;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildOneOrMoreN;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildReverse;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildTriple;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildRev;

    public static com.hp.hpl.jena.sparql.path.Path buildPath(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath $r0;
        com.hp.hpl.jena.sparql.sse.Item r1;
        com.hp.hpl.jena.sparql.path.Path $r2;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r0 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: void <init>()>();

        $r2 = specialinvoke $r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.path.Path build(com.hp.hpl.jena.sparql.sse.Item)>(r1);

        return $r2;
    }

    public static com.hp.hpl.jena.sparql.core.TriplePath buildTriplePath(com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r1;
        com.hp.hpl.jena.sparql.core.TriplePath $r8;
        com.hp.hpl.jena.sparql.sse.Item $r0, $r2, $r4, $r6;
        com.hp.hpl.jena.graph.Node $r3, $r7;
        com.hp.hpl.jena.sparql.path.Path $r5;
        int $i0, $i1, $i2;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        $i0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 == 3 goto label1;

        $i1 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i1 == 4 goto label1;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemLocation,java.lang.String,com.hp.hpl.jena.sparql.sse.ItemList)>(r1, "Not a triple path", r1);

     label1:
        $i2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i2 != 4 goto label3;

        $r0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $z0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol(java.lang.String)>("path");

        if $z0 != 0 goto label2;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(r1, "Not a triple path");

     label2:
        r1 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.ItemList cdr()>();

     label3:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderNode: com.hp.hpl.jena.graph.Node buildNode(com.hp.hpl.jena.sparql.sse.Item)>($r2);

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(1);

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.path.Path buildPath(com.hp.hpl.jena.sparql.sse.Item)>($r4);

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(2);

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderNode: com.hp.hpl.jena.graph.Node buildNode(com.hp.hpl.jena.sparql.sse.Item)>($r6);

        $r8 = new com.hp.hpl.jena.sparql.core.TriplePath;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.core.TriplePath: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>($r3, $r5, $r7);

        return $r8;
    }

    private void <init>()
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$13 $r14;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$12 $r13;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$11 $r12;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$10 $r11;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$17 $r18;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$16 $r17;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$15 $r16;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$14 $r15;
        java.util.Map $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52;
        java.util.HashMap $r1;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$9 $r10;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$4 $r5;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$3 $r4;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$2 $r3;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$1 $r2;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$8 $r9;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$7 $r8;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$6 $r7;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$5 $r6;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderPath;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch> = $r1;

        $r2 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$1;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$1: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildPath> = $r2;

        $r3 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$2;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$2: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildNotOneOf> = $r3;

        $r4 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$3;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$3: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildSeq> = $r4;

        $r5 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$4;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$4: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildAlt> = $r5;

        $r6 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$5;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$5: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildMod> = $r6;

        $r7 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$6;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$6: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildFixedLength> = $r7;

        $r8 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$7;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$7: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildDistinct> = $r8;

        $r9 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$8;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$8: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildMulti> = $r9;

        $r10 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$9;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$9: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildShortest> = $r10;

        $r11 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$10;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$10: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildZeroOrMore1> = $r11;

        $r12 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$11;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$11: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildZeroOrMoreN> = $r12;

        $r13 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$12;

        specialinvoke $r13.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$12: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildZeroOrOne> = $r13;

        $r14 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$13;

        specialinvoke $r14.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$13: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildOneOrMore1> = $r14;

        $r15 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$14;

        specialinvoke $r15.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$14: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildOneOrMoreN> = $r15;

        $r16 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$15;

        specialinvoke $r16.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$15: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildReverse> = $r16;

        $r17 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$16;

        specialinvoke $r17.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$16: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildTriple> = $r17;

        $r18 = new com.hp.hpl.jena.sparql.sse.builders.BuilderPath$17;

        specialinvoke $r18.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$17: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderPath)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildRev> = $r18;

        $r20 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r19 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildPath>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path", $r19);

        $r22 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r21 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildSeq>;

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("seq", $r21);

        $r24 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r23 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildAlt>;

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("alt", $r23);

        $r26 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r25 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildMod>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mod", $r25);

        $r28 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r27 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildFixedLength>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pathN", $r27);

        $r30 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r29 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildDistinct>;

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("distinct", $r29);

        $r32 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r31 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildMulti>;

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("multi", $r31);

        $r34 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r33 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildShortest>;

        interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("shortest", $r33);

        $r36 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r35 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildZeroOrOne>;

        interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path?", $r35);

        $r38 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r37 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildZeroOrMore1>;

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path*", $r37);

        $r40 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r39 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildZeroOrMoreN>;

        interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pathN*", $r39);

        $r42 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r41 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildOneOrMore1>;

        interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path+", $r41);

        $r44 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r43 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildOneOrMoreN>;

        interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pathN+", $r43);

        $r46 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r45 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildReverse>;

        interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("reverse", $r45);

        $r48 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r47 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildRev>;

        interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rev", $r47);

        $r50 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r49 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildTriple>;

        interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("link", $r49);

        $r52 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r51 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build buildNotOneOf>;

        interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("notoneof", $r51);

        return;
    }

    private com.hp.hpl.jena.sparql.path.Path build(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.path.P_Link $r5;
        com.hp.hpl.jena.sparql.sse.ItemList $r2;
        com.hp.hpl.jena.sparql.sse.Item r0;
        com.hp.hpl.jena.graph.Node $r4, $r6;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath r1;
        com.hp.hpl.jena.sparql.path.Path $r3;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderPath;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isNode()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.graph.Node getNode()>();

        $z2 = virtualinvoke $r4.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z2 == 0 goto label1;

        $r5 = new com.hp.hpl.jena.sparql.path.P_Link;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.graph.Node getNode()>();

        specialinvoke $r5.<com.hp.hpl.jena.sparql.path.P_Link: void <init>(com.hp.hpl.jena.graph.Node)>($r6);

        return $r5;

     label1:
        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, "Attempt to build path from a plain node");

     label2:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol()>();

        if $z1 == 0 goto label3;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, "Attempt to build path from a bare symbol");

     label3:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r3 = specialinvoke r1.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.path.Path build(com.hp.hpl.jena.sparql.sse.ItemList)>($r2);

        return $r3;
    }

    private com.hp.hpl.jena.sparql.path.Path build(com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        com.hp.hpl.jena.sparql.sse.Item $r1;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath r3;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build $r4;
        com.hp.hpl.jena.sparql.path.Path $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r2, $r8;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderPath;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol()>();

        if $z0 != 0 goto label1;

        $r10 = specialinvoke r3.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.path.Path build(com.hp.hpl.jena.sparql.sse.Item)>($r1);

        return $r10;

     label1:
        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String getSymbol()>();

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build findBuild(java.lang.String)>($r2);

        if $r4 == null goto label2;

        $r9 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build: com.hp.hpl.jena.sparql.path.Path make(com.hp.hpl.jena.sparql.sse.ItemList)>(r0);

        return $r9;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized path operation: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>($r1, $r8);

        return null;
    }

    protected com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build findBuild(java.lang.String)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath r0;
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build $r9;
        java.util.Map $r1, $r7;
        java.lang.Object $r4, $r8;
        java.lang.String r5, r6;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderPath;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z1 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: java.util.Map dispatch>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r9 = (com.hp.hpl.jena.sparql.sse.builders.BuilderPath$Build) $r8;

        return $r9;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected com.hp.hpl.jena.sparql.path.Path build(com.hp.hpl.jena.sparql.sse.ItemList, int)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath r0;
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.sse.ItemList r1;
        int i0;
        com.hp.hpl.jena.sparql.sse.Item $r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderPath;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(i0);

        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.path.Path build(com.hp.hpl.jena.sparql.sse.Item)>($r2);

        return $r3;
    }

    static long modInt(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0;
        long $l0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = "_";

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String getSymbol()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return -1L;

     label1:
        $l0 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderNode: long buildLong(com.hp.hpl.jena.sparql.sse.Item)>(r0);

        return $l0;
    }

    static com.hp.hpl.jena.sparql.path.Path access$000(com.hp.hpl.jena.sparql.sse.builders.BuilderPath, com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderPath r0;
        com.hp.hpl.jena.sparql.sse.Item r1;
        com.hp.hpl.jena.sparql.path.Path $r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.builders.BuilderPath;

        r1 := @parameter1: com.hp.hpl.jena.sparql.sse.Item;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderPath: com.hp.hpl.jena.sparql.path.Path build(com.hp.hpl.jena.sparql.sse.Item)>(r1);

        return $r2;
    }
}
