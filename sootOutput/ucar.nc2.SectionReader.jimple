class ucar.nc2.SectionReader extends java.lang.Object implements ucar.nc2.ProxyReader
{
    private static org.slf4j.Logger log;
    private ucar.ma2.Section orgSection;
    private ucar.nc2.Variable orgClient;

    void <init>(ucar.nc2.Variable, ucar.ma2.Section) throws ucar.ma2.InvalidRangeException
    {
        java.util.List $r3;
        ucar.ma2.Section r2, $r4;
        ucar.nc2.SectionReader r0;
        ucar.nc2.Variable r1;
        boolean $z0;

        r0 := @this: ucar.nc2.SectionReader;

        r1 := @parameter0: ucar.nc2.Variable;

        r2 := @parameter1: ucar.ma2.Section;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.SectionReader: ucar.nc2.Variable orgClient> = r1;

        $z0 = virtualinvoke r2.<ucar.ma2.Section: boolean isImmutable()>();

        if $z0 == 0 goto label1;

        $r4 = r2;

        goto label2;

     label1:
        $r4 = new ucar.ma2.Section;

        $r3 = virtualinvoke r2.<ucar.ma2.Section: java.util.List getRanges()>();

        specialinvoke $r4.<ucar.ma2.Section: void <init>(java.util.List)>($r3);

     label2:
        r0.<ucar.nc2.SectionReader: ucar.ma2.Section orgSection> = $r4;

        return;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.ma2.Section $r1;
        java.lang.RuntimeException $r5;
        ucar.ma2.Array $r3;
        ucar.ma2.InvalidRangeException $r4;
        ucar.nc2.util.CancelTask r7;
        ucar.nc2.SectionReader r0;
        ucar.nc2.Variable $r2, r6;

        r0 := @this: ucar.nc2.SectionReader;

        r6 := @parameter0: ucar.nc2.Variable;

        r7 := @parameter1: ucar.nc2.util.CancelTask;

     label1:
        $r2 = r0.<ucar.nc2.SectionReader: ucar.nc2.Variable orgClient>;

        $r1 = r0.<ucar.nc2.SectionReader: ucar.ma2.Section orgSection>;

        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.ma2.Array _read(ucar.ma2.Section)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.ma2.Section, ucar.nc2.util.CancelTask) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r1, $r2, $r3;
        ucar.ma2.Array $r5;
        ucar.nc2.util.CancelTask r7;
        ucar.nc2.SectionReader r0;
        ucar.nc2.Variable $r4, r6;

        r0 := @this: ucar.nc2.SectionReader;

        r6 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: ucar.ma2.Section;

        r7 := @parameter2: ucar.nc2.util.CancelTask;

        $r2 = r0.<ucar.nc2.SectionReader: ucar.ma2.Section orgSection>;

        $r3 = virtualinvoke $r2.<ucar.ma2.Section: ucar.ma2.Section compose(ucar.ma2.Section)>(r1);

        $r4 = r0.<ucar.nc2.SectionReader: ucar.nc2.Variable orgClient>;

        $r5 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.ma2.Array _read(ucar.ma2.Section)>($r3);

        return $r5;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/SectionReader;");

        <ucar.nc2.SectionReader: org.slf4j.Logger log> = $r0;

        return;
    }
}
