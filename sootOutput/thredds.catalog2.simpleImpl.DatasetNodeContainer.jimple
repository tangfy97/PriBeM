class thredds.catalog2.simpleImpl.DatasetNodeContainer extends java.lang.Object
{
    private org.slf4j.Logger log;
    private java.util.List datasetNodeImplList;
    private java.util.List localIdList;
    private final thredds.catalog2.simpleImpl.DatasetNodeContainer rootContainer;
    private java.util.Map datasetNodeImplMapByGloballyUniqueId;
    private boolean isBuilt;

    void <init>(thredds.catalog2.simpleImpl.DatasetNodeContainer)
    {
        org.slf4j.Logger $r2;
        java.lang.Class $r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0, r3;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r3 := @parameter0: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r1);

        r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: org.slf4j.Logger log> = $r2;

        r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt> = 0;

        r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList> = null;

        r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeContainer rootContainer> = r3;

        return;
    }

    thredds.catalog2.simpleImpl.DatasetNodeContainer getRootContainer()
    {
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0, $r1, $r2;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeContainer rootContainer>;

        if $r1 == null goto label1;

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeContainer rootContainer>;

        return $r2;

     label1:
        return r0;
    }

    boolean isDatasetNodeIdInUseGlobally(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl $r2;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeImpl getDatasetNodeByGloballyUniqueId(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return 0;

     label1:
        return 1;
    }

    boolean addDatasetNodeByGloballyUniqueId(thredds.catalog2.simpleImpl.DatasetNodeImpl)
    {
        java.lang.IllegalStateException $r22, $r25;
        java.util.HashMap $r23;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r1, r10;
        java.util.Map $r4, $r5, $r7;
        java.lang.String $r2, $r6, $r8, $r13, $r16, $r21;
        boolean $z0, $z1, $z2;
        org.slf4j.Logger $r18;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0, $r3, $r24;
        java.lang.Object $r9;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r17, $r19, $r20;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r1 := @parameter0: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeContainer has been built.");

        throw $r25;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getId()>();

        if $r2 != null goto label3;

        return 0;

     label3:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeContainer rootContainer>;

        if $r3 == null goto label4;

        $r24 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeContainer rootContainer>;

        $z2 = virtualinvoke $r24.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean addDatasetNodeByGloballyUniqueId(thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r1);

        return $z2;

     label4:
        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.Map datasetNodeImplMapByGloballyUniqueId>;

        if $r4 != null goto label5;

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.Map datasetNodeImplMapByGloballyUniqueId> = $r23;

     label5:
        $r5 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.Map datasetNodeImplMapByGloballyUniqueId>;

        $r6 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getId()>();

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z1 == 0 goto label6;

        return 0;

     label6:
        $r7 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.Map datasetNodeImplMapByGloballyUniqueId>;

        $r8 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getId()>();

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r1);

        r10 = (thredds.catalog2.simpleImpl.DatasetNodeImpl) $r9;

        if r10 != null goto label7;

        return 1;

     label7:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DatasetNodeContainer in bad state [MapByGloballyUniqueId: containsKey(");

        $r13 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getId()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")==false then put()!=null].");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: org.slf4j.Logger log>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addDatasetNodeByGloballyUniqueId(): ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String)>($r21);

        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r22;
    }

    boolean removeDatasetNodeByGloballyUniqueId(java.lang.String)
    {
        java.lang.IllegalStateException $r8;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0, $r2, $r7;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r6;
        java.util.Map $r3, $r4;
        java.lang.Object $r5;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeContainer has been built.");

        throw $r8;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeContainer rootContainer>;

        if $r2 == null goto label3;

        $r7 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeContainer rootContainer>;

        $z1 = virtualinvoke $r7.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean removeDatasetNodeByGloballyUniqueId(java.lang.String)>(r1);

        return $z1;

     label3:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.Map datasetNodeImplMapByGloballyUniqueId>;

        if $r3 != null goto label4;

        return 0;

     label4:
        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.Map datasetNodeImplMapByGloballyUniqueId>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r6 = (thredds.catalog2.simpleImpl.DatasetNodeImpl) $r5;

        if r6 != null goto label5;

        return 0;

     label5:
        return 1;
    }

    boolean addDatasetNodeToLocalById(thredds.catalog2.simpleImpl.DatasetNodeImpl)
    {
        java.lang.IllegalStateException $r7;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;
        java.util.ArrayList $r6;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r1;
        java.util.List $r3, $r4;
        java.lang.String $r2, $r5;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r1 := @parameter0: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeContainer has been built.");

        throw $r7;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getId()>();

        if $r2 != null goto label3;

        return 0;

     label3:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        if $r3 != null goto label4;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList> = $r6;

     label4:
        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        $r5 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getId()>();

        $z1 = interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        return $z1;
    }

    boolean removeDatasetNodeFromLocalById(java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        java.util.List $r2, $r3;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeContainer has been built.");

        throw $r4;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        if $r2 != null goto label3;

        return 0;

     label3:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return $z1;
    }

    thredds.catalog2.simpleImpl.DatasetNodeImpl getDatasetNodeByGloballyUniqueId(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeContainer r1, $r2, $r7;
        thredds.catalog2.simpleImpl.DatasetNodeImpl $r6, $r8;
        java.util.Map $r3, $r4;
        java.lang.Object $r5;
        java.lang.String r0;

        r1 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeContainer rootContainer>;

        if $r2 == null goto label2;

        $r7 = r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeContainer rootContainer>;

        $r8 = virtualinvoke $r7.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeImpl getDatasetNodeByGloballyUniqueId(java.lang.String)>(r0);

        return $r8;

     label2:
        $r3 = r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.Map datasetNodeImplMapByGloballyUniqueId>;

        if $r3 != null goto label3;

        return null;

     label3:
        $r4 = r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.Map datasetNodeImplMapByGloballyUniqueId>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r6 = (thredds.catalog2.simpleImpl.DatasetNodeImpl) $r5;

        return $r6;
    }

    boolean isEmpty()
    {
        java.util.List $r1, $r2;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    int size()
    {
        java.util.List $r1, $r2;
        int $i0;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        return $i0;
    }

    void addDatasetNode(thredds.catalog2.simpleImpl.DatasetNodeImpl)
    {
        java.lang.IllegalStateException $r16, $r17;
        java.util.ArrayList $r11, $r15;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r1;
        java.lang.String $r2, $r7, $r10, $r14;
        boolean $z0, $z1, $z2;
        org.slf4j.Logger $r5;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;
        java.util.List $r3, $r12, $r13, $r18;
        java.lang.StringBuilder $r4, $r6, $r8, $r9;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r1 := @parameter0: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeContainer has been built.");

        throw $r17;

     label1:
        $r2 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getId()>();

        if $r2 == null goto label4;

        $z2 = virtualinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean addDatasetNodeByGloballyUniqueId(thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r1);

        if $z2 != 0 goto label2;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Globally unique DatasetNode ID is already being used.");

        throw $r16;

     label2:
        $r12 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        if $r12 != null goto label3;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList> = $r15;

     label3:
        $r13 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        $r14 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getId()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14);

     label4:
        $r18 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        if $r18 != null goto label5;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList> = $r11;

     label5:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        if $z1 != 0 goto label6;

        $r5 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: org.slf4j.Logger log>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addDatasetNode(): failed to add datasetNode name [");

        $r7 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String)>($r10);

     label6:
        return;
    }

    boolean removeDatasetNode(thredds.catalog2.simpleImpl.DatasetNodeImpl)
    {
        java.lang.IllegalStateException $r18, $r19;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r1;
        java.lang.String $r4, $r9, $r12, $r17;
        boolean $z0, $z1, $z2, $z3;
        org.slf4j.Logger $r14;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;
        java.util.List $r2, $r3, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13, $r15, $r16;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r1 := @parameter0: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeContainer has been built.");

        throw $r19;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        if $r2 != null goto label3;

        return 0;

     label3:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r4 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getId()>();

        if $r4 == null goto label5;

        $r5 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        if $r5 == null goto label5;

        $r6 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        $z2 = interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>($r4);

        if $z2 == 0 goto label5;

        $z3 = virtualinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean removeDatasetNodeByGloballyUniqueId(java.lang.String)>($r4);

        if $z3 != 0 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removal from DatasetNode by global ID inconsistent with DatasetNode removal [");

        $r9 = virtualinvoke r1.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: org.slf4j.Logger log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeDatasetNode(): ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>($r17);

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r18;

     label5:
        return 1;
    }

    java.util.List getDatasets()
    {
        java.lang.IllegalStateException $r6;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;
        java.util.ArrayList $r2;
        java.util.List $r1, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeCollection has escaped its Builder before being built.");

        throw $r6;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r4;
    }

    thredds.catalog2.DatasetNode getDatasetById(java.lang.String)
    {
        java.lang.IllegalStateException $r6;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;
        thredds.catalog2.simpleImpl.DatasetNodeImpl $r5;
        java.util.List $r2, $r3, $r4;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeCollection has escaped its Builder before being built.");

        throw $r6;

     label1:
        if r1 != null goto label2;

        return null;

     label2:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        if $r2 != null goto label3;

        return null;

     label3:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        if $r3 == null goto label4;

        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label4;

        $r5 = virtualinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeImpl getDatasetNodeByGloballyUniqueId(java.lang.String)>(r1);

        return $r5;

     label4:
        return null;
    }

    java.util.List getDatasetNodeBuilders()
    {
        java.lang.IllegalStateException $r6;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;
        java.util.ArrayList $r2;
        java.util.List $r1, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeContainer has been built.");

        throw $r6;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r4;
    }

    thredds.catalog2.builder.DatasetNodeBuilder getDatasetNodeBuilderById(java.lang.String)
    {
        java.lang.IllegalStateException $r6;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;
        thredds.catalog2.simpleImpl.DatasetNodeImpl $r5;
        java.util.List $r2, $r3, $r4;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeContainer has been built.");

        throw $r6;

     label1:
        if r1 != null goto label2;

        return null;

     label2:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        if $r2 != null goto label3;

        return null;

     label3:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        if $r3 == null goto label4;

        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List localIdList>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label4;

        $r5 = virtualinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeImpl getDatasetNodeByGloballyUniqueId(java.lang.String)>(r1);

        return $r5;

     label4:
        return null;
    }

    thredds.catalog2.builder.BuilderIssues getIssues()
    {
        java.util.Iterator $r4;
        thredds.catalog2.builder.BuilderIssues $r0, $r7;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r1;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r6;
        java.util.List $r2, $r3;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        $r0 = new thredds.catalog2.builder.BuilderIssues;

        specialinvoke $r0.<thredds.catalog2.builder.BuilderIssues: void <init>()>();

        $r2 = r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        if $r2 == null goto label2;

        $r3 = r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog2.simpleImpl.DatasetNodeImpl) $r5;

        $r7 = interfaceinvoke r6.<thredds.catalog2.builder.DatasetNodeBuilder: thredds.catalog2.builder.BuilderIssues getIssues()>();

        virtualinvoke $r0.<thredds.catalog2.builder.BuilderIssues: void addAllIssues(thredds.catalog2.builder.BuilderIssues)>($r7);

        goto label1;

     label2:
        return $r0;
    }

    void build() throws thredds.catalog2.builder.BuilderException
    {
        java.util.Iterator $r3;
        thredds.catalog2.simpleImpl.DatasetNodeContainer r0;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r5;
        java.util.List $r1, $r2;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeContainer;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        if $r1 == null goto label3;

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List datasetNodeImplList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (thredds.catalog2.simpleImpl.DatasetNodeImpl) $r4;

        interfaceinvoke r5.<thredds.catalog2.builder.DatasetNodeBuilder: thredds.catalog2.DatasetNode build()>();

        goto label2;

     label3:
        r0.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isBuilt> = 1;

        return;
    }
}
