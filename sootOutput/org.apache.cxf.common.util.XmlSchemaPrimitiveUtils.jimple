public final class org.apache.cxf.common.util.XmlSchemaPrimitiveUtils extends java.lang.Object
{
    private static final java.lang.String SCHEMA_NS_PREFIX;
    private static final java.util.Map XML_SCHEMA_PRIMITIVE_MAP;

    private void <init>()
    {
        org.apache.cxf.common.util.XmlSchemaPrimitiveUtils r0;

        r0 := @this: org.apache.cxf.common.util.XmlSchemaPrimitiveUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void initializeMap()
    {
        java.lang.Class[] $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r13, $r14;
        java.lang.Class $r1, $r3, $r5, $r7, $r9, $r11;

        $r0 = newarray (java.lang.Class)[2];

        $r0[0] = class "Ljava/lang/Integer;";

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        $r0[1] = $r1;

        staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: void registerPrimitiveClasses(java.lang.String,java.lang.Class[])>("int", $r0);

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Ljava/lang/Byte;";

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        $r2[1] = $r3;

        staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: void registerPrimitiveClasses(java.lang.String,java.lang.Class[])>("byte", $r2);

        $r4 = newarray (java.lang.Class)[2];

        $r4[0] = class "Ljava/lang/Boolean;";

        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r4[1] = $r5;

        staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: void registerPrimitiveClasses(java.lang.String,java.lang.Class[])>("boolean", $r4);

        $r6 = newarray (java.lang.Class)[2];

        $r6[0] = class "Ljava/lang/Long;";

        $r7 = <java.lang.Long: java.lang.Class TYPE>;

        $r6[1] = $r7;

        staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: void registerPrimitiveClasses(java.lang.String,java.lang.Class[])>("long", $r6);

        $r8 = newarray (java.lang.Class)[2];

        $r8[0] = class "Ljava/lang/Float;";

        $r9 = <java.lang.Float: java.lang.Class TYPE>;

        $r8[1] = $r9;

        staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: void registerPrimitiveClasses(java.lang.String,java.lang.Class[])>("float", $r8);

        $r10 = newarray (java.lang.Class)[2];

        $r10[0] = class "Ljava/lang/Double;";

        $r11 = <java.lang.Double: java.lang.Class TYPE>;

        $r10[1] = $r11;

        staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: void registerPrimitiveClasses(java.lang.String,java.lang.Class[])>("double", $r10);

        $r12 = newarray (java.lang.Class)[1];

        $r12[0] = class "Ljava/lang/String;";

        staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: void registerPrimitiveClasses(java.lang.String,java.lang.Class[])>("string", $r12);

        $r13 = newarray (java.lang.Class)[4];

        $r13[0] = class "Ljava/sql/Date;";

        $r13[1] = class "Ljava/util/Date;";

        $r13[2] = class "Ljava/util/Calendar;";

        $r13[3] = class "Ljava/sql/Timestamp;";

        staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: void registerPrimitiveClasses(java.lang.String,java.lang.Class[])>("dateTime", $r13);

        $r14 = newarray (java.lang.Class)[1];

        $r14[0] = class "Ljava/sql/Time;";

        staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: void registerPrimitiveClasses(java.lang.String,java.lang.Class[])>("time", $r14);

        return;
    }

    private static transient void registerPrimitiveClasses(java.lang.String, java.lang.Class[])
    {
        java.util.Map $r3;
        int i0, i1;
        java.lang.Class[] r0;
        java.lang.Class r1;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Class[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r1 = r0[i1];

        $r3 = <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: java.util.Map XML_SCHEMA_PRIMITIVE_MAP>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static java.lang.String getSchemaRepresentation(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)>(r0, "xs");

        return $r1;
    }

    public static java.lang.String getSchemaRepresentation(java.lang.Class, java.lang.String)
    {
        java.util.Map $r1;
        java.lang.Class r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;
        java.lang.String r3, r5, $r9;

        r0 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.String;

        $r1 = <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: java.util.Map XML_SCHEMA_PRIMITIVE_MAP>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.String) $r2;

        if r3 != null goto label1;

        $r9 = r3;

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r9;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: java.lang.String SCHEMA_NS_PREFIX> = "xs";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: java.util.Map XML_SCHEMA_PRIMITIVE_MAP> = $r0;

        staticinvoke <org.apache.cxf.common.util.XmlSchemaPrimitiveUtils: void initializeMap()>();

        return;
    }
}
