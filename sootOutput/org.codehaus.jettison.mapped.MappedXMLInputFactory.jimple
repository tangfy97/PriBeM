public class org.codehaus.jettison.mapped.MappedXMLInputFactory extends org.codehaus.jettison.AbstractXMLInputFactory
{
    private org.codehaus.jettison.mapped.MappedNamespaceConvention convention;

    public void <init>(java.util.Map)
    {
        org.codehaus.jettison.mapped.MappedXMLInputFactory r0;
        org.codehaus.jettison.mapped.Configuration $r1;
        java.util.Map r2;

        r0 := @this: org.codehaus.jettison.mapped.MappedXMLInputFactory;

        r2 := @parameter0: java.util.Map;

        $r1 = new org.codehaus.jettison.mapped.Configuration;

        specialinvoke $r1.<org.codehaus.jettison.mapped.Configuration: void <init>(java.util.Map)>(r2);

        specialinvoke r0.<org.codehaus.jettison.mapped.MappedXMLInputFactory: void <init>(org.codehaus.jettison.mapped.Configuration)>($r1);

        return;
    }

    public void <init>(org.codehaus.jettison.mapped.Configuration)
    {
        org.codehaus.jettison.mapped.MappedNamespaceConvention $r1;
        org.codehaus.jettison.mapped.MappedXMLInputFactory r0;
        org.codehaus.jettison.mapped.Configuration r2;

        r0 := @this: org.codehaus.jettison.mapped.MappedXMLInputFactory;

        r2 := @parameter0: org.codehaus.jettison.mapped.Configuration;

        specialinvoke r0.<org.codehaus.jettison.AbstractXMLInputFactory: void <init>()>();

        $r1 = new org.codehaus.jettison.mapped.MappedNamespaceConvention;

        specialinvoke $r1.<org.codehaus.jettison.mapped.MappedNamespaceConvention: void <init>(org.codehaus.jettison.mapped.Configuration)>(r2);

        r0.<org.codehaus.jettison.mapped.MappedXMLInputFactory: org.codehaus.jettison.mapped.MappedNamespaceConvention convention> = $r1;

        return;
    }

    public javax.xml.stream.XMLStreamReader createXMLStreamReader(org.codehaus.jettison.json.JSONTokener) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.json.JSONException $r5;
        javax.xml.stream.XMLStreamException $r6;
        org.codehaus.jettison.json.JSONTokener r1;
        org.codehaus.jettison.mapped.MappedNamespaceConvention $r4;
        org.codehaus.jettison.json.JSONObject $r0;
        org.codehaus.jettison.mapped.MappedXMLInputFactory r3;
        org.codehaus.jettison.mapped.MappedXMLStreamReader $r2;

        r3 := @this: org.codehaus.jettison.mapped.MappedXMLInputFactory;

        r1 := @parameter0: org.codehaus.jettison.json.JSONTokener;

     label1:
        $r0 = new org.codehaus.jettison.json.JSONObject;

        specialinvoke $r0.<org.codehaus.jettison.json.JSONObject: void <init>(org.codehaus.jettison.json.JSONTokener)>(r1);

        $r2 = new org.codehaus.jettison.mapped.MappedXMLStreamReader;

        $r4 = r3.<org.codehaus.jettison.mapped.MappedXMLInputFactory: org.codehaus.jettison.mapped.MappedNamespaceConvention convention>;

        specialinvoke $r2.<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>($r0, $r4);

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        $r6 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r6.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch org.codehaus.jettison.json.JSONException from label1 to label2 with label3;
    }
}
