public class org.apache.pdfbox.util.MetaUtil extends java.lang.Object
{
    private static final org.apache.commons.logging.Log LOG;
    static final java.lang.String SUN_TIFF_FORMAT;
    static final java.lang.String JPEG_NATIVE_FORMAT;
    static final java.lang.String STANDARD_METADATA_FORMAT;

    public void <init>()
    {
        org.apache.pdfbox.util.MetaUtil r0;

        r0 := @this: org.apache.pdfbox.util.MetaUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void debugLogMetadata(javax.imageio.metadata.IIOMetadata, java.lang.String)
    {
        javax.xml.transform.Transformer $r8;
        javax.xml.transform.dom.DOMSource $r9;
        javax.xml.transform.TransformerException $r15;
        javax.xml.transform.stream.StreamResult $r6;
        javax.imageio.metadata.IIOMetadata r1;
        javax.imageio.metadata.IIOMetadataNode r4;
        org.w3c.dom.Node $r3;
        java.lang.String r2, $r14;
        boolean $z0;
        java.io.StringWriter $r5;
        java.lang.IllegalArgumentException $r17;
        org.apache.commons.logging.Log $r0, $r11, $r16, $r18;
        java.lang.StringBuilder $r10, $r12, $r13;
        javax.xml.transform.TransformerFactory $r7;

        r1 := @parameter0: javax.imageio.metadata.IIOMetadata;

        r2 := @parameter1: java.lang.String;

        $r0 = <org.apache.pdfbox.util.MetaUtil: org.apache.commons.logging.Log LOG>;

        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<javax.imageio.metadata.IIOMetadata: org.w3c.dom.Node getAsTree(java.lang.String)>(r2);

        r4 = (javax.imageio.metadata.IIOMetadataNode) $r3;

     label2:
        $r5 = new java.io.StringWriter;

        specialinvoke $r5.<java.io.StringWriter: void <init>()>();

        $r6 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r6.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r5);

        $r7 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r8 = virtualinvoke $r7.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r8.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        virtualinvoke $r8.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("{http://xml.apache.org/xslt}indent-amount", "2");

        $r9 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r9.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r4);

        virtualinvoke $r8.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r9, $r6);

        $r11 = <org.apache.pdfbox.util.MetaUtil: org.apache.commons.logging.Log LOG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r14);

     label3:
        goto label6;

     label4:
        $r17 := @caughtexception;

        $r18 = <org.apache.pdfbox.util.MetaUtil: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r18.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r17, $r17);

        goto label6;

     label5:
        $r15 := @caughtexception;

        $r16 = <org.apache.pdfbox.util.MetaUtil: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r15, $r15);

     label6:
        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
        catch javax.xml.transform.TransformerException from label2 to label3 with label5;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        <org.apache.pdfbox.util.MetaUtil: java.lang.String STANDARD_METADATA_FORMAT> = "javax_imageio_1.0";

        <org.apache.pdfbox.util.MetaUtil: java.lang.String JPEG_NATIVE_FORMAT> = "javax_imageio_jpeg_image_1.0";

        <org.apache.pdfbox.util.MetaUtil: java.lang.String SUN_TIFF_FORMAT> = "com_sun_media_imageio_plugins_tiff_image_1.0";

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/util/TIFFUtil;");

        <org.apache.pdfbox.util.MetaUtil: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
