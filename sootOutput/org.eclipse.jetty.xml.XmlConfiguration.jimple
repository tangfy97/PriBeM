public class org.eclipse.jetty.xml.XmlConfiguration extends java.lang.Object
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private static final java.lang.Class[] __primitives;
    private static final java.lang.Class[] __primitiveHolders;
    private static final java.lang.Class[] __supportedCollections;
    private static final java.lang.Iterable __factoryLoader;
    private static final org.eclipse.jetty.xml.XmlParser __parser;
    private java.net.URL _url;
    private java.lang.String _dtd;
    private org.eclipse.jetty.xml.ConfigurationProcessor _processor;
    private final java.util.Map _idMap;
    private final java.util.Map _propertyMap;

    private static synchronized org.eclipse.jetty.xml.XmlParser initParser()
    {
        org.eclipse.jetty.xml.XmlParser $r0;
        java.net.URL $r1, $r2;

        $r0 = new org.eclipse.jetty.xml.XmlParser;

        specialinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void <init>()>();

        $r1 = staticinvoke <org.eclipse.jetty.util.Loader: java.net.URL getResource(java.lang.Class,java.lang.String,boolean)>(class "Lorg/eclipse/jetty/xml/XmlConfiguration;", "org/eclipse/jetty/xml/configure_6_0.dtd", 1);

        $r2 = staticinvoke <org.eclipse.jetty.util.Loader: java.net.URL getResource(java.lang.Class,java.lang.String,boolean)>(class "Lorg/eclipse/jetty/xml/XmlConfiguration;", "org/eclipse/jetty/xml/configure_7_6.dtd", 1);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("configure.dtd", $r2);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("configure_1_0.dtd", $r1);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("configure_1_1.dtd", $r1);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("configure_1_2.dtd", $r1);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("configure_1_3.dtd", $r1);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("configure_6_0.dtd", $r1);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("configure_7_6.dtd", $r2);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://jetty.mortbay.org/configure.dtd", $r2);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://jetty.eclipse.org/configure.dtd", $r2);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("http://www.eclipse.org/jetty/configure.dtd", $r2);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("-//Mort Bay Consulting//DTD Configure//EN", $r2);

        virtualinvoke $r0.<org.eclipse.jetty.xml.XmlParser: void redirectEntity(java.lang.String,java.net.URL)>("-//Jetty//Configure//EN", $r2);

        return $r0;
    }

    public void <init>(java.net.URL) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.lang.Throwable $r10;
        java.net.URL r4;
        java.util.HashMap $r1, $r2;
        org.eclipse.jetty.xml.XmlParser $r3, $r5, $r8;
        org.eclipse.jetty.xml.XmlParser$Node $r7;
        java.lang.String $r6, $r9;
        org.eclipse.jetty.xml.XmlConfiguration r0;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration;

        r4 := @parameter0: java.net.URL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _idMap> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _propertyMap> = $r2;

        $r3 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser __parser>;

        entermonitor $r3;

     label1:
        r0.<org.eclipse.jetty.xml.XmlConfiguration: java.net.URL _url> = r4;

        $r5 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser __parser>;

        $r6 = virtualinvoke r4.<java.net.URL: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.xml.XmlParser$Node parse(java.lang.String)>($r6);

        specialinvoke r0.<org.eclipse.jetty.xml.XmlConfiguration: void setConfig(org.eclipse.jetty.xml.XmlParser$Node)>($r7);

        $r8 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser __parser>;

        $r9 = virtualinvoke $r8.<org.eclipse.jetty.xml.XmlParser: java.lang.String getDTD()>();

        r0.<org.eclipse.jetty.xml.XmlConfiguration: java.lang.String _dtd> = $r9;

        exitmonitor $r3;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r10;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void <init>(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.lang.Throwable $r14;
        java.util.HashMap $r1, $r2;
        org.eclipse.jetty.xml.XmlParser $r9, $r10, $r12;
        org.eclipse.jetty.xml.XmlParser$Node $r11;
        java.lang.String $r6, $r13, r15;
        org.eclipse.jetty.xml.XmlConfiguration r0;
        org.xml.sax.InputSource $r7;
        java.io.StringReader $r8;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration;

        r15 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _idMap> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _propertyMap> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\"1.0\"  encoding=\"ISO-8859-1\"?>\n<!DOCTYPE Configure PUBLIC \"-//Mort Bay Consulting//DTD Configure 1.2//EN\" \"http://jetty.eclipse.org/configure_1_2.dtd\">");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new org.xml.sax.InputSource;

        $r8 = new java.io.StringReader;

        specialinvoke $r8.<java.io.StringReader: void <init>(java.lang.String)>($r6);

        specialinvoke $r7.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r8);

        $r9 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser __parser>;

        entermonitor $r9;

     label1:
        $r10 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser __parser>;

        $r11 = virtualinvoke $r10.<org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.xml.XmlParser$Node parse(org.xml.sax.InputSource)>($r7);

        specialinvoke r0.<org.eclipse.jetty.xml.XmlConfiguration: void setConfig(org.eclipse.jetty.xml.XmlParser$Node)>($r11);

        $r12 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser __parser>;

        $r13 = virtualinvoke $r12.<org.eclipse.jetty.xml.XmlParser: java.lang.String getDTD()>();

        r0.<org.eclipse.jetty.xml.XmlConfiguration: java.lang.String _dtd> = $r13;

        exitmonitor $r9;

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        exitmonitor $r9;

     label4:
        throw $r14;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void <init>(java.io.InputStream) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.lang.Throwable $r10;
        org.xml.sax.InputSource $r3;
        java.util.HashMap $r1, $r2;
        org.eclipse.jetty.xml.XmlParser $r5, $r6, $r8;
        org.eclipse.jetty.xml.XmlParser$Node $r7;
        java.lang.String $r9;
        org.eclipse.jetty.xml.XmlConfiguration r0;
        java.io.InputStream r4;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration;

        r4 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _idMap> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _propertyMap> = $r2;

        $r3 = new org.xml.sax.InputSource;

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r4);

        $r5 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser __parser>;

        entermonitor $r5;

     label1:
        $r6 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser __parser>;

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.xml.XmlParser: org.eclipse.jetty.xml.XmlParser$Node parse(org.xml.sax.InputSource)>($r3);

        specialinvoke r0.<org.eclipse.jetty.xml.XmlConfiguration: void setConfig(org.eclipse.jetty.xml.XmlParser$Node)>($r7);

        $r8 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser __parser>;

        $r9 = virtualinvoke $r8.<org.eclipse.jetty.xml.XmlParser: java.lang.String getDTD()>();

        r0.<org.eclipse.jetty.xml.XmlConfiguration: java.lang.String _dtd> = $r9;

        exitmonitor $r5;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        exitmonitor $r5;

     label4:
        throw $r10;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void setConfig(org.eclipse.jetty.xml.XmlParser$Node)
    {
        java.lang.IllegalStateException $r18;
        java.net.URL $r16;
        java.util.Map $r14, $r15;
        org.eclipse.jetty.xml.XmlConfiguration r12;
        java.lang.reflect.Method $r29;
        boolean $z0, $z1;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration $r36;
        java.lang.Exception $r37;
        java.lang.StringBuilder $r5, $r6, $r8, $r19, $r20, $r22, $r23, $r24;
        org.eclipse.jetty.xml.ConfigurationProcessor $r13, $r17, $r34, $r35;
        java.lang.Object[] $r30;
        java.lang.Iterable $r3, $r10;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        java.lang.String $r1, $r2, $r7, $r9, $r21, $r25, $r31, $r32;
        java.util.Iterator $r11;
        java.lang.Class[] $r28;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object $r26, $r33;
        java.lang.Class $r27;
        org.eclipse.jetty.util.log.Logger $r38;

        r12 := @this: org.eclipse.jetty.xml.XmlConfiguration;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = "Configure";

        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label01;

        $r36 = new org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        specialinvoke $r36.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void <init>(org.eclipse.jetty.xml.XmlConfiguration$1)>(null);

        r12.<org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.ConfigurationProcessor _processor> = $r36;

        goto label10;

     label01:
        $r3 = <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Iterable __factoryLoader>;

        if $r3 == null goto label09;

        $r10 = <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Iterable __factoryLoader>;

        $r11 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r26 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label03:
        $r27 = virtualinvoke $r26.<java.lang.Object: java.lang.Class getClass()>();

        $r28 = newarray (java.lang.Class)[2];

        $r28[0] = class "Ljava/lang/String;";

        $r28[1] = class "Ljava/lang/String;";

        $r29 = virtualinvoke $r27.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getConfigurationProcessor", $r28);

        $r30 = newarray (java.lang.Object)[2];

        $r31 = r12.<org.eclipse.jetty.xml.XmlConfiguration: java.lang.String _dtd>;

        $r30[0] = $r31;

        $r32 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $r30[1] = $r32;

        $r33 = virtualinvoke $r29.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r26, $r30);

        $r34 = (org.eclipse.jetty.xml.ConfigurationProcessor) $r33;

        r12.<org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.ConfigurationProcessor _processor> = $r34;

     label04:
        goto label06;

     label05:
        $r37 := @caughtexception;

        $r38 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r38.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r37);

     label06:
        $r35 = r12.<org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.ConfigurationProcessor _processor>;

        if $r35 == null goto label07;

        goto label08;

     label07:
        goto label02;

     label08:
        $r13 = r12.<org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.ConfigurationProcessor _processor>;

        if $r13 != null goto label10;

        $r18 = new java.lang.IllegalStateException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown configuration type: ");

        $r21 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw $r18;

     label09:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown XML tag:");

        $r7 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label10:
        $r17 = r12.<org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.ConfigurationProcessor _processor>;

        $r16 = r12.<org.eclipse.jetty.xml.XmlConfiguration: java.net.URL _url>;

        $r15 = r12.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _idMap>;

        $r14 = r12.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _propertyMap>;

        interfaceinvoke $r17.<org.eclipse.jetty.xml.ConfigurationProcessor: void init(java.net.URL,org.eclipse.jetty.xml.XmlParser$Node,java.util.Map,java.util.Map)>($r16, r0, $r15, $r14);

        return;

        catch java.lang.Exception from label03 to label04 with label05;
    }

    public java.util.Map getIdMap()
    {
        org.eclipse.jetty.xml.XmlConfiguration r0;
        java.util.Map $r1;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration;

        $r1 = r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _idMap>;

        return $r1;
    }

    public void setIdMap(java.util.Map)
    {
        java.util.Map $r1, r2, $r3;
        org.eclipse.jetty.xml.XmlConfiguration r0;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration;

        r2 := @parameter0: java.util.Map;

        $r1 = r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r3 = r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>(r2);

        return;
    }

    public void setProperties(java.util.Map)
    {
        java.util.Map $r1, r2, $r3;
        org.eclipse.jetty.xml.XmlConfiguration r0;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration;

        r2 := @parameter0: java.util.Map;

        $r1 = r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _propertyMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r3 = r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _propertyMap>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>(r2);

        return;
    }

    public java.util.Map getProperties()
    {
        org.eclipse.jetty.xml.XmlConfiguration r0;
        java.util.Map $r1;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration;

        $r1 = r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map _propertyMap>;

        return $r1;
    }

    public java.lang.Object configure(java.lang.Object) throws java.lang.Exception
    {
        org.eclipse.jetty.xml.ConfigurationProcessor $r2;
        java.lang.Object r1, $r3;
        org.eclipse.jetty.xml.XmlConfiguration r0;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.ConfigurationProcessor _processor>;

        $r3 = interfaceinvoke $r2.<org.eclipse.jetty.xml.ConfigurationProcessor: java.lang.Object configure(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object configure() throws java.lang.Exception
    {
        org.eclipse.jetty.xml.ConfigurationProcessor $r1;
        java.lang.Object $r2;
        org.eclipse.jetty.xml.XmlConfiguration r0;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration;

        $r1 = r0.<org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.ConfigurationProcessor _processor>;

        $r2 = interfaceinvoke $r1.<org.eclipse.jetty.xml.ConfigurationProcessor: java.lang.Object configure()>();

        return $r2;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.Throwable r4;
        java.lang.Error $r5, $r6;
        java.lang.String[] r2;
        java.lang.RuntimeException $r8;
        java.util.concurrent.atomic.AtomicReference $r0;
        java.lang.Exception $r7;
        org.eclipse.jetty.xml.XmlConfiguration$1 $r1;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2;

        r2 := @parameter0: java.lang.String[];

        $r0 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        $r1 = new org.eclipse.jetty.xml.XmlConfiguration$1;

        specialinvoke $r1.<org.eclipse.jetty.xml.XmlConfiguration$1: void <init>(java.lang.String[],java.util.concurrent.atomic.AtomicReference)>(r2, $r0);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);

        $r3 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r4 = (java.lang.Throwable) $r3;

        if r4 == null goto label4;

        $z0 = r4 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label1;

        $r8 = (java.lang.RuntimeException) r4;

        throw $r8;

     label1:
        $z1 = r4 instanceof java.lang.Exception;

        if $z1 == 0 goto label2;

        $r7 = (java.lang.Exception) r4;

        throw $r7;

     label2:
        $z2 = r4 instanceof java.lang.Error;

        if $z2 == 0 goto label3;

        $r6 = (java.lang.Error) r4;

        throw $r6;

     label3:
        $r5 = new java.lang.Error;

        specialinvoke $r5.<java.lang.Error: void <init>(java.lang.Throwable)>(r4);

        throw $r5;

     label4:
        return;
    }

    static org.eclipse.jetty.util.log.Logger access$100()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        return $r0;
    }

    static java.lang.Class[] access$200()
    {
        java.lang.Class[] $r0;

        $r0 = <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] __supportedCollections>;

        return $r0;
    }

    static java.lang.Class[] access$300()
    {
        java.lang.Class[] $r0;

        $r0 = <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] __primitives>;

        return $r0;
    }

    static java.lang.Class[] access$400()
    {
        java.lang.Class[] $r0;

        $r0 = <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] __primitiveHolders>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Throwable $r20;
        java.lang.Object[] $r18;
        org.eclipse.jetty.xml.XmlParser $r13;
        java.lang.Iterable r23;
        java.lang.reflect.Method $r17;
        java.lang.Class[] $r1, $r11, $r12, $r16;
        java.lang.Exception $r21;
        java.lang.Class $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r15;
        java.lang.Object $r19;
        org.eclipse.jetty.util.log.Logger $r0, $r22;
        java.lang.ClassLoader $r14;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/xml/XmlConfiguration;");

        <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        $r1 = newarray (java.lang.Class)[9];

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r1[0] = $r2;

        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        $r1[1] = $r3;

        $r4 = <java.lang.Byte: java.lang.Class TYPE>;

        $r1[2] = $r4;

        $r5 = <java.lang.Short: java.lang.Class TYPE>;

        $r1[3] = $r5;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[4] = $r6;

        $r7 = <java.lang.Long: java.lang.Class TYPE>;

        $r1[5] = $r7;

        $r8 = <java.lang.Float: java.lang.Class TYPE>;

        $r1[6] = $r8;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r1[7] = $r9;

        $r10 = <java.lang.Void: java.lang.Class TYPE>;

        $r1[8] = $r10;

        <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] __primitives> = $r1;

        $r11 = newarray (java.lang.Class)[9];

        $r11[0] = class "Ljava/lang/Boolean;";

        $r11[1] = class "Ljava/lang/Character;";

        $r11[2] = class "Ljava/lang/Byte;";

        $r11[3] = class "Ljava/lang/Short;";

        $r11[4] = class "Ljava/lang/Integer;";

        $r11[5] = class "Ljava/lang/Long;";

        $r11[6] = class "Ljava/lang/Float;";

        $r11[7] = class "Ljava/lang/Double;";

        $r11[8] = class "Ljava/lang/Void;";

        <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] __primitiveHolders> = $r11;

        $r12 = newarray (java.lang.Class)[7];

        $r12[0] = class "Ljava/util/ArrayList;";

        $r12[1] = class "Lorg/eclipse/jetty/util/ArrayQueue;";

        $r12[2] = class "Ljava/util/HashSet;";

        $r12[3] = class "Ljava/util/Queue;";

        $r12[4] = class "Ljava/util/List;";

        $r12[5] = class "Ljava/util/Set;";

        $r12[6] = class "Ljava/util/Collection;";

        <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] __supportedCollections> = $r12;

        $r13 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser initParser()>();

        <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.xml.XmlParser __parser> = $r13;

     label1:
        $r14 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        $r15 = virtualinvoke $r14.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("java.util.ServiceLoader");

        $r16 = newarray (java.lang.Class)[1];

        $r16[0] = class "Ljava/lang/Class;";

        $r17 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("load", $r16);

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = class "Lorg/eclipse/jetty/xml/ConfigurationProcessorFactory;";

        $r19 = virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r18);

        r23 = (java.lang.Iterable) $r19;

     label2:
        <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Iterable __factoryLoader> = r23;

        goto label7;

     label3:
        $r21 := @caughtexception;

        $r22 = <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r22.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r21);

     label4:
        <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Iterable __factoryLoader> = null;

        goto label7;

     label5:
        $r20 := @caughtexception;

     label6:
        <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Iterable __factoryLoader> = null;

        throw $r20;

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
