class org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader extends java.lang.Object
{
    private org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE type;
    private int volume;
    private int ino;
    private int count;
    private int holes;
    private final byte[] cdata;

    void <init>()
    {
        byte[] $r1;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[512];

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: byte[] cdata> = $r1;

        return;
    }

    public org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE getType()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;
        org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE $r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        $r1 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE type>;

        return $r1;
    }

    public int getVolume()
    {
        int $i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int volume>;

        return $i0;
    }

    public int getIno()
    {
        int $i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int ino>;

        return $i0;
    }

    void setIno(int)
    {
        int i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        i0 := @parameter0: int;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int ino> = i0;

        return;
    }

    public int getCount()
    {
        int $i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int count>;

        return $i0;
    }

    public int getHoles()
    {
        int $i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int holes>;

        return $i0;
    }

    public int getCdata(int)
    {
        byte[] $r1;
        byte $b1;
        int i0, $i2;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: byte[] cdata>;

        $b1 = $r1[i0];

        $i2 = (int) $b1;

        return $i2;
    }

    static org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE access$002(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader, org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE)
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;
        org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE r1;

        r0 := @parameter0: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        r1 := @parameter1: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE type> = r1;

        return r1;
    }

    static int access$102(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader, int)
    {
        int i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @parameter0: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        i0 := @parameter1: int;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int volume> = i0;

        return i0;
    }

    static int access$202(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader, int)
    {
        int i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @parameter0: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        i0 := @parameter1: int;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int ino> = i0;

        return i0;
    }

    static int access$302(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader, int)
    {
        int i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @parameter0: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        i0 := @parameter1: int;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int count> = i0;

        return i0;
    }

    static int access$402(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader, int)
    {
        int i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @parameter0: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        i0 := @parameter1: int;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int holes> = i0;

        return i0;
    }

    static int access$300(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader)
    {
        int $i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @parameter0: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int count>;

        return $i0;
    }

    static int access$408(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader)
    {
        int $i0, $i1;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @parameter0: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int holes>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: int holes> = $i1;

        return $i0;
    }

    static byte[] access$500(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader)
    {
        byte[] $r1;
        org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader r0;

        r0 := @parameter0: org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader;

        $r1 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader: byte[] cdata>;

        return $r1;
    }
}
