public class groovy.ui.text.TextEditor extends javax.swing.JTextPane implements java.awt.print.Pageable, java.awt.print.Printable
{
    public static final java.lang.String FIND;
    public static final java.lang.String FIND_NEXT;
    public static final java.lang.String FIND_PREVIOUS;
    public static final java.lang.String REPLACE;
    private static final java.lang.String TABBED_SPACES;
    private static final java.util.regex.Pattern TAB_BACK_PATTERN;
    private static final java.util.regex.Pattern LINE_START;
    private static final javax.swing.JTextPane PRINT_PANE;
    private static final java.awt.Dimension PRINT_SIZE;
    private static java.awt.Toolkit toolkit;
    private static boolean isOvertypeMode;
    private javax.swing.text.Caret defaultCaret;
    private javax.swing.text.Caret overtypeCaret;
    private static final java.awt.print.PageFormat PAGE_FORMAT;
    private int numPages;
    private int lastUpdate;
    private java.awt.event.MouseAdapter mouseAdapter;
    private boolean unwrapped;
    private boolean tabsAsSpaces;
    private boolean multiLineTab;
    private boolean searchable;

    public void <init>()
    {
        groovy.ui.text.TextEditor r0;

        r0 := @this: groovy.ui.text.TextEditor;

        specialinvoke r0.<groovy.ui.text.TextEditor: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        groovy.ui.text.TextEditor r0;
        boolean z0;

        r0 := @this: groovy.ui.text.TextEditor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<groovy.ui.text.TextEditor: void <init>(boolean,boolean)>(z0, 0);

        return;
    }

    public void <init>(boolean, boolean)
    {
        groovy.ui.text.TextEditor r0;
        boolean z0, z1;

        r0 := @this: groovy.ui.text.TextEditor;

        z1 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        specialinvoke r0.<groovy.ui.text.TextEditor: void <init>(boolean,boolean,boolean)>(z0, z1, 0);

        return;
    }

    public void <init>(boolean, boolean, boolean)
    {
        groovy.ui.text.TextEditor$FindAction $r6;
        boolean z0, z1, z2;
        groovy.ui.text.TextEditor r0;
        javax.swing.KeyStroke $r4, $r7, $r9, $r11, $r13, $r15, $r18;
        groovy.ui.text.TextEditor$ReplaceAction $r16;
        groovy.ui.text.TextEditor$1 $r1;
        javax.swing.Action $r8, $r10, r26, $r27;
        groovy.ui.text.TextEditor$TabAction $r12;
        groovy.ui.text.TextEditor$OvertypeCaret $r22;
        int $i0;
        javax.swing.ActionMap $r2, $r3, $r17, r25;
        groovy.ui.text.TextEditor$ShiftTabAction $r14;
        javax.swing.text.Caret $r21, $r23, $r24;
        javax.swing.InputMap $r5, $r19, $r20, r28;

        r0 := @this: groovy.ui.text.TextEditor;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        specialinvoke r0.<javax.swing.JTextPane: void <init>()>();

        $r1 = new groovy.ui.text.TextEditor$1;

        specialinvoke $r1.<groovy.ui.text.TextEditor$1: void <init>(groovy.ui.text.TextEditor)>(r0);

        r0.<groovy.ui.text.TextEditor: java.awt.event.MouseAdapter mouseAdapter> = $r1;

        r0.<groovy.ui.text.TextEditor: boolean searchable> = 1;

        r0.<groovy.ui.text.TextEditor: boolean tabsAsSpaces> = z0;

        r0.<groovy.ui.text.TextEditor: boolean multiLineTab> = z1;

        r0.<groovy.ui.text.TextEditor: boolean unwrapped> = z2;

        r25 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.ActionMap getActionMap()>();

        r26 = null;

     label1:
        if r26 != null goto label2;

        $r27 = virtualinvoke r25.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("delete-previous");

        goto label3;

     label2:
        $r27 = null;

     label3:
        r26 = $r27;

        virtualinvoke r25.<javax.swing.ActionMap: void remove(java.lang.Object)>("delete-previous");

        $r2 = virtualinvoke r25.<javax.swing.ActionMap: javax.swing.ActionMap getParent()>();

        r25 = $r2;

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.ActionMap getActionMap()>();

        $r4 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(8, 0, 0);

        $r5 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.InputMap getInputMap()>();

        r28 = $r5;

        virtualinvoke $r5.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r4, "delete");

        virtualinvoke $r3.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("delete", $r27);

        $r6 = new groovy.ui.text.TextEditor$FindAction;

        specialinvoke $r6.<groovy.ui.text.TextEditor$FindAction: void <init>(groovy.ui.text.TextEditor,groovy.ui.text.TextEditor$1)>(r0, null);

        virtualinvoke $r3.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("Find...", $r6);

        $r7 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(70, 2, 0);

        virtualinvoke $r5.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r7, "Find...");

        $r8 = <groovy.ui.text.FindReplaceUtility: javax.swing.Action FIND_ACTION>;

        virtualinvoke $r3.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("Find Next", $r8);

        $r9 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(114, 0, 0);

        virtualinvoke $r5.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r9, "Find Next");

        $r10 = <groovy.ui.text.FindReplaceUtility: javax.swing.Action FIND_ACTION>;

        virtualinvoke $r3.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("Find Previous", $r10);

        $r11 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(114, 1, 0);

        virtualinvoke $r5.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r11, "Find Previous");

        $r12 = new groovy.ui.text.TextEditor$TabAction;

        specialinvoke $r12.<groovy.ui.text.TextEditor$TabAction: void <init>(groovy.ui.text.TextEditor,groovy.ui.text.TextEditor$1)>(r0, null);

        virtualinvoke $r3.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("TextEditor-tabAction", $r12);

        $r13 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(9, 0, 0);

        virtualinvoke $r5.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r13, "TextEditor-tabAction");

        $r14 = new groovy.ui.text.TextEditor$ShiftTabAction;

        specialinvoke $r14.<groovy.ui.text.TextEditor$ShiftTabAction: void <init>(groovy.ui.text.TextEditor,groovy.ui.text.TextEditor$1)>(r0, null);

        virtualinvoke $r3.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("TextEditor-shiftTabAction", $r14);

        $r15 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(9, 1, 0);

        virtualinvoke $r5.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r15, "TextEditor-shiftTabAction");

        $r16 = new groovy.ui.text.TextEditor$ReplaceAction;

        specialinvoke $r16.<groovy.ui.text.TextEditor$ReplaceAction: void <init>(groovy.ui.text.TextEditor,groovy.ui.text.TextEditor$1)>(r0, null);

        $r17 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r17.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("Replace...", $r16);

        $r18 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(72, 2, 0);

     label4:
        virtualinvoke r28.<javax.swing.InputMap: void remove(javax.swing.KeyStroke)>($r18);

        $r19 = virtualinvoke r28.<javax.swing.InputMap: javax.swing.InputMap getParent()>();

        r28 = $r19;

        if $r19 != null goto label4;

        $r20 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.InputMap getInputMap()>();

        virtualinvoke $r20.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r18, "Replace...");

        virtualinvoke r0.<groovy.ui.text.TextEditor: void setAutoscrolls(boolean)>(1);

        $r21 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.text.Caret getCaret()>();

        r0.<groovy.ui.text.TextEditor: javax.swing.text.Caret defaultCaret> = $r21;

        $r22 = new groovy.ui.text.TextEditor$OvertypeCaret;

        specialinvoke $r22.<groovy.ui.text.TextEditor$OvertypeCaret: void <init>(groovy.ui.text.TextEditor,groovy.ui.text.TextEditor$1)>(r0, null);

        r0.<groovy.ui.text.TextEditor: javax.swing.text.Caret overtypeCaret> = $r22;

        $r24 = r0.<groovy.ui.text.TextEditor: javax.swing.text.Caret overtypeCaret>;

        $r23 = r0.<groovy.ui.text.TextEditor: javax.swing.text.Caret defaultCaret>;

        $i0 = interfaceinvoke $r23.<javax.swing.text.Caret: int getBlinkRate()>();

        interfaceinvoke $r24.<javax.swing.text.Caret: void setBlinkRate(int)>($i0);

        return;
    }

    public void addNotify()
    {
        groovy.ui.text.TextEditor r0;
        java.awt.event.MouseAdapter $r1;

        r0 := @this: groovy.ui.text.TextEditor;

        specialinvoke r0.<javax.swing.JTextPane: void addNotify()>();

        $r1 = r0.<groovy.ui.text.TextEditor: java.awt.event.MouseAdapter mouseAdapter>;

        virtualinvoke r0.<groovy.ui.text.TextEditor: void addMouseListener(java.awt.event.MouseListener)>($r1);

        staticinvoke <groovy.ui.text.FindReplaceUtility: void registerTextComponent(javax.swing.text.JTextComponent)>(r0);

        return;
    }

    public int getNumberOfPages()
    {
        groovy.ui.text.TextEditor r0;
        java.awt.print.Paper $r4;
        javax.swing.text.StyledDocument r2;
        java.awt.Dimension $r5;
        int $i0, $i1;
        javax.swing.text.Document $r1;
        java.awt.print.PageFormat $r3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: groovy.ui.text.TextEditor;

        $r1 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.text.Document getDocument()>();

        r2 = (javax.swing.text.StyledDocument) $r1;

        $r3 = <groovy.ui.text.TextEditor: java.awt.print.PageFormat PAGE_FORMAT>;

        $r4 = virtualinvoke $r3.<java.awt.print.PageFormat: java.awt.print.Paper getPaper()>();

        $r5 = virtualinvoke r0.<groovy.ui.text.TextEditor: java.awt.Dimension getSize()>();

        $d0 = virtualinvoke $r5.<java.awt.Dimension: double getHeight()>();

        $d1 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableHeight()>();

        $d2 = $d0 / $d1;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i0 = (int) $d3;

        r0.<groovy.ui.text.TextEditor: int numPages> = $i0;

        $i1 = r0.<groovy.ui.text.TextEditor: int numPages>;

        return $i1;
    }

    public java.awt.print.PageFormat getPageFormat(int) throws java.lang.IndexOutOfBoundsException
    {
        groovy.ui.text.TextEditor r1;
        int i0;
        java.awt.print.PageFormat $r0;

        r1 := @this: groovy.ui.text.TextEditor;

        i0 := @parameter0: int;

        $r0 = <groovy.ui.text.TextEditor: java.awt.print.PageFormat PAGE_FORMAT>;

        return $r0;
    }

    public java.awt.print.Printable getPrintable(int) throws java.lang.IndexOutOfBoundsException
    {
        groovy.ui.text.TextEditor r0;
        int i0;

        r0 := @this: groovy.ui.text.TextEditor;

        i0 := @parameter0: int;

        return r0;
    }

    public int print(java.awt.Graphics, java.awt.print.PageFormat, int) throws java.awt.print.PrinterException
    {
        groovy.ui.text.TextEditor r0;
        java.util.Calendar $r16;
        javax.swing.JTextPane $r5, $r10, $r13;
        java.lang.String $r18, $r19, $r20, $r21, $r22, $r30, $r31;
        java.awt.FontMetrics $r24;
        java.util.Date $r17;
        javax.swing.text.StyledDocument r2;
        java.awt.print.PageFormat r3;
        java.awt.Font $r23;
        java.awt.Dimension $r7, $r8, $r9;
        java.awt.Graphics r11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        javax.swing.text.Document $r1, $r6;
        java.awt.Rectangle $r15;
        java.awt.print.Paper $r4;
        java.awt.Graphics2D $r12, $r14, $r25, $r26, $r27, $r28, $r29;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30;

        r0 := @this: groovy.ui.text.TextEditor;

        r11 := @parameter0: java.awt.Graphics;

        r3 := @parameter1: java.awt.print.PageFormat;

        i0 := @parameter2: int;

        $i1 = r0.<groovy.ui.text.TextEditor: int numPages>;

        if i0 >= $i1 goto label3;

        $r1 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.text.Document getDocument()>();

        r2 = (javax.swing.text.StyledDocument) $r1;

        $r4 = virtualinvoke r3.<java.awt.print.PageFormat: java.awt.print.Paper getPaper()>();

        $r5 = <groovy.ui.text.TextEditor: javax.swing.JTextPane PRINT_PANE>;

        $r6 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.text.Document getDocument()>();

        virtualinvoke $r5.<javax.swing.JTextPane: void setDocument(javax.swing.text.Document)>($r6);

        $r7 = <groovy.ui.text.TextEditor: java.awt.Dimension PRINT_SIZE>;

        $d0 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableWidth()>();

        $r8 = virtualinvoke r0.<groovy.ui.text.TextEditor: java.awt.Dimension getSize()>();

        $d1 = virtualinvoke $r8.<java.awt.Dimension: double getHeight()>();

        virtualinvoke $r7.<java.awt.Dimension: void setSize(double,double)>($d0, $d1);

        $r10 = <groovy.ui.text.TextEditor: javax.swing.JTextPane PRINT_PANE>;

        $r9 = <groovy.ui.text.TextEditor: java.awt.Dimension PRINT_SIZE>;

        virtualinvoke $r10.<javax.swing.JTextPane: void setSize(java.awt.Dimension)>($r9);

        $d2 = (double) i0;

        $d3 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableHeight()>();

        $d4 = $d2 * $d3;

        $d5 = neg $d4;

        $d6 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableY()>();

        d7 = $d5 + $d6;

        $r12 = (java.awt.Graphics2D) r11;

        $d8 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableX()>();

        virtualinvoke $r12.<java.awt.Graphics2D: void translate(double,double)>($d8, d7);

        $r13 = <groovy.ui.text.TextEditor: javax.swing.JTextPane PRINT_PANE>;

        virtualinvoke $r13.<javax.swing.JTextPane: void print(java.awt.Graphics)>(r11);

        $r14 = (java.awt.Graphics2D) r11;

        $d9 = neg d7;

        virtualinvoke $r14.<java.awt.Graphics2D: void translate(double,double)>(0.0, $d9);

        $r15 = virtualinvoke r11.<java.awt.Graphics: java.awt.Rectangle getClipBounds()>();

        $i2 = $r15.<java.awt.Rectangle: int x>;

        $i3 = $r15.<java.awt.Rectangle: int width>;

        $d10 = virtualinvoke $r4.<java.awt.print.Paper: double getHeight()>();

        $i4 = (int) $d10;

        $i5 = $i4 + 100;

        virtualinvoke r11.<java.awt.Graphics: void setClip(int,int,int,int)>($i2, 0, $i3, $i5);

        $r16 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r17 = virtualinvoke $r16.<java.util.Calendar: java.util.Date getTime()>();

        $r18 = virtualinvoke $r17.<java.util.Date: java.lang.String toString()>();

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();

        $r20 = virtualinvoke r0.<groovy.ui.text.TextEditor: java.lang.String getName()>();

        if $r20 != null goto label1;

        $r30 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.name");

        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String trim()>();

        goto label2;

     label1:
        $r21 = virtualinvoke r0.<groovy.ui.text.TextEditor: java.lang.String getName()>();

        $r31 = virtualinvoke $r21.<java.lang.String: java.lang.String trim()>();

     label2:
        $i6 = i0 + 1;

        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);

        $r23 = staticinvoke <java.awt.Font: java.awt.Font decode(java.lang.String)>("Monospaced 8");

        virtualinvoke r11.<java.awt.Graphics: void setFont(java.awt.Font)>($r23);

        $r24 = virtualinvoke r11.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r23);

        $i7 = staticinvoke <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>($r24, $r19);

        $r25 = (java.awt.Graphics2D) r11;

        $d11 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableWidth()>();

        $d13 = $d11 / 2.0;

        $i8 = $i7 / 2;

        $d12 = (double) $i8;

        $d14 = $d13 - $d12;

        $f0 = (float) $d14;

        $d15 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableY()>();

        $f1 = (float) $d15;

        $f2 = $f1 / 2.0F;

        $i9 = virtualinvoke $r24.<java.awt.FontMetrics: int getHeight()>();

        $f3 = (float) $i9;

        $f4 = $f2 + $f3;

        virtualinvoke $r25.<java.awt.Graphics2D: void drawString(java.lang.String,float,float)>($r19, $f0, $f4);

        $r26 = (java.awt.Graphics2D) r11;

        $d16 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableY()>();

        $i10 = virtualinvoke $r24.<java.awt.FontMetrics: int getHeight()>();

        $d17 = (double) $i10;

        $d18 = $d16 - $d17;

        virtualinvoke $r26.<java.awt.Graphics2D: void translate(double,double)>(0.0, $d18);

        $d19 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableHeight()>();

        $d20 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableY()>();

        $d21 = $d20 / 2.0;

        $d30 = $d19 + $d21;

        $i11 = staticinvoke <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>($r24, $r31);

        $r27 = (java.awt.Graphics2D) r11;

        $d22 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableWidth()>();

        $d24 = $d22 / 2.0;

        $i12 = $i11 / 2;

        $d23 = (double) $i12;

        $d25 = $d24 - $d23;

        $f5 = (float) $d25;

        $f6 = (float) $d30;

        $i13 = virtualinvoke $r24.<java.awt.FontMetrics: int getHeight()>();

        $i14 = $i13 / 2;

        $f7 = (float) $i14;

        $f8 = $f6 - $f7;

        virtualinvoke $r27.<java.awt.Graphics2D: void drawString(java.lang.String,float,float)>($r31, $f5, $f8);

        $r28 = (java.awt.Graphics2D) r11;

        $i15 = virtualinvoke $r24.<java.awt.FontMetrics: int getHeight()>();

        virtualinvoke $r28.<java.awt.Graphics2D: void translate(int,int)>(0, $i15);

        $i16 = staticinvoke <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>($r24, $r22);

        $r29 = (java.awt.Graphics2D) r11;

        $d26 = virtualinvoke $r4.<java.awt.print.Paper: double getImageableWidth()>();

        $d28 = $d26 / 2.0;

        $i17 = $i16 / 2;

        $d27 = (double) $i17;

        $d29 = $d28 - $d27;

        $f9 = (float) $d29;

        $f10 = (float) $d30;

        $i18 = virtualinvoke $r24.<java.awt.FontMetrics: int getHeight()>();

        $i19 = $i18 / 2;

        $f11 = (float) $i19;

        $f12 = $f10 - $f11;

        virtualinvoke $r29.<java.awt.Graphics2D: void drawString(java.lang.String,float,float)>($r22, $f9, $f12);

        return 0;

     label3:
        return 1;
    }

    public boolean getScrollableTracksViewportWidth()
    {
        groovy.ui.text.TextEditor r0;
        java.awt.Dimension $r3, $r4, $r5, $r6;
        javax.swing.plaf.TextUI $r2;
        int i0, i1, $i2, $i3;
        java.awt.Container $r1;
        boolean $z0, z1, $z2;

        r0 := @this: groovy.ui.text.TextEditor;

        z1 = specialinvoke r0.<javax.swing.JTextPane: boolean getScrollableTracksViewportWidth()>();

        $z0 = r0.<groovy.ui.text.TextEditor: boolean unwrapped>;

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke r0.<groovy.ui.text.TextEditor: java.awt.Container getParent()>();

        $r2 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.plaf.TextUI getUI()>();

        $r3 = virtualinvoke $r2.<javax.swing.plaf.ComponentUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r0);

        i0 = $r3.<java.awt.Dimension: int width>;

        $r4 = virtualinvoke $r1.<java.awt.Component: java.awt.Dimension getSize()>();

        i1 = $r4.<java.awt.Dimension: int width>;

        if $r1 == null goto label2;

        $r5 = virtualinvoke $r2.<javax.swing.plaf.ComponentUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r0);

        $i2 = $r5.<java.awt.Dimension: int width>;

        $r6 = virtualinvoke $r1.<java.awt.Component: java.awt.Dimension getSize()>();

        $i3 = $r6.<java.awt.Dimension: int width>;

        if $i2 >= $i3 goto label1;

        $z2 = 1;

        goto label3;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 1;

     label3:
        z1 = $z2;

     label4:
        return z1;
    }

    public boolean isMultiLineTabbed()
    {
        groovy.ui.text.TextEditor r0;
        boolean $z0;

        r0 := @this: groovy.ui.text.TextEditor;

        $z0 = r0.<groovy.ui.text.TextEditor: boolean multiLineTab>;

        return $z0;
    }

    public static boolean isOvertypeMode()
    {
        boolean $z0;

        $z0 = <groovy.ui.text.TextEditor: boolean isOvertypeMode>;

        return $z0;
    }

    public boolean isTabsAsSpaces()
    {
        groovy.ui.text.TextEditor r0;
        boolean $z0;

        r0 := @this: groovy.ui.text.TextEditor;

        $z0 = r0.<groovy.ui.text.TextEditor: boolean tabsAsSpaces>;

        return $z0;
    }

    public boolean isUnwrapped()
    {
        groovy.ui.text.TextEditor r0;
        boolean $z0;

        r0 := @this: groovy.ui.text.TextEditor;

        $z0 = r0.<groovy.ui.text.TextEditor: boolean unwrapped>;

        return $z0;
    }

    protected void processKeyEvent(java.awt.event.KeyEvent)
    {
        groovy.ui.text.TextEditor r0;
        int $i0, $i1;
        java.awt.event.KeyEvent r1;
        boolean $z0, $z1;

        r0 := @this: groovy.ui.text.TextEditor;

        r1 := @parameter0: java.awt.event.KeyEvent;

        specialinvoke r0.<javax.swing.JTextPane: void processKeyEvent(java.awt.event.KeyEvent)>(r1);

        $i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getID()>();

        if $i0 != 402 goto label3;

        $i1 = virtualinvoke r1.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i1 != 155 goto label3;

        $z0 = staticinvoke <groovy.ui.text.TextEditor: boolean isOvertypeMode()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<groovy.ui.text.TextEditor: void setOvertypeMode(boolean)>($z1);

     label3:
        return;
    }

    public void removeNotify()
    {
        groovy.ui.text.TextEditor r0;
        java.awt.event.MouseAdapter $r1;

        r0 := @this: groovy.ui.text.TextEditor;

        specialinvoke r0.<javax.swing.JTextPane: void removeNotify()>();

        $r1 = r0.<groovy.ui.text.TextEditor: java.awt.event.MouseAdapter mouseAdapter>;

        virtualinvoke r0.<groovy.ui.text.TextEditor: void removeMouseListener(java.awt.event.MouseListener)>($r1);

        staticinvoke <groovy.ui.text.FindReplaceUtility: void unregisterTextComponent(javax.swing.text.JTextComponent)>(r0);

        return;
    }

    public void replaceSelection(java.lang.String)
    {
        groovy.ui.text.TextEditor r0;
        int $i0, $i1, $i2;
        java.lang.String r1, $r2;
        javax.swing.text.Document $r3;
        boolean $z0;

        r0 := @this: groovy.ui.text.TextEditor;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <groovy.ui.text.TextEditor: boolean isOvertypeMode()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<groovy.ui.text.TextEditor: int getCaretPosition()>();

        $r2 = virtualinvoke r0.<groovy.ui.text.TextEditor: java.lang.String getSelectedText()>();

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<groovy.ui.text.TextEditor: javax.swing.text.Document getDocument()>();

        $i1 = interfaceinvoke $r3.<javax.swing.text.Document: int getLength()>();

        if $i0 >= $i1 goto label1;

        $i2 = $i0 + 1;

        virtualinvoke r0.<groovy.ui.text.TextEditor: void moveCaretPosition(int)>($i2);

     label1:
        specialinvoke r0.<javax.swing.JTextPane: void replaceSelection(java.lang.String)>(r1);

        return;
    }

    public void setBounds(int, int, int, int)
    {
        groovy.ui.text.TextEditor r0;
        java.awt.Dimension $r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: groovy.ui.text.TextEditor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $z0 = r0.<groovy.ui.text.TextEditor: boolean unwrapped>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<groovy.ui.text.TextEditor: java.awt.Dimension getPreferredSize()>();

        $i4 = $r1.<java.awt.Dimension: int width>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i4, i2);

        $i6 = $r1.<java.awt.Dimension: int height>;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, i3);

        specialinvoke r0.<javax.swing.JTextPane: void setBounds(int,int,int,int)>(i0, i1, $i5, $i7);

        goto label2;

     label1:
        specialinvoke r0.<javax.swing.JTextPane: void setBounds(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        return;
    }

    public void isMultiLineTabbed(boolean)
    {
        groovy.ui.text.TextEditor r0;
        boolean z0;

        r0 := @this: groovy.ui.text.TextEditor;

        z0 := @parameter0: boolean;

        r0.<groovy.ui.text.TextEditor: boolean multiLineTab> = z0;

        return;
    }

    public void isTabsAsSpaces(boolean)
    {
        groovy.ui.text.TextEditor r0;
        boolean z0;

        r0 := @this: groovy.ui.text.TextEditor;

        z0 := @parameter0: boolean;

        r0.<groovy.ui.text.TextEditor: boolean tabsAsSpaces> = z0;

        return;
    }

    public void setOvertypeMode(boolean)
    {
        groovy.ui.text.TextEditor r0;
        int $i0;
        javax.swing.text.Caret $r1, $r2;
        boolean z0, $z1;

        r0 := @this: groovy.ui.text.TextEditor;

        z0 := @parameter0: boolean;

        <groovy.ui.text.TextEditor: boolean isOvertypeMode> = z0;

        $i0 = virtualinvoke r0.<groovy.ui.text.TextEditor: int getCaretPosition()>();

        $z1 = staticinvoke <groovy.ui.text.TextEditor: boolean isOvertypeMode()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<groovy.ui.text.TextEditor: javax.swing.text.Caret overtypeCaret>;

        virtualinvoke r0.<groovy.ui.text.TextEditor: void setCaret(javax.swing.text.Caret)>($r2);

        goto label2;

     label1:
        $r1 = r0.<groovy.ui.text.TextEditor: javax.swing.text.Caret defaultCaret>;

        virtualinvoke r0.<groovy.ui.text.TextEditor: void setCaret(javax.swing.text.Caret)>($r1);

     label2:
        virtualinvoke r0.<groovy.ui.text.TextEditor: void setCaretPosition(int)>($i0);

        return;
    }

    public void setUnwrapped(boolean)
    {
        groovy.ui.text.TextEditor r0;
        boolean z0;

        r0 := @this: groovy.ui.text.TextEditor;

        z0 := @parameter0: boolean;

        r0.<groovy.ui.text.TextEditor: boolean unwrapped> = z0;

        return;
    }

    static boolean access$500(groovy.ui.text.TextEditor)
    {
        groovy.ui.text.TextEditor r0;
        boolean $z0;

        r0 := @parameter0: groovy.ui.text.TextEditor;

        $z0 = r0.<groovy.ui.text.TextEditor: boolean multiLineTab>;

        return $z0;
    }

    static boolean access$600(groovy.ui.text.TextEditor)
    {
        groovy.ui.text.TextEditor r0;
        boolean $z0;

        r0 := @parameter0: groovy.ui.text.TextEditor;

        $z0 = r0.<groovy.ui.text.TextEditor: boolean tabsAsSpaces>;

        return $z0;
    }

    static java.util.regex.Pattern access$700()
    {
        java.util.regex.Pattern $r0;

        $r0 = <groovy.ui.text.TextEditor: java.util.regex.Pattern TAB_BACK_PATTERN>;

        return $r0;
    }

    static java.util.regex.Pattern access$800()
    {
        java.util.regex.Pattern $r0;

        $r0 = <groovy.ui.text.TextEditor: java.util.regex.Pattern LINE_START>;

        return $r0;
    }

    static void <clinit>()
    {
        java.awt.Dimension $r3;
        javax.swing.JTextPane $r2;
        java.util.regex.Pattern $r0, $r1;
        java.awt.print.PageFormat $r6;
        java.awt.Toolkit $r4;
        java.awt.print.PrinterJob $r5;

        <groovy.ui.text.TextEditor: java.lang.String TABBED_SPACES> = "    ";

        <groovy.ui.text.TextEditor: java.lang.String REPLACE> = "Replace...";

        <groovy.ui.text.TextEditor: java.lang.String FIND_PREVIOUS> = "Find Previous";

        <groovy.ui.text.TextEditor: java.lang.String FIND_NEXT> = "Find Next";

        <groovy.ui.text.TextEditor: java.lang.String FIND> = "Find...";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("^(([\t])|(    )|(   )|(  )|( ))", 8);

        <groovy.ui.text.TextEditor: java.util.regex.Pattern TAB_BACK_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("^", 8);

        <groovy.ui.text.TextEditor: java.util.regex.Pattern LINE_START> = $r1;

        $r2 = new javax.swing.JTextPane;

        specialinvoke $r2.<javax.swing.JTextPane: void <init>()>();

        <groovy.ui.text.TextEditor: javax.swing.JTextPane PRINT_PANE> = $r2;

        $r3 = new java.awt.Dimension;

        specialinvoke $r3.<java.awt.Dimension: void <init>()>();

        <groovy.ui.text.TextEditor: java.awt.Dimension PRINT_SIZE> = $r3;

        $r4 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        <groovy.ui.text.TextEditor: java.awt.Toolkit toolkit> = $r4;

        $r5 = staticinvoke <java.awt.print.PrinterJob: java.awt.print.PrinterJob getPrinterJob()>();

        $r6 = virtualinvoke $r5.<java.awt.print.PrinterJob: java.awt.print.PageFormat defaultPage()>();

        <groovy.ui.text.TextEditor: java.awt.print.PageFormat PAGE_FORMAT> = $r6;

        return;
    }
}
