class org.apache.tika.parser.NetworkParser$ParsingTask extends java.lang.Object implements java.lang.Runnable
{
    private final org.apache.tika.io.TikaInputStream input;
    private final java.io.OutputStream output;
    private volatile java.lang.Exception exception;

    public void <init>(org.apache.tika.io.TikaInputStream, java.io.OutputStream)
    {
        java.io.OutputStream r2;
        org.apache.tika.io.TikaInputStream r1;
        org.apache.tika.parser.NetworkParser$ParsingTask r0;

        r0 := @this: org.apache.tika.parser.NetworkParser$ParsingTask;

        r1 := @parameter0: org.apache.tika.io.TikaInputStream;

        r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.parser.NetworkParser$ParsingTask: java.lang.Exception exception> = null;

        r0.<org.apache.tika.parser.NetworkParser$ParsingTask: org.apache.tika.io.TikaInputStream input> = r1;

        r0.<org.apache.tika.parser.NetworkParser$ParsingTask: java.io.OutputStream output> = r2;

        return;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r18;
        org.apache.tika.parser.NetworkParser$ParsingTask r1;
        org.apache.tika.sax.TaggedContentHandler $r2;
        org.apache.tika.metadata.Metadata r10;
        org.apache.tika.exception.TikaException $r14, $r17, $r22, $r25, $r27, $r29;
        java.lang.Thread $r0;
        javax.xml.parsers.SAXParser $r5;
        org.apache.tika.io.TikaInputStream $r13, $r21;
        org.xml.sax.ContentHandler r3;
        org.apache.tika.parser.NetworkParser$MetaHandler $r9;
        java.io.IOException $r24;
        org.xml.sax.ContentHandler[] $r8;
        java.lang.Exception $r11, $r12, $r15, $r19, $r20, $r23;
        org.apache.tika.sax.TeeContentHandler $r7;
        java.lang.InterruptedException $r16, $r28;
        org.apache.tika.parser.ParseContext r4;
        org.xml.sax.SAXException $r26;
        java.io.InputStream r6;

        r1 := @this: org.apache.tika.parser.NetworkParser$ParsingTask;

        r6 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.xml.sax.ContentHandler;

        r10 := @parameter2: org.apache.tika.metadata.Metadata;

        r4 := @parameter3: org.apache.tika.parser.ParseContext;

        $r0 = new java.lang.Thread;

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r1, "Tika network parser");

        virtualinvoke $r0.<java.lang.Thread: void start()>();

        $r2 = new org.apache.tika.sax.TaggedContentHandler;

        specialinvoke $r2.<org.apache.tika.sax.TaggedContentHandler: void <init>(org.xml.sax.ContentHandler)>(r3);

     label01:
        $r5 = virtualinvoke r4.<org.apache.tika.parser.ParseContext: javax.xml.parsers.SAXParser getSAXParser()>();

        $r7 = new org.apache.tika.sax.TeeContentHandler;

        $r8 = newarray (org.xml.sax.ContentHandler)[2];

        $r8[0] = $r2;

        $r9 = new org.apache.tika.parser.NetworkParser$MetaHandler;

        specialinvoke $r9.<org.apache.tika.parser.NetworkParser$MetaHandler: void <init>(org.apache.tika.metadata.Metadata)>(r10);

        $r8[1] = $r9;

        specialinvoke $r7.<org.apache.tika.sax.TeeContentHandler: void <init>(org.xml.sax.ContentHandler[])>($r8);

        virtualinvoke $r5.<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)>(r6, $r7);

     label02:
        virtualinvoke $r0.<java.lang.Thread: void join(long)>(1000L);

     label03:
        goto label05;

     label04:
        $r28 := @caughtexception;

        $r29 = new org.apache.tika.exception.TikaException;

        specialinvoke $r29.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Network parser interrupted", $r28);

        throw $r29;

     label05:
        $r11 = r1.<org.apache.tika.parser.NetworkParser$ParsingTask: java.lang.Exception exception>;

        if $r11 == null goto label14;

        $r13 = r1.<org.apache.tika.parser.NetworkParser$ParsingTask: org.apache.tika.io.TikaInputStream input>;

        $r12 = r1.<org.apache.tika.parser.NetworkParser$ParsingTask: java.lang.Exception exception>;

        virtualinvoke $r13.<org.apache.tika.io.TikaInputStream: void throwIfCauseOf(java.lang.Exception)>($r12);

        $r14 = new org.apache.tika.exception.TikaException;

        $r15 = r1.<org.apache.tika.parser.NetworkParser$ParsingTask: java.lang.Exception exception>;

        specialinvoke $r14.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected network parser error", $r15);

        throw $r14;

     label06:
        $r26 := @caughtexception;

        virtualinvoke $r2.<org.apache.tika.sax.TaggedContentHandler: void throwIfCauseOf(java.lang.Exception)>($r26);

        $r27 = new org.apache.tika.exception.TikaException;

        specialinvoke $r27.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid network parser output", $r26);

        throw $r27;

     label07:
        $r24 := @caughtexception;

        $r25 = new org.apache.tika.exception.TikaException;

        specialinvoke $r25.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to read network parser output", $r24);

        throw $r25;

     label08:
        $r18 := @caughtexception;

     label09:
        virtualinvoke $r0.<java.lang.Thread: void join(long)>(1000L);

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;

        $r17 = new org.apache.tika.exception.TikaException;

        specialinvoke $r17.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Network parser interrupted", $r16);

        throw $r17;

     label12:
        $r19 = r1.<org.apache.tika.parser.NetworkParser$ParsingTask: java.lang.Exception exception>;

        if $r19 == null goto label13;

        $r21 = r1.<org.apache.tika.parser.NetworkParser$ParsingTask: org.apache.tika.io.TikaInputStream input>;

        $r20 = r1.<org.apache.tika.parser.NetworkParser$ParsingTask: java.lang.Exception exception>;

        virtualinvoke $r21.<org.apache.tika.io.TikaInputStream: void throwIfCauseOf(java.lang.Exception)>($r20);

        $r22 = new org.apache.tika.exception.TikaException;

        $r23 = r1.<org.apache.tika.parser.NetworkParser$ParsingTask: java.lang.Exception exception>;

        specialinvoke $r22.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected network parser error", $r23);

        throw $r22;

     label13:
        throw $r18;

     label14:
        return;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch org.xml.sax.SAXException from label01 to label02 with label06;
        catch java.io.IOException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.InterruptedException from label09 to label10 with label11;
        catch java.lang.Throwable from label06 to label09 with label08;
    }

    public void run()
    {
        java.io.OutputStream $r1, $r3, $r6;
        java.lang.Throwable $r5;
        org.apache.tika.parser.NetworkParser$ParsingTask r0;
        org.apache.tika.io.TikaInputStream $r2;
        java.lang.Exception $r4;

        r0 := @this: org.apache.tika.parser.NetworkParser$ParsingTask;

     label1:
        $r2 = r0.<org.apache.tika.parser.NetworkParser$ParsingTask: org.apache.tika.io.TikaInputStream input>;

        $r1 = r0.<org.apache.tika.parser.NetworkParser$ParsingTask: java.io.OutputStream output>;

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>($r2, $r1);

     label2:
        $r3 = r0.<org.apache.tika.parser.NetworkParser$ParsingTask: java.io.OutputStream output>;

        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

     label4:
        $r6 = r0.<org.apache.tika.parser.NetworkParser$ParsingTask: java.io.OutputStream output>;

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

        throw $r5;

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

        r0.<org.apache.tika.parser.NetworkParser$ParsingTask: java.lang.Exception exception> = $r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Exception from label1 to label5 with label6;
    }
}
