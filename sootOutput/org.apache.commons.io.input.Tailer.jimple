public class org.apache.commons.io.input.Tailer extends java.lang.Object implements java.lang.Runnable
{
    private final java.io.File file;
    private final long delay;
    private final boolean end;
    private final org.apache.commons.io.input.TailerListener listener;
    private volatile boolean run;

    public void <init>(java.io.File, org.apache.commons.io.input.TailerListener)
    {
        org.apache.commons.io.input.TailerListener r2;
        org.apache.commons.io.input.Tailer r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.io.input.Tailer;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.commons.io.input.TailerListener;

        specialinvoke r0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long)>(r1, r2, 1000L);

        return;
    }

    public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long)
    {
        org.apache.commons.io.input.Tailer r0;
        org.apache.commons.io.input.TailerListener r2;
        long l0;
        java.io.File r1;

        r0 := @this: org.apache.commons.io.input.Tailer;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.commons.io.input.TailerListener;

        l0 := @parameter2: long;

        specialinvoke r0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)>(r1, r2, 1000L, 0);

        return;
    }

    public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean)
    {
        org.apache.commons.io.input.Tailer r0;
        org.apache.commons.io.input.TailerListener r2;
        long l0;
        java.io.File r1;
        boolean z0;

        r0 := @this: org.apache.commons.io.input.Tailer;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.commons.io.input.TailerListener;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.io.input.Tailer: boolean run> = 1;

        r0.<org.apache.commons.io.input.Tailer: java.io.File file> = r1;

        r0.<org.apache.commons.io.input.Tailer: long delay> = l0;

        r0.<org.apache.commons.io.input.Tailer: boolean end> = z0;

        r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener> = r2;

        interfaceinvoke r2.<org.apache.commons.io.input.TailerListener: void init(org.apache.commons.io.input.Tailer)>(r0);

        return;
    }

    public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean)
    {
        org.apache.commons.io.input.Tailer $r0;
        java.lang.Thread $r3;
        org.apache.commons.io.input.TailerListener r2;
        long l0;
        java.io.File r1;
        boolean z0;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.commons.io.input.TailerListener;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r0 = new org.apache.commons.io.input.Tailer;

        specialinvoke $r0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)>(r1, r2, l0, z0);

        $r3 = new java.lang.Thread;

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r0);

        virtualinvoke $r3.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return $r0;
    }

    public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long)
    {
        org.apache.commons.io.input.Tailer $r2;
        org.apache.commons.io.input.TailerListener r1;
        long l0;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: org.apache.commons.io.input.TailerListener;

        l0 := @parameter2: long;

        $r2 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)>(r0, r1, l0, 0);

        return $r2;
    }

    public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener)
    {
        org.apache.commons.io.input.TailerListener r1;
        org.apache.commons.io.input.Tailer $r2;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: org.apache.commons.io.input.TailerListener;

        $r2 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)>(r0, r1, 1000L, 0);

        return $r2;
    }

    public java.io.File getFile()
    {
        org.apache.commons.io.input.Tailer r0;
        java.io.File $r1;

        r0 := @this: org.apache.commons.io.input.Tailer;

        $r1 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        return $r1;
    }

    public long getDelay()
    {
        org.apache.commons.io.input.Tailer r0;
        long $l0;

        r0 := @this: org.apache.commons.io.input.Tailer;

        $l0 = r0.<org.apache.commons.io.input.Tailer: long delay>;

        return $l0;
    }

    public void run()
    {
        java.io.RandomAccessFile r18, r19, $r20, $r21;
        byte $b1, $b2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Exception $r10;
        java.io.FileNotFoundException $r13, $r16;
        org.apache.commons.io.input.TailerListener $r3, $r11, $r14, $r17;
        java.lang.Throwable $r9;
        org.apache.commons.io.input.Tailer r0;
        long $l0, $l3, l4, l5, $l6, $l7;
        int $i8, $i9;
        java.io.File $r1, $r2, $r5, $r7, $r8;
        java.lang.InterruptedException $r12, $r15;

        r0 := @this: org.apache.commons.io.input.Tailer;

        r18 = null;

     label01:
        l4 = 0L;

        l5 = 0L;

     label02:
        $z2 = r0.<org.apache.commons.io.input.Tailer: boolean run>;

        if $z2 == 0 goto label13;

        if r18 != null goto label13;

     label03:
        $r20 = new java.io.RandomAccessFile;

        $r7 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        specialinvoke $r20.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r7, "r");

        r18 = $r20;

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

        $r17 = r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        interfaceinvoke $r17.<org.apache.commons.io.input.TailerListener: void fileNotFound()>();

     label06:
        if r18 != null goto label10;

     label07:
        $l3 = r0.<org.apache.commons.io.input.Tailer: long delay>;

        staticinvoke <java.lang.Thread: void sleep(long)>($l3);

     label08:
        goto label02;

     label09:
        $r15 := @caughtexception;

        goto label02;

     label10:
        $z1 = r0.<org.apache.commons.io.input.Tailer: boolean end>;

        if $z1 == 0 goto label11;

        $r8 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        $l6 = virtualinvoke $r8.<java.io.File: long length()>();

        goto label12;

     label11:
        $l6 = 0L;

     label12:
        l5 = $l6;

        l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r18.<java.io.RandomAccessFile: void seek(long)>($l6);

        goto label02;

     label13:
        $z3 = r0.<org.apache.commons.io.input.Tailer: boolean run>;

        if $z3 == 0 goto label23;

        $r1 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        $b1 = $l0 cmp l5;

        $i8 = (int) $b1;

        if $i8 >= 0 goto label17;

        $r3 = r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        interfaceinvoke $r3.<org.apache.commons.io.input.TailerListener: void fileRotated()>();

     label14:
        r19 = r18;

        $r21 = new java.io.RandomAccessFile;

        $r5 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        specialinvoke $r21.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r5, "r");

        r18 = $r21;

        l5 = 0L;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>(r19);

     label15:
        goto label13;

     label16:
        $r13 := @caughtexception;

        $r14 = r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        interfaceinvoke $r14.<org.apache.commons.io.input.TailerListener: void fileNotFound()>();

        goto label13;

     label17:
        $b2 = $l0 cmp l5;

        $i9 = (int) $b2;

        if $i9 <= 0 goto label18;

        l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l5 = specialinvoke r0.<org.apache.commons.io.input.Tailer: long readLines(java.io.RandomAccessFile)>(r18);

        goto label19;

     label18:
        $r2 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        $z0 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>($r2, l4);

        if $z0 == 0 goto label19;

        virtualinvoke r18.<java.io.RandomAccessFile: void seek(long)>(0L);

        l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l5 = specialinvoke r0.<org.apache.commons.io.input.Tailer: long readLines(java.io.RandomAccessFile)>(r18);

     label19:
        $l7 = r0.<org.apache.commons.io.input.Tailer: long delay>;

        staticinvoke <java.lang.Thread: void sleep(long)>($l7);

     label20:
        goto label22;

     label21:
        $r12 := @caughtexception;

     label22:
        goto label13;

     label23:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>(r18);

        goto label28;

     label24:
        $r10 := @caughtexception;

        $r11 = r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        interfaceinvoke $r11.<org.apache.commons.io.input.TailerListener: void handle(java.lang.Exception)>($r10);

     label25:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>(r18);

        goto label28;

     label26:
        $r9 := @caughtexception;

     label27:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>(r18);

        throw $r9;

     label28:
        return;

        catch java.io.FileNotFoundException from label03 to label04 with label05;
        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.io.FileNotFoundException from label14 to label15 with label16;
        catch java.lang.InterruptedException from label19 to label20 with label21;
        catch java.lang.Exception from label01 to label23 with label24;
        catch java.lang.Throwable from label01 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    public void stop()
    {
        org.apache.commons.io.input.Tailer r0;

        r0 := @this: org.apache.commons.io.input.Tailer;

        r0.<org.apache.commons.io.input.Tailer: boolean run> = 0;

        return;
    }

    private long readLines(java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        org.apache.commons.io.input.Tailer r1;
        org.apache.commons.io.input.TailerListener $r2;
        long l0;
        java.lang.String r3;

        r1 := @this: org.apache.commons.io.input.Tailer;

        r0 := @parameter0: java.io.RandomAccessFile;

        l0 = virtualinvoke r0.<java.io.RandomAccessFile: long getFilePointer()>();

        r3 = specialinvoke r1.<org.apache.commons.io.input.Tailer: java.lang.String readLine(java.io.RandomAccessFile)>(r0);

     label1:
        if r3 == null goto label2;

        l0 = virtualinvoke r0.<java.io.RandomAccessFile: long getFilePointer()>();

        $r2 = r1.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        interfaceinvoke $r2.<org.apache.commons.io.input.TailerListener: void handle(java.lang.String)>(r3);

        r3 = specialinvoke r1.<org.apache.commons.io.input.Tailer: java.lang.String readLine(java.io.RandomAccessFile)>(r0);

        goto label1;

     label2:
        virtualinvoke r0.<java.io.RandomAccessFile: void seek(long)>(l0);

        return l0;
    }

    private java.lang.String readLine(java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r1;
        org.apache.commons.io.input.Tailer r3;
        char $c0;
        java.lang.StringBuffer $r4;
        int $i1, $i3;
        java.lang.String $r2;
        boolean z0;

        r3 := @this: org.apache.commons.io.input.Tailer;

        r1 := @parameter0: java.io.RandomAccessFile;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        z0 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.io.RandomAccessFile: int read()>();

        $i3 = (int) -1;

        if $i1 == $i3 goto label6;

        lookupswitch($i1)
        {
            case 10: goto label2;
            case 13: goto label3;
            default: goto label4;
        };

     label2:
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label3:
        z0 = 1;

        goto label1;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(13);

        z0 = 0;

     label5:
        $c0 = (char) $i1;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        goto label1;

     label6:
        return null;
    }
}
