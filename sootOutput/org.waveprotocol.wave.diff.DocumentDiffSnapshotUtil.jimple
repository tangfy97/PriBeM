public final class org.waveprotocol.wave.diff.DocumentDiffSnapshotUtil extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.wave.diff.DocumentDiffSnapshotUtil r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isEqual(org.waveprotocol.wave.diff.DocumentDiffSnapshot, org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        byte $b0, $b1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.util.List $r6, $r7, $r8, $r9, $r10, $r11;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r0, r2;
        java.lang.String $r1, $r3, $r4, $r5;
        double $d0, $d1, $d2, $d3;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation $r12, $r13, $r14, $r15;

        r0 := @parameter0: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        r2 := @parameter1: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.lang.String getDocumentId()>();

        $r3 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.lang.String getDocumentId()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $z1 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasState()>();

        $z2 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasState()>();

        if $z1 == $z2 goto label02;

        return 0;

     label02:
        $z3 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasState()>();

        if $z3 == 0 goto label03;

        $r14 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: org.waveprotocol.wave.federation.ProtocolDocumentOperation getState()>();

        $r15 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: org.waveprotocol.wave.federation.ProtocolDocumentOperation getState()>();

        $z12 = staticinvoke <org.waveprotocol.wave.federation.ProtocolDocumentOperationUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolDocumentOperation,org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r14, $r15);

        if $z12 != 0 goto label03;

        return 0;

     label03:
        $z4 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasDiff()>();

        $z5 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasDiff()>();

        if $z4 == $z5 goto label04;

        return 0;

     label04:
        $z6 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasDiff()>();

        if $z6 == 0 goto label05;

        $r12 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: org.waveprotocol.wave.federation.ProtocolDocumentOperation getDiff()>();

        $r13 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: org.waveprotocol.wave.federation.ProtocolDocumentOperation getDiff()>();

        $z11 = staticinvoke <org.waveprotocol.wave.federation.ProtocolDocumentOperationUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolDocumentOperation,org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r12, $r13);

        if $z11 != 0 goto label05;

        return 0;

     label05:
        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.lang.String getAuthor()>();

        $r5 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.lang.String getAuthor()>();

        $z7 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z7 != 0 goto label06;

        return 0;

     label06:
        $r6 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getContributor()>();

        $r7 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getContributor()>();

        $z8 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z8 != 0 goto label07;

        return 0;

     label07:
        $r8 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getAddedContributor()>();

        $r9 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getAddedContributor()>();

        $z9 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z9 != 0 goto label08;

        return 0;

     label08:
        $r10 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getRemovedContributor()>();

        $r11 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getRemovedContributor()>();

        $z10 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z10 != 0 goto label09;

        return 0;

     label09:
        $d0 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: double getLastModifiedVersion()>();

        $d1 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: double getLastModifiedVersion()>();

        $b0 = $d0 cmpl $d1;

        if $b0 == 0 goto label10;

        return 0;

     label10:
        $d2 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: double getLastModifiedTime()>();

        $d3 = interfaceinvoke r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: double getLastModifiedTime()>();

        $b1 = $d2 cmpl $d3;

        if $b1 == 0 goto label11;

        return 0;

     label11:
        return 1;
    }

    public static boolean areAllEqual(java.util.List, java.util.List)
    {
        java.util.Iterator $r2, $r3;
        java.util.List r0, r1;
        int $i0, $i1;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot $r5, $r7;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.waveprotocol.wave.diff.DocumentDiffSnapshot) $r4;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.waveprotocol.wave.diff.DocumentDiffSnapshot) $r6;

        $z1 = staticinvoke <org.waveprotocol.wave.diff.DocumentDiffSnapshotUtil: boolean isEqual(org.waveprotocol.wave.diff.DocumentDiffSnapshot,org.waveprotocol.wave.diff.DocumentDiffSnapshot)>($r5, $r7);

        if $z1 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public static int getHashCode(org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        boolean $z0, $z1;
        java.util.List $r3, $r4, $r5;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r0;
        java.lang.Double $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, $i24, $i25;
        java.lang.String $r1, $r2;
        double $d0, $d1;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation $r8, $r9;

        r0 := @parameter0: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.lang.String getDocumentId()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i23 = 31 + $i0;

        $i1 = 31 * i23;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasState()>();

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: org.waveprotocol.wave.federation.ProtocolDocumentOperation getState()>();

        $i24 = virtualinvoke $r9.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i24 = 0;

     label2:
        $i22 = $i1 + $i24;

        $i2 = 31 * $i22;

        $z1 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasDiff()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: org.waveprotocol.wave.federation.ProtocolDocumentOperation getDiff()>();

        $i25 = virtualinvoke $r8.<java.lang.Object: int hashCode()>();

        goto label4;

     label3:
        $i25 = 0;

     label4:
        $i15 = $i2 + $i25;

        $i3 = 31 * $i15;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.lang.String getAuthor()>();

        $i4 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i16 = $i3 + $i4;

        $i5 = 31 * $i16;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getContributor()>();

        $i6 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        $i17 = $i5 + $i6;

        $i7 = 31 * $i17;

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getAddedContributor()>();

        $i8 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        $i18 = $i7 + $i8;

        $i9 = 31 * $i18;

        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getRemovedContributor()>();

        $i10 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        $i19 = $i9 + $i10;

        $i11 = 31 * $i19;

        $d0 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: double getLastModifiedVersion()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $i12 = virtualinvoke $r6.<java.lang.Double: int hashCode()>();

        $i20 = $i11 + $i12;

        $i13 = 31 * $i20;

        $d1 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: double getLastModifiedTime()>();

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $i14 = virtualinvoke $r7.<java.lang.Double: int hashCode()>();

        $i21 = $i13 + $i14;

        return $i21;
    }
}
