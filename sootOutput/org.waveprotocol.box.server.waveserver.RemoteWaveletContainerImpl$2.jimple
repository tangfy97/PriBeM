class org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2 extends java.lang.Object implements org.waveprotocol.box.server.waveserver.CertificateManager$SignerInfoPrefetchResultListener
{
    final java.lang.Runnable val$countDown;
    final org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl, java.lang.Runnable)
    {
        org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl r1;
        org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2 r0;
        java.lang.Runnable r2;

        r0 := @this: org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl;

        r2 := @parameter1: java.lang.Runnable;

        r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2: org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2: java.lang.Runnable val$countDown> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFailure(org.waveprotocol.wave.federation.FederationErrorProto$FederationError)
    {
        org.waveprotocol.wave.federation.FederationErrorProto$FederationError r3;
        java.lang.Runnable $r7;
        org.waveprotocol.wave.util.logging.Log $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r5;
        org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2 r6;

        r6 := @this: org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2;

        r3 := @parameter0: org.waveprotocol.wave.federation.FederationErrorProto$FederationError;

        $r0 = staticinvoke <org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signer info prefetch failed: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String)>($r5);

        $r7 = r6.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2: java.lang.Runnable val$countDown>;

        interfaceinvoke $r7.<java.lang.Runnable: void run()>();

        return;
    }

    public void onSuccess(org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo r3;
        java.lang.Runnable $r8;
        org.waveprotocol.wave.util.logging.Log $r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.lang.String $r4, $r6;
        org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2 r7;

        r7 := @this: org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2;

        r3 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo;

        $r0 = staticinvoke <org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signer info prefetch success for ");

        $r4 = virtualinvoke r3.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: java.lang.String getDomain()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r6);

        $r8 = r7.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$2: java.lang.Runnable val$countDown>;

        interfaceinvoke $r8.<java.lang.Runnable: void run()>();

        return;
    }
}
