public class org.springframework.beans.factory.support.StaticListableBeanFactory extends java.lang.Object implements org.springframework.beans.factory.ListableBeanFactory
{
    private final java.util.Map beans;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans> = $r1;

        return;
    }

    public void addBean(java.lang.String, java.lang.Object)
    {
        java.util.Map $r3;
        java.lang.Object r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Object getBean(java.lang.String) throws org.springframework.beans.BeansException
    {
        org.springframework.beans.factory.FactoryBean $r5;
        org.springframework.beans.factory.BeanCreationException $r19;
        java.util.Map $r3, $r11;
        java.lang.String r0, $r1, $r14, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.util.Collection $r13;
        java.util.Set $r12;
        org.springframework.beans.factory.support.StaticListableBeanFactory r2;
        java.lang.Exception $r18;
        org.springframework.beans.factory.NoSuchBeanDefinitionException $r9;
        java.lang.Object $r4, $r6;
        java.lang.Class $r8;
        java.lang.StringBuilder $r10, $r15, $r16;
        org.springframework.beans.factory.BeanIsNotAFactoryException $r7;

        r2 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.lang.String transformedBeanName(java.lang.String)>(r0);

        $r3 = r2.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 != null goto label1;

        $r9 = new org.springframework.beans.factory.NoSuchBeanDefinitionException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Defined beans are [");

        $r11 = r2.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>();

        $r13 = (java.util.Collection) $r12;

        $r14 = staticinvoke <org.springframework.util.StringUtils: java.lang.String collectionToCommaDelimitedString(java.util.Collection)>($r13);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.String,java.lang.String)>($r1, $r17);

        throw $r9;

     label1:
        $z0 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: boolean isFactoryDereference(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        $z3 = $r4 instanceof org.springframework.beans.factory.FactoryBean;

        if $z3 != 0 goto label2;

        $r7 = new org.springframework.beans.factory.BeanIsNotAFactoryException;

        $r8 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r7.<org.springframework.beans.factory.BeanIsNotAFactoryException: void <init>(java.lang.String,java.lang.Class)>($r1, $r8);

        throw $r7;

     label2:
        $z1 = $r4 instanceof org.springframework.beans.factory.FactoryBean;

        if $z1 == 0 goto label6;

        $z2 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: boolean isFactoryDereference(java.lang.String)>(r0);

        if $z2 != 0 goto label6;

     label3:
        $r5 = (org.springframework.beans.factory.FactoryBean) $r4;

        $r6 = interfaceinvoke $r5.<org.springframework.beans.factory.FactoryBean: java.lang.Object getObject()>();

     label4:
        return $r6;

     label5:
        $r18 := @caughtexception;

        $r19 = new org.springframework.beans.factory.BeanCreationException;

        specialinvoke $r19.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "FactoryBean threw exception on object creation", $r18);

        throw $r19;

     label6:
        return $r4;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.Object getBean(java.lang.String, java.lang.Class) throws org.springframework.beans.BeansException
    {
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;
        org.springframework.beans.factory.BeanNotOfRequiredTypeException $r5;
        java.lang.Object $r2;
        java.lang.Class r3, $r4, $r6;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>(r1);

        if r3 == null goto label1;

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 != 0 goto label1;

        $r5 = new org.springframework.beans.factory.BeanNotOfRequiredTypeException;

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r5.<org.springframework.beans.factory.BeanNotOfRequiredTypeException: void <init>(java.lang.String,java.lang.Class,java.lang.Class)>(r1, r3, $r6);

        throw $r5;

     label1:
        return $r2;
    }

    public java.lang.Object getBean(java.lang.Class) throws org.springframework.beans.BeansException
    {
        java.lang.String[] $r2;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;
        org.springframework.beans.factory.NoSuchBeanDefinitionException $r3;
        int $i0, $i1;
        java.lang.Class r1;
        java.lang.StringBuilder $r4, $r5;
        java.lang.Object $r8;
        java.lang.String $r6, $r7;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)>(r1);

        $i0 = lengthof $r2;

        if $i0 != 1 goto label1;

        $r7 = $r2[0];

        $r8 = virtualinvoke r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>($r7, r1);

        return $r8;

     label1:
        $r3 = new org.springframework.beans.factory.NoSuchBeanDefinitionException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("expected single bean but found ");

        $i1 = lengthof $r2;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class,java.lang.String)>(r1, $r6);

        throw $r3;
    }

    public transient java.lang.Object getBean(java.lang.String, java.lang.Object[]) throws org.springframework.beans.BeansException
    {
        java.lang.UnsupportedOperationException $r4;
        java.lang.Object[] r0;
        java.lang.Object $r3;
        java.lang.String r2;
        org.springframework.beans.factory.support.StaticListableBeanFactory r1;

        r1 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object[];

        if r0 == null goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("StaticListableBeanFactory does not support explicit bean creation arguments)");

        throw $r4;

     label1:
        $r3 = virtualinvoke r1.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>(r2);

        return $r3;
    }

    public boolean containsBean(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean isSingleton(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException
    {
        org.springframework.beans.factory.FactoryBean $r3;
        java.lang.Object $r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>(r1);

        $z0 = $r2 instanceof org.springframework.beans.factory.FactoryBean;

        if $z0 == 0 goto label1;

        $r3 = (org.springframework.beans.factory.FactoryBean) $r2;

        $z1 = interfaceinvoke $r3.<org.springframework.beans.factory.FactoryBean: boolean isSingleton()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isPrototype(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException
    {
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;
        org.springframework.beans.factory.FactoryBean $r3;
        org.springframework.beans.factory.SmartFactoryBean $r4;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>(r1);

        $z0 = $r2 instanceof org.springframework.beans.factory.SmartFactoryBean;

        if $z0 == 0 goto label1;

        $r4 = (org.springframework.beans.factory.SmartFactoryBean) $r2;

        $z3 = interfaceinvoke $r4.<org.springframework.beans.factory.SmartFactoryBean: boolean isPrototype()>();

        if $z3 != 0 goto label3;

     label1:
        $z1 = $r2 instanceof org.springframework.beans.factory.FactoryBean;

        if $z1 == 0 goto label2;

        $r3 = (org.springframework.beans.factory.FactoryBean) $r2;

        $z2 = interfaceinvoke $r3.<org.springframework.beans.factory.FactoryBean: boolean isSingleton()>();

        if $z2 == 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public boolean isTypeMatch(java.lang.String, java.lang.Class) throws org.springframework.beans.factory.NoSuchBeanDefinitionException
    {
        java.lang.Class $r2, r3;
        java.lang.String r1;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Class getType(java.lang.String)>(r1);

        if r3 == null goto label2;

        if $r2 == null goto label1;

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public java.lang.Class getType(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException
    {
        org.springframework.beans.factory.FactoryBean $r6;
        java.util.Map $r3, $r10;
        java.lang.String r0, $r1, $r13, $r16;
        boolean $z0, $z1;
        java.util.Collection $r12;
        java.util.Set $r11;
        org.springframework.beans.factory.support.StaticListableBeanFactory r2;
        org.springframework.beans.factory.NoSuchBeanDefinitionException $r8;
        java.lang.Object $r4;
        java.lang.Class $r5, $r7;
        java.lang.StringBuilder $r9, $r14, $r15;

        r2 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.lang.String transformedBeanName(java.lang.String)>(r0);

        $r3 = r2.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 != null goto label1;

        $r8 = new org.springframework.beans.factory.NoSuchBeanDefinitionException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Defined beans are [");

        $r10 = r2.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        $r12 = (java.util.Collection) $r11;

        $r13 = staticinvoke <org.springframework.util.StringUtils: java.lang.String collectionToCommaDelimitedString(java.util.Collection)>($r12);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.String,java.lang.String)>($r1, $r16);

        throw $r8;

     label1:
        $z0 = $r4 instanceof org.springframework.beans.factory.FactoryBean;

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: boolean isFactoryDereference(java.lang.String)>(r0);

        if $z1 != 0 goto label2;

        $r6 = (org.springframework.beans.factory.FactoryBean) $r4;

        $r7 = interfaceinvoke $r6.<org.springframework.beans.factory.FactoryBean: java.lang.Class getObjectType()>();

        return $r7;

     label2:
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        return $r5;
    }

    public java.lang.String[] getAliases(java.lang.String)
    {
        java.lang.String[] $r0;
        java.lang.String r2;
        org.springframework.beans.factory.support.StaticListableBeanFactory r1;

        r1 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r2 := @parameter0: java.lang.String;

        $r0 = newarray (java.lang.String)[0];

        return $r0;
    }

    public boolean containsBeanDefinition(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public int getBeanDefinitionCount()
    {
        int $i0;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        $r1 = r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.lang.String[] getBeanDefinitionNames()
    {
        java.util.Map $r1;
        java.util.Collection $r3;
        java.util.Set $r2;
        java.lang.String[] $r4;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        $r1 = r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = (java.util.Collection) $r2;

        $r4 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Collection)>($r3);

        return $r4;
    }

    public java.lang.String[] getBeanNamesForType(java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.String[] $r2;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>(r1, 1, 1);

        return $r2;
    }

    public java.lang.String[] getBeanNamesForType(java.lang.Class, boolean, boolean)
    {
        java.lang.String[] $r8;
        java.util.ArrayList $r10;
        org.springframework.beans.factory.FactoryBean $r6;
        java.util.Map $r4, $r11;
        java.lang.String r3;
        boolean z0, $z1, $z2, z3, $z4, $z5, z6, $z7, $z8;
        java.util.Iterator $r13;
        java.util.Set $r12;
        org.springframework.beans.factory.support.StaticListableBeanFactory r1;
        java.lang.Class r0, $r7, $r9;
        java.lang.Object $r2, $r5;

        r1 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r0 := @parameter0: java.lang.Class;

        z6 := @parameter1: boolean;

        z3 := @parameter2: boolean;

        if r0 == null goto label1;

        $r9 = class "Lorg/springframework/beans/factory/FactoryBean;";

        $z5 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z5 == 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        z0 = $z7;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = r1.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

        goto label7;

     label3:
        $r2 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $r4 = r1.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $z1 = $r5 instanceof org.springframework.beans.factory.FactoryBean;

        if $z1 == 0 goto label5;

        if z0 != 0 goto label5;

        if z3 == 0 goto label7;

        $r6 = (org.springframework.beans.factory.FactoryBean) $r5;

        $r7 = interfaceinvoke $r6.<org.springframework.beans.factory.FactoryBean: java.lang.Class getObjectType()>();

        if $r7 == null goto label7;

        if r0 == null goto label4;

        $z4 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z4 == 0 goto label7;

     label4:
        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label7;

     label5:
        if r0 == null goto label6;

        $z2 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r5);

        if $z2 == 0 goto label7;

     label6:
        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r3);

     label7:
        $z8 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z8 != 0 goto label3;

        $r8 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Collection)>($r10);

        return $r8;
    }

    public java.util.Map getBeansOfType(java.lang.Class) throws org.springframework.beans.BeansException
    {
        java.lang.Class r1;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;
        java.util.Map $r2;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)>(r1, 1, 1);

        return $r2;
    }

    public java.util.Map getBeansOfType(java.lang.Class, boolean, boolean) throws org.springframework.beans.BeansException
    {
        java.util.HashMap $r12;
        org.springframework.beans.factory.FactoryBean r8;
        java.util.Map $r13;
        java.lang.String r16;
        boolean z0, $z1, $z2, z3, z4, $z5, $z6, $z7, $z8, $z9;
        java.util.Map$Entry r3;
        java.util.Iterator $r15;
        java.util.Set $r14;
        org.springframework.beans.factory.support.StaticListableBeanFactory r1;
        java.lang.Class r0, $r9, $r11;
        java.lang.Object $r2, $r4, $r5, $r10;
        java.lang.StringBuilder $r6, $r7;

        r1 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r0 := @parameter0: java.lang.Class;

        z4 := @parameter1: boolean;

        z3 := @parameter2: boolean;

        if r0 == null goto label1;

        $r11 = class "Lorg/springframework/beans/factory/FactoryBean;";

        $z7 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z7 == 0 goto label1;

        $z8 = 1;

        goto label2;

     label1:
        $z8 = 0;

     label2:
        z0 = $z8;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        $r13 = r1.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

        goto label9;

     label3:
        $r2 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r2;

        $r4 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r16 = (java.lang.String) $r4;

        $r5 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = $r5 instanceof org.springframework.beans.factory.FactoryBean;

        if $z1 == 0 goto label6;

        if z0 != 0 goto label6;

        if z3 == 0 goto label9;

        r8 = (org.springframework.beans.factory.FactoryBean) $r5;

        $r9 = interfaceinvoke r8.<org.springframework.beans.factory.FactoryBean: java.lang.Class getObjectType()>();

        if z4 != 0 goto label4;

        $z6 = interfaceinvoke r8.<org.springframework.beans.factory.FactoryBean: boolean isSingleton()>();

        if $z6 == 0 goto label9;

     label4:
        if $r9 == null goto label9;

        if r0 == null goto label5;

        $z5 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9);

        if $z5 == 0 goto label9;

     label5:
        $r10 = virtualinvoke r1.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>(r16, r0);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r10);

        goto label9;

     label6:
        if r0 == null goto label7;

        $z2 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r5);

        if $z2 == 0 goto label9;

     label7:
        if z0 == 0 goto label8;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("&");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        r16 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r5);

     label9:
        $z9 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z9 != 0 goto label3;

        return $r12;
    }

    public java.util.Map getBeansWithAnnotation(java.lang.Class) throws org.springframework.beans.BeansException
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.springframework.beans.factory.support.StaticListableBeanFactory r1;
        java.util.LinkedHashMap $r0;
        java.util.Map $r2;
        java.lang.'annotation'.Annotation $r8;
        java.lang.Object $r5, $r9;
        java.lang.Class r7;
        java.lang.String r6;
        boolean $z0;

        r1 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r7 := @parameter0: java.lang.Class;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        $r2 = r1.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map beans>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r8 = virtualinvoke r1.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.'annotation'.Annotation findAnnotationOnBean(java.lang.String,java.lang.Class)>(r6, r7);

        if $r8 == null goto label2;

        $r9 = virtualinvoke r1.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>(r6);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r9);

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r0;
    }

    public java.lang.'annotation'.Annotation findAnnotationOnBean(java.lang.String, java.lang.Class)
    {
        java.lang.'annotation'.Annotation $r4;
        java.lang.Class $r2, r3;
        java.lang.String r1;
        org.springframework.beans.factory.support.StaticListableBeanFactory r0;

        r0 := @this: org.springframework.beans.factory.support.StaticListableBeanFactory;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Class getType(java.lang.String)>(r1);

        $r4 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.Class,java.lang.Class)>($r2, r3);

        return $r4;
    }
}
