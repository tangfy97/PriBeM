public class com.google.wave.api.data.converter.v22.EventDataConverterV22 extends com.google.wave.api.data.converter.v21.EventDataConverterV21
{

    public void <init>()
    {
        com.google.wave.api.data.converter.v22.EventDataConverterV22 r0;

        r0 := @this: com.google.wave.api.data.converter.v22.EventDataConverterV22;

        specialinvoke r0.<com.google.wave.api.data.converter.v21.EventDataConverterV21: void <init>()>();

        return;
    }

    public com.google.wave.api.impl.WaveletData toWaveletData(org.waveprotocol.wave.model.wave.Wavelet, org.waveprotocol.wave.model.conversation.Conversation, com.google.wave.api.impl.EventMessageBundle)
    {
        com.google.wave.api.impl.EventMessageBundle r3;
        java.util.Iterator $r8;
        org.waveprotocol.wave.model.conversation.ConversationThread $r6;
        com.google.wave.api.BlipThread $r13;
        com.google.wave.api.impl.WaveletData $r4;
        java.lang.Iterable $r7;
        org.waveprotocol.wave.model.wave.Wavelet r1;
        org.waveprotocol.wave.model.conversation.ConversationBlip r11;
        com.google.wave.api.data.converter.v22.EventDataConverterV22 r0;
        org.waveprotocol.wave.model.conversation.Conversation r2;
        int $i1;
        java.lang.Object $r10;
        java.lang.String $r12;
        java.util.LinkedList $r5;
        boolean $z0;

        r0 := @this: com.google.wave.api.data.converter.v22.EventDataConverterV22;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        r2 := @parameter1: org.waveprotocol.wave.model.conversation.Conversation;

        r3 := @parameter2: com.google.wave.api.impl.EventMessageBundle;

        $r4 = specialinvoke r0.<com.google.wave.api.data.converter.v21.EventDataConverterV21: com.google.wave.api.impl.WaveletData toWaveletData(org.waveprotocol.wave.model.wave.Wavelet,org.waveprotocol.wave.model.conversation.Conversation,com.google.wave.api.impl.EventMessageBundle)>(r1, r2, r3);

        $r5 = staticinvoke <com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>();

        $r6 = interfaceinvoke r2.<org.waveprotocol.wave.model.conversation.Conversation: org.waveprotocol.wave.model.conversation.ConversationThread getRootThread()>();

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.conversation.ConversationThread: java.lang.Iterable getBlips()>();

        $r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.waveprotocol.wave.model.conversation.ConversationBlip) $r10;

        $r12 = interfaceinvoke r11.<org.waveprotocol.wave.model.conversation.ConversationBlip: java.lang.String getId()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        $r13 = new com.google.wave.api.BlipThread;

        $i1 = (int) -1;

        specialinvoke $r13.<com.google.wave.api.BlipThread: void <init>(java.lang.String,int,java.util.List,java.util.Map)>("", $i1, $r5, null);

        virtualinvoke $r4.<com.google.wave.api.impl.WaveletData: void setRootThread(com.google.wave.api.BlipThread)>($r13);

        return $r4;
    }

    public com.google.wave.api.BlipData toBlipData(org.waveprotocol.wave.model.conversation.ConversationBlip, org.waveprotocol.wave.model.wave.Wavelet, com.google.wave.api.impl.EventMessageBundle)
    {
        com.google.wave.api.impl.EventMessageBundle r3;
        java.lang.Iterable $r8;
        org.waveprotocol.wave.model.conversation.ConversationBlip r1;
        com.google.wave.api.data.converter.v22.EventDataConverterV22 r0;
        int $i0, $i2;
        java.lang.String $r6, $r13;
        org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread r11;
        java.util.LinkedList $r7;
        boolean $z0, $z1;
        java.util.Iterator $r9;
        org.waveprotocol.wave.model.conversation.ConversationThread $r5, $r12, $r14, $r15;
        org.waveprotocol.wave.model.wave.Wavelet r2;
        com.google.wave.api.BlipData $r4;
        java.lang.Object $r10;

        r0 := @this: com.google.wave.api.data.converter.v22.EventDataConverterV22;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationBlip;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.Wavelet;

        r3 := @parameter2: com.google.wave.api.impl.EventMessageBundle;

        $r4 = specialinvoke r0.<com.google.wave.api.data.converter.v21.EventDataConverterV21: com.google.wave.api.BlipData toBlipData(org.waveprotocol.wave.model.conversation.ConversationBlip,org.waveprotocol.wave.model.wave.Wavelet,com.google.wave.api.impl.EventMessageBundle)>(r1, r2, r3);

        $r5 = interfaceinvoke r1.<org.waveprotocol.wave.model.conversation.ConversationBlip: org.waveprotocol.wave.model.conversation.ConversationThread getThread()>();

        $r6 = interfaceinvoke $r5.<org.waveprotocol.wave.model.conversation.ConversationThread: java.lang.String getId()>();

        virtualinvoke $r4.<com.google.wave.api.BlipData: void setThreadId(java.lang.String)>($r6);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r15 = interfaceinvoke r1.<org.waveprotocol.wave.model.conversation.ConversationBlip: org.waveprotocol.wave.model.conversation.ConversationThread getThread()>();

        $i2 = (int) -1;

        staticinvoke <com.google.wave.api.data.converter.v22.EventDataConverterV22: void addThread(com.google.wave.api.impl.EventMessageBundle,org.waveprotocol.wave.model.conversation.ConversationThread,int,org.waveprotocol.wave.model.wave.Wavelet)>(r3, $r15, $i2, r2);

     label1:
        $r7 = staticinvoke <com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>();

        $r8 = interfaceinvoke r1.<org.waveprotocol.wave.model.conversation.ConversationBlip: java.lang.Iterable locateReplyThreads()>();

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread) $r10;

        $r12 = virtualinvoke r11.<org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread: org.waveprotocol.wave.model.conversation.ConversationThread getThread()>();

        $r13 = interfaceinvoke $r12.<org.waveprotocol.wave.model.conversation.ConversationThread: java.lang.String getId()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = virtualinvoke r11.<org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread: org.waveprotocol.wave.model.conversation.ConversationThread getThread()>();

        $i0 = virtualinvoke r11.<org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread: int getLocation()>();

        staticinvoke <com.google.wave.api.data.converter.v22.EventDataConverterV22: void addThread(com.google.wave.api.impl.EventMessageBundle,org.waveprotocol.wave.model.conversation.ConversationThread,int,org.waveprotocol.wave.model.wave.Wavelet)>(r3, $r14, $i0, r2);

        goto label2;

     label3:
        virtualinvoke $r4.<com.google.wave.api.BlipData: void setReplyThreadIds(java.util.List)>($r7);

        return $r4;
    }

    public java.util.List findBlipChildren(org.waveprotocol.wave.model.conversation.ConversationBlip)
    {
        java.util.Iterator $r3, $r8;
        org.waveprotocol.wave.model.conversation.ConversationThread $r6;
        java.lang.Iterable $r2, $r7;
        java.util.ArrayList $r0;
        org.waveprotocol.wave.model.conversation.ConversationBlip r1, r10;
        com.google.wave.api.data.converter.v22.EventDataConverterV22 r11;
        java.lang.Object $r4, $r9;
        org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread r5;
        boolean $z0, $z1;

        r11 := @this: com.google.wave.api.data.converter.v22.EventDataConverterV22;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationBlip;

        $r0 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.conversation.ConversationBlip: java.lang.Iterable locateReplyThreads()>();

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread) $r4;

        $r6 = virtualinvoke r5.<org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread: org.waveprotocol.wave.model.conversation.ConversationThread getThread()>();

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.conversation.ConversationThread: java.lang.Iterable getBlips()>();

        $r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.waveprotocol.wave.model.conversation.ConversationBlip) $r9;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r10);

        goto label2;

     label3:
        goto label1;

     label4:
        return $r0;
    }

    public org.waveprotocol.wave.model.conversation.ConversationBlip findBlipParent(org.waveprotocol.wave.model.conversation.ConversationBlip)
    {
        org.waveprotocol.wave.model.conversation.ConversationBlip r0, $r2;
        com.google.wave.api.data.converter.v22.EventDataConverterV22 r3;
        org.waveprotocol.wave.model.conversation.ConversationThread $r1;

        r3 := @this: com.google.wave.api.data.converter.v22.EventDataConverterV22;

        r0 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationBlip;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.conversation.ConversationBlip: org.waveprotocol.wave.model.conversation.ConversationThread getThread()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.conversation.ConversationThread: org.waveprotocol.wave.model.conversation.ConversationBlip getParentBlip()>();

        return $r2;
    }

    private static void addThread(com.google.wave.api.impl.EventMessageBundle, org.waveprotocol.wave.model.conversation.ConversationThread, int, org.waveprotocol.wave.model.wave.Wavelet)
    {
        com.google.wave.api.impl.EventMessageBundle r2;
        java.lang.Iterable $r5, $r15;
        org.waveprotocol.wave.model.conversation.ConversationBlip $r3, r10;
        com.google.wave.api.data.ApiView $r22;
        int i0, $i2, $i4;
        java.lang.String $r1, $r8, $r11, $r18, $r20;
        org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread r21;
        java.util.LinkedList $r4;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r6, $r16;
        org.waveprotocol.wave.model.conversation.ConversationThread r0, $r19;
        org.waveprotocol.wave.model.document.Document $r13;
        com.google.wave.api.BlipThread $r23;
        org.waveprotocol.wave.model.wave.Wavelet r14;
        java.lang.Object $r9, $r17;

        r2 := @parameter0: com.google.wave.api.impl.EventMessageBundle;

        r0 := @parameter1: org.waveprotocol.wave.model.conversation.ConversationThread;

        i0 := @parameter2: int;

        r14 := @parameter3: org.waveprotocol.wave.model.wave.Wavelet;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.conversation.ConversationThread: java.lang.String getId()>();

        $z0 = virtualinvoke r2.<com.google.wave.api.impl.EventMessageBundle: boolean hasThreadId(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.model.conversation.ConversationThread: org.waveprotocol.wave.model.conversation.ConversationBlip getParentBlip()>();

        $i2 = (int) -1;

        if i0 != $i2 goto label4;

        $r15 = interfaceinvoke $r3.<org.waveprotocol.wave.model.conversation.ConversationBlip: java.lang.Iterable locateReplyThreads()>();

        $r16 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread) $r17;

        $r18 = interfaceinvoke r0.<org.waveprotocol.wave.model.conversation.ConversationThread: java.lang.String getId()>();

        $r19 = virtualinvoke r21.<org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread: org.waveprotocol.wave.model.conversation.ConversationThread getThread()>();

        $r20 = interfaceinvoke $r19.<org.waveprotocol.wave.model.conversation.ConversationThread: java.lang.String getId()>();

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z2 == 0 goto label3;

        i0 = virtualinvoke r21.<org.waveprotocol.wave.model.conversation.ConversationBlip$LocatedReplyThread: int getLocation()>();

        goto label4;

     label3:
        goto label2;

     label4:
        $i4 = (int) -1;

        if i0 == $i4 goto label5;

        $r22 = new com.google.wave.api.data.ApiView;

        $r13 = interfaceinvoke $r3.<org.waveprotocol.wave.model.conversation.ConversationBlip: org.waveprotocol.wave.model.document.Document getContent()>();

        specialinvoke $r22.<com.google.wave.api.data.ApiView: void <init>(org.waveprotocol.wave.model.document.Document,org.waveprotocol.wave.model.wave.Wavelet)>($r13, r14);

        i0 = virtualinvoke $r22.<com.google.wave.api.data.ApiView: int transformToTextOffset(int)>(i0);

     label5:
        $r4 = staticinvoke <com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>();

        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.model.conversation.ConversationThread: java.lang.Iterable getBlips()>();

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.waveprotocol.wave.model.conversation.ConversationBlip) $r9;

        $r11 = interfaceinvoke r10.<org.waveprotocol.wave.model.conversation.ConversationBlip: java.lang.String getId()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label6;

     label7:
        $r23 = new com.google.wave.api.BlipThread;

        $r8 = interfaceinvoke r0.<org.waveprotocol.wave.model.conversation.ConversationThread: java.lang.String getId()>();

        specialinvoke $r23.<com.google.wave.api.BlipThread: void <init>(java.lang.String,int,java.util.List,java.util.Map)>($r8, i0, $r4, null);

        virtualinvoke r2.<com.google.wave.api.impl.EventMessageBundle: void addThread(java.lang.String,com.google.wave.api.BlipThread)>($r1, $r23);

        return;
    }
}
