class ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder extends ucar.nc2.dataset.transform.AbstractCoordTransBuilder
{
    final ucar.nc2.dataset.conv.CSMConvention this$0;

    private void <init>(ucar.nc2.dataset.conv.CSMConvention)
    {
        ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder r0;
        ucar.nc2.dataset.conv.CSMConvention r1;

        r0 := @this: ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder;

        r1 := @parameter0: ucar.nc2.dataset.conv.CSMConvention;

        r0.<ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder: ucar.nc2.dataset.conv.CSMConvention this$0> = r1;

        specialinvoke r0.<ucar.nc2.dataset.transform.AbstractCoordTransBuilder: void <init>()>();

        return;
    }

    public java.lang.String getTransformName()
    {
        ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder r0;

        r0 := @this: ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder;

        return "csm_sigma_level";
    }

    public ucar.nc2.dataset.TransformType getTransformType()
    {
        ucar.nc2.dataset.TransformType $r0;
        ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder r1;

        r1 := @this: ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder;

        $r0 = <ucar.nc2.dataset.TransformType: ucar.nc2.dataset.TransformType Vertical>;

        return $r0;
    }

    public ucar.nc2.dataset.CoordinateTransform makeCoordinateTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable)
    {
        java.lang.Object[] $r18;
        java.util.Formatter $r17;
        ucar.nc2.dataset.VerticalCT $r0;
        ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder r7;
        ucar.nc2.dataset.conv.CSMConvention $r8, $r13, $r14, $r15, $r16;
        ucar.nc2.Variable r3;
        java.lang.String $r4, $r6, $r9, $r19;
        boolean $z0, $z1, $z2;
        ucar.unidata.util.Parameter $r11;
        ucar.nc2.dataset.VerticalCT$Type $r10;
        java.lang.StringBuilder $r1, $r2, $r5;
        ucar.nc2.dataset.NetcdfDataset r12;

        r7 := @this: ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder;

        r12 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.Variable;

        $r0 = new ucar.nc2.dataset.VerticalCT;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sigma-");

        $r4 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r7.<ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder: ucar.nc2.dataset.conv.CSMConvention this$0>;

        $r9 = staticinvoke <ucar.nc2.dataset.conv.CSMConvention: java.lang.String access$300(ucar.nc2.dataset.conv.CSMConvention)>($r8);

        $r10 = <ucar.nc2.dataset.VerticalCT$Type: ucar.nc2.dataset.VerticalCT$Type Sigma>;

        specialinvoke $r0.<ucar.nc2.dataset.VerticalCT: void <init>(java.lang.String,java.lang.String,ucar.nc2.dataset.VerticalCT$Type,ucar.nc2.dataset.CoordTransBuilderIF)>($r6, $r9, $r10, r7);

        $r11 = new ucar.unidata.util.Parameter;

        specialinvoke $r11.<ucar.unidata.util.Parameter: void <init>(java.lang.String,java.lang.String)>("formula", "pressure(x,y,z) = ptop + sigma(z)*(surfacePressure(x,y)-ptop)");

        virtualinvoke $r0.<ucar.nc2.dataset.CoordinateTransform: void addParameter(ucar.unidata.util.Parameter)>($r11);

        $r13 = r7.<ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder: ucar.nc2.dataset.conv.CSMConvention this$0>;

        $z0 = virtualinvoke $r13.<ucar.nc2.dataset.conv.CSMConvention: boolean addParameter2(ucar.nc2.dataset.CoordinateTransform,java.lang.String,ucar.nc2.NetcdfFile,ucar.nc2.Variable,java.lang.String,boolean)>($r0, "SurfacePressure_variableName", r12, r3, "PS_var", 0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r14 = r7.<ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder: ucar.nc2.dataset.conv.CSMConvention this$0>;

        $z1 = virtualinvoke $r14.<ucar.nc2.dataset.conv.CSMConvention: boolean addParameter2(ucar.nc2.dataset.CoordinateTransform,java.lang.String,ucar.nc2.NetcdfFile,ucar.nc2.Variable,java.lang.String,boolean)>($r0, "Sigma_variableName", r12, r3, "B_var", 0);

        if $z1 != 0 goto label2;

        return null;

     label2:
        $r15 = r7.<ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder: ucar.nc2.dataset.conv.CSMConvention this$0>;

        $z2 = virtualinvoke $r15.<ucar.nc2.dataset.conv.CSMConvention: boolean addParameter2(ucar.nc2.dataset.CoordinateTransform,java.lang.String,ucar.nc2.NetcdfFile,ucar.nc2.Variable,java.lang.String,boolean)>($r0, "PressureTop_variableName", r12, r3, "P0_var", 0);

        if $z2 != 0 goto label3;

        return null;

     label3:
        $r16 = r7.<ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder: ucar.nc2.dataset.conv.CSMConvention this$0>;

        $r17 = staticinvoke <ucar.nc2.dataset.conv.CSMConvention: java.util.Formatter access$400(ucar.nc2.dataset.conv.CSMConvention)>($r16);

        $r18 = newarray (java.lang.Object)[1];

        $r19 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $r18[0] = $r19;

        virtualinvoke $r17.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CSMConvention made SigmaCT %s\n", $r18);

        return $r0;
    }

    public ucar.unidata.geoloc.vertical.VerticalTransform makeMathTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Dimension, ucar.nc2.dataset.VerticalCT)
    {
        java.util.List $r4;
        ucar.nc2.dataset.VerticalCT r3;
        ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder r5;
        ucar.nc2.Dimension r2;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.unidata.geoloc.vertical.AtmosSigma $r0;

        r5 := @this: ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.Dimension;

        r3 := @parameter2: ucar.nc2.dataset.VerticalCT;

        $r0 = new ucar.unidata.geoloc.vertical.AtmosSigma;

        $r4 = virtualinvoke r3.<ucar.nc2.dataset.VerticalCT: java.util.List getParameters()>();

        specialinvoke $r0.<ucar.unidata.geoloc.vertical.AtmosSigma: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Dimension,java.util.List)>(r1, r2, $r4);

        return $r0;
    }

    void <init>(ucar.nc2.dataset.conv.CSMConvention, ucar.nc2.dataset.conv.CSMConvention$1)
    {
        ucar.nc2.dataset.conv.CSMConvention$1 r2;
        ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder r0;
        ucar.nc2.dataset.conv.CSMConvention r1;

        r0 := @this: ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder;

        r1 := @parameter0: ucar.nc2.dataset.conv.CSMConvention;

        r2 := @parameter1: ucar.nc2.dataset.conv.CSMConvention$1;

        specialinvoke r0.<ucar.nc2.dataset.conv.CSMConvention$SigmaBuilder: void <init>(ucar.nc2.dataset.conv.CSMConvention)>(r1);

        return;
    }
}
