public final class org.apache.poi.hssf.record.RecordFactory extends java.lang.Object
{
    private static final int NUM_RECORDS;
    private static final java.lang.Class[] CONSTRUCTOR_ARGS;
    private static final java.lang.Class[] recordClasses;
    private static final java.util.Map _recordCreatorsById;
    private static short[] _allKnownRecordSIDs;

    public void <init>()
    {
        org.apache.poi.hssf.record.RecordFactory r0;

        r0 := @this: org.apache.poi.hssf.record.RecordFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Class getRecordClass(int)
    {
        org.apache.poi.hssf.record.RecordFactory$I_RecordCreator r3;
        java.util.Map $r0;
        int i0;
        java.lang.Object $r2;
        java.lang.Class $r4;
        java.lang.Integer $r1;

        i0 := @parameter0: int;

        $r0 = <org.apache.poi.hssf.record.RecordFactory: java.util.Map _recordCreatorsById>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (org.apache.poi.hssf.record.RecordFactory$I_RecordCreator) $r2;

        if r3 != null goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke r3.<org.apache.poi.hssf.record.RecordFactory$I_RecordCreator: java.lang.Class getRecordClass()>();

        return $r4;
    }

    public static org.apache.poi.hssf.record.Record[] createRecord(org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.hssf.record.Record $r1;
        org.apache.poi.hssf.record.NumberRecord $r7;
        org.apache.poi.hssf.record.Record[] $r2, $r5, $r8;
        org.apache.poi.hssf.record.NumberRecord[] $r4;
        org.apache.poi.hssf.record.RKRecord $r6;
        org.apache.poi.hssf.record.RecordInputStream r0;
        org.apache.poi.hssf.record.MulRKRecord $r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        $r1 = staticinvoke <org.apache.poi.hssf.record.RecordFactory: org.apache.poi.hssf.record.Record createSingleRecord(org.apache.poi.hssf.record.RecordInputStream)>(r0);

        $z0 = $r1 instanceof org.apache.poi.hssf.record.DBCellRecord;

        if $z0 == 0 goto label1;

        $r8 = newarray (org.apache.poi.hssf.record.Record)[1];

        $r8[0] = null;

        return $r8;

     label1:
        $z1 = $r1 instanceof org.apache.poi.hssf.record.RKRecord;

        if $z1 == 0 goto label2;

        $r5 = newarray (org.apache.poi.hssf.record.Record)[1];

        $r6 = (org.apache.poi.hssf.record.RKRecord) $r1;

        $r7 = staticinvoke <org.apache.poi.hssf.record.RecordFactory: org.apache.poi.hssf.record.NumberRecord convertToNumberRecord(org.apache.poi.hssf.record.RKRecord)>($r6);

        $r5[0] = $r7;

        return $r5;

     label2:
        $z2 = $r1 instanceof org.apache.poi.hssf.record.MulRKRecord;

        if $z2 == 0 goto label3;

        $r3 = (org.apache.poi.hssf.record.MulRKRecord) $r1;

        $r4 = staticinvoke <org.apache.poi.hssf.record.RecordFactory: org.apache.poi.hssf.record.NumberRecord[] convertRKRecords(org.apache.poi.hssf.record.MulRKRecord)>($r3);

        return $r4;

     label3:
        $r2 = newarray (org.apache.poi.hssf.record.Record)[1];

        $r2[0] = $r1;

        return $r2;
    }

    public static org.apache.poi.hssf.record.Record createSingleRecord(org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.hssf.record.Record $r5;
        org.apache.poi.hssf.record.UnknownRecord $r7;
        java.lang.Integer $r2;
        short $s0;
        org.apache.poi.hssf.record.RecordFactory$I_RecordCreator r4;
        org.apache.poi.hssf.record.RecordInputStream r0;
        java.util.Map $r1;
        int $i1;
        java.lang.Object $r3;

        r0 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        $r1 = <org.apache.poi.hssf.record.RecordFactory: java.util.Map _recordCreatorsById>;

        $s0 = virtualinvoke r0.<org.apache.poi.hssf.record.RecordInputStream: short getSid()>();

        $i1 = (int) $s0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (org.apache.poi.hssf.record.RecordFactory$I_RecordCreator) $r3;

        if r4 != null goto label1;

        $r7 = new org.apache.poi.hssf.record.UnknownRecord;

        specialinvoke $r7.<org.apache.poi.hssf.record.UnknownRecord: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r0);

        return $r7;

     label1:
        $r5 = interfaceinvoke r4.<org.apache.poi.hssf.record.RecordFactory$I_RecordCreator: org.apache.poi.hssf.record.Record create(org.apache.poi.hssf.record.RecordInputStream)>(r0);

        return $r5;
    }

    public static org.apache.poi.hssf.record.NumberRecord convertToNumberRecord(org.apache.poi.hssf.record.RKRecord)
    {
        org.apache.poi.hssf.record.RKRecord r1;
        short $s0, $s2;
        org.apache.poi.hssf.record.NumberRecord $r0;
        int $i1;
        double $d0;

        r1 := @parameter0: org.apache.poi.hssf.record.RKRecord;

        $r0 = new org.apache.poi.hssf.record.NumberRecord;

        specialinvoke $r0.<org.apache.poi.hssf.record.NumberRecord: void <init>()>();

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.RKRecord: short getColumn()>();

        virtualinvoke $r0.<org.apache.poi.hssf.record.NumberRecord: void setColumn(short)>($s0);

        $i1 = virtualinvoke r1.<org.apache.poi.hssf.record.RKRecord: int getRow()>();

        virtualinvoke $r0.<org.apache.poi.hssf.record.NumberRecord: void setRow(int)>($i1);

        $s2 = virtualinvoke r1.<org.apache.poi.hssf.record.RKRecord: short getXFIndex()>();

        virtualinvoke $r0.<org.apache.poi.hssf.record.NumberRecord: void setXFIndex(short)>($s2);

        $d0 = virtualinvoke r1.<org.apache.poi.hssf.record.RKRecord: double getRKNumber()>();

        virtualinvoke $r0.<org.apache.poi.hssf.record.NumberRecord: void setValue(double)>($d0);

        return $r0;
    }

    public static org.apache.poi.hssf.record.NumberRecord[] convertRKRecords(org.apache.poi.hssf.record.MulRKRecord)
    {
        org.apache.poi.hssf.record.NumberRecord $r3;
        org.apache.poi.hssf.record.NumberRecord[] r1;
        short $s2, $s4, $s6;
        org.apache.poi.hssf.record.MulRKRecord r0;
        int $i0, $i1, $i3, $i5, i7, $i8;
        double $d0;

        r0 := @parameter0: org.apache.poi.hssf.record.MulRKRecord;

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.record.MulRKRecord: int getNumColumns()>();

        r1 = newarray (org.apache.poi.hssf.record.NumberRecord)[$i0];

        i7 = 0;

     label1:
        $i1 = virtualinvoke r0.<org.apache.poi.hssf.record.MulRKRecord: int getNumColumns()>();

        if i7 >= $i1 goto label2;

        $r3 = new org.apache.poi.hssf.record.NumberRecord;

        specialinvoke $r3.<org.apache.poi.hssf.record.NumberRecord: void <init>()>();

        $s2 = virtualinvoke r0.<org.apache.poi.hssf.record.MulRKRecord: short getFirstColumn()>();

        $i8 = (int) $s2;

        $i3 = i7 + $i8;

        $s4 = (short) $i3;

        virtualinvoke $r3.<org.apache.poi.hssf.record.NumberRecord: void setColumn(short)>($s4);

        $i5 = virtualinvoke r0.<org.apache.poi.hssf.record.MulRKRecord: int getRow()>();

        virtualinvoke $r3.<org.apache.poi.hssf.record.NumberRecord: void setRow(int)>($i5);

        $s6 = virtualinvoke r0.<org.apache.poi.hssf.record.MulRKRecord: short getXFAt(int)>(i7);

        virtualinvoke $r3.<org.apache.poi.hssf.record.NumberRecord: void setXFIndex(short)>($s6);

        $d0 = virtualinvoke r0.<org.apache.poi.hssf.record.MulRKRecord: double getRKNumberAt(int)>(i7);

        virtualinvoke $r3.<org.apache.poi.hssf.record.NumberRecord: void setValue(double)>($d0);

        r1[i7] = $r3;

        i7 = i7 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static org.apache.poi.hssf.record.BlankRecord[] convertBlankRecords(org.apache.poi.hssf.record.MulBlankRecord)
    {
        org.apache.poi.hssf.record.BlankRecord[] r1;
        short $s4, $s6;
        org.apache.poi.hssf.record.MulBlankRecord r0;
        int $i0, $i1, $i2, $i3, $i5, i7;
        org.apache.poi.hssf.record.BlankRecord $r2;

        r0 := @parameter0: org.apache.poi.hssf.record.MulBlankRecord;

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.record.MulBlankRecord: int getNumColumns()>();

        r1 = newarray (org.apache.poi.hssf.record.BlankRecord)[$i0];

        i7 = 0;

     label1:
        $i1 = virtualinvoke r0.<org.apache.poi.hssf.record.MulBlankRecord: int getNumColumns()>();

        if i7 >= $i1 goto label2;

        $r2 = new org.apache.poi.hssf.record.BlankRecord;

        specialinvoke $r2.<org.apache.poi.hssf.record.BlankRecord: void <init>()>();

        $i2 = virtualinvoke r0.<org.apache.poi.hssf.record.MulBlankRecord: int getFirstColumn()>();

        $i3 = i7 + $i2;

        $s4 = (short) $i3;

        virtualinvoke $r2.<org.apache.poi.hssf.record.BlankRecord: void setColumn(short)>($s4);

        $i5 = virtualinvoke r0.<org.apache.poi.hssf.record.MulBlankRecord: int getRow()>();

        virtualinvoke $r2.<org.apache.poi.hssf.record.BlankRecord: void setRow(int)>($i5);

        $s6 = virtualinvoke r0.<org.apache.poi.hssf.record.MulBlankRecord: short getXFAt(int)>(i7);

        virtualinvoke $r2.<org.apache.poi.hssf.record.BlankRecord: void setXFIndex(short)>($s6);

        r1[i7] = $r2;

        i7 = i7 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static short[] getAllKnownRecordSIDs()
    {
        java.lang.Integer r10;
        short $s2;
        java.util.Map $r4, $r6;
        int $i0, $i1, i3;
        boolean $z0;
        java.util.Iterator $r8;
        java.util.Set $r7;
        java.lang.Object $r2, $r9;
        short[] $r0, $r1, $r3, r5;

        $r0 = <org.apache.poi.hssf.record.RecordFactory: short[] _allKnownRecordSIDs>;

        if $r0 != null goto label3;

        $r4 = <org.apache.poi.hssf.record.RecordFactory: java.util.Map _recordCreatorsById>;

        $i0 = interfaceinvoke $r4.<java.util.Map: int size()>();

        r5 = newarray (short)[$i0];

        i3 = 0;

        $r6 = <org.apache.poi.hssf.record.RecordFactory: java.util.Map _recordCreatorsById>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.Integer) $r9;

        $i1 = i3;

        i3 = i3 + 1;

        $s2 = virtualinvoke r10.<java.lang.Integer: short shortValue()>();

        r5[$i1] = $s2;

        goto label1;

     label2:
        staticinvoke <java.util.Arrays: void sort(short[])>(r5);

        <org.apache.poi.hssf.record.RecordFactory: short[] _allKnownRecordSIDs> = r5;

     label3:
        $r1 = <org.apache.poi.hssf.record.RecordFactory: short[] _allKnownRecordSIDs>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (short[]) $r2;

        return $r3;
    }

    private static java.util.Map recordsToMap(java.lang.Class[])
    {
        java.lang.Integer $r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Exception $r46;
        java.lang.StringBuilder $r13, $r16, $r17, $r19, $r20, $r22, $r23, $r27, $r29, $r30, $r34, $r36, $r37, $r41, $r43, $r44, $r50, $r52, $r54, $r57;
        java.util.HashMap $r48;
        java.util.HashSet $r49;
        short $s5;
        org.apache.poi.hssf.record.RecordFormatException $r56;
        int $i0, $i1, $i2, $i3, $i4, i6, $i7, $i8;
        java.lang.String $r14, $r15, $r18, $r21, $r24, $r28, $r31, $r35, $r38, $r42, $r45;
        java.lang.Class[] r2;
        java.lang.RuntimeException $r51, $r53, $r55, $r58;
        java.lang.reflect.Field $r5;
        org.apache.poi.hssf.record.RecordFactory$I_RecordCreator $r7, $r9;
        java.lang.Class r3, $r4, $r10;
        java.lang.Object $r8;

        r2 := @parameter0: java.lang.Class[];

        $r48 = new java.util.HashMap;

        specialinvoke $r48.<java.util.HashMap: void <init>()>();

        $r49 = new java.util.HashSet;

        $i0 = lengthof r2;

        $i1 = $i0 * 3;

        $i2 = $i1 / 2;

        specialinvoke $r49.<java.util.HashSet: void <init>(int)>($i2);

        i6 = 0;

     label1:
        $i3 = lengthof r2;

        if i6 >= $i3 goto label9;

        r3 = r2[i6];

        $r4 = class "Lorg/apache/poi/hssf/record/Record;";

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);

        if $z0 != 0 goto label2;

        $r51 = new java.lang.RuntimeException;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid record sub-class (");

        $r42 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.lang.RuntimeException: void <init>(java.lang.String)>($r45);

        throw $r51;

     label2:
        $i4 = virtualinvoke r3.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i4);

        if $z1 == 0 goto label3;

        $r53 = new java.lang.RuntimeException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid record class (");

        $r35 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - must not be abstract");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<java.lang.RuntimeException: void <init>(java.lang.String)>($r38);

        throw $r53;

     label3:
        $z2 = interfaceinvoke $r49.<java.util.Set: boolean add(java.lang.Object)>(r3);

        if $z2 != 0 goto label4;

        $r55 = new java.lang.RuntimeException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("duplicate record class (");

        $r28 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<java.lang.RuntimeException: void <init>(java.lang.String)>($r31);

        throw $r55;

     label4:
        $r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("sid");

        $s5 = virtualinvoke $r5.<java.lang.reflect.Field: short getShort(java.lang.Object)>(null);

     label5:
        goto label7;

     label6:
        $r46 := @caughtexception;

        $r56 = new org.apache.poi.hssf.record.RecordFormatException;

        specialinvoke $r56.<org.apache.poi.hssf.record.RecordFormatException: void <init>(java.lang.String)>("Unable to determine record types");

        throw $r56;

     label7:
        $i7 = (int) $s5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $z3 = interfaceinvoke $r48.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z3 == 0 goto label8;

        $r8 = interfaceinvoke $r48.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (org.apache.poi.hssf.record.RecordFactory$I_RecordCreator) $r8;

        $r10 = interfaceinvoke $r9.<org.apache.poi.hssf.record.RecordFactory$I_RecordCreator: java.lang.Class getRecordClass()>();

        $r58 = new java.lang.RuntimeException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("duplicate record sid 0x");

        $i8 = (int) $s5;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i8);

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String toUpperCase()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for classes (");

        $r18 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") and (");

        $r21 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);

        throw $r58;

     label8:
        $r7 = staticinvoke <org.apache.poi.hssf.record.RecordFactory: org.apache.poi.hssf.record.RecordFactory$I_RecordCreator getRecordCreator(java.lang.Class)>(r3);

        interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        i6 = i6 + 1;

        goto label1;

     label9:
        return $r48;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    private static org.apache.poi.hssf.record.RecordFactory$I_RecordCreator getRecordCreator(java.lang.Class)
    {
        java.lang.NoSuchMethodException $r4, $r12;
        java.lang.reflect.Constructor $r2;
        org.apache.poi.hssf.record.RecordFactory$ReflectionMethodRecordCreator $r15;
        java.lang.String $r8, $r11;
        java.lang.reflect.Method $r14;
        org.apache.poi.hssf.record.RecordFactory$ReflectionConstructorRecordCreator $r3;
        java.lang.Class[] $r1, $r13;
        java.lang.RuntimeException $r5;
        java.lang.Class r0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;

        r0 := @parameter0: java.lang.Class;

     label1:
        $r1 = <org.apache.poi.hssf.record.RecordFactory: java.lang.Class[] CONSTRUCTOR_ARGS>;

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        $r3 = new org.apache.poi.hssf.record.RecordFactory$ReflectionConstructorRecordCreator;

        specialinvoke $r3.<org.apache.poi.hssf.record.RecordFactory$ReflectionConstructorRecordCreator: void <init>(java.lang.reflect.Constructor)>($r2);

     label2:
        return $r3;

     label3:
        $r12 := @caughtexception;

     label4:
        $r13 = <org.apache.poi.hssf.record.RecordFactory: java.lang.Class[] CONSTRUCTOR_ARGS>;

        $r14 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("create", $r13);

        $r15 = new org.apache.poi.hssf.record.RecordFactory$ReflectionMethodRecordCreator;

        specialinvoke $r15.<org.apache.poi.hssf.record.RecordFactory$ReflectionMethodRecordCreator: void <init>(java.lang.reflect.Method)>($r14);

     label5:
        return $r15;

     label6:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find constructor or create method for (");

        $r8 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r5;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label4 to label5 with label6;
    }

    public static java.util.List createRecords(java.io.InputStream) throws org.apache.poi.hssf.record.RecordFormatException
    {
        org.apache.poi.hssf.record.Record $r3;
        org.apache.poi.hssf.record.RecordFactoryInputStream $r1;
        java.util.ArrayList $r0;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(512);

        $r1 = new org.apache.poi.hssf.record.RecordFactoryInputStream;

        specialinvoke $r1.<org.apache.poi.hssf.record.RecordFactoryInputStream: void <init>(java.io.InputStream,boolean)>(r2, 1);

     label1:
        $r3 = virtualinvoke $r1.<org.apache.poi.hssf.record.RecordFactoryInputStream: org.apache.poi.hssf.record.Record nextRecord()>();

        if $r3 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return $r0;
    }

    static void <clinit>()
    {
        java.util.Map $r3;
        java.lang.Class[] $r0, $r1, $r2;

        <org.apache.poi.hssf.record.RecordFactory: int NUM_RECORDS> = 512;

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "Lorg/apache/poi/hssf/record/RecordInputStream;";

        <org.apache.poi.hssf.record.RecordFactory: java.lang.Class[] CONSTRUCTOR_ARGS> = $r0;

        $r1 = newarray (java.lang.Class)[136];

        $r1[0] = class "Lorg/apache/poi/hssf/record/ArrayRecord;";

        $r1[1] = class "Lorg/apache/poi/hssf/record/AutoFilterInfoRecord;";

        $r1[2] = class "Lorg/apache/poi/hssf/record/BackupRecord;";

        $r1[3] = class "Lorg/apache/poi/hssf/record/BlankRecord;";

        $r1[4] = class "Lorg/apache/poi/hssf/record/BOFRecord;";

        $r1[5] = class "Lorg/apache/poi/hssf/record/BookBoolRecord;";

        $r1[6] = class "Lorg/apache/poi/hssf/record/BoolErrRecord;";

        $r1[7] = class "Lorg/apache/poi/hssf/record/BottomMarginRecord;";

        $r1[8] = class "Lorg/apache/poi/hssf/record/BoundSheetRecord;";

        $r1[9] = class "Lorg/apache/poi/hssf/record/CalcCountRecord;";

        $r1[10] = class "Lorg/apache/poi/hssf/record/CalcModeRecord;";

        $r1[11] = class "Lorg/apache/poi/hssf/record/CFHeaderRecord;";

        $r1[12] = class "Lorg/apache/poi/hssf/record/CFRuleRecord;";

        $r1[13] = class "Lorg/apache/poi/hssf/record/chart/ChartRecord;";

        $r1[14] = class "Lorg/apache/poi/hssf/record/chart/ChartTitleFormatRecord;";

        $r1[15] = class "Lorg/apache/poi/hssf/record/CodepageRecord;";

        $r1[16] = class "Lorg/apache/poi/hssf/record/ColumnInfoRecord;";

        $r1[17] = class "Lorg/apache/poi/hssf/record/ContinueRecord;";

        $r1[18] = class "Lorg/apache/poi/hssf/record/CountryRecord;";

        $r1[19] = class "Lorg/apache/poi/hssf/record/CRNCountRecord;";

        $r1[20] = class "Lorg/apache/poi/hssf/record/CRNRecord;";

        $r1[21] = class "Lorg/apache/poi/hssf/record/DateWindow1904Record;";

        $r1[22] = class "Lorg/apache/poi/hssf/record/DBCellRecord;";

        $r1[23] = class "Lorg/apache/poi/hssf/record/DConRefRecord;";

        $r1[24] = class "Lorg/apache/poi/hssf/record/DefaultColWidthRecord;";

        $r1[25] = class "Lorg/apache/poi/hssf/record/DefaultRowHeightRecord;";

        $r1[26] = class "Lorg/apache/poi/hssf/record/DeltaRecord;";

        $r1[27] = class "Lorg/apache/poi/hssf/record/DimensionsRecord;";

        $r1[28] = class "Lorg/apache/poi/hssf/record/DrawingGroupRecord;";

        $r1[29] = class "Lorg/apache/poi/hssf/record/DrawingRecord;";

        $r1[30] = class "Lorg/apache/poi/hssf/record/DrawingSelectionRecord;";

        $r1[31] = class "Lorg/apache/poi/hssf/record/DSFRecord;";

        $r1[32] = class "Lorg/apache/poi/hssf/record/DVALRecord;";

        $r1[33] = class "Lorg/apache/poi/hssf/record/DVRecord;";

        $r1[34] = class "Lorg/apache/poi/hssf/record/EOFRecord;";

        $r1[35] = class "Lorg/apache/poi/hssf/record/ExtendedFormatRecord;";

        $r1[36] = class "Lorg/apache/poi/hssf/record/ExternalNameRecord;";

        $r1[37] = class "Lorg/apache/poi/hssf/record/ExternSheetRecord;";

        $r1[38] = class "Lorg/apache/poi/hssf/record/ExtSSTRecord;";

        $r1[39] = class "Lorg/apache/poi/hssf/record/FeatRecord;";

        $r1[40] = class "Lorg/apache/poi/hssf/record/FeatHdrRecord;";

        $r1[41] = class "Lorg/apache/poi/hssf/record/FilePassRecord;";

        $r1[42] = class "Lorg/apache/poi/hssf/record/FileSharingRecord;";

        $r1[43] = class "Lorg/apache/poi/hssf/record/FnGroupCountRecord;";

        $r1[44] = class "Lorg/apache/poi/hssf/record/FontRecord;";

        $r1[45] = class "Lorg/apache/poi/hssf/record/FooterRecord;";

        $r1[46] = class "Lorg/apache/poi/hssf/record/FormatRecord;";

        $r1[47] = class "Lorg/apache/poi/hssf/record/FormulaRecord;";

        $r1[48] = class "Lorg/apache/poi/hssf/record/GridsetRecord;";

        $r1[49] = class "Lorg/apache/poi/hssf/record/GutsRecord;";

        $r1[50] = class "Lorg/apache/poi/hssf/record/HCenterRecord;";

        $r1[51] = class "Lorg/apache/poi/hssf/record/HeaderRecord;";

        $r1[52] = class "Lorg/apache/poi/hssf/record/HeaderFooterRecord;";

        $r1[53] = class "Lorg/apache/poi/hssf/record/HideObjRecord;";

        $r1[54] = class "Lorg/apache/poi/hssf/record/HorizontalPageBreakRecord;";

        $r1[55] = class "Lorg/apache/poi/hssf/record/HyperlinkRecord;";

        $r1[56] = class "Lorg/apache/poi/hssf/record/IndexRecord;";

        $r1[57] = class "Lorg/apache/poi/hssf/record/InterfaceEndRecord;";

        $r1[58] = class "Lorg/apache/poi/hssf/record/InterfaceHdrRecord;";

        $r1[59] = class "Lorg/apache/poi/hssf/record/IterationRecord;";

        $r1[60] = class "Lorg/apache/poi/hssf/record/LabelRecord;";

        $r1[61] = class "Lorg/apache/poi/hssf/record/LabelSSTRecord;";

        $r1[62] = class "Lorg/apache/poi/hssf/record/LeftMarginRecord;";

        $r1[63] = class "Lorg/apache/poi/hssf/record/chart/LegendRecord;";

        $r1[64] = class "Lorg/apache/poi/hssf/record/MergeCellsRecord;";

        $r1[65] = class "Lorg/apache/poi/hssf/record/MMSRecord;";

        $r1[66] = class "Lorg/apache/poi/hssf/record/MulBlankRecord;";

        $r1[67] = class "Lorg/apache/poi/hssf/record/MulRKRecord;";

        $r1[68] = class "Lorg/apache/poi/hssf/record/NameRecord;";

        $r1[69] = class "Lorg/apache/poi/hssf/record/NameCommentRecord;";

        $r1[70] = class "Lorg/apache/poi/hssf/record/NoteRecord;";

        $r1[71] = class "Lorg/apache/poi/hssf/record/NumberRecord;";

        $r1[72] = class "Lorg/apache/poi/hssf/record/ObjectProtectRecord;";

        $r1[73] = class "Lorg/apache/poi/hssf/record/ObjRecord;";

        $r1[74] = class "Lorg/apache/poi/hssf/record/PaletteRecord;";

        $r1[75] = class "Lorg/apache/poi/hssf/record/PaneRecord;";

        $r1[76] = class "Lorg/apache/poi/hssf/record/PasswordRecord;";

        $r1[77] = class "Lorg/apache/poi/hssf/record/PasswordRev4Record;";

        $r1[78] = class "Lorg/apache/poi/hssf/record/PrecisionRecord;";

        $r1[79] = class "Lorg/apache/poi/hssf/record/PrintGridlinesRecord;";

        $r1[80] = class "Lorg/apache/poi/hssf/record/PrintHeadersRecord;";

        $r1[81] = class "Lorg/apache/poi/hssf/record/PrintSetupRecord;";

        $r1[82] = class "Lorg/apache/poi/hssf/record/ProtectionRev4Record;";

        $r1[83] = class "Lorg/apache/poi/hssf/record/ProtectRecord;";

        $r1[84] = class "Lorg/apache/poi/hssf/record/RecalcIdRecord;";

        $r1[85] = class "Lorg/apache/poi/hssf/record/RefModeRecord;";

        $r1[86] = class "Lorg/apache/poi/hssf/record/RefreshAllRecord;";

        $r1[87] = class "Lorg/apache/poi/hssf/record/RightMarginRecord;";

        $r1[88] = class "Lorg/apache/poi/hssf/record/RKRecord;";

        $r1[89] = class "Lorg/apache/poi/hssf/record/RowRecord;";

        $r1[90] = class "Lorg/apache/poi/hssf/record/SaveRecalcRecord;";

        $r1[91] = class "Lorg/apache/poi/hssf/record/ScenarioProtectRecord;";

        $r1[92] = class "Lorg/apache/poi/hssf/record/SelectionRecord;";

        $r1[93] = class "Lorg/apache/poi/hssf/record/chart/SeriesRecord;";

        $r1[94] = class "Lorg/apache/poi/hssf/record/chart/SeriesTextRecord;";

        $r1[95] = class "Lorg/apache/poi/hssf/record/SharedFormulaRecord;";

        $r1[96] = class "Lorg/apache/poi/hssf/record/SSTRecord;";

        $r1[97] = class "Lorg/apache/poi/hssf/record/StringRecord;";

        $r1[98] = class "Lorg/apache/poi/hssf/record/StyleRecord;";

        $r1[99] = class "Lorg/apache/poi/hssf/record/SupBookRecord;";

        $r1[100] = class "Lorg/apache/poi/hssf/record/TabIdRecord;";

        $r1[101] = class "Lorg/apache/poi/hssf/record/TableRecord;";

        $r1[102] = class "Lorg/apache/poi/hssf/record/TableStylesRecord;";

        $r1[103] = class "Lorg/apache/poi/hssf/record/TextObjectRecord;";

        $r1[104] = class "Lorg/apache/poi/hssf/record/TopMarginRecord;";

        $r1[105] = class "Lorg/apache/poi/hssf/record/UncalcedRecord;";

        $r1[106] = class "Lorg/apache/poi/hssf/record/UseSelFSRecord;";

        $r1[107] = class "Lorg/apache/poi/hssf/record/UserSViewBegin;";

        $r1[108] = class "Lorg/apache/poi/hssf/record/UserSViewEnd;";

        $r1[109] = class "Lorg/apache/poi/hssf/record/chart/ValueRangeRecord;";

        $r1[110] = class "Lorg/apache/poi/hssf/record/VCenterRecord;";

        $r1[111] = class "Lorg/apache/poi/hssf/record/VerticalPageBreakRecord;";

        $r1[112] = class "Lorg/apache/poi/hssf/record/WindowOneRecord;";

        $r1[113] = class "Lorg/apache/poi/hssf/record/WindowProtectRecord;";

        $r1[114] = class "Lorg/apache/poi/hssf/record/WindowTwoRecord;";

        $r1[115] = class "Lorg/apache/poi/hssf/record/WriteAccessRecord;";

        $r1[116] = class "Lorg/apache/poi/hssf/record/WriteProtectRecord;";

        $r1[117] = class "Lorg/apache/poi/hssf/record/WSBoolRecord;";

        $r1[118] = class "Lorg/apache/poi/hssf/record/chart/BeginRecord;";

        $r1[119] = class "Lorg/apache/poi/hssf/record/chart/ChartFRTInfoRecord;";

        $r1[120] = class "Lorg/apache/poi/hssf/record/chart/ChartStartBlockRecord;";

        $r1[121] = class "Lorg/apache/poi/hssf/record/chart/ChartEndBlockRecord;";

        $r1[122] = class "Lorg/apache/poi/hssf/record/chart/ChartStartObjectRecord;";

        $r1[123] = class "Lorg/apache/poi/hssf/record/chart/ChartEndObjectRecord;";

        $r1[124] = class "Lorg/apache/poi/hssf/record/chart/CatLabRecord;";

        $r1[125] = class "Lorg/apache/poi/hssf/record/chart/DataFormatRecord;";

        $r1[126] = class "Lorg/apache/poi/hssf/record/chart/EndRecord;";

        $r1[127] = class "Lorg/apache/poi/hssf/record/chart/LinkedDataRecord;";

        $r1[128] = class "Lorg/apache/poi/hssf/record/chart/SeriesToChartGroupRecord;";

        $r1[129] = class "Lorg/apache/poi/hssf/record/pivottable/DataItemRecord;";

        $r1[130] = class "Lorg/apache/poi/hssf/record/pivottable/ExtendedPivotTableViewFieldsRecord;";

        $r1[131] = class "Lorg/apache/poi/hssf/record/pivottable/PageItemRecord;";

        $r1[132] = class "Lorg/apache/poi/hssf/record/pivottable/StreamIDRecord;";

        $r1[133] = class "Lorg/apache/poi/hssf/record/pivottable/ViewDefinitionRecord;";

        $r1[134] = class "Lorg/apache/poi/hssf/record/pivottable/ViewFieldsRecord;";

        $r1[135] = class "Lorg/apache/poi/hssf/record/pivottable/ViewSourceRecord;";

        <org.apache.poi.hssf.record.RecordFactory: java.lang.Class[] recordClasses> = $r1;

        $r2 = <org.apache.poi.hssf.record.RecordFactory: java.lang.Class[] recordClasses>;

        $r3 = staticinvoke <org.apache.poi.hssf.record.RecordFactory: java.util.Map recordsToMap(java.lang.Class[])>($r2);

        <org.apache.poi.hssf.record.RecordFactory: java.util.Map _recordCreatorsById> = $r3;

        return;
    }
}
