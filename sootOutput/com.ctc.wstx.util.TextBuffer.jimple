public final class com.ctc.wstx.util.TextBuffer extends java.lang.Object
{
    static final int DEF_INITIAL_BUFFER_SIZE;
    private final com.ctc.wstx.api.ReaderConfig mConfig;
    private final int mInitialBufSize;
    private char[] mInputBuffer;
    private int mInputStart;
    private int mInputLen;
    private java.util.ArrayList mSegments;
    private int mSegmentSize;
    private char[] mCurrentSegment;
    private int mCurrentSize;
    private java.lang.String mResultString;
    private char[] mResultArray;
    public static final int MAX_INDENT_SPACES;
    public static final int MAX_INDENT_TABS;
    private static final java.lang.String sIndSpaces;
    private static final char[] sIndSpacesArray;
    private static final java.lang.String[] sIndSpacesStrings;
    private static final java.lang.String sIndTabs;
    private static final char[] sIndTabsArray;
    private static final java.lang.String[] sIndTabsStrings;

    private void <init>(int, com.ctc.wstx.api.ReaderConfig)
    {
        int i0;
        com.ctc.wstx.util.TextBuffer r0;
        com.ctc.wstx.api.ReaderConfig r1;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        i0 := @parameter0: int;

        r1 := @parameter1: com.ctc.wstx.api.ReaderConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ctc.wstx.util.TextBuffer: int mInitialBufSize> = i0;

        r0.<com.ctc.wstx.util.TextBuffer: com.ctc.wstx.api.ReaderConfig mConfig> = r1;

        return;
    }

    public static com.ctc.wstx.util.TextBuffer createRecyclableBuffer(com.ctc.wstx.api.ReaderConfig)
    {
        com.ctc.wstx.util.TextBuffer $r0;
        com.ctc.wstx.api.ReaderConfig r1;

        r1 := @parameter0: com.ctc.wstx.api.ReaderConfig;

        $r0 = new com.ctc.wstx.util.TextBuffer;

        specialinvoke $r0.<com.ctc.wstx.util.TextBuffer: void <init>(int,com.ctc.wstx.api.ReaderConfig)>(500, r1);

        return $r0;
    }

    public static com.ctc.wstx.util.TextBuffer createTemporaryBuffer(int)
    {
        int i0;
        com.ctc.wstx.util.TextBuffer $r0;

        i0 := @parameter0: int;

        $r0 = new com.ctc.wstx.util.TextBuffer;

        specialinvoke $r0.<com.ctc.wstx.util.TextBuffer: void <init>(int,com.ctc.wstx.api.ReaderConfig)>(i0, null);

        return $r0;
    }

    public void recycle(boolean)
    {
        com.ctc.wstx.util.TextBuffer r0;
        com.ctc.wstx.api.ReaderConfig $r1, $r7;
        java.util.ArrayList $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r2, $r6;
        boolean z0;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: com.ctc.wstx.api.ReaderConfig mConfig>;

        if $r1 == null goto label4;

        $r2 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        if $r2 == null goto label4;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: void resetWithEmpty()>();

        goto label3;

     label1:
        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 >= 0 goto label2;

        $i3 = r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize>;

        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        $i4 = $i3 + $i2;

        if $i4 <= 0 goto label2;

        return;

     label2:
        $r3 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r3 == null goto label3;

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label3;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize> = 0;

     label3:
        $r6 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = null;

        $r7 = r0.<com.ctc.wstx.util.TextBuffer: com.ctc.wstx.api.ReaderConfig mConfig>;

        virtualinvoke $r7.<com.ctc.wstx.api.ReaderConfig: void freeMediumCBuffer(char[])>($r6);

     label4:
        return;
    }

    public void resetWithEmpty()
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r7;
        int $i0, $i1, $i2, $i4;
        char[] $r6;
        java.lang.Object $r5;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer> = null;

        $i4 = (int) -1;

        r0.<com.ctc.wstx.util.TextBuffer: int mInputStart> = $i4;

        r0.<com.ctc.wstx.util.TextBuffer: int mInputLen> = 0;

        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = null;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray> = null;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r1 == null goto label1;

        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r3 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i2 = $i1 - 1;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r6 = (char[]) $r5;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = $r6;

        $r7 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize> = 0;

     label1:
        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = 0;

        return;
    }

    public void resetWithShared(char[], int, int)
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r8;
        int i0, i1, $i2, $i3, $i4;
        char[] r1, $r7;
        java.lang.Object $r6;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer> = r1;

        r0.<com.ctc.wstx.util.TextBuffer: int mInputStart> = i0;

        r0.<com.ctc.wstx.util.TextBuffer: int mInputLen> = i1;

        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = null;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray> = null;

        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r2 == null goto label1;

        $r3 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label1;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r7 = (char[]) $r6;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = $r7;

        $r8 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        virtualinvoke $r8.<java.util.ArrayList: void clear()>();

        r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize> = 0;

        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = 0;

     label1:
        return;
    }

    public void resetWithCopy(char[], int, int)
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r1, $r5, $r6, $r7, $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        char[] $r2, r3, $r4, $r9;
        java.lang.Object $r8;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r3 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer> = null;

        $i7 = (int) -1;

        r0.<com.ctc.wstx.util.TextBuffer: int mInputStart> = $i7;

        r0.<com.ctc.wstx.util.TextBuffer: int mInputLen> = 0;

        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = null;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray> = null;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r1 == null goto label1;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label1;

        $r7 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r6 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i4 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i5 = $i4 - 1;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r9 = (char[]) $r8;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = $r9;

        $r10 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        virtualinvoke $r10.<java.util.ArrayList: void clear()>();

        goto label2;

     label1:
        $r2 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        if $r2 != null goto label2;

        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mInitialBufSize>;

        $r4 = specialinvoke r0.<com.ctc.wstx.util.TextBuffer: char[] allocBuffer(int)>($i2);

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = $r4;

     label2:
        r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize> = 0;

        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = 0;

        virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: void append(char[],int,int)>(r3, i0, i1);

        return;
    }

    public void resetInitialized()
    {
        com.ctc.wstx.util.TextBuffer r0;
        int $i0;
        char[] $r1, $r2;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: void resetWithEmpty()>();

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        if $r1 != null goto label1;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInitialBufSize>;

        $r2 = specialinvoke r0.<com.ctc.wstx.util.TextBuffer: char[] allocBuffer(int)>($i0);

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = $r2;

     label1:
        return;
    }

    private final char[] allocBuffer(int)
    {
        com.ctc.wstx.util.TextBuffer r0;
        int i0;
        char[] $r2, $r4;
        com.ctc.wstx.api.ReaderConfig $r1, $r3;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: com.ctc.wstx.api.ReaderConfig mConfig>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.util.TextBuffer: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.api.ReaderConfig: char[] allocMediumCBuffer(int)>(i0);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r2 = newarray (char)[i0];

        return $r2;
    }

    public void resetWithIndentation(int, char)
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.lang.String[] $r2, $r10, $r13, $r15;
        java.util.ArrayList $r3, $r4, $r5, $r8, $r18;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r9, $r11, $r14, $r16, r17;
        char c2;
        char[] $r1, $r7, $r12;
        java.lang.Object $r6;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        i0 := @parameter0: int;

        c2 := @parameter1: char;

        r0.<com.ctc.wstx.util.TextBuffer: int mInputStart> = 0;

        $i1 = i0 + 1;

        r0.<com.ctc.wstx.util.TextBuffer: int mInputLen> = $i1;

        $i8 = (int) c2;

        if $i8 != 9 goto label1;

        $r12 = <com.ctc.wstx.util.TextBuffer: char[] sIndTabsArray>;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer> = $r12;

        $r13 = <com.ctc.wstx.util.TextBuffer: java.lang.String[] sIndTabsStrings>;

        r17 = $r13[i0];

        if r17 != null goto label2;

        $r15 = <com.ctc.wstx.util.TextBuffer: java.lang.String[] sIndTabsStrings>;

        $r14 = "\n\t\t\t\t\t\t\t\t\t";

        $i7 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        $r16 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

        r17 = $r16;

        $r15[i0] = $r16;

        goto label2;

     label1:
        $r1 = <com.ctc.wstx.util.TextBuffer: char[] sIndSpacesArray>;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer> = $r1;

        $r2 = <com.ctc.wstx.util.TextBuffer: java.lang.String[] sIndSpacesStrings>;

        r17 = $r2[i0];

        if r17 != null goto label2;

        $r10 = <com.ctc.wstx.util.TextBuffer: java.lang.String[] sIndSpacesStrings>;

        $r9 = "\n                                 ";

        $i6 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        r17 = $r11;

        $r10[i0] = $r11;

     label2:
        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = r17;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray> = null;

        $r18 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r18 == null goto label3;

        $r3 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label3;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i5 = $i4 - 1;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r7 = (char[]) $r6;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = $r7;

        $r8 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        virtualinvoke $r8.<java.util.ArrayList: void clear()>();

        r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize> = 0;

        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = 0;

     label3:
        return;
    }

    public int size()
    {
        com.ctc.wstx.util.TextBuffer r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label1;

        $i4 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        return $i4;

     label1:
        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize>;

        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        $i3 = $i2 + $i1;

        return $i3;
    }

    public int getTextStart()
    {
        int $i0, $i1;
        com.ctc.wstx.util.TextBuffer r0;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public char[] getTextBuffer()
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1;
        char[] $r2, $r4, $r5;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label1;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        return $r5;

     label1:
        $r1 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r1 == null goto label2;

        $r3 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label3;

     label2:
        $r2 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        return $r2;

     label3:
        $r4 = virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: char[] contentsAsArray()>();

        return $r4;
    }

    public java.lang.String contentsAsString()
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r4, $r7, $r8;
        java.lang.StringBuffer $r3;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.lang.String $r1, $r6, $r12, $r14, $r16, $r17;
        char[] $r2, $r5, r10, $r11, $r13, $r15;
        java.lang.Object $r9;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString>;

        if $r1 != null goto label9;

        $r2 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        if $r2 == null goto label1;

        $r14 = new java.lang.String;

        $r15 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = $r14;

        goto label9;

     label1:
        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label3;

        $i7 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        if $i7 >= 1 goto label2;

        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = "";

        return "";

     label2:
        $r12 = new java.lang.String;

        $r13 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i9 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i8 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        specialinvoke $r12.<java.lang.String: void <init>(char[],int,int)>($r13, $i9, $i8);

        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = $r12;

        goto label9;

     label3:
        i1 = r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize>;

        i2 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        if i1 != 0 goto label6;

        if i2 != 0 goto label4;

        $r16 = "";

        goto label5;

     label4:
        $r16 = new java.lang.String;

        $r11 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>($r11, 0, i2);

     label5:
        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = $r16;

        goto label9;

     label6:
        $r3 = new java.lang.StringBuffer;

        $i3 = i1 + i2;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i3);

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r4 == null goto label8;

        i10 = 0;

        $r7 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i5 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

     label7:
        if i10 >= $i5 goto label8;

        $r8 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r10 = (char[]) $r9;

        $i6 = lengthof r10;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r10, 0, $i6);

        i10 = i10 + 1;

        goto label7;

     label8:
        $r5 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i4 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r5, 0, $i4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = $r6;

     label9:
        $r17 = r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString>;

        return $r17;
    }

    public char[] contentsAsArray()
    {
        char[] $r1, r2;
        com.ctc.wstx.util.TextBuffer r0;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r2 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        if r2 != null goto label1;

        $r1 = specialinvoke r0.<com.ctc.wstx.util.TextBuffer: char[] buildResultArray()>();

        r2 = $r1;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray> = $r1;

     label1:
        return r2;
    }

    public int contentsToArray(int, char[], int, int)
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r1, $r4, $r5;
        int $i0, $i1, $i2, i3, i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, i15;
        char[] r2, $r3, r7, $r8;
        java.lang.Object $r6;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        i9 := @parameter0: int;

        r2 := @parameter1: char[];

        i10 := @parameter2: int;

        i11 := @parameter3: int;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label04;

        $i6 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        i12 = $i6 - i9;

        if i12 <= i11 goto label01;

        i12 = i11;

        goto label02;

     label01:
        if i12 >= 0 goto label02;

        i12 = 0;

     label02:
        if i12 <= 0 goto label03;

        $r8 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i7 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i8 = $i7 + i9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i8, r2, i10, i12);

     label03:
        return i12;

     label04:
        i13 = 0;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r1 == null goto label09;

        i14 = 0;

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label05:
        if i14 >= $i2 goto label09;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r7 = (char[]) $r6;

        i3 = lengthof r7;

        i4 = i3 - i9;

        if i4 >= 1 goto label06;

        i9 = i9 - i3;

        goto label08;

     label06:
        if i4 < i11 goto label07;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, i9, r2, i10, i11);

        $i5 = i13 + i11;

        return $i5;

     label07:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, i9, r2, i10, i4);

        i13 = i13 + i4;

        i10 = i10 + i4;

        i11 = i11 - i4;

        i9 = 0;

     label08:
        i14 = i14 + 1;

        goto label05;

     label09:
        if i11 <= 0 goto label11;

        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        i15 = $i1 - i9;

        if i11 <= i15 goto label10;

        i11 = i15;

     label10:
        if i11 <= 0 goto label11;

        $r3 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, i9, r2, i10, i11);

        i13 = i13 + i11;

     label11:
        return i13;
    }

    public int rawContentsTo(java.io.Writer) throws java.io.IOException
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r3, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        java.lang.String $r2, $r11, $r12;
        java.io.Writer r4;
        char[] $r1, $r5, r9, $r10, $r13, $r14;
        java.lang.Object $r8;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r4 := @parameter0: java.io.Writer;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        if $r1 == null goto label1;

        $r13 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        virtualinvoke r4.<java.io.Writer: void write(char[])>($r13);

        $r14 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        $i11 = lengthof $r14;

        return $i11;

     label1:
        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString>;

        if $r2 == null goto label2;

        $r11 = r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString>;

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r11);

        $r12 = r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString>;

        $i10 = virtualinvoke $r12.<java.lang.String: int length()>();

        return $i10;

     label2:
        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label4;

        $i6 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        if $i6 <= 0 goto label3;

        $r10 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i9 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i8 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        virtualinvoke r4.<java.io.Writer: void write(char[],int,int)>($r10, $i9, $i8);

     label3:
        $i7 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        return $i7;

     label4:
        i12 = 0;

        $r3 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r3 == null goto label6;

        i13 = 0;

        $r6 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i4 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label5:
        if i13 >= $i4 goto label6;

        $r7 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r9 = (char[]) $r8;

        virtualinvoke r4.<java.io.Writer: void write(char[])>(r9);

        $i5 = lengthof r9;

        i12 = i12 + $i5;

        i13 = i13 + 1;

        goto label5;

     label6:
        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        if $i1 <= 0 goto label7;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        virtualinvoke r4.<java.io.Writer: void write(char[],int,int)>($r5, 0, $i2);

        $i3 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        i12 = i12 + $i3;

     label7:
        return i12;
    }

    public java.io.Reader rawContentsViaReader() throws java.io.IOException
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.io.CharArrayReader $r4, $r11, $r15;
        java.util.ArrayList $r3, $r6, $r9;
        com.ctc.wstx.util.TextBuffer$BufferReader $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r2, $r14;
        java.io.StringReader $r10, $r13;
        char[] $r1, $r5, $r8, $r12, $r16;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        if $r1 == null goto label1;

        $r15 = new java.io.CharArrayReader;

        $r16 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        specialinvoke $r15.<java.io.CharArrayReader: void <init>(char[])>($r16);

        return $r15;

     label1:
        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString>;

        if $r2 == null goto label2;

        $r13 = new java.io.StringReader;

        $r14 = r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString>;

        specialinvoke $r13.<java.io.StringReader: void <init>(java.lang.String)>($r14);

        return $r13;

     label2:
        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label4;

        $i4 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        if $i4 <= 0 goto label3;

        $r11 = new java.io.CharArrayReader;

        $r12 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i6 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i5 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        specialinvoke $r11.<java.io.CharArrayReader: void <init>(char[],int,int)>($r12, $i6, $i5);

        return $r11;

     label3:
        $r10 = new java.io.StringReader;

        specialinvoke $r10.<java.io.StringReader: void <init>(java.lang.String)>("");

        return $r10;

     label4:
        $r3 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r3 == null goto label5;

        $r6 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label6;

     label5:
        $r4 = new java.io.CharArrayReader;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        specialinvoke $r4.<java.io.CharArrayReader: void <init>(char[],int,int)>($r5, 0, $i1);

        return $r4;

     label6:
        $r7 = new com.ctc.wstx.util.TextBuffer$BufferReader;

        $r9 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r8 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i3 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        specialinvoke $r7.<com.ctc.wstx.util.TextBuffer$BufferReader: void <init>(java.util.ArrayList,char[],int)>($r9, $r8, $i3);

        return $r7;
    }

    public boolean isAllWhitespace()
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r1, $r2, $r4;
        int $i0, $i2, $i3, i4, $i6, i8, i9, i10, i11, i12, $i13, $i14, $i15;
        char $c1, $c5, $c7;
        char[] $r3, r6, r7;
        java.lang.Object $r5;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label04;

        r6 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        i8 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i6 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        i9 = i8 + $i6;

     label01:
        if i8 >= i9 goto label03;

        $c7 = r6[i8];

        $i13 = (int) $c7;

        if $i13 <= 32 goto label02;

        return 0;

     label02:
        i8 = i8 + 1;

        goto label01;

     label03:
        return 1;

     label04:
        $r1 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r1 == null goto label09;

        i10 = 0;

        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label05:
        if i10 >= $i2 goto label09;

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r7 = (char[]) $r5;

        i11 = 0;

        i4 = lengthof r7;

     label06:
        if i11 >= i4 goto label08;

        $c5 = r7[i11];

        $i14 = (int) $c5;

        if $i14 <= 32 goto label07;

        return 0;

     label07:
        i11 = i11 + 1;

        goto label06;

     label08:
        i10 = i10 + 1;

        goto label05;

     label09:
        $r3 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        i12 = 0;

        $i3 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

     label10:
        if i12 >= $i3 goto label12;

        $c1 = $r3[i12];

        $i15 = (int) $c1;

        if $i15 <= 32 goto label11;

        return 0;

     label11:
        i12 = i12 + 1;

        goto label10;

     label12:
        return 1;
    }

    public boolean endsWith(java.lang.String)
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r1, $r2, $r4;
        int $i0, $i1, $i2, $i5, $i6, i7, i8, i9, $i10, $i11, $i13, $i15, $i17;
        java.lang.String r3;
        char $c3, $c4;
        char[] r6;
        java.lang.Object $r5;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r3 := @parameter0: java.lang.String;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: void unshare(int)>(16);

     label1:
        $r1 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r1 != null goto label2;

        $i6 = 0;

        goto label3;

     label2:
        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i6 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label3:
        i7 = $i6;

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        i8 = $i1 - 1;

        r6 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        i9 = $i2 - 1;

     label4:
        if i8 < 0 goto label8;

        $c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i8);

        $c4 = r6[i9];

        $i10 = (int) $c3;

        $i11 = (int) $c4;

        if $i10 == $i11 goto label5;

        return 0;

     label5:
        $i13 = (int) -1;

        i8 = i8 + $i13;

        if i8 != 0 goto label6;

        goto label8;

     label6:
        $i15 = (int) -1;

        i9 = i9 + $i15;

        if i9 >= 0 goto label4;

        $i17 = (int) -1;

        i7 = i7 + $i17;

        if i7 >= 0 goto label7;

        return 0;

     label7:
        $r4 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r6 = (char[]) $r5;

        $i5 = lengthof r6;

        i9 = $i5 - 1;

        goto label4;

     label8:
        return 1;
    }

    public boolean equalsString(java.lang.String)
    {
        com.ctc.wstx.util.TextBuffer r1;
        java.util.ArrayList $r2, $r3;
        int $i0, $i1, $i2, $i5, $i6, $i8, $i9, i11, i12, $i13, $i14, $i15, $i16;
        java.lang.String r0;
        char $c3, $c4, $c7, $c10;
        char[] $r4, r5;

        r1 := @this: com.ctc.wstx.util.TextBuffer;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = r1.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i1 < 0 goto label05;

        $i6 = r1.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        if $i6 == $i0 goto label01;

        return 0;

     label01:
        i11 = 0;

     label02:
        if i11 >= $i0 goto label04;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11);

        $r4 = r1.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i8 = r1.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i9 = $i8 + i11;

        $c10 = $r4[$i9];

        $i13 = (int) $c7;

        $i14 = (int) $c10;

        if $i13 == $i14 goto label03;

        return 0;

     label03:
        i11 = i11 + 1;

        goto label02;

     label04:
        return 1;

     label05:
        $i2 = virtualinvoke r1.<com.ctc.wstx.util.TextBuffer: int size()>();

        if $i0 == $i2 goto label06;

        return 0;

     label06:
        $r2 = r1.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r2 == null goto label07;

        $r3 = r1.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i5 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i5 != 0 goto label08;

     label07:
        r5 = r1.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        goto label09;

     label08:
        r5 = virtualinvoke r1.<com.ctc.wstx.util.TextBuffer: char[] contentsAsArray()>();

     label09:
        i12 = 0;

     label10:
        if i12 >= $i0 goto label12;

        $c3 = r5[i12];

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12);

        $i15 = (int) $c3;

        $i16 = (int) $c4;

        if $i15 == $i16 goto label11;

        return 0;

     label11:
        i12 = i12 + 1;

        goto label10;

     label12:
        return 1;
    }

    public void fireSaxCharacterEvents(org.xml.sax.ContentHandler) throws org.xml.sax.SAXException
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r2, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        org.xml.sax.ContentHandler r3;
        char[] $r1, $r4, r8, $r9, $r10, $r11;
        java.lang.Object $r7;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r3 := @parameter0: org.xml.sax.ContentHandler;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        if $r1 == null goto label1;

        $r11 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        $r10 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        $i7 = lengthof $r10;

        interfaceinvoke r3.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r11, 0, $i7);

        goto label5;

     label1:
        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label2;

        $r9 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i6 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i5 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        interfaceinvoke r3.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r9, $i6, $i5);

        goto label5;

     label2:
        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r2 == null goto label4;

        i8 = 0;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label3:
        if i8 >= $i3 goto label4;

        $r6 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r8 = (char[]) $r7;

        $i4 = lengthof r8;

        interfaceinvoke r3.<org.xml.sax.ContentHandler: void characters(char[],int,int)>(r8, 0, $i4);

        i8 = i8 + 1;

        goto label3;

     label4:
        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        if $i1 <= 0 goto label5;

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        interfaceinvoke r3.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r4, 0, $i2);

     label5:
        return;
    }

    public void fireSaxSpaceEvents(org.xml.sax.ContentHandler) throws org.xml.sax.SAXException
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r2, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        org.xml.sax.ContentHandler r3;
        char[] $r1, $r4, r8, $r9, $r10, $r11;
        java.lang.Object $r7;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r3 := @parameter0: org.xml.sax.ContentHandler;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        if $r1 == null goto label1;

        $r11 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        $r10 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        $i7 = lengthof $r10;

        interfaceinvoke r3.<org.xml.sax.ContentHandler: void ignorableWhitespace(char[],int,int)>($r11, 0, $i7);

        goto label5;

     label1:
        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label2;

        $r9 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i6 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i5 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        interfaceinvoke r3.<org.xml.sax.ContentHandler: void ignorableWhitespace(char[],int,int)>($r9, $i6, $i5);

        goto label5;

     label2:
        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r2 == null goto label4;

        i8 = 0;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label3:
        if i8 >= $i3 goto label4;

        $r6 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r8 = (char[]) $r7;

        $i4 = lengthof r8;

        interfaceinvoke r3.<org.xml.sax.ContentHandler: void ignorableWhitespace(char[],int,int)>(r8, 0, $i4);

        i8 = i8 + 1;

        goto label3;

     label4:
        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        if $i1 <= 0 goto label5;

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        interfaceinvoke r3.<org.xml.sax.ContentHandler: void ignorableWhitespace(char[],int,int)>($r4, 0, $i2);

     label5:
        return;
    }

    public void fireSaxCommentEvent(org.xml.sax.ext.LexicalHandler) throws org.xml.sax.SAXException
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r2, $r5;
        org.xml.sax.ext.LexicalHandler r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        char[] $r1, $r4, $r6, $r7, $r8, $r9;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r3 := @parameter0: org.xml.sax.ext.LexicalHandler;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        if $r1 == null goto label1;

        $r9 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        $r8 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        $i6 = lengthof $r8;

        interfaceinvoke r3.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r9, 0, $i6);

        goto label4;

     label1:
        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label2;

        $r7 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i5 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i4 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        interfaceinvoke r3.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r7, $i5, $i4);

        goto label4;

     label2:
        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r2 == null goto label3;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label3;

        $r6 = virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: char[] contentsAsArray()>();

        $i3 = lengthof $r6;

        interfaceinvoke r3.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r6, 0, $i3);

        goto label4;

     label3:
        $r4 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        interfaceinvoke r3.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r4, 0, $i1);

     label4:
        return;
    }

    public void fireDtdCommentEvent(com.ctc.wstx.dtd.DTDEventListener)
    {
        com.ctc.wstx.util.TextBuffer r0;
        com.ctc.wstx.dtd.DTDEventListener r3;
        java.util.ArrayList $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        char[] $r1, $r4, $r6, $r7, $r8, $r9;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r3 := @parameter0: com.ctc.wstx.dtd.DTDEventListener;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        if $r1 == null goto label1;

        $r9 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        $r8 = r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray>;

        $i6 = lengthof $r8;

        interfaceinvoke r3.<com.ctc.wstx.dtd.DTDEventListener: void dtdComment(char[],int,int)>($r9, 0, $i6);

        goto label4;

     label1:
        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label2;

        $r7 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i5 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i4 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        interfaceinvoke r3.<com.ctc.wstx.dtd.DTDEventListener: void dtdComment(char[],int,int)>($r7, $i5, $i4);

        goto label4;

     label2:
        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r2 == null goto label3;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label3;

        $r6 = virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: char[] contentsAsArray()>();

        $i3 = lengthof $r6;

        interfaceinvoke r3.<com.ctc.wstx.dtd.DTDEventListener: void dtdComment(char[],int,int)>($r6, 0, $i3);

        goto label4;

     label3:
        $r4 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        interfaceinvoke r3.<com.ctc.wstx.dtd.DTDEventListener: void dtdComment(char[],int,int)>($r4, 0, $i1);

     label4:
        return;
    }

    public void validateText(org.codehaus.stax2.validation.XMLValidator, boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.util.TextBuffer r0;
        org.codehaus.stax2.validation.XMLValidator r1;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r3;
        java.lang.String $r2;
        boolean z0;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidator;

        z0 := @parameter1: boolean;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label1;

        $r3 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i4 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        $i3 = $i2 + $i1;

        virtualinvoke r1.<org.codehaus.stax2.validation.XMLValidator: void validateText(char[],int,int,boolean)>($r3, $i4, $i3, z0);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: java.lang.String contentsAsString()>();

        virtualinvoke r1.<org.codehaus.stax2.validation.XMLValidator: void validateText(java.lang.String,boolean)>($r2, z0);

     label2:
        return;
    }

    public void ensureNotShared()
    {
        int $i0;
        com.ctc.wstx.util.TextBuffer r0;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: void unshare(int)>(16);

     label1:
        return;
    }

    public void append(char)
    {
        com.ctc.wstx.util.TextBuffer r0;
        char c5;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r1;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        c5 := @parameter0: char;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: void unshare(int)>(16);

     label1:
        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = null;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray> = null;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label2;

        specialinvoke r0.<com.ctc.wstx.util.TextBuffer: void expand(int)>(1);

     label2:
        $i3 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        $i4 = $i3 + 1;

        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = $i4;

        $r1[$i3] = c5;

        return;
    }

    public void append(char[], int, int)
    {
        com.ctc.wstx.util.TextBuffer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        char[] r1, $r2, $r3;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        r1 := @parameter0: char[];

        i8 := @parameter1: int;

        i9 := @parameter2: int;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: void unshare(int)>(i9);

     label1:
        r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = null;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mResultArray> = null;

        $r3 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i2 = lengthof $r3;

        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        $i7 = $i2 - $i1;

        if $i7 < i9 goto label2;

        $i4 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i8, $r3, $i4, i9);

        $i5 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        $i6 = $i5 + i9;

        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = $i6;

        goto label4;

     label2:
        if $i7 <= 0 goto label3;

        $i3 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i8, $r3, $i3, $i7);

        i8 = i8 + $i7;

        i9 = i9 - $i7;

     label3:
        specialinvoke r0.<com.ctc.wstx.util.TextBuffer: void expand(int)>(i9);

        $r2 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i8, $r2, 0, i9);

        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = i9;

     label4:
        return;
    }

    public void append(java.lang.String)
    {
        com.ctc.wstx.util.TextBuffer r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        char[] $r2, $r3;
        java.lang.String r0;

        r1 := @this: com.ctc.wstx.util.TextBuffer;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i9 = $i0;

        $i1 = r1.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i1 < 0 goto label1;

        virtualinvoke r1.<com.ctc.wstx.util.TextBuffer: void unshare(int)>($i0);

     label1:
        r1.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString> = null;

        r1.<com.ctc.wstx.util.TextBuffer: char[] mResultArray> = null;

        $r3 = r1.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i3 = lengthof $r3;

        $i2 = r1.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        $i8 = $i3 - $i2;

        if $i8 < $i0 goto label2;

        $i5 = r1.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r3, $i5);

        $i6 = r1.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        $i7 = $i6 + $i0;

        r1.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = $i7;

        goto label4;

     label2:
        if $i8 <= 0 goto label3;

        $i4 = r1.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i8, $r3, $i4);

        i9 = $i0 - $i8;

     label3:
        specialinvoke r1.<com.ctc.wstx.util.TextBuffer: void expand(int)>(i9);

        $r2 = r1.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>($i8, i9, $r2, 0);

        r1.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = i9;

     label4:
        return;
    }

    public char[] getCurrentSegment()
    {
        com.ctc.wstx.util.TextBuffer r0;
        int $i0, $i1, $i2, $i3;
        char[] r1, $r2, $r3;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: void unshare(int)>(1);

        goto label3;

     label1:
        r1 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        if r1 != null goto label2;

        $i3 = r0.<com.ctc.wstx.util.TextBuffer: int mInitialBufSize>;

        $r2 = specialinvoke r0.<com.ctc.wstx.util.TextBuffer: char[] allocBuffer(int)>($i3);

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = $r2;

        goto label3;

     label2:
        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        $i1 = lengthof r1;

        if $i2 < $i1 goto label3;

        specialinvoke r0.<com.ctc.wstx.util.TextBuffer: void expand(int)>(1);

     label3:
        $r3 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        return $r3;
    }

    public int getCurrentSegmentSize()
    {
        int $i0;
        com.ctc.wstx.util.TextBuffer r0;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        return $i0;
    }

    public void setCurrentLength(int)
    {
        int i0;
        com.ctc.wstx.util.TextBuffer r0;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        i0 := @parameter0: int;

        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = i0;

        return;
    }

    public char[] finishCurrentSegment()
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r1, $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r2, $r4, $r6;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r1 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments> = $r5;

     label1:
        $r3 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r2 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i4 = lengthof $r4;

        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize>;

        $i1 = $i0 + $i4;

        r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize> = $i1;

        $i2 = $i4 >> 1;

        $i3 = $i4 + $i2;

        $r6 = newarray (char)[$i3];

        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = 0;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = $r6;

        return $r6;
    }

    public java.lang.String toString()
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.lang.String $r1;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $r1 = virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r1;
    }

    public void unshare(int)
    {
        com.ctc.wstx.util.TextBuffer r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i8;
        char[] r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        i2 := @parameter0: int;

        i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        r0.<com.ctc.wstx.util.TextBuffer: int mInputLen> = 0;

        r1 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer> = null;

        i1 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i8 = (int) -1;

        r0.<com.ctc.wstx.util.TextBuffer: int mInputStart> = $i8;

        i3 = i0 + i2;

        $r2 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        if $r2 == null goto label1;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i5 = lengthof $r5;

        if i3 <= $i5 goto label4;

     label1:
        $i4 = r0.<com.ctc.wstx.util.TextBuffer: int mInitialBufSize>;

        if i3 <= $i4 goto label2;

        $i6 = i3;

        goto label3;

     label2:
        $i6 = r0.<com.ctc.wstx.util.TextBuffer: int mInitialBufSize>;

     label3:
        $r3 = specialinvoke r0.<com.ctc.wstx.util.TextBuffer: char[] allocBuffer(int)>($i6);

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = $r3;

     label4:
        if i0 <= 0 goto label5;

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, $r4, 0, i0);

     label5:
        r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize> = 0;

        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = i0;

        return;
    }

    private void expand(int)
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r1, $r2, $r4;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, i7;
        char[] $r3, $r5;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        i3 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments> = $r4;

     label1:
        $r5 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize>;

        $i0 = lengthof $r5;

        $i2 = $i1 + $i0;

        r0.<com.ctc.wstx.util.TextBuffer: int mSegmentSize> = $i2;

        $i5 = lengthof $r5;

        $i6 = $i5 >> 1;

        i7 = $i6;

        if $i6 >= i3 goto label2;

        i7 = i3;

     label2:
        $i4 = $i5 + i7;

        $r3 = newarray (char)[$i4];

        r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize> = 0;

        r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment> = $r3;

        return;
    }

    private char[] buildResultArray()
    {
        com.ctc.wstx.util.TextBuffer r0;
        java.util.ArrayList $r2, $r4, $r5;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9, i10;
        java.lang.String $r1, $r11;
        char[] $r3, r7, $r8, $r9, $r10, $r12, r13;
        java.lang.Object $r6;

        r0 := @this: com.ctc.wstx.util.TextBuffer;

        $r1 = r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString>;

        if $r1 == null goto label1;

        $r11 = r0.<com.ctc.wstx.util.TextBuffer: java.lang.String mResultString>;

        $r12 = virtualinvoke $r11.<java.lang.String: char[] toCharArray()>();

        return $r12;

     label1:
        $i0 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        if $i0 < 0 goto label3;

        $i5 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        if $i5 >= 1 goto label2;

        $r10 = staticinvoke <com.ctc.wstx.util.EmptyIterator: char[] getEmptyCharArray()>();

        return $r10;

     label2:
        $i6 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        r13 = newarray (char)[$i6];

        $r9 = r0.<com.ctc.wstx.util.TextBuffer: char[] mInputBuffer>;

        $i8 = r0.<com.ctc.wstx.util.TextBuffer: int mInputStart>;

        $i7 = r0.<com.ctc.wstx.util.TextBuffer: int mInputLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i8, r13, 0, $i7);

        goto label7;

     label3:
        $i1 = virtualinvoke r0.<com.ctc.wstx.util.TextBuffer: int size()>();

        if $i1 >= 1 goto label4;

        $r8 = staticinvoke <com.ctc.wstx.util.EmptyIterator: char[] getEmptyCharArray()>();

        return $r8;

     label4:
        i9 = 0;

        r13 = newarray (char)[$i1];

        $r2 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        if $r2 == null goto label6;

        i10 = 0;

        $r4 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label5:
        if i10 >= $i3 goto label6;

        $r5 = r0.<com.ctc.wstx.util.TextBuffer: java.util.ArrayList mSegments>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r7 = (char[]) $r6;

        i4 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r13, i9, i4);

        i9 = i9 + i4;

        i10 = i10 + 1;

        goto label5;

     label6:
        $r3 = r0.<com.ctc.wstx.util.TextBuffer: char[] mCurrentSegment>;

        $i2 = r0.<com.ctc.wstx.util.TextBuffer: int mCurrentSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r13, i9, $i2);

     label7:
        return r13;
    }

    static void <clinit>()
    {
        java.lang.String[] $r3, $r7;
        int $i0, $i1;
        char[] $r1, $r2, $r5, $r6;
        java.lang.String $r0, $r4;

        <com.ctc.wstx.util.TextBuffer: java.lang.String sIndTabs> = "\n\t\t\t\t\t\t\t\t\t";

        <com.ctc.wstx.util.TextBuffer: java.lang.String sIndSpaces> = "\n                                 ";

        <com.ctc.wstx.util.TextBuffer: int MAX_INDENT_TABS> = 8;

        <com.ctc.wstx.util.TextBuffer: int MAX_INDENT_SPACES> = 32;

        <com.ctc.wstx.util.TextBuffer: int DEF_INITIAL_BUFFER_SIZE> = 500;

        $r0 = "\n                                 ";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <com.ctc.wstx.util.TextBuffer: char[] sIndSpacesArray> = $r1;

        $r2 = <com.ctc.wstx.util.TextBuffer: char[] sIndSpacesArray>;

        $i0 = lengthof $r2;

        $r3 = newarray (java.lang.String)[$i0];

        <com.ctc.wstx.util.TextBuffer: java.lang.String[] sIndSpacesStrings> = $r3;

        $r4 = "\n\t\t\t\t\t\t\t\t\t";

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        <com.ctc.wstx.util.TextBuffer: char[] sIndTabsArray> = $r5;

        $r6 = <com.ctc.wstx.util.TextBuffer: char[] sIndTabsArray>;

        $i1 = lengthof $r6;

        $r7 = newarray (java.lang.String)[$i1];

        <com.ctc.wstx.util.TextBuffer: java.lang.String[] sIndTabsStrings> = $r7;

        return;
    }
}
