final class com.mycila.inject.jsr250.Jsr250PreDestroyHandler extends com.mycila.inject.injector.MethodHandlerSkeleton
{

    void <init>()
    {
        com.mycila.inject.jsr250.Jsr250PreDestroyHandler r0;

        r0 := @this: com.mycila.inject.jsr250.Jsr250PreDestroyHandler;

        specialinvoke r0.<com.mycila.inject.injector.MethodHandlerSkeleton: void <init>()>();

        return;
    }

    public void handle(com.google.inject.TypeLiteral, java.lang.Object, java.lang.reflect.Method, javax.'annotation'.PreDestroy)
    {
        javax.'annotation'.PreDestroy r4;
        int $i0;
        com.mycila.inject.jsr250.Jsr250PreDestroyHandler r1;
        java.lang.Object r3;
        java.lang.reflect.Method r0;
        com.google.inject.TypeLiteral r2;
        boolean $z0;

        r1 := @this: com.mycila.inject.jsr250.Jsr250PreDestroyHandler;

        r2 := @parameter0: com.google.inject.TypeLiteral;

        r3 := @parameter1: java.lang.Object;

        r0 := @parameter2: java.lang.reflect.Method;

        r4 := @parameter3: javax.'annotation'.PreDestroy;

        $i0 = virtualinvoke r0.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 != 0 goto label1;

        specialinvoke r1.<com.mycila.inject.injector.MethodHandlerSkeleton: void handle(com.google.inject.TypeLiteral,java.lang.Object,java.lang.reflect.Method,java.lang.'annotation'.Annotation)>(r2, r3, r0, r4);

     label1:
        return;
    }

    public volatile void handle(com.google.inject.TypeLiteral, java.lang.Object, java.lang.reflect.Method, java.lang.'annotation'.Annotation)
    {
        javax.'annotation'.PreDestroy $r5;
        java.lang.'annotation'.Annotation r4;
        com.mycila.inject.jsr250.Jsr250PreDestroyHandler r0;
        java.lang.Object r2;
        com.google.inject.TypeLiteral r1;
        java.lang.reflect.Method r3;

        r0 := @this: com.mycila.inject.jsr250.Jsr250PreDestroyHandler;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.reflect.Method;

        r4 := @parameter3: java.lang.'annotation'.Annotation;

        $r5 = (javax.'annotation'.PreDestroy) r4;

        virtualinvoke r0.<com.mycila.inject.jsr250.Jsr250PreDestroyHandler: void handle(com.google.inject.TypeLiteral,java.lang.Object,java.lang.reflect.Method,javax.'annotation'.PreDestroy)>(r1, r2, r3, $r5);

        return;
    }

    public volatile void handle(com.google.inject.TypeLiteral, java.lang.Object, java.lang.reflect.Member, java.lang.'annotation'.Annotation)
    {
        javax.'annotation'.PreDestroy $r5;
        java.lang.reflect.Member r3;
        java.lang.'annotation'.Annotation r4;
        com.mycila.inject.jsr250.Jsr250PreDestroyHandler r0;
        java.lang.Object r2;
        com.google.inject.TypeLiteral r1;
        java.lang.reflect.Method $r6;

        r0 := @this: com.mycila.inject.jsr250.Jsr250PreDestroyHandler;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.reflect.Member;

        r4 := @parameter3: java.lang.'annotation'.Annotation;

        $r6 = (java.lang.reflect.Method) r3;

        $r5 = (javax.'annotation'.PreDestroy) r4;

        virtualinvoke r0.<com.mycila.inject.jsr250.Jsr250PreDestroyHandler: void handle(com.google.inject.TypeLiteral,java.lang.Object,java.lang.reflect.Method,javax.'annotation'.PreDestroy)>(r1, r2, $r6, $r5);

        return;
    }
}
