public class org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory implements org.apache.lucene.analysis.util.ResourceLoaderAware
{
    private static final java.lang.String PARAM_DICTIONARY;
    private static final java.lang.String PARAM_AFFIX;
    private static final java.lang.String PARAM_IGNORE_CASE;
    private static final java.lang.String PARAM_STRICT_AFFIX_PARSING;
    private final java.lang.String dictionaryArg;
    private final java.lang.String affixFile;
    private final boolean ignoreCase;
    private final boolean strictAffixParsing;
    private org.apache.lucene.analysis.hunspell.HunspellDictionary dictionary;

    public void <init>(java.util.Map)
    {
        java.lang.IllegalArgumentException $r4;
        org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory r0;
        java.util.Map r1;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r2, $r3, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        virtualinvoke r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: void assureMatchVersion()>();

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String require(java.util.Map,java.lang.String)>(r1, "dictionary");

        r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String dictionaryArg> = $r2;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String get(java.util.Map,java.lang.String)>(r1, "affix");

        r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String affixFile> = $r3;

        $z0 = virtualinvoke r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: boolean getBoolean(java.util.Map,java.lang.String,boolean)>(r1, "ignoreCase", 0);

        r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: boolean ignoreCase> = $z0;

        $z1 = virtualinvoke r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: boolean getBoolean(java.util.Map,java.lang.String,boolean)>(r1, "strictAffixParsing", 1);

        r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: boolean strictAffixParsing> = $z1;

        $z2 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z2 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        return;
    }

    public void inform(org.apache.lucene.analysis.util.ResourceLoader) throws java.io.IOException
    {
        org.apache.lucene.analysis.hunspell.HunspellDictionary $r8;
        java.io.Closeable[] $r10, $r14;
        org.apache.lucene.analysis.util.ResourceLoader r5;
        java.text.ParseException $r15;
        boolean $z0, $z1;
        org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory r0;
        java.lang.StringBuilder $r17, $r18, $r20, $r21, $r23, $r24;
        java.lang.Throwable $r13;
        java.lang.String[] $r2;
        java.util.ArrayList $r3, $r4, r27;
        int i0, i1;
        java.lang.String $r1, $r6, r11, $r19, $r22, $r25;
        java.io.IOException $r16;
        org.apache.lucene.util.Version $r9;
        java.io.InputStream $r7, $r12, r26;

        r0 := @this: org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory;

        r5 := @parameter0: org.apache.lucene.analysis.util.ResourceLoader;

        $r1 = r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String dictionaryArg>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r26 = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r27 = $r3;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r27 = $r4;

        i0 = lengthof $r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r11 = $r2[i1];

        $r12 = interfaceinvoke r5.<org.apache.lucene.analysis.util.ResourceLoader: java.io.InputStream openResource(java.lang.String)>(r11);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r6 = r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String affixFile>;

        $r7 = interfaceinvoke r5.<org.apache.lucene.analysis.util.ResourceLoader: java.io.InputStream openResource(java.lang.String)>($r6);

        r26 = $r7;

        $r8 = new org.apache.lucene.analysis.hunspell.HunspellDictionary;

        $r9 = r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: org.apache.lucene.util.Version luceneMatchVersion>;

        $z1 = r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: boolean ignoreCase>;

        $z0 = r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: boolean strictAffixParsing>;

        specialinvoke $r8.<org.apache.lucene.analysis.hunspell.HunspellDictionary: void <init>(java.io.InputStream,java.util.List,org.apache.lucene.util.Version,boolean,boolean)>($r7, $r4, $r9, $z1, $z0);

        r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: org.apache.lucene.analysis.hunspell.HunspellDictionary dictionary> = $r8;

     label4:
        $r10 = newarray (java.io.Closeable)[1];

        $r10[0] = $r7;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r10);

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.lang.Iterable)>($r4);

        goto label8;

     label5:
        $r15 := @caughtexception;

        $r16 = new java.io.IOException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load hunspell data! [dictionary=");

        $r19 = r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String dictionaryArg>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",affix=");

        $r22 = r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String affixFile>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r15);

        throw $r16;

     label6:
        $r13 := @caughtexception;

     label7:
        $r14 = newarray (java.io.Closeable)[1];

        $r14[0] = r26;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r14);

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.lang.Iterable)>(r27);

        throw $r13;

     label8:
        return;

        catch java.text.ParseException from label1 to label4 with label5;
        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory r2;
        org.apache.lucene.analysis.hunspell.HunspellDictionary $r3;
        org.apache.lucene.analysis.hunspell.HunspellStemFilter $r0;
        org.apache.lucene.analysis.TokenStream r1;

        r2 := @this: org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r0 = new org.apache.lucene.analysis.hunspell.HunspellStemFilter;

        $r3 = r2.<org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: org.apache.lucene.analysis.hunspell.HunspellDictionary dictionary>;

        specialinvoke $r0.<org.apache.lucene.analysis.hunspell.HunspellStemFilter: void <init>(org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.hunspell.HunspellDictionary)>(r1, $r3);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String PARAM_STRICT_AFFIX_PARSING> = "strictAffixParsing";

        <org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String PARAM_IGNORE_CASE> = "ignoreCase";

        <org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String PARAM_AFFIX> = "affix";

        <org.apache.lucene.analysis.hunspell.HunspellStemFilterFactory: java.lang.String PARAM_DICTIONARY> = "dictionary";

        return;
    }
}
