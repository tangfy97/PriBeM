class org.joda.time.format.DateTimeFormatterBuilder$MatchingParser extends java.lang.Object implements org.joda.time.format.DateTimeParser
{
    private final org.joda.time.format.DateTimeParser[] iParsers;
    private final int iParsedLengthEstimate;

    void <init>(org.joda.time.format.DateTimeParser[])
    {
        org.joda.time.format.DateTimeParser r2;
        org.joda.time.format.DateTimeParser[] r1;
        int $i0, i1, i2, $i4;
        org.joda.time.format.DateTimeFormatterBuilder$MatchingParser r0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$MatchingParser;

        r1 := @parameter0: org.joda.time.format.DateTimeParser[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.DateTimeFormatterBuilder$MatchingParser: org.joda.time.format.DateTimeParser[] iParsers> = r1;

        i1 = 0;

        i2 = lengthof r1;

     label1:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        if i2 < 0 goto label2;

        r2 = r1[i2];

        if r2 == null goto label1;

        $i0 = interfaceinvoke r2.<org.joda.time.format.DateTimeParser: int estimateParsedLength()>();

        if $i0 <= i1 goto label1;

        i1 = $i0;

        goto label1;

     label2:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$MatchingParser: int iParsedLengthEstimate> = i1;

        return;
    }

    public int estimateParsedLength()
    {
        int $i0;
        org.joda.time.format.DateTimeFormatterBuilder$MatchingParser r0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$MatchingParser;

        $i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$MatchingParser: int iParsedLengthEstimate>;

        return $i0;
    }

    public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.String, int)
    {
        org.joda.time.format.DateTimeParser r4, $r6;
        org.joda.time.format.DateTimeParser[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, $i12, $i14;
        org.joda.time.format.DateTimeParserBucket r2;
        java.lang.String r5;
        org.joda.time.format.DateTimeFormatterBuilder$MatchingParser r0;
        boolean z0;
        java.lang.Object $r3, r7;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$MatchingParser;

        r2 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        r5 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$MatchingParser: org.joda.time.format.DateTimeParser[] iParsers>;

        i0 = lengthof r1;

        $r3 = virtualinvoke r2.<org.joda.time.format.DateTimeParserBucket: java.lang.Object saveState()>();

        z0 = 0;

        i7 = i1;

        r7 = null;

        i8 = i1;

        i9 = 0;

     label01:
        if i9 >= i0 goto label08;

        r4 = r1[i9];

        if r4 != null goto label03;

        if i7 > i1 goto label02;

        return i1;

     label02:
        z0 = 1;

        goto label08;

     label03:
        $i3 = interfaceinvoke r4.<org.joda.time.format.DateTimeParser: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>(r2, r5, i1);

        if $i3 < i1 goto label06;

        if $i3 <= i7 goto label07;

        $i4 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i3 >= $i4 goto label04;

        $i5 = i9 + 1;

        if $i5 >= i0 goto label04;

        $i6 = i9 + 1;

        $r6 = r1[$i6];

        if $r6 != null goto label05;

     label04:
        return $i3;

     label05:
        i7 = $i3;

        r7 = virtualinvoke r2.<org.joda.time.format.DateTimeParserBucket: java.lang.Object saveState()>();

        goto label07;

     label06:
        if $i3 >= 0 goto label07;

        $i12 = (int) -1;

        i10 = $i3 ^ $i12;

        if i10 <= i8 goto label07;

        i8 = i10;

     label07:
        virtualinvoke r2.<org.joda.time.format.DateTimeParserBucket: boolean restoreState(java.lang.Object)>($r3);

        i9 = i9 + 1;

        goto label01;

     label08:
        if i7 > i1 goto label09;

        if i7 != i1 goto label11;

        if z0 == 0 goto label11;

     label09:
        if r7 == null goto label10;

        virtualinvoke r2.<org.joda.time.format.DateTimeParserBucket: boolean restoreState(java.lang.Object)>(r7);

     label10:
        return i7;

     label11:
        $i14 = (int) -1;

        $i2 = i8 ^ $i14;

        return $i2;
    }
}
