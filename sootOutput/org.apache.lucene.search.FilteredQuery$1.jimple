class org.apache.lucene.search.FilteredQuery$1 extends org.apache.lucene.search.Weight
{
    static final boolean $assertionsDisabled;
    final org.apache.lucene.search.Weight val$weight;
    final org.apache.lucene.search.FilteredQuery this$0;

    void <init>(org.apache.lucene.search.FilteredQuery, org.apache.lucene.search.Weight)
    {
        org.apache.lucene.search.FilteredQuery$1 r0;
        org.apache.lucene.search.Weight r2;
        org.apache.lucene.search.FilteredQuery r1;

        r0 := @this: org.apache.lucene.search.FilteredQuery$1;

        r1 := @parameter0: org.apache.lucene.search.FilteredQuery;

        r2 := @parameter1: org.apache.lucene.search.Weight;

        r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.FilteredQuery this$0> = r1;

        r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.Weight val$weight> = r2;

        specialinvoke r0.<org.apache.lucene.search.Weight: void <init>()>();

        return;
    }

    public boolean scoresDocsOutOfOrder()
    {
        org.apache.lucene.search.FilteredQuery$1 r0;

        r0 := @this: org.apache.lucene.search.FilteredQuery$1;

        return 1;
    }

    public float getValueForNormalization() throws java.io.IOException
    {
        org.apache.lucene.search.FilteredQuery $r2, $r3;
        org.apache.lucene.search.FilteredQuery$1 r0;
        org.apache.lucene.search.Weight $r1;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: org.apache.lucene.search.FilteredQuery$1;

        $r1 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.Weight val$weight>;

        $f0 = virtualinvoke $r1.<org.apache.lucene.search.Weight: float getValueForNormalization()>();

        $r2 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.FilteredQuery this$0>;

        $f1 = virtualinvoke $r2.<org.apache.lucene.search.FilteredQuery: float getBoost()>();

        $f2 = $f0 * $f1;

        $r3 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.FilteredQuery this$0>;

        $f3 = virtualinvoke $r3.<org.apache.lucene.search.FilteredQuery: float getBoost()>();

        $f4 = $f2 * $f3;

        return $f4;
    }

    public void normalize(float, float)
    {
        org.apache.lucene.search.FilteredQuery $r1;
        org.apache.lucene.search.FilteredQuery$1 r0;
        org.apache.lucene.search.Weight $r2;
        float f0, f1, $f2, $f3;

        r0 := @this: org.apache.lucene.search.FilteredQuery$1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.Weight val$weight>;

        $r1 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.FilteredQuery this$0>;

        $f2 = virtualinvoke $r1.<org.apache.lucene.search.FilteredQuery: float getBoost()>();

        $f3 = f1 * $f2;

        virtualinvoke $r2.<org.apache.lucene.search.Weight: void normalize(float,float)>(f0, $f3);

        return;
    }

    public org.apache.lucene.search.Explanation explain(org.apache.lucene.index.AtomicReaderContext, int) throws java.io.IOException
    {
        org.apache.lucene.search.FilteredQuery$1 r0;
        org.apache.lucene.search.Weight $r2;
        org.apache.lucene.search.DocIdSet $r8, $r15, $r16;
        int i0, $i1;
        java.lang.String $r12, $r14;
        org.apache.lucene.util.Bits $r7;
        org.apache.lucene.search.DocIdSetIterator $r17, r18;
        org.apache.lucene.search.FilteredQuery $r4;
        org.apache.lucene.search.Explanation $r3, $r9;
        org.apache.lucene.search.Filter $r5;
        java.lang.StringBuilder $r10, $r11, $r13;
        org.apache.lucene.index.AtomicReaderContext r1;
        org.apache.lucene.index.AtomicReader $r6;

        r0 := @this: org.apache.lucene.search.FilteredQuery$1;

        r1 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.Weight val$weight>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.Weight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.AtomicReaderContext,int)>(r1, i0);

        $r4 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.FilteredQuery this$0>;

        $r5 = staticinvoke <org.apache.lucene.search.FilteredQuery: org.apache.lucene.search.Filter access$000(org.apache.lucene.search.FilteredQuery)>($r4);

        $r6 = virtualinvoke r1.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        $r8 = virtualinvoke $r5.<org.apache.lucene.search.Filter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)>(r1, $r7);

        if $r8 != null goto label1;

        $r16 = <org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSet EMPTY_DOCIDSET>;

        $r17 = virtualinvoke $r16.<org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSetIterator iterator()>();

        goto label2;

     label1:
        $r17 = virtualinvoke $r8.<org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSetIterator iterator()>();

     label2:
        r18 = $r17;

        if $r17 != null goto label3;

        $r15 = <org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSet EMPTY_DOCIDSET>;

        r18 = virtualinvoke $r15.<org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSetIterator iterator()>();

     label3:
        $i1 = virtualinvoke r18.<org.apache.lucene.search.DocIdSetIterator: int advance(int)>(i0);

        if $i1 != i0 goto label4;

        return $r3;

     label4:
        $r9 = new org.apache.lucene.search.Explanation;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failure to match filter: ");

        $r12 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.lucene.search.Explanation: void <init>(float,java.lang.String)>(0.0F, $r14);

        virtualinvoke $r9.<org.apache.lucene.search.Explanation: void addDetail(org.apache.lucene.search.Explanation)>($r3);

        return $r9;
    }

    public org.apache.lucene.search.Query getQuery()
    {
        org.apache.lucene.search.FilteredQuery$1 r0;
        org.apache.lucene.search.FilteredQuery $r1;

        r0 := @this: org.apache.lucene.search.FilteredQuery$1;

        $r1 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.FilteredQuery this$0>;

        return $r1;
    }

    public org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext, boolean, boolean, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.search.FilteredQuery$FilterStrategy $r7;
        org.apache.lucene.search.FilteredQuery$1 r0;
        org.apache.lucene.search.Weight $r8;
        java.lang.AssertionError $r12;
        org.apache.lucene.search.DocIdSet $r5;
        org.apache.lucene.util.Bits r4;
        boolean $z0, z1, z2;
        org.apache.lucene.search.FilteredQuery $r1, $r6, $r10;
        org.apache.lucene.search.Scorer $r9;
        org.apache.lucene.search.Filter $r2, $r11;
        org.apache.lucene.index.AtomicReaderContext r3;

        r0 := @this: org.apache.lucene.search.FilteredQuery$1;

        r3 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r4 := @parameter3: org.apache.lucene.util.Bits;

        $z0 = <org.apache.lucene.search.FilteredQuery$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r10 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.FilteredQuery this$0>;

        $r11 = staticinvoke <org.apache.lucene.search.FilteredQuery: org.apache.lucene.search.Filter access$000(org.apache.lucene.search.FilteredQuery)>($r10);

        if $r11 != null goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $r1 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.FilteredQuery this$0>;

        $r2 = staticinvoke <org.apache.lucene.search.FilteredQuery: org.apache.lucene.search.Filter access$000(org.apache.lucene.search.FilteredQuery)>($r1);

        $r5 = virtualinvoke $r2.<org.apache.lucene.search.Filter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)>(r3, r4);

        if $r5 != null goto label2;

        return null;

     label2:
        $r6 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.FilteredQuery this$0>;

        $r7 = staticinvoke <org.apache.lucene.search.FilteredQuery: org.apache.lucene.search.FilteredQuery$FilterStrategy access$100(org.apache.lucene.search.FilteredQuery)>($r6);

        $r8 = r0.<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.Weight val$weight>;

        $r9 = virtualinvoke $r7.<org.apache.lucene.search.FilteredQuery$FilterStrategy: org.apache.lucene.search.Scorer filteredScorer(org.apache.lucene.index.AtomicReaderContext,boolean,boolean,org.apache.lucene.search.Weight,org.apache.lucene.search.DocIdSet)>(r3, z1, z2, $r8, $r5);

        return $r9;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/FilteredQuery;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.FilteredQuery$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
