public class com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader extends com.sun.xml.bind.v2.runtime.unmarshaller.ProxyLoader
{
    private final com.sun.xml.bind.v2.runtime.unmarshaller.Loader defaultLoader;
    static final boolean $assertionsDisabled;

    public void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader r1;
        java.lang.AssertionError $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.Loader;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.ProxyLoader: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader: com.sun.xml.bind.v2.runtime.unmarshaller.Loader defaultLoader> = r1;

        $z0 = <com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    protected com.sun.xml.bind.v2.runtime.unmarshaller.Loader selectLoader(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r8, $r11;
        com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader r2;
        org.xml.sax.Attributes $r1, $r3, $r7;
        int $i0, $i1, $i2, $i4;
        java.lang.Boolean $r5;
        java.lang.String $r4;
        boolean $z0, $z1, $z2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r6, $r9;
        java.lang.Object $r10;

        r2 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader;

        r6 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r0 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: org.xml.sax.Attributes atts>;

        $i0 = interfaceinvoke $r1.<org.xml.sax.Attributes: int getIndex(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "nil");

        $i4 = (int) -1;

        if $i0 == $i4 goto label4;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: org.xml.sax.Attributes atts>;

        $r4 = interfaceinvoke $r3.<org.xml.sax.Attributes: java.lang.String getValue(int)>($i0);

        $r5 = staticinvoke <com.sun.xml.bind.DatatypeConverterImpl: java.lang.Boolean _parseBoolean(java.lang.CharSequence)>($r4);

        if $r5 == null goto label4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label4;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader: void onNil(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>(r6);

        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: org.xml.sax.Attributes atts>;

        $i1 = interfaceinvoke $r7.<org.xml.sax.Attributes: int getLength()>();

        $i2 = $i1 - 1;

        if $i2 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 == 0 goto label3;

        $r9 = r6.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev>;

        $r10 = $r9.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        $z1 = $r10 instanceof javax.xml.bind.JAXBElement;

        if $z1 != 0 goto label4;

     label3:
        $r8 = <com.sun.xml.bind.v2.runtime.unmarshaller.Discarder: com.sun.xml.bind.v2.runtime.unmarshaller.Loader INSTANCE>;

        return $r8;

     label4:
        $r11 = r2.<com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader: com.sun.xml.bind.v2.runtime.unmarshaller.Loader defaultLoader>;

        return $r11;
    }

    public java.util.Collection getExpectedChildElements()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader r0;
        java.util.Collection $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader: com.sun.xml.bind.v2.runtime.unmarshaller.Loader defaultLoader>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: java.util.Collection getExpectedChildElements()>();

        return $r2;
    }

    public java.util.Collection getExpectedAttributes()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader r0;
        java.util.Collection $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader: com.sun.xml.bind.v2.runtime.unmarshaller.Loader defaultLoader>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: java.util.Collection getExpectedAttributes()>();

        return $r2;
    }

    protected void onNil(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/runtime/unmarshaller/XsiNilLoader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
