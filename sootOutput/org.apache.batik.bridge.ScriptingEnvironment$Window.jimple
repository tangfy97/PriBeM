public class org.apache.batik.bridge.ScriptingEnvironment$Window extends java.lang.Object implements org.apache.batik.script.Window
{
    protected org.apache.batik.script.Interpreter interpreter;
    protected java.lang.String language;
    static final java.lang.String DEFLATE;
    static final java.lang.String GZIP;
    static final java.lang.String UTF_8;
    private final org.apache.batik.bridge.ScriptingEnvironment this$0;

    public void <init>(org.apache.batik.bridge.ScriptingEnvironment, org.apache.batik.script.Interpreter, java.lang.String)
    {
        org.apache.batik.bridge.ScriptingEnvironment r1;
        org.apache.batik.script.Interpreter r2;
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        java.lang.String r3;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r1 := @parameter0: org.apache.batik.bridge.ScriptingEnvironment;

        r2 := @parameter1: org.apache.batik.script.Interpreter;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0> = r1;

        r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.script.Interpreter interpreter> = r2;

        r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: java.lang.String language> = r3;

        return;
    }

    public java.lang.Object setInterval(java.lang.String, long)
    {
        org.apache.batik.bridge.ScriptingEnvironment $r3;
        org.apache.batik.bridge.ScriptingEnvironment$Window r1;
        long l0;
        java.util.Timer $r4;
        java.lang.String r2;
        org.apache.batik.bridge.ScriptingEnvironment$1 $r0;

        r1 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r2 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r0 = new org.apache.batik.bridge.ScriptingEnvironment$1;

        specialinvoke $r0.<org.apache.batik.bridge.ScriptingEnvironment$1: void <init>(org.apache.batik.bridge.ScriptingEnvironment$Window,java.lang.String)>(r1, r2);

        $r3 = r1.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r4 = $r3.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Timer timer>;

        virtualinvoke $r4.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r0, l0, l0);

        return $r0;
    }

    public java.lang.Object setInterval(java.lang.Runnable, long)
    {
        org.apache.batik.bridge.ScriptingEnvironment $r3;
        org.apache.batik.bridge.ScriptingEnvironment$Window r1;
        long l0;
        java.util.Timer $r4;
        org.apache.batik.bridge.ScriptingEnvironment$2 $r0;
        java.lang.Runnable r2;

        r1 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r2 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        $r0 = new org.apache.batik.bridge.ScriptingEnvironment$2;

        specialinvoke $r0.<org.apache.batik.bridge.ScriptingEnvironment$2: void <init>(org.apache.batik.bridge.ScriptingEnvironment$Window,java.lang.Runnable)>(r1, r2);

        $r3 = r1.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r4 = $r3.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Timer timer>;

        virtualinvoke $r4.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r0, l0, l0);

        return $r0;
    }

    public void clearInterval(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.batik.bridge.ScriptingEnvironment$Window r2;
        java.util.TimerTask $r1;

        r2 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = (java.util.TimerTask) r0;

        virtualinvoke $r1.<java.util.TimerTask: boolean cancel()>();

        return;
    }

    public java.lang.Object setTimeout(java.lang.String, long)
    {
        org.apache.batik.bridge.ScriptingEnvironment $r3;
        org.apache.batik.bridge.ScriptingEnvironment$Window r1;
        long l0;
        java.util.Timer $r4;
        java.lang.String r2;
        org.apache.batik.bridge.ScriptingEnvironment$3 $r0;

        r1 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r2 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r0 = new org.apache.batik.bridge.ScriptingEnvironment$3;

        specialinvoke $r0.<org.apache.batik.bridge.ScriptingEnvironment$3: void <init>(org.apache.batik.bridge.ScriptingEnvironment$Window,java.lang.String)>(r1, r2);

        $r3 = r1.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r4 = $r3.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Timer timer>;

        virtualinvoke $r4.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r0, l0);

        return $r0;
    }

    public java.lang.Object setTimeout(java.lang.Runnable, long)
    {
        org.apache.batik.bridge.ScriptingEnvironment $r3;
        org.apache.batik.bridge.ScriptingEnvironment$4 $r0;
        org.apache.batik.bridge.ScriptingEnvironment$Window r1;
        long l0;
        java.util.Timer $r4;
        java.lang.Runnable r2;

        r1 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r2 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        $r0 = new org.apache.batik.bridge.ScriptingEnvironment$4;

        specialinvoke $r0.<org.apache.batik.bridge.ScriptingEnvironment$4: void <init>(org.apache.batik.bridge.ScriptingEnvironment$Window,java.lang.Runnable)>(r1, r2);

        $r3 = r1.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r4 = $r3.<org.apache.batik.bridge.ScriptingEnvironment: java.util.Timer timer>;

        virtualinvoke $r4.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r0, l0);

        return $r0;
    }

    public void clearTimeout(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.batik.bridge.ScriptingEnvironment$Window r2;
        java.util.TimerTask $r1;

        r2 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = (java.util.TimerTask) r0;

        virtualinvoke $r1.<java.util.TimerTask: boolean cancel()>();

        return;
    }

    public org.w3c.dom.Node parseXML(java.lang.String, org.w3c.dom.Document)
    {
        org.apache.batik.dom.svg.SAXSVGDocumentFactory $r0;
        java.net.URL r21;
        java.util.HashMap $r13;
        org.w3c.dom.Document r2, $r18;
        org.w3c.dom.Node $r5, $r9, $r14;
        java.lang.String $r1, r3, r4, $r8, $r12, $r22;
        org.w3c.dom.DOMImplementation $r11;
        boolean $z0, $z1;
        org.apache.batik.bridge.ScriptingEnvironment $r16;
        org.apache.batik.bridge.BridgeContext $r17;
        org.apache.batik.dom.GenericDOMImplementation $r7;
        org.apache.batik.dom.util.SAXDocumentFactory $r6, $r10, r23;
        org.apache.batik.dom.svg.SVGOMDocument $r19, $r20;
        org.apache.batik.bridge.ScriptingEnvironment$Window r15;

        r15 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Document;

        $r0 = new org.apache.batik.dom.svg.SAXSVGDocumentFactory;

        $r1 = staticinvoke <org.apache.batik.util.XMLResourceDescriptor: java.lang.String getXMLParserClassName()>();

        specialinvoke $r0.<org.apache.batik.dom.svg.SAXSVGDocumentFactory: void <init>(java.lang.String)>($r1);

        r21 = null;

        $z0 = r2 instanceof org.apache.batik.dom.svg.SVGOMDocument;

        if $z0 == 0 goto label1;

        $r20 = (org.apache.batik.dom.svg.SVGOMDocument) r2;

        r21 = virtualinvoke $r20.<org.apache.batik.dom.svg.SVGOMDocument: java.net.URL getURLObject()>();

     label1:
        if r21 != null goto label2;

        $r16 = r15.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r17 = $r16.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.BridgeContext bridgeContext>;

        $r18 = virtualinvoke $r17.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Document getDocument()>();

        $r19 = (org.apache.batik.dom.svg.SVGOMDocument) $r18;

        r21 = virtualinvoke $r19.<org.apache.batik.dom.svg.SVGOMDocument: java.net.URL getURLObject()>();

     label2:
        if r21 != null goto label3;

        $r22 = "";

        goto label4;

     label3:
        $r22 = virtualinvoke r21.<java.net.URL: java.lang.String toString()>();

     label4:
        r3 = $r22;

        $r5 = staticinvoke <org.apache.batik.dom.util.DOMUtilities: org.w3c.dom.Node parseXML(java.lang.String,org.w3c.dom.Document,java.lang.String,java.util.Map,java.lang.String,org.apache.batik.dom.util.SAXDocumentFactory)>(r4, r2, $r22, null, null, $r0);

        if $r5 == null goto label5;

        return $r5;

     label5:
        $z1 = r2 instanceof org.apache.batik.dom.svg.SVGOMDocument;

        if $z1 == 0 goto label6;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("xmlns", "http://www.w3.org/2000/xmlns/");

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("xmlns:xlink", "http://www.w3.org/1999/xlink");

        $r14 = staticinvoke <org.apache.batik.dom.util.DOMUtilities: org.w3c.dom.Node parseXML(java.lang.String,org.w3c.dom.Document,java.lang.String,java.util.Map,java.lang.String,org.apache.batik.dom.util.SAXDocumentFactory)>(r4, r2, $r22, $r13, "svg", $r0);

        if $r14 == null goto label6;

        return $r14;

     label6:
        if r2 == null goto label7;

        $r10 = new org.apache.batik.dom.util.SAXDocumentFactory;

        $r11 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.DOMImplementation getImplementation()>();

        $r12 = staticinvoke <org.apache.batik.util.XMLResourceDescriptor: java.lang.String getXMLParserClassName()>();

        specialinvoke $r10.<org.apache.batik.dom.util.SAXDocumentFactory: void <init>(org.w3c.dom.DOMImplementation,java.lang.String)>($r11, $r12);

        r23 = $r10;

        goto label8;

     label7:
        $r6 = new org.apache.batik.dom.util.SAXDocumentFactory;

        $r7 = new org.apache.batik.dom.GenericDOMImplementation;

        specialinvoke $r7.<org.apache.batik.dom.GenericDOMImplementation: void <init>()>();

        $r8 = staticinvoke <org.apache.batik.util.XMLResourceDescriptor: java.lang.String getXMLParserClassName()>();

        specialinvoke $r6.<org.apache.batik.dom.util.SAXDocumentFactory: void <init>(org.w3c.dom.DOMImplementation,java.lang.String)>($r7, $r8);

        r23 = $r6;

     label8:
        $r9 = staticinvoke <org.apache.batik.dom.util.DOMUtilities: org.w3c.dom.Node parseXML(java.lang.String,org.w3c.dom.Document,java.lang.String,java.util.Map,java.lang.String,org.apache.batik.dom.util.SAXDocumentFactory)>(r4, r2, r3, null, null, r23);

        return $r9;
    }

    public void getURL(java.lang.String, org.apache.batik.script.Window$URLResponseHandler)
    {
        org.apache.batik.script.Window$URLResponseHandler r2;
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.script.Window$URLResponseHandler;

        virtualinvoke r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: void getURL(java.lang.String,org.apache.batik.script.Window$URLResponseHandler,java.lang.String)>(r1, r2, null);

        return;
    }

    public void getURL(java.lang.String, org.apache.batik.script.Window$URLResponseHandler, java.lang.String)
    {
        org.apache.batik.bridge.ScriptingEnvironment$6 $r0;
        org.apache.batik.script.Window$URLResponseHandler r4;
        org.apache.batik.bridge.ScriptingEnvironment$Window r1;
        java.lang.String r2, r3;

        r1 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.batik.script.Window$URLResponseHandler;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.apache.batik.bridge.ScriptingEnvironment$6;

        specialinvoke $r0.<org.apache.batik.bridge.ScriptingEnvironment$6: void <init>(org.apache.batik.bridge.ScriptingEnvironment$Window,java.lang.String,java.lang.String,org.apache.batik.script.Window$URLResponseHandler)>(r1, r2, r3, r4);

        virtualinvoke $r0.<java.lang.Thread: void setPriority(int)>(1);

        virtualinvoke $r0.<java.lang.Thread: void start()>();

        return;
    }

    public void postURL(java.lang.String, java.lang.String, org.apache.batik.script.Window$URLResponseHandler)
    {
        org.apache.batik.script.Window$URLResponseHandler r3;
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.batik.script.Window$URLResponseHandler;

        virtualinvoke r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: void postURL(java.lang.String,java.lang.String,org.apache.batik.script.Window$URLResponseHandler,java.lang.String,java.lang.String)>(r1, r2, r3, "text/plain", null);

        return;
    }

    public void postURL(java.lang.String, java.lang.String, org.apache.batik.script.Window$URLResponseHandler, java.lang.String)
    {
        org.apache.batik.script.Window$URLResponseHandler r3;
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        java.lang.String r1, r2, r4;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.batik.script.Window$URLResponseHandler;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: void postURL(java.lang.String,java.lang.String,org.apache.batik.script.Window$URLResponseHandler,java.lang.String,java.lang.String)>(r1, r2, r3, r4, null);

        return;
    }

    public void postURL(java.lang.String, java.lang.String, org.apache.batik.script.Window$URLResponseHandler, java.lang.String, java.lang.String)
    {
        org.apache.batik.bridge.ScriptingEnvironment$9 $r0;
        org.apache.batik.script.Window$URLResponseHandler r6;
        org.apache.batik.bridge.ScriptingEnvironment$Window r1;
        java.lang.String r2, r3, r4, r5;

        r1 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: org.apache.batik.script.Window$URLResponseHandler;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $r0 = new org.apache.batik.bridge.ScriptingEnvironment$9;

        specialinvoke $r0.<org.apache.batik.bridge.ScriptingEnvironment$9: void <init>(org.apache.batik.bridge.ScriptingEnvironment$Window,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.batik.script.Window$URLResponseHandler)>(r1, r2, r3, r4, r5, r6);

        virtualinvoke $r0.<java.lang.Thread: void setPriority(int)>(1);

        virtualinvoke $r0.<java.lang.Thread: void start()>();

        return;
    }

    public void alert(java.lang.String)
    {
        org.apache.batik.bridge.UserAgent $r2, $r5;
        org.apache.batik.bridge.ScriptingEnvironment $r1, $r3;
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        java.lang.String r4;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r2 = $r1.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.UserAgent userAgent>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r5 = $r3.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.UserAgent userAgent>;

        interfaceinvoke $r5.<org.apache.batik.bridge.UserAgent: void showAlert(java.lang.String)>(r4);

     label1:
        return;
    }

    public boolean confirm(java.lang.String)
    {
        org.apache.batik.bridge.UserAgent $r2, $r5;
        org.apache.batik.bridge.ScriptingEnvironment $r1, $r3;
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        java.lang.String r4;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r2 = $r1.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.UserAgent userAgent>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r5 = $r3.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.UserAgent userAgent>;

        $z0 = interfaceinvoke $r5.<org.apache.batik.bridge.UserAgent: boolean showConfirm(java.lang.String)>(r4);

        return $z0;

     label1:
        return 0;
    }

    public java.lang.String prompt(java.lang.String)
    {
        org.apache.batik.bridge.UserAgent $r2, $r5;
        org.apache.batik.bridge.ScriptingEnvironment $r1, $r3;
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        java.lang.String r4, $r6;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r2 = $r1.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.UserAgent userAgent>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r5 = $r3.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.UserAgent userAgent>;

        $r6 = interfaceinvoke $r5.<org.apache.batik.bridge.UserAgent: java.lang.String showPrompt(java.lang.String)>(r4);

        return $r6;

     label1:
        return null;
    }

    public java.lang.String prompt(java.lang.String, java.lang.String)
    {
        org.apache.batik.bridge.ScriptingEnvironment $r1, $r3;
        org.apache.batik.bridge.UserAgent $r2, $r6;
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        java.lang.String r4, r5, $r7;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r2 = $r1.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.UserAgent userAgent>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r6 = $r3.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.UserAgent userAgent>;

        $r7 = interfaceinvoke $r6.<org.apache.batik.bridge.UserAgent: java.lang.String showPrompt(java.lang.String,java.lang.String)>(r4, r5);

        return $r7;

     label1:
        return null;
    }

    public org.apache.batik.bridge.BridgeContext getBridgeContext()
    {
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        org.apache.batik.bridge.BridgeContext $r2;
        org.apache.batik.bridge.ScriptingEnvironment $r1;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        $r1 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        $r2 = $r1.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.BridgeContext bridgeContext>;

        return $r2;
    }

    public org.apache.batik.script.Interpreter getInterpreter()
    {
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        org.apache.batik.script.Interpreter $r1;

        r0 := @this: org.apache.batik.bridge.ScriptingEnvironment$Window;

        $r1 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.script.Interpreter interpreter>;

        return $r1;
    }

    static org.apache.batik.bridge.ScriptingEnvironment access$000(org.apache.batik.bridge.ScriptingEnvironment$Window)
    {
        org.apache.batik.bridge.ScriptingEnvironment$Window r0;
        org.apache.batik.bridge.ScriptingEnvironment $r1;

        r0 := @parameter0: org.apache.batik.bridge.ScriptingEnvironment$Window;

        $r1 = r0.<org.apache.batik.bridge.ScriptingEnvironment$Window: org.apache.batik.bridge.ScriptingEnvironment this$0>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.batik.bridge.ScriptingEnvironment$Window: java.lang.String UTF_8> = "UTF-8";

        <org.apache.batik.bridge.ScriptingEnvironment$Window: java.lang.String GZIP> = "gzip";

        <org.apache.batik.bridge.ScriptingEnvironment$Window: java.lang.String DEFLATE> = "deflate";

        return;
    }
}
