public class ucar.units.UnitDBImpl extends java.lang.Object implements ucar.units.UnitDB, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.Set unitSet;
    private final java.util.Map nameMap;
    private final java.util.Map symbolMap;

    protected void <init>(int, int)
    {
        ucar.units.UnitDBImpl$1 $r2;
        ucar.units.UnitDBImpl r0;
        java.util.TreeSet $r1;
        int i0, $i1, i2, $i3;
        java.util.Hashtable $r3, $r4;

        r0 := @this: ucar.units.UnitDBImpl;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeSet;

        $r2 = new ucar.units.UnitDBImpl$1;

        specialinvoke $r2.<ucar.units.UnitDBImpl$1: void <init>(ucar.units.UnitDBImpl)>(r0);

        specialinvoke $r1.<java.util.TreeSet: void <init>(java.util.Comparator)>($r2);

        r0.<ucar.units.UnitDBImpl: java.util.Set unitSet> = $r1;

        $r3 = new java.util.Hashtable;

        $i1 = i0 + 1;

        specialinvoke $r3.<java.util.Hashtable: void <init>(int)>($i1);

        r0.<ucar.units.UnitDBImpl: java.util.Map nameMap> = $r3;

        $r4 = new java.util.Hashtable;

        $i3 = i2 + 1;

        specialinvoke $r4.<java.util.Hashtable: void <init>(int)>($i3);

        r0.<ucar.units.UnitDBImpl: java.util.Map symbolMap> = $r4;

        return;
    }

    public void add(ucar.units.UnitDBImpl) throws ucar.units.UnitExistsException
    {
        java.util.Set $r2, $r3;
        ucar.units.UnitDBImpl r0, r1;
        java.util.Map $r4, $r5, $r6, $r7;

        r0 := @this: ucar.units.UnitDBImpl;

        r1 := @parameter0: ucar.units.UnitDBImpl;

        $r3 = r0.<ucar.units.UnitDBImpl: java.util.Set unitSet>;

        $r2 = r1.<ucar.units.UnitDBImpl: java.util.Set unitSet>;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        $r5 = r0.<ucar.units.UnitDBImpl: java.util.Map nameMap>;

        $r4 = r1.<ucar.units.UnitDBImpl: java.util.Map nameMap>;

        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r4);

        $r7 = r0.<ucar.units.UnitDBImpl: java.util.Map symbolMap>;

        $r6 = r1.<ucar.units.UnitDBImpl: java.util.Map symbolMap>;

        interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>($r6);

        return;
    }

    public int nameCount()
    {
        int $i0;
        ucar.units.UnitDBImpl r0;
        java.util.Map $r1;

        r0 := @this: ucar.units.UnitDBImpl;

        $r1 = r0.<ucar.units.UnitDBImpl: java.util.Map nameMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public int symbolCount()
    {
        int $i0;
        ucar.units.UnitDBImpl r0;
        java.util.Map $r1;

        r0 := @this: ucar.units.UnitDBImpl;

        $r1 = r0.<ucar.units.UnitDBImpl: java.util.Map symbolMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public void addUnit(ucar.units.Unit) throws ucar.units.UnitExistsException, ucar.units.NameException
    {
        ucar.units.NameException $r7;
        ucar.units.Unit r0;
        java.util.Set $r6;
        ucar.units.UnitDBImpl r2;
        java.lang.String $r1, $r3, $r4, $r5;

        r2 := @this: ucar.units.UnitDBImpl;

        r0 := @parameter0: ucar.units.Unit;

        $r1 = interfaceinvoke r0.<ucar.units.Unit: java.lang.String getName()>();

        if $r1 != null goto label1;

        $r7 = new ucar.units.NameException;

        specialinvoke $r7.<ucar.units.NameException: void <init>(java.lang.String)>("Unit name can\'t be null");

        throw $r7;

     label1:
        $r3 = interfaceinvoke r0.<ucar.units.Unit: java.lang.String getName()>();

        specialinvoke r2.<ucar.units.UnitDBImpl: void addByName(java.lang.String,ucar.units.Unit)>($r3, r0);

        $r4 = interfaceinvoke r0.<ucar.units.Unit: java.lang.String getPlural()>();

        specialinvoke r2.<ucar.units.UnitDBImpl: void addByName(java.lang.String,ucar.units.Unit)>($r4, r0);

        $r5 = interfaceinvoke r0.<ucar.units.Unit: java.lang.String getSymbol()>();

        specialinvoke r2.<ucar.units.UnitDBImpl: void addBySymbol(java.lang.String,ucar.units.Unit)>($r5, r0);

        $r6 = r2.<ucar.units.UnitDBImpl: java.util.Set unitSet>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r0);

        return;
    }

    public final void addAlias(java.lang.String, java.lang.String) throws ucar.units.NoSuchUnitException, ucar.units.UnitExistsException
    {
        java.lang.String r1, r2;
        ucar.units.UnitDBImpl r0;

        r0 := @this: ucar.units.UnitDBImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<ucar.units.UnitDBImpl: void addAlias(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, null);

        return;
    }

    public final void addAlias(java.lang.String, java.lang.String, java.lang.String) throws ucar.units.NoSuchUnitException, ucar.units.UnitExistsException
    {
        java.lang.String r1, r2, r3;
        ucar.units.UnitDBImpl r0;

        r0 := @this: ucar.units.UnitDBImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<ucar.units.UnitDBImpl: void addAlias(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, null);

        return;
    }

    public final void addSymbol(java.lang.String, java.lang.String) throws ucar.units.NoSuchUnitException, ucar.units.UnitExistsException
    {
        java.lang.String r1, r2;
        ucar.units.UnitDBImpl r0;

        r0 := @this: ucar.units.UnitDBImpl;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<ucar.units.UnitDBImpl: void addAlias(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, r1, r2, null);

        return;
    }

    public final void addAlias(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws ucar.units.NoSuchUnitException, ucar.units.UnitExistsException
    {
        ucar.units.UnitID $r4;
        java.lang.String r1, r2, r3, r5;
        ucar.units.UnitDBImpl r0;

        r0 := @this: ucar.units.UnitDBImpl;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r4 = staticinvoke <ucar.units.UnitID: ucar.units.UnitID newUnitID(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        virtualinvoke r0.<ucar.units.UnitDBImpl: void addAlias(ucar.units.UnitID,java.lang.String)>($r4, r5);

        return;
    }

    public final void addAlias(ucar.units.UnitID, java.lang.String) throws ucar.units.NoSuchUnitException, ucar.units.UnitExistsException
    {
        ucar.units.Unit $r2;
        ucar.units.UnitID r3;
        ucar.units.UnitDBImpl r0;
        ucar.units.NoSuchUnitException $r7;
        java.lang.String r1, $r4, $r5, $r6;

        r0 := @this: ucar.units.UnitDBImpl;

        r3 := @parameter0: ucar.units.UnitID;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.units.UnitDBImpl: ucar.units.Unit getByName(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r7 = new ucar.units.NoSuchUnitException;

        specialinvoke $r7.<ucar.units.NoSuchUnitException: void <init>(java.lang.String)>(r1);

        throw $r7;

     label1:
        $r4 = virtualinvoke r3.<ucar.units.UnitID: java.lang.String getName()>();

        specialinvoke r0.<ucar.units.UnitDBImpl: void addByName(java.lang.String,ucar.units.Unit)>($r4, $r2);

        $r5 = virtualinvoke r3.<ucar.units.UnitID: java.lang.String getPlural()>();

        specialinvoke r0.<ucar.units.UnitDBImpl: void addByName(java.lang.String,ucar.units.Unit)>($r5, $r2);

        $r6 = virtualinvoke r3.<ucar.units.UnitID: java.lang.String getSymbol()>();

        specialinvoke r0.<ucar.units.UnitDBImpl: void addBySymbol(java.lang.String,ucar.units.Unit)>($r6, $r2);

        return;
    }

    public ucar.units.Unit get(java.lang.String)
    {
        ucar.units.Unit $r2, r3;
        java.lang.String r1;
        ucar.units.UnitDBImpl r0;

        r0 := @this: ucar.units.UnitDBImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.units.UnitDBImpl: ucar.units.Unit getBySymbol(java.lang.String)>(r1);

        r3 = $r2;

        if $r2 != null goto label1;

        r3 = virtualinvoke r0.<ucar.units.UnitDBImpl: ucar.units.Unit getByName(java.lang.String)>(r1);

     label1:
        return r3;
    }

    public ucar.units.Unit getByName(java.lang.String)
    {
        java.util.Map $r2;
        ucar.units.Unit $r5;
        java.lang.Object $r4;
        java.lang.String r1, $r3;
        ucar.units.UnitDBImpl r0;

        r0 := @this: ucar.units.UnitDBImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.units.UnitDBImpl: java.util.Map nameMap>;

        $r3 = staticinvoke <ucar.units.UnitDBImpl: java.lang.String canonicalize(java.lang.String)>(r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (ucar.units.Unit) $r4;

        return $r5;
    }

    private static java.lang.String canonicalize(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(32, 95);

        return $r2;
    }

    public ucar.units.Unit getBySymbol(java.lang.String)
    {
        java.util.Map $r2;
        ucar.units.Unit $r4;
        java.lang.Object $r3;
        java.lang.String r1;
        ucar.units.UnitDBImpl r0;

        r0 := @this: ucar.units.UnitDBImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.units.UnitDBImpl: java.util.Map symbolMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (ucar.units.Unit) $r3;

        return $r4;
    }

    public java.lang.String toString()
    {
        java.util.Set $r1;
        java.lang.String $r2;
        ucar.units.UnitDBImpl r0;

        r0 := @this: ucar.units.UnitDBImpl;

        $r1 = r0.<ucar.units.UnitDBImpl: java.util.Set unitSet>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public final java.util.Iterator getIterator()
    {
        java.util.Set $r1;
        java.util.Iterator $r2;
        ucar.units.UnitDBImpl r0;

        r0 := @this: ucar.units.UnitDBImpl;

        $r1 = r0.<ucar.units.UnitDBImpl: java.util.Set unitSet>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        return $r2;
    }

    private final void addByName(java.lang.String, ucar.units.Unit) throws ucar.units.UnitExistsException
    {
        java.util.Map $r2;
        ucar.units.Unit r4;
        java.lang.String r0, $r3;
        ucar.units.UnitDBImpl r1;

        r1 := @this: ucar.units.UnitDBImpl;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: ucar.units.Unit;

        if r0 == null goto label1;

        $r2 = r1.<ucar.units.UnitDBImpl: java.util.Map nameMap>;

        $r3 = staticinvoke <ucar.units.UnitDBImpl: java.lang.String canonicalize(java.lang.String)>(r0);

        staticinvoke <ucar.units.UnitDBImpl: void addUnique(java.util.Map,java.lang.String,ucar.units.Unit)>($r2, $r3, r4);

     label1:
        return;
    }

    private final void addBySymbol(java.lang.String, ucar.units.Unit) throws ucar.units.UnitExistsException
    {
        java.util.Map $r3;
        ucar.units.Unit r2;
        java.lang.String r0;
        ucar.units.UnitDBImpl r1;

        r1 := @this: ucar.units.UnitDBImpl;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: ucar.units.Unit;

        if r0 == null goto label1;

        $r3 = r1.<ucar.units.UnitDBImpl: java.util.Map symbolMap>;

        staticinvoke <ucar.units.UnitDBImpl: void addUnique(java.util.Map,java.lang.String,ucar.units.Unit)>($r3, r0, r2);

     label1:
        return;
    }

    private static final void addUnique(java.util.Map, java.lang.String, ucar.units.Unit) throws ucar.units.UnitExistsException
    {
        java.util.Map r0;
        ucar.units.Unit r2, r4;
        java.lang.Object $r3;
        java.lang.String r1;
        ucar.units.UnitExistsException $r5;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: ucar.units.Unit;

        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        r4 = (ucar.units.Unit) $r3;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r5 = new ucar.units.UnitExistsException;

        specialinvoke $r5.<ucar.units.UnitExistsException: void <init>(ucar.units.Unit,ucar.units.Unit)>(r4, r2);

        throw $r5;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <ucar.units.UnitDBImpl: long serialVersionUID> = 1L;

        return;
    }
}
