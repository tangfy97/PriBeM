public class com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList extends java.util.AbstractList
{
    java.util.List sencInfo;
    com.coremedia.iso.boxes.h264.AvcConfigurationBox avcC;
    javax.crypto.SecretKey secretKey;
    java.util.List parent;
    final com.googlecode.mp4parser.authoring.tracks.DeCencTrack this$0;

    public void <init>(com.googlecode.mp4parser.authoring.tracks.DeCencTrack, javax.crypto.SecretKey, java.util.List, com.googlecode.mp4parser.authoring.Track, java.util.List)
    {
        com.googlecode.mp4parser.authoring.Track r5;
        com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry $r7;
        java.util.Iterator $r9;
        com.coremedia.iso.boxes.Box r11;
        com.coremedia.iso.boxes.SampleDescriptionBox $r6;
        com.coremedia.iso.boxes.h264.AvcConfigurationBox $r12;
        java.util.List r2, r4, $r8;
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList r0;
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack r1;
        java.lang.Object $r10;
        javax.crypto.SecretKey r3;
        boolean $z0, $z1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.tracks.DeCencTrack;

        r3 := @parameter1: javax.crypto.SecretKey;

        r4 := @parameter2: java.util.List;

        r5 := @parameter3: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter4: java.util.List;

        r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: com.googlecode.mp4parser.authoring.tracks.DeCencTrack this$0> = r1;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: com.coremedia.iso.boxes.h264.AvcConfigurationBox avcC> = null;

        r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: java.util.List sencInfo> = r2;

        r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: javax.crypto.SecretKey secretKey> = r3;

        r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: java.util.List parent> = r4;

        $r6 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r7 = virtualinvoke $r6.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $r8 = virtualinvoke $r7.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: java.util.List getBoxes()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.coremedia.iso.boxes.Box) $r10;

        $z0 = r11 instanceof com.coremedia.iso.boxes.h264.AvcConfigurationBox;

        if $z0 == 0 goto label2;

        $r12 = (com.coremedia.iso.boxes.h264.AvcConfigurationBox) r11;

        r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: com.coremedia.iso.boxes.h264.AvcConfigurationBox avcC> = $r12;

     label2:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return;
    }

    javax.crypto.Cipher getCipher(javax.crypto.SecretKey, byte[])
    {
        byte[] r0, r1;
        java.lang.RuntimeException $r6, $r8, $r10, $r12;
        javax.crypto.Cipher $r2;
        java.security.InvalidAlgorithmParameterException $r11;
        javax.crypto.spec.IvParameterSpec $r4;
        javax.crypto.NoSuchPaddingException $r5;
        java.security.NoSuchAlgorithmException $r7;
        int $i0;
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList r13;
        java.security.InvalidKeyException $r9;
        javax.crypto.SecretKey r3;

        r13 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList;

        r3 := @parameter0: javax.crypto.SecretKey;

        r1 := @parameter1: byte[];

        r0 = newarray (byte)[16];

        $i0 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i0);

     label1:
        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CTR/NoPadding");

        $r4 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r0);

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, r3, $r4);

     label2:
        return $r2;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label6:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
        catch java.security.InvalidKeyException from label1 to label2 with label4;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label6;
    }

    public com.googlecode.mp4parser.authoring.Sample get(int)
    {
        byte[] $r9, $r13, r18, r19, $r20, $r21, r31;
        java.nio.ByteBuffer $r4, $r5;
        com.coremedia.iso.boxes.h264.AvcConfigurationBox $r12;
        com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat r8;
        com.googlecode.mp4parser.authoring.SampleImpl $r14;
        boolean $z0;
        com.googlecode.mp4parser.authoring.Sample r3;
        javax.crypto.IllegalBlockSizeException $r28;
        java.util.List $r1, $r6, r30;
        java.lang.StringBuilder $r22, $r24;
        javax.crypto.SecretKey $r10;
        long $l4, $l7;
        com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair r17;
        javax.crypto.Cipher $r11;
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList r0;
        int i0, $i1, $i2, i3, i5, $i6;
        java.lang.String $r25;
        java.io.PrintStream $r23;
        java.util.Iterator $r15;
        java.lang.RuntimeException $r27, $r29;
        javax.crypto.BadPaddingException $r26;
        java.lang.Object $r2, $r7, $r16;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList;

        i0 := @parameter0: int;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: java.util.List parent>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (com.googlecode.mp4parser.authoring.Sample) $r2;

        $r4 = interfaceinvoke r3.<com.googlecode.mp4parser.authoring.Sample: java.nio.ByteBuffer asByteBuffer()>();

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $i1 = virtualinvoke $r4.<java.nio.ByteBuffer: int limit()>();

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i1);

        $r6 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: java.util.List sencInfo>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat) $r7;

        $r10 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: javax.crypto.SecretKey secretKey>;

        $r9 = r8.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat: byte[] iv>;

        $r11 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: javax.crypto.Cipher getCipher(javax.crypto.SecretKey,byte[])>($r10, $r9);

     label01:
        $r12 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: com.coremedia.iso.boxes.h264.AvcConfigurationBox avcC>;

        if $r12 == null goto label05;

        r30 = r8.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat: java.util.List pairs>;

        $r15 = interfaceinvoke r30.<java.util.List: java.util.Iterator iterator()>();

        goto label03;

     label02:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair) $r16;

        i3 = r17.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair: int clear>;

        $l4 = r17.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair: long encrypted>;

        i5 = (int) $l4;

        r18 = newarray (byte)[i3];

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r18);

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r18);

        if i5 <= 0 goto label03;

        r19 = newarray (byte)[i5];

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r19);

        $r20 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] update(byte[])>(r19);

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r20);

     label03:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label02;

        $i6 = virtualinvoke $r4.<java.nio.ByteBuffer: int remaining()>();

        if $i6 <= 0 goto label04;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Decrypted sample but still data remaining: ");

        $l7 = interfaceinvoke r3.<com.googlecode.mp4parser.authoring.Sample: long getSize()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label04:
        $r21 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal()>();

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r21);

        goto label06;

     label05:
        $i2 = virtualinvoke $r4.<java.nio.ByteBuffer: int limit()>();

        r31 = newarray (byte)[$i2];

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r31);

        $r13 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r31);

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r13);

     label06:
        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

     label07:
        goto label10;

     label08:
        $r28 := @caughtexception;

        $r29 = new java.lang.RuntimeException;

        specialinvoke $r29.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r28);

        throw $r29;

     label09:
        $r26 := @caughtexception;

        $r27 = new java.lang.RuntimeException;

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r26);

        throw $r27;

     label10:
        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r14 = new com.googlecode.mp4parser.authoring.SampleImpl;

        specialinvoke $r14.<com.googlecode.mp4parser.authoring.SampleImpl: void <init>(java.nio.ByteBuffer)>($r5);

        return $r14;

        catch javax.crypto.IllegalBlockSizeException from label01 to label07 with label08;
        catch javax.crypto.BadPaddingException from label01 to label07 with label09;
    }

    public int size()
    {
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: java.util.List parent>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public volatile java.lang.Object get(int)
    {
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList r0;
        int i0;
        com.googlecode.mp4parser.authoring.Sample $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: com.googlecode.mp4parser.authoring.Sample get(int)>(i0);

        return $r1;
    }
}
