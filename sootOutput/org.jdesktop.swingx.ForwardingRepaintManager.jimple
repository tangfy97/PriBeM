public class org.jdesktop.swingx.ForwardingRepaintManager extends javax.swing.RepaintManager
{
    private javax.swing.RepaintManager delegate;

    public void <init>(javax.swing.RepaintManager)
    {
        javax.swing.RepaintManager r1, $r3;
        org.jdesktop.swingx.ForwardingRepaintManager r0;
        java.lang.Object $r2;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: javax.swing.RepaintManager;

        specialinvoke r0.<javax.swing.RepaintManager: void <init>()>();

        $r2 = staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r1, "delegate is null");

        $r3 = (javax.swing.RepaintManager) $r2;

        r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate> = $r3;

        return;
    }

    public void addDirtyRegion(java.applet.Applet, int, int, int, int)
    {
        java.applet.Applet r1;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;
        int i0, i1, i2, i3;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: java.applet.Applet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r2.<javax.swing.RepaintManager: void addDirtyRegion(java.applet.Applet,int,int,int,int)>(r1, i0, i1, i2, i3);

        return;
    }

    public void addDirtyRegion(javax.swing.JComponent, int, int, int, int)
    {
        javax.swing.JComponent r1;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;
        int i0, i1, i2, i3;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: javax.swing.JComponent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r2.<javax.swing.RepaintManager: void addDirtyRegion(javax.swing.JComponent,int,int,int,int)>(r1, i0, i1, i2, i3);

        return;
    }

    public void addDirtyRegion(java.awt.Window, int, int, int, int)
    {
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;
        java.awt.Window r1;
        int i0, i1, i2, i3;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: java.awt.Window;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r2.<javax.swing.RepaintManager: void addDirtyRegion(java.awt.Window,int,int,int,int)>(r1, i0, i1, i2, i3);

        return;
    }

    public synchronized void addInvalidComponent(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r2.<javax.swing.RepaintManager: void addInvalidComponent(javax.swing.JComponent)>(r1);

        return;
    }

    public java.awt.Rectangle getDirtyRegion(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.awt.Rectangle $r3;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        $r3 = virtualinvoke $r2.<javax.swing.RepaintManager: java.awt.Rectangle getDirtyRegion(javax.swing.JComponent)>(r1);

        return $r3;
    }

    public java.awt.Dimension getDoubleBufferMaximumSize()
    {
        java.awt.Dimension $r2;
        javax.swing.RepaintManager $r1;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        $r1 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        $r2 = virtualinvoke $r1.<javax.swing.RepaintManager: java.awt.Dimension getDoubleBufferMaximumSize()>();

        return $r2;
    }

    public java.awt.Image getOffscreenBuffer(java.awt.Component, int, int)
    {
        java.awt.Image $r3;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;
        int i0, i1;
        java.awt.Component r1;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: java.awt.Component;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        $r3 = virtualinvoke $r2.<javax.swing.RepaintManager: java.awt.Image getOffscreenBuffer(java.awt.Component,int,int)>(r1, i0, i1);

        return $r3;
    }

    public java.awt.Image getVolatileOffscreenBuffer(java.awt.Component, int, int)
    {
        java.awt.Image $r3;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;
        int i0, i1;
        java.awt.Component r1;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: java.awt.Component;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        $r3 = virtualinvoke $r2.<javax.swing.RepaintManager: java.awt.Image getVolatileOffscreenBuffer(java.awt.Component,int,int)>(r1, i0, i1);

        return $r3;
    }

    public boolean isCompletelyDirty(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        $z0 = virtualinvoke $r2.<javax.swing.RepaintManager: boolean isCompletelyDirty(javax.swing.JComponent)>(r1);

        return $z0;
    }

    public boolean isDoubleBufferingEnabled()
    {
        javax.swing.RepaintManager $r1;
        org.jdesktop.swingx.ForwardingRepaintManager r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        $r1 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        $z0 = virtualinvoke $r1.<javax.swing.RepaintManager: boolean isDoubleBufferingEnabled()>();

        return $z0;
    }

    public void markCompletelyClean(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r2.<javax.swing.RepaintManager: void markCompletelyClean(javax.swing.JComponent)>(r1);

        return;
    }

    public void markCompletelyDirty(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r2.<javax.swing.RepaintManager: void markCompletelyDirty(javax.swing.JComponent)>(r1);

        return;
    }

    public void paintDirtyRegions()
    {
        javax.swing.RepaintManager $r1;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        $r1 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r1.<javax.swing.RepaintManager: void paintDirtyRegions()>();

        return;
    }

    public synchronized void removeInvalidComponent(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r2.<javax.swing.RepaintManager: void removeInvalidComponent(javax.swing.JComponent)>(r1);

        return;
    }

    public void setDoubleBufferingEnabled(boolean)
    {
        javax.swing.RepaintManager $r1;
        org.jdesktop.swingx.ForwardingRepaintManager r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r1.<javax.swing.RepaintManager: void setDoubleBufferingEnabled(boolean)>(z0);

        return;
    }

    public void setDoubleBufferMaximumSize(java.awt.Dimension)
    {
        java.awt.Dimension r1;
        javax.swing.RepaintManager $r2;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        r1 := @parameter0: java.awt.Dimension;

        $r2 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r2.<javax.swing.RepaintManager: void setDoubleBufferMaximumSize(java.awt.Dimension)>(r1);

        return;
    }

    public synchronized java.lang.String toString()
    {
        java.lang.String $r2;
        javax.swing.RepaintManager $r1;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        $r1 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        $r2 = virtualinvoke $r1.<javax.swing.RepaintManager: java.lang.String toString()>();

        return $r2;
    }

    public void validateInvalidComponents()
    {
        javax.swing.RepaintManager $r1;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        $r1 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        virtualinvoke $r1.<javax.swing.RepaintManager: void validateInvalidComponents()>();

        return;
    }

    public final javax.swing.RepaintManager getDelegateManager()
    {
        javax.swing.RepaintManager $r1;
        org.jdesktop.swingx.ForwardingRepaintManager r0;

        r0 := @this: org.jdesktop.swingx.ForwardingRepaintManager;

        $r1 = r0.<org.jdesktop.swingx.ForwardingRepaintManager: javax.swing.RepaintManager delegate>;

        return $r1;
    }
}
