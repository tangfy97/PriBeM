public final class com.mycila.inject.internal.guava.util.concurrent.UncaughtExceptionHandlers extends java.lang.Object
{

    private void <init>()
    {
        com.mycila.inject.internal.guava.util.concurrent.UncaughtExceptionHandlers r0;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.UncaughtExceptionHandlers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Thread$UncaughtExceptionHandler systemExit()
    {
        com.mycila.inject.internal.guava.util.concurrent.UncaughtExceptionHandlers$Exiter $r0;
        java.lang.Runtime $r1;

        $r0 = new com.mycila.inject.internal.guava.util.concurrent.UncaughtExceptionHandlers$Exiter;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        specialinvoke $r0.<com.mycila.inject.internal.guava.util.concurrent.UncaughtExceptionHandlers$Exiter: void <init>(java.lang.Runtime)>($r1);

        return $r0;
    }
}
