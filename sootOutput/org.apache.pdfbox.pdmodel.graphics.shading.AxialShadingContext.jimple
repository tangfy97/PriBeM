public class org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext extends java.lang.Object implements java.awt.PaintContext
{
    private java.awt.image.ColorModel outputColorModel;
    private java.awt.color.ColorSpace shadingColorSpace;
    private org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform;
    private org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 shadingType;
    private float[] coords;
    private float[] domain;
    private float[] background;
    private boolean[] extend;
    private double x1x0;
    private double y1y0;
    private float d1d0;
    private double denom;
    private static final org.apache.commons.logging.Log LOG;

    public void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2, java.awt.image.ColorModel, java.awt.geom.AffineTransform, org.apache.pdfbox.util.Matrix, int)
    {
        org.apache.pdfbox.cos.COSBoolean $r33, $r36;
        java.awt.geom.AffineTransform r5, $r46;
        org.apache.pdfbox.cos.COSBase $r32, $r35;
        org.apache.pdfbox.pdmodel.common.function.PDFunction $r42, $r44;
        float[] $r3, $r6, $r7, $r8, $r9, $r16, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r39, $r45, $r47, $r48, r52;
        boolean[] $r21, $r30, $r31, $r34;
        java.io.IOException $r49;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace $r11;
        org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.image.ComponentColorModel $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, f23;
        org.apache.pdfbox.cos.COSArray $r2, $r15, $r18, $r20, $r28, $r38;
        java.awt.color.ColorSpace $r12, $r40;
        org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN $r43;
        int i0, $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 r1, $r10, $r14, $r17, $r19, $r37;
        org.apache.pdfbox.pdmodel.graphics.color.PDSeparation $r41;
        java.awt.image.ColorModel r51;
        org.apache.pdfbox.util.Matrix r4;
        org.apache.commons.logging.Log $r50;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2;

        r51 := @parameter1: java.awt.image.ColorModel;

        r5 := @parameter2: java.awt.geom.AffineTransform;

        r4 := @parameter3: org.apache.pdfbox.util.Matrix;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 shadingType> = r1;

        $r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.cos.COSArray getCoords()>();

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: float[] toFloatArray()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords> = $r3;

        if r4 == null goto label01;

        $r45 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $i1 = lengthof $r45;

        r52 = newarray (float)[$i1];

        $r46 = virtualinvoke r4.<org.apache.pdfbox.util.Matrix: java.awt.geom.AffineTransform createAffineTransform()>();

        $r47 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        virtualinvoke $r46.<java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)>($r47, 0, r52, 0, 2);

        $f18 = (float) i0;

        $f17 = r52[1];

        $f19 = $f18 - $f17;

        r52[1] = $f19;

        $f21 = (float) i0;

        $f20 = r52[3];

        $f22 = $f21 - $f20;

        r52[3] = $f22;

        $r48 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        virtualinvoke r5.<java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)>(r52, 0, $r48, 0, 2);

        goto label02;

     label01:
        $d0 = virtualinvoke r5.<java.awt.geom.AffineTransform: double getTranslateY()>();

        f23 = (float) $d0;

        $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $f0 = (float) i0;

        $f2 = $f0 + f23;

        $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $f1 = $r6[1];

        $f3 = $f2 - $f1;

        $r7[1] = $f3;

        $r9 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $f4 = (float) i0;

        $f6 = $f4 + f23;

        $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $f5 = $r8[3];

        $f7 = $f6 - $f5;

        $r9[3] = $f7;

     label02:
        $r10 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 shadingType>;

        $r11 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>();

        $z0 = $r11 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB;

        if $z0 != 0 goto label04;

        $r40 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: java.awt.color.ColorSpace getJavaColorSpace()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: java.awt.color.ColorSpace shadingColorSpace> = $r40;

        $z3 = $r11 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN;

        if $z3 == 0 goto label03;

        $r43 = (org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN) $r11;

        $r44 = virtualinvoke $r43.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN: org.apache.pdfbox.pdmodel.common.function.PDFunction getTintTransform()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform> = $r44;

        goto label04;

     label03:
        $z4 = $r11 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDSeparation;

        if $z4 == 0 goto label04;

        $r41 = (org.apache.pdfbox.pdmodel.graphics.color.PDSeparation) $r11;

        $r42 = virtualinvoke $r41.<org.apache.pdfbox.pdmodel.graphics.color.PDSeparation: org.apache.pdfbox.pdmodel.common.function.PDFunction getTintTransform()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform> = $r42;

     label04:
        goto label06;

     label05:
        $r49 := @caughtexception;

        $r50 = <org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r50.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("error while creating colorSpace", $r49);

     label06:
        $r12 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000);

        $r13 = new java.awt.image.ComponentColorModel;

        specialinvoke $r13.<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>($r12, 1, 0, 3, 0);

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: java.awt.image.ColorModel outputColorModel> = $r13;

        $r14 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 shadingType>;

        $r15 = virtualinvoke $r14.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.cos.COSArray getDomain()>();

        if $r15 == null goto label07;

        $r37 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 shadingType>;

        $r38 = virtualinvoke $r37.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.cos.COSArray getDomain()>();

        $r39 = virtualinvoke $r38.<org.apache.pdfbox.cos.COSArray: float[] toFloatArray()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] domain> = $r39;

        goto label08;

     label07:
        $r16 = newarray (float)[2];

        $r16[0] = 0.0F;

        $r16[1] = 1.0F;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] domain> = $r16;

     label08:
        $r17 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 shadingType>;

        $r18 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.cos.COSArray getExtend()>();

        $r19 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 shadingType>;

        $r20 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.cos.COSArray getExtend()>();

        if $r20 == null goto label09;

        $r30 = newarray (boolean)[2];

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: boolean[] extend> = $r30;

        $r31 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: boolean[] extend>;

        $r32 = virtualinvoke $r18.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0);

        $r33 = (org.apache.pdfbox.cos.COSBoolean) $r32;

        $z1 = virtualinvoke $r33.<org.apache.pdfbox.cos.COSBoolean: boolean getValue()>();

        $r31[0] = $z1;

        $r34 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: boolean[] extend>;

        $r35 = virtualinvoke $r18.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1);

        $r36 = (org.apache.pdfbox.cos.COSBoolean) $r35;

        $z2 = virtualinvoke $r36.<org.apache.pdfbox.cos.COSBoolean: boolean getValue()>();

        $r34[1] = $z2;

        goto label10;

     label09:
        $r21 = newarray (boolean)[2];

        $r21[0] = 0;

        $r21[1] = 0;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: boolean[] extend> = $r21;

     label10:
        $r22 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $f9 = $r22[2];

        $r23 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $f8 = $r23[0];

        $f10 = $f9 - $f8;

        $d1 = (double) $f10;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: double x1x0> = $d1;

        $r24 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $f12 = $r24[3];

        $r25 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $f11 = $r25[1];

        $f13 = $f12 - $f11;

        $d2 = (double) $f13;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: double y1y0> = $d2;

        $r26 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] domain>;

        $f15 = $r26[1];

        $r27 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] domain>;

        $f14 = $r27[0];

        $f16 = $f15 - $f14;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float d1d0> = $f16;

        $d3 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: double x1x0>;

        $d4 = staticinvoke <java.lang.Math: double pow(double,double)>($d3, 2.0);

        $d5 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: double y1y0>;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>($d5, 2.0);

        $d7 = $d4 + $d6;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: double denom> = $d7;

        $r28 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.cos.COSArray getBackground()>();

        if $r28 == null goto label11;

        $r29 = virtualinvoke $r28.<org.apache.pdfbox.cos.COSArray: float[] toFloatArray()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] background> = $r29;

     label11:
        return;

        catch java.io.IOException from label02 to label04 with label05;
    }

    public void dispose()
    {
        org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: java.awt.image.ColorModel outputColorModel> = null;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: java.awt.color.ColorSpace shadingColorSpace> = null;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform> = null;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 shadingType> = null;

        return;
    }

    public java.awt.image.ColorModel getColorModel()
    {
        org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext r0;
        java.awt.image.ColorModel $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: java.awt.image.ColorModel outputColorModel>;

        return $r1;
    }

    public java.awt.image.Raster getRaster(int, int, int, int)
    {
        byte $b8, $b9, $b10;
        org.apache.pdfbox.pdmodel.common.function.PDFunction $r10, $r11;
        float[] $r4, $r5, $r6, $r7, $r8, $r13, $r14, $r16, $r17, $r18, r23;
        boolean[] $r12, $r15;
        java.io.IOException $r19, $r21;
        org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext r0;
        int[] r3;
        boolean $z0, $z1, z2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, $f13, $f14, $f15, $f16, $f17, $f18;
        java.awt.color.ColorSpace $r24, $r25;
        int i0, i1, $i2, $i3, i4, $i5, i6, $i7, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, d14;
        org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 $r9;
        java.awt.image.ColorModel $r1;
        java.awt.image.WritableRaster $r2;
        org.apache.commons.logging.Log $r20, $r22;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext;

        i4 := @parameter0: int;

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: java.awt.image.ColorModel getColorModel()>();

        $r2 = virtualinvoke $r1.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>(i0, i1);

        $i2 = i0 * i1;

        $i3 = $i2 * 4;

        r3 = newarray (int)[$i3];

        i11 = 0;

     label01:
        if i11 >= i1 goto label20;

        i12 = 0;

     label02:
        if i12 >= i0 goto label19;

        z2 = 0;

        $d1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: double x1x0>;

        $i5 = i4 + i12;

        $f1 = (float) $i5;

        $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $f0 = $r4[0];

        $f2 = $f1 - $f0;

        $d0 = (double) $f2;

        d13 = $d1 * $d0;

        $d3 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: double y1y0>;

        $i7 = i6 + i11;

        $f4 = (float) $i7;

        $r5 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        $f3 = $r5[1];

        $f5 = $f4 - $f3;

        $d2 = (double) $f5;

        $d4 = $d3 * $d2;

        d14 = d13 + $d4;

        $d5 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: double denom>;

        $b8 = $d5 cmpl 0.0;

        if $b8 != 0 goto label03;

        $r18 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] background>;

        if $r18 == null goto label18;

        z2 = 1;

        goto label04;

     label03:
        $d6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: double denom>;

        d14 = d14 / $d6;

     label04:
        $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] domain>;

        $f6 = $r6[0];

        $d7 = (double) $f6;

        $b9 = d14 cmpg $d7;

        $i22 = (int) $b9;

        if $i22 >= 0 goto label06;

        $r15 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: boolean[] extend>;

        $z1 = $r15[0];

        if $z1 == 0 goto label05;

        $r17 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] domain>;

        $f11 = $r17[0];

        d14 = (double) $f11;

        goto label08;

     label05:
        $r16 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] background>;

        if $r16 == null goto label18;

        z2 = 1;

        goto label08;

     label06:
        $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] domain>;

        $f7 = $r7[1];

        $d8 = (double) $f7;

        $b10 = d14 cmpl $d8;

        $i23 = (int) $b10;

        if $i23 <= 0 goto label08;

        $r12 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: boolean[] extend>;

        $z0 = $r12[1];

        if $z0 == 0 goto label07;

        $r14 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] domain>;

        $f10 = $r14[1];

        d14 = (double) $f10;

        goto label08;

     label07:
        $r13 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] background>;

        if $r13 == null goto label18;

        z2 = 1;

     label08:
        r23 = null;

        $i13 = i11 * i0;

        $i14 = $i13 + i12;

        $i15 = $i14 * 4;

        if z2 == 0 goto label09;

        r23 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] background>;

        goto label12;

     label09:
        $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] domain>;

        $f8 = $r8[0];

        $d11 = (double) $f8;

        $f9 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float d1d0>;

        $d9 = (double) $f9;

        $d10 = $d9 * d14;

        $d12 = $d11 + $d10;

        f12 = (float) $d12;

        $r9 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2 shadingType>;

        r23 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: float[] evalFunction(float)>(f12);

     label10:
        goto label12;

     label11:
        $r21 := @caughtexception;

        $r22 = <org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r22.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("error while processing a function", $r21);

     label12:
        $r24 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: java.awt.color.ColorSpace shadingColorSpace>;

        if $r24 == null goto label17;

        $r10 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform>;

        if $r10 == null goto label16;

     label13:
        $r11 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform>;

        r23 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.common.function.PDFunction: float[] eval(float[])>(r23);

     label14:
        goto label16;

     label15:
        $r19 := @caughtexception;

        $r20 = <org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r20.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("error while processing a function", $r19);

     label16:
        $r25 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: java.awt.color.ColorSpace shadingColorSpace>;

        r23 = virtualinvoke $r25.<java.awt.color.ColorSpace: float[] toRGB(float[])>(r23);

     label17:
        $f13 = r23[0];

        $f14 = $f13 * 255.0F;

        $i16 = (int) $f14;

        r3[$i15] = $i16;

        $i17 = $i15 + 1;

        $f15 = r23[1];

        $f16 = $f15 * 255.0F;

        $i18 = (int) $f16;

        r3[$i17] = $i18;

        $i19 = $i15 + 2;

        $f17 = r23[2];

        $f18 = $f17 * 255.0F;

        $i20 = (int) $f18;

        r3[$i19] = $i20;

        $i21 = $i15 + 3;

        r3[$i21] = 255;

     label18:
        i12 = i12 + 1;

        goto label02;

     label19:
        i11 = i11 + 1;

        goto label01;

     label20:
        virtualinvoke $r2.<java.awt.image.WritableRaster: void setPixels(int,int,int,int,int[])>(0, 0, i0, i1, r3);

        return $r2;

        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label13 to label14 with label15;
    }

    public float[] getCoords()
    {
        org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext r0;
        float[] $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] coords>;

        return $r1;
    }

    public float[] getDomain()
    {
        org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext r0;
        float[] $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: float[] domain>;

        return $r1;
    }

    public boolean[] getExtend()
    {
        boolean[] $r1;
        org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: boolean[] extend>;

        return $r1;
    }

    public org.apache.pdfbox.pdmodel.common.function.PDFunction getShadingTintTransform()
    {
        org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext r0;
        org.apache.pdfbox.pdmodel.common.function.PDFunction $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext;");

        <org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
