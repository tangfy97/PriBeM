public class com.coremedia.iso.IsoFile extends com.googlecode.mp4parser.BasicContainer implements java.io.Closeable
{
    private static com.googlecode.mp4parser.util.Logger LOG;

    static void <clinit>()
    {
        com.googlecode.mp4parser.util.Logger $r0;

        $r0 = staticinvoke <com.googlecode.mp4parser.util.Logger: com.googlecode.mp4parser.util.Logger getLogger(java.lang.Class)>(class "Lcom/coremedia/iso/IsoFile;");

        <com.coremedia.iso.IsoFile: com.googlecode.mp4parser.util.Logger LOG> = $r0;

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        com.googlecode.mp4parser.FileDataSourceImpl $r1;
        java.lang.String r3;
        com.coremedia.iso.IsoFile r0;
        java.io.File $r2;

        r0 := @this: com.coremedia.iso.IsoFile;

        r3 := @parameter0: java.lang.String;

        $r1 = new com.googlecode.mp4parser.FileDataSourceImpl;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<com.googlecode.mp4parser.FileDataSourceImpl: void <init>(java.io.File)>($r2);

        specialinvoke r0.<com.coremedia.iso.IsoFile: void <init>(com.googlecode.mp4parser.DataSource)>($r1);

        return;
    }

    public void <init>(com.googlecode.mp4parser.DataSource) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource r1;
        long $l0;
        java.lang.String[] $r3;
        com.coremedia.iso.IsoFile r0;
        com.coremedia.iso.PropertyBoxParserImpl $r2;

        r0 := @this: com.coremedia.iso.IsoFile;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        specialinvoke r0.<com.googlecode.mp4parser.BasicContainer: void <init>()>();

        $l0 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long size()>();

        $r2 = new com.coremedia.iso.PropertyBoxParserImpl;

        $r3 = newarray (java.lang.String)[0];

        specialinvoke $r2.<com.coremedia.iso.PropertyBoxParserImpl: void <init>(java.lang.String[])>($r3);

        virtualinvoke r0.<com.coremedia.iso.IsoFile: void parseContainer(com.googlecode.mp4parser.DataSource,long,com.coremedia.iso.BoxParser)>(r1, $l0, $r2);

        return;
    }

    public void <init>(com.googlecode.mp4parser.DataSource, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource r1;
        com.coremedia.iso.IsoFile r0;
        com.coremedia.iso.BoxParser r2;

        r0 := @this: com.coremedia.iso.IsoFile;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        r2 := @parameter1: com.coremedia.iso.BoxParser;

        specialinvoke r0.<com.googlecode.mp4parser.BasicContainer: void <init>()>();

        r0.<com.coremedia.iso.IsoFile: com.googlecode.mp4parser.DataSource dataSource> = r1;

        r0.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser boxParser> = r2;

        return;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.DataSource $r3;
        java.lang.StringBuilder $r0, $r1, $r5;
        java.lang.String $r4, $r6;
        com.coremedia.iso.IsoFile r2;

        r2 := @this: com.coremedia.iso.IsoFile;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IsoFile[");

        $r3 = r2.<com.coremedia.iso.IsoFile: com.googlecode.mp4parser.DataSource dataSource>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static byte[] fourCCtoBytes(java.lang.String)
    {
        byte[] r0;
        byte $b3;
        int $i0, $i1, i4;
        char $c2;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r0 = newarray (byte)[4];

        if r1 == null goto label3;

        i4 = 0;

        goto label2;

     label1:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        $b3 = (byte) $c2;

        r0[i4] = $b3;

        i4 = i4 + 1;

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(4, $i0);

        if i4 < $i1 goto label1;

     label3:
        return r0;
    }

    public static java.lang.String bytesToFourCC(byte[])
    {
        byte[] r0, r1;
        int $i0, $i1;
        java.lang.Error $r4;
        java.lang.String $r2;
        java.io.UnsupportedEncodingException $r3;

        r1 := @parameter0: byte[];

        r0 = newarray (byte)[4];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 4);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i1);

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>(r0, "ISO-8859-1");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>("Required character encoding is missing", $r3);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public long getSize()
    {
        long $l0;
        com.coremedia.iso.IsoFile r0;

        r0 := @this: com.coremedia.iso.IsoFile;

        $l0 = virtualinvoke r0.<com.coremedia.iso.IsoFile: long getContainerSize()>();

        return $l0;
    }

    public com.coremedia.iso.boxes.MovieBox getMovieBox()
    {
        java.util.Iterator $r2;
        com.coremedia.iso.boxes.Box r4;
        com.coremedia.iso.IsoFile r0;
        com.coremedia.iso.boxes.MovieBox $r5;
        java.util.List $r1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: com.coremedia.iso.IsoFile;

        $r1 = virtualinvoke r0.<com.coremedia.iso.IsoFile: java.util.List getBoxes()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.coremedia.iso.boxes.Box) $r3;

        $z1 = r4 instanceof com.coremedia.iso.boxes.MovieBox;

        if $z1 == 0 goto label2;

        $r5 = (com.coremedia.iso.boxes.MovieBox) r4;

        return $r5;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        java.nio.channels.WritableByteChannel r1;
        com.coremedia.iso.IsoFile r0;

        r0 := @this: com.coremedia.iso.IsoFile;

        r1 := @parameter0: java.nio.channels.WritableByteChannel;

        virtualinvoke r0.<com.coremedia.iso.IsoFile: void writeContainer(java.nio.channels.WritableByteChannel)>(r1);

        return;
    }

    public void close() throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource $r1;
        com.coremedia.iso.IsoFile r0;

        r0 := @this: com.coremedia.iso.IsoFile;

        $r1 = r0.<com.coremedia.iso.IsoFile: com.googlecode.mp4parser.DataSource dataSource>;

        interfaceinvoke $r1.<com.googlecode.mp4parser.DataSource: void close()>();

        return;
    }
}
