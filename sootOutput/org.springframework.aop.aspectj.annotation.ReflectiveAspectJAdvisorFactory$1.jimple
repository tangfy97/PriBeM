final class org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1 extends java.lang.Object implements org.springframework.util.ReflectionUtils$MethodCallback
{
    final org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory this$0;
    private final org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory val$lazySingletonAspectInstanceFactory;
    private final java.util.List val$advisors;
    private final java.lang.String val$aspectName;

    void <init>(org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory, org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory, java.util.List, java.lang.String)
    {
        org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory r2;
        java.util.List r3;
        org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1 r0;
        java.lang.String r4;
        org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory r1;

        r0 := @this: org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1;

        r1 := @parameter0: org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory;

        r2 := @parameter1: org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.String;

        r0.<org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1: org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory this$0> = r1;

        r0.<org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1: org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory val$lazySingletonAspectInstanceFactory> = r2;

        r0.<org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1: java.util.List val$advisors> = r3;

        r0.<org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1: java.lang.String val$aspectName> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void doWith(java.lang.reflect.Method) throws java.lang.IllegalArgumentException
    {
        org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory $r5;
        org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1 r2;
        java.util.List $r3, $r8;
        java.lang.'annotation'.Annotation $r1;
        int $i0;
        java.lang.String $r6;
        java.lang.reflect.Method r0;
        org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory $r4;
        org.springframework.aop.Advisor $r7;

        r2 := @this: org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation getAnnotation(java.lang.reflect.Method,java.lang.Class)>(r0, class "Lorg/aspectj/lang/annotation/Pointcut;");

        if $r1 != null goto label1;

        $r4 = r2.<org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1: org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory this$0>;

        $r5 = r2.<org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1: org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory val$lazySingletonAspectInstanceFactory>;

        $r3 = r2.<org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1: java.util.List val$advisors>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r6 = r2.<org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1: java.lang.String val$aspectName>;

        $r7 = virtualinvoke $r4.<org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory: org.springframework.aop.Advisor getAdvisor(java.lang.reflect.Method,org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory,int,java.lang.String)>(r0, $r5, $i0, $r6);

        if $r7 == null goto label1;

        $r8 = r2.<org.springframework.aop.aspectj.'annotation'.ReflectiveAspectJAdvisorFactory$1: java.util.List val$advisors>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

     label1:
        return;
    }
}
