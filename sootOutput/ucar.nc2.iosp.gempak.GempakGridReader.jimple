public class ucar.nc2.iosp.gempak.GempakGridReader extends ucar.nc2.iosp.gempak.GempakFileReader
{
    private static org.slf4j.Logger log;
    public static final java.lang.String GRID;
    public static final java.lang.String ANLB;
    public static final java.lang.String NAVB;
    private ucar.nc2.iosp.gempak.NavigationBlock navBlock;
    private ucar.nc2.iosp.gempak.AnalysisBlock analBlock;
    private ucar.grid.GridIndex gridIndex;
    private static final java.lang.String[] kcolnm;
    private int khdrln;
    private final java.lang.String filename;
    public static boolean useDP;
    private int bitPos;
    private int bitBuf;
    private int next;
    private int ch1;
    private int ch2;
    private int ch3;
    private int ch4;

    void <init>(java.lang.String)
    {
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        java.lang.String r1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakFileReader: void <init>()>();

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int khdrln> = 0;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitPos> = 0;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf> = 0;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int next> = 0;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch1> = 0;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch2> = 0;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch3> = 0;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch4> = 0;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: java.lang.String filename> = r1;

        return;
    }

    public static ucar.nc2.iosp.gempak.GempakGridReader getInstance(ucar.unidata.io.RandomAccessFile, boolean) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        ucar.nc2.iosp.gempak.GempakGridReader $r0;
        java.lang.String $r2;
        boolean z0;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        z0 := @parameter1: boolean;

        $r0 = new ucar.nc2.iosp.gempak.GempakGridReader;

        $r2 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        specialinvoke $r0.<ucar.nc2.iosp.gempak.GempakGridReader: void <init>(java.lang.String)>($r2);

        virtualinvoke $r0.<ucar.nc2.iosp.gempak.GempakGridReader: void init(ucar.unidata.io.RandomAccessFile,boolean)>(r1, z0);

        return $r0;
    }

    protected boolean init(boolean) throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.GempakFileReader$DMPart $r2;
        ucar.nc2.iosp.gempak.GempakFileReader$DMKeys $r3, $r29;
        ucar.nc2.iosp.gempak.NavigationBlock $r9, $r28, $r49;
        ucar.nc2.iosp.gempak.GempakFileReader$DMHeaders $r16, $r17, $r19;
        ucar.nc2.iosp.gempak.GempakFileReader$Key r43;
        java.lang.StringBuilder $r36, $r37, $r38, $r41, $r47;
        float[] $r7, $r11;
        long $l5;
        java.util.ArrayList $r51;
        java.lang.String $r6, $r33, $r34, $r40, $r42;
        ucar.nc2.iosp.gempak.GempakGridRecord r45, $r52;
        ucar.grid.GridIndex $r10, $r23, $r46, $r48;
        ucar.unidata.io.RandomAccessFile $r22;
        ucar.nc2.iosp.gempak.GempakFileReader$DMLabel $r1, $r14;
        int[] r15, r44;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r4, $r18, $r20, $r24, $r30;
        ucar.nc2.iosp.gempak.AnalysisBlock $r50;
        java.lang.String[] $r32, $r39;
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        int $i0, i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, $i18;
        java.util.Iterator $r21;
        java.lang.Object $r25, $r26, $r31;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakFileReader: boolean init(boolean)>(z0);

        if $z1 != 0 goto label01;

        return 0;

     label01:
        $r1 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i0 = $r1.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kftype>;

        if $i0 == 3 goto label02;

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void logError(java.lang.String)>("not a grid file");

        return 0;

     label02:
        $r2 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMPart getPart(java.lang.String)>("GRID");

        if $r2 != null goto label03;

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void logError(java.lang.String)>("No part named GRID found");

        return 0;

     label03:
        i1 = $r2.<ucar.nc2.iosp.gempak.GempakFileReader$DMPart: int klnhdr>;

        if i1 <= 128 goto label04;

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void logError(java.lang.String)>("Grid part header too long");

        return 0;

     label04:
        $i2 = i1 - 2;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int khdrln> = $i2;

        i14 = 0;

     label05:
        $r3 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMKeys keys>;

        $r4 = $r3.<ucar.nc2.iosp.gempak.GempakFileReader$DMKeys: java.util.List kkcol>;

        $i3 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i14 >= $i3 goto label07;

        $r29 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMKeys keys>;

        $r30 = $r29.<ucar.nc2.iosp.gempak.GempakFileReader$DMKeys: java.util.List kkcol>;

        $r31 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(i14);

        r43 = (ucar.nc2.iosp.gempak.GempakFileReader$Key) $r31;

        $r34 = r43.<ucar.nc2.iosp.gempak.GempakFileReader$Key: java.lang.String name>;

        $r32 = <ucar.nc2.iosp.gempak.GempakGridReader: java.lang.String[] kcolnm>;

        $r33 = $r32[i14];

        $z4 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z4 != 0 goto label06;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Column name ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match ");

        $r39 = <ucar.nc2.iosp.gempak.GempakGridReader: java.lang.String[] kcolnm>;

        $r40 = $r39[i14];

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void logError(java.lang.String)>($r42);

        return 0;

     label06:
        i14 = i14 + 1;

        goto label05;

     label07:
        if z0 != 0 goto label08;

        return 1;

     label08:
        $r48 = new ucar.grid.GridIndex;

        $r6 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: java.lang.String filename>;

        specialinvoke $r48.<ucar.grid.GridIndex: void <init>(java.lang.String)>($r6);

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex gridIndex> = $r48;

        $r7 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: float[] getFileHeader(java.lang.String)>("NAVB");

        if $r7 != null goto label09;

        return 0;

     label09:
        $r49 = new ucar.nc2.iosp.gempak.NavigationBlock;

        specialinvoke $r49.<ucar.nc2.iosp.gempak.NavigationBlock: void <init>(float[])>($r7);

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.NavigationBlock navBlock> = $r49;

        $r10 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex gridIndex>;

        $r9 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.NavigationBlock navBlock>;

        virtualinvoke $r10.<ucar.grid.GridIndex: void addHorizCoordSys(ucar.grid.GridDefRecord)>($r9);

        $r11 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: float[] getFileHeader(java.lang.String)>("ANLB");

        if $r11 != null goto label10;

        return 0;

     label10:
        $r50 = new ucar.nc2.iosp.gempak.AnalysisBlock;

        specialinvoke $r50.<ucar.nc2.iosp.gempak.AnalysisBlock: void <init>(float[])>($r11);

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.AnalysisBlock analBlock> = $r50;

        $r51 = new java.util.ArrayList;

        specialinvoke $r51.<java.util.ArrayList: void <init>()>();

        $r14 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i4 = $r14.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kckeys>;

        r15 = newarray (int)[$i4];

        $r16 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMHeaders headers>;

        if $r16 == null goto label11;

        $r17 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMHeaders headers>;

        $r18 = $r17.<ucar.nc2.iosp.gempak.GempakFileReader$DMHeaders: java.util.List colHeaders>;

        if $r18 != null goto label12;

     label11:
        return 0;

     label12:
        i15 = 0;

        $r19 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMHeaders headers>;

        $r20 = $r19.<ucar.nc2.iosp.gempak.GempakFileReader$DMHeaders: java.util.List colHeaders>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z5 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label15;

        $r26 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r44 = (int[]) $r26;

        i15 = i15 + 1;

        if r44 == null goto label13;

        $i12 = r44[0];

        $i18 = (int) -9999;

        if $i12 != $i18 goto label14;

        goto label13;

     label14:
        $i13 = lengthof r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r44, 1, r15, 0, $i13);

        $r52 = new ucar.nc2.iosp.gempak.GempakGridRecord;

        specialinvoke $r52.<ucar.nc2.iosp.gempak.GempakGridRecord: void <init>(int,int[])>(i15, r15);

        $r28 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.NavigationBlock navBlock>;

        $r52.<ucar.nc2.iosp.gempak.GempakGridRecord: ucar.nc2.iosp.gempak.NavigationBlock navBlock> = $r28;

        virtualinvoke $r52.<ucar.nc2.iosp.gempak.GempakGridRecord: java.lang.String getParameterName()>();

        interfaceinvoke $r51.<java.util.List: boolean add(java.lang.Object)>($r52);

        goto label13;

     label15:
        $r22 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $l5 = virtualinvoke $r22.<ucar.unidata.io.RandomAccessFile: long length()>();

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: long fileSize> = $l5;

        $z2 = interfaceinvoke $r51.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label20;

        i16 = 0;

     label16:
        $i6 = interfaceinvoke $r51.<java.util.List: int size()>();

        if i16 >= $i6 goto label19;

        $r25 = interfaceinvoke $r51.<java.util.List: java.lang.Object get(int)>(i16);

        r45 = (ucar.nc2.iosp.gempak.GempakGridRecord) $r25;

        $i7 = r45.<ucar.nc2.iosp.gempak.GempakGridRecord: int gridNumber>;

        $i8 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: int getGridPackingType(int)>($i7);

        r45.<ucar.nc2.iosp.gempak.GempakGridRecord: int packingType> = $i8;

        $i9 = r45.<ucar.nc2.iosp.gempak.GempakGridRecord: int packingType>;

        if $i9 == 1 goto label17;

        $i10 = r45.<ucar.nc2.iosp.gempak.GempakGridRecord: int packingType>;

        if $i10 == 5 goto label17;

        $i11 = r45.<ucar.nc2.iosp.gempak.GempakGridRecord: int packingType>;

        if $i11 != 0 goto label18;

     label17:
        $r46 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex gridIndex>;

        virtualinvoke $r46.<ucar.grid.GridIndex: void addGridRecord(ucar.grid.GridRecord)>(r45);

     label18:
        i16 = i16 + 1;

        goto label16;

     label19:
        goto label21;

     label20:
        return 0;

     label21:
        $r23 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex gridIndex>;

        $r24 = virtualinvoke $r23.<ucar.grid.GridIndex: java.util.List getGridRecords()>();

        $z3 = interfaceinvoke $r24.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label22;

        return 0;

     label22:
        return 1;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r2;
        byte $b4, $b5, $b6, $b11;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r33;
        float $f0, $f1, $f2, f3, f4, $f5;
        java.lang.StringBuilder $r7, $r8, $r9, $r14, $r15, $r21, $r22, $r26, $r27, $r28, $r29, $r36, $r37, $r38, $r39;
        java.lang.String[] r0;
        float[] $r17;
        ucar.nc2.iosp.gempak.GempakGridReader $r3;
        int $i0, $i1, $i2, $i3, $i7, i8, i9, i10, $i12, $i13;
        java.lang.String $r1, $r10, $r16, $r23, $r30, $r31, r35;
        java.io.PrintStream $r6, $r11, $r13, $r18, $r20, $r25, $r32, $r34;
        ucar.nc2.iosp.gempak.GempakGridRecord $r4;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label01;

        $r32 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("need to supply a GEMPAK grid file name");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label01:
        staticinvoke <ucar.nc2.iosp.gempak.GempakGridParameterTable: void addParameters(java.lang.String)>("resources/nj22/tables/gempak/wmogrib3.tbl");

        staticinvoke <ucar.nc2.iosp.gempak.GempakGridParameterTable: void addParameters(java.lang.String)>("resources/nj22/tables/gempak/ncepgrib2.tbl");

     label02:
        goto label04;

     label03:
        $r33 := @caughtexception;

        $r34 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("unable to init param tables");

     label04:
        $r1 = r0[0];

        $r2 = staticinvoke <ucar.nc2.iosp.gempak.GempakGridReader: ucar.unidata.io.RandomAccessFile getFile(java.lang.String)>($r1);

        $r3 = staticinvoke <ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakGridReader getInstance(ucar.unidata.io.RandomAccessFile,boolean)>($r2, 1);

        r35 = "PMSL";

        $i1 = lengthof r0;

        if $i1 <= 1 goto label05;

        $r31 = r0[1];

        $z2 = virtualinvoke $r31.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("X");

        if $z2 != 0 goto label05;

        r35 = r0[1];

     label05:
        $i7 = lengthof r0;

        if $i7 == 3 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakGridReader: void showGridInfo(boolean)>($z3);

        $r4 = virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakGridRecord findGrid(java.lang.String)>(r35);

        if $r4 == null goto label18;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.Object)>($r4);

        i8 = 0;

     label08:
        if i8 >= 2 goto label18;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using DP: ");

        $z0 = <ucar.nc2.iosp.gempak.GempakGridReader: boolean useDP>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

        $r17 = virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakGridReader: float[] readGrid(ucar.grid.GridRecord)>($r4);

        if $r17 == null goto label14;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# of points = ");

        $i2 = lengthof $r17;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r23);

        i9 = 0;

        f3 = #InfinityF;

        f4 = #-InfinityF;

        i10 = 0;

     label09:
        $i3 = lengthof $r17;

        if i10 >= $i3 goto label13;

        if i9 != 10 goto label10;

        i9 = 0;

     label10:
        i9 = i9 + 1;

        $f0 = $r17[i10];

        $b4 = $f0 cmpl -9999.0F;

        if $b4 == 0 goto label11;

        $f2 = $r17[i10];

        $b6 = $f2 cmpg f3;

        $i12 = (int) $b6;

        if $i12 >= 0 goto label11;

        f3 = $r17[i10];

     label11:
        $f5 = $r17[i10];

        $b11 = $f5 cmpl -9999.0F;

        if $b11 == 0 goto label12;

        $f1 = $r17[i10];

        $b5 = $f1 cmpl f4;

        $i13 = (int) $b5;

        if $i13 <= 0 goto label12;

        f4 = $r17[i10];

     label12:
        i10 = i10 + 1;

        goto label09;

     label13:
        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max/min = ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r30);

        goto label15;

     label14:
        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("unable to decode grid data");

     label15:
        $z1 = <ucar.nc2.iosp.gempak.GempakGridReader: boolean useDP>;

        if $z1 != 0 goto label16;

        $z4 = 1;

        goto label17;

     label16:
        $z4 = 0;

     label17:
        <ucar.nc2.iosp.gempak.GempakGridReader: boolean useDP> = $z4;

        i8 = i8 + 1;

        goto label08;

     label18:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    public ucar.grid.GridIndex getGridIndex()
    {
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        ucar.grid.GridIndex $r1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex gridIndex>;

        return $r1;
    }

    public int getGridCount()
    {
        int $i0;
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        ucar.grid.GridIndex $r1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex gridIndex>;

        $i0 = virtualinvoke $r1.<ucar.grid.GridIndex: int getGridCount()>();

        return $i0;
    }

    public int getGridPackingType(int) throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.GempakFileReader$DMPart r8;
        ucar.nc2.iosp.gempak.GempakFileReader$DMLabel $r5, $r9, $r10, $r11, $r12;
        int[] r13;
        java.util.List $r6;
        java.lang.StringBuilder $r2, $r3, $r15, $r16, $r19, $r20, $r21, $r22, $r23, $r26, $r28, $r30, $r31, $r32, $r33;
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, $i21, $i22, i23, i24, $i26, $i28, $i30, $i32, $i34, $i36;
        java.lang.String $r4, $r17, $r24, $r27, $r29;
        java.lang.Object $r7;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        $r5 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i1 = $r5.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kcol>;

        if i0 <= $i1 goto label2;

     label1:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad grid number ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void logWarning(java.lang.String)>($r4);

        $i26 = (int) -9;

        return $i26;

     label2:
        $i2 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: int getPartNumber(java.lang.String)>("GRID");

        if $i2 != 0 goto label3;

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void logWarning(java.lang.String)>("couldn\'t find part: GRID");

        $i28 = (int) -10;

        return $i28;

     label3:
        $r6 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: java.util.List parts>;

        $i3 = $i2 - 1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i3);

        r8 = (ucar.nc2.iosp.gempak.GempakFileReader$DMPart) $r7;

        $i4 = r8.<ucar.nc2.iosp.gempak.GempakFileReader$DMPart: int ktyprt>;

        if $i4 == 5 goto label4;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a valid type: ");

        $i22 = r8.<ucar.nc2.iosp.gempak.GempakFileReader$DMPart: int ktyprt>;

        $r27 = staticinvoke <ucar.nc2.iosp.gempak.GempakUtil: java.lang.String getDataType(int)>($i22);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void logWarning(java.lang.String)>($r29);

        $i30 = (int) -21;

        return $i30;

     label4:
        i5 = r8.<ucar.nc2.iosp.gempak.GempakFileReader$DMPart: int klnhdr>;

        $r9 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i10 = $r9.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kpdata>;

        $r10 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i6 = $r10.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kcol>;

        $i8 = 0 * $i6;

        $r11 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i7 = $r11.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kprt>;

        $i9 = $i8 * $i7;

        $i14 = $i10 + $i9;

        $i12 = i0 - 1;

        $r12 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i11 = $r12.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kprt>;

        $i13 = $i12 * $i11;

        $i16 = $i14 + $i13;

        $i15 = $i2 - 1;

        i17 = $i16 + $i15;

        $i18 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: int DM_RINT(int)>(i17);

        if $i18 != 0 goto label5;

        $i32 = (int) -15;

        return $i32;

     label5:
        $i19 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: int DM_RINT(int)>($i18);

        i23 = $i18 + 1;

        if $i19 > i5 goto label6;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length (");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is less than header length (");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void logWarning(java.lang.String)>($r24);

        $i34 = (int) -15;

        return $i34;

     label6:
        $i20 = staticinvoke <java.lang.Math: int abs(int)>($i19);

        if $i20 <= 10000000 goto label7;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length is huge: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void logWarning(java.lang.String)>($r17);

        $i36 = (int) -34;

        return $i36;

     label7:
        r13 = newarray (int)[i5];

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void DM_RINT(int,int[])>(i23, r13);

        i24 = i23 + i5;

        $i21 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: int DM_RINT(int)>(i24);

        return $i21;
    }

    public ucar.nc2.iosp.gempak.GempakGridRecord findGrid(java.lang.String)
    {
        java.util.List $r2;
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        int $i0, i1;
        java.lang.Object $r3;
        ucar.nc2.iosp.gempak.GempakGridRecord r4;
        java.lang.String $r5, $r6, r7;
        ucar.grid.GridIndex $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        r7 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex gridIndex>;

        $r2 = virtualinvoke $r1.<ucar.grid.GridIndex: java.util.List getGridRecords()>();

        if $r2 != null goto label1;

        return null;

     label1:
        i1 = 0;

     label2:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (ucar.nc2.iosp.gempak.GempakGridRecord) $r3;

        $r5 = r4.<ucar.nc2.iosp.gempak.GempakGridRecord: java.lang.String param>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z0 == 0 goto label3;

        return r4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    public float[] readGrid(ucar.grid.GridRecord) throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.GempakFileReader$RData $r3;
        ucar.nc2.iosp.gempak.GempakGridReader r2;
        int $i0, $i1;
        ucar.nc2.iosp.gempak.GempakGridRecord $r1;
        float[] r4;
        ucar.grid.GridRecord r0;

        r2 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        r0 := @parameter0: ucar.grid.GridRecord;

        $r1 = (ucar.nc2.iosp.gempak.GempakGridRecord) r0;

        $i0 = virtualinvoke $r1.<ucar.nc2.iosp.gempak.GempakGridRecord: int getGridNumber()>();

        $i1 = interfaceinvoke r0.<ucar.grid.GridRecord: int getDecimalScale()>();

        $r3 = virtualinvoke r2.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$RData DM_RDTR(int,int,java.lang.String,int)>(1, $i0, "GRID", $i1);

        r4 = null;

        if $r3 == null goto label1;

        r4 = $r3.<ucar.nc2.iosp.gempak.GempakFileReader$RData: float[] data>;

     label1:
        return r4;
    }

    public float[] DM_RPKG(int, int, int) throws java.io.IOException
    {
        byte b9, b10, b16, b17, b18, b19, b20, b21, b22, b23;
        int[] $r4;
        boolean z0, $z1;
        float $f0, $f1, f2;
        float[] $r1, $r2, r3, $r5;
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        int i0, $i1, i2, i3, i4, i5, $i6, i7, i8, $i11, $i12, $i13, $i14, i15;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i5 := @parameter2: int;

        $i1 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: int DM_RINT(int)>(i0);

        i7 = i0 + 1;

        i8 = i2 - 1;

        if $i1 != 0 goto label1;

        r3 = newarray (float)[i8];

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void DM_RFLT(int,float[])>(i7, r3);

        return r3;

     label1:
        if $i1 != 3 goto label2;

        b9 = 4;

        b23 = 4;

        b22 = 4;

        b21 = 4;

        b20 = 4;

        b10 = 3;

        b19 = 3;

        b18 = 3;

        b17 = 3;

        b16 = 3;

        goto label4;

     label2:
        if $i1 != 5 goto label3;

        b9 = 4;

        b23 = 4;

        b22 = 4;

        b21 = 4;

        b20 = 4;

        b10 = 1;

        b19 = 1;

        b18 = 1;

        b17 = 1;

        b16 = 1;

        goto label4;

     label3:
        b9 = 3;

        b23 = 3;

        b22 = 3;

        b21 = 3;

        b20 = 3;

        b10 = 2;

        b19 = 2;

        b18 = 2;

        b17 = 2;

        b16 = 2;

     label4:
        $r4 = newarray (int)[b21];

        $r5 = newarray (float)[b16];

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void DM_RINT(int,int[])>(i7, $r4);

        $i11 = i7 + b20;

        $i12 = i8 - b22;

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void DM_RFLT(int,float[])>($i11, $r5);

        $i13 = $i11 + b18;

        $i14 = $i12 - b19;

        if $i1 != 5 goto label5;

        $r2 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: float[] unpackGrib2Data(int,int,int[],float[])>($i13, $i14, $r4, $r5);

        return $r2;

     label5:
        i3 = $r4[0];

        i4 = $r4[1];

        if i4 == 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        z0 = $z1;

        $i6 = $r4[2];

        i15 = 0;

        if b23 != 4 goto label8;

        i15 = $r4[3];

     label8:
        $f0 = $r5[0];

        $f1 = $r5[1];

        f2 = 0.0F;

        if b17 != 3 goto label9;

        f2 = $r5[2];

     label9:
        $r1 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: float[] unpackData(int,int,int,int,int,float,float,boolean,float,int,int)>($i13, $i14, $i1, $i6, i3, $f0, $f1, z0, f2, i15, i5);

        return $r1;
    }

    private synchronized float[] unpackData(int, int, int, int, int, float, float, boolean, float, int, int) throws java.io.IOException
    {
        float[] $r1, $r3;
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        int[] $r2;
        int i0, i1, i2, $i3, $i4, i5, i6, i7, i8;
        boolean $z0, z1;
        float f0, f1, f2;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        i5 := @parameter0: int;

        i8 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z1 := @parameter7: boolean;

        f2 := @parameter8: float;

        i7 := @parameter9: int;

        i6 := @parameter10: int;

        if i0 != 1 goto label3;

        $z0 = <ucar.nc2.iosp.gempak.GempakGridReader: boolean useDP>;

        if $z0 != 0 goto label1;

        $r3 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: float[] unpackGrib1Data(int,int,int,int,float,float,boolean,int)>(i5, i8, i1, i2, f0, f1, z1, i6);

        return $r3;

     label1:
        $i4 = i8 * 32;

        $i3 = i1 * i2;

        if $i4 >= $i3 goto label2;

        i8 = i8 + 1;

     label2:
        $r2 = newarray (int)[i8];

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void DM_RINT(int,int[])>(i5, $r2);

        $r1 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: float[] DP_UGRB(int[],int,int,float,float,boolean,int)>($r2, i1, i2, f0, f1, z1, i6);

        return $r1;

     label3:
        if i0 != 2 goto label4;

        return null;

     label4:
        if i0 != 3 goto label5;

        return null;

     label5:
        return null;
    }

    private synchronized float[] DP_UGRB(int[], int, int, float, float, boolean, int) throws java.io.IOException
    {
        byte $b4;
        int[] r0;
        boolean z0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7;
        float[] $r1;
        ucar.nc2.iosp.gempak.GempakGridReader r2;
        int i0, $i1, i2, i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, $i18, i19, i20, i21, $i22, $i24, $i26;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r2 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        r0 := @parameter0: int[];

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        f2 := @parameter3: float;

        f1 := @parameter4: float;

        z0 := @parameter5: boolean;

        i0 := @parameter6: int;

        if i0 != 0 goto label01;

        $f7 = 1.0F;

        goto label02;

     label01:
        $i1 = neg i0;

        $d0 = (double) $i1;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d0);

        $f7 = (float) $d1;

     label02:
        f0 = $f7;

        $r1 = newarray (float)[i2];

        if i3 <= 1 goto label03;

        if i3 <= 31 goto label04;

     label03:
        return $r1;

     label04:
        $d2 = (double) f1;

        $b4 = $d2 cmpl 0.0;

        if $b4 != 0 goto label05;

        return $r1;

     label05:
        $d3 = (double) i3;

        $d4 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d3);

        $d5 = $d4 - 1.0;

        i5 = (int) $d5;

        i14 = 0;

        i15 = 1;

        i16 = 0;

     label06:
        if i16 >= i2 goto label13;

        $i6 = i3 + i15;

        i17 = $i6 - 33;

        if i17 >= 0 goto label07;

        $i11 = r0[i14];

        $i12 = staticinvoke <java.lang.Math: int abs(int)>(i17);

        $i18 = $i11 >>> $i12;

        goto label08;

     label07:
        $i7 = r0[i14];

        $i18 = $i7 << i17;

     label08:
        $i13 = $i18 & i5;

        i19 = $i13;

        if i17 <= 0 goto label09;

        $i24 = (int) -32;

        i20 = i17 + $i24;

        $i8 = i14 + 1;

        $i9 = r0[$i8];

        $i10 = staticinvoke <java.lang.Math: int abs(int)>(i20);

        i21 = $i9 >>> $i10;

        i19 = $i13 | i21;

     label09:
        if i19 != i5 goto label10;

        if z0 == 0 goto label10;

        $r1[i16] = -9999.0F;

        goto label11;

     label10:
        $f3 = (float) i19;

        $f4 = $f3 * f1;

        $f5 = f2 + $f4;

        $f6 = $f5 * f0;

        $r1[i16] = $f6;

     label11:
        $i22 = i15 + i3;

        i15 = $i22;

        if $i22 <= 32 goto label12;

        $i26 = (int) -32;

        i15 = $i22 + $i26;

        i14 = i14 + 1;

     label12:
        i16 = i16 + 1;

        goto label06;

     label13:
        return $r1;
    }

    private float[] unpackGrib1Data(int, int, int, int, float, float, boolean, int) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r2;
        float[] r0;
        long $l2;
        ucar.nc2.iosp.gempak.GempakGridReader r1;
        int i0, i1, i3, $i4, i5, $i6, i7, i8, $i9, $i11;
        double $d0, $d1;
        boolean z0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7;

        r1 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        i1 := @parameter0: int;

        i7 := @parameter1: int;

        i0 := @parameter2: int;

        i5 := @parameter3: int;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        z0 := @parameter6: boolean;

        i3 := @parameter7: int;

        r0 = newarray (float)[i0];

        r1.<ucar.nc2.iosp.gempak.GempakGridReader: int bitPos> = 0;

        r1.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf> = 0;

        r1.<ucar.nc2.iosp.gempak.GempakGridReader: int next> = 0;

        r1.<ucar.nc2.iosp.gempak.GempakGridReader: int ch1> = 0;

        r1.<ucar.nc2.iosp.gempak.GempakGridReader: int ch2> = 0;

        r1.<ucar.nc2.iosp.gempak.GempakGridReader: int ch3> = 0;

        r1.<ucar.nc2.iosp.gempak.GempakGridReader: int ch4> = 0;

        $r2 = r1.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $l2 = staticinvoke <ucar.nc2.iosp.gempak.GempakGridReader: long getOffset(int)>(i1);

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l2);

        if i3 != 0 goto label1;

        $f7 = 1.0F;

        goto label2;

     label1:
        $i4 = neg i3;

        $d0 = (double) $i4;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d0);

        $f7 = (float) $d1;

     label2:
        f0 = $f7;

        i8 = 0;

     label3:
        $i9 = lengthof r0;

        if i8 >= $i9 goto label6;

        $i6 = specialinvoke r1.<ucar.nc2.iosp.gempak.GempakGridReader: int bits2UInt(int)>(i5);

        if z0 == 0 goto label4;

        $i11 = (int) -9999;

        if $i6 != $i11 goto label4;

        r0[i8] = -9999.0F;

        goto label5;

     label4:
        $f3 = (float) $i6;

        $f4 = f2 * $f3;

        $f5 = f1 + $f4;

        $f6 = $f5 * f0;

        r0[i8] = $f6;

     label5:
        i8 = i8 + 1;

        goto label3;

     label6:
        return r0;
    }

    private float[] unpackGrib2Data(int, int, int[], float[]) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r2;
        long $l1;
        float[] $r3, r5, r6;
        ucar.nc2.iosp.gempak.GempakGridReader r1;
        int[] r4;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        ucar.nc2.iosp.gempak.GempakGrib2Data $r0;

        r1 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        i0 := @parameter0: int;

        i8 := @parameter1: int;

        r4 := @parameter2: int[];

        r5 := @parameter3: float[];

        $l1 = staticinvoke <ucar.nc2.iosp.gempak.GempakGridReader: long getOffset(int)>(i0);

        $r0 = new ucar.nc2.iosp.gempak.GempakGrib2Data;

        $r2 = r1.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.unidata.io.RandomAccessFile rf>;

        specialinvoke $r0.<ucar.nc2.iosp.gempak.GempakGrib2Data: void <init>(ucar.unidata.io.RandomAccessFile)>($r2);

        $r3 = virtualinvoke $r0.<ucar.nc2.iosp.gempak.GempakGrib2Data: float[] getData(long,long)>($l1, 0L);

        r6 = $r3;

        $i2 = r4[3];

        $i3 = $i2 >> 6;

        $i4 = $i3 & 1;

        if $i4 != 0 goto label1;

        $i7 = r4[1];

        $i6 = r4[2];

        $i5 = r4[3];

        r6 = specialinvoke r1.<ucar.nc2.iosp.gempak.GempakGridReader: float[] gb2_ornt(int,int,int,float[])>($i7, $i6, $i5, $r3);

     label1:
        return r6;
    }

    public void printNavBlock()
    {
        java.io.PrintStream $r3;
        ucar.nc2.iosp.gempak.GempakGridReader r1;
        java.lang.StringBuffer $r0;
        ucar.nc2.iosp.gempak.NavigationBlock $r2, $r5;
        java.lang.String $r4, $r6;

        r1 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("GRID NAVIGATION:");

        $r2 = r1.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.NavigationBlock navBlock>;

        if $r2 == null goto label1;

        $r5 = r1.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.NavigationBlock navBlock>;

        $r6 = virtualinvoke $r5.<ucar.nc2.iosp.gempak.NavigationBlock: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label2;

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tUNKNOWN GRID NAVIGATION");

     label2:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    public void printAnalBlock()
    {
        java.io.PrintStream $r3;
        ucar.nc2.iosp.gempak.GempakGridReader r1;
        java.lang.StringBuffer $r0;
        ucar.nc2.iosp.gempak.AnalysisBlock $r2, $r5;
        java.lang.String $r4, $r6;

        r1 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("GRID ANALYSIS BLOCK:");

        $r2 = r1.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.AnalysisBlock analBlock>;

        if $r2 == null goto label1;

        $r5 = r1.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.AnalysisBlock analBlock>;

        $r6 = virtualinvoke $r5.<ucar.nc2.iosp.gempak.AnalysisBlock: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label2;

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tUNKNOWN ANALYSIS TYPE");

     label2:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    public java.util.List getGridList()
    {
        java.util.List $r2;
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        ucar.grid.GridIndex $r1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex gridIndex>;

        $r2 = virtualinvoke $r1.<ucar.grid.GridIndex: java.util.List getGridRecords()>();

        return $r2;
    }

    public void printGrids()
    {
        java.io.PrintStream $r3, $r5;
        java.util.Iterator $r4;
        java.util.List $r2;
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        java.lang.Object $r6;
        ucar.grid.GridIndex $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex gridIndex>;

        $r2 = virtualinvoke $r1.<ucar.grid.GridIndex: java.util.List getGridRecords()>();

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("  NUM       TIME1              TIME2           LEVL1 LEVL2  VCORD PARM");

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>($r6);

        goto label2;

     label3:
        return;
    }

    public void showGridInfo(boolean)
    {
        ucar.nc2.iosp.gempak.GempakFileReader$DMLabel $r19;
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        int $i0, $i1;
        java.lang.String $r6, $r9, $r15, $r21;
        boolean z0;
        java.io.PrintStream $r4, $r10, $r12, $r17, $r22;
        java.util.List $r2;
        java.lang.StringBuilder $r3, $r5, $r7, $r8, $r11, $r13, $r14, $r16, $r18, $r20;
        ucar.grid.GridIndex $r1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        z0 := @parameter0: boolean;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex gridIndex>;

        $r2 = virtualinvoke $r1.<ucar.grid.GridIndex: java.util.List getGridRecords()>();

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nGRID FILE: ");

        $r6 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: java.lang.String getFilename()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void printNavBlock()>();

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("");

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void printAnalBlock()>();

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nNumber of grids in file:  ");

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nMaximum number of grids in file:  ");

        $r19 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i1 = $r19.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kcol>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21);

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("");

        if z0 == 0 goto label1;

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void printGrids()>();

     label1:
        return;
    }

    private float[] gb2_ornt(int, int, int, float[])
    {
        byte b22, b24, $b41, b42, b43, b44, b45, b46, b47, b48;
        float $f0, $f1, $f2, $f3;
        float[] r0, r2;
        ucar.nc2.iosp.gempak.GempakGridReader r1;
        int $i0, i1, $i2, i3, $i4, i5, $i6, i7, $i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i23, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, $i36, i37, i38, i39, $i40;

        r1 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        i10 := @parameter0: int;

        i11 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: float[];

        $i0 = lengthof r0;

        r2 = newarray (float)[$i0];

        $i2 = i1 >> 7;

        i3 = $i2 & 1;

        $i4 = i1 >> 6;

        i5 = $i4 & 1;

        $i6 = i1 >> 5;

        i7 = $i6 & 1;

        $i8 = i1 >> 4;

        i9 = $i8 & 1;

        if i3 != 0 goto label01;

        i21 = 0;

        b22 = 1;

        b48 = 1;

        b47 = 1;

        b46 = 1;

        goto label02;

     label01:
        i21 = i10 - 1;

        b22 = -1;

        b48 = -1;

        b47 = -1;

        b46 = -1;

     label02:
        if i5 != 1 goto label03;

        i23 = 0;

        b24 = 1;

        b45 = 1;

        b44 = 1;

        b43 = 1;

        b42 = 1;

        goto label04;

     label03:
        i23 = i11 - 1;

        b24 = -1;

        b45 = -1;

        b44 = -1;

        b43 = -1;

        b42 = -1;

     label04:
        i25 = 0;

        if i7 != 1 goto label08;

        if i9 != 0 goto label08;

        i26 = i23;

     label05:
        if 0 > i26 goto label30;

        if i26 >= i11 goto label30;

        i27 = i21;

     label06:
        if 0 > i27 goto label07;

        if i27 >= i10 goto label07;

        $i20 = i11 * i27;

        i28 = $i20 + i26;

        $f3 = r0[i28];

        r2[i25] = $f3;

        i25 = i25 + 1;

        i27 = i27 + b47;

        goto label06;

     label07:
        i26 = i26 + b45;

        goto label05;

     label08:
        if i7 != 0 goto label12;

        if i9 != 0 goto label12;

        i29 = i23;

     label09:
        if 0 > i29 goto label30;

        if i29 >= i11 goto label30;

        i30 = i21;

     label10:
        if 0 > i30 goto label11;

        if i30 >= i10 goto label11;

        $i19 = i10 * i29;

        i31 = $i19 + i30;

        $f2 = r0[i31];

        r2[i25] = $f2;

        i25 = i25 + 1;

        i30 = i30 + b46;

        goto label10;

     label11:
        i29 = i29 + b44;

        goto label09;

     label12:
        if i7 != 1 goto label19;

        if i9 != 1 goto label19;

        i32 = i23;

     label13:
        if 0 > i32 goto label30;

        if i32 >= i11 goto label30;

        i33 = i32;

        if i3 != 1 goto label14;

        $i17 = i10 % 2;

        if $i17 != 0 goto label14;

        $i18 = i11 - i32;

        i33 = $i18 - 1;

     label14:
        i34 = i21;

     label15:
        if 0 > i34 goto label18;

        if i34 >= i10 goto label18;

        $i15 = i11 * i34;

        i35 = $i15 + i33;

        $f1 = r0[i35];

        r2[i25] = $f1;

        if i33 == i32 goto label16;

        $i36 = i32;

        goto label17;

     label16:
        $i16 = i11 - i32;

        $i36 = $i16 - 1;

     label17:
        i33 = $i36;

        i25 = i25 + 1;

        i34 = i34 + b48;

        goto label15;

     label18:
        i32 = i32 + b43;

        goto label13;

     label19:
        if i7 != 0 goto label29;

        if i9 != 1 goto label29;

        if i5 != 0 goto label21;

        if i3 != 0 goto label20;

        $i14 = i11 % 2;

        if $i14 != 0 goto label20;

        i21 = i10 - 1;

        b22 = -1;

     label20:
        if i3 != 1 goto label21;

        $i13 = i11 % 2;

        if $i13 != 0 goto label21;

        i21 = 0;

        b22 = 1;

     label21:
        i37 = i23;

     label22:
        if 0 > i37 goto label30;

        if i37 >= i11 goto label30;

        i38 = i21;

     label23:
        if 0 > i38 goto label24;

        if i38 >= i10 goto label24;

        $i12 = i10 * i37;

        i39 = $i12 + i38;

        $f0 = r0[i39];

        r2[i25] = $f0;

        i25 = i25 + 1;

        i38 = i38 + b22;

        goto label23;

     label24:
        if i21 == 0 goto label25;

        $i40 = 0;

        goto label26;

     label25:
        $i40 = i10 - 1;

     label26:
        i21 = $i40;

        if b22 == 1 goto label27;

        $b41 = 1;

        goto label28;

     label27:
        $b41 = -1;

     label28:
        b22 = $b41;

        i37 = i37 + b42;

        goto label22;

     label29:
        r2 = r0;

     label30:
        return r2;
    }

    private int bits2UInt(int) throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, $i18, i19;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        i0 := @parameter0: int;

        i15 = i0;

        i16 = 0;

        $i1 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitPos>;

        if $i1 != 0 goto label1;

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void getNextByte()>();

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitPos> = 8;

     label1:
        $i17 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitPos>;

        $i18 = i15 - $i17;

        if $i18 <= 0 goto label2;

        $i12 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf>;

        $i13 = $i12 << $i18;

        i16 = i16 | $i13;

        $i14 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitPos>;

        i15 = i15 - $i14;

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridReader: void getNextByte()>();

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitPos> = 8;

        goto label3;

     label2:
        $i3 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf>;

        $i2 = neg $i18;

        $i4 = $i3 >> $i2;

        i19 = i16 | $i4;

        $i5 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitPos>;

        $i6 = $i5 - i15;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitPos> = $i6;

        $i10 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf>;

        $i7 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitPos>;

        $i8 = 8 - $i7;

        $i9 = 255 >> $i8;

        $i11 = $i10 & $i9;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf> = $i11;

        return i19;

     label3:
        goto label1;
    }

    private void getNextByte() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r3, $r4, $r5;
        ucar.nc2.iosp.gempak.GempakGridReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        $z0 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: boolean needToSwap>;

        if $z0 != 0 goto label1;

        $r5 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $i11 = virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: int read()>();

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf> = $i11;

        goto label6;

     label1:
        $i0 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int next>;

        if $i0 != 3 goto label2;

        $i10 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch3>;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf> = $i10;

        goto label5;

     label2:
        $i1 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int next>;

        if $i1 != 2 goto label3;

        $i9 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch2>;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf> = $i9;

        goto label5;

     label3:
        $i2 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int next>;

        if $i2 != 1 goto label4;

        $i8 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch1>;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf> = $i8;

        goto label5;

     label4:
        $r1 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $i3 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: int read()>();

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch1> = $i3;

        $r2 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $i4 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: int read()>();

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch2> = $i4;

        $r3 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $i5 = virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: int read()>();

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch3> = $i5;

        $r4 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $i6 = virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int read()>();

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch4> = $i6;

        $i7 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int ch4>;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int bitBuf> = $i7;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int next> = 4;

     label5:
        $i12 = r0.<ucar.nc2.iosp.gempak.GempakGridReader: int next>;

        $i13 = $i12 - 1;

        r0.<ucar.nc2.iosp.gempak.GempakGridReader: int next> = $i13;

     label6:
        return;
    }

    private void logWarning(java.lang.String)
    {
        ucar.unidata.io.RandomAccessFile $r3;
        org.slf4j.Logger $r1;
        ucar.nc2.iosp.gempak.GempakGridReader r2;
        java.lang.StringBuilder $r0, $r5, $r6, $r8;
        java.lang.String $r4, r7, $r9;

        r2 := @this: ucar.nc2.iosp.gempak.GempakGridReader;

        r7 := @parameter0: java.lang.String;

        $r1 = <ucar.nc2.iosp.gempak.GempakGridReader: org.slf4j.Logger log>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $r4 = virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void warn(java.lang.String)>($r9);

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r1;
        org.slf4j.Logger $r0;

        <ucar.nc2.iosp.gempak.GempakGridReader: java.lang.String NAVB> = "NAVB";

        <ucar.nc2.iosp.gempak.GempakGridReader: java.lang.String ANLB> = "ANLB";

        <ucar.nc2.iosp.gempak.GempakGridReader: java.lang.String GRID> = "GRID";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/gempak/GempakGridReader;");

        <ucar.nc2.iosp.gempak.GempakGridReader: org.slf4j.Logger log> = $r0;

        $r1 = newarray (java.lang.String)[10];

        $r1[0] = "GDT1";

        $r1[1] = "GTM1";

        $r1[2] = "GDT2";

        $r1[3] = "GTM2";

        $r1[4] = "GLV1";

        $r1[5] = "GLV2";

        $r1[6] = "GVCD";

        $r1[7] = "GPM1";

        $r1[8] = "GPM2";

        $r1[9] = "GPM3";

        <ucar.nc2.iosp.gempak.GempakGridReader: java.lang.String[] kcolnm> = $r1;

        <ucar.nc2.iosp.gempak.GempakGridReader: boolean useDP> = 1;

        return;
    }
}
