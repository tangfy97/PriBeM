public class org.sat4j.tools.GateTranslator extends org.sat4j.tools.SolverDecorator
{
    private static final long serialVersionUID;
    static final boolean $assertionsDisabled;

    public void <init>(org.sat4j.specs.ISolver)
    {
        org.sat4j.tools.GateTranslator r0;
        org.sat4j.specs.ISolver r1;

        r0 := @this: org.sat4j.tools.GateTranslator;

        r1 := @parameter0: org.sat4j.specs.ISolver;

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: void <init>(org.sat4j.specs.ISolver)>(r1);

        return;
    }

    public org.sat4j.specs.IConstr gateFalse(int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.tools.GateTranslator r1;
        org.sat4j.specs.IConstr $r2;
        int i0, $i1;
        org.sat4j.core.VecInt $r0;

        r1 := @this: org.sat4j.tools.GateTranslator;

        i0 := @parameter0: int;

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>(2);

        $i1 = neg i0;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i1);

        $r2 = specialinvoke r1.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        return $r2;
    }

    public org.sat4j.specs.IConstr gateTrue(int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.tools.GateTranslator r1;
        org.sat4j.specs.IConstr $r2;
        int i0;
        org.sat4j.core.VecInt $r0;

        r1 := @this: org.sat4j.tools.GateTranslator;

        i0 := @parameter0: int;

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>(2);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r2 = specialinvoke r1.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        return $r2;
    }

    public org.sat4j.specs.IConstr[] ite(int, int, int, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IConstr[] r0;
        int i0, $i1, i2, $i3, i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.sat4j.tools.GateTranslator r4;
        org.sat4j.specs.IConstr $r5, $r8, $r11, $r14, $r17, $r20;
        org.sat4j.specs.IVecInt $r2, $r3, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19;
        org.sat4j.core.VecInt $r1;

        r4 := @this: org.sat4j.tools.GateTranslator;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        i6 := @parameter3: int;

        r0 = newarray (org.sat4j.specs.IConstr)[6];

        $r1 = new org.sat4j.core.VecInt;

        specialinvoke $r1.<org.sat4j.core.VecInt: void <init>(int)>(5);

        $i1 = neg i0;

        $r2 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i1);

        $i3 = neg i2;

        $r3 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i3);

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i4);

        $r5 = specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r1);

        r0[0] = $r5;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $i5 = neg i0;

        $r6 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i5);

        $r7 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i6);

        $r8 = specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r1);

        r0[1] = $r8;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $i7 = neg i2;

        $r9 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i7);

        $i8 = neg i4;

        $r10 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        interfaceinvoke $r10.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r11 = specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r1);

        r0[2] = $r11;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $r12 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $i9 = neg i6;

        $r13 = interfaceinvoke $r12.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i9);

        interfaceinvoke $r13.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r14 = specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r1);

        r0[3] = $r14;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $i10 = neg i4;

        $r15 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i10);

        $i11 = neg i6;

        $r16 = interfaceinvoke $r15.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i11);

        interfaceinvoke $r16.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r17 = specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r1);

        r0[4] = $r17;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $i12 = neg i0;

        $r18 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i12);

        $r19 = interfaceinvoke $r18.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i4);

        interfaceinvoke $r19.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i6);

        $r20 = specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r1);

        r0[5] = $r20;

        return r0;
    }

    public org.sat4j.specs.IConstr[] and(int, org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IConstr[] r1;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        org.sat4j.tools.GateTranslator r3;
        org.sat4j.specs.IConstr $r4, $r5;
        org.sat4j.specs.IVecInt r0;
        org.sat4j.core.VecInt $r2;

        r3 := @this: org.sat4j.tools.GateTranslator;

        i4 := @parameter0: int;

        r0 := @parameter1: org.sat4j.specs.IVecInt;

        $i0 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        $i1 = $i0 + 1;

        r1 = newarray (org.sat4j.specs.IConstr)[$i1];

        $r2 = new org.sat4j.core.VecInt;

        $i2 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        $i3 = $i2 + 2;

        specialinvoke $r2.<org.sat4j.core.VecInt: void <init>(int)>($i3);

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i4);

        i12 = 0;

     label1:
        $i5 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        if i12 >= $i5 goto label2;

        $i10 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int get(int)>(i12);

        $i11 = neg $i10;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i11);

        i12 = i12 + 1;

        goto label1;

     label2:
        $r4 = specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r2);

        r1[0] = $r4;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void clear()>();

        i13 = 0;

     label3:
        $i6 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        if i13 >= $i6 goto label4;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void clear()>();

        $i7 = neg i4;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i7);

        $i8 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int get(int)>(i13);

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        $i9 = i13 + 1;

        $r5 = specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r2);

        r1[$i9] = $r5;

        i13 = i13 + 1;

        goto label3;

     label4:
        return r1;
    }

    public org.sat4j.specs.IConstr[] and(int, int, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.tools.GateTranslator r2;
        org.sat4j.specs.IConstr $r3, $r4, $r5;
        org.sat4j.specs.IConstr[] r1;
        int i0, $i1, i2, $i3, i4, $i5, $i6;
        org.sat4j.core.VecInt $r0;

        r2 := @this: org.sat4j.tools.GateTranslator;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>(4);

        r1 = newarray (org.sat4j.specs.IConstr)[3];

        $i1 = neg i0;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i1);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $r3 = virtualinvoke r2.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r0);

        r1[0] = $r3;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $i3 = neg i0;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i3);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i4);

        $r4 = virtualinvoke r2.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r0);

        r1[1] = $r4;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $i5 = neg i2;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i5);

        $i6 = neg i4;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i6);

        $r5 = virtualinvoke r2.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r0);

        r1[2] = $r5;

        return r1;
    }

    public org.sat4j.specs.IConstr[] or(int, org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IConstr[] r1;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, i10;
        org.sat4j.tools.GateTranslator r3;
        org.sat4j.specs.IConstr $r4, $r5;
        org.sat4j.specs.IVecInt r0;
        org.sat4j.core.VecInt $r2;

        r3 := @this: org.sat4j.tools.GateTranslator;

        i4 := @parameter0: int;

        r0 := @parameter1: org.sat4j.specs.IVecInt;

        $i0 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        $i1 = $i0 + 1;

        r1 = newarray (org.sat4j.specs.IConstr)[$i1];

        $r2 = new org.sat4j.core.VecInt;

        $i2 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        $i3 = $i2 + 2;

        specialinvoke $r2.<org.sat4j.core.VecInt: void <init>(int)>($i3);

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: void copyTo(org.sat4j.specs.IVecInt)>($r2);

        $i5 = neg i4;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i5);

        $r4 = specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r2);

        r1[0] = $r4;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void clear()>();

        i10 = 0;

     label1:
        $i6 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        if i10 >= $i6 goto label2;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void clear()>();

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i4);

        $i7 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int get(int)>(i10);

        $i8 = neg $i7;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        $i9 = i10 + 1;

        $r5 = specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r2);

        r1[$i9] = $r5;

        i10 = i10 + 1;

        goto label1;

     label2:
        return r1;
    }

    public org.sat4j.specs.IConstr[] halfOr(int, org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.tools.GateTranslator r3;
        org.sat4j.specs.IConstr $r4;
        org.sat4j.specs.IVecInt r0;
        org.sat4j.specs.IConstr[] r1;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, i7;
        org.sat4j.core.VecInt $r2;

        r3 := @this: org.sat4j.tools.GateTranslator;

        i4 := @parameter0: int;

        r0 := @parameter1: org.sat4j.specs.IVecInt;

        $i0 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        r1 = newarray (org.sat4j.specs.IConstr)[$i0];

        $r2 = new org.sat4j.core.VecInt;

        $i1 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        $i2 = $i1 + 2;

        specialinvoke $r2.<org.sat4j.core.VecInt: void <init>(int)>($i2);

        i7 = 0;

     label1:
        $i3 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        if i7 >= $i3 goto label2;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void clear()>();

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i4);

        $i5 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int get(int)>(i7);

        $i6 = neg $i5;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i6);

        $r4 = specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r2);

        r1[i7] = $r4;

        i7 = i7 + 1;

        goto label1;

     label2:
        return r1;
    }

    private org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IVecInt r1;
        org.sat4j.tools.GateTranslator r0;
        org.sat4j.specs.IConstr $r2;

        r0 := @this: org.sat4j.tools.GateTranslator;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        $r2 = virtualinvoke r0.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>(r1);

        return $r2;
    }

    public org.sat4j.specs.IConstr[] not(int, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.tools.GateTranslator r3;
        org.sat4j.specs.IConstr $r4, $r6;
        org.sat4j.specs.IConstr[] r0;
        org.sat4j.specs.IVecInt $r2, $r5;
        int i0, $i1, i2, $i3;
        org.sat4j.core.VecInt $r1;

        r3 := @this: org.sat4j.tools.GateTranslator;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        r0 = newarray (org.sat4j.specs.IConstr)[2];

        $r1 = new org.sat4j.core.VecInt;

        specialinvoke $r1.<org.sat4j.core.VecInt: void <init>(int)>(3);

        $i1 = neg i0;

        $r2 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i1);

        $i3 = neg i2;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i3);

        $r4 = specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r1);

        r0[0] = $r4;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $r5 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        interfaceinvoke $r5.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $r6 = specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r1);

        r0[1] = $r6;

        return r0;
    }

    public org.sat4j.specs.IConstr[] xor(int, org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.tools.GateTranslator r3;
        org.sat4j.specs.IVecInt r0;
        org.sat4j.specs.IConstr[] r4;
        org.sat4j.core.Vec $r2;
        int[] r1;
        int i0, $i1, $i2, $i3;

        r3 := @this: org.sat4j.tools.GateTranslator;

        i0 := @parameter0: int;

        r0 := @parameter1: org.sat4j.specs.IVecInt;

        $i1 = neg i0;

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i1);

        $i2 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        r1 = newarray (int)[$i2];

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: void copyTo(int[])>(r1);

        $r2 = new org.sat4j.core.Vec;

        specialinvoke $r2.<org.sat4j.core.Vec: void <init>()>();

        specialinvoke r3.<org.sat4j.tools.GateTranslator: void xor2Clause(int[],int,boolean,org.sat4j.specs.IVec)>(r1, 0, 0, $r2);

        $i3 = interfaceinvoke $r2.<org.sat4j.specs.IVec: int size()>();

        r4 = newarray (org.sat4j.specs.IConstr)[$i3];

        interfaceinvoke $r2.<org.sat4j.specs.IVec: void copyTo(java.lang.Object[])>(r4);

        return r4;
    }

    public org.sat4j.specs.IConstr[] iff(int, org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.tools.GateTranslator r3;
        org.sat4j.specs.IVecInt r0;
        org.sat4j.specs.IConstr[] r4;
        org.sat4j.core.Vec $r2;
        int[] r1;
        int i0, $i1, $i2;

        r3 := @this: org.sat4j.tools.GateTranslator;

        i0 := @parameter0: int;

        r0 := @parameter1: org.sat4j.specs.IVecInt;

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $i1 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        r1 = newarray (int)[$i1];

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: void copyTo(int[])>(r1);

        $r2 = new org.sat4j.core.Vec;

        specialinvoke $r2.<org.sat4j.core.Vec: void <init>()>();

        specialinvoke r3.<org.sat4j.tools.GateTranslator: void iff2Clause(int[],int,boolean,org.sat4j.specs.IVec)>(r1, 0, 0, $r2);

        $i2 = interfaceinvoke $r2.<org.sat4j.specs.IVec: int size()>();

        r4 = newarray (org.sat4j.specs.IConstr)[$i2];

        interfaceinvoke $r2.<org.sat4j.specs.IVec: void copyTo(java.lang.Object[])>(r4);

        return r4;
    }

    public void xor(int, int, int) throws org.sat4j.specs.ContradictionException
    {
        int i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        org.sat4j.tools.GateTranslator r3;
        org.sat4j.specs.IVecInt $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        org.sat4j.core.VecInt $r0;

        r3 := @this: org.sat4j.tools.GateTranslator;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>(3);

        $i1 = neg i0;

        $r1 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i1);

        $r2 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i3);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $r4 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $i4 = neg i2;

        $r5 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i4);

        interfaceinvoke $r5.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i3);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $i5 = neg i0;

        $r6 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i5);

        $i6 = neg i2;

        $r7 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i6);

        $i7 = neg i3;

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i7);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $r8 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r9 = interfaceinvoke $r8.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $i8 = neg i3;

        interfaceinvoke $r9.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        return;
    }

    private void xor2Clause(int[], int, boolean, org.sat4j.specs.IVec) throws org.sat4j.specs.ContradictionException
    {
        byte $b25;
        int[] r0;
        org.sat4j.specs.IVec r2;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24;
        org.sat4j.tools.GateTranslator r1;
        org.sat4j.specs.IConstr $r4;
        org.sat4j.core.VecInt $r3;

        r1 := @this: org.sat4j.tools.GateTranslator;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: org.sat4j.specs.IVec;

        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        if i0 != $i2 goto label5;

        $r3 = new org.sat4j.core.VecInt;

        $i15 = lengthof r0;

        $i16 = $i15 + 1;

        specialinvoke $r3.<org.sat4j.core.VecInt: void <init>(int)>($i16);

        i24 = 0;

     label1:
        $i17 = lengthof r0;

        $i18 = $i17 - 1;

        if i24 >= $i18 goto label2;

        $i23 = r0[i24];

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i23);

        i24 = i24 + 1;

        goto label1;

     label2:
        $i19 = lengthof r0;

        $i20 = $i19 - 1;

        $i21 = r0[$i20];

        if z0 == 0 goto label3;

        $b25 = -1;

        goto label4;

     label3:
        $b25 = 1;

     label4:
        $i22 = $i21 * $b25;

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i22);

        $r4 = specialinvoke r1.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r3);

        interfaceinvoke r2.<org.sat4j.specs.IVec: org.sat4j.specs.IVec push(java.lang.Object)>($r4);

        return;

     label5:
        if z0 == 0 goto label6;

        $i9 = r0[i0];

        $i10 = neg $i9;

        r0[i0] = $i10;

        $i11 = i0 + 1;

        specialinvoke r1.<org.sat4j.tools.GateTranslator: void xor2Clause(int[],int,boolean,org.sat4j.specs.IVec)>(r0, $i11, 0, r2);

        $i12 = r0[i0];

        $i13 = neg $i12;

        r0[i0] = $i13;

        $i14 = i0 + 1;

        specialinvoke r1.<org.sat4j.tools.GateTranslator: void xor2Clause(int[],int,boolean,org.sat4j.specs.IVec)>(r0, $i14, 1, r2);

        goto label7;

     label6:
        $i3 = i0 + 1;

        specialinvoke r1.<org.sat4j.tools.GateTranslator: void xor2Clause(int[],int,boolean,org.sat4j.specs.IVec)>(r0, $i3, 0, r2);

        $i4 = r0[i0];

        $i5 = neg $i4;

        r0[i0] = $i5;

        $i6 = i0 + 1;

        specialinvoke r1.<org.sat4j.tools.GateTranslator: void xor2Clause(int[],int,boolean,org.sat4j.specs.IVec)>(r0, $i6, 1, r2);

        $i7 = r0[i0];

        $i8 = neg $i7;

        r0[i0] = $i8;

     label7:
        return;
    }

    private void iff2Clause(int[], int, boolean, org.sat4j.specs.IVec) throws org.sat4j.specs.ContradictionException
    {
        byte $b25;
        int[] r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24;
        org.sat4j.specs.IVec r2;
        boolean z0;
        org.sat4j.tools.GateTranslator r1;
        org.sat4j.core.VecInt $r3;

        r1 := @this: org.sat4j.tools.GateTranslator;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: org.sat4j.specs.IVec;

        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        if i0 != $i2 goto label5;

        $r3 = new org.sat4j.core.VecInt;

        $i15 = lengthof r0;

        $i16 = $i15 + 1;

        specialinvoke $r3.<org.sat4j.core.VecInt: void <init>(int)>($i16);

        i24 = 0;

     label1:
        $i17 = lengthof r0;

        $i18 = $i17 - 1;

        if i24 >= $i18 goto label2;

        $i23 = r0[i24];

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i23);

        i24 = i24 + 1;

        goto label1;

     label2:
        $i19 = lengthof r0;

        $i20 = $i19 - 1;

        $i21 = r0[$i20];

        if z0 == 0 goto label3;

        $b25 = -1;

        goto label4;

     label3:
        $b25 = 1;

     label4:
        $i22 = $i21 * $b25;

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i22);

        specialinvoke r1.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r3);

        return;

     label5:
        if z0 == 0 goto label6;

        $i9 = i0 + 1;

        specialinvoke r1.<org.sat4j.tools.GateTranslator: void iff2Clause(int[],int,boolean,org.sat4j.specs.IVec)>(r0, $i9, 0, r2);

        $i10 = r0[i0];

        $i11 = neg $i10;

        r0[i0] = $i11;

        $i12 = i0 + 1;

        specialinvoke r1.<org.sat4j.tools.GateTranslator: void iff2Clause(int[],int,boolean,org.sat4j.specs.IVec)>(r0, $i12, 1, r2);

        $i13 = r0[i0];

        $i14 = neg $i13;

        r0[i0] = $i14;

        goto label7;

     label6:
        $i3 = r0[i0];

        $i4 = neg $i3;

        r0[i0] = $i4;

        $i5 = i0 + 1;

        specialinvoke r1.<org.sat4j.tools.GateTranslator: void iff2Clause(int[],int,boolean,org.sat4j.specs.IVec)>(r0, $i5, 0, r2);

        $i6 = r0[i0];

        $i7 = neg $i6;

        r0[i0] = $i7;

        $i8 = i0 + 1;

        specialinvoke r1.<org.sat4j.tools.GateTranslator: void iff2Clause(int[],int,boolean,org.sat4j.specs.IVec)>(r0, $i8, 1, r2);

     label7:
        return;
    }

    public void fullAdderSum(int, int, int, int) throws org.sat4j.specs.ContradictionException
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        org.sat4j.tools.GateTranslator r4;
        org.sat4j.specs.IVecInt $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        org.sat4j.core.VecInt $r0;

        r4 := @this: org.sat4j.tools.GateTranslator;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>(4);

        $r1 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r2 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i1);

        $r3 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $i4 = neg i3;

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i4);

        specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $r5 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $i5 = neg i1;

        $r6 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i5);

        $i6 = neg i2;

        $r7 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i6);

        $i7 = neg i3;

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i7);

        specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $i8 = neg i0;

        $r8 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        $r9 = interfaceinvoke $r8.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i1);

        $i9 = neg i2;

        $r10 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i9);

        $i10 = neg i3;

        interfaceinvoke $r10.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i10);

        specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $i11 = neg i0;

        $r11 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i11);

        $i12 = neg i1;

        $r12 = interfaceinvoke $r11.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i12);

        $r13 = interfaceinvoke $r12.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $i13 = neg i3;

        interfaceinvoke $r13.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i13);

        specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $i14 = neg i0;

        $r14 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i14);

        $i15 = neg i1;

        $r15 = interfaceinvoke $r14.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i15);

        $i16 = neg i2;

        $r16 = interfaceinvoke $r15.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i16);

        interfaceinvoke $r16.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i3);

        specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $i17 = neg i0;

        $r17 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i17);

        $r18 = interfaceinvoke $r17.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i1);

        $r19 = interfaceinvoke $r18.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        interfaceinvoke $r19.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i3);

        specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $r20 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $i18 = neg i1;

        $r21 = interfaceinvoke $r20.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i18);

        $r22 = interfaceinvoke $r21.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        interfaceinvoke $r22.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i3);

        specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $r23 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r24 = interfaceinvoke $r23.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i1);

        $i19 = neg i2;

        $r25 = interfaceinvoke $r24.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i19);

        interfaceinvoke $r25.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i3);

        specialinvoke r4.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        return;
    }

    public void fullAdderCarry(int, int, int, int) throws org.sat4j.specs.ContradictionException
    {
        int i0, $i1, i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.sat4j.tools.GateTranslator r3;
        org.sat4j.specs.IVecInt $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.sat4j.core.VecInt $r0;

        r3 := @this: org.sat4j.tools.GateTranslator;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>(3);

        $i1 = neg i0;

        $r1 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i1);

        $i3 = neg i2;

        $r2 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i3);

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i4);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $i6 = neg i5;

        $r4 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i6);

        $i7 = neg i2;

        $r5 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i7);

        interfaceinvoke $r5.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i4);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $i8 = neg i5;

        $r6 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        $i9 = neg i0;

        $r7 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i9);

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i4);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $r8 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r9 = interfaceinvoke $r8.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $i10 = neg i4;

        interfaceinvoke $r9.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i10);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $r10 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i5);

        $r11 = interfaceinvoke $r10.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $i11 = neg i4;

        interfaceinvoke $r11.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i11);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        $r12 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i5);

        $r13 = interfaceinvoke $r12.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $i12 = neg i4;

        interfaceinvoke $r13.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i12);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        return;
    }

    public void additionalFullAdderConstraints(int, int, int, int, int) throws org.sat4j.specs.ContradictionException
    {
        int i0, $i1, i2, $i3, i4, $i5, $i6, i7, $i8, $i9, i10, $i11, $i12, $i13;
        org.sat4j.tools.GateTranslator r3;
        org.sat4j.specs.IVecInt $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.sat4j.core.VecInt $r0;

        r3 := @this: org.sat4j.tools.GateTranslator;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        i7 := @parameter3: int;

        i10 := @parameter4: int;

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>(3);

        $i1 = neg i0;

        $r1 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i1);

        $i3 = neg i2;

        $r2 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i3);

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i4);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        $i5 = neg i0;

        $r4 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i5);

        $i6 = neg i2;

        $r5 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i6);

        interfaceinvoke $r5.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i7);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        $i8 = neg i0;

        $r6 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        $i9 = neg i2;

        $r7 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i9);

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i10);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        $r8 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r9 = interfaceinvoke $r8.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $i11 = neg i4;

        interfaceinvoke $r9.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i11);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        $r10 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r11 = interfaceinvoke $r10.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $i12 = neg i7;

        interfaceinvoke $r11.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i12);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        $r12 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r13 = interfaceinvoke $r12.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i2);

        $i13 = neg i10;

        interfaceinvoke $r13.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i13);

        specialinvoke r3.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr processClause(org.sat4j.specs.IVecInt)>($r0);

        return;
    }

    public void halfAdderSum(int, int, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.tools.GateTranslator r0;
        int i0, i1, i2;

        r0 := @this: org.sat4j.tools.GateTranslator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<org.sat4j.tools.GateTranslator: void xor(int,int,int)>(i0, i1, i2);

        return;
    }

    public void halfAdderCarry(int, int, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.tools.GateTranslator r0;
        int i0, i1, i2;

        r0 := @this: org.sat4j.tools.GateTranslator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IConstr[] and(int,int,int)>(i0, i1, i2);

        return;
    }

    public void optimisationFunction(org.sat4j.specs.IVecInt, org.sat4j.specs.IVec, org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.core.Vec $r0;
        java.math.BigInteger r12;
        org.sat4j.specs.IVec r9;
        boolean $z0, $z1, $z2, $z3;
        java.lang.AssertionError $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21;
        org.sat4j.tools.GateTranslator r6;
        org.sat4j.specs.IVecInt r1, r3, $r7, $r8, $r11, r13;
        java.lang.Object $r2, $r10;

        r6 := @this: org.sat4j.tools.GateTranslator;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        r9 := @parameter1: org.sat4j.specs.IVec;

        r3 := @parameter2: org.sat4j.specs.IVecInt;

        $r0 = new org.sat4j.core.Vec;

        specialinvoke $r0.<org.sat4j.core.Vec: void <init>()>();

        i19 = 0;

     label01:
        $i0 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        if i19 >= $i0 goto label05;

        $i17 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int get(int)>(i19);

        $r10 = interfaceinvoke r9.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i19);

        r12 = (java.math.BigInteger) $r10;

        i20 = 0;

     label02:
        $i18 = virtualinvoke r12.<java.math.BigInteger: int bitLength()>();

        if i20 >= $i18 goto label04;

        $r11 = specialinvoke r6.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IVecInt createIfNull(org.sat4j.specs.IVec,int)>($r0, i20);

        $z3 = virtualinvoke r12.<java.math.BigInteger: boolean testBit(int)>(i20);

        if $z3 == 0 goto label03;

        interfaceinvoke $r11.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i17);

     label03:
        i20 = i20 + 1;

        goto label02;

     label04:
        i19 = i19 + 1;

        goto label01;

     label05:
        i21 = 0;

     label06:
        $i1 = interfaceinvoke $r0.<org.sat4j.specs.IVec: int size()>();

        if i21 >= $i1 goto label12;

        $r2 = interfaceinvoke $r0.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i21);

        r13 = (org.sat4j.specs.IVecInt) $r2;

     label07:
        $i2 = interfaceinvoke r13.<org.sat4j.specs.IVecInt: int size()>();

        if $i2 < 3 goto label08;

        $i11 = interfaceinvoke r13.<org.sat4j.specs.IVecInt: int get(int)>(0);

        $i12 = interfaceinvoke r13.<org.sat4j.specs.IVecInt: int get(int)>(1);

        $i13 = interfaceinvoke r13.<org.sat4j.specs.IVecInt: int get(int)>(2);

        interfaceinvoke r13.<org.sat4j.specs.IVecInt: void remove(int)>($i11);

        interfaceinvoke r13.<org.sat4j.specs.IVecInt: void remove(int)>($i12);

        interfaceinvoke r13.<org.sat4j.specs.IVecInt: void remove(int)>($i13);

        $i14 = virtualinvoke r6.<org.sat4j.tools.GateTranslator: int nextFreeVarId(boolean)>(1);

        $i15 = virtualinvoke r6.<org.sat4j.tools.GateTranslator: int nextFreeVarId(boolean)>(1);

        virtualinvoke r6.<org.sat4j.tools.GateTranslator: void fullAdderSum(int,int,int,int)>($i14, $i11, $i12, $i13);

        virtualinvoke r6.<org.sat4j.tools.GateTranslator: void fullAdderCarry(int,int,int,int)>($i15, $i11, $i12, $i13);

        virtualinvoke r6.<org.sat4j.tools.GateTranslator: void additionalFullAdderConstraints(int,int,int,int,int)>($i15, $i14, $i11, $i12, $i13);

        interfaceinvoke r13.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i14);

        $i16 = i21 + 1;

        $r8 = specialinvoke r6.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IVecInt createIfNull(org.sat4j.specs.IVec,int)>($r0, $i16);

        interfaceinvoke $r8.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i15);

        goto label07;

     label08:
        $i3 = interfaceinvoke r13.<org.sat4j.specs.IVecInt: int size()>();

        if $i3 != 2 goto label09;

        $i6 = interfaceinvoke r13.<org.sat4j.specs.IVecInt: int get(int)>(0);

        $i7 = interfaceinvoke r13.<org.sat4j.specs.IVecInt: int get(int)>(1);

        interfaceinvoke r13.<org.sat4j.specs.IVecInt: void remove(int)>($i6);

        interfaceinvoke r13.<org.sat4j.specs.IVecInt: void remove(int)>($i7);

        $i8 = virtualinvoke r6.<org.sat4j.tools.GateTranslator: int nextFreeVarId(boolean)>(1);

        $i9 = virtualinvoke r6.<org.sat4j.tools.GateTranslator: int nextFreeVarId(boolean)>(1);

        virtualinvoke r6.<org.sat4j.tools.GateTranslator: void halfAdderSum(int,int,int)>($i8, $i6, $i7);

        virtualinvoke r6.<org.sat4j.tools.GateTranslator: void halfAdderCarry(int,int,int)>($i9, $i6, $i7);

        interfaceinvoke r13.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        $i10 = i21 + 1;

        $r7 = specialinvoke r6.<org.sat4j.tools.GateTranslator: org.sat4j.specs.IVecInt createIfNull(org.sat4j.specs.IVec,int)>($r0, $i10);

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i9);

        goto label08;

     label09:
        $z0 = <org.sat4j.tools.GateTranslator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label10;

        $i5 = interfaceinvoke r13.<org.sat4j.specs.IVecInt: int size()>();

        if $i5 == 1 goto label10;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label10:
        $i4 = interfaceinvoke r13.<org.sat4j.specs.IVecInt: int last()>();

        interfaceinvoke r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i4);

        interfaceinvoke r13.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt pop()>();

        $z1 = <org.sat4j.tools.GateTranslator: boolean $assertionsDisabled>;

        if $z1 != 0 goto label11;

        $z2 = interfaceinvoke r13.<org.sat4j.specs.IVecInt: boolean isEmpty()>();

        if $z2 != 0 goto label11;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label11:
        i21 = i21 + 1;

        goto label06;

     label12:
        return;
    }

    private org.sat4j.specs.IVecInt createIfNull(org.sat4j.specs.IVec, int)
    {
        org.sat4j.tools.GateTranslator r5;
        org.sat4j.specs.IVecInt r6;
        java.lang.AssertionError $r4;
        int i0;
        org.sat4j.core.VecInt $r2;
        java.lang.Object $r1, $r3;
        org.sat4j.specs.IVec r0;
        boolean $z0;

        r5 := @this: org.sat4j.tools.GateTranslator;

        r0 := @parameter0: org.sat4j.specs.IVec;

        i0 := @parameter1: int;

        $r1 = interfaceinvoke r0.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i0);

        r6 = (org.sat4j.specs.IVecInt) $r1;

        if r6 != null goto label1;

        $r2 = new org.sat4j.core.VecInt;

        specialinvoke $r2.<org.sat4j.core.VecInt: void <init>()>();

        r6 = $r2;

        interfaceinvoke r0.<org.sat4j.specs.IVec: org.sat4j.specs.IVec push(java.lang.Object)>($r2);

        $z0 = <org.sat4j.tools.GateTranslator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = interfaceinvoke r0.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i0);

        if $r3 == $r2 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        return r6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.tools.GateTranslator: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/tools/GateTranslator;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.tools.GateTranslator: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void gateTrue(int)
    {
        int parameter0;
        java.lang.Error $r0;
        org.sat4j.tools.GateTranslator this;

        this := @this: org.sat4j.tools.GateTranslator;

        parameter0 := @parameter0: int;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.sat4j.tools.GateTranslator: void gateTrue(int)> does not exist!");

        throw $r0;
    }

    public void gateFalse(int)
    {
        int parameter0;
        java.lang.Error $r0;
        org.sat4j.tools.GateTranslator this;

        this := @this: org.sat4j.tools.GateTranslator;

        parameter0 := @parameter0: int;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.sat4j.tools.GateTranslator: void gateFalse(int)> does not exist!");

        throw $r0;
    }

    public void or(int, org.sat4j.specs.IVecInt)
    {
        org.sat4j.tools.GateTranslator this;
        int parameter0;
        org.sat4j.specs.IVecInt parameter1;
        java.lang.Error $r0;

        this := @this: org.sat4j.tools.GateTranslator;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: org.sat4j.specs.IVecInt;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.sat4j.tools.GateTranslator: void or(int,org.sat4j.specs.IVecInt)> does not exist!");

        throw $r0;
    }

    public void not(int, int)
    {
        org.sat4j.tools.GateTranslator this;
        int parameter0, parameter1;
        java.lang.Error $r0;

        this := @this: org.sat4j.tools.GateTranslator;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: int;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.sat4j.tools.GateTranslator: void not(int,int)> does not exist!");

        throw $r0;
    }

    public void and(int, org.sat4j.specs.IVecInt)
    {
        org.sat4j.tools.GateTranslator this;
        int parameter0;
        org.sat4j.specs.IVecInt parameter1;
        java.lang.Error $r0;

        this := @this: org.sat4j.tools.GateTranslator;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: org.sat4j.specs.IVecInt;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.sat4j.tools.GateTranslator: void and(int,org.sat4j.specs.IVecInt)> does not exist!");

        throw $r0;
    }

    public void xor(int, org.sat4j.specs.IVecInt)
    {
        org.sat4j.tools.GateTranslator this;
        int parameter0;
        org.sat4j.specs.IVecInt parameter1;
        java.lang.Error $r0;

        this := @this: org.sat4j.tools.GateTranslator;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: org.sat4j.specs.IVecInt;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.sat4j.tools.GateTranslator: void xor(int,org.sat4j.specs.IVecInt)> does not exist!");

        throw $r0;
    }

    public void iff(int, org.sat4j.specs.IVecInt)
    {
        org.sat4j.tools.GateTranslator this;
        int parameter0;
        org.sat4j.specs.IVecInt parameter1;
        java.lang.Error $r0;

        this := @this: org.sat4j.tools.GateTranslator;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: org.sat4j.specs.IVecInt;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.sat4j.tools.GateTranslator: void iff(int,org.sat4j.specs.IVecInt)> does not exist!");

        throw $r0;
    }

    public void ite(int, int, int, int)
    {
        org.sat4j.tools.GateTranslator this;
        int parameter0, parameter1, parameter2, parameter3;
        java.lang.Error $r0;

        this := @this: org.sat4j.tools.GateTranslator;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: int;

        parameter2 := @parameter2: int;

        parameter3 := @parameter3: int;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.sat4j.tools.GateTranslator: void ite(int,int,int,int)> does not exist!");

        throw $r0;
    }
}
