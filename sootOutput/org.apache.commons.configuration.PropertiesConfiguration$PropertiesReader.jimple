public class org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader extends java.io.LineNumberReader
{
    private java.util.List commentLines;
    private java.lang.String propertyName;
    private java.lang.String propertyValue;
    private char delimiter;

    public void <init>(java.io.Reader)
    {
        char $c0;
        java.io.Reader r1;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader;

        r1 := @parameter0: java.io.Reader;

        $c0 = staticinvoke <org.apache.commons.configuration.AbstractConfiguration: char getDefaultListDelimiter()>();

        specialinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: void <init>(java.io.Reader,char)>(r1, $c0);

        return;
    }

    public void <init>(java.io.Reader, char)
    {
        char c0;
        java.io.Reader r1;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader;

        r1 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        specialinvoke r0.<java.io.LineNumberReader: void <init>(java.io.Reader)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.util.List commentLines> = $r2;

        r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: char delimiter> = c0;

        return;
    }

    public java.lang.String readProperty() throws java.io.IOException
    {
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader r0;
        java.util.List $r1, $r6;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r5, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader;

        $r1 = r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.util.List commentLines>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

     label1:
        $r7 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String readLine()>();

        if $r7 != null goto label2;

        return null;

     label2:
        $z0 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: boolean isCommentLine(java.lang.String)>($r7);

        if $z0 == 0 goto label3;

        $r6 = r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.util.List commentLines>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label3:
        $r3 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $z1 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: boolean checkCombineLines(java.lang.String)>($r3);

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        goto label5;

     label4:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label6;

     label5:
        goto label1;

     label6:
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public boolean nextProperty() throws java.io.IOException
    {
        java.lang.String[] $r2;
        char $c0;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader r0;
        java.lang.String $r1, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String readProperty()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String[] parseProperty(java.lang.String)>($r1);

        $r3 = $r2[0];

        $r4 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String unescapeJava(java.lang.String)>($r3);

        r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String propertyName> = $r4;

        $r5 = $r2[1];

        $c0 = r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: char delimiter>;

        $r6 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String unescapeJava(java.lang.String,char)>($r5, $c0);

        r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String propertyValue> = $r6;

        return 1;
    }

    public java.util.List getCommentLines()
    {
        java.util.List $r1;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader;

        $r1 = r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.util.List commentLines>;

        return $r1;
    }

    public java.lang.String getPropertyName()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader;

        $r1 = r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String propertyName>;

        return $r1;
    }

    public java.lang.String getPropertyValue()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader;

        $r1 = r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String propertyValue>;

        return $r1;
    }

    private static boolean checkCombineLines(java.lang.String)
    {
        char $c2;
        int $i0, $i1, i3, i4, $i5, $i7;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i3 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = $i0 - 1;

     label1:
        if i4 < 0 goto label2;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c2;

        if $i5 != 92 goto label2;

        i3 = i3 + 1;

        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label1;

     label2:
        $i1 = i3 % 2;

        if $i1 == 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private static java.lang.String[] parseProperty(java.lang.String)
    {
        java.lang.String[] r0;
        byte b2;
        java.lang.StringBuffer $r14, $r15;
        int $i0, i3, $i4;
        java.lang.String r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        char $c1;
        char[] $r8, $r9, $r10, $r11, $r12, $r13;

        r3 := @parameter0: java.lang.String;

        r0 = newarray (java.lang.String)[2];

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        b2 = 0;

        i3 = 0;

     label01:
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if i3 >= $i0 goto label15;

        $c1 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i3);

        tableswitch(b2)
        {
            case 0: goto label02;
            case 1: goto label06;
            case 2: goto label10;
            case 3: goto label13;
            default: goto label14;
        };

     label02:
        $i4 = (int) $c1;

        if $i4 != 92 goto label03;

        b2 = 1;

        goto label14;

     label03:
        $r12 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: char[] access$000()>();

        $z4 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean contains(char[],char)>($r12, $c1);

        if $z4 == 0 goto label04;

        b2 = 2;

        goto label14;

     label04:
        $r13 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: char[] access$100()>();

        $z5 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean contains(char[],char)>($r13, $c1);

        if $z5 == 0 goto label05;

        b2 = 3;

        goto label14;

     label05:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label14;

     label06:
        $r10 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: char[] access$100()>();

        $z2 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean contains(char[],char)>($r10, $c1);

        if $z2 != 0 goto label07;

        $r11 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: char[] access$000()>();

        $z3 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean contains(char[],char)>($r11, $c1);

        if $z3 == 0 goto label08;

     label07:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label09;

     label08:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label09:
        b2 = 0;

        goto label14;

     label10:
        $r8 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: char[] access$000()>();

        $z0 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean contains(char[],char)>($r8, $c1);

        if $z0 == 0 goto label11;

        b2 = 2;

        goto label14;

     label11:
        $r9 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: char[] access$100()>();

        $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean contains(char[],char)>($r9, $c1);

        if $z1 == 0 goto label12;

        b2 = 3;

        goto label14;

     label12:
        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        b2 = 3;

        goto label14;

     label13:
        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label14:
        i3 = i3 + 1;

        goto label01;

     label15:
        $r4 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        r0[0] = $r5;

        $r6 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        r0[1] = $r7;

        return r0;
    }
}
