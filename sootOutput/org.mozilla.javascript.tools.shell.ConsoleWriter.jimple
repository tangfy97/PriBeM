class org.mozilla.javascript.tools.shell.ConsoleWriter extends java.io.OutputStream
{
    private org.mozilla.javascript.tools.shell.ConsoleTextArea textArea;
    private java.lang.StringBuffer buffer;

    public void <init>(org.mozilla.javascript.tools.shell.ConsoleTextArea)
    {
        org.mozilla.javascript.tools.shell.ConsoleWriter r0;
        org.mozilla.javascript.tools.shell.ConsoleTextArea r1;
        java.lang.StringBuffer $r2;

        r0 := @this: org.mozilla.javascript.tools.shell.ConsoleWriter;

        r1 := @parameter0: org.mozilla.javascript.tools.shell.ConsoleTextArea;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: org.mozilla.javascript.tools.shell.ConsoleTextArea textArea> = r1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: java.lang.StringBuffer buffer> = $r2;

        return;
    }

    public synchronized void write(int)
    {
        java.lang.StringBuffer $r1;
        int i0;
        org.mozilla.javascript.tools.shell.ConsoleWriter r0;
        char $c1;

        r0 := @this: org.mozilla.javascript.tools.shell.ConsoleWriter;

        i0 := @parameter0: int;

        $r1 = r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: java.lang.StringBuffer buffer>;

        $c1 = (char) i0;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        if i0 != 10 goto label1;

        specialinvoke r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: void flushBuffer()>();

     label1:
        return;
    }

    public synchronized void write(char[], int, int)
    {
        org.mozilla.javascript.tools.shell.ConsoleWriter r0;
        char $c2, $c3;
        java.lang.StringBuffer $r2;
        int i0, i1, i4, $i5;
        char[] r1;

        r0 := @this: org.mozilla.javascript.tools.shell.ConsoleWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i4 = i0;

     label1:
        if i4 >= i1 goto label3;

        $r2 = r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: java.lang.StringBuffer buffer>;

        $c2 = r1[i4];

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $c3 = r1[i4];

        $i5 = (int) $c3;

        if $i5 != 10 goto label2;

        specialinvoke r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: void flushBuffer()>();

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public synchronized void flush()
    {
        int $i0;
        org.mozilla.javascript.tools.shell.ConsoleWriter r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.mozilla.javascript.tools.shell.ConsoleWriter;

        $r1 = r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: java.lang.StringBuffer buffer>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label1;

        specialinvoke r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: void flushBuffer()>();

     label1:
        return;
    }

    public void close()
    {
        org.mozilla.javascript.tools.shell.ConsoleWriter r0;

        r0 := @this: org.mozilla.javascript.tools.shell.ConsoleWriter;

        virtualinvoke r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: void flush()>();

        return;
    }

    private void flushBuffer()
    {
        java.lang.StringBuffer $r1, $r3;
        org.mozilla.javascript.tools.shell.ConsoleWrite $r4;
        org.mozilla.javascript.tools.shell.ConsoleWriter r0;
        java.lang.String $r2;
        org.mozilla.javascript.tools.shell.ConsoleTextArea $r5;

        r0 := @this: org.mozilla.javascript.tools.shell.ConsoleWriter;

        $r1 = r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: java.lang.StringBuffer buffer>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: java.lang.StringBuffer buffer>;

        virtualinvoke $r3.<java.lang.StringBuffer: void setLength(int)>(0);

        $r4 = new org.mozilla.javascript.tools.shell.ConsoleWrite;

        $r5 = r0.<org.mozilla.javascript.tools.shell.ConsoleWriter: org.mozilla.javascript.tools.shell.ConsoleTextArea textArea>;

        specialinvoke $r4.<org.mozilla.javascript.tools.shell.ConsoleWrite: void <init>(org.mozilla.javascript.tools.shell.ConsoleTextArea,java.lang.String)>($r5, $r2);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r4);

        return;
    }
}
