public class org.waveprotocol.wave.model.document.util.DocProviders extends java.lang.Object
{
    public static final org.waveprotocol.wave.model.document.raw.RawDocument$Provider ROJO;
    public static final org.waveprotocol.wave.model.document.indexed.IndexedDocProvider POJO;
    public static final org.waveprotocol.wave.model.document.util.DocumentProvider MOJO;

    public static org.waveprotocol.wave.model.document.Document createValidatingDocument(org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument $r4;
        org.waveprotocol.wave.model.document.util.DocumentImpl $r5;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider $r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema r3;
        org.waveprotocol.wave.model.operation.OperationSequencer $r6;
        org.waveprotocol.wave.model.document.operation.DocInitialization $r2;
        org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder $r0;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema;

        $r1 = <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider POJO>;

        $r0 = new org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder: org.waveprotocol.wave.model.document.operation.DocInitialization build()>();

        $r4 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.indexed.IndexedDocument build(org.waveprotocol.wave.model.document.operation.DocInitialization,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)>($r2, r3);

        $r5 = new org.waveprotocol.wave.model.document.util.DocumentImpl;

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.operation.OperationSequencer createCopyingSequencer(org.waveprotocol.wave.model.document.indexed.IndexedDocument)>($r4);

        specialinvoke $r5.<org.waveprotocol.wave.model.document.util.DocumentImpl: void <init>(org.waveprotocol.wave.model.operation.OperationSequencer,org.waveprotocol.wave.model.document.ReadableWDocument)>($r6, $r4);

        return $r5;
    }

    public static final org.waveprotocol.wave.model.operation.OperationSequencer createTrivialSequencer(org.waveprotocol.wave.model.document.indexed.IndexedDocument)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument r0;
        org.waveprotocol.wave.model.operation.OperationSequencer $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.indexed.IndexedDocument;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.operation.OperationSequencer createTrivialSequencer(org.waveprotocol.wave.model.document.indexed.IndexedDocument,org.waveprotocol.wave.model.operation.OperationSink)>(r0, null);

        return $r1;
    }

    public static final org.waveprotocol.wave.model.operation.OperationSequencer createTrivialSequencer(org.waveprotocol.wave.model.document.indexed.IndexedDocument, org.waveprotocol.wave.model.operation.OperationSink)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument r1;
        org.waveprotocol.wave.model.document.util.DocProviders$2 $r0;
        org.waveprotocol.wave.model.operation.OperationSink r2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.IndexedDocument;

        r2 := @parameter1: org.waveprotocol.wave.model.operation.OperationSink;

        $r0 = new org.waveprotocol.wave.model.document.util.DocProviders$2;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.util.DocProviders$2: void <init>(org.waveprotocol.wave.model.document.indexed.IndexedDocument,org.waveprotocol.wave.model.operation.OperationSink)>(r1, r2);

        return $r0;
    }

    public static final org.waveprotocol.wave.model.operation.OperationSequencer createCopyingSequencer(org.waveprotocol.wave.model.document.indexed.IndexedDocument)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument r0, $r4;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider $r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema $r3;
        org.waveprotocol.wave.model.document.util.DocProviders$3 $r5;
        org.waveprotocol.wave.model.operation.OperationSequencer $r6;
        org.waveprotocol.wave.model.document.operation.DocInitialization $r2;

        r0 := @parameter0: org.waveprotocol.wave.model.document.indexed.IndexedDocument;

        $r1 = <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider POJO>;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocument: org.waveprotocol.wave.model.document.operation.DocInitialization asOperation()>();

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocument: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema getSchema()>();

        $r4 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.indexed.IndexedDocument build(org.waveprotocol.wave.model.document.operation.DocInitialization,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)>($r2, $r3);

        $r5 = new org.waveprotocol.wave.model.document.util.DocProviders$3;

        specialinvoke $r5.<org.waveprotocol.wave.model.document.util.DocProviders$3: void <init>(org.waveprotocol.wave.model.document.indexed.IndexedDocument)>($r4);

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.operation.OperationSequencer createTrivialSequencer(org.waveprotocol.wave.model.document.indexed.IndexedDocument,org.waveprotocol.wave.model.operation.OperationSink)>(r0, $r5);

        return $r6;
    }

    protected void <init>()
    {
        org.waveprotocol.wave.model.document.util.DocProviders r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocProviders;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider $r3;
        org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl $r1;
        org.waveprotocol.wave.model.document.util.DocProviders$1 $r4;
        org.waveprotocol.wave.model.document.raw.impl.RawDocumentImpl$Factory $r0;
        org.waveprotocol.wave.model.document.raw.RawDocument$Provider $r2;

        $r0 = <org.waveprotocol.wave.model.document.raw.impl.RawDocumentImpl: org.waveprotocol.wave.model.document.raw.impl.RawDocumentImpl$Factory BUILDER>;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl: org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl create(org.waveprotocol.wave.model.document.raw.RawDocument$Factory)>($r0);

        <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.document.raw.RawDocument$Provider ROJO> = $r1;

        $r2 = <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.document.raw.RawDocument$Provider ROJO>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider create(org.waveprotocol.wave.model.document.raw.RawDocument$Provider)>($r2);

        <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider POJO> = $r3;

        $r4 = new org.waveprotocol.wave.model.document.util.DocProviders$1;

        specialinvoke $r4.<org.waveprotocol.wave.model.document.util.DocProviders$1: void <init>()>();

        <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.document.util.DocumentProvider MOJO> = $r4;

        return;
    }
}
