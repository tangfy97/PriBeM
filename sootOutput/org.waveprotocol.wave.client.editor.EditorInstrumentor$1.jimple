final class org.waveprotocol.wave.client.editor.EditorInstrumentor$1 extends java.lang.Object implements org.waveprotocol.wave.client.editor.EditorInstrumentor
{

    void <init>()
    {
        org.waveprotocol.wave.client.editor.EditorInstrumentor$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorInstrumentor$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void record(org.waveprotocol.wave.client.editor.EditorInstrumentor$Action)
    {
        org.waveprotocol.wave.client.editor.EditorInstrumentor$Action r1;
        org.waveprotocol.wave.client.editor.EditorInstrumentor$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorInstrumentor$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        return;
    }

    public void recordDuration(org.waveprotocol.wave.client.editor.EditorInstrumentor$TimedAction, double)
    {
        org.waveprotocol.wave.client.editor.EditorInstrumentor$1 r0;
        org.waveprotocol.wave.client.editor.EditorInstrumentor$TimedAction r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorInstrumentor$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.EditorInstrumentor$TimedAction;

        d0 := @parameter1: double;

        return;
    }

    public boolean shouldInstrument(org.waveprotocol.wave.client.common.util.SignalEvent)
    {
        org.waveprotocol.wave.client.editor.EditorInstrumentor$1 r0;
        org.waveprotocol.wave.client.common.util.SignalEvent r1;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorInstrumentor$1;

        r1 := @parameter0: org.waveprotocol.wave.client.common.util.SignalEvent;

        return 0;
    }
}
