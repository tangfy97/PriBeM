public class org.apache.velocity.runtime.parser.node.PutExecutor extends org.apache.velocity.runtime.parser.node.SetExecutor
{
    private final org.apache.velocity.util.introspection.Introspector introspector;
    private final java.lang.String property;

    public void <init>(org.apache.velocity.runtime.log.Log, org.apache.velocity.util.introspection.Introspector, java.lang.Class, java.lang.Object, java.lang.String)
    {
        org.apache.velocity.runtime.log.Log r1;
        org.apache.velocity.util.introspection.Introspector r2;
        java.lang.Class r4;
        java.lang.Object r5;
        java.lang.String r3;
        org.apache.velocity.runtime.parser.node.PutExecutor r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.PutExecutor;

        r1 := @parameter0: org.apache.velocity.runtime.log.Log;

        r2 := @parameter1: org.apache.velocity.util.introspection.Introspector;

        r4 := @parameter2: java.lang.Class;

        r5 := @parameter3: java.lang.Object;

        r3 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SetExecutor: void <init>()>();

        r0.<org.apache.velocity.runtime.parser.node.PutExecutor: org.apache.velocity.runtime.log.Log log> = r1;

        r0.<org.apache.velocity.runtime.parser.node.PutExecutor: org.apache.velocity.util.introspection.Introspector introspector> = r2;

        r0.<org.apache.velocity.runtime.parser.node.PutExecutor: java.lang.String property> = r3;

        virtualinvoke r0.<org.apache.velocity.runtime.parser.node.PutExecutor: void discover(java.lang.Class,java.lang.Object)>(r4, r5);

        return;
    }

    protected void discover(java.lang.Class, java.lang.Object)
    {
        java.lang.Object[] $r2, $r8, r19;
        java.lang.StringBuffer $r10, $r11, $r13, $r14;
        org.apache.velocity.util.introspection.Introspector $r6;
        java.lang.String $r1, $r3, $r15;
        org.apache.velocity.exception.VelocityException $r17;
        java.lang.reflect.Method $r7;
        java.lang.RuntimeException $r18;
        java.lang.Exception $r9;
        org.apache.velocity.runtime.log.Log $r16;
        java.lang.Object r4, $r12;
        java.lang.Class r5;
        org.apache.velocity.runtime.parser.node.PutExecutor r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.PutExecutor;

        r5 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.velocity.runtime.parser.node.PutExecutor: java.lang.String property>;

        if $r1 != null goto label1;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r4;

        r19 = $r8;

        goto label2;

     label1:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = r0.<org.apache.velocity.runtime.parser.node.PutExecutor: java.lang.String property>;

        $r2[0] = $r3;

        $r2[1] = r4;

        r19 = $r2;

     label2:
        $r6 = r0.<org.apache.velocity.runtime.parser.node.PutExecutor: org.apache.velocity.util.introspection.Introspector introspector>;

        $r7 = virtualinvoke $r6.<org.apache.velocity.util.introspection.Introspector: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Object[])>(r5, "put", r19);

        virtualinvoke r0.<org.apache.velocity.runtime.parser.node.PutExecutor: void setMethod(java.lang.reflect.Method)>($r7);

     label3:
        goto label6;

     label4:
        $r18 := @caughtexception;

        throw $r18;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception while looking for put(\'");

        $r12 = r19[0];

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\') method");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = r0.<org.apache.velocity.runtime.parser.node.PutExecutor: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r16.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r15, $r9);

        $r17 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r17.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r9);

        throw $r17;

     label6:
        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
    }

    public java.lang.Object execute(java.lang.Object, java.lang.Object) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        java.lang.Object[] $r2, $r8, r9;
        java.lang.Object r4, r6, $r7;
        java.lang.String $r1, $r3;
        org.apache.velocity.runtime.parser.node.PutExecutor r0;
        java.lang.reflect.Method $r5;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.parser.node.PutExecutor;

        r6 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.PutExecutor: boolean isAlive()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<org.apache.velocity.runtime.parser.node.PutExecutor: java.lang.String property>;

        if $r1 != null goto label1;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r4;

        r9 = $r8;

        goto label2;

     label1:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = r0.<org.apache.velocity.runtime.parser.node.PutExecutor: java.lang.String property>;

        $r2[0] = $r3;

        $r2[1] = r4;

        r9 = $r2;

     label2:
        $r5 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.PutExecutor: java.lang.reflect.Method getMethod()>();

        $r7 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r6, r9);

        return $r7;

     label3:
        return null;
    }
}
