public class org.apache.tika.parser.mp3.ID3v2Frame extends java.lang.Object implements org.apache.tika.parser.mp3.MP3Frame
{
    private int majorVersion;
    private int minorVersion;
    private int flags;
    private int length;
    private byte[] extendedHeader;
    private byte[] data;
    protected static final org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] encodings;

    public int getMajorVersion()
    {
        int $i0;
        org.apache.tika.parser.mp3.ID3v2Frame r0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame;

        $i0 = r0.<org.apache.tika.parser.mp3.ID3v2Frame: int majorVersion>;

        return $i0;
    }

    public int getMinorVersion()
    {
        int $i0;
        org.apache.tika.parser.mp3.ID3v2Frame r0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame;

        $i0 = r0.<org.apache.tika.parser.mp3.ID3v2Frame: int minorVersion>;

        return $i0;
    }

    public int getFlags()
    {
        int $i0;
        org.apache.tika.parser.mp3.ID3v2Frame r0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame;

        $i0 = r0.<org.apache.tika.parser.mp3.ID3v2Frame: int flags>;

        return $i0;
    }

    public int getLength()
    {
        int $i0;
        org.apache.tika.parser.mp3.ID3v2Frame r0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame;

        $i0 = r0.<org.apache.tika.parser.mp3.ID3v2Frame: int length>;

        return $i0;
    }

    public byte[] getExtendedHeader()
    {
        org.apache.tika.parser.mp3.ID3v2Frame r0;
        byte[] $r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame;

        $r1 = r0.<org.apache.tika.parser.mp3.ID3v2Frame: byte[] extendedHeader>;

        return $r1;
    }

    public byte[] getData()
    {
        org.apache.tika.parser.mp3.ID3v2Frame r0;
        byte[] $r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame;

        $r1 = r0.<org.apache.tika.parser.mp3.ID3v2Frame: byte[] data>;

        return $r1;
    }

    public static org.apache.tika.parser.mp3.MP3Frame createFrameIfPresent(java.io.InputStream) throws java.io.IOException
    {
        org.apache.tika.parser.mp3.ID3v2Frame $r4;
        int[] $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if $i0 != 73 goto label3;

        if $i1 != 68 goto label3;

        if $i2 != 51 goto label3;

        $i3 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i4 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i6 = (int) -1;

        if $i3 == $i6 goto label1;

        $i8 = (int) -1;

        if $i4 != $i8 goto label2;

     label1:
        $r1 = newarray (int)[5];

        $r1[0] = $i0;

        $r1[1] = $i1;

        $r1[2] = $i2;

        $r1[3] = $i3;

        $r1[4] = $i4;

        staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: void pushBack(java.io.InputStream,int[])>(r0, $r1);

        return null;

     label2:
        $r4 = new org.apache.tika.parser.mp3.ID3v2Frame;

        specialinvoke $r4.<org.apache.tika.parser.mp3.ID3v2Frame: void <init>(int,int,java.io.InputStream)>($i3, $i4, r0);

        return $r4;

     label3:
        $r3 = newarray (int)[3];

        $r3[0] = $i0;

        $r3[1] = $i1;

        $r3[2] = $i2;

        staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: void pushBack(java.io.InputStream,int[])>(r0, $r3);

        return null;
    }

    private static transient void pushBack(java.io.InputStream, int[]) throws java.io.IOException
    {
        byte[] r2;
        java.io.PushbackInputStream $r3;
        byte $b3;
        int[] r1;
        int $i0, $i1, $i2, i4;
        java.io.InputStream r0;
        boolean $z0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: int[];

        $z0 = r0 instanceof java.io.PushbackInputStream;

        if $z0 == 0 goto label3;

        $i0 = lengthof r1;

        r2 = newarray (byte)[$i0];

        i4 = 0;

     label1:
        $i1 = lengthof r1;

        if i4 >= $i1 goto label2;

        $i2 = r1[i4];

        $b3 = (byte) $i2;

        r2[i4] = $b3;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r3 = (java.io.PushbackInputStream) r0;

        virtualinvoke $r3.<java.io.PushbackInputStream: void unread(byte[])>(r2);

     label3:
        return;
    }

    private void <init>(int, int, java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2, $r3, $r4, $r5;
        org.apache.tika.parser.mp3.ID3v2Frame r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.parser.mp3.ID3v2Frame: int majorVersion> = i0;

        r0.<org.apache.tika.parser.mp3.ID3v2Frame: int minorVersion> = i1;

        $i2 = virtualinvoke r1.<java.io.InputStream: int read()>();

        r0.<org.apache.tika.parser.mp3.ID3v2Frame: int flags> = $i2;

        $r2 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: byte[] readFully(java.io.InputStream,int)>(r1, 4);

        $i3 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: int get7BitsInt(byte[],int)>($r2, 0);

        r0.<org.apache.tika.parser.mp3.ID3v2Frame: int length> = $i3;

        $i4 = r0.<org.apache.tika.parser.mp3.ID3v2Frame: int flags>;

        $i5 = $i4 & 2;

        if $i5 != 2 goto label1;

        $r4 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: byte[] readFully(java.io.InputStream,int)>(r1, 4);

        $i7 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: int getInt(byte[])>($r4);

        $r5 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: byte[] readFully(java.io.InputStream,int)>(r1, $i7);

        r0.<org.apache.tika.parser.mp3.ID3v2Frame: byte[] extendedHeader> = $r5;

     label1:
        $i6 = r0.<org.apache.tika.parser.mp3.ID3v2Frame: int length>;

        $r3 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: byte[] readFully(java.io.InputStream,int,boolean)>(r1, $i6, 0);

        r0.<org.apache.tika.parser.mp3.ID3v2Frame: byte[] data> = $r3;

        return;
    }

    protected static int getInt(byte[])
    {
        int $i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: int getInt(byte[],int)>(r0, 0);

        return $i0;
    }

    protected static int getInt(byte[], int)
    {
        byte[] r0;
        short s3, s6, s9, s12, $s20, $s21, $s22, $s23;
        byte $b2, $b5, $b8, $b11;
        int i0, $i1, $i4, $i7, $i10, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i24, $i25, $i26, $i27;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 0;

        $b2 = r0[$i1];

        $s20 = (short) $b2;

        s3 = $s20 & 255;

        $i4 = i0 + 1;

        $b5 = r0[$i4];

        $s21 = (short) $b5;

        s6 = $s21 & 255;

        $i7 = i0 + 2;

        $b8 = r0[$i7];

        $s22 = (short) $b8;

        s9 = $s22 & 255;

        $i10 = i0 + 3;

        $b11 = r0[$i10];

        $s23 = (short) $b11;

        s12 = $s23 & 255;

        $i24 = (int) s3;

        $i14 = $i24 << 24;

        $i25 = (int) s6;

        $i13 = $i25 << 16;

        $i16 = $i14 + $i13;

        $i26 = (int) s9;

        $i15 = $i26 << 8;

        $i18 = $i16 + $i15;

        $i27 = (int) s12;

        $i17 = $i27 << 0;

        $i19 = $i18 + $i17;

        return $i19;
    }

    protected static int getInt3(byte[], int)
    {
        byte[] r0;
        short s3, s6, s9, $s15, $s16, $s17;
        byte $b2, $b5, $b8;
        int i0, $i1, $i4, $i7, $i10, $i11, $i12, $i13, $i14, $i18, $i19, $i20;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 0;

        $b2 = r0[$i1];

        $s15 = (short) $b2;

        s3 = $s15 & 255;

        $i4 = i0 + 1;

        $b5 = r0[$i4];

        $s16 = (short) $b5;

        s6 = $s16 & 255;

        $i7 = i0 + 2;

        $b8 = r0[$i7];

        $s17 = (short) $b8;

        s9 = $s17 & 255;

        $i18 = (int) s3;

        $i11 = $i18 << 16;

        $i19 = (int) s6;

        $i10 = $i19 << 8;

        $i13 = $i11 + $i10;

        $i20 = (int) s9;

        $i12 = $i20 << 0;

        $i14 = $i13 + $i12;

        return $i14;
    }

    protected static int getInt2(byte[], int)
    {
        byte[] r0;
        short s3, s6, $s10, $s11;
        byte $b2, $b5;
        int i0, $i1, $i4, $i7, $i8, $i9, $i12, $i13;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 0;

        $b2 = r0[$i1];

        $s10 = (short) $b2;

        s3 = $s10 & 255;

        $i4 = i0 + 1;

        $b5 = r0[$i4];

        $s11 = (short) $b5;

        s6 = $s11 & 255;

        $i12 = (int) s3;

        $i8 = $i12 << 8;

        $i13 = (int) s6;

        $i7 = $i13 << 0;

        $i9 = $i8 + $i7;

        return $i9;
    }

    protected static int get7BitsInt(byte[], int)
    {
        byte[] r0;
        byte $b2, b3, $b5, b6, $b8, b9, $b11, b12;
        int i0, $i1, $i4, $i7, $i10, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 0;

        $b2 = r0[$i1];

        b3 = $b2 & 127;

        $i4 = i0 + 1;

        $b5 = r0[$i4];

        b6 = $b5 & 127;

        $i7 = i0 + 2;

        $b8 = r0[$i7];

        b9 = $b8 & 127;

        $i10 = i0 + 3;

        $b11 = r0[$i10];

        b12 = $b11 & 127;

        $i20 = (int) b3;

        $i14 = $i20 << 21;

        $i21 = (int) b6;

        $i13 = $i21 << 14;

        $i16 = $i14 + $i13;

        $i22 = (int) b9;

        $i15 = $i22 << 7;

        $i18 = $i16 + $i15;

        $i23 = (int) b12;

        $i17 = $i23 << 0;

        $i19 = $i18 + $i17;

        return $i19;
    }

    protected static byte[] readFully(java.io.InputStream, int) throws java.io.IOException
    {
        int i0;
        byte[] $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $r1 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: byte[] readFully(java.io.InputStream,int,boolean)>(r0, i0, 1);

        return $r1;
    }

    protected static byte[] readFully(java.io.InputStream, int, boolean) throws java.io.IOException
    {
        byte[] r0;
        int i0, $i1, $i2, i3, $i5;
        java.lang.String $r9;
        boolean z0;
        java.io.IOException $r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r10;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r0 = newarray (byte)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        $i1 = i0 - i3;

        $i2 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r0, i3, $i1);

        $i5 = (int) -1;

        if $i2 != $i5 goto label3;

        if z0 == 0 goto label2;

        $r11 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to read ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, but only ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes present");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r11;

     label2:
        return r0;

     label3:
        i3 = i3 + $i2;

        goto label1;

     label4:
        return r0;
    }

    protected static java.lang.String getTagString(byte[], int, int)
    {
        byte[] r1;
        org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding r13;
        byte $b1, $b2, $b4, $b6, $b9, $b12, $b15, $b17, $b18;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r8, $r10, $r11, $r17;
        java.io.UnsupportedEncodingException $r5;
        int i0, $i3, $i5, $i7, $i8, $i10, $i11, $i13, $i14, $i16, i19, i20, $i21, $i22, $i24, $i25, $i27, $i29, $i30, $i32, $i33, $i35, $i36, $i38, $i39, $i41;
        java.lang.String $r2, $r9, $r12, $r15, $r16;
        java.lang.RuntimeException $r18;
        org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] $r0, $r3, $r4;

        r1 := @parameter0: byte[];

        i19 := @parameter1: int;

        i0 := @parameter2: int;

        i20 = i0;

        if i0 != 0 goto label01;

        return "";

     label01:
        if i0 != 1 goto label02;

        $b17 = r1[i19];

        if $b17 != 0 goto label02;

        return "";

     label02:
        $r0 = <org.apache.tika.parser.mp3.ID3v2Frame: org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] encodings>;

        r13 = $r0[0];

        $b18 = r1[i19];

        $i21 = (int) $b18;

        if $i21 < 0 goto label03;

        $r3 = <org.apache.tika.parser.mp3.ID3v2Frame: org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] encodings>;

        $i16 = lengthof $r3;

        $i22 = (int) $b18;

        if $i22 >= $i16 goto label03;

        i19 = i19 + 1;

        $i24 = (int) -1;

        i20 = i0 + $i24;

        $r4 = <org.apache.tika.parser.mp3.ID3v2Frame: org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] encodings>;

        $i25 = (int) $b18;

        r13 = $r4[$i25];

     label03:
        $z1 = r13.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: boolean doubleByte>;

        if $z1 == 0 goto label04;

        if i20 < 2 goto label04;

        $i10 = i19 + i20;

        $i11 = $i10 - 1;

        $b12 = r1[$i11];

        if $b12 != 0 goto label04;

        $i13 = i19 + i20;

        $i14 = $i13 - 2;

        $b15 = r1[$i14];

        if $b15 != 0 goto label04;

        $i27 = (int) -2;

        i20 = i20 + $i27;

        goto label03;

     label04:
        $z2 = r13.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: boolean doubleByte>;

        if $z2 != 0 goto label05;

        if i20 < 1 goto label05;

        $i7 = i19 + i20;

        $i8 = $i7 - 1;

        $b9 = r1[$i8];

        if $b9 != 0 goto label05;

        $i29 = (int) -1;

        i20 = i20 + $i29;

        goto label04;

     label05:
        if i20 != 0 goto label06;

        return "";

     label06:
        $r2 = r13.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: java.lang.String encoding>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16");

        if $z0 == 0 goto label09;

        if i20 != 2 goto label09;

        $b1 = r1[i19];

        $i30 = (int) $b1;

        $i32 = (int) -1;

        if $i30 != $i32 goto label07;

        $i5 = i19 + 1;

        $b6 = r1[$i5];

        $i33 = (int) $b6;

        $i35 = (int) -2;

        if $i33 == $i35 goto label08;

     label07:
        $b2 = r1[i19];

        $i36 = (int) $b2;

        $i38 = (int) -2;

        if $i36 != $i38 goto label09;

        $i3 = i19 + 1;

        $b4 = r1[$i3];

        $i39 = (int) $b4;

        $i41 = (int) -1;

        if $i39 != $i41 goto label09;

     label08:
        return "";

     label09:
        $r16 = new java.lang.String;

        $r15 = r13.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: java.lang.String encoding>;

        specialinvoke $r16.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i19, i20, $r15);

     label10:
        return $r16;

     label11:
        $r5 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Core encoding ");

        $r9 = r13.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: java.lang.String encoding>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not available");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r5);

        throw $r18;

        catch java.io.UnsupportedEncodingException from label09 to label10 with label11;
    }

    protected static org.apache.tika.parser.mp3.ID3Tags$ID3Comment getComment(byte[], int, int)
    {
        byte[] r0;
        org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding r3;
        byte b1, $b11, $b13, $b15, $b19, $b21;
        boolean $z0, $z1;
        java.lang.StringBuilder $r15, $r17, $r18, $r29;
        java.io.UnsupportedEncodingException $r12;
        int i0, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i12, $i14, $i16, $i17, $i18, $i20, i22, i23, $i24, $i25, $i26, $i27, $i29, $i31;
        java.lang.String $r4, $r6, $r9, $r11, $r16, $r19, r20, $r22, r23, $r24, $r25, $r26, $r27;
        java.lang.RuntimeException $r30;
        org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] $r1, $r2;
        org.apache.tika.parser.mp3.ID3Tags$ID3Comment $r28;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i5 := @parameter2: int;

        b1 = r0[i0];

        $i25 = (int) b1;

        if $i25 < 0 goto label01;

        $r1 = <org.apache.tika.parser.mp3.ID3v2Frame: org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] encodings>;

        $i2 = lengthof $r1;

        $i26 = (int) b1;

        if $i26 >= $i2 goto label01;

        goto label02;

     label01:
        return null;

     label02:
        $r2 = <org.apache.tika.parser.mp3.ID3v2Frame: org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] encodings>;

        $i27 = (int) b1;

        r3 = $r2[$i27];

        $i3 = i0 + 1;

        $r4 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: java.lang.String getString(byte[],int,int)>(r0, $i3, 3);

        i4 = i0 + 4;

        $i29 = (int) -1;

        i22 = $i29;

        r20 = null;

     label03:
        i23 = i4;

     label04:
        $i6 = i0 + i5;

        if i23 >= $i6 goto label08;

        $z0 = r3.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: boolean doubleByte>;

        if $z0 == 0 goto label06;

        $b13 = r0[i23];

        if $b13 != 0 goto label06;

        $i14 = i23 + 1;

        $b15 = r0[$i14];

        if $b15 != 0 goto label06;

        $i17 = i23 + 2;

        $i16 = i0 + i5;

        if $i17 >= $i16 goto label05;

        $i18 = i23 + 1;

        $b19 = r0[$i18];

        if $b19 != 0 goto label05;

        $i20 = i23 + 2;

        $b21 = r0[$i20];

        if $b21 != 0 goto label05;

        i23 = i23 + 1;

     label05:
        i22 = i23 + 2;

        $r24 = new java.lang.String;

        $i24 = i23 - i4;

        $r22 = r3.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: java.lang.String encoding>;

        specialinvoke $r24.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, i4, $i24, $r22);

        r20 = $r24;

        goto label08;

     label06:
        $z1 = r3.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: boolean doubleByte>;

        if $z1 != 0 goto label07;

        $b11 = r0[i23];

        if $b11 != 0 goto label07;

        i22 = i23 + 1;

        $r25 = new java.lang.String;

        $i12 = i23 - i4;

        $r11 = r3.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: java.lang.String encoding>;

        specialinvoke $r25.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, i4, $i12, $r11);

        r20 = $r25;

        goto label08;

     label07:
        i23 = i23 + 1;

        goto label04;

     label08:
        $i31 = (int) -1;

        if i22 <= $i31 goto label09;

        $r26 = new java.lang.String;

        $i9 = i0 + i5;

        $i10 = $i9 - i22;

        $r9 = r3.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: java.lang.String encoding>;

        specialinvoke $r26.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, i22, $i10, $r9);

        r23 = $r26;

        goto label10;

     label09:
        $r27 = new java.lang.String;

        $i7 = i0 + i5;

        $i8 = $i7 - i4;

        $r6 = r3.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: java.lang.String encoding>;

        specialinvoke $r27.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, i4, $i8, $r6);

        r23 = $r27;

     label10:
        $r28 = new org.apache.tika.parser.mp3.ID3Tags$ID3Comment;

        specialinvoke $r28.<org.apache.tika.parser.mp3.ID3Tags$ID3Comment: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r4, r20, r23);

     label11:
        return $r28;

     label12:
        $r12 := @caughtexception;

        $r30 = new java.lang.RuntimeException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Core encoding ");

        $r16 = r3.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: java.lang.String encoding>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not available");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r12);

        throw $r30;

        catch java.io.UnsupportedEncodingException from label03 to label11 with label12;
    }

    protected static java.lang.String getString(byte[], int, int)
    {
        byte[] r1;
        int i0, i1;
        java.lang.String $r0;
        java.lang.RuntimeException $r3;
        java.io.UnsupportedEncodingException $r2;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i0, i1, "ISO-8859-1");

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Core encoding ISO-8859-1 encoding is not available", $r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    static byte[] access$100(org.apache.tika.parser.mp3.ID3v2Frame)
    {
        org.apache.tika.parser.mp3.ID3v2Frame r0;
        byte[] $r1;

        r0 := @parameter0: org.apache.tika.parser.mp3.ID3v2Frame;

        $r1 = r0.<org.apache.tika.parser.mp3.ID3v2Frame: byte[] data>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] $r0;
        org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding $r1, $r2, $r3, $r4;

        $r0 = newarray (org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding)[4];

        $r1 = new org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding;

        specialinvoke $r1.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: void <init>(java.lang.String,boolean,org.apache.tika.parser.mp3.ID3v2Frame$1)>("ISO-8859-1", 0, null);

        $r0[0] = $r1;

        $r2 = new org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding;

        specialinvoke $r2.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: void <init>(java.lang.String,boolean,org.apache.tika.parser.mp3.ID3v2Frame$1)>("UTF-16", 1, null);

        $r0[1] = $r2;

        $r3 = new org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding;

        specialinvoke $r3.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: void <init>(java.lang.String,boolean,org.apache.tika.parser.mp3.ID3v2Frame$1)>("UTF-16BE", 1, null);

        $r0[2] = $r3;

        $r4 = new org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding;

        specialinvoke $r4.<org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding: void <init>(java.lang.String,boolean,org.apache.tika.parser.mp3.ID3v2Frame$1)>("UTF-8", 0, null);

        $r0[3] = $r4;

        <org.apache.tika.parser.mp3.ID3v2Frame: org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] encodings> = $r0;

        return;
    }
}
