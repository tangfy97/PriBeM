public class org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util extends java.lang.Object
{
    private static java.lang.String EOL;

    public void <init>()
    {
        org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util r0;

        r0 := @this: org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String toString(org.apache.xmlbeans.xml.stream.utils.NestedThrowable)
    {
        java.lang.Throwable $r1;
        org.apache.xmlbeans.xml.stream.utils.NestedThrowable r0;
        java.lang.StringBuffer $r2, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.String $r3, $r6, $r9, $r12, $r13;

        r0 := @parameter0: org.apache.xmlbeans.xml.stream.utils.NestedThrowable;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.utils.NestedThrowable: java.lang.Throwable getNested()>();

        if $r1 != null goto label1;

        $r13 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.utils.NestedThrowable: java.lang.String superToString()>();

        return $r13;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.utils.NestedThrowable: java.lang.String superToString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - with nested exception:");

        $r6 = <org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util: java.lang.String EOL>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r9 = staticinvoke <org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util: java.lang.String nestedToString(java.lang.Throwable)>($r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    private static java.lang.String nestedToString(java.lang.Throwable)
    {
        java.lang.Throwable r0, $r10;
        java.lang.StringBuffer $r3, $r5, $r6, $r8, $r9, $r12, $r13;
        java.lang.String $r1, $r4, $r7, $r11, $r14;
        boolean $z0;
        java.lang.reflect.InvocationTargetException r2;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = r0 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label1;

        r2 = (java.lang.reflect.InvocationTargetException) r0;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Throwable: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - with target exception:");

        $r7 = <org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util: java.lang.String EOL>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r10 = virtualinvoke r2.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r11 = virtualinvoke $r10.<java.lang.Throwable: java.lang.String toString()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Throwable: java.lang.String toString()>();

        return $r1;
    }

    public static void printStackTrace(org.apache.xmlbeans.xml.stream.utils.NestedThrowable, java.io.PrintStream)
    {
        java.lang.Throwable $r1;
        java.io.PrintStream r2;
        org.apache.xmlbeans.xml.stream.utils.NestedThrowable r0;

        r0 := @parameter0: org.apache.xmlbeans.xml.stream.utils.NestedThrowable;

        r2 := @parameter1: java.io.PrintStream;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.utils.NestedThrowable: java.lang.Throwable getNested()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r2);

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>("--------------- nested within: ------------------");

     label1:
        interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.utils.NestedThrowable: void superPrintStackTrace(java.io.PrintStream)>(r2);

        return;
    }

    public static void printStackTrace(org.apache.xmlbeans.xml.stream.utils.NestedThrowable, java.io.PrintWriter)
    {
        java.lang.Throwable $r1;
        java.io.PrintWriter r2;
        org.apache.xmlbeans.xml.stream.utils.NestedThrowable r0;

        r0 := @parameter0: org.apache.xmlbeans.xml.stream.utils.NestedThrowable;

        r2 := @parameter1: java.io.PrintWriter;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.utils.NestedThrowable: java.lang.Throwable getNested()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("--------------- nested within: ------------------");

     label1:
        interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.utils.NestedThrowable: void superPrintStackTrace(java.io.PrintWriter)>(r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util: java.lang.String EOL> = $r0;

        return;
    }
}
