public class org.eclipse.jdt.internal.antadapter.AntAdapterMessages extends java.lang.Object
{
    private static final java.lang.String BUNDLE_NAME;
    private static java.util.ResourceBundle RESOURCE_BUNDLE;

    static void <clinit>()
    {
        java.io.PrintStream $r4;
        java.util.MissingResourceException $r2;
        java.util.ResourceBundle $r1;
        java.util.Locale $r0, $r9;
        java.lang.StringBuffer $r3, $r7, $r8, $r10;
        java.lang.String $r5, $r6, $r11;

        <org.eclipse.jdt.internal.antadapter.AntAdapterMessages: java.lang.String BUNDLE_NAME> = "org.eclipse.jdt.internal.antadapter.messages";

     label1:
        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.eclipse.jdt.internal.antadapter.messages", $r0);

        <org.eclipse.jdt.internal.antadapter.AntAdapterMessages: java.util.ResourceBundle RESOURCE_BUNDLE> = $r1;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>("Missing resource : ");

        $r5 = "org.eclipse.jdt.internal.antadapter.messages";

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r7 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".properties for locale ");

        $r9 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r11);

        throw $r2;

     label4:
        return;

        catch java.util.MissingResourceException from label1 to label2 with label3;
    }

    private void <init>()
    {
        org.eclipse.jdt.internal.antadapter.AntAdapterMessages r0;

        r0 := @this: org.eclipse.jdt.internal.antadapter.AntAdapterMessages;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getString(java.lang.String)
    {
        java.util.MissingResourceException $r3;
        java.util.ResourceBundle $r1;
        java.lang.StringBuffer $r4, $r6, $r7;
        java.lang.String r0, $r2, $r5, $r8;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = <org.eclipse.jdt.internal.antadapter.AntAdapterMessages: java.util.ResourceBundle RESOURCE_BUNDLE>;

        $r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuffer;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(33);

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(33);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;

        catch java.util.MissingResourceException from label1 to label2 with label3;
    }

    public static java.lang.String getString(java.lang.String, java.lang.String)
    {
        java.util.MissingResourceException $r7;
        java.lang.String[] $r4;
        java.text.MessageFormat $r3;
        java.util.ResourceBundle $r1;
        java.lang.StringBuffer $r8, $r10, $r11;
        java.lang.String r0, $r2, r5, $r6, $r9, $r12;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

     label1:
        $r1 = <org.eclipse.jdt.internal.antadapter.AntAdapterMessages: java.util.ResourceBundle RESOURCE_BUNDLE>;

        $r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0);

        $r3 = new java.text.MessageFormat;

        specialinvoke $r3.<java.text.MessageFormat: void <init>(java.lang.String)>($r2);

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r5;

        $r6 = virtualinvoke $r3.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r4);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuffer;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(33);

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(java.lang.String)>($r9);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(33);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;

        catch java.util.MissingResourceException from label1 to label2 with label3;
    }
}
