public class org.springframework.core.serializer.DefaultDeserializer extends java.lang.Object implements org.springframework.core.serializer.Deserializer
{

    public void <init>()
    {
        org.springframework.core.serializer.DefaultDeserializer r0;

        r0 := @this: org.springframework.core.serializer.DefaultDeserializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object deserialize(java.io.InputStream) throws java.io.IOException
    {
        java.io.ObjectInputStream $r0;
        java.lang.Object $r2;
        java.lang.ClassNotFoundException $r3;
        org.springframework.core.NestedIOException $r4;
        org.springframework.core.serializer.DefaultDeserializer r5;
        java.io.InputStream r1;

        r5 := @this: org.springframework.core.serializer.DefaultDeserializer;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.ObjectInputStream;

        specialinvoke $r0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r1);

     label1:
        $r2 = virtualinvoke $r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.springframework.core.NestedIOException;

        specialinvoke $r4.<org.springframework.core.NestedIOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to deserialize object type", $r3);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
