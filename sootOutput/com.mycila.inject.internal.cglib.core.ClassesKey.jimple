public class com.mycila.inject.internal.cglib.core.ClassesKey extends java.lang.Object
{
    private static final com.mycila.inject.internal.cglib.core.ClassesKey$Key FACTORY;
    static java.lang.Class class$net$sf$cglib$core$ClassesKey$Key;

    private void <init>()
    {
        com.mycila.inject.internal.cglib.core.ClassesKey r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.ClassesKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object create(java.lang.Object[])
    {
        java.lang.Object $r2;
        java.lang.Object[] r0;
        com.mycila.inject.internal.cglib.core.ClassesKey$Key $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = <com.mycila.inject.internal.cglib.core.ClassesKey: com.mycila.inject.internal.cglib.core.ClassesKey$Key FACTORY>;

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.cglib.core.ClassesKey$Key: java.lang.Object newInstance(java.lang.Object[])>(r0);

        return $r2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.KeyFactory $r2;
        com.mycila.inject.internal.cglib.core.ClassesKey$Key $r3;
        java.lang.Class $r0, $r4;
        com.mycila.inject.internal.cglib.core.Customizer $r1;

        $r0 = <com.mycila.inject.internal.cglib.core.ClassesKey: java.lang.Class class$net$sf$cglib$core$ClassesKey$Key>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <com.mycila.inject.internal.cglib.core.ClassesKey: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.core.ClassesKey$Key");

        <com.mycila.inject.internal.cglib.core.ClassesKey: java.lang.Class class$net$sf$cglib$core$ClassesKey$Key> = $r4;

        goto label2;

     label1:
        $r4 = <com.mycila.inject.internal.cglib.core.ClassesKey: java.lang.Class class$net$sf$cglib$core$ClassesKey$Key>;

     label2:
        $r1 = <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Customizer OBJECT_BY_CLASS>;

        $r2 = staticinvoke <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.KeyFactory create(java.lang.Class,com.mycila.inject.internal.cglib.core.Customizer)>($r4, $r1);

        $r3 = (com.mycila.inject.internal.cglib.core.ClassesKey$Key) $r2;

        <com.mycila.inject.internal.cglib.core.ClassesKey: com.mycila.inject.internal.cglib.core.ClassesKey$Key FACTORY> = $r3;

        return;
    }
}
