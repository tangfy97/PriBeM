public class com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy extends java.lang.Object implements com.mycila.inject.internal.cglib.core.GeneratorStrategy
{
    public static final com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy INSTANCE;

    public void <init>()
    {
        com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public byte[] generate(com.mycila.inject.internal.cglib.core.ClassGenerator) throws java.lang.Exception
    {
        byte[] $r4, $r5;
        com.mycila.inject.internal.cglib.core.ClassGenerator r2, $r3;
        com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy r0;
        com.mycila.inject.internal.asm.ClassWriter $r1;

        r0 := @this: com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy;

        r2 := @parameter0: com.mycila.inject.internal.cglib.core.ClassGenerator;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy: com.mycila.inject.internal.asm.ClassWriter getClassWriter()>();

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy: com.mycila.inject.internal.cglib.core.ClassGenerator transform(com.mycila.inject.internal.cglib.core.ClassGenerator)>(r2);

        interfaceinvoke $r3.<com.mycila.inject.internal.cglib.core.ClassGenerator: void generateClass(com.mycila.inject.internal.asm.ClassVisitor)>($r1);

        $r4 = virtualinvoke $r1.<com.mycila.inject.internal.asm.ClassWriter: byte[] toByteArray()>();

        $r5 = virtualinvoke r0.<com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy: byte[] transform(byte[])>($r4);

        return $r5;
    }

    protected com.mycila.inject.internal.asm.ClassWriter getClassWriter() throws java.lang.Exception
    {
        com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy r1;
        com.mycila.inject.internal.cglib.core.DebuggingClassWriter $r0;

        r1 := @this: com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy;

        $r0 = new com.mycila.inject.internal.cglib.core.DebuggingClassWriter;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.core.DebuggingClassWriter: void <init>(int)>(1);

        return $r0;
    }

    protected byte[] transform(byte[]) throws java.lang.Exception
    {
        byte[] r0;
        com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy r1;

        r1 := @this: com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy;

        r0 := @parameter0: byte[];

        return r0;
    }

    protected com.mycila.inject.internal.cglib.core.ClassGenerator transform(com.mycila.inject.internal.cglib.core.ClassGenerator) throws java.lang.Exception
    {
        com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy r1;
        com.mycila.inject.internal.cglib.core.ClassGenerator r0;

        r1 := @this: com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy;

        r0 := @parameter0: com.mycila.inject.internal.cglib.core.ClassGenerator;

        return r0;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy $r0;

        $r0 = new com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy: void <init>()>();

        <com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy: com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy INSTANCE> = $r0;

        return;
    }
}
