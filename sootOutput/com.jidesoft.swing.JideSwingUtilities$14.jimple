final class com.jidesoft.swing.JideSwingUtilities$14 extends javax.swing.AbstractAction
{
    final javax.swing.table.DefaultTableModel val$tableModel;
    final javax.swing.JTable val$table;

    void <init>(javax.swing.table.DefaultTableModel, javax.swing.JTable)
    {
        javax.swing.JTable r2;
        javax.swing.table.DefaultTableModel r1;
        com.jidesoft.swing.JideSwingUtilities$14 r0;

        r0 := @this: com.jidesoft.swing.JideSwingUtilities$14;

        r1 := @parameter0: javax.swing.table.DefaultTableModel;

        r2 := @parameter1: javax.swing.JTable;

        r0.<com.jidesoft.swing.JideSwingUtilities$14: javax.swing.table.DefaultTableModel val$tableModel> = r1;

        r0.<com.jidesoft.swing.JideSwingUtilities$14: javax.swing.JTable val$table> = r2;

        specialinvoke r0.<javax.swing.AbstractAction: void <init>()>();

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        java.lang.Integer $r13;
        java.util.Vector $r2, r5, $r15;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String $r12;
        double $d0, $d1;
        javax.swing.table.DefaultTableModel $r1, $r7;
        com.jidesoft.swing.JideSwingUtilities$14 r0;
        java.awt.event.ActionEvent r14;
        javax.swing.JTable $r3;
        java.lang.Object $r4, $r10;
        java.lang.StringBuilder $r9, $r11, $r16;

        r0 := @this: com.jidesoft.swing.JideSwingUtilities$14;

        r14 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<com.jidesoft.swing.JideSwingUtilities$14: javax.swing.table.DefaultTableModel val$tableModel>;

        $r2 = virtualinvoke $r1.<javax.swing.table.DefaultTableModel: java.util.Vector getDataVector()>();

        $r3 = r0.<com.jidesoft.swing.JideSwingUtilities$14: javax.swing.JTable val$table>;

        $i0 = virtualinvoke $r3.<javax.swing.JTable: int getSelectedRow()>();

        $i5 = (int) -1;

        if $i0 == $i5 goto label5;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.lang.Object get(int)>($i0);

        r5 = (java.util.Vector) $r4;

        $r15 = new java.util.Vector;

        specialinvoke $r15.<java.util.Vector: void <init>()>();

        i3 = 0;

     label1:
        $i1 = virtualinvoke r5.<java.util.Vector: int size()>();

        if i3 >= $i1 goto label4;

        if i3 != 0 goto label2;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = $d0 * 10.0;

        $i2 = (int) $d1;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r15.<java.util.Vector: boolean add(java.lang.Object)>($r13);

        goto label3;

     label2:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r10 = virtualinvoke r5.<java.util.Vector: java.lang.Object get(int)>(i3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.util.Vector: boolean add(java.lang.Object)>($r12);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r7 = r0.<com.jidesoft.swing.JideSwingUtilities$14: javax.swing.table.DefaultTableModel val$tableModel>;

        virtualinvoke $r7.<javax.swing.table.DefaultTableModel: void insertRow(int,java.util.Vector)>($i0, $r15);

     label5:
        return;
    }
}
