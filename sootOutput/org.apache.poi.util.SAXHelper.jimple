public final class org.apache.poi.util.SAXHelper extends java.lang.Object
{
    private static org.apache.poi.util.POILogger logger;
    static final org.xml.sax.EntityResolver IGNORING_ENTITY_RESOLVER;
    private static final javax.xml.parsers.SAXParserFactory saxFactory;

    private void <init>()
    {
        org.apache.poi.util.SAXHelper r0;

        r0 := @this: org.apache.poi.util.SAXHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized org.xml.sax.XMLReader newXMLReader() throws org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException
    {
        org.xml.sax.XMLReader $r2;
        javax.xml.parsers.SAXParserFactory $r0;
        javax.xml.parsers.SAXParser $r1;
        org.xml.sax.EntityResolver $r3;

        $r0 = <org.apache.poi.util.SAXHelper: javax.xml.parsers.SAXParserFactory saxFactory>;

        $r1 = virtualinvoke $r0.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r2 = virtualinvoke $r1.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        $r3 = <org.apache.poi.util.SAXHelper: org.xml.sax.EntityResolver IGNORING_ENTITY_RESOLVER>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>($r3);

        staticinvoke <org.apache.poi.util.SAXHelper: void trySetSAXFeature(org.xml.sax.XMLReader,java.lang.String,boolean)>($r2, "http://javax.xml.XMLConstants/feature/secure-processing", 1);

        staticinvoke <org.apache.poi.util.SAXHelper: void trySetXercesSecurityManager(org.xml.sax.XMLReader)>($r2);

        return $r2;
    }

    private static void trySetSAXFeature(org.xml.sax.XMLReader, java.lang.String, boolean)
    {
        org.xml.sax.XMLReader r0;
        org.apache.poi.util.POILogger $r3;
        java.lang.String r1;
        java.lang.Exception $r2;
        boolean z0;

        r0 := @parameter0: org.xml.sax.XMLReader;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

     label1:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>(r1, z0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <org.apache.poi.util.SAXHelper: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r3.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Throwable)>(3, "SAX Feature unsupported", r1, $r2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void trySetXercesSecurityManager(org.xml.sax.XMLReader)
    {
        java.lang.Object[] $r8;
        java.lang.Class[] $r5;
        java.lang.String[] $r0;
        org.apache.poi.util.POILogger $r12;
        java.lang.Integer $r9;
        java.lang.Exception $r11;
        org.xml.sax.XMLReader r10;
        int i0, i1;
        java.lang.Class $r2, $r4, $r6;
        java.lang.Object $r3;
        java.lang.String r1;
        java.lang.reflect.Method $r7;

        r10 := @parameter0: org.xml.sax.XMLReader;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "com.sun.org.apache.xerces.internal.util.SecurityManager";

        $r0[1] = "org.apache.xerces.util.SecurityManager";

        i0 = lengthof $r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r1 = $r0[i1];

     label2:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = newarray (java.lang.Class)[1];

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5[0] = $r6;

        $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setEntityExpansionLimit", $r5);

        $r8 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4096);

        $r8[0] = $r9;

        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r8);

        interfaceinvoke r10.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/security-manager", $r3);

     label3:
        return;

     label4:
        $r11 := @caughtexception;

        $r12 = <org.apache.poi.util.SAXHelper: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r12.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Throwable)>(3, "SAX Security Manager could not be setup", $r11);

        i1 = i1 + 1;

        goto label1;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        org.apache.poi.util.SAXHelper$1 $r1;
        javax.xml.parsers.SAXParserFactory $r2, $r3, $r4;
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/util/SAXHelper;");

        <org.apache.poi.util.SAXHelper: org.apache.poi.util.POILogger logger> = $r0;

        $r1 = new org.apache.poi.util.SAXHelper$1;

        specialinvoke $r1.<org.apache.poi.util.SAXHelper$1: void <init>()>();

        <org.apache.poi.util.SAXHelper: org.xml.sax.EntityResolver IGNORING_ENTITY_RESOLVER> = $r1;

        $r2 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        <org.apache.poi.util.SAXHelper: javax.xml.parsers.SAXParserFactory saxFactory> = $r2;

        $r3 = <org.apache.poi.util.SAXHelper: javax.xml.parsers.SAXParserFactory saxFactory>;

        virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(0);

        $r4 = <org.apache.poi.util.SAXHelper: javax.xml.parsers.SAXParserFactory saxFactory>;

        virtualinvoke $r4.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        return;
    }
}
