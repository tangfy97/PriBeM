public abstract class org.apache.cxf.jaxrs.client.AbstractClient extends java.lang.Object implements org.apache.cxf.jaxrs.client.Client, org.apache.cxf.endpoint.Retryable
{
    protected static final java.lang.String REQUEST_CONTEXT;
    protected static final java.lang.String RESPONSE_CONTEXT;
    protected static final java.lang.String KEEP_CONDUIT_ALIVE;
    protected static final java.lang.String HTTP_SCHEME;
    private static final java.lang.String PROXY_PROPERTY;
    private static final java.lang.String HEADER_SPLIT_PROPERTY;
    private static final java.util.logging.Logger LOG;
    private static final java.util.ResourceBundle BUNDLE;
    protected org.apache.cxf.jaxrs.client.ClientConfiguration cfg;
    private org.apache.cxf.jaxrs.client.ClientState state;

    protected void <init>(org.apache.cxf.jaxrs.client.ClientState)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r1;
        org.apache.cxf.jaxrs.client.ClientState r2;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r2 := @parameter0: org.apache.cxf.jaxrs.client.ClientState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.cxf.jaxrs.client.ClientConfiguration;

        specialinvoke $r1.<org.apache.cxf.jaxrs.client.ClientConfiguration: void <init>()>();

        r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg> = $r1;

        r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state> = r2;

        return;
    }

    public transient org.apache.cxf.jaxrs.client.Client header(java.lang.String, java.lang.Object[])
    {
        org.apache.cxf.jaxrs.client.AbstractClient r3;
        java.lang.Object[] r0;
        java.lang.IllegalArgumentException $r8, $r9;
        int i0, $i1, i2;
        java.lang.Object r4, $r6;
        java.lang.String r1, $r2, $r5, $r7;
        boolean $z0;

        r3 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object[];

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r9;

     label1:
        $r2 = "Content-Type";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $i1 = lengthof r0;

        if $i1 <= 1 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content-Type can have a single value only");

        throw $r8;

     label2:
        $r6 = r0[0];

        $r7 = virtualinvoke r3.<org.apache.cxf.jaxrs.client.AbstractClient: java.lang.String convertParamValue(java.lang.Object)>($r6);

        virtualinvoke r3.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client type(java.lang.String)>($r7);

        goto label5;

     label3:
        i0 = lengthof r0;

        i2 = 0;

     label4:
        if i2 >= i0 goto label5;

        r4 = r0[i2];

        $r5 = virtualinvoke r3.<org.apache.cxf.jaxrs.client.AbstractClient: java.lang.String convertParamValue(java.lang.Object)>(r4);

        specialinvoke r3.<org.apache.cxf.jaxrs.client.AbstractClient: void possiblyAddHeader(java.lang.String,java.lang.String)>(r1, $r5);

        i2 = i2 + 1;

        goto label4;

     label5:
        return r3;
    }

    public org.apache.cxf.jaxrs.client.Client headers(javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap $r2, r3;
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r3 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>(r3);

        return r0;
    }

    public transient org.apache.cxf.jaxrs.client.Client accept(javax.ws.rs.core.MediaType[])
    {
        org.apache.cxf.jaxrs.client.AbstractClient r1;
        javax.ws.rs.core.MediaType r2;
        int i0, i1;
        java.lang.String[] $r3;
        java.lang.String $r4;
        javax.ws.rs.core.MediaType[] r0;

        r1 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: javax.ws.rs.core.MediaType[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r0[i1];

        $r3 = newarray (java.lang.String)[0];

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>(r2, $r3);

        specialinvoke r1.<org.apache.cxf.jaxrs.client.AbstractClient: void possiblyAddHeader(java.lang.String,java.lang.String)>("Accept", $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public org.apache.cxf.jaxrs.client.Client type(javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        javax.ws.rs.core.MediaType r1;
        java.lang.String[] $r2;
        org.apache.cxf.jaxrs.client.Client $r4;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: javax.ws.rs.core.MediaType;

        $r2 = newarray (java.lang.String)[0];

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>(r1, $r2);

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client type(java.lang.String)>($r3);

        return $r4;
    }

    public org.apache.cxf.jaxrs.client.Client type(java.lang.String)
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.lang.String r3;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Type", r3);

        return r0;
    }

    public transient org.apache.cxf.jaxrs.client.Client accept(java.lang.String[])
    {
        org.apache.cxf.jaxrs.client.AbstractClient r1;
        int i0, i1;
        java.lang.String[] r0;
        java.lang.String r2;

        r1 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r0[i1];

        specialinvoke r1.<org.apache.cxf.jaxrs.client.AbstractClient: void possiblyAddHeader(java.lang.String,java.lang.String)>("Accept", r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public org.apache.cxf.jaxrs.client.Client cookie(javax.ws.rs.core.Cookie)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.lang.String $r2;
        javax.ws.rs.core.Cookie r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: javax.ws.rs.core.Cookie;

        $r2 = virtualinvoke r1.<javax.ws.rs.core.Cookie: java.lang.String toString()>();

        specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: void possiblyAddHeader(java.lang.String,java.lang.String)>("Cookie", $r2);

        return r0;
    }

    public org.apache.cxf.jaxrs.client.Client modified(java.util.Date, boolean)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r1;
        java.util.Date r4;
        java.text.SimpleDateFormat $r0;
        org.apache.cxf.jaxrs.client.ClientState $r2;
        javax.ws.rs.core.MultivaluedMap $r3;
        java.lang.String $r5, $r6;
        boolean z0;

        r1 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r4 := @parameter0: java.util.Date;

        z0 := @parameter1: boolean;

        $r0 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.text.SimpleDateFormat getHttpDateFormat()>();

        if z0 == 0 goto label1;

        $r6 = "If-Unmodified-Since";

        goto label2;

     label1:
        $r6 = "If-Modified-Since";

     label2:
        $r2 = r1.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        $r5 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r4);

        interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>($r6, $r5);

        return r1;
    }

    public org.apache.cxf.jaxrs.client.Client language(java.lang.String)
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.lang.String r3;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Language", r3);

        return r0;
    }

    public org.apache.cxf.jaxrs.client.Client match(javax.ws.rs.core.EntityTag, boolean)
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.lang.String $r4, $r5;
        javax.ws.rs.core.EntityTag r3;
        org.apache.cxf.jaxrs.client.ClientState $r1;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r3 := @parameter0: javax.ws.rs.core.EntityTag;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r5 = "If-None-Match";

        goto label2;

     label1:
        $r5 = "If-Match";

     label2:
        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        $r4 = virtualinvoke r3.<javax.ws.rs.core.EntityTag: java.lang.String toString()>();

        interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>($r5, $r4);

        return r0;
    }

    public transient org.apache.cxf.jaxrs.client.Client acceptLanguage(java.lang.String[])
    {
        org.apache.cxf.jaxrs.client.AbstractClient r1;
        int i0, i1;
        java.lang.String[] r0;
        java.lang.String r2;

        r1 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r0[i1];

        specialinvoke r1.<org.apache.cxf.jaxrs.client.AbstractClient: void possiblyAddHeader(java.lang.String,java.lang.String)>("Accept-Language", r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public transient org.apache.cxf.jaxrs.client.Client acceptEncoding(java.lang.String[])
    {
        org.apache.cxf.jaxrs.client.AbstractClient r1;
        int i0, i1;
        java.lang.String[] r0;
        java.lang.String r2;

        r1 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r0[i1];

        specialinvoke r1.<org.apache.cxf.jaxrs.client.AbstractClient: void possiblyAddHeader(java.lang.String,java.lang.String)>("Accept-Encoding", r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public org.apache.cxf.jaxrs.client.Client encoding(java.lang.String)
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.lang.String r3;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Encoding", r3);

        return r0;
    }

    public javax.ws.rs.core.MultivaluedMap getHeaders()
    {
        javax.ws.rs.core.MultivaluedMap $r3;
        org.apache.cxf.jaxrs.client.AbstractClient r1;
        org.apache.cxf.jaxrs.impl.MetadataMap $r0;
        org.apache.cxf.jaxrs.client.ClientState $r2;

        r1 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        $r0 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(boolean,boolean)>(0, 1);

        $r2 = r1.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        interfaceinvoke $r0.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>($r3);

        return $r0;
    }

    public java.net.URI getBaseURI()
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.net.URI $r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: java.net.URI getBaseURI()>();

        return $r2;
    }

    public java.net.URI getCurrentURI()
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.lang.Object[] $r3;
        javax.ws.rs.core.UriBuilder $r1, $r2;
        java.net.URI $r4;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        $r2 = virtualinvoke $r1.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder clone()>();

        $r3 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r2.<javax.ws.rs.core.UriBuilder: java.net.URI buildFromEncoded(java.lang.Object[])>($r3);

        return $r4;
    }

    public javax.ws.rs.core.Response getResponse()
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        javax.ws.rs.core.Response $r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.Response getResponse()>();

        return $r2;
    }

    public org.apache.cxf.jaxrs.client.Client reset()
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: void reset()>();

        return r0;
    }

    public void close()
    {
        org.apache.cxf.Bus $r2, $r4;
        org.apache.cxf.transport.Conduit $r10;
        org.apache.cxf.endpoint.ClientLifeCycleManager r6;
        org.apache.cxf.jaxrs.client.ClientState $r17;
        boolean $z0;
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.io.IOException $r16;
        org.apache.cxf.endpoint.ConduitSelector $r8, $r12;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r1, $r3, $r7, $r9, $r11, $r15;
        java.io.Closeable $r13;
        org.apache.cxf.jaxrs.client.FrontendClientAdapter $r14;
        java.lang.Object $r5;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus getBus()>();

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r4 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus getBus()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/ClientLifeCycleManager;");

        r6 = (org.apache.cxf.endpoint.ClientLifeCycleManager) $r5;

        if null == r6 goto label2;

        $r14 = new org.apache.cxf.jaxrs.client.FrontendClientAdapter;

        $r15 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration getConfiguration()>();

        specialinvoke $r14.<org.apache.cxf.jaxrs.client.FrontendClientAdapter: void <init>(org.apache.cxf.jaxrs.client.ClientConfiguration)>($r15);

        interfaceinvoke r6.<org.apache.cxf.endpoint.ClientLifeCycleManager: void clientDestroyed(org.apache.cxf.endpoint.Client)>($r14);

     label2:
        $r7 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r8 = virtualinvoke $r7.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        $z0 = $r8 instanceof java.io.Closeable;

        if $z0 == 0 goto label6;

     label3:
        $r11 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r12 = virtualinvoke $r11.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        $r13 = (java.io.Closeable) $r12;

        interfaceinvoke $r13.<java.io.Closeable: void close()>();

     label4:
        goto label7;

     label5:
        $r16 := @caughtexception;

        goto label7;

     label6:
        $r9 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r10 = virtualinvoke $r9.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.transport.Conduit getConduit()>();

        interfaceinvoke $r10.<org.apache.cxf.transport.Conduit: void close()>();

     label7:
        $r17 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        interfaceinvoke $r17.<org.apache.cxf.jaxrs.client.ClientState: void reset()>();

        r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state> = null;

        r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg> = null;

        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    private void possiblyAddHeader(java.lang.String, java.lang.String)
    {
        javax.ws.rs.core.MultivaluedMap $r4;
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.lang.String r1, r2;
        org.apache.cxf.jaxrs.client.ClientState $r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: boolean isDuplicate(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        interfaceinvoke $r4.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>(r1, r2);

     label1:
        return;
    }

    private boolean isDuplicate(java.lang.String, java.lang.String)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.jaxrs.client.ClientState $r1;
        javax.ws.rs.core.MultivaluedMap $r2;
        java.util.List r5;
        java.lang.Object $r4;
        java.lang.String r3, r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        $r4 = interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.util.List) $r4;

        if r5 == null goto label1;

        $z0 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>(r6);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected org.apache.cxf.jaxrs.client.ClientState getState()
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        return $r1;
    }

    protected javax.ws.rs.core.UriBuilder getCurrentBuilder()
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        javax.ws.rs.core.UriBuilder $r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        return $r2;
    }

    protected void resetResponse()
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: void setResponse(javax.ws.rs.core.Response)>(null);

        return;
    }

    protected void resetBaseAddress(java.net.URI)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.net.URI r1;
        org.apache.cxf.jaxrs.client.ClientState $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: java.net.URI;

        $r2 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        interfaceinvoke $r2.<org.apache.cxf.jaxrs.client.ClientState: void setBaseURI(java.net.URI)>(r1);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: void resetCurrentBuilder(java.net.URI)>(r1);

        return;
    }

    protected void resetCurrentBuilder(java.net.URI)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r1;
        java.net.URI r2;
        org.apache.cxf.jaxrs.client.ClientState $r3;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r2 := @parameter0: java.net.URI;

        $r3 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r1 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>(java.net.URI)>(r2);

        interfaceinvoke $r3.<org.apache.cxf.jaxrs.client.ClientState: void setCurrentBuilder(javax.ws.rs.core.UriBuilder)>($r1);

        return;
    }

    protected javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate, java.util.List)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r7;
        org.apache.cxf.jaxrs.model.URITemplate r1;
        org.apache.cxf.jaxrs.impl.MetadataMap $r3;
        java.util.List r0, $r2;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object $r4, $r5;
        java.lang.String $r6;

        r7 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: org.apache.cxf.jaxrs.model.URITemplate;

        r0 := @parameter1: java.util.List;

        if r0 == null goto label4;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 == 0 goto label4;

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getVariables()>();

        $r3 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r3.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(int)>($i1);

        i4 = 0;

     label1:
        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i4 >= $i2 goto label3;

        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        if i4 >= $i3 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i4);

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i4);

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return $r3;

     label4:
        return null;
    }

    protected javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message, org.apache.cxf.message.Exchange) throws java.lang.Exception
    {
        java.lang.Integer $r3;
        java.util.Map $r9, $r10;
        java.util.Set $r13;
        javax.ws.rs.core.Response$ResponseBuilder $r4, $r48;
        java.lang.String $r7, $r22, r27, $r29, r31, $r32, $r34, $r35, $r37, $r38, $r39, $r40, $r43;
        org.apache.cxf.jaxrs.client.AbstractClient r41;
        java.util.Map$Entry r17;
        org.apache.cxf.message.Exchange r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r20, $r24, $r45;
        javax.ws.rs.core.Response r2, $r47;
        java.lang.String[] $r30, r50, $r51, r52;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8, i9, $i10, $i11;
        java.util.Iterator $r14, $r25;
        org.apache.cxf.message.Message $r5, r6, r11, $r49;
        char $c4, $c7;
        java.lang.Object $r1, $r8, $r12, $r15, $r16, $r18, $r19, $r21, $r23, $r26, $r28, $r33, $r36, $r42, $r44, $r46;
        java.io.InputStream r53;

        r41 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r11 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: org.apache.cxf.message.Exchange;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/core/Response;");

        r2 = (javax.ws.rs.core.Response) $r1;

        if r2 == null goto label01;

        $r47 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response copyResponseIfNeeded(javax.ws.rs.core.Response)>(r2);

        $r48 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response$ResponseBuilder fromResponse(javax.ws.rs.core.Response)>($r47);

        return $r48;

     label01:
        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: java.lang.Integer getResponseCode(org.apache.cxf.message.Exchange)>(r0);

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response$ResponseBuilder toResponseBuilder(int)>($i0);

        $r5 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        if $r5 == null goto label02;

        $r49 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        goto label03;

     label02:
        $r49 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInFaultMessage()>();

     label03:
        r6 = $r49;

        if $r49 != null goto label04;

        return $r4;

     label04:
        $r7 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r8 = interfaceinvoke $r49.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (java.util.Map) $r8;

        $r10 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r9);

        $r12 = interfaceinvoke r11.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.http.header.split");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r12);

        $r13 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z5 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label24;

        $r16 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r16;

        $r18 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        if null != $r18 goto label06;

        goto label05;

     label06:
        $r19 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (java.util.List) $r19;

        $i1 = interfaceinvoke $r20.<java.util.List: int size()>();

        if $i1 <= 0 goto label23;

        $r21 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (java.lang.String) $r21;

        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: boolean isDateRelatedHeader(java.lang.String)>($r22);

        if $z1 == 0 goto label07;

        $r42 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r43 = (java.lang.String) $r42;

        $r44 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r45 = (java.util.List) $r44;

        $r46 = interfaceinvoke $r45.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke $r4.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)>($r43, $r46);

        goto label05;

     label07:
        $r23 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (java.util.List) $r23;

        $r25 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label23;

        $r26 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r27 = (java.lang.String) $r26;

        if $z0 == 0 goto label21;

        if r27 == null goto label09;

        $i3 = virtualinvoke r27.<java.lang.String: int length()>();

        if $i3 != 0 goto label10;

     label09:
        $r30 = newarray (java.lang.String)[1];

        $r30[0] = "";

        r50 = $r30;

        goto label17;

     label10:
        $c4 = virtualinvoke r27.<java.lang.String: char charAt(int)>(0);

        $i10 = (int) $c4;

        if $i10 != 34 goto label11;

        $i5 = virtualinvoke r27.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        $c7 = virtualinvoke r27.<java.lang.String: char charAt(int)>($i6);

        $i11 = (int) $c7;

        if $i11 != 34 goto label11;

        r50 = virtualinvoke r41.<org.apache.cxf.jaxrs.client.AbstractClient: java.lang.String[] parseQuotedHeaderValue(java.lang.String)>(r27);

        goto label17;

     label11:
        $r35 = "Set-Cookie";

        $r36 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r37 = (java.lang.String) $r36;

        $z3 = virtualinvoke $r35.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r37);

        if $z3 == 0 goto label12;

        $r38 = virtualinvoke r27.<java.lang.String: java.lang.String toUpperCase()>();

        $r39 = "Expires";

        $r40 = virtualinvoke $r39.<java.lang.String: java.lang.String toUpperCase()>();

        $z4 = virtualinvoke $r38.<java.lang.String: boolean contains(java.lang.CharSequence)>($r40);

        if $z4 != 0 goto label13;

     label12:
        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        if $z6 == 0 goto label15;

        $r51 = virtualinvoke r27.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        goto label16;

     label15:
        $r51 = newarray (java.lang.String)[1];

        $r51[0] = r27;

     label16:
        r50 = $r51;

     label17:
        r52 = r50;

        $i8 = lengthof r50;

        i9 = 0;

     label18:
        if i9 >= $i8 goto label20;

        r31 = r52[i9];

        $r32 = virtualinvoke r31.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r32.<java.lang.String: int length()>();

        if $i2 <= 0 goto label19;

        $r33 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r34 = (java.lang.String) $r33;

        virtualinvoke $r4.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)>($r34, $r32);

     label19:
        i9 = i9 + 1;

        goto label18;

     label20:
        goto label22;

     label21:
        $r28 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = (java.lang.String) $r28;

        virtualinvoke $r4.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)>($r29, r27);

     label22:
        goto label08;

     label23:
        goto label05;

     label24:
        $r15 = interfaceinvoke r6.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        r53 = (java.io.InputStream) $r15;

        virtualinvoke $r4.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>(r53);

        return $r4;
    }

    protected void writeBody(java.lang.Object, org.apache.cxf.message.Message, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.io.OutputStream)
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory $r9;
        java.lang.'annotation'.Annotation[] r11;
        javax.ws.rs.core.MediaType $r8;
        java.lang.String $r2, $r7;
        java.io.OutputStream r16, r17;
        org.apache.cxf.jaxrs.client.AbstractClient r15;
        org.apache.cxf.message.Message r1;
        java.lang.Exception $r14;
        javax.ws.rs.core.MultivaluedMap r4;
        java.util.List $r12;
        java.lang.reflect.Type r10;
        java.lang.Object r0, $r3, $r6, $r13;
        java.lang.Class r5;

        r15 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.apache.cxf.message.Message;

        r5 := @parameter2: java.lang.Class;

        r10 := @parameter3: java.lang.reflect.Type;

        r11 := @parameter4: java.lang.'annotation'.Annotation[];

        r16 := @parameter5: java.io.OutputStream;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (javax.ws.rs.core.MultivaluedMap) $r3;

        $r6 = interfaceinvoke r4.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Type");

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r8 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>($r7);

        $r9 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        $r12 = virtualinvoke $r9.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List createMessageBodyWriterInterceptor(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>(r5, r10, r11, $r8, r1);

        if $r12 == null goto label5;

     label2:
        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void writeMessageBody(java.util.List,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)>($r12, r0, r5, r10, r11, $r8, r4, r1);

        $r13 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Ljava/io/OutputStream;");

        r17 = (java.io.OutputStream) $r13;

        if r17 == null goto label3;

        virtualinvoke r17.<java.io.OutputStream: void flush()>();

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: void reportMessageHandlerProblem(java.lang.String,java.lang.Class,javax.ws.rs.core.MediaType,java.lang.Throwable,javax.ws.rs.core.Response)>("MSG_WRITER_PROBLEM", r5, $r8, $r14, null);

        goto label6;

     label5:
        staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: void reportMessageHandlerProblem(java.lang.String,java.lang.Class,javax.ws.rs.core.MediaType,java.lang.Throwable,javax.ws.rs.core.Response)>("NO_MSG_WRITER", r5, $r8, null, null);

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected javax.ws.rs.WebApplicationException convertToWebApplicationException(javax.ws.rs.core.Response)
    {
        java.lang.Throwable $r7;
        org.apache.cxf.jaxrs.client.AbstractClient r9;
        java.lang.Object[] $r4;
        java.lang.Class[] $r2;
        java.lang.reflect.Constructor $r3;
        javax.ws.rs.core.Response r0;
        javax.ws.rs.WebApplicationException $r6, $r8;
        java.lang.Class $r1;
        java.lang.Object $r5;

        r9 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: javax.ws.rs.core.Response;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Class getWebApplicationExceptionClass(javax.ws.rs.core.Response,java.lang.Class)>(r0, class "Ljavax/ws/rs/WebApplicationException;");

     label1:
        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljavax/ws/rs/core/Response;";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r0;

        $r5 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        $r6 = (javax.ws.rs.WebApplicationException) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r8.<javax.ws.rs.WebApplicationException: void <init>(javax.ws.rs.core.Response)>(r0);

        return $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected java.lang.Object readBody(javax.ws.rs.core.Response, org.apache.cxf.message.Message, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[])
    {
        javax.ws.rs.core.MediaType $r8;
        boolean $z0, $z1, $z2;
        java.lang.Exception $r24;
        java.util.List $r12;
        javax.ws.rs.core.Response r4;
        java.lang.reflect.Type r10;
        java.lang.Throwable $r22;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r9;
        java.lang.'annotation'.Annotation[] r11;
        int $i0, $i1;
        java.lang.String $r7, $r13;
        org.apache.cxf.jaxrs.client.AbstractClient r16;
        org.apache.cxf.message.Message r1, $r3, r26;
        java.io.IOException $r21, $r23, $r25;
        org.apache.cxf.message.Exchange $r2, $r19;
        javax.ws.rs.core.MultivaluedMap $r14, $r27;
        java.lang.Class r0;
        java.lang.Object $r5, $r15, $r17, $r18, $r20, $r28;
        java.io.InputStream r6;

        r16 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r4 := @parameter0: javax.ws.rs.core.Response;

        r1 := @parameter1: org.apache.cxf.message.Message;

        r0 := @parameter2: java.lang.Class;

        r10 := @parameter3: java.lang.reflect.Type;

        r11 := @parameter4: java.lang.'annotation'.Annotation[];

        if r0 != class "Ljavax/ws/rs/core/Response;" goto label01;

        $r20 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r4);

        return $r20;

     label01:
        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        r26 = $r3;

        $r5 = virtualinvoke r4.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        r6 = (java.io.InputStream) $r5;

        if r6 != null goto label04;

        if $r3 != null goto label02;

        $r19 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        r26 = interfaceinvoke $r19.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInFaultMessage()>();

     label02:
        if r26 == null goto label03;

        $r17 = interfaceinvoke r26.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        if $r17 != null goto label04;

        $r18 = interfaceinvoke r26.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/Reader;");

        if $r18 != null goto label04;

     label03:
        return null;

     label04:
        $i1 = virtualinvoke r4.<javax.ws.rs.core.Response: int getStatus()>();

        if $i1 < 200 goto label05;

        if $i1 == 204 goto label05;

        if $i1 < 300 goto label07;

     label05:
        $r27 = virtualinvoke r4.<javax.ws.rs.core.Response: javax.ws.rs.core.MultivaluedMap getMetadata()>();

        $r28 = interfaceinvoke $r27.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Length");

        if $r28 == null goto label06;

        $r7 = virtualinvoke $r28.<java.lang.Object: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        if $i0 == 0 goto label06;

        if $i1 < 300 goto label07;

     label06:
        return null;

     label07:
        $r8 = staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)>(r4);

        $r9 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        $r12 = virtualinvoke $r9.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List createMessageBodyReaderInterceptor(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>(r0, r10, r11, $r8, r1);

        if $r12 == null goto label26;

     label08:
        $r13 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r14 = virtualinvoke r4.<javax.ws.rs.core.Response: javax.ws.rs.core.MultivaluedMap getMetadata()>();

        interfaceinvoke r26.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

        $r15 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object readFromMessageBodyReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>($r12, r0, r10, r11, r6, $r8, r26);

     label09:
        if r6 == null goto label13;

        $z0 = virtualinvoke r16.<org.apache.cxf.jaxrs.client.AbstractClient: boolean responseStreamCanBeClosed(org.apache.cxf.message.Message,java.lang.Class)>(r1, r0);

        if $z0 == 0 goto label13;

     label10:
        virtualinvoke r6.<java.io.InputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r25 := @caughtexception;

     label13:
        return $r15;

     label14:
        $r24 := @caughtexception;

        staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: void reportMessageHandlerProblem(java.lang.String,java.lang.Class,javax.ws.rs.core.MediaType,java.lang.Throwable,javax.ws.rs.core.Response)>("MSG_READER_PROBLEM", r0, $r8, $r24, r4);

     label15:
        if r6 == null goto label25;

        $z2 = virtualinvoke r16.<org.apache.cxf.jaxrs.client.AbstractClient: boolean responseStreamCanBeClosed(org.apache.cxf.message.Message,java.lang.Class)>(r1, r0);

        if $z2 == 0 goto label25;

     label16:
        virtualinvoke r6.<java.io.InputStream: void close()>();

     label17:
        goto label25;

     label18:
        $r23 := @caughtexception;

        goto label25;

     label19:
        $r22 := @caughtexception;

     label20:
        if r6 == null goto label24;

        $z1 = virtualinvoke r16.<org.apache.cxf.jaxrs.client.AbstractClient: boolean responseStreamCanBeClosed(org.apache.cxf.message.Message,java.lang.Class)>(r1, r0);

        if $z1 == 0 goto label24;

     label21:
        virtualinvoke r6.<java.io.InputStream: void close()>();

     label22:
        goto label24;

     label23:
        $r21 := @caughtexception;

     label24:
        throw $r22;

     label25:
        goto label27;

     label26:
        staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: void reportMessageHandlerProblem(java.lang.String,java.lang.Class,javax.ws.rs.core.MediaType,java.lang.Throwable,javax.ws.rs.core.Response)>("NO_MSG_READER", r0, $r8, null, null);

     label27:
        return null;

        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    protected boolean responseStreamCanBeClosed(org.apache.cxf.message.Message, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r3;
        org.apache.cxf.message.Message r1;
        java.lang.Class r0;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r3 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: java.lang.Class;

        if r0 == class "Ljava/io/InputStream;" goto label1;

        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("response.stream.auto.close");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected void completeExchange(java.lang.Object, org.apache.cxf.message.Exchange, boolean)
    {
        org.apache.cxf.jaxrs.client.ClientState $r9;
        java.lang.Boolean $r1;
        java.lang.String $r6, r8, $r11;
        java.net.URI $r10, $r12, $r13;
        boolean $z0, z1;
        org.apache.cxf.jaxrs.client.AbstractClient r2;
        org.apache.cxf.message.Message $r5;
        org.apache.cxf.endpoint.ConduitSelector $r4;
        org.apache.cxf.message.Exchange r0;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r3;
        java.lang.Object $r7, r14;

        r2 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r14 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.apache.cxf.message.Exchange;

        z1 := @parameter2: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeepConduitAlive", $r1);

        $r3 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration getConfiguration()>();

        $r4 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        interfaceinvoke $r4.<org.apache.cxf.endpoint.ConduitSelector: void complete(org.apache.cxf.message.Exchange)>(r0);

        $r5 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        $r6 = <org.apache.cxf.message.Message: java.lang.String BASE_PATH>;

        $r7 = interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.lang.String) $r7;

        if r8 == null goto label1;

        $r9 = r2.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r10 = interfaceinvoke $r9.<org.apache.cxf.jaxrs.client.ClientState: java.net.URI getBaseURI()>();

        $r11 = virtualinvoke $r10.<java.net.URI: java.lang.String toString()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 != 0 goto label1;

        $r12 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r8);

        $r13 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.AbstractClient: java.net.URI getCurrentURI()>();

        specialinvoke r2.<org.apache.cxf.jaxrs.client.AbstractClient: java.net.URI calculateNewRequestURI(java.net.URI,java.net.URI,boolean)>($r12, $r13, z1);

     label1:
        return;
    }

    protected java.lang.Object[] preProcessResult(org.apache.cxf.message.Message) throws java.lang.Exception
    {
        org.apache.cxf.jaxrs.client.AbstractClient r4;
        java.lang.Object[] $r13;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.endpoint.ConduitSelector $r11;
        org.apache.cxf.message.Exchange $r1, $r5, $r8;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r10;
        java.lang.Exception r3, $r7;
        java.util.List $r12;
        java.lang.Object $r2, $r6, $r9;

        r4 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        r3 = (java.lang.Exception) $r2;

        if r3 == null goto label1;

        $r10 = virtualinvoke r4.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration getConfiguration()>();

        $r11 = virtualinvoke $r10.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        interfaceinvoke $r11.<org.apache.cxf.endpoint.ConduitSelector: void complete(org.apache.cxf.message.Exchange)>($r1);

        virtualinvoke r4.<org.apache.cxf.jaxrs.client.AbstractClient: void checkClientException(org.apache.cxf.message.Message,java.lang.Exception)>(r0, r3);

     label1:
        $r5 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r6 = interfaceinvoke $r5.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljava/lang/Exception;");

        $r7 = (java.lang.Exception) $r6;

        virtualinvoke r4.<org.apache.cxf.jaxrs.client.AbstractClient: void checkClientException(org.apache.cxf.message.Message,java.lang.Exception)>(r0, $r7);

        $r8 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r9 = interfaceinvoke $r8.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljava/util/List;");

        $r12 = (java.util.List) $r9;

        if $r12 == null goto label2;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray()>();

        goto label3;

     label2:
        $r13 = null;

     label3:
        return $r13;
    }

    protected void checkClientException(org.apache.cxf.message.Message, java.lang.Exception) throws java.lang.Exception
    {
        java.lang.Throwable r1, $r13;
        java.lang.Integer $r4;
        org.apache.cxf.interceptor.Fault $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.cxf.jaxrs.client.AbstractClient r6;
        org.apache.cxf.message.Message r2;
        javax.ws.rs.client.ClientException $r9;
        org.apache.cxf.message.Exchange $r3, $r5, $r7, $r10;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r8;
        java.lang.Exception r0;
        java.lang.Object $r11;

        r6 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r2 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: java.lang.Exception;

        $z0 = r0 instanceof org.apache.cxf.interceptor.Fault;

        if $z0 == 0 goto label1;

        $r12 = (org.apache.cxf.interceptor.Fault) r0;

        $r13 = virtualinvoke $r12.<org.apache.cxf.interceptor.Fault: java.lang.Throwable getCause()>();

        goto label2;

     label1:
        $r13 = r0;

     label2:
        r1 = $r13;

        $r3 = interfaceinvoke r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r4 = staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: java.lang.Integer getResponseCode(org.apache.cxf.message.Exchange)>($r3);

        if $r4 == null goto label3;

        $z4 = $r13 instanceof java.io.IOException;

        if $z4 == 0 goto label7;

        $r10 = interfaceinvoke r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r11 = interfaceinvoke $r10.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("client.redirect.exception");

        if $r11 == null goto label7;

     label3:
        $z1 = r1 instanceof javax.ws.rs.client.ClientException;

        if $z1 == 0 goto label4;

        throw r0;

     label4:
        if r1 == null goto label5;

        $r9 = new javax.ws.rs.client.ClientException;

        specialinvoke $r9.<javax.ws.rs.client.ClientException: void <init>(java.lang.Throwable)>(r1);

        throw $r9;

     label5:
        $r5 = interfaceinvoke r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $z2 = interfaceinvoke $r5.<org.apache.cxf.message.Exchange: boolean isOneWay()>();

        if $z2 == 0 goto label6;

        $r8 = r6.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $z3 = virtualinvoke $r8.<org.apache.cxf.jaxrs.client.ClientConfiguration: boolean isResponseExpectedForOneway()>();

        if $z3 == 0 goto label7;

     label6:
        $r7 = interfaceinvoke r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        virtualinvoke r6.<org.apache.cxf.jaxrs.client.AbstractClient: void waitForResponseCode(org.apache.cxf.message.Exchange)>($r7);

     label7:
        return;
    }

    protected void waitForResponseCode(org.apache.cxf.message.Exchange)
    {
        java.lang.Throwable $r6;
        org.apache.cxf.jaxrs.client.AbstractClient r2;
        long $l0;
        javax.ws.rs.client.ClientException $r5;
        org.apache.cxf.message.Exchange r0;
        java.lang.Integer $r1, $r4;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r3;
        java.lang.InterruptedException $r7;

        r2 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        entermonitor r0;

     label01:
        $r1 = staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: java.lang.Integer getResponseCode(org.apache.cxf.message.Exchange)>(r0);

        if $r1 != null goto label05;

     label02:
        $r3 = r2.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $l0 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.ClientConfiguration: long getSynchronousTimeout()>();

        virtualinvoke r0.<java.lang.Object: void wait(long)>($l0);

     label03:
        goto label07;

     label04:
        $r7 := @caughtexception;

        goto label07;

     label05:
        exitmonitor r0;

     label06:
        return;

     label07:
        exitmonitor r0;

     label08:
        goto label11;

     label09:
        $r6 := @caughtexception;

        exitmonitor r0;

     label10:
        throw $r6;

     label11:
        $r4 = staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: java.lang.Integer getResponseCode(org.apache.cxf.message.Exchange)>(r0);

        if $r4 != null goto label12;

        $r5 = new javax.ws.rs.client.ClientException;

        specialinvoke $r5.<javax.ws.rs.client.ClientException: void <init>(java.lang.String)>("Response timeout");

        throw $r5;

     label12:
        return;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static java.lang.Integer getResponseCode(org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.message.Message $r3, $r4;
        org.apache.cxf.message.Exchange r0;
        java.lang.Integer r7;
        java.lang.Object $r2, $r6;
        java.lang.String $r1, $r5;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        $r1 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>($r1);

        r7 = (java.lang.Integer) $r2;

        if r7 != null goto label1;

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r5 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $r6 = interfaceinvoke $r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (java.lang.Integer) $r6;

     label1:
        return r7;
    }

    protected java.net.URI calculateNewRequestURI(java.util.Map)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r8;
        java.util.Map r0;
        java.lang.Object $r2, $r5, $r9;
        java.lang.String $r1, $r3, $r6;
        java.net.URI $r4, $r7, $r10;
        boolean $z0;

        r8 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: java.util.Map;

        $r1 = <org.apache.cxf.message.Message: java.lang.String ENDPOINT_ADDRESS>;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r3);

        $r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.uri");

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r6);

        $r9 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("jaxrs.proxy");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r9);

        $r10 = specialinvoke r8.<org.apache.cxf.jaxrs.client.AbstractClient: java.net.URI calculateNewRequestURI(java.net.URI,java.net.URI,boolean)>($r4, $r7, $z0);

        return $r10;
    }

    private java.net.URI calculateNewRequestURI(java.net.URI, java.net.URI, boolean)
    {
        java.lang.Object[] $r10;
        int $i0;
        javax.ws.rs.core.UriBuilder $r5, $r9;
        java.net.URI r0, r2, $r7, $r11, $r14;
        java.lang.String $r1, $r3, $r8, $r12, $r13;
        boolean $z0, $z1, z2;
        org.apache.cxf.jaxrs.client.AbstractClient r6;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r4;

        r6 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: java.net.URI;

        r2 := @parameter1: java.net.URI;

        z2 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<java.net.URI: java.lang.String getRawPath()>();

        $r3 = virtualinvoke r2.<java.net.URI: java.lang.String getRawPath()>();

        $r4 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        specialinvoke $r4.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>()>();

        $r5 = virtualinvoke $r4.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder uri(java.net.URI)>(r0);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r12 = $r1;

        goto label2;

     label1:
        $r7 = virtualinvoke r6.<org.apache.cxf.jaxrs.client.AbstractClient: java.net.URI getBaseURI()>();

        $r12 = virtualinvoke $r7.<java.net.URI: java.lang.String getRawPath()>();

     label2:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label3;

        $r13 = "";

        goto label4;

     label3:
        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        $r13 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

     label4:
        virtualinvoke $r5.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder path(java.lang.String)>($r13);

        $r8 = virtualinvoke r2.<java.net.URI: java.lang.String getRawQuery()>();

        $r9 = virtualinvoke $r5.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder replaceQuery(java.lang.String)>($r8);

        $r10 = newarray (java.lang.Object)[0];

        $r11 = virtualinvoke $r9.<javax.ws.rs.core.UriBuilder: java.net.URI build(java.lang.Object[])>($r10);

        virtualinvoke r6.<org.apache.cxf.jaxrs.client.AbstractClient: void resetBaseAddress(java.net.URI)>(r0);

        if z2 == 0 goto label5;

        $r14 = r0;

        goto label6;

     label5:
        $r14 = $r11;

     label6:
        virtualinvoke r6.<org.apache.cxf.jaxrs.client.AbstractClient: void resetCurrentBuilder(java.net.URI)>($r14);

        return $r11;
    }

    protected void doRunInterceptorChain(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r3;
        org.apache.cxf.interceptor.InterceptorChain $r1;
        org.apache.cxf.message.Message r0;
        java.lang.Exception $r2;

        r3 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: org.apache.cxf.message.Message;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        interfaceinvoke $r1.<org.apache.cxf.interceptor.InterceptorChain: boolean doIntercept(org.apache.cxf.message.Message)>(r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Exception;", $r2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo, java.lang.Object[], java.util.Map, org.apache.cxf.message.Exchange) throws java.lang.Exception
    {
        java.lang.Throwable $r14;
        java.lang.Object[] r0, $r12;
        org.apache.cxf.service.model.BindingOperationInfo r15;
        java.util.Map r1, $r3, $r4;
        int $i0;
        java.lang.String $r5;
        java.net.URI $r8;
        boolean $z0;
        org.apache.cxf.jaxrs.client.AbstractClient r7;
        org.apache.cxf.message.Exchange r9;
        java.lang.Exception $r17;
        javax.ws.rs.core.MultivaluedMap $r13;
        java.util.List $r11;
        java.lang.Object $r2, $r6, $r10, $r16;

        r7 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r15 := @parameter0: org.apache.cxf.service.model.BindingOperationInfo;

        r0 := @parameter1: java.lang.Object[];

        r1 := @parameter2: java.util.Map;

        r9 := @parameter3: org.apache.cxf.message.Exchange;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r16 = null;

        goto label3;

     label2:
        $r16 = r0[0];

     label3:
        $r2 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("RequestContext");

        $r3 = (java.util.Map) $r2;

        $r4 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r3);

        $r5 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r13 = (javax.ws.rs.core.MultivaluedMap) $r6;

        $r8 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.AbstractClient: java.net.URI calculateNewRequestURI(java.util.Map)>($r4);

        $r10 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.AbstractClient: java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)>($r8, $r13, $r16, r9, r1);

        $r11 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.AbstractClient: java.util.List getContentsList(java.lang.Object)>($r10);

        interfaceinvoke r9.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Ljava/util/List;", $r11);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r10;

     label4:
        return $r12;

     label5:
        $r14 := @caughtexception;

        $z0 = $r14 instanceof java.lang.Exception;

        if $z0 == 0 goto label6;

        $r17 = (java.lang.Exception) $r14;

        goto label7;

     label6:
        $r17 = new java.lang.Exception;

        specialinvoke $r17.<java.lang.Exception: void <init>(java.lang.Throwable)>($r14);

     label7:
        interfaceinvoke r9.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Exception;", $r17);

        return null;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    protected abstract java.lang.Object retryInvoke(java.net.URI, javax.ws.rs.core.MultivaluedMap, java.lang.Object, org.apache.cxf.message.Exchange, java.util.Map) throws java.lang.Throwable;

    protected transient void addMatrixQueryParamsToBuilder(javax.ws.rs.core.UriBuilder, java.lang.String, org.apache.cxf.jaxrs.model.ParameterType, java.lang.Object[])
    {
        org.apache.cxf.jaxrs.model.ParameterType r0, $r1, $r23;
        javax.ws.rs.core.UriBuilder r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Collection $r26;
        java.util.Set $r6;
        java.util.List $r10;
        java.lang.Object[] r4, $r21, $r22;
        int $i0, i1, i2;
        java.lang.String r2, $r3, $r16;
        org.apache.cxf.jaxrs.client.AbstractClient r13;
        java.util.Map$Entry r28;
        java.util.Iterator $r7, $r11, $r19;
        java.lang.IllegalArgumentException $r24;
        javax.ws.rs.core.MultivaluedMap $r5;
        java.lang.Object $r8, $r9, $r12, $r15, $r20, r25, r27;
        java.lang.Class $r17, $r18;

        r13 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r14 := @parameter0: javax.ws.rs.core.UriBuilder;

        r2 := @parameter1: java.lang.String;

        r0 := @parameter2: org.apache.cxf.jaxrs.model.ParameterType;

        r4 := @parameter3: java.lang.Object[];

        $r1 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType MATRIX>;

        if r0 == $r1 goto label01;

        $r23 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType QUERY>;

        if r0 == $r23 goto label01;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("This method currently deal with matrix and query parameters only");

        throw $r24;

     label01:
        $r3 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label11;

        if r4 == null goto label10;

        $i0 = lengthof r4;

        if $i0 <= 0 goto label10;

        i1 = lengthof r4;

        i2 = 0;

     label02:
        if i2 >= i1 goto label09;

        r25 = r4[i2];

        $r17 = virtualinvoke r25.<java.lang.Object: java.lang.Class getClass()>();

        $z3 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isSupportedCollectionOrArray(java.lang.Class)>($r17);

        if $z3 == 0 goto label07;

        $r18 = virtualinvoke r25.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = virtualinvoke $r18.<java.lang.Class: boolean isArray()>();

        if $z4 == 0 goto label03;

        $r21 = (java.lang.Object[]) r25;

        $r22 = (java.lang.Object[]) $r21;

        $r26 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r22);

        goto label04;

     label03:
        $r26 = (java.util.Collection) r25;

     label04:
        $r19 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z5 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label06;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        specialinvoke r13.<org.apache.cxf.jaxrs.client.AbstractClient: void convertMatrixOrQueryToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)>(r14, r2, $r20, r0);

        goto label05;

     label06:
        goto label08;

     label07:
        specialinvoke r13.<org.apache.cxf.jaxrs.client.AbstractClient: void convertMatrixOrQueryToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)>(r14, r2, r25, r0);

     label08:
        i2 = i2 + 1;

        goto label02;

     label09:
        goto label15;

     label10:
        specialinvoke r13.<org.apache.cxf.jaxrs.client.AbstractClient: void addMatrixOrQueryToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,org.apache.cxf.jaxrs.model.ParameterType,java.lang.Object[])>(r14, r2, r0, r4);

        goto label15;

     label11:
        r27 = r4[0];

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: javax.ws.rs.core.MultivaluedMap extractValuesFromBean(java.lang.Object,java.lang.String)>(r27, "");

        $r6 = interfaceinvoke $r5.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label15;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.util.List) $r9;

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r15 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r15;

        specialinvoke r13.<org.apache.cxf.jaxrs.client.AbstractClient: void convertMatrixOrQueryToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)>(r14, $r16, $r12, r0);

        goto label13;

     label14:
        goto label12;

     label15:
        return;
    }

    private void convertMatrixOrQueryToBuilder(javax.ws.rs.core.UriBuilder, java.lang.String, java.lang.Object, org.apache.cxf.jaxrs.model.ParameterType)
    {
        org.apache.cxf.jaxrs.model.ParameterType r5;
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        java.lang.Object[] $r6;
        java.lang.Object r1;
        javax.ws.rs.core.UriBuilder r3;
        java.lang.String $r2, r4;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r3 := @parameter0: javax.ws.rs.core.UriBuilder;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object;

        r5 := @parameter3: org.apache.cxf.jaxrs.model.ParameterType;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: java.lang.String convertParamValue(java.lang.Object)>(r1);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r2;

        specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: void addMatrixOrQueryToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,org.apache.cxf.jaxrs.model.ParameterType,java.lang.Object[])>(r3, r4, r5, $r6);

        return;
    }

    private transient void addMatrixOrQueryToBuilder(javax.ws.rs.core.UriBuilder, java.lang.String, org.apache.cxf.jaxrs.model.ParameterType, java.lang.Object[])
    {
        org.apache.cxf.jaxrs.model.ParameterType r0, $r1;
        org.apache.cxf.jaxrs.client.AbstractClient r5;
        java.lang.Object[] r4;
        javax.ws.rs.core.UriBuilder r2;
        java.lang.String r3;

        r5 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r2 := @parameter0: javax.ws.rs.core.UriBuilder;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: org.apache.cxf.jaxrs.model.ParameterType;

        r4 := @parameter3: java.lang.Object[];

        $r1 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType MATRIX>;

        if r0 != $r1 goto label1;

        virtualinvoke r2.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder matrixParam(java.lang.String,java.lang.Object[])>(r3, r4);

        goto label2;

     label1:
        virtualinvoke r2.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder queryParam(java.lang.String,java.lang.Object[])>(r3, r4);

     label2:
        return;
    }

    protected java.lang.String convertParamValue(java.lang.Object)
    {
        org.apache.cxf.Bus $r5;
        org.apache.cxf.jaxrs.client.AbstractClient r3;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r6;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r4;
        javax.ws.rs.ext.ParamConverter $r8;
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String $r2, $r7, $r9;
        boolean $z0;

        r3 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "Ljava/lang/String;" goto label2;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label3;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r2;

     label3:
        $r4 = r3.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r5 = virtualinvoke $r4.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus getBus()>();

        $r6 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.Bus)>($r5);

        if $r6 == null goto label4;

        $r8 = virtualinvoke $r6.<org.apache.cxf.jaxrs.provider.ProviderFactory: javax.ws.rs.ext.ParamConverter createParameterHandler(java.lang.Class)>($r1);

        if $r8 == null goto label4;

        $r9 = interfaceinvoke $r8.<javax.ws.rs.ext.ParamConverter: java.lang.String toString(java.lang.Object)>(r0);

        return $r9;

     label4:
        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r7;
    }

    protected static void reportMessageHandlerProblem(java.lang.String, java.lang.Class, javax.ws.rs.core.MediaType, java.lang.Throwable, javax.ws.rs.core.Response)
    {
        java.lang.Throwable r12;
        java.lang.Object[] $r2;
        java.lang.String[] $r5;
        org.apache.cxf.common.i18n.Message $r0;
        java.util.logging.Logger $r8;
        javax.ws.rs.client.ClientException $r10;
        javax.ws.rs.core.MediaType r4;
        java.util.ResourceBundle $r6;
        javax.ws.rs.core.Response r13;
        java.lang.Class r3;
        java.lang.String r1, $r7, $r9, $r11;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        r4 := @parameter2: javax.ws.rs.core.MediaType;

        r12 := @parameter3: java.lang.Throwable;

        r13 := @parameter4: javax.ws.rs.core.Response;

        $r0 = new org.apache.cxf.common.i18n.Message;

        $r6 = <org.apache.cxf.jaxrs.client.AbstractClient: java.util.ResourceBundle BUNDLE>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r3;

        $r5 = newarray (java.lang.String)[0];

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>(r4, $r5);

        $r2[1] = $r7;

        specialinvoke $r0.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>(r1, $r6, $r2);

        $r8 = <org.apache.cxf.jaxrs.client.AbstractClient: java.util.logging.Logger LOG>;

        $r9 = virtualinvoke $r0.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void severe(java.lang.String)>($r9);

        $r10 = new javax.ws.rs.client.ClientException;

        $r11 = virtualinvoke $r0.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        specialinvoke $r10.<javax.ws.rs.client.ClientException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r12);

        throw $r10;
    }

    private static javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        javax.ws.rs.core.MediaType $r2, $r5;
        javax.ws.rs.core.Response r0;
        java.lang.Object $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @parameter0: javax.ws.rs.core.Response;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.Response: javax.ws.rs.core.MultivaluedMap getMetadata()>();

        $z0 = interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: boolean containsKey(java.lang.Object)>("Content-Type");

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Type");

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>($r4);

        return $r5;

     label1:
        $r2 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE>;

        return $r2;
    }

    protected static void setAllHeaders(javax.ws.rs.core.MultivaluedMap, java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection r8;
        int $i0, $i1, $i2, i3;
        java.lang.String $r10, $r11, r15;
        boolean $z0;
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        javax.ws.rs.core.MultivaluedMap r0;
        java.util.List $r7, $r13, $r17;
        java.lang.Object $r3, $r6, $r9, $r12, $r14, $r16;
        java.lang.StringBuilder $r5;

        r0 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r8 := @parameter1: java.net.HttpURLConnection;

        $r1 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        i3 = 0;

     label2:
        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.util.List) $r6;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i3 >= $i0 goto label4;

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.util.List) $r12;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i3);

        r15 = (java.lang.String) $r14;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $i1 = i3 + 1;

        $r16 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.util.List) $r16;

        $i2 = interfaceinvoke $r17.<java.util.List: int size()>();

        if $i1 >= $i2 goto label3;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r10, $r11);

        goto label1;

     label5:
        return;
    }

    protected java.lang.String[] parseQuotedHeaderValue(java.lang.String)
    {
        java.lang.Object[] $r5;
        java.lang.String[] $r4, $r6;
        java.util.ArrayList $r13;
        int $i0, i1, $i2, i3, $i6;
        java.lang.String r1, $r7, $r8, $r10;
        boolean z0, $z1;
        org.apache.cxf.jaxrs.client.AbstractClient r11;
        char c4, c5;
        char[] $r2;
        java.lang.StringBuilder r12, $r14, $r15;

        r11 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: java.lang.String;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof $r2;

        i1 = $i0 - 1;

        z0 = 0;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        r12 = $r14;

        i3 = 0;

     label01:
        if i3 > i1 goto label13;

        c4 = $r2[i3];

        if i3 != i1 goto label02;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        $r10 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label12;

     label02:
        $i6 = (int) c4;

        lookupswitch($i6)
        {
            case 34: goto label03;
            case 44: goto label09;
            case 92: goto label06;
            default: goto label11;
        };

     label03:
        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        if z0 != 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        z0 = $z1;

        goto label12;

     label06:
        if z0 == 0 goto label08;

        i3 = i3 + 1;

        if i3 > i1 goto label07;

        c5 = $r2[i3];

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);

     label07:
        if i3 != i1 goto label12;

        $r7 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label12;

     label08:
        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        goto label12;

     label09:
        if z0 == 0 goto label10;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        goto label12;

     label10:
        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        r12 = $r15;

        goto label12;

     label11:
        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

     label12:
        i3 = i3 + 1;

        goto label01;

     label13:
        $i2 = interfaceinvoke $r13.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i2];

        $r5 = interfaceinvoke $r13.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        return $r6;
    }

    protected org.apache.cxf.jaxrs.client.ClientConfiguration getConfiguration()
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        return $r1;
    }

    protected void setConfiguration(org.apache.cxf.jaxrs.client.ClientConfiguration)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.jaxrs.client.ClientConfiguration r1;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: org.apache.cxf.jaxrs.client.ClientConfiguration;

        r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg> = r1;

        return;
    }

    protected void prepareConduitSelector(org.apache.cxf.message.Message, java.net.URI, boolean)
    {
        org.apache.cxf.service.Service $r10;
        org.apache.cxf.interceptor.Fault $r19;
        java.lang.String $r11, $r13, $r16, $r17, $r18, $r21, $r23, $r25;
        java.net.URI $r14, $r15, r22, $r24;
        boolean $z0, $z1, z2;
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.endpoint.ConduitSelector $r5, $r8;
        java.util.logging.Logger $r20;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r2, $r4, $r7;
        org.apache.cxf.message.Exchange $r3, $r6;
        org.apache.cxf.endpoint.Endpoint $r9;
        java.lang.Object $r12;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r22 := @parameter1: java.net.URI;

        z2 := @parameter2: boolean;

     label1:
        $r2 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.ClientConfiguration: void prepareConduitSelector(org.apache.cxf.message.Message)>(r1);

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        $r20 = <org.apache.cxf.jaxrs.client.AbstractClient: java.util.logging.Logger LOG>;

        virtualinvoke $r20.<java.util.logging.Logger: void warning(java.lang.String)>("Failure to prepare a message from conduit selector");

     label4:
        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r4 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r5 = virtualinvoke $r4.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        interfaceinvoke $r3.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/endpoint/ConduitSelector;", $r5);

        $r6 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r7 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r8 = virtualinvoke $r7.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        $r9 = interfaceinvoke $r8.<org.apache.cxf.endpoint.ConduitSelector: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r10 = interfaceinvoke $r9.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.Service getService()>();

        interfaceinvoke $r6.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/Service;", $r10);

        $r11 = <org.apache.cxf.message.Message: java.lang.String ENDPOINT_ADDRESS>;

        $r12 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r11);

        $r21 = (java.lang.String) $r12;

        $z0 = virtualinvoke $r21.<java.lang.String: boolean startsWith(java.lang.String)>("http");

        if $z0 == 0 goto label5;

        $r13 = virtualinvoke r22.<java.net.URI: java.lang.String toString()>();

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label5;

        $r14 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r21);

        $r15 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: java.net.URI calculateNewRequestURI(java.net.URI,java.net.URI,boolean)>($r14, r22, z2);

        $r16 = <org.apache.cxf.message.Message: java.lang.String ENDPOINT_ADDRESS>;

        $r17 = virtualinvoke $r15.<java.net.URI: java.lang.String toString()>();

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

        $r18 = virtualinvoke $r15.<java.net.URI: java.lang.String toString()>();

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.request.uri", $r18);

     label5:
        $r23 = <org.apache.cxf.message.Message: java.lang.String BASE_PATH>;

        $r24 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: java.net.URI getBaseURI()>();

        $r25 = virtualinvoke $r24.<java.net.URI: java.lang.String toString()>();

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r25);

        return;

        catch org.apache.cxf.interceptor.Fault from label1 to label2 with label3;
    }

    protected static org.apache.cxf.phase.PhaseInterceptorChain setupOutInterceptorChain(org.apache.cxf.jaxrs.client.ClientConfiguration)
    {
        org.apache.cxf.Bus $r1, $r4;
        org.apache.cxf.jaxrs.client.spec.ClientRequestFilterInterceptor $r13;
        java.util.SortedSet $r11;
        org.apache.cxf.endpoint.ConduitSelector $r7;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;
        org.apache.cxf.phase.PhaseManager r3;
        java.util.List $r5, $r6, $r9;
        org.apache.cxf.endpoint.Endpoint $r8;
        org.apache.cxf.phase.PhaseChainCache $r10;
        org.apache.cxf.phase.PhaseInterceptorChain $r12;
        java.lang.Object $r2;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus getBus()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/phase/PhaseManager;");

        r3 = (org.apache.cxf.phase.PhaseManager) $r2;

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus getBus()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.Bus: java.util.List getOutInterceptors()>();

        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List getOutInterceptors()>();

        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        $r8 = interfaceinvoke $r7.<org.apache.cxf.endpoint.ConduitSelector: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r9 = interfaceinvoke $r8.<org.apache.cxf.endpoint.Endpoint: java.util.List getOutInterceptors()>();

        $r10 = new org.apache.cxf.phase.PhaseChainCache;

        specialinvoke $r10.<org.apache.cxf.phase.PhaseChainCache: void <init>()>();

        $r11 = interfaceinvoke r3.<org.apache.cxf.phase.PhaseManager: java.util.SortedSet getOutPhases()>();

        $r12 = virtualinvoke $r10.<org.apache.cxf.phase.PhaseChainCache: org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)>($r11, $r5, $r6, $r9);

        $r13 = new org.apache.cxf.jaxrs.client.spec.ClientRequestFilterInterceptor;

        specialinvoke $r13.<org.apache.cxf.jaxrs.client.spec.ClientRequestFilterInterceptor: void <init>()>();

        virtualinvoke $r12.<org.apache.cxf.phase.PhaseInterceptorChain: void add(org.apache.cxf.interceptor.Interceptor)>($r13);

        return $r12;
    }

    protected static org.apache.cxf.phase.PhaseInterceptorChain setupInInterceptorChain(org.apache.cxf.jaxrs.client.ClientConfiguration)
    {
        org.apache.cxf.Bus $r1, $r4;
        java.util.SortedSet $r11;
        org.apache.cxf.endpoint.ConduitSelector $r7;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;
        org.apache.cxf.phase.PhaseManager r3;
        java.util.List $r5, $r6, $r9;
        org.apache.cxf.endpoint.Endpoint $r8;
        org.apache.cxf.phase.PhaseChainCache $r10;
        org.apache.cxf.phase.PhaseInterceptorChain $r12;
        java.lang.Object $r2;
        org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor $r13;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus getBus()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/phase/PhaseManager;");

        r3 = (org.apache.cxf.phase.PhaseManager) $r2;

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus getBus()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.Bus: java.util.List getInInterceptors()>();

        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List getInInterceptors()>();

        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        $r8 = interfaceinvoke $r7.<org.apache.cxf.endpoint.ConduitSelector: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r9 = interfaceinvoke $r8.<org.apache.cxf.endpoint.Endpoint: java.util.List getInInterceptors()>();

        $r10 = new org.apache.cxf.phase.PhaseChainCache;

        specialinvoke $r10.<org.apache.cxf.phase.PhaseChainCache: void <init>()>();

        $r11 = interfaceinvoke r3.<org.apache.cxf.phase.PhaseManager: java.util.SortedSet getInPhases()>();

        $r12 = virtualinvoke $r10.<org.apache.cxf.phase.PhaseChainCache: org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)>($r11, $r5, $r6, $r9);

        $r13 = new org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor;

        specialinvoke $r13.<org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor: void <init>()>();

        virtualinvoke $r12.<org.apache.cxf.phase.PhaseInterceptorChain: void add(org.apache.cxf.interceptor.Interceptor)>($r13);

        return $r12;
    }

    protected static org.apache.cxf.transport.MessageObserver setupInFaultObserver(org.apache.cxf.jaxrs.client.ClientConfiguration)
    {
        org.apache.cxf.Bus $r3;
        java.util.List $r1;
        org.apache.cxf.jaxrs.client.AbstractClient$1 $r2;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;
        boolean $z0;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List getInFaultInterceptors()>();

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = new org.apache.cxf.jaxrs.client.AbstractClient$1;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus getBus()>();

        specialinvoke $r2.<org.apache.cxf.jaxrs.client.AbstractClient$1: void <init>(org.apache.cxf.Bus,org.apache.cxf.jaxrs.client.ClientConfiguration)>($r3, r0);

        return $r2;

     label1:
        return null;
    }

    protected org.apache.cxf.message.Message createMessage(java.lang.Object, java.lang.String, javax.ws.rs.core.MultivaluedMap, java.net.URI, org.apache.cxf.message.Exchange, java.util.Map, boolean)
    {
        java.util.Map r30, $r38;
        java.net.URI r11, $r14;
        boolean $z0, $z1, z2, $z3;
        org.apache.cxf.endpoint.ConduitSelector $r2;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r1, $r22, $r24, $r37;
        java.util.List $r19;
        org.apache.cxf.transport.MessageObserver $r25;
        org.apache.cxf.binding.Binding $r4;
        org.apache.cxf.jaxrs.client.ClientState $r12, $r20;
        java.lang.Boolean $r6, $r7, $r27;
        java.lang.String r8, $r10, $r13, $r15, $r16, $r28, $r31, $r32, $r33, $r34;
        org.apache.cxf.jaxrs.client.AbstractClient r0;
        org.apache.cxf.message.Message $r5;
        org.apache.cxf.message.Exchange $r26, r36;
        javax.ws.rs.core.MultivaluedMap r9, $r21;
        org.apache.cxf.endpoint.Endpoint $r3;
        org.apache.cxf.phase.PhaseInterceptorChain $r23;
        java.lang.Object $r17, $r18, $r29, r35, $r39;

        r0 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r35 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: javax.ws.rs.core.MultivaluedMap;

        r11 := @parameter3: java.net.URI;

        r36 := @parameter4: org.apache.cxf.message.Exchange;

        r30 := @parameter5: java.util.Map;

        z2 := @parameter6: boolean;

        $r1 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.endpoint.ConduitSelector: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r4 = interfaceinvoke $r3.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.binding.Binding getBinding()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.binding.Binding: org.apache.cxf.message.Message createMessage()>();

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.client", $r6);

        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.message.inbound", $r7);

        interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.request.method", r8);

        $r10 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r9);

        $z0 = virtualinvoke r11.<java.net.URI: boolean isAbsolute()>();

        if $z0 == 0 goto label1;

        $r32 = virtualinvoke r11.<java.net.URI: java.lang.String getScheme()>();

        $z3 = virtualinvoke $r32.<java.lang.String: boolean startsWith(java.lang.String)>("http");

        if $z3 == 0 goto label1;

        $r33 = <org.apache.cxf.message.Message: java.lang.String ENDPOINT_ADDRESS>;

        $r34 = virtualinvoke r11.<java.net.URI: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34);

        goto label2;

     label1:
        $r13 = <org.apache.cxf.message.Message: java.lang.String ENDPOINT_ADDRESS>;

        $r12 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState state>;

        $r14 = interfaceinvoke $r12.<org.apache.cxf.jaxrs.client.ClientState: java.net.URI getBaseURI()>();

        $r15 = virtualinvoke $r14.<java.net.URI: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r15);

     label2:
        $r37 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r38 = virtualinvoke $r37.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.Map getRequestContext()>();

        $r39 = interfaceinvoke $r38.<java.util.Map: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.uri");

        if $r39 != null goto label3;

        $r31 = virtualinvoke r11.<java.net.URI: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.request.uri", $r31);

        goto label4;

     label3:
        $r16 = virtualinvoke $r39.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.request.uri", $r16);

     label4:
        $r17 = interfaceinvoke r9.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Type");

        interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", $r17);

        $r18 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: java.lang.Object checkIfBodyEmpty(java.lang.Object)>(r35);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: void setEmptyRequestPropertyIfNeeded(org.apache.cxf.message.Message,java.lang.Object)>($r5, $r18);

        $r19 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: java.util.List getContentsList(java.lang.Object)>($r18);

        interfaceinvoke $r5.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/util/List;", $r19);

        $r20 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r21 = interfaceinvoke $r20.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getTemplates()>();

        interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("jaxrs.template.parameters", $r21);

        $r22 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r23 = staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.phase.PhaseInterceptorChain setupOutInterceptorChain(org.apache.cxf.jaxrs.client.ClientConfiguration)>($r22);

        $r24 = r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r25 = staticinvoke <org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.transport.MessageObserver setupInFaultObserver(org.apache.cxf.jaxrs.client.ClientConfiguration)>($r24);

        virtualinvoke $r23.<org.apache.cxf.phase.PhaseInterceptorChain: void setFaultObserver(org.apache.cxf.transport.MessageObserver)>($r25);

        interfaceinvoke $r5.<org.apache.cxf.message.Message: void setInterceptorChain(org.apache.cxf.interceptor.InterceptorChain)>($r23);

        $r26 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.message.Exchange createExchange(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)>($r5, r36);

        $r27 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r26.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.rest.message", $r27);

        $r28 = "true";

        $r29 = interfaceinvoke r9.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("OnewayRequest");

        $z1 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        interfaceinvoke $r26.<org.apache.cxf.message.Exchange: void setOneWay(boolean)>($z1);

        interfaceinvoke $r26.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/endpoint/Retryable;", r0);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)>($r5, $r26, r30, z2);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: void prepareConduitSelector(org.apache.cxf.message.Message,java.net.URI,boolean)>($r5, r11, z2);

        return $r5;
    }

    protected java.util.Map getRequestContext(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r7;
        org.apache.cxf.message.Message r0;
        java.util.Map $r2, $r3, $r5, $r6;
        java.lang.Object $r1, $r4;

        r7 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.invocation.context");

        $r2 = (java.util.Map) $r1;

        $r3 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("RequestContext");

        $r5 = (java.util.Map) $r4;

        $r6 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r5);

        return $r6;
    }

    protected java.util.List getContentsList(java.lang.Object)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r2;
        java.lang.Object[] $r1;
        org.apache.cxf.message.MessageContentsList $r3;
        java.lang.Object r0;

        r2 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r3 = new org.apache.cxf.message.MessageContentsList;

        specialinvoke $r3.<org.apache.cxf.message.MessageContentsList: void <init>()>();

        goto label2;

     label1:
        $r3 = new org.apache.cxf.message.MessageContentsList;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        specialinvoke $r3.<org.apache.cxf.message.MessageContentsList: void <init>(java.lang.Object[])>($r1);

     label2:
        return $r3;
    }

    protected org.apache.cxf.message.Exchange createExchange(org.apache.cxf.message.Message, org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.Bus $r3;
        org.apache.cxf.jaxrs.client.ClientMessageObserver $r4;
        org.apache.cxf.jaxrs.client.AbstractClient r1;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.message.ExchangeImpl $r12;
        org.apache.cxf.endpoint.ConduitSelector $r7;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r2, $r5, $r6;
        org.apache.cxf.message.Exchange r13;
        org.apache.cxf.endpoint.Endpoint $r8;
        java.lang.Boolean $r9, $r10;
        java.lang.String $r11;

        r1 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r13 := @parameter1: org.apache.cxf.message.Exchange;

        if r13 != null goto label1;

        $r12 = new org.apache.cxf.message.ExchangeImpl;

        specialinvoke $r12.<org.apache.cxf.message.ExchangeImpl: void <init>()>();

        r13 = $r12;

     label1:
        interfaceinvoke r13.<org.apache.cxf.message.Exchange: void setSynchronous(boolean)>(1);

        interfaceinvoke r13.<org.apache.cxf.message.Exchange: void setOutMessage(org.apache.cxf.message.Message)>(r0);

        $r2 = r1.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r3 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus getBus()>();

        interfaceinvoke r13.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/Bus;", $r3);

        $r4 = new org.apache.cxf.jaxrs.client.ClientMessageObserver;

        $r5 = r1.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        specialinvoke $r4.<org.apache.cxf.jaxrs.client.ClientMessageObserver: void <init>(org.apache.cxf.jaxrs.client.ClientConfiguration)>($r5);

        interfaceinvoke r13.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/transport/MessageObserver;", $r4);

        $r6 = r1.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r7 = virtualinvoke $r6.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        $r8 = interfaceinvoke $r7.<org.apache.cxf.endpoint.ConduitSelector: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        interfaceinvoke r13.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/endpoint/Endpoint;", $r8);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r13.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.transport.no_io_exceptions", $r9);

        $r11 = <org.apache.cxf.interceptor.StaxInEndingInterceptor: java.lang.String STAX_IN_NOCLOSE>;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke r13.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

        interfaceinvoke r0.<org.apache.cxf.message.Message: void setExchange(org.apache.cxf.message.Exchange)>(r13);

        return r13;
    }

    protected void setContexts(org.apache.cxf.message.Message, org.apache.cxf.message.Exchange, java.util.Map, boolean)
    {
        java.util.HashMap $r16, $r17, $r21;
        java.util.Map $r1, $r2, $r4, $r5, $r20, r22, r23;
        java.lang.Boolean $r14;
        java.lang.String $r7, $r8, $r11, $r12;
        boolean z0;
        org.apache.cxf.jaxrs.client.AbstractClient r18;
        org.apache.cxf.message.Message r6;
        org.apache.cxf.message.Exchange r15;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r19;
        java.lang.Object $r0, $r3, $r9, $r10, $r13;

        r18 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r6 := @parameter0: org.apache.cxf.message.Message;

        r15 := @parameter1: org.apache.cxf.message.Exchange;

        r22 := @parameter2: java.util.Map;

        z0 := @parameter3: boolean;

        if r22 != null goto label1;

        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        r22 = $r21;

     label1:
        $r0 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("RequestContext");

        $r1 = (java.util.Map) $r0;

        $r2 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r1);

        r23 = $r2;

        $r3 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("ResponseContext");

        $r4 = (java.util.Map) $r3;

        $r5 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r4);

        if $r2 != null goto label2;

        $r17 = new java.util.HashMap;

        $r19 = r18.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r20 = virtualinvoke $r19.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.Map getRequestContext()>();

        specialinvoke $r17.<java.util.HashMap: void <init>(java.util.Map)>($r20);

        r23 = $r17;

        interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("RequestContext", $r17);

     label2:
        $r8 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r7 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r9 = interfaceinvoke r6.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r7);

        interfaceinvoke r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10 = interfaceinvoke r6.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.uri");

        interfaceinvoke r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.request.uri", $r10);

        $r12 = <org.apache.cxf.message.Message: java.lang.String ENDPOINT_ADDRESS>;

        $r11 = <org.apache.cxf.message.Message: java.lang.String ENDPOINT_ADDRESS>;

        $r13 = interfaceinvoke r6.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r11);

        interfaceinvoke r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("jaxrs.proxy", $r14);

        if $r5 != null goto label3;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ResponseContext", $r16);

     label3:
        interfaceinvoke r6.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.invocation.context", r22);

        interfaceinvoke r6.<org.apache.cxf.message.Message: void putAll(java.util.Map)>(r23);

        interfaceinvoke r15.<org.apache.cxf.message.Exchange: void putAll(java.util.Map)>(r23);

        return;
    }

    protected void setEmptyRequestPropertyIfNeeded(org.apache.cxf.message.Message, java.lang.Object)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r3;
        org.apache.cxf.message.Message r1;
        java.lang.Boolean $r2;
        java.lang.Object r0;

        r3 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.empty.request", $r2);

     label1:
        return;
    }

    protected java.lang.Object checkIfBodyEmpty(java.lang.Object)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r8;
        javax.ws.rs.core.MultivaluedMap $r6;
        java.util.Map $r4;
        int $i0;
        java.lang.Class $r0, $r1, $r2, $r3;
        java.lang.Object r9;
        java.lang.String $r7;
        org.apache.cxf.jaxrs.ext.form.Form $r5;
        boolean $z0, $z1, $z2;

        r8 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r9 := @parameter0: java.lang.Object;

        if r9 == null goto label4;

        $r0 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        if $r0 != class "Ljava/lang/String;" goto label1;

        $r7 = (java.lang.String) r9;

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

     label1:
        $r1 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 != class "Lorg/apache/cxf/jaxrs/ext/form/Form;" goto label2;

        $r5 = (org.apache.cxf.jaxrs.ext.form.Form) r9;

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.ext.form.Form: javax.ws.rs.core.MultivaluedMap getData()>();

        $z2 = interfaceinvoke $r6.<javax.ws.rs.core.MultivaluedMap: boolean isEmpty()>();

        if $z2 != 0 goto label3;

     label2:
        $r2 = class "Ljava/util/Map;";

        $r3 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 == 0 goto label4;

        $r4 = (java.util.Map) r9;

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label4;

     label3:
        r9 = null;

     label4:
        return r9;
    }

    protected void setPlainOperationNameProperty(org.apache.cxf.message.Message, java.lang.String)
    {
        org.apache.cxf.jaxrs.client.AbstractClient r3;
        org.apache.cxf.message.Message r0;
        java.lang.String r2;
        org.apache.cxf.message.Exchange $r1;

        r3 := @this: org.apache.cxf.jaxrs.client.AbstractClient;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.resource.operation.name", r2);

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;
        java.util.ResourceBundle $r1;

        <org.apache.cxf.jaxrs.client.AbstractClient: java.lang.String HEADER_SPLIT_PROPERTY> = "org.apache.cxf.http.header.split";

        <org.apache.cxf.jaxrs.client.AbstractClient: java.lang.String PROXY_PROPERTY> = "jaxrs.proxy";

        <org.apache.cxf.jaxrs.client.AbstractClient: java.lang.String HTTP_SCHEME> = "http";

        <org.apache.cxf.jaxrs.client.AbstractClient: java.lang.String KEEP_CONDUIT_ALIVE> = "KeepConduitAlive";

        <org.apache.cxf.jaxrs.client.AbstractClient: java.lang.String RESPONSE_CONTEXT> = "ResponseContext";

        <org.apache.cxf.jaxrs.client.AbstractClient: java.lang.String REQUEST_CONTEXT> = "RequestContext";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/client/AbstractClient;");

        <org.apache.cxf.jaxrs.client.AbstractClient: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/client/AbstractClient;");

        <org.apache.cxf.jaxrs.client.AbstractClient: java.util.ResourceBundle BUNDLE> = $r1;

        return;
    }
}
