public final class org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder extends java.lang.Object
{
    private java.lang.Double version;
    private org.waveprotocol.wave.communication.Blob historyHash;

    public void <init>()
    {
        org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder r0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder setVersion(double)
    {
        java.lang.Double $r1;
        org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder r0;
        double d0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder: java.lang.Double version> = $r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder setHistoryHash(org.waveprotocol.wave.communication.Blob)
    {
        org.waveprotocol.wave.communication.Blob r1;
        org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder r0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder;

        r1 := @parameter0: org.waveprotocol.wave.communication.Blob;

        r0.<org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder: org.waveprotocol.wave.communication.Blob historyHash> = r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolHashedVersion build(org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder$Factory)
    {
        org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder$Factory r0;
        java.lang.Double $r3;
        org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder r2;
        org.waveprotocol.wave.communication.Blob $r4;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r1;
        double $d0;

        r2 := @this: org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder$Factory: org.waveprotocol.wave.federation.ProtocolHashedVersion create()>();

        $r3 = r2.<org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder: java.lang.Double version>;

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolHashedVersion: void setVersion(double)>($d0);

        $r4 = r2.<org.waveprotocol.wave.federation.ProtocolHashedVersionBuilder: org.waveprotocol.wave.communication.Blob historyHash>;

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolHashedVersion: void setHistoryHash(org.waveprotocol.wave.communication.Blob)>($r4);

        return $r1;
    }
}
