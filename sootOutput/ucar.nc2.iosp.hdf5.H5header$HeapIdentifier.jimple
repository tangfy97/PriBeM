class ucar.nc2.iosp.hdf5.H5header$HeapIdentifier extends java.lang.Object
{
    private int nelems;
    private long heapAddress;
    private int index;
    final ucar.nc2.iosp.hdf5.H5header this$0;

    void <init>(ucar.nc2.iosp.hdf5.H5header, long) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r2, $r3, $r4, $r5;
        long l0, $l1, $l3, $l5;
        int $i2, $i4;
        java.lang.String $r11;
        boolean $z0, $z1;
        java.io.PrintStream $r6;
        ucar.nc2.iosp.hdf5.H5header$HeapIdentifier r0;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$HeapIdentifier;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        l0 := @parameter1: long;

        r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: ucar.nc2.iosp.hdf5.H5header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void order(int)>(1);

        $r3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>(r1, l0);

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $r4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $i2 = virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int nelems> = $i2;

        $l3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: long heapAddress> = $l3;

        $r5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $i4 = virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int index> = $i4;

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   read HeapIdentifier address=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label1:
        $z1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$6600()>();

        if $z1 == 0 goto label2;

        $l5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>(r1, l0);

        virtualinvoke r1.<ucar.nc2.iosp.hdf5.H5header: void dump(java.lang.String,long,int,boolean)>("heapIdentifier", $l5, 16, 1);

     label2:
        return;
    }

    void <init>(ucar.nc2.iosp.hdf5.H5header, java.nio.ByteBuffer, int) throws java.io.IOException
    {
        long $l4;
        java.nio.ByteBuffer r2;
        int i0, $i1, $i2, $i3;
        java.lang.String $r8;
        boolean $z0, $z1;
        java.io.PrintStream $r4;
        ucar.nc2.iosp.hdf5.H5header$HeapIdentifier r0;
        java.nio.ByteOrder $r3;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$HeapIdentifier;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r2 := @parameter1: java.nio.ByteBuffer;

        i0 := @parameter2: int;

        r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: ucar.nc2.iosp.hdf5.H5header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r3);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i0);

        $i1 = virtualinvoke r2.<java.nio.ByteBuffer: int getInt()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int nelems> = $i1;

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5500(ucar.nc2.iosp.hdf5.H5header)>(r1);

        if $z0 == 0 goto label1;

        $l4 = virtualinvoke r2.<java.nio.ByteBuffer: long getLong()>();

        goto label2;

     label1:
        $i2 = virtualinvoke r2.<java.nio.ByteBuffer: int getInt()>();

        $l4 = (long) $i2;

     label2:
        r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: long heapAddress> = $l4;

        $i3 = virtualinvoke r2.<java.nio.ByteBuffer: int getInt()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int index> = $i3;

        $z1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z1 == 0 goto label3;

        $r4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   read HeapIdentifier from ByteBuffer=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label3:
        return;
    }

    public java.lang.String toString()
    {
        long $l1;
        ucar.nc2.iosp.hdf5.H5header$HeapIdentifier r2;
        int $i0, $i2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r2 := @this: ucar.nc2.iosp.hdf5.H5header$HeapIdentifier;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nelems=");

        $i0 = r2.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int nelems>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heapAddress=");

        $l1 = r2.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: long heapAddress>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" index=");

        $i2 = r2.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int index>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject getHeapObject() throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject r10;
        java.lang.IllegalStateException $r18;
        long $l0, $l3, $l4;
        short $s2;
        java.lang.Long $r3, $r15;
        java.util.Map $r2, $r14;
        int $i1, $i5;
        boolean $z0;
        java.util.Iterator $r7;
        ucar.nc2.iosp.hdf5.H5header$HeapIdentifier r0;
        java.util.List $r6;
        ucar.nc2.iosp.hdf5.H5header$GlobalHeap $r5, r16, $r17;
        ucar.nc2.iosp.hdf5.H5header $r1, $r12, $r13;
        java.lang.Object $r4, $r9;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$HeapIdentifier;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.util.Map access$6700(ucar.nc2.iosp.hdf5.H5header)>($r1);

        $l0 = r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: long heapAddress>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (ucar.nc2.iosp.hdf5.H5header$GlobalHeap) $r4;

        r16 = $r5;

        if null != $r5 goto label1;

        $r17 = new ucar.nc2.iosp.hdf5.H5header$GlobalHeap;

        $r12 = r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l3 = r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: long heapAddress>;

        specialinvoke $r17.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap: void <init>(ucar.nc2.iosp.hdf5.H5header,long)>($r12, $l3);

        r16 = $r17;

        $r13 = r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r14 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.util.Map access$6700(ucar.nc2.iosp.hdf5.H5header)>($r13);

        $l4 = r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: long heapAddress>;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r17);

     label1:
        $r6 = r16.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap: java.util.List hos>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject) $r9;

        $s2 = r10.<ucar.nc2.iosp.hdf5.H5header$GlobalHeap$HeapObject: short id>;

        $i1 = r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int index>;

        $i5 = (int) $s2;

        if $i5 != $i1 goto label3;

        return r10;

     label3:
        goto label2;

     label4:
        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cant find HeapObject");

        throw $r18;
    }

    static int access$6500(ucar.nc2.iosp.hdf5.H5header$HeapIdentifier)
    {
        int $i0;
        ucar.nc2.iosp.hdf5.H5header$HeapIdentifier r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header$HeapIdentifier;

        $i0 = r0.<ucar.nc2.iosp.hdf5.H5header$HeapIdentifier: int nelems>;

        return $i0;
    }
}
