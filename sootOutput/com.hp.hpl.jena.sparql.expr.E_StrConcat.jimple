public class com.hp.hpl.jena.sparql.expr.E_StrConcat extends com.hp.hpl.jena.sparql.expr.ExprFunctionN
{
    private static final java.lang.String name;

    public void <init>(com.hp.hpl.jena.sparql.expr.ExprList)
    {
        com.hp.hpl.jena.sparql.expr.E_StrConcat r0;
        com.hp.hpl.jena.sparql.expr.ExprList r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.E_StrConcat;

        r1 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprList;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunctionN: void <init>(java.lang.String,com.hp.hpl.jena.sparql.expr.ExprList)>("concat", r1);

        return;
    }

    protected com.hp.hpl.jena.sparql.expr.Expr copy(com.hp.hpl.jena.sparql.expr.ExprList)
    {
        com.hp.hpl.jena.sparql.expr.E_StrConcat $r0, r2;
        com.hp.hpl.jena.sparql.expr.ExprList r1;

        r2 := @this: com.hp.hpl.jena.sparql.expr.E_StrConcat;

        r1 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprList;

        $r0 = new com.hp.hpl.jena.sparql.expr.E_StrConcat;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.expr.E_StrConcat: void <init>(com.hp.hpl.jena.sparql.expr.ExprList)>(r1);

        return $r0;
    }

    protected com.hp.hpl.jena.sparql.expr.NodeValue eval(java.util.List)
    {
        java.util.List r0;
        com.hp.hpl.jena.sparql.expr.E_StrConcat r2;
        com.hp.hpl.jena.sparql.expr.NodeValue $r1;

        r2 := @this: com.hp.hpl.jena.sparql.expr.E_StrConcat;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.expr.nodevalue.XSDFuncOp: com.hp.hpl.jena.sparql.expr.NodeValue strConcat(java.util.List)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.expr.E_StrConcat: java.lang.String name> = "concat";

        return;
    }
}
