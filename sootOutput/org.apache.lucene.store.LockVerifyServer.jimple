public class org.apache.lucene.store.LockVerifyServer extends java.lang.Object
{

    public void <init>()
    {
        org.apache.lucene.store.LockVerifyServer r0;

        r0 := @this: org.apache.lucene.store.LockVerifyServer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String getTime(long)
    {
        long $l0, l1, $l2, $l3;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        l1 := @parameter0: long;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l0 - l1;

        $l3 = $l2 / 1000L;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.net.ServerSocket $r2;
        boolean z0;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r10, $r11, $r12, $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r28, $r29, $r30, $r31, $r32, $r33;
        java.net.Socket $r36;
        java.lang.String[] r0;
        long $l2;
        int $i0, $i1, i3, $i4, $i5;
        java.lang.String $r1, $r8, $r13, $r17, $r24, $r27, $r34;
        java.io.PrintStream $r4, $r14, $r16, $r26, $r35;
        java.io.OutputStream $r37;
        java.lang.RuntimeException $r9;
        java.io.InputStream $r38;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 == 1 goto label1;

        $r35 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("\nUsage: java org.apache.lucene.store.LockVerifyServer port\n");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        $r1 = r0[0];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r2 = new java.net.ServerSocket;

        specialinvoke $r2.<java.net.ServerSocket: void <init>(int)>($i1);

        virtualinvoke $r2.<java.net.ServerSocket: void setReuseAddress(boolean)>(1);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nReady on port ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        i3 = 0;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label2:
        $r36 = virtualinvoke $r2.<java.net.ServerSocket: java.net.Socket accept()>();

        $r37 = virtualinvoke $r36.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r38 = virtualinvoke $r36.<java.net.Socket: java.io.InputStream getInputStream()>();

        $i4 = virtualinvoke $r38.<java.io.InputStream: int read()>();

        $i5 = virtualinvoke $r38.<java.io.InputStream: int read()>();

        z0 = 0;

        if $i5 != 1 goto label4;

        if i3 == 0 goto label3;

        z0 = 1;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = staticinvoke <org.apache.lucene.store.LockVerifyServer: java.lang.String getTime(long)>($l2);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ERROR: id ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got lock, but ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already holds the lock");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r34);

     label3:
        i3 = $i4;

        goto label7;

     label4:
        if $i5 != 0 goto label6;

        if i3 == $i4 goto label5;

        z0 = 1;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = staticinvoke <org.apache.lucene.store.LockVerifyServer: java.lang.String getTime(long)>($l2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ERROR: id ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" released the lock, but ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is the one holding the lock");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label5:
        i3 = 0;

        goto label7;

     label6:
        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unrecognized command ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label7:
        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void print(java.lang.String)>(".");

        if z0 == 0 goto label8;

        virtualinvoke $r37.<java.io.OutputStream: void write(int)>(1);

        goto label9;

     label8:
        virtualinvoke $r37.<java.io.OutputStream: void write(int)>(0);

     label9:
        virtualinvoke $r37.<java.io.OutputStream: void close()>();

        virtualinvoke $r38.<java.io.InputStream: void close()>();

        virtualinvoke $r36.<java.net.Socket: void close()>();

        goto label2;
    }
}
