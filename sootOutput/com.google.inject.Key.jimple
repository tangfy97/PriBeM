public class com.google.inject.Key extends java.lang.Object
{
    private final com.google.inject.Key$AnnotationStrategy annotationStrategy;
    private final com.google.inject.TypeLiteral typeLiteral;
    private final int hashCode;

    protected void <init>(java.lang.Class)
    {
        com.google.inject.Key$AnnotationStrategy $r2;
        com.google.inject.Key r0;
        int $i0;
        java.lang.Class r1, $r3;
        com.google.inject.TypeLiteral $r4;

        r0 := @this: com.google.inject.Key;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.Class)>(r1);

        r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy> = $r2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <com.google.inject.TypeLiteral: com.google.inject.TypeLiteral fromSuperclassTypeParameter(java.lang.Class)>($r3);

        r0.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral> = $r4;

        $i0 = specialinvoke r0.<com.google.inject.Key: int computeHashCode()>();

        r0.<com.google.inject.Key: int hashCode> = $i0;

        return;
    }

    protected void <init>(java.lang.'annotation'.Annotation)
    {
        com.google.inject.Key$AnnotationStrategy $r2;
        com.google.inject.Key r0;
        java.lang.'annotation'.Annotation r1;
        int $i0;
        java.lang.Class $r3;
        com.google.inject.TypeLiteral $r4;

        r0 := @this: com.google.inject.Key;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.'annotation'.Annotation)>(r1);

        r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy> = $r2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <com.google.inject.TypeLiteral: com.google.inject.TypeLiteral fromSuperclassTypeParameter(java.lang.Class)>($r3);

        r0.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral> = $r4;

        $i0 = specialinvoke r0.<com.google.inject.Key: int computeHashCode()>();

        r0.<com.google.inject.Key: int hashCode> = $i0;

        return;
    }

    protected void <init>()
    {
        com.google.inject.Key r0;
        int $i0;
        java.lang.Class $r2;
        com.google.inject.Key$NullAnnotationStrategy $r1;
        com.google.inject.TypeLiteral $r3;

        r0 := @this: com.google.inject.Key;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <com.google.inject.Key$NullAnnotationStrategy: com.google.inject.Key$NullAnnotationStrategy INSTANCE>;

        r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy> = $r1;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <com.google.inject.TypeLiteral: com.google.inject.TypeLiteral fromSuperclassTypeParameter(java.lang.Class)>($r2);

        r0.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral> = $r3;

        $i0 = specialinvoke r0.<com.google.inject.Key: int computeHashCode()>();

        r0.<com.google.inject.Key: int hashCode> = $i0;

        return;
    }

    private void <init>(java.lang.reflect.Type, com.google.inject.Key$AnnotationStrategy)
    {
        com.google.inject.Key$AnnotationStrategy r1;
        java.lang.reflect.Type r2;
        com.google.inject.Key r0;
        int $i0;
        com.google.inject.TypeLiteral $r3, $r4;

        r0 := @this: com.google.inject.Key;

        r2 := @parameter0: java.lang.reflect.Type;

        r1 := @parameter1: com.google.inject.Key$AnnotationStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy> = r1;

        $r3 = staticinvoke <com.google.inject.TypeLiteral: com.google.inject.TypeLiteral get(java.lang.reflect.Type)>(r2);

        $r4 = staticinvoke <com.google.inject.internal.MoreTypes: com.google.inject.TypeLiteral canonicalizeForKey(com.google.inject.TypeLiteral)>($r3);

        r0.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral> = $r4;

        $i0 = specialinvoke r0.<com.google.inject.Key: int computeHashCode()>();

        r0.<com.google.inject.Key: int hashCode> = $i0;

        return;
    }

    private void <init>(com.google.inject.TypeLiteral, com.google.inject.Key$AnnotationStrategy)
    {
        com.google.inject.Key$AnnotationStrategy r1;
        com.google.inject.Key r0;
        int $i0;
        com.google.inject.TypeLiteral r2, $r3;

        r0 := @this: com.google.inject.Key;

        r2 := @parameter0: com.google.inject.TypeLiteral;

        r1 := @parameter1: com.google.inject.Key$AnnotationStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy> = r1;

        $r3 = staticinvoke <com.google.inject.internal.MoreTypes: com.google.inject.TypeLiteral canonicalizeForKey(com.google.inject.TypeLiteral)>(r2);

        r0.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral> = $r3;

        $i0 = specialinvoke r0.<com.google.inject.Key: int computeHashCode()>();

        r0.<com.google.inject.Key: int hashCode> = $i0;

        return;
    }

    private int computeHashCode()
    {
        com.google.inject.Key$AnnotationStrategy $r2;
        com.google.inject.Key r0;
        int $i0, $i1, $i2, $i3;
        com.google.inject.TypeLiteral $r1;

        r0 := @this: com.google.inject.Key;

        $r1 = r0.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral>;

        $i0 = virtualinvoke $r1.<com.google.inject.TypeLiteral: int hashCode()>();

        $i1 = $i0 * 31;

        $r2 = r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    public final com.google.inject.TypeLiteral getTypeLiteral()
    {
        com.google.inject.Key r0;
        com.google.inject.TypeLiteral $r1;

        r0 := @this: com.google.inject.Key;

        $r1 = r0.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral>;

        return $r1;
    }

    public final java.lang.Class getAnnotationType()
    {
        com.google.inject.Key r0;
        java.lang.Class $r2;
        com.google.inject.Key$AnnotationStrategy $r1;

        r0 := @this: com.google.inject.Key;

        $r1 = r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $r2 = interfaceinvoke $r1.<com.google.inject.Key$AnnotationStrategy: java.lang.Class getAnnotationType()>();

        return $r2;
    }

    public final java.lang.'annotation'.Annotation getAnnotation()
    {
        com.google.inject.Key r0;
        java.lang.'annotation'.Annotation $r2;
        com.google.inject.Key$AnnotationStrategy $r1;

        r0 := @this: com.google.inject.Key;

        $r1 = r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $r2 = interfaceinvoke $r1.<com.google.inject.Key$AnnotationStrategy: java.lang.'annotation'.Annotation getAnnotation()>();

        return $r2;
    }

    boolean hasAnnotationType()
    {
        com.google.inject.Key$AnnotationStrategy $r1;
        com.google.inject.Key r0;
        java.lang.Class $r2;
        boolean $z0;

        r0 := @this: com.google.inject.Key;

        $r1 = r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $r2 = interfaceinvoke $r1.<com.google.inject.Key$AnnotationStrategy: java.lang.Class getAnnotationType()>();

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    java.lang.String getAnnotationName()
    {
        com.google.inject.Key$AnnotationStrategy $r1, $r3;
        com.google.inject.Key r0;
        java.lang.'annotation'.Annotation $r2;
        java.lang.Class $r4;
        java.lang.String $r5, $r6;

        r0 := @this: com.google.inject.Key;

        $r1 = r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $r2 = interfaceinvoke $r1.<com.google.inject.Key$AnnotationStrategy: java.lang.'annotation'.Annotation getAnnotation()>();

        if $r2 == null goto label1;

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r6;

     label1:
        $r3 = r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $r4 = interfaceinvoke $r3.<com.google.inject.Key$AnnotationStrategy: java.lang.Class getAnnotationType()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String toString()>();

        return $r5;
    }

    java.lang.Class getRawType()
    {
        com.google.inject.Key r0;
        java.lang.Class $r2;
        com.google.inject.TypeLiteral $r1;

        r0 := @this: com.google.inject.Key;

        $r1 = r0.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral>;

        $r2 = virtualinvoke $r1.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        return $r2;
    }

    com.google.inject.Key providerKey()
    {
        com.google.inject.Key r0, $r3;
        com.google.inject.TypeLiteral $r1, $r2;

        r0 := @this: com.google.inject.Key;

        $r1 = r0.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral>;

        $r2 = virtualinvoke $r1.<com.google.inject.TypeLiteral: com.google.inject.TypeLiteral providerType()>();

        $r3 = virtualinvoke r0.<com.google.inject.Key: com.google.inject.Key ofType(com.google.inject.TypeLiteral)>($r2);

        return $r3;
    }

    public final boolean equals(java.lang.Object)
    {
        com.google.inject.Key r1, r2;
        com.google.inject.Key$AnnotationStrategy $r3, $r4;
        java.lang.Object r0;
        com.google.inject.TypeLiteral $r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: com.google.inject.Key;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof com.google.inject.Key;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.google.inject.Key) r0;

        $r4 = r1.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $r3 = r2.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r1.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral>;

        $r5 = r2.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral>;

        $z2 = virtualinvoke $r6.<com.google.inject.TypeLiteral: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public final int hashCode()
    {
        com.google.inject.Key r0;
        int $i0;

        r0 := @this: com.google.inject.Key;

        $i0 = r0.<com.google.inject.Key: int hashCode>;

        return $i0;
    }

    public final java.lang.String toString()
    {
        com.google.inject.Key r2;
        com.google.inject.Key$AnnotationStrategy $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;
        com.google.inject.TypeLiteral $r3;

        r2 := @this: com.google.inject.Key;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key[type=");

        $r3 = r2.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", annotation=");

        $r6 = r2.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    static com.google.inject.Key get(java.lang.Class, com.google.inject.Key$AnnotationStrategy)
    {
        com.google.inject.Key $r0;
        java.lang.Class r1;
        com.google.inject.Key$AnnotationStrategy r2;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.google.inject.Key$AnnotationStrategy;

        $r0 = new com.google.inject.Key;

        specialinvoke $r0.<com.google.inject.Key: void <init>(java.lang.reflect.Type,com.google.inject.Key$AnnotationStrategy)>(r1, r2);

        return $r0;
    }

    public static com.google.inject.Key get(java.lang.Class)
    {
        com.google.inject.Key $r0;
        java.lang.Class r1;
        com.google.inject.Key$NullAnnotationStrategy $r2;

        r1 := @parameter0: java.lang.Class;

        $r0 = new com.google.inject.Key;

        $r2 = <com.google.inject.Key$NullAnnotationStrategy: com.google.inject.Key$NullAnnotationStrategy INSTANCE>;

        specialinvoke $r0.<com.google.inject.Key: void <init>(java.lang.reflect.Type,com.google.inject.Key$AnnotationStrategy)>(r1, $r2);

        return $r0;
    }

    public static com.google.inject.Key get(java.lang.Class, java.lang.Class)
    {
        com.google.inject.Key$AnnotationStrategy $r3;
        com.google.inject.Key $r0;
        java.lang.Class r1, r2;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r0 = new com.google.inject.Key;

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.Class)>(r2);

        specialinvoke $r0.<com.google.inject.Key: void <init>(java.lang.reflect.Type,com.google.inject.Key$AnnotationStrategy)>(r1, $r3);

        return $r0;
    }

    public static com.google.inject.Key get(java.lang.Class, java.lang.'annotation'.Annotation)
    {
        com.google.inject.Key$AnnotationStrategy $r3;
        com.google.inject.Key $r0;
        java.lang.'annotation'.Annotation r2;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.'annotation'.Annotation;

        $r0 = new com.google.inject.Key;

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.'annotation'.Annotation)>(r2);

        specialinvoke $r0.<com.google.inject.Key: void <init>(java.lang.reflect.Type,com.google.inject.Key$AnnotationStrategy)>(r1, $r3);

        return $r0;
    }

    public static com.google.inject.Key get(java.lang.reflect.Type)
    {
        com.google.inject.Key $r0;
        com.google.inject.Key$NullAnnotationStrategy $r2;
        java.lang.reflect.Type r1;

        r1 := @parameter0: java.lang.reflect.Type;

        $r0 = new com.google.inject.Key;

        $r2 = <com.google.inject.Key$NullAnnotationStrategy: com.google.inject.Key$NullAnnotationStrategy INSTANCE>;

        specialinvoke $r0.<com.google.inject.Key: void <init>(java.lang.reflect.Type,com.google.inject.Key$AnnotationStrategy)>(r1, $r2);

        return $r0;
    }

    public static com.google.inject.Key get(java.lang.reflect.Type, java.lang.Class)
    {
        com.google.inject.Key$AnnotationStrategy $r3;
        java.lang.reflect.Type r1;
        com.google.inject.Key $r0;
        java.lang.Class r2;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.lang.Class;

        $r0 = new com.google.inject.Key;

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.Class)>(r2);

        specialinvoke $r0.<com.google.inject.Key: void <init>(java.lang.reflect.Type,com.google.inject.Key$AnnotationStrategy)>(r1, $r3);

        return $r0;
    }

    public static com.google.inject.Key get(java.lang.reflect.Type, java.lang.'annotation'.Annotation)
    {
        com.google.inject.Key$AnnotationStrategy $r3;
        java.lang.reflect.Type r1;
        com.google.inject.Key $r0;
        java.lang.'annotation'.Annotation r2;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.lang.'annotation'.Annotation;

        $r0 = new com.google.inject.Key;

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.'annotation'.Annotation)>(r2);

        specialinvoke $r0.<com.google.inject.Key: void <init>(java.lang.reflect.Type,com.google.inject.Key$AnnotationStrategy)>(r1, $r3);

        return $r0;
    }

    public static com.google.inject.Key get(com.google.inject.TypeLiteral)
    {
        com.google.inject.Key $r0;
        com.google.inject.Key$NullAnnotationStrategy $r2;
        com.google.inject.TypeLiteral r1;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r0 = new com.google.inject.Key;

        $r2 = <com.google.inject.Key$NullAnnotationStrategy: com.google.inject.Key$NullAnnotationStrategy INSTANCE>;

        specialinvoke $r0.<com.google.inject.Key: void <init>(com.google.inject.TypeLiteral,com.google.inject.Key$AnnotationStrategy)>(r1, $r2);

        return $r0;
    }

    public static com.google.inject.Key get(com.google.inject.TypeLiteral, java.lang.Class)
    {
        com.google.inject.Key$AnnotationStrategy $r3;
        com.google.inject.Key $r0;
        java.lang.Class r2;
        com.google.inject.TypeLiteral r1;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        r2 := @parameter1: java.lang.Class;

        $r0 = new com.google.inject.Key;

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.Class)>(r2);

        specialinvoke $r0.<com.google.inject.Key: void <init>(com.google.inject.TypeLiteral,com.google.inject.Key$AnnotationStrategy)>(r1, $r3);

        return $r0;
    }

    public static com.google.inject.Key get(com.google.inject.TypeLiteral, java.lang.'annotation'.Annotation)
    {
        com.google.inject.Key$AnnotationStrategy $r3;
        com.google.inject.Key $r0;
        java.lang.'annotation'.Annotation r2;
        com.google.inject.TypeLiteral r1;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        r2 := @parameter1: java.lang.'annotation'.Annotation;

        $r0 = new com.google.inject.Key;

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.'annotation'.Annotation)>(r2);

        specialinvoke $r0.<com.google.inject.Key: void <init>(com.google.inject.TypeLiteral,com.google.inject.Key$AnnotationStrategy)>(r1, $r3);

        return $r0;
    }

    public com.google.inject.Key ofType(java.lang.Class)
    {
        com.google.inject.Key$AnnotationStrategy $r3;
        com.google.inject.Key $r0, r2;
        java.lang.Class r1;

        r2 := @this: com.google.inject.Key;

        r1 := @parameter0: java.lang.Class;

        $r0 = new com.google.inject.Key;

        $r3 = r2.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        specialinvoke $r0.<com.google.inject.Key: void <init>(java.lang.reflect.Type,com.google.inject.Key$AnnotationStrategy)>(r1, $r3);

        return $r0;
    }

    public com.google.inject.Key ofType(java.lang.reflect.Type)
    {
        com.google.inject.Key$AnnotationStrategy $r3;
        java.lang.reflect.Type r1;
        com.google.inject.Key $r0, r2;

        r2 := @this: com.google.inject.Key;

        r1 := @parameter0: java.lang.reflect.Type;

        $r0 = new com.google.inject.Key;

        $r3 = r2.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        specialinvoke $r0.<com.google.inject.Key: void <init>(java.lang.reflect.Type,com.google.inject.Key$AnnotationStrategy)>(r1, $r3);

        return $r0;
    }

    public com.google.inject.Key ofType(com.google.inject.TypeLiteral)
    {
        com.google.inject.Key$AnnotationStrategy $r3;
        com.google.inject.Key $r0, r2;
        com.google.inject.TypeLiteral r1;

        r2 := @this: com.google.inject.Key;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r0 = new com.google.inject.Key;

        $r3 = r2.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        specialinvoke $r0.<com.google.inject.Key: void <init>(com.google.inject.TypeLiteral,com.google.inject.Key$AnnotationStrategy)>(r1, $r3);

        return $r0;
    }

    public boolean hasAttributes()
    {
        com.google.inject.Key r0;
        com.google.inject.Key$AnnotationStrategy $r1;
        boolean $z0;

        r0 := @this: com.google.inject.Key;

        $r1 = r0.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $z0 = interfaceinvoke $r1.<com.google.inject.Key$AnnotationStrategy: boolean hasAttributes()>();

        return $z0;
    }

    public com.google.inject.Key withoutAttributes()
    {
        com.google.inject.Key$AnnotationStrategy $r2, $r4;
        com.google.inject.Key $r0, r1;
        com.google.inject.TypeLiteral $r3;

        r1 := @this: com.google.inject.Key;

        $r0 = new com.google.inject.Key;

        $r3 = r1.<com.google.inject.Key: com.google.inject.TypeLiteral typeLiteral>;

        $r2 = r1.<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy annotationStrategy>;

        $r4 = interfaceinvoke $r2.<com.google.inject.Key$AnnotationStrategy: com.google.inject.Key$AnnotationStrategy withoutAttributes()>();

        specialinvoke $r0.<com.google.inject.Key: void <init>(com.google.inject.TypeLiteral,com.google.inject.Key$AnnotationStrategy)>($r3, $r4);

        return $r0;
    }

    static com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.'annotation'.Annotation)
    {
        com.google.inject.Key$AnnotationInstanceStrategy $r2;
        com.google.inject.Key$AnnotationTypeStrategy $r4;
        java.lang.'annotation'.Annotation r0, $r3;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.'annotation'.Annotation;

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "annotation");

        $r1 = interfaceinvoke r0.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        staticinvoke <com.google.inject.Key: void ensureRetainedAtRuntime(java.lang.Class)>($r1);

        staticinvoke <com.google.inject.Key: void ensureIsBindingAnnotation(java.lang.Class)>($r1);

        $z0 = staticinvoke <com.google.inject.internal.Annotations: boolean isMarker(java.lang.Class)>($r1);

        if $z0 == 0 goto label1;

        $r4 = new com.google.inject.Key$AnnotationTypeStrategy;

        specialinvoke $r4.<com.google.inject.Key$AnnotationTypeStrategy: void <init>(java.lang.Class,java.lang.'annotation'.Annotation)>($r1, r0);

        return $r4;

     label1:
        $r2 = new com.google.inject.Key$AnnotationInstanceStrategy;

        $r3 = staticinvoke <com.google.inject.internal.Annotations: java.lang.'annotation'.Annotation canonicalizeIfNamed(java.lang.'annotation'.Annotation)>(r0);

        specialinvoke $r2.<com.google.inject.Key$AnnotationInstanceStrategy: void <init>(java.lang.'annotation'.Annotation)>($r3);

        return $r2;
    }

    static com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.Class)
    {
        java.lang.Class r0, $r2;
        com.google.inject.Key$AnnotationTypeStrategy $r1;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "annotation type");

        staticinvoke <com.google.inject.Key: void ensureRetainedAtRuntime(java.lang.Class)>(r0);

        staticinvoke <com.google.inject.Key: void ensureIsBindingAnnotation(java.lang.Class)>(r0);

        $r1 = new com.google.inject.Key$AnnotationTypeStrategy;

        $r2 = staticinvoke <com.google.inject.internal.Annotations: java.lang.Class canonicalizeIfNamed(java.lang.Class)>(r0);

        specialinvoke $r1.<com.google.inject.Key$AnnotationTypeStrategy: void <init>(java.lang.Class,java.lang.'annotation'.Annotation)>($r2, null);

        return $r1;
    }

    private static void ensureRetainedAtRuntime(java.lang.Class)
    {
        java.lang.Object[] $r1;
        java.lang.Class r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $z0 = staticinvoke <com.google.inject.internal.Annotations: boolean isRetainedAtRuntime(java.lang.Class)>(r0);

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r1[0] = $r2;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "%s is not retained at runtime. Please annotate it with @Retention(RUNTIME).", $r1);

        return;
    }

    private static void ensureIsBindingAnnotation(java.lang.Class)
    {
        java.lang.Object[] $r1;
        java.lang.Class r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $z0 = staticinvoke <com.google.inject.internal.Annotations: boolean isBindingAnnotation(java.lang.Class)>(r0);

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r1[0] = $r2;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "%s is not a binding annotation. Please annotate it with @BindingAnnotation.", $r1);

        return;
    }
}
