public final class org.apache.lucene.analysis.miscellaneous.CapitalizationFilter extends org.apache.lucene.analysis.TokenFilter
{
    public static final int DEFAULT_MAX_WORD_COUNT;
    public static final int DEFAULT_MAX_TOKEN_LENGTH;
    private final boolean onlyFirstWord;
    private final org.apache.lucene.analysis.util.CharArraySet keep;
    private final boolean forceFirstLetter;
    private final java.util.Collection okPrefix;
    private final int minWordLength;
    private final int maxWordCount;
    private final int maxTokenLength;
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;

    public void <init>(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.miscellaneous.CapitalizationFilter r0;
        org.apache.lucene.analysis.TokenStream r1;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.CapitalizationFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        specialinvoke r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: void <init>(org.apache.lucene.analysis.TokenStream,boolean,org.apache.lucene.analysis.util.CharArraySet,boolean,java.util.Collection,int,int,int)>(r1, 1, null, 1, null, 0, 2147483647, 2147483647);

        return;
    }

    public void <init>(org.apache.lucene.analysis.TokenStream, boolean, org.apache.lucene.analysis.util.CharArraySet, boolean, java.util.Collection, int, int, int)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r3;
        org.apache.lucene.analysis.miscellaneous.CapitalizationFilter r0;
        org.apache.lucene.analysis.TokenStream r1;
        java.util.Collection r5;
        int i0, i1, i2;
        org.apache.lucene.analysis.util.CharArraySet r4;
        org.apache.lucene.util.Attribute $r2;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.CapitalizationFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        z0 := @parameter1: boolean;

        r4 := @parameter2: org.apache.lucene.analysis.util.CharArraySet;

        z1 := @parameter3: boolean;

        r5 := @parameter4: java.util.Collection;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r3 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r2;

        r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r3;

        r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: boolean onlyFirstWord> = z0;

        r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: org.apache.lucene.analysis.util.CharArraySet keep> = r4;

        r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: boolean forceFirstLetter> = z1;

        r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: java.util.Collection okPrefix> = r5;

        r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: int minWordLength> = i0;

        r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: int maxWordCount> = i1;

        r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: int maxTokenLength> = i2;

        return;
    }

    public boolean incrementToken() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, i9, i10, i11, $i12, $i13;
        boolean $z0;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r2, $r4, $r5;
        org.apache.lucene.analysis.miscellaneous.CapitalizationFilter r0;
        org.apache.lucene.analysis.TokenStream $r1;
        char c6;
        char[] $r3, r6;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.CapitalizationFilter;

        $r1 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: org.apache.lucene.analysis.TokenStream input>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r3 = interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        $r4 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i0 = interfaceinvoke $r4.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: int length()>();

        r6 = null;

        $i1 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: int maxWordCount>;

        if $i1 >= 2147483647 goto label2;

        r6 = newarray (char)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r6, 0, $i0);

     label2:
        $i2 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: int maxTokenLength>;

        if $i0 >= $i2 goto label8;

        i9 = 0;

        i10 = 0;

        i11 = 0;

     label3:
        if i11 >= $i0 goto label6;

        c6 = $r3[i11];

        $i12 = (int) c6;

        if $i12 <= 32 goto label4;

        $i13 = (int) c6;

        if $i13 != 46 goto label5;

     label4:
        $i8 = i11 - i10;

        if $i8 <= 0 goto label5;

        $i7 = i9;

        i9 = i9 + 1;

        specialinvoke r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: void processWord(char[],int,int,int)>($r3, i10, $i8, $i7);

        i10 = i11 + 1;

        i11 = i11 + 1;

     label5:
        i11 = i11 + 1;

        goto label3;

     label6:
        if i10 >= $i0 goto label7;

        $i5 = $i0 - i10;

        $i4 = i9;

        i9 = i9 + 1;

        specialinvoke r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: void processWord(char[],int,int,int)>($r3, i10, $i5, $i4);

     label7:
        $i3 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: int maxWordCount>;

        if i9 <= $i3 goto label8;

        $r5 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r5.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: void copyBuffer(char[],int,int)>(r6, 0, $i0);

     label8:
        return 1;
    }

    private void processWord(char[], int, int, int)
    {
        boolean $z0, $z1, $z2, $z3, z4;
        java.util.Collection $r2, $r4;
        org.apache.lucene.analysis.util.CharArraySet $r1, $r8;
        int i0, $i1, i2, $i5, $i7, $i9, $i10, $i11, i14, $i17, $i19, i21, i22, i23, $i24, $i25;
        org.apache.lucene.analysis.miscellaneous.CapitalizationFilter r0;
        java.util.Iterator $r5;
        char $c3, $c4, $c6, $c8, $c12, $c13, $c15, $c16, $c18, $c20;
        char[] r3, r7;
        java.lang.Object $r6;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.CapitalizationFilter;

        r3 := @parameter0: char[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        i14 := @parameter3: int;

        if i0 >= 1 goto label01;

        return;

     label01:
        $z0 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: boolean onlyFirstWord>;

        if $z0 == 0 goto label04;

        if i14 <= 0 goto label04;

        i21 = 0;

     label02:
        if i21 >= i0 goto label03;

        $i19 = i2 + i21;

        $i17 = i2 + i21;

        $c18 = r3[$i17];

        $c20 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c18);

        r3[$i19] = $c20;

        i21 = i21 + 1;

        goto label02;

     label03:
        return;

     label04:
        $r1 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: org.apache.lucene.analysis.util.CharArraySet keep>;

        if $r1 == null goto label06;

        $r8 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: org.apache.lucene.analysis.util.CharArraySet keep>;

        $z2 = virtualinvoke $r8.<org.apache.lucene.analysis.util.CharArraySet: boolean contains(char[],int,int)>(r3, i2, i0);

        if $z2 == 0 goto label06;

        if i14 != 0 goto label05;

        $z3 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: boolean forceFirstLetter>;

        if $z3 == 0 goto label05;

        $c15 = r3[i2];

        $c16 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c15);

        r3[i2] = $c16;

     label05:
        return;

     label06:
        $i1 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: int minWordLength>;

        if i0 >= $i1 goto label07;

        return;

     label07:
        $r2 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: java.util.Collection okPrefix>;

        if $r2 == null goto label13;

        $r4 = r0.<org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: java.util.Collection okPrefix>;

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (char[]) $r6;

        $i9 = lengthof r7;

        if i0 < $i9 goto label12;

        z4 = 1;

        i22 = 0;

     label09:
        $i10 = lengthof r7;

        if i22 >= $i10 goto label11;

        $c13 = r7[i22];

        $i11 = i2 + i22;

        $c12 = r3[$i11];

        $i24 = (int) $c13;

        $i25 = (int) $c12;

        if $i24 == $i25 goto label10;

        z4 = 0;

        goto label11;

     label10:
        i22 = i22 + 1;

        goto label09;

     label11:
        if z4 != 1 goto label12;

        return;

     label12:
        goto label08;

     label13:
        $c3 = r3[i2];

        $c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c3);

        r3[i2] = $c4;

        i23 = 1;

     label14:
        if i23 >= i0 goto label15;

        $i7 = i2 + i23;

        $i5 = i2 + i23;

        $c6 = r3[$i5];

        $c8 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c6);

        r3[$i7] = $c8;

        i23 = i23 + 1;

        goto label14;

     label15:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: int DEFAULT_MAX_TOKEN_LENGTH> = 2147483647;

        <org.apache.lucene.analysis.miscellaneous.CapitalizationFilter: int DEFAULT_MAX_WORD_COUNT> = 2147483647;

        return;
    }
}
