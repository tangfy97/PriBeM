public class com.hp.hpl.jena.tdb.solver.BindingTDB extends com.hp.hpl.jena.sparql.engine.binding.BindingBase
{
    private final com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable;
    private final com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding;
    private static final boolean caching;
    private final java.util.Map cache;
    private java.util.List vars;

    public void <init>(com.hp.hpl.jena.tdb.solver.BindingNodeId, com.hp.hpl.jena.tdb.nodetable.NodeTable)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r3;
        com.hp.hpl.jena.tdb.solver.BindingTDB r0;
        com.hp.hpl.jena.tdb.solver.BindingNodeId r1;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        r1 := @parameter0: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        r3 := @parameter1: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.solver.BindingNodeId: com.hp.hpl.jena.sparql.engine.binding.Binding getParentBinding()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingBase: void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding)>($r2);

        r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: java.util.Map cache> = null;

        r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: java.util.List vars> = null;

        r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding> = r1;

        r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable> = r3;

        return;
    }

    protected int size1()
    {
        int $i0;
        com.hp.hpl.jena.tdb.solver.BindingNodeId $r1;
        com.hp.hpl.jena.tdb.solver.BindingTDB r0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        $r1 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.solver.BindingNodeId: int size()>();

        return $i0;
    }

    protected java.util.Iterator vars1()
    {
        java.util.List $r1, $r2, $r4;
        java.util.Iterator $r3;
        com.hp.hpl.jena.tdb.solver.BindingTDB r0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        $r1 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: java.util.List vars>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: java.util.List calcVars()>();

        r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: java.util.List vars> = $r4;

     label1:
        $r2 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: java.util.List vars>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r3;
    }

    private java.util.List calcVars()
    {
        java.util.Iterator $r6;
        com.hp.hpl.jena.tdb.solver.BindingNodeId $r2, $r4, $r5;
        com.hp.hpl.jena.sparql.core.Var r8;
        java.util.ArrayList $r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r3;
        com.hp.hpl.jena.tdb.solver.BindingTDB r1;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(4);

        $r2 = r1.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.solver.BindingNodeId: com.hp.hpl.jena.sparql.engine.binding.Binding getParentBinding()>();

        $r4 = r1.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding>;

        virtualinvoke $r4.<com.hp.hpl.jena.tdb.solver.BindingNodeId: java.util.Iterator iterator()>();

        $r5 = r1.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding>;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.tdb.solver.BindingNodeId: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.hp.hpl.jena.sparql.core.Var) $r7;

        if $r3 == null goto label2;

        $z1 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.engine.binding.Binding: boolean contains(com.hp.hpl.jena.sparql.core.Var)>(r8);

        if $z1 != 0 goto label3;

     label2:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r8);

     label3:
        goto label1;

     label4:
        return $r0;
    }

    protected boolean isEmpty1()
    {
        int $i0;
        com.hp.hpl.jena.tdb.solver.BindingTDB r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: int size1()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean contains1(com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.tdb.solver.BindingTDB r0;
        com.hp.hpl.jena.sparql.core.Var r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        $r2 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding>;

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.solver.BindingNodeId: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public com.hp.hpl.jena.tdb.solver.BindingNodeId getBindingId()
    {
        com.hp.hpl.jena.tdb.solver.BindingNodeId $r1;
        com.hp.hpl.jena.tdb.solver.BindingTDB r0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        $r1 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding>;

        return $r1;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getNodeId(com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.sparql.core.Var r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId $r2;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r5, $r6, $r7;
        com.hp.hpl.jena.tdb.store.NodeId r4, $r9;
        com.hp.hpl.jena.tdb.solver.BindingTDB r0, $r8;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        $r2 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.solver.BindingNodeId: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.hp.hpl.jena.tdb.store.NodeId) $r3;

        if r4 == null goto label1;

        return r4;

     label1:
        $r5 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.sparql.engine.binding.Binding parent>;

        if $r5 != null goto label2;

        return null;

     label2:
        $r6 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.sparql.engine.binding.Binding parent>;

        $z0 = $r6 instanceof com.hp.hpl.jena.tdb.solver.BindingTDB;

        if $z0 == 0 goto label3;

        $r7 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.sparql.engine.binding.Binding parent>;

        $r8 = (com.hp.hpl.jena.tdb.solver.BindingTDB) $r7;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.store.NodeId getNodeId(com.hp.hpl.jena.sparql.core.Var)>(r1);

        return $r9;

     label3:
        return null;
    }

    public com.hp.hpl.jena.graph.Node get1(com.hp.hpl.jena.sparql.core.Var)
    {
        java.lang.Object[] $r9;
        com.hp.hpl.jena.graph.Node $r2, $r7;
        com.hp.hpl.jena.sparql.core.Var r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId $r3;
        java.lang.Exception $r8;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r6;
        com.hp.hpl.jena.tdb.store.NodeId r5;
        com.hp.hpl.jena.tdb.solver.BindingTDB r0;
        java.lang.Object $r4;
        java.lang.String $r10;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

     label1:
        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.graph.Node cacheGet(com.hp.hpl.jena.sparql.core.Var)>(r1);

        if $r2 == null goto label3;

     label2:
        return $r2;

     label3:
        $r3 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.solver.BindingNodeId: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.hp.hpl.jena.tdb.store.NodeId) $r4;

        if r5 != null goto label5;

     label4:
        return null;

     label5:
        $r6 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r5);

        specialinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: void cachePut(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node)>(r1, $r7);

     label6:
        return $r7;

     label7:
        $r8 := @caughtexception;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r1;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("get1(%s)", $r9);

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Object,java.lang.String,java.lang.Throwable)>(r0, $r10, $r8);

        return null;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private void cachePut(com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.solver.BindingTDB r0;
        java.util.Map $r1, $r4;
        com.hp.hpl.jena.graph.Node r3;
        com.hp.hpl.jena.sparql.core.Var r2;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r1 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: java.util.Map cache>;

        if $r1 == null goto label1;

        $r4 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: java.util.Map cache>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label1:
        return;
    }

    private com.hp.hpl.jena.graph.Node cacheGet(com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.tdb.solver.BindingTDB r0;
        java.util.Map $r1, $r3;
        java.lang.Object $r4;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.sparql.core.Var r2;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        $r1 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: java.util.Map cache>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: java.util.Map cache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (com.hp.hpl.jena.graph.Node) $r4;

        return $r5;
    }

    protected void format(java.lang.StringBuffer, com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.tdb.store.NodeId r4;
        java.lang.StringBuffer r7;
        com.hp.hpl.jena.tdb.solver.BindingTDB r0;
        java.lang.String $r6, $r10, $r16, r20;
        com.hp.hpl.jena.sparql.core.Var r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingTDB;

        r7 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.Var;

        $r2 = r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId idBinding>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.solver.BindingNodeId: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.hp.hpl.jena.tdb.store.NodeId) $r3;

        r20 = "";

        if r4 == null goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = virtualinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>(r1);

        $r6 = staticinvoke <com.hp.hpl.jena.tdb.lib.NodeFmtLib: java.lang.String displayStr(com.hp.hpl.jena.graph.Node)>($r5);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("( ?");

        $r10 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Var: java.lang.String getVarName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        return;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.tdb.solver.BindingTDB: boolean caching> = 0;

        return;
    }
}
