class org.jdesktop.swingx.JXTableHeader$HeaderListener extends java.lang.Object implements javax.swing.event.MouseInputListener, java.io.Serializable
{
    private javax.swing.table.TableColumn cachedResizingColumn;
    private javax.swing.SortOrder[] cachedSortOrderCycle;
    final org.jdesktop.swingx.JXTableHeader this$0;

    private void <init>(org.jdesktop.swingx.JXTableHeader)
    {
        org.jdesktop.swingx.JXTableHeader r1;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r1 := @parameter0: org.jdesktop.swingx.JXTableHeader;

        r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: org.jdesktop.swingx.JXTableHeader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void mouseClicked(java.awt.event.MouseEvent)
    {
        java.awt.event.MouseEvent r1;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r1 := @parameter0: java.awt.event.MouseEvent;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: boolean shouldIgnore(java.awt.event.MouseEvent)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void doResize(java.awt.event.MouseEvent)>(r1);

        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void uncacheResizingColumn()>();

        return;
    }

    public void mousePressed(java.awt.event.MouseEvent)
    {
        java.awt.event.MouseEvent r1;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r1 := @parameter0: java.awt.event.MouseEvent;

        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void resetToggleSortOrder(java.awt.event.MouseEvent)>(r1);

        $z0 = specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: boolean shouldIgnore(java.awt.event.MouseEvent)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void cacheResizingColumn(java.awt.event.MouseEvent)>(r1);

        return;
    }

    public void mouseReleased(java.awt.event.MouseEvent)
    {
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;
        int $i0, $i1;
        java.awt.event.MouseEvent r1;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r1 := @parameter0: java.awt.event.MouseEvent;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: boolean shouldIgnore(java.awt.event.MouseEvent)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void cacheResizingColumn(java.awt.event.MouseEvent)>(r1);

        $z1 = specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: boolean isInResizeRegion(java.awt.event.MouseEvent)>(r1);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getClickCount()>();

        $i1 = $i0 % 2;

        if $i1 != 1 goto label2;

        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void disableToggleSortOrder(java.awt.event.MouseEvent)>(r1);

     label2:
        return;
    }

    private boolean shouldIgnore(java.awt.event.MouseEvent)
    {
        org.jdesktop.swingx.JXTableHeader $r2;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r1;
        javax.swing.JTable $r3;
        java.awt.event.MouseEvent r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $z0 = staticinvoke <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>(r0);

        if $z0 == 0 goto label1;

        $r2 = r1.<org.jdesktop.swingx.JXTableHeader$HeaderListener: org.jdesktop.swingx.JXTableHeader this$0>;

        $r3 = staticinvoke <org.jdesktop.swingx.JXTableHeader: javax.swing.JTable access$100(org.jdesktop.swingx.JXTableHeader)>($r2);

        $z1 = virtualinvoke $r3.<javax.swing.JTable: boolean isEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private void doResize(java.awt.event.MouseEvent)
    {
        javax.swing.table.TableColumn $r2;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r1;
        org.jdesktop.swingx.JXTable $r5;
        java.awt.event.MouseEvent r0;
        org.jdesktop.swingx.JXTableHeader $r3, $r4;
        int $i0, $i1;

        r1 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $i0 = virtualinvoke r0.<java.awt.event.MouseEvent: int getClickCount()>();

        if $i0 == 2 goto label1;

        return;

     label1:
        $r3 = r1.<org.jdesktop.swingx.JXTableHeader$HeaderListener: org.jdesktop.swingx.JXTableHeader this$0>;

        $r2 = r1.<org.jdesktop.swingx.JXTableHeader$HeaderListener: javax.swing.table.TableColumn cachedResizingColumn>;

        $i1 = staticinvoke <org.jdesktop.swingx.JXTableHeader: int access$200(org.jdesktop.swingx.JXTableHeader,javax.swing.table.TableColumn)>($r3, $r2);

        if $i1 < 0 goto label2;

        $r4 = r1.<org.jdesktop.swingx.JXTableHeader$HeaderListener: org.jdesktop.swingx.JXTableHeader this$0>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXTableHeader: org.jdesktop.swingx.JXTable getXTable()>();

        virtualinvoke $r5.<org.jdesktop.swingx.JXTable: void packColumn(int,int)>($i1, 5);

     label2:
        return;
    }

    private void disableToggleSortOrder(java.awt.event.MouseEvent)
    {
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;
        org.jdesktop.swingx.JXTable $r2, $r5;
        javax.swing.SortOrder[] $r8, $r9;
        java.awt.event.MouseEvent r10;
        org.jdesktop.swingx.JXTableHeader $r1, $r4;
        javax.swing.RowSorter $r3, $r6;
        org.jdesktop.swingx.sort.SortController r7;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r10 := @parameter0: java.awt.event.MouseEvent;

        $r1 = r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: org.jdesktop.swingx.JXTableHeader this$0>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTableHeader: org.jdesktop.swingx.JXTable getXTable()>();

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXTable: javax.swing.RowSorter getRowSorter()>();

        $z0 = $r3 instanceof org.jdesktop.swingx.sort.SortController;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: org.jdesktop.swingx.JXTableHeader this$0>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXTableHeader: org.jdesktop.swingx.JXTable getXTable()>();

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXTable: javax.swing.RowSorter getRowSorter()>();

        r7 = (org.jdesktop.swingx.sort.SortController) $r6;

        $r8 = interfaceinvoke r7.<org.jdesktop.swingx.sort.SortController: javax.swing.SortOrder[] getSortOrderCycle()>();

        r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: javax.swing.SortOrder[] cachedSortOrderCycle> = $r8;

        $r9 = newarray (javax.swing.SortOrder)[0];

        interfaceinvoke r7.<org.jdesktop.swingx.sort.SortController: void setSortOrderCycle(javax.swing.SortOrder[])>($r9);

        return;
    }

    private void resetToggleSortOrder(java.awt.event.MouseEvent)
    {
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;
        org.jdesktop.swingx.JXTable $r3;
        javax.swing.SortOrder[] $r1, $r5;
        java.awt.event.MouseEvent r7;
        org.jdesktop.swingx.JXTableHeader $r2;
        javax.swing.RowSorter $r4;
        org.jdesktop.swingx.sort.SortController $r6;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r7 := @parameter0: java.awt.event.MouseEvent;

        $r1 = r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: javax.swing.SortOrder[] cachedSortOrderCycle>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: org.jdesktop.swingx.JXTableHeader this$0>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXTableHeader: org.jdesktop.swingx.JXTable getXTable()>();

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXTable: javax.swing.RowSorter getRowSorter()>();

        $r6 = (org.jdesktop.swingx.sort.SortController) $r4;

        $r5 = r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: javax.swing.SortOrder[] cachedSortOrderCycle>;

        interfaceinvoke $r6.<org.jdesktop.swingx.sort.SortController: void setSortOrderCycle(javax.swing.SortOrder[])>($r5);

        r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: javax.swing.SortOrder[] cachedSortOrderCycle> = null;

        return;
    }

    private void cacheResizingColumn(java.awt.event.MouseEvent)
    {
        org.jdesktop.swingx.JXTableHeader $r1;
        javax.swing.table.TableColumn $r2;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;
        java.awt.event.MouseEvent r3;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r3 := @parameter0: java.awt.event.MouseEvent;

        $r1 = r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: org.jdesktop.swingx.JXTableHeader this$0>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTableHeader: javax.swing.table.TableColumn getResizingColumn()>();

        if $r2 == null goto label1;

        r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: javax.swing.table.TableColumn cachedResizingColumn> = $r2;

     label1:
        return;
    }

    private void uncacheResizingColumn()
    {
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: javax.swing.table.TableColumn cachedResizingColumn> = null;

        return;
    }

    private boolean isInResizeRegion(java.awt.event.MouseEvent)
    {
        javax.swing.table.TableColumn $r1;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;
        java.awt.event.MouseEvent r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r2 := @parameter0: java.awt.event.MouseEvent;

        $r1 = r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: javax.swing.table.TableColumn cachedResizingColumn>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void mouseEntered(java.awt.event.MouseEvent)
    {
        java.awt.event.MouseEvent r1;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mouseExited(java.awt.event.MouseEvent)
    {
        java.awt.event.MouseEvent r1;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r1 := @parameter0: java.awt.event.MouseEvent;

        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void uncacheResizingColumn()>();

        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void resetToggleSortOrder(java.awt.event.MouseEvent)>(r1);

        return;
    }

    public void mouseDragged(java.awt.event.MouseEvent)
    {
        java.awt.event.MouseEvent r1;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r1 := @parameter0: java.awt.event.MouseEvent;

        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void uncacheResizingColumn()>();

        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void resetToggleSortOrder(java.awt.event.MouseEvent)>(r1);

        return;
    }

    public void mouseMoved(java.awt.event.MouseEvent)
    {
        java.awt.event.MouseEvent r1;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r1 := @parameter0: java.awt.event.MouseEvent;

        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void resetToggleSortOrder(java.awt.event.MouseEvent)>(r1);

        return;
    }

    void <init>(org.jdesktop.swingx.JXTableHeader, org.jdesktop.swingx.JXTableHeader$1)
    {
        org.jdesktop.swingx.JXTableHeader$1 r2;
        org.jdesktop.swingx.JXTableHeader r1;
        org.jdesktop.swingx.JXTableHeader$HeaderListener r0;

        r0 := @this: org.jdesktop.swingx.JXTableHeader$HeaderListener;

        r1 := @parameter0: org.jdesktop.swingx.JXTableHeader;

        r2 := @parameter1: org.jdesktop.swingx.JXTableHeader$1;

        specialinvoke r0.<org.jdesktop.swingx.JXTableHeader$HeaderListener: void <init>(org.jdesktop.swingx.JXTableHeader)>(r1);

        return;
    }
}
