public class org.springframework.context.support.MessageSourceResourceBundle extends java.util.ResourceBundle
{
    private final org.springframework.context.MessageSource messageSource;
    private final java.util.Locale locale;

    public void <init>(org.springframework.context.MessageSource, java.util.Locale)
    {
        org.springframework.context.support.MessageSourceResourceBundle r0;
        java.util.Locale r2;
        org.springframework.context.MessageSource r1;

        r0 := @this: org.springframework.context.support.MessageSourceResourceBundle;

        r1 := @parameter0: org.springframework.context.MessageSource;

        r2 := @parameter1: java.util.Locale;

        specialinvoke r0.<java.util.ResourceBundle: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "MessageSource must not be null");

        r0.<org.springframework.context.support.MessageSourceResourceBundle: org.springframework.context.MessageSource messageSource> = r1;

        r0.<org.springframework.context.support.MessageSourceResourceBundle: java.util.Locale locale> = r2;

        return;
    }

    public void <init>(org.springframework.context.MessageSource, java.util.Locale, java.util.ResourceBundle)
    {
        java.util.ResourceBundle r3;
        org.springframework.context.support.MessageSourceResourceBundle r0;
        java.util.Locale r2;
        org.springframework.context.MessageSource r1;

        r0 := @this: org.springframework.context.support.MessageSourceResourceBundle;

        r1 := @parameter0: org.springframework.context.MessageSource;

        r2 := @parameter1: java.util.Locale;

        r3 := @parameter2: java.util.ResourceBundle;

        specialinvoke r0.<org.springframework.context.support.MessageSourceResourceBundle: void <init>(org.springframework.context.MessageSource,java.util.Locale)>(r1, r2);

        virtualinvoke r0.<org.springframework.context.support.MessageSourceResourceBundle: void setParent(java.util.ResourceBundle)>(r3);

        return;
    }

    protected java.lang.Object handleGetObject(java.lang.String)
    {
        org.springframework.context.NoSuchMessageException $r5;
        org.springframework.context.support.MessageSourceResourceBundle r0;
        java.util.Locale $r2;
        java.lang.String r1, $r4;
        org.springframework.context.MessageSource $r3;

        r0 := @this: org.springframework.context.support.MessageSourceResourceBundle;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<org.springframework.context.support.MessageSourceResourceBundle: org.springframework.context.MessageSource messageSource>;

        $r2 = r0.<org.springframework.context.support.MessageSourceResourceBundle: java.util.Locale locale>;

        $r4 = interfaceinvoke $r3.<org.springframework.context.MessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.util.Locale)>(r1, null, $r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch org.springframework.context.NoSuchMessageException from label1 to label2 with label3;
    }

    public java.util.Enumeration getKeys()
    {
        org.springframework.context.support.MessageSourceResourceBundle r0;

        r0 := @this: org.springframework.context.support.MessageSourceResourceBundle;

        return null;
    }

    public java.util.Locale getLocale()
    {
        org.springframework.context.support.MessageSourceResourceBundle r0;
        java.util.Locale $r1;

        r0 := @this: org.springframework.context.support.MessageSourceResourceBundle;

        $r1 = r0.<org.springframework.context.support.MessageSourceResourceBundle: java.util.Locale locale>;

        return $r1;
    }
}
