public class org.eclipse.jetty.http.gzip.GzipStream extends javax.servlet.ServletOutputStream
{
    protected javax.servlet.http.HttpServletRequest _request;
    protected javax.servlet.http.HttpServletResponse _response;
    protected java.io.OutputStream _out;
    protected org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut;
    protected java.util.zip.GZIPOutputStream _gzOut;
    protected boolean _closed;
    protected int _bufferSize;
    protected int _minGzipSize;
    protected long _contentLength;
    protected boolean _doNotGzip;

    public void <init>(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, long, int, int) throws java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.http.HttpServletResponse r2;
        int i1, i2;
        long l0;
        org.eclipse.jetty.http.gzip.GzipStream r0;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<javax.servlet.ServletOutputStream: void <init>()>();

        r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletRequest _request> = r1;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response> = r2;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength> = l0;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: int _bufferSize> = i1;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: int _minGzipSize> = i2;

        if i2 != 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doGzip()>();

     label1:
        return;
    }

    public void resetBuffer()
    {
        java.lang.IllegalStateException $r4;
        javax.servlet.http.HttpServletResponse $r1, $r3;
        java.util.zip.GZIPOutputStream $r2;
        org.eclipse.jetty.http.gzip.GzipStream r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        $r1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        $z0 = interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Committed");

        throw $r4;

     label1:
        r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean _closed> = 0;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out> = null;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut> = null;

        $r2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.util.zip.GZIPOutputStream _gzOut>;

        if $r2 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        interfaceinvoke $r3.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Content-Encoding", null);

     label2:
        r0.<org.eclipse.jetty.http.gzip.GzipStream: java.util.zip.GZIPOutputStream _gzOut> = null;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean _doNotGzip> = 0;

        return;
    }

    public void setContentLength(long)
    {
        javax.servlet.http.HttpServletResponse $r1, $r3;
        long l0, $l2, $l4, $l5;
        org.eclipse.jetty.http.gzip.GzipStream r0;
        byte $b1, $b3;
        int $i6, $i7, $i8;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        l0 := @parameter0: long;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength> = l0;

        $z0 = r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean _doNotGzip>;

        if $z0 == 0 goto label2;

        $b1 = l0 cmp 0L;

        $i7 = (int) $b1;

        if $i7 < 0 goto label2;

        $l2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $b3 = $l2 cmp 2147483647L;

        $i8 = (int) $b3;

        if $i8 >= 0 goto label1;

        $r3 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        $l5 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $i6 = (int) $l5;

        interfaceinvoke $r3.<javax.servlet.http.HttpServletResponse: void setContentLength(int)>($i6);

        goto label2;

     label1:
        $r1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        $l4 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Content-Length", $r2);

     label2:
        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1, $r3;
        long $l0, $l3, $l4;
        org.eclipse.jetty.http.gzip.GzipStream r0;
        byte $b1, $b5;
        int $i2, $i6, $i7;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r2;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        $r1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        if $r2 == null goto label3;

     label1:
        $l0 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $b1 = $l0 cmp 0L;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label2;

        $l4 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $i2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: int _minGzipSize>;

        $l3 = (long) $i2;

        $b5 = $l4 cmp $l3;

        $i7 = (int) $b5;

        if $i7 >= 0 goto label2;

        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doNotGzip()>();

        goto label3;

     label2:
        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doGzip()>();

     label3:
        $r3 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        virtualinvoke $r3.<java.io.OutputStream: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        long $l0, $l3, $l4, $l7;
        javax.servlet.http.HttpServletRequest $r1;
        byte $b1, $b5;
        int $i2, $i6, $i8, $i9;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r3, $r7;
        boolean $z0;
        java.io.OutputStream $r4, $r5;
        org.eclipse.jetty.http.gzip.GzipStream r0;
        java.lang.Object $r2;
        java.util.zip.GZIPOutputStream $r6, $r8;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        $z0 = r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean _closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletRequest _request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.include.request_uri");

        if $r2 == null goto label2;

        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void flush()>();

        goto label9;

     label2:
        $r3 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        if $r3 == null goto label5;

        $l0 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $b1 = $l0 cmp 0L;

        $i8 = (int) $b1;

        if $i8 >= 0 goto label3;

        $r7 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        $i6 = virtualinvoke $r7.<org.eclipse.jetty.util.ByteArrayOutputStream2: int getCount()>();

        $l7 = (long) $i6;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength> = $l7;

     label3:
        $l4 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $i2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: int _minGzipSize>;

        $l3 = (long) $i2;

        $b5 = $l4 cmp $l3;

        $i9 = (int) $b5;

        if $i9 >= 0 goto label4;

        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doNotGzip()>();

        goto label6;

     label4:
        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doGzip()>();

        goto label6;

     label5:
        $r4 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        if $r4 != null goto label6;

        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doNotGzip()>();

     label6:
        $r8 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.util.zip.GZIPOutputStream _gzOut>;

        if $r8 == null goto label7;

        $r6 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.util.zip.GZIPOutputStream _gzOut>;

        virtualinvoke $r6.<java.util.zip.GZIPOutputStream: void close()>();

        goto label8;

     label7:
        $r5 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        virtualinvoke $r5.<java.io.OutputStream: void close()>();

     label8:
        r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean _closed> = 1;

     label9:
        return;
    }

    public void finish() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        long $l0, $l3, $l4;
        org.eclipse.jetty.http.gzip.GzipStream r0;
        byte $b1, $b5;
        int $i2, $i6, $i7;
        java.util.zip.GZIPOutputStream $r2, $r4;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        $z0 = r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean _closed>;

        if $z0 != 0 goto label4;

        $r1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        if $r1 == null goto label1;

        $r3 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        if $r3 == null goto label3;

     label1:
        $l0 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $b1 = $l0 cmp 0L;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label2;

        $l4 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $i2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: int _minGzipSize>;

        $l3 = (long) $i2;

        $b5 = $l4 cmp $l3;

        $i7 = (int) $b5;

        if $i7 >= 0 goto label2;

        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doNotGzip()>();

        goto label3;

     label2:
        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doGzip()>();

     label3:
        $r4 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.util.zip.GZIPOutputStream _gzOut>;

        if $r4 == null goto label4;

        $z1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean _closed>;

        if $z1 != 0 goto label4;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean _closed> = 1;

        $r2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.util.zip.GZIPOutputStream _gzOut>;

        virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void close()>();

     label4:
        return;
    }

    public void write(int) throws java.io.IOException
    {
        int i0;
        java.io.OutputStream $r1;
        org.eclipse.jetty.http.gzip.GzipStream r0;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        i0 := @parameter0: int;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void checkOut(int)>(1);

        $r1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] r1;
        int $i0;
        org.eclipse.jetty.http.gzip.GzipStream r0;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void checkOut(int)>($i0);

        $r2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] r1;
        int i0, i1;
        org.eclipse.jetty.http.gzip.GzipStream r0;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void checkOut(int)>(i0);

        $r2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i1, i0);

        return;
    }

    protected boolean setContentEncodingGzip()
    {
        javax.servlet.http.HttpServletResponse $r1, $r2;
        org.eclipse.jetty.http.gzip.GzipStream r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        $r1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Content-Encoding", "gzip");

        $r2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        $z0 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: boolean containsHeader(java.lang.String)>("Content-Encoding");

        return $z0;
    }

    public void doGzip() throws java.io.IOException
    {
        byte[] $r9;
        java.lang.IllegalStateException $r11;
        javax.servlet.ServletOutputStream $r5;
        int $i0, $i1;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r6, $r7, $r10;
        boolean $z0, $z1;
        java.io.OutputStream $r8;
        javax.servlet.http.HttpServletResponse $r2, $r4;
        org.eclipse.jetty.http.gzip.GzipStream r0;
        java.util.zip.GZIPOutputStream $r1, $r3;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        $r1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.util.zip.GZIPOutputStream _gzOut>;

        if $r1 != null goto label3;

        $r2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        $z0 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z0 == 0 goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label1:
        $z1 = virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean setContentEncodingGzip()>();

        if $z1 == 0 goto label2;

        $r3 = new java.util.zip.GZIPOutputStream;

        $r4 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        $r5 = interfaceinvoke $r4.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        $i0 = r0.<org.eclipse.jetty.http.gzip.GzipStream: int _bufferSize>;

        specialinvoke $r3.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream,int)>($r5, $i0);

        r0.<org.eclipse.jetty.http.gzip.GzipStream: java.util.zip.GZIPOutputStream _gzOut> = $r3;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out> = $r3;

        $r6 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        if $r6 == null goto label3;

        $r8 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        $r7 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        $r9 = virtualinvoke $r7.<org.eclipse.jetty.util.ByteArrayOutputStream2: byte[] getBuf()>();

        $r10 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        $i1 = virtualinvoke $r10.<org.eclipse.jetty.util.ByteArrayOutputStream2: int getCount()>();

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[],int,int)>($r9, 0, $i1);

        r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut> = null;

        goto label3;

     label2:
        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doNotGzip()>();

     label3:
        return;
    }

    public void doNotGzip() throws java.io.IOException
    {
        java.io.OutputStream $r2, $r7;
        byte[] $r8;
        java.lang.IllegalStateException $r11;
        javax.servlet.http.HttpServletResponse $r3;
        long $l0;
        org.eclipse.jetty.http.gzip.GzipStream r0;
        javax.servlet.ServletOutputStream $r4;
        int $i1;
        java.util.zip.GZIPOutputStream $r1;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r5, $r6, $r9, $r10;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        $r1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.util.zip.GZIPOutputStream _gzOut>;

        if $r1 == null goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label1:
        $r2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        if $r2 == null goto label2;

        $r10 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        if $r10 == null goto label4;

     label2:
        r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean _doNotGzip> = 1;

        $r3 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        $r4 = interfaceinvoke $r3.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out> = $r4;

        $l0 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void setContentLength(long)>($l0);

        $r5 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        if $r5 == null goto label3;

        $r7 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        $r6 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        $r8 = virtualinvoke $r6.<org.eclipse.jetty.util.ByteArrayOutputStream2: byte[] getBuf()>();

        $r9 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        $i1 = virtualinvoke $r9.<org.eclipse.jetty.util.ByteArrayOutputStream2: int getCount()>();

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r8, 0, $i1);

     label3:
        r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut> = null;

     label4:
        return;
    }

    private void checkOut(int) throws java.io.IOException
    {
        byte[] $r5;
        byte $b1, $b9, $b11, $b17;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.http.gzip.GzipStream r0;
        long $l0, $l7, $l8, $l10, $l15, $l16;
        int i2, $i3, $i4, $i5, $i6, $i12, $i13, $i14, $i18, $i19, $i20, $i21;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r2, $r4, $r6, $r11;
        java.io.OutputStream $r1;
        javax.servlet.http.HttpServletResponse $r3, $r7;
        java.io.IOException $r10;

        r0 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        i2 := @parameter0: int;

        $z0 = r0.<org.eclipse.jetty.http.gzip.GzipStream: boolean _closed>;

        if $z0 == 0 goto label1;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("CLOSED");

        throw $r10;

     label1:
        $r1 = r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out>;

        if $r1 != null goto label5;

        $r7 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        $z2 = interfaceinvoke $r7.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z2 != 0 goto label2;

        $l10 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $b11 = $l10 cmp 0L;

        $i18 = (int) $b11;

        if $i18 < 0 goto label3;

        $l16 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $i14 = r0.<org.eclipse.jetty.http.gzip.GzipStream: int _minGzipSize>;

        $l15 = (long) $i14;

        $b17 = $l16 cmp $l15;

        $i19 = (int) $b17;

        if $i19 >= 0 goto label3;

     label2:
        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doNotGzip()>();

        goto label8;

     label3:
        $i12 = r0.<org.eclipse.jetty.http.gzip.GzipStream: int _minGzipSize>;

        if i2 <= $i12 goto label4;

        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doGzip()>();

        goto label8;

     label4:
        $r11 = new org.eclipse.jetty.util.ByteArrayOutputStream2;

        $i13 = r0.<org.eclipse.jetty.http.gzip.GzipStream: int _bufferSize>;

        specialinvoke $r11.<org.eclipse.jetty.util.ByteArrayOutputStream2: void <init>(int)>($i13);

        r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut> = $r11;

        r0.<org.eclipse.jetty.http.gzip.GzipStream: java.io.OutputStream _out> = $r11;

        goto label8;

     label5:
        $r2 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        if $r2 == null goto label8;

        $r3 = r0.<org.eclipse.jetty.http.gzip.GzipStream: javax.servlet.http.HttpServletResponse _response>;

        $z1 = interfaceinvoke $r3.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z1 != 0 goto label6;

        $l0 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $b1 = $l0 cmp 0L;

        $i20 = (int) $b1;

        if $i20 < 0 goto label7;

        $l8 = r0.<org.eclipse.jetty.http.gzip.GzipStream: long _contentLength>;

        $i6 = r0.<org.eclipse.jetty.http.gzip.GzipStream: int _minGzipSize>;

        $l7 = (long) $i6;

        $b9 = $l8 cmp $l7;

        $i21 = (int) $b9;

        if $i21 >= 0 goto label7;

     label6:
        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doNotGzip()>();

        goto label8;

     label7:
        $r4 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.util.ByteArrayOutputStream2: byte[] getBuf()>();

        $i3 = lengthof $r5;

        $r6 = r0.<org.eclipse.jetty.http.gzip.GzipStream: org.eclipse.jetty.util.ByteArrayOutputStream2 _bOut>;

        $i4 = virtualinvoke $r6.<org.eclipse.jetty.util.ByteArrayOutputStream2: int getCount()>();

        $i5 = $i3 - $i4;

        if i2 < $i5 goto label8;

        virtualinvoke r0.<org.eclipse.jetty.http.gzip.GzipStream: void doGzip()>();

     label8:
        return;
    }

    protected java.io.PrintWriter newWriter(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.io.OutputStream r2;
        java.io.PrintWriter $r4;
        java.io.OutputStreamWriter $r1;
        java.lang.String r0;
        org.eclipse.jetty.http.gzip.GzipStream r3;

        r3 := @this: org.eclipse.jetty.http.gzip.GzipStream;

        r2 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.io.PrintWriter;

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r2);

        goto label2;

     label1:
        $r4 = new java.io.PrintWriter;

        $r1 = new java.io.OutputStreamWriter;

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, r0);

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.Writer)>($r1);

     label2:
        return $r4;
    }
}
