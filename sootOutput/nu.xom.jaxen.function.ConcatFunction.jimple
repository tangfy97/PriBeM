public class nu.xom.jaxen.function.ConcatFunction extends java.lang.Object implements nu.xom.jaxen.Function
{

    public void <init>()
    {
        nu.xom.jaxen.function.ConcatFunction r0;

        r0 := @this: nu.xom.jaxen.function.ConcatFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call(nu.xom.jaxen.Context, java.util.List) throws nu.xom.jaxen.FunctionCallException
    {
        nu.xom.jaxen.FunctionCallException $r1;
        java.util.List r0;
        nu.xom.jaxen.function.ConcatFunction r5;
        int $i0;
        java.lang.String $r4;
        nu.xom.jaxen.Context r2;
        nu.xom.jaxen.Navigator $r3;

        r5 := @this: nu.xom.jaxen.function.ConcatFunction;

        r2 := @parameter0: nu.xom.jaxen.Context;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 < 2 goto label1;

        $r3 = virtualinvoke r2.<nu.xom.jaxen.Context: nu.xom.jaxen.Navigator getNavigator()>();

        $r4 = staticinvoke <nu.xom.jaxen.function.ConcatFunction: java.lang.String evaluate(java.util.List,nu.xom.jaxen.Navigator)>(r0, $r3);

        return $r4;

     label1:
        $r1 = new nu.xom.jaxen.FunctionCallException;

        specialinvoke $r1.<nu.xom.jaxen.FunctionCallException: void <init>(java.lang.String)>("concat() requires at least two arguments");

        throw $r1;
    }

    public static java.lang.String evaluate(java.util.List, nu.xom.jaxen.Navigator)
    {
        java.util.Iterator $r2;
        java.util.List r1;
        java.lang.StringBuffer $r0;
        java.lang.Object $r4;
        java.lang.String $r3, $r6;
        nu.xom.jaxen.Navigator r5;
        boolean $z0;

        r1 := @parameter0: java.util.List;

        r5 := @parameter1: nu.xom.jaxen.Navigator;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = staticinvoke <nu.xom.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>($r4, r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }
}
