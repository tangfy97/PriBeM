public class org.apache.poi.util.LittleEndianInputStream extends java.io.FilterInputStream implements org.apache.poi.util.LittleEndianInput
{

    public void <init>(java.io.InputStream)
    {
        org.apache.poi.util.LittleEndianInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        return;
    }

    public int available()
    {
        org.apache.poi.util.LittleEndianInputStream r0;
        int $i0;
        java.io.IOException $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

     label1:
        $i0 = specialinvoke r0.<java.io.FilterInputStream: int available()>();

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public byte readByte()
    {
        int $i0;
        byte $b1;
        org.apache.poi.util.LittleEndianInputStream r0;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

        $i0 = virtualinvoke r0.<org.apache.poi.util.LittleEndianInputStream: int readUByte()>();

        $b1 = (byte) $i0;

        return $b1;
    }

    public int readUByte()
    {
        org.apache.poi.util.LittleEndianInputStream r0;
        int $i0;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

     label1:
        $r1 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        staticinvoke <org.apache.poi.util.LittleEndianInputStream: void checkEOF(int)>($i0);

        return $i0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public double readDouble()
    {
        long $l0;
        org.apache.poi.util.LittleEndianInputStream r0;
        double $d0;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

        $l0 = virtualinvoke r0.<org.apache.poi.util.LittleEndianInputStream: long readLong()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public int readInt()
    {
        org.apache.poi.util.LittleEndianInputStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.io.IOException $r5;
        java.lang.RuntimeException $r6;
        java.io.InputStream $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

     label1:
        $r1 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $r2 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        $r3 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r3.<java.io.InputStream: int read()>();

        $r4 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i3 = virtualinvoke $r4.<java.io.InputStream: int read()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label4:
        $i4 = $i0 | $i1;

        $i5 = $i4 | $i2;

        $i6 = $i5 | $i3;

        staticinvoke <org.apache.poi.util.LittleEndianInputStream: void checkEOF(int)>($i6);

        $i8 = $i3 << 24;

        $i7 = $i2 << 16;

        $i10 = $i8 + $i7;

        $i9 = $i1 << 8;

        $i12 = $i10 + $i9;

        $i11 = $i0 << 0;

        $i13 = $i12 + $i11;

        return $i13;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public long readLong()
    {
        org.apache.poi.util.LittleEndianInputStream r0;
        long $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l29, $l30, $l32, $l33, $l35, $l36, $l37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i28, $i31, $i34;
        java.io.IOException $r9;
        java.lang.RuntimeException $r10;
        java.io.InputStream $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

     label1:
        $r1 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $r2 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        $r3 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r3.<java.io.InputStream: int read()>();

        $r4 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i3 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        $r5 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i4 = virtualinvoke $r5.<java.io.InputStream: int read()>();

        $r6 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i5 = virtualinvoke $r6.<java.io.InputStream: int read()>();

        $r7 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i6 = virtualinvoke $r7.<java.io.InputStream: int read()>();

        $r8 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i7 = virtualinvoke $r8.<java.io.InputStream: int read()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $i8 = $i0 | $i1;

        $i9 = $i8 | $i2;

        $i10 = $i9 | $i3;

        $i11 = $i10 | $i4;

        $i12 = $i11 | $i5;

        $i13 = $i12 | $i6;

        $i14 = $i13 | $i7;

        staticinvoke <org.apache.poi.util.LittleEndianInputStream: void checkEOF(int)>($i14);

        $l15 = (long) $i7;

        $l18 = $l15 << 56;

        $l16 = (long) $i6;

        $l17 = $l16 << 48;

        $l21 = $l18 + $l17;

        $l19 = (long) $i5;

        $l20 = $l19 << 40;

        $l24 = $l21 + $l20;

        $l22 = (long) $i4;

        $l23 = $l22 << 32;

        $l27 = $l24 + $l23;

        $l25 = (long) $i3;

        $l26 = $l25 << 24;

        $l30 = $l27 + $l26;

        $i28 = $i2 << 16;

        $l29 = (long) $i28;

        $l33 = $l30 + $l29;

        $i31 = $i1 << 8;

        $l32 = (long) $i31;

        $l36 = $l33 + $l32;

        $i34 = $i0 << 0;

        $l35 = (long) $i34;

        $l37 = $l36 + $l35;

        return $l37;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public short readShort()
    {
        int $i0;
        short $s1;
        org.apache.poi.util.LittleEndianInputStream r0;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

        $i0 = virtualinvoke r0.<org.apache.poi.util.LittleEndianInputStream: int readUShort()>();

        $s1 = (short) $i0;

        return $s1;
    }

    public int readUShort()
    {
        org.apache.poi.util.LittleEndianInputStream r0;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.io.InputStream $r1, $r2;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

     label1:
        $r1 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $r2 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        $i2 = $i0 | $i1;

        staticinvoke <org.apache.poi.util.LittleEndianInputStream: void checkEOF(int)>($i2);

        $i4 = $i1 << 8;

        $i3 = $i0 << 0;

        $i5 = $i4 + $i3;

        return $i5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void checkEOF(int)
    {
        int i0;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unexpected end-of-file");

        throw $r0;

     label1:
        return;
    }

    public void readFully(byte[])
    {
        int $i0;
        byte[] r1;
        org.apache.poi.util.LittleEndianInputStream r0;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianInputStream: void readFully(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void readFully(byte[], int, int)
    {
        byte[] r2;
        org.apache.poi.util.LittleEndianInputStream r0;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;
        byte $b4;
        int i0, i1, i2, $i3, i5;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.LittleEndianInputStream;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0 + i1;

        i5 = i0;

     label1:
        if i5 >= i2 goto label6;

     label2:
        $r1 = r0.<org.apache.poi.util.LittleEndianInputStream: java.io.InputStream in>;

        $i3 = virtualinvoke $r1.<java.io.InputStream: int read()>();

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label5:
        staticinvoke <org.apache.poi.util.LittleEndianInputStream: void checkEOF(int)>($i3);

        $b4 = (byte) $i3;

        r2[i5] = $b4;

        i5 = i5 + 1;

        goto label1;

     label6:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }
}
