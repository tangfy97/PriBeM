public class org.codehaus.groovy.tools.shell.Groovysh extends org.codehaus.groovy.tools.shell.Shell
{
    private static final java.lang.String NEWLINE;
    private static final org.codehaus.groovy.tools.shell.util.MessageSource messages;
    private final org.codehaus.groovy.tools.shell.BufferManager buffers;
    private final groovy.lang.GroovyShell interp;
    private final java.util.List imports;
    private org.codehaus.groovy.tools.shell.InteractiveShellRunner runner;
    private jline.History history;
    private static final java.lang.String EVAL_SCRIPT_FILENAME;
    private org.codehaus.groovy.tools.shell.util.ANSI$Renderer prompt;
    private final groovy.lang.Closure defaultResultHook;
    private groovy.lang.Closure resultHook;
    private final groovy.lang.Closure defaultErrorHook;
    private groovy.lang.Closure errorHook;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697085;
    static java.lang.Class class$java$util$List;
    static java.lang.Class class$java$lang$Class;
    static java.lang.Class class$java$lang$IllegalStateException;
    static java.lang.Class class$jline$Terminal;
    static java.lang.Class class$jline$History;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$XmlCommandRegistrar;
    static java.lang.Class class$groovy$lang$Script;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager;
    static java.lang.Class class$groovy$lang$GroovyShell;
    static java.lang.Class class$java$lang$Error;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$io$File;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$InteractiveShellRunner;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$groovy$lang$Closure;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI$Renderer;
    static java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$IO;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences;
    static java.lang.Class class$groovy$lang$Binding;
    static java.lang.Class class$org$codehaus$groovy$control$SourceUnit;
    static java.lang.Class class$java$lang$Thread;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$Throwable;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$Shell;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource;
    static java.lang.Class class$java$lang$Integer;
    static java.lang.Class class$org$codehaus$groovy$runtime$StackTraceUtils;
    static java.lang.Class class$java$lang$System;

    public void <init>(java.lang.ClassLoader, groovy.lang.Binding, org.codehaus.groovy.tools.shell.IO)
    {
        groovy.lang.Closure $r25, $r26, $r29, $r33, $r34, $r37;
        org.codehaus.groovy.tools.shell.Groovysh r5;
        java.lang.ClassLoader r38;
        java.lang.Object[] $r12, $r43, $r49, $r51, $r53, $r59;
        org.codehaus.groovy.tools.shell.BufferManager $r11;
        java.lang.StringBuffer $r39, $r41;
        groovy.lang.Binding r40;
        boolean $z0, $z1;
        java.util.List $r13, $r16;
        org.codehaus.groovy.tools.shell.IO r3, $r7;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r55;
        groovy.lang.GroovyShell $r47;
        java.lang.Class $r0, r1, $r2, $r4, $r9, $r14, $r17, $r19, $r23, $r27, $r31, $r35, $r42, $r45, $r48, $r57, $r58, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73;
        java.lang.Object $r6, $r8, $r10, $r15, $r18, $r20, $r24, $r28, $r32, $r36, $r44, $r46, $r50, $r52, $r54, $r56;
        org.codehaus.groovy.tools.shell.Groovysh$_closure2 $r30;
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer $r21;
        org.codehaus.groovy.tools.shell.Groovysh$_closure1 $r22;

        r5 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r38 := @parameter0: java.lang.ClassLoader;

        r40 := @parameter1: groovy.lang.Binding;

        r3 := @parameter2: org.codehaus.groovy.tools.shell.IO;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r57 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r57;

        goto label02;

     label01:
        $r57 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r57;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r58 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r58;

        goto label04;

     label03:
        $r58 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r59 = newarray (java.lang.Object)[1];

        $r59[0] = r3;

        $r4 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$Shell>;

        if $r4 != null goto label05;

        $r60 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$Shell> = $r60;

        goto label06;

     label05:
        $r60 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$Shell>;

     label06:
        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r59, 2, $r60);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r56 = $r59[0];

        $r59 = (java.lang.Object[]) $r56;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label09;
            default: goto label10;
        };

     label08:
        specialinvoke r5.<org.codehaus.groovy.tools.shell.Shell: void <init>()>();

        goto label11;

     label09:
        $r6 = $r59[0];

        $r7 = (org.codehaus.groovy.tools.shell.IO) $r6;

        specialinvoke r5.<org.codehaus.groovy.tools.shell.Shell: void <init>(org.codehaus.groovy.tools.shell.IO)>($r7);

        goto label11;

     label10:
        $r55 = new java.lang.IllegalArgumentException;

        specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r55;

     label11:
        $r61 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager>;

        if $r61 != null goto label12;

        $r62 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.BufferManager");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager> = $r62;

        goto label13;

     label12:
        $r62 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager>;

     label13:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r62);

        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager>;

        if $r9 != null goto label14;

        $r63 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.BufferManager");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager> = $r63;

        goto label15;

     label14:
        $r63 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager>;

     label15:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, $r63);

        $r11 = (org.codehaus.groovy.tools.shell.BufferManager) $r10;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.BufferManager buffers> = $r11;

        $r12 = newarray (java.lang.Object)[0];

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r12);

        $r14 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$util$List>;

        if $r14 != null goto label16;

        $r64 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$util$List> = $r64;

        goto label17;

     label16:
        $r64 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$util$List>;

     label17:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r64);

        $r16 = (java.util.List) $r15;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: java.util.List imports> = $r16;

        $r17 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI$Renderer>;

        if $r17 != null goto label18;

        $r65 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.ANSI$Renderer");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI$Renderer> = $r65;

        goto label19;

     label18:
        $r65 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI$Renderer>;

     label19:
        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r65);

        $r19 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI$Renderer>;

        if $r19 != null goto label20;

        $r66 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.ANSI$Renderer");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI$Renderer> = $r66;

        goto label21;

     label20:
        $r66 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI$Renderer>;

     label21:
        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r18, $r66);

        $r21 = (org.codehaus.groovy.tools.shell.util.ANSI$Renderer) $r20;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.util.ANSI$Renderer prompt> = $r21;

        $r22 = new org.codehaus.groovy.tools.shell.Groovysh$_closure1;

        specialinvoke $r22.<org.codehaus.groovy.tools.shell.Groovysh$_closure1: void <init>(java.lang.Object,java.lang.Object)>(r5, r5);

        $r23 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r23 != null goto label22;

        $r67 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r67;

        goto label23;

     label22:
        $r67 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label23:
        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r22, $r67);

        $r25 = (groovy.lang.Closure) $r24;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure defaultResultHook> = $r25;

        $r26 = r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure defaultResultHook>;

        $r27 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r27 != null goto label24;

        $r68 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r68;

        goto label25;

     label24:
        $r68 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label25:
        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r26, $r68);

        $r29 = (groovy.lang.Closure) $r28;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure resultHook> = $r29;

        $r30 = new org.codehaus.groovy.tools.shell.Groovysh$_closure2;

        specialinvoke $r30.<org.codehaus.groovy.tools.shell.Groovysh$_closure2: void <init>(java.lang.Object,java.lang.Object)>(r5, r5);

        $r31 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r31 != null goto label26;

        $r69 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r69;

        goto label27;

     label26:
        $r69 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label27:
        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r30, $r69);

        $r33 = (groovy.lang.Closure) $r32;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure defaultErrorHook> = $r33;

        $r34 = r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure defaultErrorHook>;

        $r35 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r35 != null goto label28;

        $r70 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r70;

        goto label29;

     label28:
        $r70 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label29:
        $r36 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r34, $r70);

        $r37 = (groovy.lang.Closure) $r36;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure errorHook> = $r37;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r38);

        if $z0 == 0 goto label30;

        goto label31;

     label30:
        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>(java.lang.String)>("classLoader. Values: ");

        virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("classLoader = ");

        virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r38);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r39, null);

     label31:
        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r40);

        if $z1 == 0 goto label32;

        goto label33;

     label32:
        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>(java.lang.String)>("binding. Values: ");

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("binding = ");

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r40);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r41, null);

     label33:
        $r42 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$GroovyShell>;

        if $r42 != null goto label34;

        $r71 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyShell");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$GroovyShell> = $r71;

        goto label35;

     label34:
        $r71 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$GroovyShell>;

     label35:
        $r43 = newarray (java.lang.Object)[2];

        $r43[0] = r38;

        $r43[1] = r40;

        $r44 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r71, $r43);

        $r45 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$GroovyShell>;

        if $r45 != null goto label36;

        $r72 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyShell");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$GroovyShell> = $r72;

        goto label37;

     label36:
        $r72 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$GroovyShell>;

     label37:
        $r46 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r44, $r72);

        $r47 = (groovy.lang.GroovyShell) $r46;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.GroovyShell interp> = $r47;

        $r48 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$XmlCommandRegistrar>;

        if $r48 != null goto label38;

        $r73 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.XmlCommandRegistrar");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$XmlCommandRegistrar> = $r73;

        goto label39;

     label38:
        $r73 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$XmlCommandRegistrar>;

     label39:
        $r49 = newarray (java.lang.Object)[2];

        $r49[0] = r5;

        $r49[1] = r38;

        $r50 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r73, $r49);

        $r51 = newarray (java.lang.Object)[1];

        $r52 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrent0(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "getClass");

        $r53 = newarray (java.lang.Object)[1];

        $r53[0] = "commands.xml";

        $r54 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r52, "getResource", $r53);

        $r51[0] = $r54;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r50, "register", $r51);

        return;
    }

    public void <init>(groovy.lang.Binding, org.codehaus.groovy.tools.shell.IO)
    {
        java.lang.Object[] $r25;
        org.codehaus.groovy.tools.shell.Groovysh r8;
        int $i0, $i1, $i2;
        groovy.lang.Binding r6, $r14, $r18;
        java.lang.IllegalArgumentException $r21;
        org.codehaus.groovy.tools.shell.IO r7, $r10, $r16, $r20;
        java.lang.Class $r0, r1, $r2, $r3, $r23, $r24, $r26;
        java.lang.Object $r4, $r5, $r9, $r11, $r13, $r15, $r17, $r19, $r22;
        java.lang.ClassLoader $r12;

        r8 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r6 := @parameter0: groovy.lang.Binding;

        r7 := @parameter1: org.codehaus.groovy.tools.shell.IO;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r23 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r23;

        goto label02;

     label01:
        $r23 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r23;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r24 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r24;

        goto label04;

     label03:
        $r24 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r25 = newarray (java.lang.Object)[3];

        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Thread>;

        if $r3 != null goto label05;

        $r26 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Thread");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Thread> = $r26;

        goto label06;

     label05:
        $r26 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Thread>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r26, "currentThread");

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "contextClassLoader");

        $r25[0] = $r5;

        $r25[1] = r6;

        $r25[2] = r7;

        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r25, 4, r1);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r22 = $r25[0];

        $r25 = (java.lang.Object[]) $r22;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            default: goto label12;
        };

     label08:
        specialinvoke r8.<org.codehaus.groovy.tools.shell.Groovysh: void <init>()>();

        goto label13;

     label09:
        $r17 = $r25[0];

        $r18 = (groovy.lang.Binding) $r17;

        $r19 = $r25[1];

        $r20 = (org.codehaus.groovy.tools.shell.IO) $r19;

        specialinvoke r8.<org.codehaus.groovy.tools.shell.Groovysh: void <init>(groovy.lang.Binding,org.codehaus.groovy.tools.shell.IO)>($r18, $r20);

        goto label13;

     label10:
        $r11 = $r25[0];

        $r12 = (java.lang.ClassLoader) $r11;

        $r13 = $r25[1];

        $r14 = (groovy.lang.Binding) $r13;

        $r15 = $r25[2];

        $r16 = (org.codehaus.groovy.tools.shell.IO) $r15;

        specialinvoke r8.<org.codehaus.groovy.tools.shell.Groovysh: void <init>(java.lang.ClassLoader,groovy.lang.Binding,org.codehaus.groovy.tools.shell.IO)>($r12, $r14, $r16);

        goto label13;

     label11:
        $r9 = $r25[0];

        $r10 = (org.codehaus.groovy.tools.shell.IO) $r9;

        specialinvoke r8.<org.codehaus.groovy.tools.shell.Groovysh: void <init>(org.codehaus.groovy.tools.shell.IO)>($r10);

        goto label13;

     label12:
        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r21;

     label13:
        return;
    }

    public void <init>(org.codehaus.groovy.tools.shell.IO)
    {
        java.lang.Object[] $r23;
        org.codehaus.groovy.tools.shell.Groovysh r6;
        int $i0, $i1, $i2;
        groovy.lang.Binding $r12, $r16;
        java.lang.IllegalArgumentException $r19;
        org.codehaus.groovy.tools.shell.IO r5, $r8, $r14, $r18;
        java.lang.Class $r0, r1, $r2, $r3, $r21, $r22, $r24;
        java.lang.Object $r4, $r7, $r9, $r11, $r13, $r15, $r17, $r20;
        java.lang.ClassLoader $r10;

        r6 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r5 := @parameter0: org.codehaus.groovy.tools.shell.IO;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r21;

        goto label02;

     label01:
        $r21 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r21;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r22 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r22;

        goto label04;

     label03:
        $r22 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r23 = newarray (java.lang.Object)[2];

        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Binding>;

        if $r3 != null goto label05;

        $r24 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Binding");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Binding> = $r24;

        goto label06;

     label05:
        $r24 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Binding>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r24);

        $r23[0] = $r4;

        $r23[1] = r5;

        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r23, 4, r1);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r20 = $r23[0];

        $r23 = (java.lang.Object[]) $r20;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            default: goto label12;
        };

     label08:
        specialinvoke r6.<org.codehaus.groovy.tools.shell.Groovysh: void <init>()>();

        goto label13;

     label09:
        $r15 = $r23[0];

        $r16 = (groovy.lang.Binding) $r15;

        $r17 = $r23[1];

        $r18 = (org.codehaus.groovy.tools.shell.IO) $r17;

        specialinvoke r6.<org.codehaus.groovy.tools.shell.Groovysh: void <init>(groovy.lang.Binding,org.codehaus.groovy.tools.shell.IO)>($r16, $r18);

        goto label13;

     label10:
        $r9 = $r23[0];

        $r10 = (java.lang.ClassLoader) $r9;

        $r11 = $r23[1];

        $r12 = (groovy.lang.Binding) $r11;

        $r13 = $r23[2];

        $r14 = (org.codehaus.groovy.tools.shell.IO) $r13;

        specialinvoke r6.<org.codehaus.groovy.tools.shell.Groovysh: void <init>(java.lang.ClassLoader,groovy.lang.Binding,org.codehaus.groovy.tools.shell.IO)>($r10, $r12, $r14);

        goto label13;

     label11:
        $r7 = $r23[0];

        $r8 = (org.codehaus.groovy.tools.shell.IO) $r7;

        specialinvoke r6.<org.codehaus.groovy.tools.shell.Groovysh: void <init>(org.codehaus.groovy.tools.shell.IO)>($r8);

        goto label13;

     label12:
        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r19;

     label13:
        return;
    }

    public void <init>()
    {
        java.lang.Object[] $r22;
        org.codehaus.groovy.tools.shell.Groovysh r5;
        int $i0, $i1, $i2;
        groovy.lang.Binding $r11, $r15;
        java.lang.IllegalArgumentException $r18;
        org.codehaus.groovy.tools.shell.IO $r7, $r13, $r17;
        java.lang.Class $r0, r1, $r2, $r3, $r20, $r21, $r23;
        java.lang.Object $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r19;
        java.lang.ClassLoader $r9;

        r5 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r20;

        goto label02;

     label01:
        $r20 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r20;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r21;

        goto label04;

     label03:
        $r21 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r22 = newarray (java.lang.Object)[1];

        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

        if $r3 != null goto label05;

        $r23 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.IO");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$IO> = $r23;

        goto label06;

     label05:
        $r23 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r23);

        $r22[0] = $r4;

        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r22, 4, r1);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r19 = $r22[0];

        $r22 = (java.lang.Object[]) $r19;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            default: goto label12;
        };

     label08:
        specialinvoke r5.<org.codehaus.groovy.tools.shell.Groovysh: void <init>()>();

        goto label13;

     label09:
        $r14 = $r22[0];

        $r15 = (groovy.lang.Binding) $r14;

        $r16 = $r22[1];

        $r17 = (org.codehaus.groovy.tools.shell.IO) $r16;

        specialinvoke r5.<org.codehaus.groovy.tools.shell.Groovysh: void <init>(groovy.lang.Binding,org.codehaus.groovy.tools.shell.IO)>($r15, $r17);

        goto label13;

     label10:
        $r8 = $r22[0];

        $r9 = (java.lang.ClassLoader) $r8;

        $r10 = $r22[1];

        $r11 = (groovy.lang.Binding) $r10;

        $r12 = $r22[2];

        $r13 = (org.codehaus.groovy.tools.shell.IO) $r12;

        specialinvoke r5.<org.codehaus.groovy.tools.shell.Groovysh: void <init>(java.lang.ClassLoader,groovy.lang.Binding,org.codehaus.groovy.tools.shell.IO)>($r9, $r11, $r13);

        goto label13;

     label11:
        $r6 = $r22[0];

        $r7 = (org.codehaus.groovy.tools.shell.IO) $r6;

        specialinvoke r5.<org.codehaus.groovy.tools.shell.Groovysh: void <init>(org.codehaus.groovy.tools.shell.IO)>($r7);

        goto label13;

     label12:
        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r18;

     label13:
        return;
    }

    public java.lang.Object execute(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.Groovysh r8;
        java.lang.Integer $r7, $r20;
        java.lang.Throwable $r36, $r38;
        java.lang.Object[] $r9, $r10, $r12, $r14, $r18, $r19, $r30, $r32, $r39, $r45, $r48;
        org.codehaus.groovy.tools.shell.BufferManager $r15, $r40, $r47;
        java.lang.StringBuffer $r4;
        java.lang.String r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.codehaus.groovy.runtime.GStringImpl $r31;
        java.util.List $r13;
        java.lang.String[] $r34;
        java.lang.Class $r0, r1, $r2, $r23, $r25, $r27, $r29, $r41, $r50, $r53, $r56, $r57, $r58, $r60, $r61, $r62, $r63, $r64, $r65;
        java.lang.Object $r5, $r6, $r11, $r16, $r17, $r21, $r22, $r24, $r26, $r28, $r33, $r35, $r37, $r42, $r43, $r44, $r46, $r49, $r51, $r52, $r54, $r55, r59;

        r8 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r3 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r56 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r56;

        goto label02;

     label01:
        $r56 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r56;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r57 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r57;

        goto label04;

     label03:
        $r57 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r3, null);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("(line != null). Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("line = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label06:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "trim");

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r5, "size");

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z1 == 0 goto label09;

        $r53 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

        if $r53 != null goto label07;

        $r58 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object> = $r58;

        goto label08;

     label07:
        $r58 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

     label08:
        $r54 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r58);

        $r55 = (java.lang.Object) $r54;

        return $r55;

     label09:
        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r3;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r8, "maybeRecordInput", $r9);

        r59 = null;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r3;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r8, "isExecutable", $r10);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r11);

        if $z2 == 0 goto label13;

        $r48 = newarray (java.lang.Object)[1];

        $r48[0] = r3;

        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r8, "executeCommand", $r48);

        $z6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r49);

        if $z6 == 0 goto label10;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setGroovyObjectProperty(java.lang.Object,java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>($r49, r1, r8, "lastResult");

        goto label10;

     label10:
        $r50 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

        if $r50 != null goto label11;

        $r60 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object> = $r60;

        goto label12;

     label11:
        $r60 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

     label12:
        $r51 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r49, $r60);

        $r52 = (java.lang.Object) $r51;

        return $r52;

     label13:
        $r12 = newarray (java.lang.Object)[0];

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r12);

        $r14 = newarray (java.lang.Object)[1];

        $r15 = r8.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.BufferManager buffers>;

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r15, "current");

        $r14[0] = $r16;

        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r13, "plus", $r14);

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = r3;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r17, "leftShift", $r18);

        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = $r17;

        $r20 = new java.lang.Integer;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>(1);

        $r19[1] = $r20;

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r8, "parse", $r19);

        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r21, "code");

        $r23 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode>;

        if $r23 != null goto label14;

        $r61 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseCode");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode> = $r61;

        goto label15;

     label14:
        $r61 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode>;

     label15:
        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r61, "COMPLETE");

        $z3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r22, $r24);

        if $z3 == 0 goto label16;

        $r45 = newarray (java.lang.Object)[1];

        $r45[0] = $r17;

        $r46 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r8, "evaluate", $r45);

        r59 = $r46;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setGroovyObjectProperty(java.lang.Object,java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>($r46, r1, r8, "lastResult");

        $r47 = r8.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.BufferManager buffers>;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r47, "clearSelected");

        goto label25;

     label16:
        $r25 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode>;

        if $r25 != null goto label17;

        $r62 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseCode");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode> = $r62;

        goto label18;

     label17:
        $r62 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode>;

     label18:
        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r62, "INCOMPLETE");

        $z4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r22, $r26);

        if $z4 == 0 goto label19;

        $r40 = r8.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.BufferManager buffers>;

        $r39 = newarray (java.lang.Object)[1];

        $r39[0] = $r17;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r40, "updateSelected", $r39);

        goto label25;

     label19:
        $r27 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode>;

        if $r27 != null goto label20;

        $r63 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseCode");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode> = $r63;

        goto label21;

     label20:
        $r63 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode>;

     label21:
        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r63, "ERROR");

        $z5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r22, $r28);

        if $z5 == 0 goto label22;

        $r37 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r21, "cause");

        $r38 = (java.lang.Throwable) $r37;

        throw $r38;

     label22:
        $r29 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Error>;

        if $r29 != null goto label23;

        $r64 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Error");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Error> = $r64;

        goto label24;

     label23:
        $r64 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Error>;

     label24:
        $r30 = newarray (java.lang.Object)[1];

        $r31 = new org.codehaus.groovy.runtime.GStringImpl;

        $r32 = newarray (java.lang.Object)[1];

        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r21, "code");

        $r32[0] = $r33;

        $r34 = newarray (java.lang.String)[2];

        $r34[0] = "Invalid parse status: ";

        $r34[1] = "";

        specialinvoke $r31.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r32, $r34);

        $r30[0] = $r31;

        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r64, $r30);

        $r36 = (java.lang.Throwable) $r35;

        throw $r36;

     label25:
        $r44 = r59;

        $r41 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

        if $r41 != null goto label26;

        $r65 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object> = $r65;

        goto label27;

     label26:
        $r65 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

     label27:
        $r42 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r44, $r65);

        $r43 = (java.lang.Object) $r42;

        return $r43;
    }

    protected java.lang.Object executeCommand(java.lang.String)
    {
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.Groovysh r3;
        java.lang.Class $r0, $r1, $r2, $r7, $r10, $r11, $r12, $r13;
        java.lang.Object $r6, $r8, $r9;
        java.lang.String r5;

        r3 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r5 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$Shell>;

        if $r2 != null goto label5;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$Shell> = $r12;

        goto label6;

     label5:
        $r12 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$Shell>;

     label6:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuperN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>($r12, r3, "execute", $r4);

        $r7 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

        if $r7 != null goto label7;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object> = $r13;

        goto label8;

     label7:
        $r13 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

     label8:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r13);

        $r9 = (java.lang.Object) $r8;

        return $r9;
    }

    private org.codehaus.groovy.tools.shell.ParseStatus parse(java.util.List, int)
    {
        org.codehaus.groovy.tools.shell.Groovysh r5;
        java.lang.Integer $r123, $r124, $r125, $r126, $r127, $r128;
        org.codehaus.groovy.tools.shell.ParseStatus $r36, $r47, $r59;
        java.lang.Object[] $r6, $r9, $r15, $r17, $r24, $r31, $r42, $r50, $r52, $r55, $r65, $r69, $r71, $r75, $r77, $r81, $r83, $r87, $r89, $r93, $r105, $r115;
        java.lang.StringBuffer $r121;
        org.codehaus.groovy.control.SourceUnit $r29, r99;
        org.codehaus.groovy.runtime.GStringImpl $r122, $r129;
        int i0, $i2, $i4, $i6, $i8, $i10;
        java.lang.Boolean $r111;
        java.lang.Class $r0, r1, $r2, $r12, $r19, $r21, $r23, $r27, $r32, $r33, $r37, $r43, $r44, $r48, $r54, $r57, $r95, $r96, $r97, $r98, $r100, $r102, $r103, $r104, $r106, $r107, $r109, $r110, $r112, $r113, $r114, $r116, $r117, $r119, $r120;
        java.lang.Object $r8, $r11, $r13, $r14, $r20, $r22, $r25, $r26, $r28, $r30, $r34, $r35, $r41, $r45, $r46, $r49, $r56, $r58, $r61, $r62, $r64, $r67, $r68, $r70, $r73, $r74, $r76, $r79, $r80, $r82, $r85, $r86, $r88, $r91, $r92, $r94, $r108, $r118;
        org.codehaus.groovy.control.CompilationFailedException $r60;
        java.lang.Throwable $r39, $r40, r101;
        java.lang.String $r10, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.List r3, $r7;
        java.lang.String[] $r18, $r53;

        r5 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r3 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r95 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r95;

        goto label02;

     label01:
        $r95 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r95;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r96 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r96;

        goto label04;

     label03:
        $r96 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r3);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r121 = new java.lang.StringBuffer;

        specialinvoke $r121.<java.lang.StringBuffer: void <init>(java.lang.String)>("buffer. Values: ");

        virtualinvoke $r121.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("buffer = ");

        virtualinvoke $r121.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r121, null);

     label06:
        $r7 = r5.<org.codehaus.groovy.tools.shell.Groovysh: java.util.List imports>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r3;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r7, "plus", $r6);

        $r9 = newarray (java.lang.Object)[1];

        $r10 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.String NEWLINE>;

        $r9[0] = $r10;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r8, "join", $r9);

        $r12 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

        if $r12 != null goto label07;

        $r97 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String> = $r97;

        goto label08;

     label07:
        $r97 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

     label08:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, $r97);

        $r38 = (java.lang.String) $r13;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r15 = newarray (java.lang.Object)[1];

        $r122 = new org.codehaus.groovy.runtime.GStringImpl;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = $r38;

        $r18 = newarray (java.lang.String)[2];

        $r18[0] = "Parsing: ";

        $r18[1] = "";

        specialinvoke $r122.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r17, $r18);

        $r15[0] = $r122;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r14, "debug", $r15);

        $r19 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$control$SourceUnit>;

        if $r19 != null goto label09;

        $r98 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.control.SourceUnit");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$control$SourceUnit> = $r98;

        goto label10;

     label09:
        $r98 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$control$SourceUnit>;

     label10:
        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r98);

        r99 = (org.codehaus.groovy.control.SourceUnit) $r20;

        $r21 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Throwable>;

        if $r21 != null goto label11;

        $r100 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Throwable> = $r100;

        goto label12;

     label11:
        $r100 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Throwable>;

     label12:
        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r100);

        r101 = (java.lang.Throwable) $r22;

     label13:
        $r23 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$control$SourceUnit>;

        if $r23 != null goto label14;

        $r102 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.control.SourceUnit");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$control$SourceUnit> = $r102;

        goto label15;

     label14:
        $r102 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$control$SourceUnit>;

     label15:
        $r24 = newarray (java.lang.Object)[3];

        $r24[0] = "groovysh_parse";

        $r24[1] = $r38;

        $r25 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>(i0);

        $r24[2] = $r25;

        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r102, "create", $r24);

        $r27 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$control$SourceUnit>;

        if $r27 != null goto label16;

        $r103 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.control.SourceUnit");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$control$SourceUnit> = $r103;

        goto label17;

     label16:
        $r103 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$control$SourceUnit>;

     label17:
        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r26, $r103);

        $r29 = (org.codehaus.groovy.control.SourceUnit) $r28;

        r99 = $r29;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r29, "parse");

        $r30 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r31 = newarray (java.lang.Object)[1];

        $r31[0] = "Parse complete";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r30, "debug", $r31);

        $r32 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

        if $r32 != null goto label18;

        $r37 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseStatus");

        $r104 = $r37;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus> = $r37;

        goto label19;

     label18:
        $r104 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

     label19:
        $r105 = newarray (java.lang.Object)[1];

        $r33 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode>;

        if $r33 != null goto label20;

        $r106 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseCode");

        $r107 = $r106;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode> = $r106;

        goto label21;

     label20:
        $r107 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode>;

     label21:
        $r108 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r107, "COMPLETE");

        $r105[0] = $r108;

        $r34 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r104, $r105);

        $r109 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

        if $r109 != null goto label22;

        $r110 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseStatus");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus> = $r110;

        goto label23;

     label22:
        $r110 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

     label23:
        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r34, $r110);

        $r36 = (org.codehaus.groovy.tools.shell.ParseStatus) $r35;

        return $r36;

     label24:
        $r60 := @caughtexception;

        $r61 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r99, "errorCollector");

        $r62 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r61, "errorCount");

        $r123 = new java.lang.Integer;

        specialinvoke $r123.<java.lang.Integer: void <init>(int)>(1);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>($r62, $r123);

        if $z2 == 0 goto label26;

     label25:
        $r111 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label29;

     label26:
        $r64 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r99, "failedWithUnexpectedEOF");

        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r64);

        if $z3 != 0 goto label27;

        $z10 = 1;

        goto label28;

     label27:
        $z10 = 0;

     label28:
        if $z10 != 0 goto label25;

        $r111 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label29:
        $z4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r111);

        if $z4 == 0 goto label36;

        $r65 = newarray (java.lang.Object)[1];

        $r124 = new java.lang.Integer;

        $i2 = (int) -1;

        specialinvoke $r124.<java.lang.Integer: void <init>(int)>($i2);

        $r65[0] = $r124;

        $r67 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "getAt", $r65);

        $r68 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r67, "trim");

        $r69 = newarray (java.lang.Object)[1];

        $r69[0] = "{";

        $r70 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r68, "endsWith", $r69);

        $z5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r70);

        if $z5 == 0 goto label30;

        goto label35;

     label30:
        $r71 = newarray (java.lang.Object)[1];

        $r125 = new java.lang.Integer;

        $i4 = (int) -1;

        specialinvoke $r125.<java.lang.Integer: void <init>(int)>($i4);

        $r71[0] = $r125;

        $r73 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "getAt", $r71);

        $r74 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r73, "trim");

        $r75 = newarray (java.lang.Object)[1];

        $r75[0] = "[";

        $r76 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r74, "endsWith", $r75);

        $z6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r76);

        if $z6 == 0 goto label31;

        goto label35;

     label31:
        $r77 = newarray (java.lang.Object)[1];

        $r126 = new java.lang.Integer;

        $i6 = (int) -1;

        specialinvoke $r126.<java.lang.Integer: void <init>(int)>($i6);

        $r77[0] = $r126;

        $r79 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "getAt", $r77);

        $r80 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r79, "trim");

        $r81 = newarray (java.lang.Object)[1];

        $r81[0] = "\'\'\'";

        $r82 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r80, "endsWith", $r81);

        $z7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r82);

        if $z7 == 0 goto label32;

        goto label35;

     label32:
        $r83 = newarray (java.lang.Object)[1];

        $r127 = new java.lang.Integer;

        $i8 = (int) -1;

        specialinvoke $r127.<java.lang.Integer: void <init>(int)>($i8);

        $r83[0] = $r127;

        $r85 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "getAt", $r83);

        $r86 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r85, "trim");

        $r87 = newarray (java.lang.Object)[1];

        $r87[0] = "\"\"\"";

        $r88 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r86, "endsWith", $r87);

        $z8 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r88);

        if $z8 == 0 goto label33;

        goto label35;

     label33:
        $r89 = newarray (java.lang.Object)[1];

        $r128 = new java.lang.Integer;

        $i10 = (int) -1;

        specialinvoke $r128.<java.lang.Integer: void <init>(int)>($i10);

        $r89[0] = $r128;

        $r91 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "getAt", $r89);

        $r92 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r91, "trim");

        $r93 = newarray (java.lang.Object)[1];

        $r93[0] = "\\";

        $r94 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r92, "endsWith", $r93);

        $z9 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r94);

        if $z9 == 0 goto label34;

        goto label35;

     label34:
        r101 = $r60;

     label35:
        goto label36;

     label36:
        goto label38;

     label37:
        $r40 := @caughtexception;

        r101 = $r40;

        goto label38;

     label38:
        goto label40;

     label39:
        $r39 := @caughtexception;

        throw $r39;

     label40:
        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r101);

        if $z1 == 0 goto label45;

        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r50 = newarray (java.lang.Object)[1];

        $r129 = new org.codehaus.groovy.runtime.GStringImpl;

        $r52 = newarray (java.lang.Object)[1];

        $r52[0] = r101;

        $r53 = newarray (java.lang.String)[2];

        $r53[0] = "Parse error: ";

        $r53[1] = "";

        specialinvoke $r129.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r52, $r53);

        $r50[0] = $r129;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r49, "debug", $r50);

        $r54 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

        if $r54 != null goto label41;

        $r112 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseStatus");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus> = $r112;

        goto label42;

     label41:
        $r112 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

     label42:
        $r55 = newarray (java.lang.Object)[1];

        $r55[0] = r101;

        $r56 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r112, $r55);

        $r57 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

        if $r57 != null goto label43;

        $r113 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseStatus");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus> = $r113;

        goto label44;

     label43:
        $r113 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

     label44:
        $r58 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r56, $r113);

        $r59 = (org.codehaus.groovy.tools.shell.ParseStatus) $r58;

        return $r59;

     label45:
        $r41 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = "Parse incomplete";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r41, "debug", $r42);

        $r43 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

        if $r43 != null goto label46;

        $r48 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseStatus");

        $r114 = $r48;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus> = $r48;

        goto label47;

     label46:
        $r114 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

     label47:
        $r115 = newarray (java.lang.Object)[1];

        $r44 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode>;

        if $r44 != null goto label48;

        $r116 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseCode");

        $r117 = $r116;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode> = $r116;

        goto label49;

     label48:
        $r117 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseCode>;

     label49:
        $r118 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r117, "INCOMPLETE");

        $r115[0] = $r118;

        $r45 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r114, $r115);

        $r119 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

        if $r119 != null goto label50;

        $r120 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ParseStatus");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus> = $r120;

        goto label51;

     label50:
        $r120 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$ParseStatus>;

     label51:
        $r46 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r45, $r120);

        $r47 = (org.codehaus.groovy.tools.shell.ParseStatus) $r46;

        return $r47;

        catch org.codehaus.groovy.control.CompilationFailedException from label13 to label24 with label24;
        catch java.lang.Throwable from label13 to label24 with label37;
        catch java.lang.Throwable from label13 to label38 with label39;
    }

    private java.lang.Object evaluate(java.util.List)
    {
        org.codehaus.groovy.tools.shell.Groovysh r5;
        java.lang.Throwable $r70;
        java.lang.Object[] $r7, $r10, $r11, $r15, $r17, $r24, $r35, $r37, $r41, $r45, $r47, $r49, $r55, $r60, $r63, $r69, $r74, $r77;
        java.lang.StringBuffer $r4;
        java.lang.String $r18, $r25;
        groovy.lang.Reference $r22;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.runtime.GStringImpl $r36, $r46;
        java.util.List r3, $r12, $r13;
        org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure3 $r42;
        java.lang.String[] $r38, $r52;
        groovy.lang.Script $r68;
        org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4 $r56;
        groovy.lang.GroovyShell $r26, $r57, $r71;
        java.lang.Class $r0, r1, $r2, $r20, $r23, $r28, $r31, $r33, $r48, $r64, $r78, $r79, $r81, $r82, $r83, $r84, $r85;
        java.lang.Object $r6, $r8, $r9, $r14, $r16, $r19, $r21, $r27, $r29, $r30, $r32, $r34, $r39, $r40, $r43, $r44, $r50, $r51, $r53, $r54, $r58, $r59, $r61, $r62, $r65, $r66, $r67, $r72, $r73, $r75, $r76, r80;

        r5 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r3 := @parameter0: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r78 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r78;

        goto label02;

     label01:
        $r78 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r78;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r79 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r79;

        goto label04;

     label03:
        $r79 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r3);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("buffer. Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("buffer = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label06:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = "Evaluating buffer...";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r6, "debug", $r7);

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r8, "verbose");

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r9);

        if $z1 == 0 goto label07;

        $r69 = newarray (java.lang.Object)[1];

        $r69[0] = r3;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r5, "displayBuffer", $r69);

        goto label07;

     label07:
        $r12 = r5.<org.codehaus.groovy.tools.shell.Groovysh: java.util.List imports>;

        $r10 = newarray (java.lang.Object)[1];

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = "true";

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r11);

        $r10[0] = $r13;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r12, "plus", $r10);

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = r3;

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r14, "plus", $r15);

        $r17 = newarray (java.lang.Object)[1];

        $r18 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.String NEWLINE>;

        $r17[0] = $r18;

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r16, "join", $r17);

        r80 = null;

        $r20 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Class>;

        if $r20 != null goto label08;

        $r81 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Class> = $r81;

        goto label09;

     label08:
        $r81 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Class>;

     label09:
        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r81);

        $r23 = (java.lang.Class) $r21;

        $r22 = new groovy.lang.Reference;

        specialinvoke $r22.<groovy.lang.Reference: void <init>(java.lang.Object)>($r23);

     label10:
        $r26 = r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.GroovyShell interp>;

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = $r19;

        $r25 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.String EVAL_SCRIPT_FILENAME>;

        $r24[1] = $r25;

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r26, "parse", $r24);

        $r28 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Script>;

        if $r28 != null goto label11;

        $r82 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Script");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Script> = $r82;

        goto label12;

     label11:
        $r82 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Script>;

     label12:
        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r27, $r82);

        $r68 = (groovy.lang.Script) $r29;

        $r30 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r68, "getClass");

        $r31 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Class>;

        if $r31 != null goto label13;

        $r83 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Class> = $r83;

        goto label14;

     label13:
        $r83 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Class>;

     label14:
        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r30, $r83);

        $r33 = (java.lang.Class) $r32;

        virtualinvoke $r22.<groovy.lang.Reference: void set(java.lang.Object)>($r33);

        $r34 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r35 = newarray (java.lang.Object)[1];

        $r36 = new org.codehaus.groovy.runtime.GStringImpl;

        $r37 = newarray (java.lang.Object)[1];

        $r37[0] = $r68;

        $r38 = newarray (java.lang.String)[2];

        $r38[0] = "Compiled script: ";

        $r38[1] = "";

        specialinvoke $r36.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r37, $r38);

        $r35[0] = $r36;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r34, "debug", $r35);

        $r39 = virtualinvoke $r22.<groovy.lang.Reference: java.lang.Object get()>();

        $r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r39, "declaredMethods");

        $r41 = newarray (java.lang.Object)[1];

        $r42 = new org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure3;

        specialinvoke $r42.<org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure3: void <init>(java.lang.Object,java.lang.Object)>(r5, r5);

        $r41[0] = $r42;

        $r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r40, "any", $r41);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r43);

        if $z2 == 0 goto label15;

        r80 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r68, "run");

        goto label15;

     label15:
        $r44 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r45 = newarray (java.lang.Object)[1];

        $r46 = new org.codehaus.groovy.runtime.GStringImpl;

        $r47 = newarray (java.lang.Object)[2];

        $r48 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

        if $r48 != null goto label16;

        $r84 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String> = $r84;

        goto label17;

     label16:
        $r84 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

     label17:
        $r49 = newarray (java.lang.Object)[1];

        $r49[0] = r80;

        $r50 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r84, "valueOf", $r49);

        $r47[0] = $r50;

        $r51 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0Safe(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r80, "getClass");

        $r47[1] = $r51;

        $r52 = newarray (java.lang.String)[3];

        $r52[0] = "Evaluation result: ";

        $r52[1] = " (";

        $r52[2] = ")";

        specialinvoke $r46.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r47, $r52);

        $r45[0] = $r46;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r44, "debug", $r45);

        $r53 = virtualinvoke $r22.<groovy.lang.Reference: java.lang.Object get()>();

        $r54 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r53, "declaredMethods");

        $r55 = newarray (java.lang.Object)[1];

        $r56 = new org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4;

        specialinvoke $r56.<org.codehaus.groovy.tools.shell.Groovysh$_evaluate_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>(r5, r5, $r22);

        $r55[0] = $r56;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r54, "each", $r55);

        goto label18;

     label18:
        $r57 = r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.GroovyShell interp>;

        $r58 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r57, "classLoader");

        $r59 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r58, "classCache");

        $r60 = newarray (java.lang.Object)[1];

        $r61 = virtualinvoke $r22.<groovy.lang.Reference: java.lang.Object get()>();

        $r62 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getPropertySafe(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r61, "name");

        $r60[0] = $r62;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r59, "remove", $r60);

        $r63 = newarray (java.lang.Object)[1];

        $r63[0] = "$_run_closure";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r59, "remove", $r63);

        goto label20;

     label19:
        $r70 := @caughtexception;

        $r71 = r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.GroovyShell interp>;

        $r72 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r71, "classLoader");

        $r73 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r72, "classCache");

        $r74 = newarray (java.lang.Object)[1];

        $r75 = virtualinvoke $r22.<groovy.lang.Reference: java.lang.Object get()>();

        $r76 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getPropertySafe(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r75, "name");

        $r74[0] = $r76;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r73, "remove", $r74);

        $r77 = newarray (java.lang.Object)[1];

        $r77[0] = "$_run_closure";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r73, "remove", $r77);

        throw $r70;

     label20:
        $r67 = r80;

        $r64 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

        if $r64 != null goto label21;

        $r85 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object> = $r85;

        goto label22;

     label21:
        $r85 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

     label22:
        $r65 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r67, $r85);

        $r66 = (java.lang.Object) $r65;

        return $r66;

        catch java.lang.Throwable from label10 to label18 with label19;
    }

    private void displayBuffer(java.util.List)
    {
        java.lang.Object[] $r5;
        org.codehaus.groovy.tools.shell.Groovysh$_displayBuffer_closure5 $r6;
        org.codehaus.groovy.tools.shell.Groovysh r7;
        java.util.List r3;
        java.lang.StringBuffer $r4;
        java.lang.Class $r0, r1, $r2, $r8, $r9;
        boolean $z0;

        r7 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r3 := @parameter0: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        r1 = $r8;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r3);

        if $z0 == 0 goto label5;

        goto label6;

     label5:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("buffer. Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("buffer = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label6:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = new org.codehaus.groovy.tools.shell.Groovysh$_displayBuffer_closure5;

        specialinvoke $r6.<org.codehaus.groovy.tools.shell.Groovysh$_displayBuffer_closure5: void <init>(java.lang.Object,java.lang.Object)>(r7, r7);

        $r5[0] = $r6;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "eachWithIndex", $r5);

        return;
    }

    private java.lang.String renderPrompt()
    {
        java.lang.Object[] $r4, $r9, $r11;
        org.codehaus.groovy.tools.shell.BufferManager $r5;
        java.lang.String[] $r12;
        org.codehaus.groovy.tools.shell.Groovysh r3;
        java.lang.String $r17;
        org.codehaus.groovy.runtime.GStringImpl $r10;
        java.lang.Class $r0, r1, $r2, $r15, $r18, $r19, $r20;
        java.lang.Object $r6, $r7, $r8, $r14, $r16;
        org.codehaus.groovy.tools.shell.util.ANSI$Renderer $r13;

        r3 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r18;

        goto label2;

     label1:
        $r18 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        r1 = $r18;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r19;

        goto label4;

     label3:
        $r19 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = r3.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.BufferManager buffers>;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r5, "current");

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r6, "size");

        $r4[0] = $r7;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "formatLineNumber", $r4);

        $r13 = r3.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.util.ANSI$Renderer prompt>;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = new org.codehaus.groovy.runtime.GStringImpl;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r8;

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = "@|bold groovy:|";

        $r12[1] = "@|bold >| ";

        specialinvoke $r10.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r11, $r12);

        $r9[0] = $r10;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r13, "render", $r9);

        $r15 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

        if $r15 != null goto label5;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String> = $r20;

        goto label6;

     label5:
        $r20 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

     label6:
        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r14, $r20);

        $r17 = (java.lang.String) $r16;

        return $r17;
    }

    private java.lang.String formatLineNumber(int)
    {
        java.lang.Object[] $r9;
        org.codehaus.groovy.tools.shell.Groovysh r15;
        java.lang.Integer $r4, $r10;
        java.lang.StringBuffer $r5;
        int i0;
        java.lang.String $r14;
        boolean $z0;
        java.lang.Class $r0, r1, $r2, $r12, $r16, $r17, $r18;
        java.lang.Object $r3, $r6, $r7, $r8, $r11, $r13;

        r15 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        i0 := @parameter0: int;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>(i0);

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>(0);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThanEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label5;

        goto label6;

     label5:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>("(num >= 0). Values: ");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("num = ");

        $r6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r5, null);

     label6:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>(i0);

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r7, "toString");

        $r9 = newarray (java.lang.Object)[2];

        $r10 = new java.lang.Integer;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>(3);

        $r9[0] = $r10;

        $r9[1] = "0";

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r8, "padLeft", $r9);

        $r12 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

        if $r12 != null goto label7;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String> = $r18;

        goto label8;

     label7:
        $r18 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

     label8:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, $r18);

        $r14 = (java.lang.String) $r13;

        return $r14;
    }

    public java.io.File getUserStateDirectory()
    {
        java.lang.Object[] $r5, $r16, $r19;
        org.codehaus.groovy.tools.shell.Groovysh r12;
        java.io.File $r10;
        java.lang.Class $r0, r1, $r2, $r3, $r4, $r8, $r11, $r13, $r14, $r15, $r17, $r18, $r22, $r23, $r24;
        java.lang.Object $r6, $r7, $r9, $r20, $r21;

        r12 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r13;

        goto label02;

     label01:
        $r13 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r13;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label04;

     label03:
        $r14 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File>;

        if $r3 != null goto label05;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.io.File");

        $r15 = $r11;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File> = $r11;

        goto label06;

     label05:
        $r15 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File>;

     label06:
        $r16 = newarray (java.lang.Object)[1];

        $r4 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$System>;

        if $r4 != null goto label07;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.System");

        $r18 = $r17;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$System> = $r17;

        goto label08;

     label07:
        $r18 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$System>;

     label08:
        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = "user.home";

        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r18, "getProperty", $r19);

        $r16[0] = $r20;

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r15, $r16);

        $r22 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File>;

        if $r22 != null goto label09;

        $r23 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.io.File");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File> = $r23;

        goto label10;

     label09:
        $r23 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File>;

     label10:
        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = $r21;

        $r5[1] = ".groovy";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r23, $r5);

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r6, "canonicalFile");

        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File>;

        if $r8 != null goto label11;

        $r24 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.io.File");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File> = $r24;

        goto label12;

     label11:
        $r24 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File>;

     label12:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, $r24);

        $r10 = (java.io.File) $r9;

        return $r10;
    }

    private void loadUserScript(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.Groovysh r7;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.runtime.GStringImpl $r18;
        java.lang.Throwable $r32;
        java.lang.Object[] $r6, $r12, $r15, $r17, $r19, $r27;
        java.lang.String[] $r20;
        java.lang.StringBuffer $r4;
        java.lang.Boolean $r25, $r31;
        java.lang.String r3;
        java.lang.Class $r0, r1, $r2, $r5, $r21, $r23, $r26, $r30, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41;
        java.lang.Object $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r22, $r24, $r28, $r29;

        r7 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r3 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r34 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r34;

        goto label02;

     label01:
        $r34 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r34;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r35 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r35;

        goto label04;

     label03:
        $r35 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r3);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("filename. Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("filename = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label06:
        $r5 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File>;

        if $r5 != null goto label07;

        $r36 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.io.File");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File> = $r36;

        goto label08;

     label07:
        $r36 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File>;

     label08:
        $r6 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r7, "userStateDirectory");

        $r6[0] = $r8;

        $r6[1] = r3;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r36, $r6);

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r9, "exists");

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r10);

        if $z1 == 0 goto label25;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r7, "registry");

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "load";

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r11, "getAt", $r12);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r13);

        if $z2 == 0 goto label23;

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r7, "log");

        $r17 = newarray (java.lang.Object)[1];

        $r18 = new org.codehaus.groovy.runtime.GStringImpl;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = $r9;

        $r20 = newarray (java.lang.String)[2];

        $r20[0] = "Loading user-script: ";

        $r20[1] = "";

        specialinvoke $r18.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r19, $r20);

        $r17[0] = $r18;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r16, "debug", $r17);

        $r21 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

        if $r21 != null goto label09;

        $r37 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Preferences");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences> = $r37;

        goto label10;

     label09:
        $r37 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

     label10:
        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r37, "showLastResult");

        $r23 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Boolean>;

        if $r23 != null goto label11;

        $r38 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Boolean> = $r38;

        goto label12;

     label11:
        $r38 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Boolean>;

     label12:
        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r22, $r38);

        $r31 = (java.lang.Boolean) $r24;

        $r25 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r26 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

        if $r26 != null goto label13;

        $r39 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Preferences");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences> = $r39;

        goto label14;

     label13:
        $r39 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

     label14:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r25, r1, $r39, "showLastResult");

     label15:
        $r27 = newarray (java.lang.Object)[1];

        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r9, "toURI");

        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r28, "toURL");

        $r27[0] = $r29;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r13, "load", $r27);

        goto label16;

     label16:
        $r30 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

        if $r30 != null goto label17;

        $r40 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Preferences");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences> = $r40;

        goto label18;

     label17:
        $r40 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

     label18:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r31, r1, $r40, "showLastResult");

        goto label22;

     label19:
        $r32 := @caughtexception;

        $r33 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

        if $r33 != null goto label20;

        $r41 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Preferences");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences> = $r41;

        goto label21;

     label20:
        $r41 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

     label21:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r31, r1, $r41, "showLastResult");

        throw $r32;

     label22:
        goto label24;

     label23:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r7, "log");

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = "Unable to load user-script, missing \'load\' command";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r14, "error", $r15);

     label24:
        goto label25;

     label25:
        return;

        catch java.lang.Throwable from label15 to label16 with label19;
    }

    private void maybeRecordInput(java.lang.String)
    {
        java.lang.Object[] $r5, $r7;
        org.codehaus.groovy.tools.shell.Groovysh r3;
        java.lang.Class $r0, r1, $r2, $r9, $r10;
        java.lang.Object $r4, $r6;
        java.lang.String r8;
        boolean $z0;

        r3 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r8 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        r1 = $r9;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "registry");

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "record";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r4, "getAt", $r5);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r6, null);

        if $z0 == 0 goto label5;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r8;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r6, "recordInput", $r7);

        goto label5;

     label5:
        return;
    }

    private void maybeRecordResult(java.lang.Object)
    {
        java.lang.Object[] $r5, $r7;
        org.codehaus.groovy.tools.shell.Groovysh r3;
        java.lang.Class $r0, r1, $r2, $r9, $r10;
        java.lang.Object $r4, $r6, r8;
        boolean $z0;

        r3 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r8 := @parameter0: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        r1 = $r9;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "registry");

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "record";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r4, "getAt", $r5);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r6, null);

        if $z0 == 0 goto label5;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r8;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r6, "recordResult", $r7);

        goto label5;

     label5:
        return;
    }

    private void maybeRecordError(java.lang.Throwable)
    {
        java.lang.Throwable r18;
        java.lang.Object[] $r5, $r11, $r13;
        org.codehaus.groovy.tools.shell.Groovysh r3;
        java.lang.Boolean $r17;
        boolean $z0, $z1;
        java.lang.Class $r0, r1, $r2, $r7, $r9, $r12, $r15, $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.Object $r4, $r6, $r8, $r10, $r14, $r16;

        r3 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r18 := @parameter0: java.lang.Throwable;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r19;

        goto label02;

     label01:
        $r19 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r19;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r20;

        goto label04;

     label03:
        $r20 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "registry");

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "record";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r4, "getAt", $r5);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r6, null);

        if $z0 == 0 goto label14;

        $r7 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

        if $r7 != null goto label05;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Preferences");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences> = $r21;

        goto label06;

     label05:
        $r21 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

     label06:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r21, "sanitizeStackTrace");

        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Boolean>;

        if $r9 != null goto label07;

        $r22 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Boolean> = $r22;

        goto label08;

     label07:
        $r22 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Boolean>;

     label08:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, $r22);

        $r17 = (java.lang.Boolean) $r10;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r17);

        if $z1 == 0 goto label13;

        $r12 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$runtime$StackTraceUtils>;

        if $r12 != null goto label09;

        $r23 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.StackTraceUtils");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$runtime$StackTraceUtils> = $r23;

        goto label10;

     label09:
        $r23 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$runtime$StackTraceUtils>;

     label10:
        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r18;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r23, "deepSanitize", $r13);

        $r15 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Throwable>;

        if $r15 != null goto label11;

        $r24 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Throwable> = $r24;

        goto label12;

     label11:
        $r24 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Throwable>;

     label12:
        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r14, $r24);

        r18 = (java.lang.Throwable) $r16;

        goto label13;

     label13:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r18;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r6, "recordError", $r11);

        goto label14;

     label14:
        return;
    }

    private void setLastResult(java.lang.Object)
    {
        java.lang.Throwable $r17;
        java.lang.Object[] $r5, $r12, $r13, $r15;
        groovy.lang.Closure $r4, $r8;
        org.codehaus.groovy.tools.shell.Groovysh r3;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r9;
        boolean $z0;
        groovy.lang.GroovyShell $r10;
        java.lang.Class $r0, r1, $r2, $r7, $r14, $r18, $r19, $r20, $r21;
        java.lang.Object r6, $r11, $r16;

        r3 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r6 := @parameter0: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r18;

        goto label2;

     label1:
        $r18 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        r1 = $r18;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r19;

        goto label4;

     label3:
        $r19 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r3.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure resultHook>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r4, null);

        if $z0 == 0 goto label7;

        $r14 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$IllegalStateException>;

        if $r14 != null goto label5;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.IllegalStateException");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$IllegalStateException> = $r20;

        goto label6;

     label5:
        $r20 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$IllegalStateException>;

     label6:
        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = "Result hook is not set";

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r20, $r15);

        $r17 = (java.lang.Throwable) $r16;

        throw $r17;

     label7:
        $r8 = r3.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure resultHook>;

        $r5 = newarray (java.lang.Object)[1];

        $r7 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

        if $r7 != null goto label8;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object> = $r21;

        goto label9;

     label8:
        $r21 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

     label9:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>(r6, $r21);

        $r5[0] = $r9;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r8, "call", $r5);

        $r10 = r3.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.GroovyShell interp>;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r10, "context");

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = "_";

        $r12[1] = r6;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r11, "putAt", $r12);

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r6;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "maybeRecordResult", $r13);

        return;
    }

    private java.lang.Object getLastResult()
    {
        java.lang.Object[] $r6;
        org.codehaus.groovy.tools.shell.Groovysh r3;
        groovy.lang.GroovyShell $r4;
        java.lang.Class $r0, r1, $r2, $r8, $r11, $r12, $r13;
        java.lang.Object $r5, $r7, $r9, $r10;

        r3 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        r1 = $r11;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r3.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.GroovyShell interp>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "context");

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "_";

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r5, "getAt", $r6);

        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

        if $r8 != null goto label5;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object> = $r13;

        goto label6;

     label5:
        $r13 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Object>;

     label6:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, $r13);

        $r10 = (java.lang.Object) $r9;

        return $r10;
    }

    private void displayError(java.lang.Throwable)
    {
        java.lang.Throwable r6, $r11;
        java.lang.Object[] $r5, $r9;
        groovy.lang.Closure $r4, $r7;
        org.codehaus.groovy.tools.shell.Groovysh r3;
        boolean $z0;
        java.lang.Class $r0, r1, $r2, $r8, $r12, $r13, $r14;
        java.lang.Object $r10;

        r3 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r6 := @parameter0: java.lang.Throwable;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r12;

        goto label2;

     label1:
        $r12 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        r1 = $r12;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r3.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure errorHook>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r4, null);

        if $z0 == 0 goto label7;

        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$IllegalStateException>;

        if $r8 != null goto label5;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.IllegalStateException");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$IllegalStateException> = $r14;

        goto label6;

     label5:
        $r14 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$IllegalStateException>;

     label6:
        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = "Error hook is not set";

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r14, $r9);

        $r11 = (java.lang.Throwable) $r10;

        throw $r11;

     label7:
        $r7 = r3.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure errorHook>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r6;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r7, "call", $r5);

        return;
    }

    public transient int run(java.lang.String[])
    {
        org.codehaus.groovy.tools.shell.Groovysh r6;
        java.lang.Integer $r13, $r20;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r7, $r15;
        java.lang.String[] r5;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r9;
        int $i0;
        java.lang.Boolean $r25;
        java.lang.String $r14, r24;
        java.lang.Class $r0, r1, $r2, $r3, $r8, $r11, $r17, $r21, $r22, $r23, $r26, $r27, $r28;
        java.lang.Object $r4, $r10, $r12, $r16, $r18, $r19;

        r6 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r5 := @parameter0: java.lang.String[];

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r21;

        goto label02;

     label01:
        $r21 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r21;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r22 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r22;

        goto label04;

     label03:
        $r22 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

        if $r3 != null goto label05;

        $r23 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String> = $r23;

        goto label06;

     label05:
        $r23 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r23);

        r24 = (java.lang.String) $r4;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r5, null);

        if $z0 == 0 goto label07;

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r5, "length");

        $r20 = new java.lang.Integer;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>(0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>($r19, $r20);

        if $z1 == 0 goto label07;

        $r25 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label08;

     label07:
        $r25 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label08:
        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r25);

        if $z2 == 0 goto label11;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = " ";

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r5, "join", $r15);

        $r17 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

        if $r17 != null goto label09;

        $r26 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String> = $r26;

        goto label10;

     label09:
        $r26 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

     label10:
        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r16, $r26);

        r24 = (java.lang.String) $r18;

        goto label11;

     label11:
        $r7 = newarray (java.lang.Object)[1];

        $r14 = r24;

        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

        if $r8 != null goto label12;

        $r27 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String> = $r27;

        goto label13;

     label12:
        $r27 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

     label13:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r14, $r27);

        $r7[0] = $r9;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r6, "run", $r7);

        $r11 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Integer>;

        if $r11 != null goto label14;

        $r28 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Integer> = $r28;

        goto label15;

     label14:
        $r28 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Integer>;

     label15:
        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r10, $r28);

        $r13 = (java.lang.Integer) $r12;

        $i0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int intUnbox(java.lang.Object)>($r13);

        return $i0;
    }

    public int run(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.Groovysh r5;
        java.lang.Integer $r35, $r38, $r62, $r65, $r70, $r119, $r145;
        java.lang.Object[] $r8, $r10, $r23, $r41, $r42, $r48, $r53, $r54, $r59, $r60, $r61, $r67, $r72, $r74, $r77, $r79, $r83, $r85, $r90, $r92, $r97, $r99, $r103, $r105, $r112, $r113, $r116, $r122, $r124, $r132;
        java.lang.StringBuffer $r32;
        org.codehaus.groovy.tools.shell.util.MessageSource $r44, $r55, $r114;
        org.codehaus.groovy.runtime.GStringImpl $r73, $r78, $r84, $r91, $r98, $r104, $r123;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r136;
        int $i0;
        java.lang.Boolean $r130;
        java.lang.Class $r0, r1, $r2, $r3, $r11, $r12, $r16, $r18, $r22, $r33, $r43, $r46, $r66, $r127, $r128, $r129, $r131, $r134, $r135, $r137, $r138, $r139, $r140, $r141, $r143, $r144, $r147;
        java.lang.Object $r4, $r6, $r7, $r13, $r14, $r17, $r19, $r24, $r25, $r29, $r30, $r34, $r36, $r37, $r39, $r40, $r45, $r47, $r49, $r50, $r51, $r52, $r56, $r57, $r58, $r63, $r64, $r68, $r69, $r71, $r76, $r80, $r82, $r86, $r87, $r89, $r93, $r94, $r96, $r100, $r102, $r106, $r110, $r111, $r115, $r117, $r118, $r121, $r125, r142, r146;
        org.codehaus.groovy.tools.shell.ExitNotification $r120;
        groovy.lang.Closure $r27, $r133;
        java.lang.Throwable $r108, $r109;
        java.lang.String r9;
        jline.History $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String[] $r75, $r81, $r88, $r95, $r101, $r107, $r126;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner $r15, $r21, $r26, $r28, $r31;

        r5 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r9 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r127 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r127;

        goto label02;

     label01:
        $r127 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r127;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r128 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r128;

        goto label04;

     label03:
        $r128 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$jline$Terminal>;

        if $r3 != null goto label05;

        $r129 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("jline.Terminal");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$jline$Terminal> = $r129;

        goto label06;

     label05:
        $r129 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$jline$Terminal>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r129, "terminal");

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r6, "debug");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r7);

        if $z0 == 0 goto label08;

        $r71 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r72 = newarray (java.lang.Object)[1];

        $r73 = new org.codehaus.groovy.runtime.GStringImpl;

        $r74 = newarray (java.lang.Object)[1];

        $r74[0] = $r4;

        $r75 = newarray (java.lang.String)[2];

        $r75[0] = "Terminal (";

        $r75[1] = ")";

        specialinvoke $r73.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r74, $r75);

        $r72[0] = $r73;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r71, "debug", $r72);

        $r76 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r77 = newarray (java.lang.Object)[1];

        $r78 = new org.codehaus.groovy.runtime.GStringImpl;

        $r79 = newarray (java.lang.Object)[1];

        $r80 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "supported");

        $r79[0] = $r80;

        $r81 = newarray (java.lang.String)[2];

        $r81[0] = "    Supported:  ";

        $r81[1] = "";

        specialinvoke $r78.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r79, $r81);

        $r77[0] = $r78;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r76, "debug", $r77);

        $r82 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r83 = newarray (java.lang.Object)[1];

        $r84 = new org.codehaus.groovy.runtime.GStringImpl;

        $r85 = newarray (java.lang.Object)[2];

        $r86 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "echo");

        $r85[0] = $r86;

        $r87 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "echoEnabled");

        $r85[1] = $r87;

        $r88 = newarray (java.lang.String)[3];

        $r88[0] = "    ECHO:       ";

        $r88[1] = " (enabled: ";

        $r88[2] = ")";

        specialinvoke $r84.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r85, $r88);

        $r83[0] = $r84;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r82, "debug", $r83);

        $r89 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r90 = newarray (java.lang.Object)[1];

        $r91 = new org.codehaus.groovy.runtime.GStringImpl;

        $r92 = newarray (java.lang.Object)[2];

        $r93 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "terminalHeight");

        $r92[0] = $r93;

        $r94 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "terminalWidth");

        $r92[1] = $r94;

        $r95 = newarray (java.lang.String)[3];

        $r95[0] = "    H x W:      ";

        $r95[1] = " x ";

        $r95[2] = "";

        specialinvoke $r91.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r92, $r95);

        $r90[0] = $r91;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r89, "debug", $r90);

        $r96 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r97 = newarray (java.lang.Object)[1];

        $r98 = new org.codehaus.groovy.runtime.GStringImpl;

        $r99 = newarray (java.lang.Object)[1];

        $r100 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "isANSISupported");

        $r99[0] = $r100;

        $r101 = newarray (java.lang.String)[2];

        $r101[0] = "    ANSI:       ";

        $r101[1] = "";

        specialinvoke $r98.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r99, $r101);

        $r97[0] = $r98;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r96, "debug", $r97);

        $z6 = $r4 instanceof jline.WindowsTerminal;

        if $z6 == 0 goto label07;

        $r102 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r103 = newarray (java.lang.Object)[1];

        $r104 = new org.codehaus.groovy.runtime.GStringImpl;

        $r105 = newarray (java.lang.Object)[1];

        $r106 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "directConsole");

        $r105[0] = $r106;

        $r107 = newarray (java.lang.String)[2];

        $r107[0] = "    Direct:     ";

        $r107[1] = "";

        specialinvoke $r104.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r105, $r107);

        $r103[0] = $r104;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r102, "debug", $r103);

        goto label07;

     label07:
        goto label08;

     label08:
        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = "groovysh.profile";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r5, "loadUserScript", $r8);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r9, null);

        if $z1 == 0 goto label09;

        $r68 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r9, "trim");

        $r69 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r68, "size");

        $r70 = new java.lang.Integer;

        specialinvoke $r70.<java.lang.Integer: void <init>(int)>(0);

        $z5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>($r69, $r70);

        if $z5 == 0 goto label09;

        $r130 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label10;

     label09:
        $r130 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label10:
        $z7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r130);

        if $z7 == 0 goto label11;

        $r67 = newarray (java.lang.Object)[1];

        $r67[0] = r9;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r5, "execute", $r67);

        goto label32;

     label11:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = "groovysh.rc";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r5, "loadUserScript", $r10);

        $r11 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$InteractiveShellRunner>;

        if $r11 != null goto label12;

        $r66 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        $r131 = $r66;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$InteractiveShellRunner> = $r66;

        goto label13;

     label12:
        $r131 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$InteractiveShellRunner>;

     label13:
        $r132 = newarray (java.lang.Object)[2];

        $r132[0] = r5;

        $r133 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: groovy.lang.Closure getMethodPointer(java.lang.Object,java.lang.String)>(r5, "renderPrompt");

        $r12 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r12 != null goto label14;

        $r134 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        $r135 = $r134;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r134;

        goto label15;

     label14:
        $r135 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label15:
        $r136 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createGroovyObjectWrapper(groovy.lang.GroovyObject,java.lang.Class)>($r133, $r135);

        $r132[1] = $r136;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r131, $r132);

        $r137 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$InteractiveShellRunner>;

        if $r137 != null goto label16;

        $r138 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$InteractiveShellRunner> = $r138;

        goto label17;

     label16:
        $r138 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$InteractiveShellRunner>;

     label17:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r138);

        $r15 = (org.codehaus.groovy.tools.shell.InteractiveShellRunner) $r14;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.InteractiveShellRunner runner> = $r15;

        $r16 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$jline$History>;

        if $r16 != null goto label18;

        $r139 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("jline.History");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$jline$History> = $r139;

        goto label19;

     label18:
        $r139 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$jline$History>;

     label19:
        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r139);

        $r18 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$jline$History>;

        if $r18 != null goto label20;

        $r140 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("jline.History");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$jline$History> = $r140;

        goto label21;

     label20:
        $r140 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$jline$History>;

     label21:
        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r17, $r140);

        $r20 = (jline.History) $r19;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: jline.History history> = $r20;

        $r21 = r5.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.InteractiveShellRunner runner>;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r17, r1, $r21, "history");

        $r22 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File>;

        if $r22 != null goto label22;

        $r141 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.io.File");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File> = $r141;

        goto label23;

     label22:
        $r141 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$io$File>;

     label23:
        $r23 = newarray (java.lang.Object)[2];

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "userStateDirectory");

        $r23[0] = $r24;

        $r23[1] = "groovysh.history";

        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r141, $r23);

        $r26 = r5.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.InteractiveShellRunner runner>;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r25, r1, $r26, "historyFile");

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: groovy.lang.Closure getMethodPointer(java.lang.Object,java.lang.String)>(r5, "displayError");

        $r28 = r5.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.InteractiveShellRunner runner>;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r27, r1, $r28, "errorHandler");

        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r30 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r29, "quiet");

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r30);

        if $z2 != 0 goto label24;

        $z8 = 1;

        goto label25;

     label24:
        $z8 = 0;

     label25:
        if $z8 == 0 goto label31;

        $r37 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "terminalWidth");

        r142 = $r37;

        $r38 = new java.lang.Integer;

        specialinvoke $r38.<java.lang.Integer: void <init>(int)>(1);

        $z4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareLessThan(java.lang.Object,java.lang.Object)>($r37, $r38);

        if $z4 == 0 goto label26;

        $r65 = new java.lang.Integer;

        specialinvoke $r65.<java.lang.Integer: void <init>(int)>(80);

        r142 = $r65;

        goto label26;

     label26:
        $r39 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r39, "out");

        $r41 = newarray (java.lang.Object)[1];

        $r44 = <org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r42 = newarray (java.lang.Object)[3];

        $r42[0] = "startup_banner.0";

        $r43 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper>;

        if $r43 != null goto label27;

        $r143 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.InvokerHelper");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper> = $r143;

        goto label28;

     label27:
        $r143 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper>;

     label28:
        $r45 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r143, "version");

        $r42[1] = $r45;

        $r46 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$System>;

        if $r46 != null goto label29;

        $r144 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$System> = $r144;

        goto label30;

     label29:
        $r144 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$System>;

     label30:
        $r47 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r144, "properties");

        $r48 = newarray (java.lang.Object)[1];

        $r48[0] = "java.version";

        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r47, "getAt", $r48);

        $r42[2] = $r49;

        $r50 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r44, "format", $r42);

        $r41[0] = $r50;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r40, "println", $r41);

        $r51 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r52 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r51, "out");

        $r53 = newarray (java.lang.Object)[1];

        $r55 = <org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r54 = newarray (java.lang.Object)[1];

        $r54[0] = "startup_banner.1";

        $r56 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r55, "getAt", $r54);

        $r53[0] = $r56;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r52, "println", $r53);

        $r57 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r58 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r57, "out");

        $r59 = newarray (java.lang.Object)[1];

        $r60 = newarray (java.lang.Object)[1];

        $r61 = newarray (java.lang.Object)[1];

        $r62 = new java.lang.Integer;

        specialinvoke $r62.<java.lang.Integer: void <init>(int)>(1);

        $r61[0] = $r62;

        $r63 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r142, "minus", $r61);

        $r60[0] = $r63;

        $r64 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, "-", "multiply", $r60);

        $r59[0] = $r64;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r58, "println", $r59);

        goto label31;

     label31:
        $r31 = r5.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.InteractiveShellRunner runner>;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r31, "run");

     label32:
        $r145 = new java.lang.Integer;

        specialinvoke $r145.<java.lang.Integer: void <init>(int)>(0);

        r146 = $r145;

        goto label35;

     label33:
        $r120 := @caughtexception;

        $r121 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r122 = newarray (java.lang.Object)[1];

        $r123 = new org.codehaus.groovy.runtime.GStringImpl;

        $r124 = newarray (java.lang.Object)[1];

        $r125 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r120, "code");

        $r124[0] = $r125;

        $r126 = newarray (java.lang.String)[2];

        $r126[0] = "Exiting w/code: ";

        $r126[1] = "";

        specialinvoke $r123.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r124, $r126);

        $r122[0] = $r123;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r121, "debug", $r122);

        r146 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r120, "code");

        goto label35;

     label34:
        $r109 := @caughtexception;

        $r110 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r111 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r110, "err");

        $r112 = newarray (java.lang.Object)[1];

        $r114 = <org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r113 = newarray (java.lang.Object)[2];

        $r113[0] = "info.fatal";

        $r113[1] = $r109;

        $r115 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r114, "format", $r113);

        $r112[0] = $r115;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r111, "println", $r112);

        $r116 = newarray (java.lang.Object)[1];

        $r117 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r118 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r117, "err");

        $r116[0] = $r118;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r109, "printStackTrace", $r116);

        $r119 = new java.lang.Integer;

        specialinvoke $r119.<java.lang.Integer: void <init>(int)>(1);

        r146 = $r119;

        goto label35;

     label35:
        goto label37;

     label36:
        $r108 := @caughtexception;

        throw $r108;

     label37:
        $z3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r146, null);

        if $z3 == 0 goto label38;

        goto label39;

     label38:
        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>(java.lang.String)>("(code != null). Values: ");

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("code = ");

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r146);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r32, null);

     label39:
        $r36 = r146;

        $r33 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Integer>;

        if $r33 != null goto label40;

        $r147 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Integer> = $r147;

        goto label41;

     label40:
        $r147 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$Integer>;

     label41:
        $r34 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r36, $r147);

        $r35 = (java.lang.Integer) $r34;

        $i0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int intUnbox(java.lang.Object)>($r35);

        return $i0;

        catch org.codehaus.groovy.tools.shell.ExitNotification from label08 to label33 with label33;
        catch java.lang.Throwable from label08 to label33 with label34;
        catch java.lang.Throwable from label08 to label35 with label36;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r5, $r12;
        org.codehaus.groovy.tools.shell.util.MessageSource $r14;
        java.lang.Long $r16, $r17, $r18, $r19;
        java.lang.String $r9, $r10, $r15;
        java.lang.Class $r0, r1, $r2, $r3, $r7, $r11, $r20, $r21, $r22, $r23, $r24;
        java.lang.Object $r4, $r6, $r8, $r13;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r20;

        goto label02;

     label01:
        $r20 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label02:
        r1 = $r20;

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r21;

        goto label04;

     label03:
        $r21 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$System>;

        if $r3 != null goto label05;

        $r22 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$System> = $r22;

        goto label06;

     label05:
        $r22 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$System>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r22, "properties");

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "line.separator";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r4, "getAt", $r5);

        $r7 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

        if $r7 != null goto label07;

        $r23 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String> = $r23;

        goto label08;

     label07:
        $r23 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$java$lang$String>;

     label08:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r23);

        $r9 = (java.lang.String) $r8;

        $r10 = (java.lang.String) $r9;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.String NEWLINE> = $r10;

        $r11 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource>;

        if $r11 != null goto label09;

        $r24 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.MessageSource");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource> = $r24;

        goto label10;

     label09:
        $r24 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource>;

     label10:
        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r1;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r24, $r12);

        $r14 = (org.codehaus.groovy.tools.shell.util.MessageSource) $r13;

        <org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.util.MessageSource messages> = $r14;

        $r15 = (java.lang.String) "groovysh_evaluate";

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.String EVAL_SCRIPT_FILENAME> = $r15;

        $r16 = new java.lang.Long;

        specialinvoke $r16.<java.lang.Long: void <init>(long)>(1239119697085L);

        $r17 = (java.lang.Long) $r16;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Long __timeStamp> = $r17;

        $r18 = new java.lang.Long;

        specialinvoke $r18.<java.lang.Long: void <init>(long)>(0L);

        $r19 = (java.lang.Long) $r18;

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Long __timeStamp__239_neverHappen1239119697085> = $r19;

        return;
    }

    public final groovy.lang.Closure getDefaultResultHook()
    {
        groovy.lang.Closure $r4, $r6;
        org.codehaus.groovy.tools.shell.Groovysh r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure defaultResultHook>;

        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (groovy.lang.Closure) $r5;

        return $r6;
    }

    public groovy.lang.Closure getResultHook()
    {
        groovy.lang.Closure $r4, $r6;
        org.codehaus.groovy.tools.shell.Groovysh r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure resultHook>;

        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (groovy.lang.Closure) $r5;

        return $r6;
    }

    public void setResultHook(groovy.lang.Closure)
    {
        groovy.lang.Closure r2, $r6;
        org.codehaus.groovy.tools.shell.Groovysh r5;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r4;

        r5 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r2 := @parameter0: groovy.lang.Closure;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r2, $r9);

        $r6 = (groovy.lang.Closure) $r4;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure resultHook> = $r6;

        return;
    }

    public final groovy.lang.Closure getDefaultErrorHook()
    {
        groovy.lang.Closure $r4, $r6;
        org.codehaus.groovy.tools.shell.Groovysh r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure defaultErrorHook>;

        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (groovy.lang.Closure) $r5;

        return $r6;
    }

    public groovy.lang.Closure getErrorHook()
    {
        groovy.lang.Closure $r4, $r6;
        org.codehaus.groovy.tools.shell.Groovysh r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure errorHook>;

        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (groovy.lang.Closure) $r5;

        return $r6;
    }

    public void setErrorHook(groovy.lang.Closure)
    {
        groovy.lang.Closure r2, $r6;
        org.codehaus.groovy.tools.shell.Groovysh r5;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r4;

        r5 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r2 := @parameter0: groovy.lang.Closure;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh: java.lang.Class class$groovy$lang$Closure>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r2, $r9);

        $r6 = (groovy.lang.Closure) $r4;

        r5.<org.codehaus.groovy.tools.shell.Groovysh: groovy.lang.Closure errorHook> = $r6;

        return;
    }

    org.codehaus.groovy.tools.shell.ParseStatus this$3$parse(java.util.List, int)
    {
        java.util.List r1;
        int i0;
        org.codehaus.groovy.tools.shell.Groovysh r0;
        org.codehaus.groovy.tools.shell.ParseStatus $r2;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: org.codehaus.groovy.tools.shell.ParseStatus parse(java.util.List,int)>(r1, i0);

        return $r2;
    }

    java.lang.Object this$3$evaluate(java.util.List)
    {
        java.util.List r1;
        java.lang.Object $r2;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.util.List;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: java.lang.Object evaluate(java.util.List)>(r1);

        return $r2;
    }

    void this$3$displayBuffer(java.util.List)
    {
        java.util.List r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: void displayBuffer(java.util.List)>(r1);

        return;
    }

    java.lang.String this$3$renderPrompt()
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: java.lang.String renderPrompt()>();

        return $r1;
    }

    java.lang.String this$3$formatLineNumber(int)
    {
        int i0;
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: java.lang.String formatLineNumber(int)>(i0);

        return $r1;
    }

    void this$3$loadUserScript(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: void loadUserScript(java.lang.String)>(r1);

        return;
    }

    void this$3$maybeRecordInput(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: void maybeRecordInput(java.lang.String)>(r1);

        return;
    }

    void this$3$maybeRecordResult(java.lang.Object)
    {
        java.lang.Object r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: void maybeRecordResult(java.lang.Object)>(r1);

        return;
    }

    void this$3$maybeRecordError(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: void maybeRecordError(java.lang.Throwable)>(r1);

        return;
    }

    void this$3$setLastResult(java.lang.Object)
    {
        java.lang.Object r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: void setLastResult(java.lang.Object)>(r1);

        return;
    }

    java.lang.Object this$3$getLastResult()
    {
        java.lang.Object $r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: java.lang.Object getLastResult()>();

        return $r1;
    }

    void this$3$displayError(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.Groovysh: void displayError(java.lang.Throwable)>(r1);

        return;
    }

    java.lang.Object super$2$getProperty(java.lang.String)
    {
        java.lang.Object $r2;
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$1$toString()
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$2$setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    org.codehaus.groovy.tools.shell.CommandRegistry super$2$getRegistry()
    {
        org.codehaus.groovy.tools.shell.CommandRegistry $r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.CommandRegistry getRegistry()>();

        return $r1;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    java.util.List super$2$parseLine(java.lang.String)
    {
        java.util.List $r2;
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: java.util.List parseLine(java.lang.String)>(r1);

        return $r2;
    }

    boolean super$2$isExecutable(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: boolean isExecutable(java.lang.String)>(r1);

        return $z0;
    }

    java.lang.Object super$2$leftShift(java.lang.String)
    {
        java.lang.Object $r2;
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: java.lang.Object leftShift(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    org.codehaus.groovy.tools.shell.Command super$2$findCommand(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.Command $r2;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.Command findCommand(java.lang.String)>(r1);

        return $r2;
    }

    groovy.lang.MetaClass super$2$getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$2$setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    org.codehaus.groovy.tools.shell.IO super$2$getIo()
    {
        org.codehaus.groovy.tools.shell.IO $r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.IO getIo()>();

        return $r1;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    java.lang.Object super$2$leftShift(org.codehaus.groovy.tools.shell.Command)
    {
        java.lang.Object $r2;
        org.codehaus.groovy.tools.shell.Groovysh r0;
        org.codehaus.groovy.tools.shell.Command r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: org.codehaus.groovy.tools.shell.Command;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: java.lang.Object leftShift(org.codehaus.groovy.tools.shell.Command)>(r1);

        return $r2;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    org.codehaus.groovy.tools.shell.Command super$2$register(org.codehaus.groovy.tools.shell.Command)
    {
        org.codehaus.groovy.tools.shell.Groovysh r0;
        org.codehaus.groovy.tools.shell.Command r1, $r2;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: org.codehaus.groovy.tools.shell.Command;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.Command register(org.codehaus.groovy.tools.shell.Command)>(r1);

        return $r2;
    }

    java.lang.Object super$2$execute(java.lang.String)
    {
        java.lang.Object $r2;
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: java.lang.Object execute(java.lang.String)>(r1);

        return $r2;
    }

    void super$1$wait(long)
    {
        long l0;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.codehaus.groovy.tools.shell.Groovysh r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$2$invokeMethod(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2, $r3;
        org.codehaus.groovy.tools.shell.Groovysh r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<org.codehaus.groovy.tools.shell.Shell: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        int $i0;
        org.codehaus.groovy.tools.shell.Groovysh r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Groovysh;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
