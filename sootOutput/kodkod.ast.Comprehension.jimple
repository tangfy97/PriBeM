public final class kodkod.ast.Comprehension extends kodkod.ast.Expression
{
    private final kodkod.ast.Decls decls;
    private final kodkod.ast.Formula formula;

    void <init>(kodkod.ast.Decls, kodkod.ast.Formula)
    {
        kodkod.ast.operator.Multiplicity $r11, $r12;
        java.lang.NullPointerException $r13;
        int $i0;
        java.lang.String $r10;
        boolean $z0;
        java.util.Iterator $r3;
        kodkod.ast.Formula r1;
        kodkod.ast.Decl r5;
        kodkod.ast.Decls r2;
        java.lang.IllegalArgumentException $r7;
        kodkod.ast.Variable $r6;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8, $r9;
        kodkod.ast.Comprehension r0;

        r0 := @this: kodkod.ast.Comprehension;

        r2 := @parameter0: kodkod.ast.Decls;

        r1 := @parameter1: kodkod.ast.Formula;

        specialinvoke r0.<kodkod.ast.Expression: void <init>()>();

        if r1 != null goto label1;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("null formula");

        throw $r13;

     label1:
        $r3 = virtualinvoke r2.<kodkod.ast.Decls: java.util.Iterator iterator()>();

        goto label4;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (kodkod.ast.Decl) $r4;

        $r6 = virtualinvoke r5.<kodkod.ast.Decl: kodkod.ast.Variable variable()>();

        $i0 = virtualinvoke $r6.<kodkod.ast.Variable: int arity()>();

        if $i0 > 1 goto label3;

        $r11 = virtualinvoke r5.<kodkod.ast.Decl: kodkod.ast.operator.Multiplicity multiplicity()>();

        $r12 = <kodkod.ast.operator.Multiplicity: kodkod.ast.operator.Multiplicity ONE>;

        if $r11 == $r12 goto label4;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot have a higher order declaration in a comprehension: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label4:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        r0.<kodkod.ast.Comprehension: kodkod.ast.Decls decls> = r2;

        r0.<kodkod.ast.Comprehension: kodkod.ast.Formula formula> = r1;

        return;
    }

    public kodkod.ast.Formula formula()
    {
        kodkod.ast.Comprehension r0;
        kodkod.ast.Formula $r1;

        r0 := @this: kodkod.ast.Comprehension;

        $r1 = r0.<kodkod.ast.Comprehension: kodkod.ast.Formula formula>;

        return $r1;
    }

    public kodkod.ast.Decls decls()
    {
        kodkod.ast.Decls $r1;
        kodkod.ast.Comprehension r0;

        r0 := @this: kodkod.ast.Comprehension;

        $r1 = r0.<kodkod.ast.Comprehension: kodkod.ast.Decls decls>;

        return $r1;
    }

    public int arity()
    {
        int $i0;
        kodkod.ast.Decls $r1;
        kodkod.ast.Comprehension r0;

        r0 := @this: kodkod.ast.Comprehension;

        $r1 = r0.<kodkod.ast.Comprehension: kodkod.ast.Decls decls>;

        $i0 = virtualinvoke $r1.<kodkod.ast.Decls: int size()>();

        return $i0;
    }

    public java.lang.Object accept(kodkod.ast.visitor.ReturnVisitor)
    {
        java.lang.Object $r2;
        kodkod.ast.Comprehension r1;
        kodkod.ast.visitor.ReturnVisitor r0;

        r1 := @this: kodkod.ast.Comprehension;

        r0 := @parameter0: kodkod.ast.visitor.ReturnVisitor;

        $r2 = interfaceinvoke r0.<kodkod.ast.visitor.ReturnVisitor: java.lang.Object visit(kodkod.ast.Comprehension)>(r1);

        return $r2;
    }

    public void accept(kodkod.ast.visitor.VoidVisitor)
    {
        kodkod.ast.visitor.VoidVisitor r0;
        kodkod.ast.Comprehension r1;

        r1 := @this: kodkod.ast.Comprehension;

        r0 := @parameter0: kodkod.ast.visitor.VoidVisitor;

        interfaceinvoke r0.<kodkod.ast.visitor.VoidVisitor: void visit(kodkod.ast.Comprehension)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        kodkod.ast.Formula $r6;
        kodkod.ast.Decls $r2;
        java.lang.StringBuilder $r0, $r4, $r5, $r8, $r9;
        java.lang.String $r3, $r7, $r10;
        kodkod.ast.Comprehension r1;

        r1 := @this: kodkod.ast.Comprehension;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("{ ");

        $r2 = virtualinvoke r1.<kodkod.ast.Comprehension: kodkod.ast.Decls decls()>();

        $r3 = virtualinvoke $r2.<kodkod.ast.Decls: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

        $r6 = virtualinvoke r1.<kodkod.ast.Comprehension: kodkod.ast.Formula formula()>();

        $r7 = virtualinvoke $r6.<kodkod.ast.Formula: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }
}
