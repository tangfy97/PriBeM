public abstract class com.hp.hpl.jena.sparql.modify.request.UpdateDropClear extends com.hp.hpl.jena.update.Update
{
    protected final com.hp.hpl.jena.sparql.modify.request.Target target;
    protected final boolean silent;

    protected void <init>(java.lang.String, boolean)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.modify.request.Target $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.modify.request.Target: com.hp.hpl.jena.sparql.modify.request.Target create(java.lang.String)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: void <init>(com.hp.hpl.jena.sparql.modify.request.Target,boolean)>($r2, z0);

        return;
    }

    protected void <init>(com.hp.hpl.jena.sparql.modify.request.Target, boolean)
    {
        com.hp.hpl.jena.sparql.modify.request.Target r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        r1 := @parameter0: com.hp.hpl.jena.sparql.modify.request.Target;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.hp.hpl.jena.update.Update: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: com.hp.hpl.jena.sparql.modify.request.Target target> = r1;

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: boolean silent> = z0;

        return;
    }

    protected void <init>(com.hp.hpl.jena.graph.Node, boolean)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.sparql.modify.request.Target $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.modify.request.Target: com.hp.hpl.jena.sparql.modify.request.Target create(com.hp.hpl.jena.graph.Node)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: void <init>(com.hp.hpl.jena.sparql.modify.request.Target,boolean)>($r2, z0);

        return;
    }

    public com.hp.hpl.jena.sparql.modify.request.Target getTarget()
    {
        com.hp.hpl.jena.sparql.modify.request.Target $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: com.hp.hpl.jena.sparql.modify.request.Target target>;

        return $r1;
    }

    public boolean isSilent()
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        $z0 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: boolean silent>;

        return $z0;
    }

    public boolean isDefault()
    {
        com.hp.hpl.jena.sparql.modify.request.Target $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: com.hp.hpl.jena.sparql.modify.request.Target target>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.Target: boolean isDefault()>();

        return $z0;
    }

    public boolean isAll()
    {
        com.hp.hpl.jena.sparql.modify.request.Target $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: com.hp.hpl.jena.sparql.modify.request.Target target>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.Target: boolean isAll()>();

        return $z0;
    }

    public boolean isAllNamed()
    {
        com.hp.hpl.jena.sparql.modify.request.Target $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: com.hp.hpl.jena.sparql.modify.request.Target target>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.Target: boolean isAllNamed()>();

        return $z0;
    }

    public boolean isOneGraph()
    {
        com.hp.hpl.jena.sparql.modify.request.Target $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: com.hp.hpl.jena.sparql.modify.request.Target target>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.Target: boolean isOneNamedGraph()>();

        return $z0;
    }

    public com.hp.hpl.jena.graph.Node getGraph()
    {
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.sparql.modify.request.Target $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: com.hp.hpl.jena.sparql.modify.request.Target target>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.Target: com.hp.hpl.jena.graph.Node getGraph()>();

        return $r2;
    }

    public boolean equalTo(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDropClear r0, r4;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r5;
        com.hp.hpl.jena.update.Update r1;
        java.lang.Class $r2, $r3;
        com.hp.hpl.jena.sparql.modify.request.Target $r6, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateDropClear;

        r1 := @parameter0: com.hp.hpl.jena.update.Update;

        r5 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (com.hp.hpl.jena.sparql.modify.request.UpdateDropClear) r1;

        $z1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: boolean silent>;

        $z0 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: boolean silent>;

        if $z1 == $z0 goto label4;

        return 0;

     label4:
        $r7 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: com.hp.hpl.jena.sparql.modify.request.Target target>;

        $r6 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateDropClear: com.hp.hpl.jena.sparql.modify.request.Target target>;

        $z2 = virtualinvoke $r7.<com.hp.hpl.jena.sparql.modify.request.Target: boolean equalTo(com.hp.hpl.jena.sparql.modify.request.Target,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r6, r5);

        return $z2;
    }
}
