public final class com.google.inject.spi.TypeConverterBinding extends java.lang.Object implements com.google.inject.spi.Element
{
    private final java.lang.Object source;
    private final com.google.inject.matcher.Matcher typeMatcher;
    private final com.google.inject.spi.TypeConverter typeConverter;

    public void <init>(java.lang.Object, com.google.inject.matcher.Matcher, com.google.inject.spi.TypeConverter)
    {
        com.google.inject.spi.TypeConverter r6, $r8;
        com.google.inject.spi.TypeConverterBinding r0;
        java.lang.Object r1, $r2, $r4, $r7;
        com.google.inject.matcher.Matcher r3, $r5;

        r0 := @this: com.google.inject.spi.TypeConverterBinding;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: com.google.inject.matcher.Matcher;

        r6 := @parameter2: com.google.inject.spi.TypeConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "source");

        r0.<com.google.inject.spi.TypeConverterBinding: java.lang.Object source> = $r2;

        $r4 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "typeMatcher");

        $r5 = (com.google.inject.matcher.Matcher) $r4;

        r0.<com.google.inject.spi.TypeConverterBinding: com.google.inject.matcher.Matcher typeMatcher> = $r5;

        $r7 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r6, "typeConverter");

        $r8 = (com.google.inject.spi.TypeConverter) $r7;

        r0.<com.google.inject.spi.TypeConverterBinding: com.google.inject.spi.TypeConverter typeConverter> = $r8;

        return;
    }

    public java.lang.Object getSource()
    {
        java.lang.Object $r1;
        com.google.inject.spi.TypeConverterBinding r0;

        r0 := @this: com.google.inject.spi.TypeConverterBinding;

        $r1 = r0.<com.google.inject.spi.TypeConverterBinding: java.lang.Object source>;

        return $r1;
    }

    public com.google.inject.matcher.Matcher getTypeMatcher()
    {
        com.google.inject.matcher.Matcher $r1;
        com.google.inject.spi.TypeConverterBinding r0;

        r0 := @this: com.google.inject.spi.TypeConverterBinding;

        $r1 = r0.<com.google.inject.spi.TypeConverterBinding: com.google.inject.matcher.Matcher typeMatcher>;

        return $r1;
    }

    public com.google.inject.spi.TypeConverter getTypeConverter()
    {
        com.google.inject.spi.TypeConverter $r1;
        com.google.inject.spi.TypeConverterBinding r0;

        r0 := @this: com.google.inject.spi.TypeConverterBinding;

        $r1 = r0.<com.google.inject.spi.TypeConverterBinding: com.google.inject.spi.TypeConverter typeConverter>;

        return $r1;
    }

    public java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor)
    {
        com.google.inject.spi.ElementVisitor r0;
        java.lang.Object $r2;
        com.google.inject.spi.TypeConverterBinding r1;

        r1 := @this: com.google.inject.spi.TypeConverterBinding;

        r0 := @parameter0: com.google.inject.spi.ElementVisitor;

        $r2 = interfaceinvoke r0.<com.google.inject.spi.ElementVisitor: java.lang.Object visit(com.google.inject.spi.TypeConverterBinding)>(r1);

        return $r2;
    }

    public void applyTo(com.google.inject.Binder)
    {
        com.google.inject.spi.TypeConverter $r4;
        com.google.inject.Binder r0, $r3;
        com.google.inject.spi.TypeConverterBinding r1;
        java.lang.Object $r2;
        com.google.inject.matcher.Matcher $r5;

        r1 := @this: com.google.inject.spi.TypeConverterBinding;

        r0 := @parameter0: com.google.inject.Binder;

        $r2 = virtualinvoke r1.<com.google.inject.spi.TypeConverterBinding: java.lang.Object getSource()>();

        $r3 = interfaceinvoke r0.<com.google.inject.Binder: com.google.inject.Binder withSource(java.lang.Object)>($r2);

        $r5 = r1.<com.google.inject.spi.TypeConverterBinding: com.google.inject.matcher.Matcher typeMatcher>;

        $r4 = r1.<com.google.inject.spi.TypeConverterBinding: com.google.inject.spi.TypeConverter typeConverter>;

        interfaceinvoke $r3.<com.google.inject.Binder: void convertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>($r5, $r4);

        return;
    }

    public java.lang.String toString()
    {
        com.google.inject.spi.TypeConverter $r2;
        com.google.inject.spi.TypeConverterBinding r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9, $r10;
        java.lang.Object $r8;
        com.google.inject.matcher.Matcher $r5;
        java.lang.String $r11;

        r1 := @this: com.google.inject.spi.TypeConverterBinding;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.google.inject.spi.TypeConverterBinding: com.google.inject.spi.TypeConverter typeConverter>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which matches ");

        $r5 = r1.<com.google.inject.spi.TypeConverterBinding: com.google.inject.matcher.Matcher typeMatcher>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (bound at ");

        $r8 = r1.<com.google.inject.spi.TypeConverterBinding: java.lang.Object source>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
