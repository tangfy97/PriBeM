public class org.codehaus.groovy.tools.shell.Main extends java.lang.Object implements groovy.lang.GroovyObject
{
    private static final org.codehaus.groovy.tools.shell.util.MessageSource messages;
    transient groovy.lang.MetaClass metaClass;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119696889;
    static java.lang.Class class$javax$swing$UIManager;
    static java.lang.Class class$groovy$util$CliBuilder;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$IO$Verbosity;
    static java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter;
    static java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$IO;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$NoExitSecurityManager;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class array$class$java$lang$String;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$HelpFormatter;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource;
    static java.lang.Class class$java$lang$SecurityManager;
    static java.lang.Class class$java$lang$System;

    public void <init>()
    {
        groovy.lang.MetaClass $r9, $r11;
        org.codehaus.groovy.tools.shell.Main r0;
        java.lang.Object[] $r6;
        java.lang.Class $r1, r2, $r3, r4, $r5, $r12, $r13, $r14;
        java.lang.Object $r7, $r8, $r10;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r1 != null goto label1;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r12;

        goto label2;

     label1:
        $r12 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label2:
        r2 = $r12;

        $r3 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label3;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r4 = $r13;

        $r5 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r5 != null goto label5;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r14;

        goto label6;

     label5:
        $r14 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r2, $r14, "initMetaClass", $r6);

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, r4);

        $r9 = (groovy.lang.MetaClass) $r8;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r9, r4);

        $r11 = (groovy.lang.MetaClass) $r10;

        r0.<org.codehaus.groovy.tools.shell.Main: groovy.lang.MetaClass metaClass> = $r11;

        return;
    }

    public static transient void main(java.lang.String[])
    {
        java.lang.Integer $r80, $r83, $r139, $r147, $r154;
        java.util.Map $r105, $r109, $r115, $r121, $r127, $r133, $r141, $r148, $r155;
        java.lang.Object[] $r12, $r14, $r19, $r22, $r27, $r36, $r44, $r46, $r51, $r53, $r63, $r65, $r67, $r69, $r72, $r73, $r79, $r82, $r87, $r92, $r98, $r99, $r107, $r108, $r111, $r113, $r114, $r117, $r119, $r120, $r123, $r125, $r126, $r129, $r131, $r132, $r135, $r137, $r138, $r143, $r145, $r146, $r150, $r152, $r153, $r157, $r159, $r169, $r177;
        org.codehaus.groovy.tools.shell.Main$_main_closure2 $r23;
        org.codehaus.groovy.tools.shell.Main$_main_closure1 $r66;
        org.codehaus.groovy.tools.shell.util.MessageSource $r75, $r110, $r116, $r122, $r128, $r134, $r142, $r149, $r156;
        java.awt.HeadlessException $r89;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r41;
        java.lang.Boolean $r140;
        java.lang.Class $r0, r1, $r2, $r3, $r7, $r8, $r9, $r24, $r25, $r26, $r30, $r32, $r34, $r35, $r39, $r43, $r45, $r48, $r50, $r54, $r57, $r60, $r74, $r78, $r81, $r84, $r86, $r93, $r94, $r95, $r96, $r97, $r100, $r101, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r170, $r171, $r173, $r174, $r175, $r176, $r178, $r179, $r181, $r182, $r183, $r184, $r185, $r186;
        java.lang.Object $r4, $r6, $r11, $r13, $r15, $r16, $r17, $r18, $r20, $r28, $r29, $r31, $r33, $r37, $r38, $r42, $r47, $r52, $r55, $r56, $r58, $r59, $r61, $r62, $r64, $r68, $r70, $r71, $r76, $r77, $r90, $r91, $r102, $r103, $r104, $r106, $r112, $r118, $r124, $r130, $r136, $r144, $r151, $r158, $r160, $r161, $r172, $r180;
        java.lang.Throwable $r85, $r88;
        groovy.lang.Reference $r5, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String[] r10, $r40;
        java.lang.SecurityManager $r49;

        r10 := @parameter0: java.lang.String[];

        $r0 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r93 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r93;

        goto label02;

     label01:
        $r93 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label02:
        r1 = $r93;

        $r2 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r94 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r94;

        goto label04;

     label03:
        $r94 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

        if $r3 != null goto label05;

        $r95 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.IO");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO> = $r95;

        goto label06;

     label05:
        $r95 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r95);

        $r5 = new groovy.lang.Reference;

        specialinvoke $r5.<groovy.lang.Reference: void <init>(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r7 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

        if $r7 != null goto label07;

        $r96 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Logger");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger> = $r96;

        goto label08;

     label07:
        $r96 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

     label08:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r6, r1, $r96, "io");

        $r8 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$util$CliBuilder>;

        if $r8 != null goto label09;

        $r84 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        $r97 = $r84;

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$util$CliBuilder> = $r84;

        goto label10;

     label09:
        $r97 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$util$CliBuilder>;

     label10:
        $r98 = newarray (java.lang.Object)[1];

        $r99 = newarray (java.lang.Object)[6];

        $r99[0] = "usage";

        $r99[1] = "groovysh [options] [...]";

        $r99[2] = "formatter";

        $r9 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$HelpFormatter>;

        if $r9 != null goto label11;

        $r100 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.HelpFormatter");

        $r101 = $r100;

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$HelpFormatter> = $r100;

        goto label12;

     label11:
        $r101 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$HelpFormatter>;

     label12:
        $r102 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r101);

        $r99[3] = $r102;

        $r99[4] = "writer";

        $r103 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r104 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r103, "out");

        $r99[5] = $r104;

        $r105 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r99);

        $r98[0] = $r105;

        $r106 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r97, $r98);

        $r107 = newarray (java.lang.Object)[2];

        $r108 = newarray (java.lang.Object)[2];

        $r108[0] = "longOpt";

        $r108[1] = "help";

        $r109 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r108);

        $r107[0] = $r109;

        $r110 = <org.codehaus.groovy.tools.shell.Main: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r111 = newarray (java.lang.Object)[1];

        $r111[0] = "cli.option.help.description";

        $r112 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r110, "getAt", $r111);

        $r107[1] = $r112;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r106, "h", $r107);

        $r113 = newarray (java.lang.Object)[2];

        $r114 = newarray (java.lang.Object)[2];

        $r114[0] = "longOpt";

        $r114[1] = "version";

        $r115 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r114);

        $r113[0] = $r115;

        $r116 = <org.codehaus.groovy.tools.shell.Main: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r117 = newarray (java.lang.Object)[1];

        $r117[0] = "cli.option.version.description";

        $r118 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r116, "getAt", $r117);

        $r113[1] = $r118;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r106, "V", $r113);

        $r119 = newarray (java.lang.Object)[2];

        $r120 = newarray (java.lang.Object)[2];

        $r120[0] = "longOpt";

        $r120[1] = "verbose";

        $r121 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r120);

        $r119[0] = $r121;

        $r122 = <org.codehaus.groovy.tools.shell.Main: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r123 = newarray (java.lang.Object)[1];

        $r123[0] = "cli.option.verbose.description";

        $r124 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r122, "getAt", $r123);

        $r119[1] = $r124;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r106, "v", $r119);

        $r125 = newarray (java.lang.Object)[2];

        $r126 = newarray (java.lang.Object)[2];

        $r126[0] = "longOpt";

        $r126[1] = "quiet";

        $r127 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r126);

        $r125[0] = $r127;

        $r128 = <org.codehaus.groovy.tools.shell.Main: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r129 = newarray (java.lang.Object)[1];

        $r129[0] = "cli.option.quiet.description";

        $r130 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r128, "getAt", $r129);

        $r125[1] = $r130;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r106, "q", $r125);

        $r131 = newarray (java.lang.Object)[2];

        $r132 = newarray (java.lang.Object)[2];

        $r132[0] = "longOpt";

        $r132[1] = "debug";

        $r133 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r132);

        $r131[0] = $r133;

        $r134 = <org.codehaus.groovy.tools.shell.Main: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r135 = newarray (java.lang.Object)[1];

        $r135[0] = "cli.option.debug.description";

        $r136 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r134, "getAt", $r135);

        $r131[1] = $r136;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r106, "d", $r131);

        $r137 = newarray (java.lang.Object)[2];

        $r138 = newarray (java.lang.Object)[8];

        $r138[0] = "longOpt";

        $r138[1] = "color";

        $r138[2] = "args";

        $r139 = new java.lang.Integer;

        specialinvoke $r139.<java.lang.Integer: void <init>(int)>(1);

        $r138[3] = $r139;

        $r138[4] = "argName";

        $r138[5] = "FLAG";

        $r138[6] = "optionalArg";

        $r140 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r138[7] = $r140;

        $r141 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r138);

        $r137[0] = $r141;

        $r142 = <org.codehaus.groovy.tools.shell.Main: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r143 = newarray (java.lang.Object)[1];

        $r143[0] = "cli.option.color.description";

        $r144 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r142, "getAt", $r143);

        $r137[1] = $r144;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r106, "C", $r137);

        $r145 = newarray (java.lang.Object)[2];

        $r146 = newarray (java.lang.Object)[6];

        $r146[0] = "longOpt";

        $r146[1] = "define";

        $r146[2] = "args";

        $r147 = new java.lang.Integer;

        specialinvoke $r147.<java.lang.Integer: void <init>(int)>(1);

        $r146[3] = $r147;

        $r146[4] = "argName";

        $r146[5] = "NAME=VALUE";

        $r148 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r146);

        $r145[0] = $r148;

        $r149 = <org.codehaus.groovy.tools.shell.Main: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r150 = newarray (java.lang.Object)[1];

        $r150[0] = "cli.option.define.description";

        $r151 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r149, "getAt", $r150);

        $r145[1] = $r151;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r106, "D", $r145);

        $r152 = newarray (java.lang.Object)[2];

        $r153 = newarray (java.lang.Object)[6];

        $r153[0] = "longOpt";

        $r153[1] = "terminal";

        $r153[2] = "args";

        $r154 = new java.lang.Integer;

        specialinvoke $r154.<java.lang.Integer: void <init>(int)>(1);

        $r153[3] = $r154;

        $r153[4] = "argName";

        $r153[5] = "TYPE";

        $r155 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r153);

        $r152[0] = $r155;

        $r156 = <org.codehaus.groovy.tools.shell.Main: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r157 = newarray (java.lang.Object)[1];

        $r157[0] = "cli.option.terminal.description";

        $r158 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r156, "getAt", $r157);

        $r152[1] = $r158;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r106, "T", $r152);

        $r159 = newarray (java.lang.Object)[1];

        $r159[0] = r10;

        $r160 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r106, "parse", $r159);

        $r161 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r160, "h");

        $z7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r161);

        if $z7 == 0 goto label15;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r106, "usage");

        $r81 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

        if $r81 != null goto label13;

        $r162 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System> = $r162;

        goto label14;

     label13:
        $r162 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

     label14:
        $r82 = newarray (java.lang.Object)[1];

        $r83 = new java.lang.Integer;

        specialinvoke $r83.<java.lang.Integer: void <init>(int)>(0);

        $r82[0] = $r83;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r162, "exit", $r82);

        goto label15;

     label15:
        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r160, "V");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r11);

        if $z0 == 0 goto label20;

        $r70 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r71 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r70, "out");

        $r72 = newarray (java.lang.Object)[1];

        $r75 = <org.codehaus.groovy.tools.shell.Main: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r73 = newarray (java.lang.Object)[2];

        $r73[0] = "cli.info.version";

        $r74 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper>;

        if $r74 != null goto label16;

        $r163 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.InvokerHelper");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper> = $r163;

        goto label17;

     label16:
        $r163 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper>;

     label17:
        $r76 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r163, "version");

        $r73[1] = $r76;

        $r77 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r75, "format", $r73);

        $r72[0] = $r77;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r71, "println", $r72);

        $r78 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

        if $r78 != null goto label18;

        $r164 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System> = $r164;

        goto label19;

     label18:
        $r164 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

     label19:
        $r79 = newarray (java.lang.Object)[1];

        $r80 = new java.lang.Integer;

        specialinvoke $r80.<java.lang.Integer: void <init>(int)>(0);

        $r79[0] = $r80;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r164, "exit", $r79);

        goto label20;

     label20:
        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "T";

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r160, "hasOption", $r12);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r13);

        if $z1 == 0 goto label21;

        $r67 = newarray (java.lang.Object)[1];

        $r67[0] = "T";

        $r68 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r160, "getOptionValue", $r67);

        $r69 = newarray (java.lang.Object)[1];

        $r69[0] = $r68;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, r1, "setTerminalType", $r69);

        goto label21;

     label21:
        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = "D";

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r160, "hasOption", $r14);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r15);

        if $z2 == 0 goto label22;

        $r63 = newarray (java.lang.Object)[1];

        $r63[0] = "D";

        $r64 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r160, "getOptionValues", $r63);

        $r65 = newarray (java.lang.Object)[1];

        $r66 = new org.codehaus.groovy.tools.shell.Main$_main_closure1;

        specialinvoke $r66.<org.codehaus.groovy.tools.shell.Main$_main_closure1: void <init>(java.lang.Object,java.lang.Object)>(r1, r1);

        $r65[0] = $r66;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r64, "each", $r65);

        goto label22;

     label22:
        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r160, "v");

        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r16);

        if $z3 == 0 goto label25;

        $r60 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO$Verbosity>;

        if $r60 != null goto label23;

        $r165 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.IO$Verbosity");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO$Verbosity> = $r165;

        goto label24;

     label23:
        $r165 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO$Verbosity>;

     label24:
        $r61 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r165, "VERBOSE");

        $r62 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r61, r1, $r62, "verbosity");

        goto label25;

     label25:
        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r160, "d");

        $z4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r17);

        if $z4 == 0 goto label28;

        $r57 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO$Verbosity>;

        if $r57 != null goto label26;

        $r166 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.IO$Verbosity");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO$Verbosity> = $r166;

        goto label27;

     label26:
        $r166 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO$Verbosity>;

     label27:
        $r58 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r166, "DEBUG");

        $r59 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r58, r1, $r59, "verbosity");

        goto label28;

     label28:
        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r160, "q");

        $z5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r18);

        if $z5 == 0 goto label31;

        $r54 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO$Verbosity>;

        if $r54 != null goto label29;

        $r167 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.IO$Verbosity");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO$Verbosity> = $r167;

        goto label30;

     label29:
        $r167 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$IO$Verbosity>;

     label30:
        $r55 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r167, "QUIET");

        $r56 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r55, r1, $r56, "verbosity");

        goto label31;

     label31:
        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = "C";

        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r160, "hasOption", $r19);

        $z6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r20);

        if $z6 == 0 goto label32;

        $r51 = newarray (java.lang.Object)[1];

        $r51[0] = "C";

        $r52 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r160, "getOptionValue", $r51);

        $r53 = newarray (java.lang.Object)[1];

        $r53[0] = $r52;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, r1, "setColor", $r53);

        goto label32;

     label32:
        $r21 = new groovy.lang.Reference;

        specialinvoke $r21.<groovy.lang.Reference: void <init>(java.lang.Object)>(null);

        $r22 = newarray (java.lang.Object)[1];

        $r23 = new org.codehaus.groovy.tools.shell.Main$_main_closure2;

        specialinvoke $r23.<org.codehaus.groovy.tools.shell.Main$_main_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>(r1, r1, $r21, $r5);

        $r22[0] = $r23;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, r1, "addShutdownHook", $r22);

     label33:
        $r24 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$javax$swing$UIManager>;

        if $r24 != null goto label34;

        $r50 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("javax.swing.UIManager");

        $r168 = $r50;

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$javax$swing$UIManager> = $r50;

        goto label35;

     label34:
        $r168 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$javax$swing$UIManager>;

     label35:
        $r169 = newarray (java.lang.Object)[1];

        $r25 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$javax$swing$UIManager>;

        if $r25 != null goto label36;

        $r170 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("javax.swing.UIManager");

        $r171 = $r170;

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$javax$swing$UIManager> = $r170;

        goto label37;

     label36:
        $r171 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$javax$swing$UIManager>;

     label37:
        $r172 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r171, "getSystemLookAndFeelClassName");

        $r169[0] = $r172;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r168, "setLookAndFeel", $r169);

        goto label39;

     label38:
        $r89 := @caughtexception;

        $r90 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r91 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r90, "err");

        $r92 = newarray (java.lang.Object)[1];

        $r92[0] = "@|red WARNING:| Running in AWT Headless mode, \'inspect\' will fail";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r91, "println", $r92);

        goto label39;

     label39:
        goto label41;

     label40:
        $r88 := @caughtexception;

        throw $r88;

     label41:
        $r26 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r26 != null goto label42;

        $r173 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r173;

        goto label43;

     label42:
        $r173 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label43:
        $r27 = newarray (java.lang.Object)[1];

        $r28 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r27[0] = $r28;

        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r173, $r27);

        $r30 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

        if $r30 != null goto label44;

        $r174 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System> = $r174;

        goto label45;

     label44:
        $r174 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

     label45:
        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r174, "getSecurityManager");

        $r32 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$SecurityManager>;

        if $r32 != null goto label46;

        $r175 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.SecurityManager");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$SecurityManager> = $r175;

        goto label47;

     label46:
        $r175 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$SecurityManager>;

     label47:
        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r31, $r175);

        $r49 = (java.lang.SecurityManager) $r33;

        $r34 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

        if $r34 != null goto label48;

        $r48 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.System");

        $r176 = $r48;

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System> = $r48;

        goto label49;

     label48:
        $r176 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

     label49:
        $r177 = newarray (java.lang.Object)[1];

        $r35 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$NoExitSecurityManager>;

        if $r35 != null goto label50;

        $r178 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.NoExitSecurityManager");

        $r179 = $r178;

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$NoExitSecurityManager> = $r178;

        goto label51;

     label50:
        $r179 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$NoExitSecurityManager>;

     label51:
        $r180 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r179);

        $r177[0] = $r180;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r176, "setSecurityManager", $r177);

     label52:
        $r36 = newarray (java.lang.Object)[1];

        $r37 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r160, "arguments");

        $r181 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class array$class$java$lang$String>;

        if $r181 != null goto label53;

        $r182 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("[Ljava.lang.String;");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class array$class$java$lang$String> = $r182;

        goto label54;

     label53:
        $r182 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class array$class$java$lang$String>;

     label54:
        $r38 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object asType(java.lang.Object,java.lang.Class)>($r37, $r182);

        $r40 = (java.lang.String[]) $r38;

        $r39 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class array$class$java$lang$String>;

        if $r39 != null goto label55;

        $r183 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("[Ljava.lang.String;");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class array$class$java$lang$String> = $r183;

        goto label56;

     label55:
        $r183 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class array$class$java$lang$String>;

     label56:
        $r41 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r40, $r183);

        $r36[0] = $r41;

        $r42 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r29, "run", $r36);

        virtualinvoke $r21.<groovy.lang.Reference: void set(java.lang.Object)>($r42);

        goto label57;

     label57:
        $r43 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

        if $r43 != null goto label58;

        $r184 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System> = $r184;

        goto label59;

     label58:
        $r184 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

     label59:
        $r44 = newarray (java.lang.Object)[1];

        $r44[0] = $r49;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r184, "setSecurityManager", $r44);

        goto label63;

     label60:
        $r85 := @caughtexception;

        $r86 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

        if $r86 != null goto label61;

        $r185 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System> = $r185;

        goto label62;

     label61:
        $r185 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

     label62:
        $r87 = newarray (java.lang.Object)[1];

        $r87[0] = $r49;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r185, "setSecurityManager", $r87);

        throw $r85;

     label63:
        $r45 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

        if $r45 != null goto label64;

        $r186 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System> = $r186;

        goto label65;

     label64:
        $r186 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

     label65:
        $r46 = newarray (java.lang.Object)[1];

        $r47 = virtualinvoke $r21.<groovy.lang.Reference: java.lang.Object get()>();

        $r46[0] = $r47;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r186, "exit", $r46);

        return;

        catch java.awt.HeadlessException from label33 to label38 with label38;
        catch java.lang.Throwable from label33 to label39 with label40;
        catch java.lang.Throwable from label52 to label57 with label60;
    }

    public static void setTerminalType(java.lang.String)
    {
        java.lang.Object[] $r9;
        java.lang.StringBuffer $r3;
        java.lang.Boolean $r10;
        java.lang.String $r7, r14, r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Class $r0, r1, $r2, $r5, $r8, $r11, $r12, $r15, $r16, $r17, $r19, $r20, $r21;
        java.lang.Object $r4, $r6, $r13;

        r14 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r15 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r15;

        goto label02;

     label01:
        $r15 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label02:
        r1 = $r15;

        $r2 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r16;

        goto label04;

     label03:
        $r16 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r14, null);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>("(type != null). Values: ");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("type = ");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r14);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r3, null);

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r14, "toLowerCase");

        $r5 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label07;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String> = $r17;

        goto label08;

     label07:
        $r17 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

     label08:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r17);

        $r7 = (java.lang.String) $r6;

        r18 = $r7;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r7, "auto");

        if $z1 == 0 goto label11;

        $r12 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

        if $r12 != null goto label09;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String> = $r19;

        goto label10;

     label09:
        $r19 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

     label10:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r19);

        r18 = (java.lang.String) $r13;

        goto label22;

     label11:
        $z2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r7, "unix");

        if $z2 == 0 goto label12;

        r18 = "jline.UnixTerminal";

        goto label22;

     label12:
        $z3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r7, "win");

        if $z3 == 0 goto label13;

        goto label14;

     label13:
        $z4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r7, "windows");

        if $z4 == 0 goto label15;

     label14:
        r18 = "jline.WindowsTerminal";

        goto label22;

     label15:
        $z5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r7, "false");

        if $z5 == 0 goto label16;

        goto label17;

     label16:
        $z6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r7, "off");

        if $z6 == 0 goto label18;

     label17:
        goto label19;

     label18:
        $z7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r7, "none");

        if $z7 == 0 goto label22;

     label19:
        r18 = "jline.UnsupportedTerminal";

        $r10 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r11 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI>;

        if $r11 != null goto label20;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.ANSI");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI> = $r20;

        goto label21;

     label20:
        $r20 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI>;

     label21:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r10, r1, $r20, "enabled");

        goto label22;

     label22:
        $z8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r18, null);

        if $z8 == 0 goto label25;

        $r8 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

        if $r8 != null goto label23;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System> = $r21;

        goto label24;

     label23:
        $r21 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

     label24:
        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "jline.terminal";

        $r9[1] = r18;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r21, "setProperty", $r9);

        goto label25;

     label25:
        return;
    }

    public static void setColor(java.lang.Object)
    {
        java.lang.Object[] $r4;
        java.lang.Class $r0, r1, $r2, $r3, $r8, $r9, $r11, $r12, $r13;
        java.lang.Object $r5, $r6, r7, r10;
        boolean $z0;

        r7 := @parameter0: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r8;

        goto label02;

     label01:
        $r8 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label02:
        r1 = $r8;

        $r2 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label04;

     label03:
        $r9 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r7, null);

        if $z0 == 0 goto label05;

        r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label08;

     label05:
        $r3 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$Boolean>;

        if $r3 != null goto label06;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$Boolean> = $r11;

        goto label07;

     label06:
        $r11 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$Boolean>;

     label07:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r7;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r11, "valueOf", $r4);

        r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r5, "booleanValue");

     label08:
        $r6 = r10;

        $r12 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI>;

        if $r12 != null goto label09;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.ANSI");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI> = $r13;

        goto label10;

     label09:
        $r13 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI>;

     label10:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r6, r1, $r13, "enabled");

        return;
    }

    public static void setSystemProperty(java.lang.String)
    {
        java.lang.Integer $r10, $r18, $r21, $r26;
        boolean $z0;
        java.lang.Object[] $r8, $r16, $r17, $r20, $r25;
        java.lang.String r7, $r30, $r31, r37, r39;
        java.lang.Class $r0, r1, $r2, $r3, $r5, $r11, $r14, $r23, $r28, $r32, $r33, $r34, $r35, $r36, $r38, $r40, $r41, $r42, $r43;
        java.lang.Object $r4, $r6, $r9, $r12, $r13, $r15, $r19, $r22, $r24, $r27, $r29;

        r7 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r32 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r32;

        goto label02;

     label01:
        $r32 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label02:
        r1 = $r32;

        $r2 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r33 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r33;

        goto label04;

     label03:
        $r33 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

        if $r3 != null goto label05;

        $r34 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String> = $r34;

        goto label06;

     label05:
        $r34 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r34);

        $r31 = (java.lang.String) $r4;

        $r5 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label07;

        $r35 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String> = $r35;

        goto label08;

     label07:
        $r35 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

     label08:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r35);

        $r30 = (java.lang.String) $r6;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = "=";

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r7, "indexOf", $r8);

        $r10 = new java.lang.Integer;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>(0);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $z0 == 0 goto label13;

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = "=";

        $r18 = new java.lang.Integer;

        specialinvoke $r18.<java.lang.Integer: void <init>(int)>(2);

        $r17[1] = $r18;

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r7, "split", $r17);

        $r20 = newarray (java.lang.Object)[1];

        $r21 = new java.lang.Integer;

        specialinvoke $r21.<java.lang.Integer: void <init>(int)>(0);

        $r20[0] = $r21;

        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r19, "getAt", $r20);

        $r23 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

        if $r23 != null goto label09;

        $r36 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String> = $r36;

        goto label10;

     label09:
        $r36 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

     label10:
        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r22, $r36);

        r37 = (java.lang.String) $r24;

        $r25 = newarray (java.lang.Object)[1];

        $r26 = new java.lang.Integer;

        specialinvoke $r26.<java.lang.Integer: void <init>(int)>(1);

        $r25[0] = $r26;

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r19, "getAt", $r25);

        $r28 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

        if $r28 != null goto label11;

        $r38 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String> = $r38;

        goto label12;

     label11:
        $r38 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

     label12:
        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r27, $r38);

        r39 = (java.lang.String) $r29;

        goto label18;

     label13:
        r37 = r7;

        $r11 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$Boolean>;

        if $r11 != null goto label14;

        $r40 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$Boolean> = $r40;

        goto label15;

     label14:
        $r40 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$Boolean>;

     label15:
        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r40, "TRUE");

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r12, "toString");

        $r14 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

        if $r14 != null goto label16;

        $r41 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String> = $r41;

        goto label17;

     label16:
        $r41 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$String>;

     label17:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r41);

        r39 = (java.lang.String) $r15;

     label18:
        $r42 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

        if $r42 != null goto label19;

        $r43 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System> = $r43;

        goto label20;

     label19:
        $r43 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$java$lang$System>;

     label20:
        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = r37;

        $r16[1] = r39;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r43, "setProperty", $r16);

        return;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        org.codehaus.groovy.tools.shell.Main r4;
        java.lang.Object[] $r10;
        boolean $z0;
        groovy.lang.MetaClass $r5, $r6, $r8, $r13, $r15;
        java.lang.Class $r0, r1, $r2, r3, $r9, $r16, $r17, $r18;
        java.lang.Object $r7, $r11, $r12, $r14;

        r4 := @this: org.codehaus.groovy.tools.shell.Main;

        $r0 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r3 = $r17;

        $r5 = r4.<org.codehaus.groovy.tools.shell.Main: groovy.lang.MetaClass metaClass>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, null);

        if $z0 == 0 goto label7;

        $r9 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r9 != null goto label5;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r18;

        goto label6;

     label5:
        $r18 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r4;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, $r18, "initMetaClass", $r10);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, r3);

        $r13 = (groovy.lang.MetaClass) $r12;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, r3);

        $r15 = (groovy.lang.MetaClass) $r14;

        r4.<org.codehaus.groovy.tools.shell.Main: groovy.lang.MetaClass metaClass> = $r15;

        goto label7;

     label7:
        $r6 = r4.<org.codehaus.groovy.tools.shell.Main: groovy.lang.MetaClass metaClass>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, r3);

        $r8 = (groovy.lang.MetaClass) $r7;

        return $r8;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r3;
        org.codehaus.groovy.tools.shell.Main r2;
        java.lang.Class $r0, $r1, $r4, $r5;

        r2 := @this: org.codehaus.groovy.tools.shell.Main;

        r3 := @parameter0: groovy.lang.MetaClass;

        $r0 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r2.<org.codehaus.groovy.tools.shell.Main: groovy.lang.MetaClass metaClass> = r3;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        org.codehaus.groovy.tools.shell.Main r2;
        java.lang.Class $r0, $r1, $r7, $r8;
        java.lang.Object r5, $r6;
        java.lang.String r4;

        r2 := @this: org.codehaus.groovy.tools.shell.Main;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.shell.Main: groovy.lang.MetaClass getMetaClass()>();

        $r6 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return $r6;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r3;
        org.codehaus.groovy.tools.shell.Main r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object $r5;
        java.lang.String r4;

        r2 := @this: org.codehaus.groovy.tools.shell.Main;

        r4 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.shell.Main: groovy.lang.MetaClass getMetaClass()>();

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r2, r4);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        org.codehaus.groovy.tools.shell.Main r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object r5;
        java.lang.String r4;

        r2 := @this: org.codehaus.groovy.tools.shell.Main;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.shell.Main: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.util.MessageSource $r6;
        java.lang.Long $r7, $r8, $r9, $r10;
        java.lang.Class $r0, r1, $r2, $r3, $r11, $r12, $r13;
        java.lang.Object $r5;

        $r0 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$0>;

     label2:
        r1 = $r11;

        $r2 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource>;

        if $r3 != null goto label5;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.MessageSource");

        <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource> = $r13;

        goto label6;

     label5:
        $r13 = <org.codehaus.groovy.tools.shell.Main: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource>;

     label6:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r13, $r4);

        $r6 = (org.codehaus.groovy.tools.shell.util.MessageSource) $r5;

        <org.codehaus.groovy.tools.shell.Main: org.codehaus.groovy.tools.shell.util.MessageSource messages> = $r6;

        $r7 = new java.lang.Long;

        specialinvoke $r7.<java.lang.Long: void <init>(long)>(1239119696889L);

        $r8 = (java.lang.Long) $r7;

        <org.codehaus.groovy.tools.shell.Main: java.lang.Long __timeStamp> = $r8;

        $r9 = new java.lang.Long;

        specialinvoke $r9.<java.lang.Long: void <init>(long)>(0L);

        $r10 = (java.lang.Long) $r9;

        <org.codehaus.groovy.tools.shell.Main: java.lang.Long __timeStamp__239_neverHappen1239119696889> = $r10;

        return;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.Main r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    java.lang.String super$1$toString()
    {
        org.codehaus.groovy.tools.shell.Main r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$1$wait(long)
    {
        long l0;
        org.codehaus.groovy.tools.shell.Main r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        org.codehaus.groovy.tools.shell.Main r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.Main r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.Main r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        org.codehaus.groovy.tools.shell.Main r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.codehaus.groovy.tools.shell.Main r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        org.codehaus.groovy.tools.shell.Main r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    int super$1$hashCode()
    {
        int $i0;
        org.codehaus.groovy.tools.shell.Main r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.Main r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Main;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
