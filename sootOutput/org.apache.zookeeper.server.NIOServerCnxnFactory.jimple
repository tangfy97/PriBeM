public class org.apache.zookeeper.server.NIOServerCnxnFactory extends org.apache.zookeeper.server.ServerCnxnFactory implements java.lang.Runnable
{
    private static final org.slf4j.Logger LOG;
    java.nio.channels.ServerSocketChannel ss;
    final java.nio.channels.Selector selector;
    final java.nio.ByteBuffer directBuffer;
    final java.util.HashMap ipMap;
    int maxClientCnxns;
    java.lang.Thread thread;

    public void <init>() throws java.io.IOException
    {
        java.nio.channels.Selector $r1;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        java.util.HashMap $r3;
        java.nio.ByteBuffer $r2;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        specialinvoke r0.<org.apache.zookeeper.server.ServerCnxnFactory: void <init>()>();

        $r1 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();

        r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.Selector selector> = $r1;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(65536);

        r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.ByteBuffer directBuffer> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashMap ipMap> = $r3;

        r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: int maxClientCnxns> = 60;

        return;
    }

    public void configure(java.net.InetSocketAddress, int) throws java.io.IOException
    {
        java.nio.channels.Selector $r19;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        java.net.ServerSocket $r10, $r17;
        java.lang.Thread $r1, $r7;
        int i0;
        java.lang.String $r6, $r15;
        org.slf4j.Logger $r12;
        java.net.InetSocketAddress r4;
        java.nio.channels.ServerSocketChannel $r8, $r9, $r16, $r18, $r20;
        java.lang.StringBuilder $r2, $r3, $r5, $r11, $r13, $r14;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        r4 := @parameter0: java.net.InetSocketAddress;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: void configureSaslLogin()>();

        $r1 = new java.lang.Thread;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NIOServerCxn.Factory:");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r0, $r6);

        r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.lang.Thread thread> = $r1;

        $r7 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.lang.Thread thread>;

        virtualinvoke $r7.<java.lang.Thread: void setDaemon(boolean)>(1);

        r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: int maxClientCnxns> = i0;

        $r8 = staticinvoke <java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel open()>();

        r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.ServerSocketChannel ss> = $r8;

        $r9 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.ServerSocketChannel ss>;

        $r10 = virtualinvoke $r9.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>();

        virtualinvoke $r10.<java.net.ServerSocket: void setReuseAddress(boolean)>(1);

        $r12 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("binding to port ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>($r15);

        $r16 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.ServerSocketChannel ss>;

        $r17 = virtualinvoke $r16.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>();

        virtualinvoke $r17.<java.net.ServerSocket: void bind(java.net.SocketAddress)>(r4);

        $r18 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.ServerSocketChannel ss>;

        virtualinvoke $r18.<java.nio.channels.ServerSocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0);

        $r20 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.ServerSocketChannel ss>;

        $r19 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.Selector selector>;

        virtualinvoke $r20.<java.nio.channels.ServerSocketChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>($r19, 16);

        return;
    }

    public int getMaxClientCnxnsPerHost()
    {
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        int $i0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        $i0 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: int maxClientCnxns>;

        return $i0;
    }

    public void setMaxClientCnxnsPerHost(int)
    {
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        int i0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: int maxClientCnxns> = i0;

        return;
    }

    public void start()
    {
        java.lang.Thread$State $r2, $r3;
        java.lang.Thread $r1, $r4;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.lang.Thread thread>;

        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.Thread$State getState()>();

        $r3 = <java.lang.Thread$State: java.lang.Thread$State NEW>;

        if $r2 != $r3 goto label1;

        $r4 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.lang.Thread thread>;

        virtualinvoke $r4.<java.lang.Thread: void start()>();

     label1:
        return;
    }

    public void startup(org.apache.zookeeper.server.ZooKeeperServer) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        org.apache.zookeeper.server.ZooKeeperServer r1;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        r1 := @parameter0: org.apache.zookeeper.server.ZooKeeperServer;

        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: void start()>();

        virtualinvoke r1.<org.apache.zookeeper.server.ZooKeeperServer: void startdata()>();

        virtualinvoke r1.<org.apache.zookeeper.server.ZooKeeperServer: void startup()>();

        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: void setZooKeeperServer(org.apache.zookeeper.server.ZooKeeperServer)>(r1);

        return;
    }

    public java.net.InetSocketAddress getLocalAddress()
    {
        java.net.ServerSocket $r2;
        java.net.SocketAddress $r3;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        java.net.InetSocketAddress $r4;
        java.nio.channels.ServerSocketChannel $r1;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.ServerSocketChannel ss>;

        $r2 = virtualinvoke $r1.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>();

        $r3 = virtualinvoke $r2.<java.net.ServerSocket: java.net.SocketAddress getLocalSocketAddress()>();

        $r4 = (java.net.InetSocketAddress) $r3;

        return $r4;
    }

    public int getLocalPort()
    {
        java.net.ServerSocket $r2;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        int $i0;
        java.nio.channels.ServerSocketChannel $r1;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.ServerSocketChannel ss>;

        $r2 = virtualinvoke $r1.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>();

        $i0 = virtualinvoke $r2.<java.net.ServerSocket: int getLocalPort()>();

        return $i0;
    }

    private void addCnxn(org.apache.zookeeper.server.NIOServerCnxn)
    {
        java.lang.Throwable $r12, $r13;
        java.net.Socket $r6;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        java.util.Set r14;
        java.util.HashMap $r4, $r8, $r11;
        java.util.HashSet $r1, $r3, $r10;
        java.net.InetAddress $r7;
        java.nio.channels.SocketChannel $r5;
        org.apache.zookeeper.server.NIOServerCnxn r2;
        java.lang.Object $r9;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        r2 := @parameter0: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        entermonitor $r1;

     label01:
        $r3 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r2);

        $r4 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashMap ipMap>;

        entermonitor $r4;

     label02:
        $r5 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r6 = virtualinvoke $r5.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r7 = virtualinvoke $r6.<java.net.Socket: java.net.InetAddress getInetAddress()>();

        $r8 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashMap ipMap>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r14 = (java.util.Set) $r9;

        if r14 != null goto label03;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>(int)>(2);

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r2);

        $r11 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashMap ipMap>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10);

        goto label04;

     label03:
        interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>(r2);

     label04:
        exitmonitor $r4;

     label05:
        goto label08;

     label06:
        $r13 := @caughtexception;

        exitmonitor $r4;

     label07:
        throw $r13;

     label08:
        exitmonitor $r1;

     label09:
        goto label12;

     label10:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r12;

     label12:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected org.apache.zookeeper.server.NIOServerCnxn createConnection(java.nio.channels.SocketChannel, java.nio.channels.SelectionKey) throws java.io.IOException
    {
        org.apache.zookeeper.server.ZooKeeperServer $r4;
        java.nio.channels.SocketChannel r2;
        java.nio.channels.SelectionKey r3;
        org.apache.zookeeper.server.NIOServerCnxnFactory r1;
        org.apache.zookeeper.server.NIOServerCnxn $r0;

        r1 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        r2 := @parameter0: java.nio.channels.SocketChannel;

        r3 := @parameter1: java.nio.channels.SelectionKey;

        $r0 = new org.apache.zookeeper.server.NIOServerCnxn;

        $r4 = r1.<org.apache.zookeeper.server.NIOServerCnxnFactory: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        specialinvoke $r0.<org.apache.zookeeper.server.NIOServerCnxn: void <init>(org.apache.zookeeper.server.ZooKeeperServer,java.nio.channels.SocketChannel,java.nio.channels.SelectionKey,org.apache.zookeeper.server.NIOServerCnxnFactory)>($r4, r2, r3, r1);

        return $r0;
    }

    private int getClientCnxnCount(java.net.InetAddress)
    {
        java.lang.Throwable $r6;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        java.util.Set r5;
        java.util.HashMap $r1, $r3;
        java.net.InetAddress r2;
        int $i0;
        java.lang.Object $r4;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        r2 := @parameter0: java.net.InetAddress;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashMap ipMap>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashMap ipMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.util.Set) $r4;

        if r5 != null goto label3;

        exitmonitor $r1;

     label2:
        return 0;

     label3:
        $i0 = interfaceinvoke r5.<java.util.Set: int size()>();

        exitmonitor $r1;

     label4:
        return $i0;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void run()
    {
        java.net.SocketAddress $r25;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        java.net.InetAddress $r20;
        java.net.ServerSocket $r44;
        java.nio.channels.SocketChannel $r18;
        boolean $z0, $z1, $z2;
        java.util.Set $r4;
        java.lang.Exception $r38;
        org.apache.zookeeper.server.NIOServerCnxn $r30, r45;
        java.lang.StringBuilder $r10, $r12, $r13, $r21, $r23, $r26, $r31, $r33, $r34, $r35, $r36;
        java.lang.Throwable $r42;
        java.net.Socket $r19, $r24;
        java.nio.channels.Selector $r2, $r3, $r28;
        java.util.ArrayList $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r14, $r27, $r37;
        org.slf4j.Logger $r1, $r9, $r11, $r22, $r32, $r39, $r41;
        java.util.Iterator $r6;
        java.nio.channels.SelectionKey r8, $r29;
        java.lang.RuntimeException $r40;
        java.nio.channels.ServerSocketChannel $r17, $r43;
        java.nio.channels.SelectableChannel $r16;
        java.lang.Object $r7, $r15;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

     label01:
        $r43 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.ServerSocketChannel ss>;

        $r44 = virtualinvoke $r43.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>();

        $z2 = virtualinvoke $r44.<java.net.ServerSocket: boolean isClosed()>();

        if $z2 != 0 goto label18;

     label02:
        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.Selector selector>;

        virtualinvoke $r2.<java.nio.channels.Selector: int select(long)>(1000L);

        entermonitor r0;

     label03:
        $r3 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.Selector selector>;

        $r4 = virtualinvoke $r3.<java.nio.channels.Selector: java.util.Set selectedKeys()>();

        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r42 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r42;

     label07:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        staticinvoke <java.util.Collections: void shuffle(java.util.List)>($r5);

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.nio.channels.SelectionKey) $r7;

        $i0 = virtualinvoke r8.<java.nio.channels.SelectionKey: int readyOps()>();

        $i1 = $i0 & 16;

        if $i1 == 0 goto label11;

        $r16 = virtualinvoke r8.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();

        $r17 = (java.nio.channels.ServerSocketChannel) $r16;

        $r18 = virtualinvoke $r17.<java.nio.channels.ServerSocketChannel: java.nio.channels.SocketChannel accept()>();

        $r19 = virtualinvoke $r18.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r20 = virtualinvoke $r19.<java.net.Socket: java.net.InetAddress getInetAddress()>();

        $i5 = specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: int getClientCnxnCount(java.net.InetAddress)>($r20);

        $i6 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: int maxClientCnxns>;

        if $i6 <= 0 goto label09;

        $i7 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: int maxClientCnxns>;

        if $i5 < $i7 goto label09;

        $r32 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many connections from ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - max is ");

        $i8 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: int maxClientCnxns>;

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r32.<org.slf4j.Logger: void warn(java.lang.String)>($r37);

        virtualinvoke $r18.<java.nio.channels.SocketChannel: void close()>();

        goto label10;

     label09:
        $r22 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Accepted socket connection from ");

        $r24 = virtualinvoke $r18.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r25 = virtualinvoke $r24.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>($r27);

        virtualinvoke $r18.<java.nio.channels.SocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0);

        $r28 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.Selector selector>;

        $r29 = virtualinvoke $r18.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>($r28, 1);

        $r30 = virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: org.apache.zookeeper.server.NIOServerCnxn createConnection(java.nio.channels.SocketChannel,java.nio.channels.SelectionKey)>($r18, $r29);

        virtualinvoke $r29.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>($r30);

        specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: void addCnxn(org.apache.zookeeper.server.NIOServerCnxn)>($r30);

     label10:
        goto label13;

     label11:
        $i2 = virtualinvoke r8.<java.nio.channels.SelectionKey: int readyOps()>();

        $i3 = $i2 & 5;

        if $i3 == 0 goto label12;

        $r15 = virtualinvoke r8.<java.nio.channels.SelectionKey: java.lang.Object attachment()>();

        r45 = (org.apache.zookeeper.server.NIOServerCnxn) $r15;

        virtualinvoke r45.<org.apache.zookeeper.server.NIOServerCnxn: void doIO(java.nio.channels.SelectionKey)>(r8);

        goto label13;

     label12:
        $r9 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label13;

        $r11 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ops in select ");

        $i4 = virtualinvoke r8.<java.nio.channels.SelectionKey: int readyOps()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r14);

     label13:
        goto label08;

     label14:
        interfaceinvoke $r4.<java.util.Set: void clear()>();

     label15:
        goto label01;

     label16:
        $r40 := @caughtexception;

        $r41 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        interfaceinvoke $r41.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring unexpected runtime exception", $r40);

        goto label01;

     label17:
        $r38 := @caughtexception;

        $r39 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        interfaceinvoke $r39.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring exception", $r38);

        goto label01;

     label18:
        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: void closeAll()>();

        $r1 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("NIOServerCnxn factory exited run method");

        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.RuntimeException from label02 to label15 with label16;
        catch java.lang.Exception from label02 to label15 with label17;
    }

    public synchronized void closeAll()
    {
        java.lang.Throwable $r15;
        java.nio.channels.Selector $r1;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        long $l0;
        java.util.HashSet $r2, $r3, r5;
        java.lang.String $r12, $r14;
        boolean $z0;
        org.slf4j.Logger $r10;
        java.util.Iterator $r6;
        java.lang.Exception $r8;
        org.apache.zookeeper.server.NIOServerCnxn r16;
        java.lang.Object $r4, $r7;
        java.lang.StringBuilder $r9, $r11, $r13;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.Selector selector>;

        virtualinvoke $r1.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();

        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        entermonitor $r2;

     label01:
        $r3 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        $r4 = virtualinvoke $r3.<java.util.HashSet: java.lang.Object clone()>();

        r5 = (java.util.HashSet) $r4;

        exitmonitor $r2;

     label02:
        goto label05;

     label03:
        $r15 := @caughtexception;

        exitmonitor $r2;

     label04:
        throw $r15;

     label05:
        $r6 = virtualinvoke r5.<java.util.HashSet: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.zookeeper.server.NIOServerCnxn) $r7;

     label07:
        virtualinvoke r16.<org.apache.zookeeper.server.NIOServerCnxn: void close()>();

     label08:
        goto label10;

     label09:
        $r8 := @caughtexception;

        $r10 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring exception closing cnxn sessionid 0x");

        $l0 = r16.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId>;

        $r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r14, $r8);

     label10:
        goto label06;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public void shutdown()
    {
        org.slf4j.Logger $r9, $r11, $r13;
        java.nio.channels.Selector $r14;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        java.io.IOException $r8;
        java.lang.Exception $r10;
        java.nio.channels.ServerSocketChannel $r1;
        org.apache.zookeeper.Login $r4, $r7;
        org.apache.zookeeper.server.ZooKeeperServer $r5, $r6;
        java.lang.InterruptedException $r12;
        java.lang.Thread $r2, $r3;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

     label1:
        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.ServerSocketChannel ss>;

        virtualinvoke $r1.<java.nio.channels.ServerSocketChannel: void close()>();

        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: void closeAll()>();

        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.lang.Thread thread>;

        virtualinvoke $r2.<java.lang.Thread: void interrupt()>();

        $r3 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.lang.Thread thread>;

        virtualinvoke $r3.<java.lang.Thread: void join()>();

        $r4 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: org.apache.zookeeper.Login login>;

        if $r4 == null goto label2;

        $r7 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: org.apache.zookeeper.Login login>;

        virtualinvoke $r7.<org.apache.zookeeper.Login: void shutdown()>();

     label2:
        goto label5;

     label3:
        $r12 := @caughtexception;

        $r13 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring interrupted exception during shutdown", $r12);

        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring unexpected exception during shutdown", $r10);

     label5:
        $r14 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.Selector selector>;

        virtualinvoke $r14.<java.nio.channels.Selector: void close()>();

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        $r9 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Selector closing", $r8);

     label8:
        $r5 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        if $r5 == null goto label9;

        $r6 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        virtualinvoke $r6.<org.apache.zookeeper.server.ZooKeeperServer: void shutdown()>();

     label9:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public synchronized void closeSession(long)
    {
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        long l0;
        java.nio.channels.Selector $r1;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.channels.Selector selector>;

        virtualinvoke $r1.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();

        specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: void closeSessionWithoutWakeup(long)>(l0);

        return;
    }

    private void closeSessionWithoutWakeup(long)
    {
        java.lang.Throwable $r9;
        org.slf4j.Logger $r8;
        java.util.Iterator $r5;
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        long $l0, l1;
        java.lang.Exception $r7;
        java.util.HashSet $r1, $r2, r4;
        byte $b2;
        org.apache.zookeeper.server.NIOServerCnxn r10;
        java.lang.Object $r3, $r6;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        l1 := @parameter0: long;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        entermonitor $r1;

     label01:
        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.lang.Object clone()>();

        r4 = (java.util.HashSet) $r3;

        exitmonitor $r1;

     label02:
        goto label05;

     label03:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label04:
        throw $r9;

     label05:
        $r5 = virtualinvoke r4.<java.util.HashSet: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.zookeeper.server.NIOServerCnxn) $r6;

        $l0 = virtualinvoke r10.<org.apache.zookeeper.server.NIOServerCnxn: long getSessionId()>();

        $b2 = $l0 cmp l1;

        if $b2 != 0 goto label10;

     label07:
        virtualinvoke r10.<org.apache.zookeeper.server.NIOServerCnxn: void close()>();

     label08:
        goto label11;

     label09:
        $r7 := @caughtexception;

        $r8 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("exception during session close", $r7);

        goto label11;

     label10:
        goto label06;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public void join() throws java.lang.InterruptedException
    {
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        java.lang.Thread $r1;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.lang.Thread thread>;

        virtualinvoke $r1.<java.lang.Thread: void join()>();

        return;
    }

    public java.lang.Iterable getConnections()
    {
        org.apache.zookeeper.server.NIOServerCnxnFactory r0;
        java.util.HashSet $r1;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxnFactory;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        return $r1;
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0, $r4;
        org.apache.zookeeper.server.NIOServerCnxnFactory$1 $r1;
        java.nio.channels.Selector $r2;
        java.io.IOException $r3;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/NIOServerCnxnFactory;");

        <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG> = $r0;

        $r1 = new org.apache.zookeeper.server.NIOServerCnxnFactory$1;

        specialinvoke $r1.<org.apache.zookeeper.server.NIOServerCnxnFactory$1: void <init>()>();

        staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r1);

     label1:
        $r2 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();

        virtualinvoke $r2.<java.nio.channels.Selector: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.apache.zookeeper.server.NIOServerCnxnFactory: org.slf4j.Logger LOG>;

        interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Selector failed to open", $r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
