public abstract class org.apache.log4j.helpers.FileWatchdog extends java.lang.Thread
{
    public static final long DEFAULT_DELAY;
    protected java.lang.String filename;
    protected long delay;
    java.io.File file;
    long lastModif;
    boolean warnedAlready;
    boolean interrupted;

    protected void <init>(java.lang.String)
    {
        org.apache.log4j.helpers.FileWatchdog r0;
        java.lang.String r1;
        java.io.File $r2;

        r0 := @this: org.apache.log4j.helpers.FileWatchdog;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("FileWatchdog");

        r0.<org.apache.log4j.helpers.FileWatchdog: long delay> = 60000L;

        r0.<org.apache.log4j.helpers.FileWatchdog: long lastModif> = 0L;

        r0.<org.apache.log4j.helpers.FileWatchdog: boolean warnedAlready> = 0;

        r0.<org.apache.log4j.helpers.FileWatchdog: boolean interrupted> = 0;

        r0.<org.apache.log4j.helpers.FileWatchdog: java.lang.String filename> = r1;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        r0.<org.apache.log4j.helpers.FileWatchdog: java.io.File file> = $r2;

        virtualinvoke r0.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke r0.<org.apache.log4j.helpers.FileWatchdog: void checkAndConfigure()>();

        return;
    }

    public void setDelay(long)
    {
        long l0;
        org.apache.log4j.helpers.FileWatchdog r0;

        r0 := @this: org.apache.log4j.helpers.FileWatchdog;

        l0 := @parameter0: long;

        r0.<org.apache.log4j.helpers.FileWatchdog: long delay> = l0;

        return;
    }

    protected abstract void doOnChange();

    protected void checkAndConfigure()
    {
        long $l0, $l1;
        org.apache.log4j.helpers.FileWatchdog r0;
        byte $b2;
        java.lang.StringBuffer $r3, $r5, $r6, $r11, $r13, $r14, $r16, $r17;
        int $i3;
        java.lang.SecurityException $r9;
        java.lang.String $r4, $r7, $r12, $r15;
        boolean $z0, $z1;
        java.io.File $r1, $r8;

        r0 := @this: org.apache.log4j.helpers.FileWatchdog;

     label1:
        $r1 = r0.<org.apache.log4j.helpers.FileWatchdog: java.io.File file>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Was not allowed to read check file existance, file:[");

        $r12 = r0.<org.apache.log4j.helpers.FileWatchdog: java.lang.String filename>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r15);

        r0.<org.apache.log4j.helpers.FileWatchdog: boolean interrupted> = 1;

        return;

     label4:
        if $z0 == 0 goto label6;

        $r8 = r0.<org.apache.log4j.helpers.FileWatchdog: java.io.File file>;

        $l0 = virtualinvoke $r8.<java.io.File: long lastModified()>();

        $l1 = r0.<org.apache.log4j.helpers.FileWatchdog: long lastModif>;

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label5;

        r0.<org.apache.log4j.helpers.FileWatchdog: long lastModif> = $l0;

        virtualinvoke r0.<org.apache.log4j.helpers.FileWatchdog: void doOnChange()>();

        r0.<org.apache.log4j.helpers.FileWatchdog: boolean warnedAlready> = 0;

     label5:
        goto label7;

     label6:
        $z1 = r0.<org.apache.log4j.helpers.FileWatchdog: boolean warnedAlready>;

        if $z1 != 0 goto label7;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r4 = r0.<org.apache.log4j.helpers.FileWatchdog: java.lang.String filename>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] does not exist.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r7);

        r0.<org.apache.log4j.helpers.FileWatchdog: boolean warnedAlready> = 1;

     label7:
        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public void run()
    {
        org.apache.log4j.helpers.FileWatchdog r0;
        java.lang.InterruptedException $r1;
        long $l0;
        boolean $z0;

        r0 := @this: org.apache.log4j.helpers.FileWatchdog;

     label1:
        $z0 = r0.<org.apache.log4j.helpers.FileWatchdog: boolean interrupted>;

        if $z0 != 0 goto label6;

     label2:
        $l0 = r0.<org.apache.log4j.helpers.FileWatchdog: long delay>;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

     label3:
        goto label5;

     label4:
        $r1 := @caughtexception;

     label5:
        virtualinvoke r0.<org.apache.log4j.helpers.FileWatchdog: void checkAndConfigure()>();

        goto label1;

     label6:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.helpers.FileWatchdog: long DEFAULT_DELAY> = 60000L;

        return;
    }
}
