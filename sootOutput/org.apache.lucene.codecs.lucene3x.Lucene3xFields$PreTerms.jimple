class org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms extends org.apache.lucene.index.Terms
{
    final org.apache.lucene.index.FieldInfo fieldInfo;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.lucene3x.Lucene3xFields this$0;

    void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xFields, org.apache.lucene.index.FieldInfo)
    {
        org.apache.lucene.index.FieldInfo r2;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        r1 := @parameter0: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        r2 := @parameter1: org.apache.lucene.index.FieldInfo;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: org.apache.lucene.codecs.lucene3x.Lucene3xFields this$0> = r1;

        specialinvoke r0.<org.apache.lucene.index.Terms: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: org.apache.lucene.index.FieldInfo fieldInfo> = r2;

        return;
    }

    public org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTermsEnum $r0;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields $r2;
        org.apache.lucene.index.TermsEnum r4;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms r1;
        org.apache.lucene.index.FieldInfo $r3;

        r1 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        r4 := @parameter0: org.apache.lucene.index.TermsEnum;

        $r0 = new org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTermsEnum;

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: org.apache.lucene.codecs.lucene3x.Lucene3xFields this$0>;

        specialinvoke $r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTermsEnum: void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xFields,org.apache.lucene.codecs.lucene3x.Lucene3xFields$1)>($r2, null);

        $r3 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: org.apache.lucene.index.FieldInfo fieldInfo>;

        virtualinvoke $r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTermsEnum: void reset(org.apache.lucene.index.FieldInfo)>($r3);

        return $r0;
    }

    public java.util.Comparator getComparator()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xFields $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms r0;
        java.util.Comparator $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: org.apache.lucene.codecs.lucene3x.Lucene3xFields this$0>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: boolean sortTermsByUnicode()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUnicodeComparator()>();

        return $r3;

     label1:
        $r2 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUTF16Comparator()>();

        return $r2;
    }

    public long size() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        return -1L;
    }

    public long getSumTotalTermFreq()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        return -1L;
    }

    public long getSumDocFreq() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        return -1L;
    }

    public int getDocCount() throws java.io.IOException
    {
        int $i1;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        $i1 = (int) -1;

        return $i1;
    }

    public boolean hasOffsets()
    {
        org.apache.lucene.index.FieldInfo$IndexOptions $r2, $r3;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms r0;
        int $i0;
        org.apache.lucene.index.FieldInfo $r1;
        java.lang.AssertionError $r4;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        $z0 = <org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r3 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r3);

        if $i0 < 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        return 0;
    }

    public boolean hasPositions()
    {
        org.apache.lucene.index.FieldInfo$IndexOptions $r2, $r3;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms r0;
        int $i0;
        org.apache.lucene.index.FieldInfo $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r3 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r3);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasPayloads()
    {
        org.apache.lucene.index.FieldInfo $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: org.apache.lucene.index.FieldInfo fieldInfo>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfo: boolean hasPayloads()>();

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/lucene3x/Lucene3xFields;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: boolean $assertionsDisabled> = $z1;

        return;
    }
}
