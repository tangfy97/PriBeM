class com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker extends com.hp.hpl.jena.sparql.expr.ExprVisitorBase
{
    final java.util.Collection acc;
    final com.hp.hpl.jena.sparql.expr.ExprVars$Action action;

    public void <init>(java.util.Collection, com.hp.hpl.jena.sparql.expr.ExprVars$Action)
    {
        com.hp.hpl.jena.sparql.expr.ExprVars$Action r2;
        com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker r0;
        java.util.Collection r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: com.hp.hpl.jena.sparql.expr.ExprVars$Action;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprVisitorBase: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker: java.util.Collection acc> = r1;

        r0.<com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker: com.hp.hpl.jena.sparql.expr.ExprVars$Action action> = r2;

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.ExprVar)
    {
        com.hp.hpl.jena.sparql.expr.ExprVars$Action $r2;
        java.util.Collection $r3;
        com.hp.hpl.jena.sparql.core.Var $r4;
        com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker r0;
        com.hp.hpl.jena.sparql.expr.ExprVar r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprVar;

        $r2 = r0.<com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker: com.hp.hpl.jena.sparql.expr.ExprVars$Action action>;

        $r3 = r0.<com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker: java.util.Collection acc>;

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprVar: com.hp.hpl.jena.sparql.core.Var asVar()>();

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.expr.ExprVars$Action: void var(java.util.Collection,com.hp.hpl.jena.sparql.core.Var)>($r3, $r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.ExprFunctionOp)
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.sparql.expr.ExprVars$Action $r8;
        java.util.Collection $r7;
        java.util.Set $r2;
        com.hp.hpl.jena.sparql.core.Var r5;
        com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker r6;
        com.hp.hpl.jena.sparql.expr.ExprFunctionOp r0;
        java.lang.Object $r4;
        com.hp.hpl.jena.sparql.algebra.Op $r1;
        boolean $z0;

        r6 := @this: com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprFunctionOp;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunctionOp: com.hp.hpl.jena.sparql.algebra.Op getGraphPattern()>();

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.algebra.OpVars: java.util.Set visibleVars(com.hp.hpl.jena.sparql.algebra.Op)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.sparql.core.Var) $r4;

        $r8 = r6.<com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker: com.hp.hpl.jena.sparql.expr.ExprVars$Action action>;

        $r7 = r6.<com.hp.hpl.jena.sparql.expr.ExprVars$ExprVarsWorker: java.util.Collection acc>;

        interfaceinvoke $r8.<com.hp.hpl.jena.sparql.expr.ExprVars$Action: void var(java.util.Collection,com.hp.hpl.jena.sparql.core.Var)>($r7, r5);

        goto label1;

     label2:
        return;
    }
}
