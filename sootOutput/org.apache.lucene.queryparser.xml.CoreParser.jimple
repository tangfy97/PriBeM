public class org.apache.lucene.queryparser.xml.CoreParser extends java.lang.Object implements org.apache.lucene.queryparser.xml.QueryBuilder
{
    protected org.apache.lucene.analysis.Analyzer analyzer;
    protected org.apache.lucene.queryparser.classic.QueryParser parser;
    protected org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory;
    protected org.apache.lucene.queryparser.xml.FilterBuilderFactory filterFactory;
    public static int maxNumCachedFilters;

    public void <init>(org.apache.lucene.analysis.Analyzer, org.apache.lucene.queryparser.classic.QueryParser)
    {
        org.apache.lucene.queryparser.xml.CoreParser r0;
        org.apache.lucene.queryparser.classic.QueryParser r2;
        org.apache.lucene.analysis.Analyzer r1;

        r0 := @this: org.apache.lucene.queryparser.xml.CoreParser;

        r1 := @parameter0: org.apache.lucene.analysis.Analyzer;

        r2 := @parameter1: org.apache.lucene.queryparser.classic.QueryParser;

        specialinvoke r0.<org.apache.lucene.queryparser.xml.CoreParser: void <init>(java.lang.String,org.apache.lucene.analysis.Analyzer,org.apache.lucene.queryparser.classic.QueryParser)>(null, r1, r2);

        return;
    }

    public void <init>(java.lang.String, org.apache.lucene.analysis.Analyzer)
    {
        org.apache.lucene.queryparser.xml.CoreParser r0;
        java.lang.String r1;
        org.apache.lucene.analysis.Analyzer r2;

        r0 := @this: org.apache.lucene.queryparser.xml.CoreParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.analysis.Analyzer;

        specialinvoke r0.<org.apache.lucene.queryparser.xml.CoreParser: void <init>(java.lang.String,org.apache.lucene.analysis.Analyzer,org.apache.lucene.queryparser.classic.QueryParser)>(r1, r2, null);

        return;
    }

    protected void <init>(java.lang.String, org.apache.lucene.analysis.Analyzer, org.apache.lucene.queryparser.classic.QueryParser)
    {
        org.apache.lucene.queryparser.xml.builders.SpanOrBuilder $r44;
        org.apache.lucene.queryparser.xml.QueryBuilderFactory $r8, $r10, $r12, $r14, $r16, $r17, $r19, $r21, $r22, $r25, $r27, $r29, $r32, $r35, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53;
        org.apache.lucene.queryparser.xml.FilterBuilderFactory $r3, $r5, $r7, $r28, $r31, $r34, $r36;
        org.apache.lucene.queryparser.xml.builders.BoostingTermBuilder $r40;
        org.apache.lucene.queryparser.xml.builders.SpanTermBuilder $r42;
        org.apache.lucene.queryparser.xml.builders.NumericRangeQueryBuilder $r18;
        org.apache.lucene.queryparser.xml.builders.UserInputQueryBuilder $r23, $r52;
        org.apache.lucene.queryparser.xml.CoreParser r0;
        org.apache.lucene.queryparser.xml.builders.SpanFirstBuilder $r48;
        org.apache.lucene.queryparser.xml.builders.SpanQueryBuilderFactory $r37;
        org.apache.lucene.queryparser.xml.builders.FilteredQueryBuilder $r26;
        org.apache.lucene.queryparser.xml.builders.NumericRangeFilterBuilder $r6;
        org.apache.lucene.queryparser.xml.builders.TermsQueryBuilder $r11;
        org.apache.lucene.queryparser.xml.builders.ConstantScoreQueryBuilder $r30;
        org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder $r15;
        int $i0;
        org.apache.lucene.queryparser.xml.builders.SpanNearBuilder $r38;
        java.lang.String r24;
        org.apache.lucene.queryparser.xml.builders.SpanOrTermsBuilder $r46;
        org.apache.lucene.queryparser.xml.builders.SpanNotBuilder $r50;
        org.apache.lucene.queryparser.xml.builders.RangeFilterBuilder $r4;
        org.apache.lucene.analysis.Analyzer r1;
        org.apache.lucene.queryparser.xml.builders.TermQueryBuilder $r9;
        org.apache.lucene.queryparser.xml.builders.MatchAllDocsQueryBuilder $r13;
        org.apache.lucene.queryparser.xml.builders.DisjunctionMaxQueryBuilder $r20;
        org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder $r33;
        org.apache.lucene.queryparser.classic.QueryParser r2;

        r0 := @this: org.apache.lucene.queryparser.xml.CoreParser;

        r24 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.lucene.analysis.Analyzer;

        r2 := @parameter2: org.apache.lucene.queryparser.classic.QueryParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.analysis.Analyzer analyzer> = r1;

        r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.classic.QueryParser parser> = r2;

        $r3 = new org.apache.lucene.queryparser.xml.FilterBuilderFactory;

        specialinvoke $r3.<org.apache.lucene.queryparser.xml.FilterBuilderFactory: void <init>()>();

        r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.FilterBuilderFactory filterFactory> = $r3;

        $r5 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.FilterBuilderFactory filterFactory>;

        $r4 = new org.apache.lucene.queryparser.xml.builders.RangeFilterBuilder;

        specialinvoke $r4.<org.apache.lucene.queryparser.xml.builders.RangeFilterBuilder: void <init>()>();

        virtualinvoke $r5.<org.apache.lucene.queryparser.xml.FilterBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.FilterBuilder)>("RangeFilter", $r4);

        $r7 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.FilterBuilderFactory filterFactory>;

        $r6 = new org.apache.lucene.queryparser.xml.builders.NumericRangeFilterBuilder;

        specialinvoke $r6.<org.apache.lucene.queryparser.xml.builders.NumericRangeFilterBuilder: void <init>()>();

        virtualinvoke $r7.<org.apache.lucene.queryparser.xml.FilterBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.FilterBuilder)>("NumericRangeFilter", $r6);

        $r8 = new org.apache.lucene.queryparser.xml.QueryBuilderFactory;

        specialinvoke $r8.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void <init>()>();

        r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory> = $r8;

        $r10 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r9 = new org.apache.lucene.queryparser.xml.builders.TermQueryBuilder;

        specialinvoke $r9.<org.apache.lucene.queryparser.xml.builders.TermQueryBuilder: void <init>()>();

        virtualinvoke $r10.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("TermQuery", $r9);

        $r12 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r11 = new org.apache.lucene.queryparser.xml.builders.TermsQueryBuilder;

        specialinvoke $r11.<org.apache.lucene.queryparser.xml.builders.TermsQueryBuilder: void <init>(org.apache.lucene.analysis.Analyzer)>(r1);

        virtualinvoke $r12.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("TermsQuery", $r11);

        $r14 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r13 = new org.apache.lucene.queryparser.xml.builders.MatchAllDocsQueryBuilder;

        specialinvoke $r13.<org.apache.lucene.queryparser.xml.builders.MatchAllDocsQueryBuilder: void <init>()>();

        virtualinvoke $r14.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("MatchAllDocsQuery", $r13);

        $r17 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r15 = new org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder;

        $r16 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        specialinvoke $r15.<org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder: void <init>(org.apache.lucene.queryparser.xml.QueryBuilder)>($r16);

        virtualinvoke $r17.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("BooleanQuery", $r15);

        $r19 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r18 = new org.apache.lucene.queryparser.xml.builders.NumericRangeQueryBuilder;

        specialinvoke $r18.<org.apache.lucene.queryparser.xml.builders.NumericRangeQueryBuilder: void <init>()>();

        virtualinvoke $r19.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("NumericRangeQuery", $r18);

        $r22 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r20 = new org.apache.lucene.queryparser.xml.builders.DisjunctionMaxQueryBuilder;

        $r21 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        specialinvoke $r20.<org.apache.lucene.queryparser.xml.builders.DisjunctionMaxQueryBuilder: void <init>(org.apache.lucene.queryparser.xml.QueryBuilder)>($r21);

        virtualinvoke $r22.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("DisjunctionMaxQuery", $r20);

        if r2 == null goto label1;

        $r53 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r52 = new org.apache.lucene.queryparser.xml.builders.UserInputQueryBuilder;

        specialinvoke $r52.<org.apache.lucene.queryparser.xml.builders.UserInputQueryBuilder: void <init>(org.apache.lucene.queryparser.classic.QueryParser)>(r2);

        virtualinvoke $r53.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("UserQuery", $r52);

        goto label2;

     label1:
        $r25 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r23 = new org.apache.lucene.queryparser.xml.builders.UserInputQueryBuilder;

        specialinvoke $r23.<org.apache.lucene.queryparser.xml.builders.UserInputQueryBuilder: void <init>(java.lang.String,org.apache.lucene.analysis.Analyzer)>(r24, r1);

        virtualinvoke $r25.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("UserQuery", $r23);

     label2:
        $r29 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r26 = new org.apache.lucene.queryparser.xml.builders.FilteredQueryBuilder;

        $r28 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.FilterBuilderFactory filterFactory>;

        $r27 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        specialinvoke $r26.<org.apache.lucene.queryparser.xml.builders.FilteredQueryBuilder: void <init>(org.apache.lucene.queryparser.xml.FilterBuilder,org.apache.lucene.queryparser.xml.QueryBuilder)>($r28, $r27);

        virtualinvoke $r29.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("FilteredQuery", $r26);

        $r32 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r30 = new org.apache.lucene.queryparser.xml.builders.ConstantScoreQueryBuilder;

        $r31 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.FilterBuilderFactory filterFactory>;

        specialinvoke $r30.<org.apache.lucene.queryparser.xml.builders.ConstantScoreQueryBuilder: void <init>(org.apache.lucene.queryparser.xml.FilterBuilderFactory)>($r31);

        virtualinvoke $r32.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("ConstantScoreQuery", $r30);

        $r36 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.FilterBuilderFactory filterFactory>;

        $r33 = new org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder;

        $r35 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r34 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.FilterBuilderFactory filterFactory>;

        $i0 = <org.apache.lucene.queryparser.xml.CoreParser: int maxNumCachedFilters>;

        specialinvoke $r33.<org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder: void <init>(org.apache.lucene.queryparser.xml.QueryBuilderFactory,org.apache.lucene.queryparser.xml.FilterBuilderFactory,int)>($r35, $r34, $i0);

        virtualinvoke $r36.<org.apache.lucene.queryparser.xml.FilterBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.FilterBuilder)>("CachedFilter", $r33);

        $r37 = new org.apache.lucene.queryparser.xml.builders.SpanQueryBuilderFactory;

        specialinvoke $r37.<org.apache.lucene.queryparser.xml.builders.SpanQueryBuilderFactory: void <init>()>();

        $r38 = new org.apache.lucene.queryparser.xml.builders.SpanNearBuilder;

        specialinvoke $r38.<org.apache.lucene.queryparser.xml.builders.SpanNearBuilder: void <init>(org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>($r37);

        virtualinvoke $r37.<org.apache.lucene.queryparser.xml.builders.SpanQueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>("SpanNear", $r38);

        $r39 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        virtualinvoke $r39.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("SpanNear", $r38);

        $r40 = new org.apache.lucene.queryparser.xml.builders.BoostingTermBuilder;

        specialinvoke $r40.<org.apache.lucene.queryparser.xml.builders.BoostingTermBuilder: void <init>()>();

        virtualinvoke $r37.<org.apache.lucene.queryparser.xml.builders.SpanQueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>("BoostingTermQuery", $r40);

        $r41 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        virtualinvoke $r41.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("BoostingTermQuery", $r40);

        $r42 = new org.apache.lucene.queryparser.xml.builders.SpanTermBuilder;

        specialinvoke $r42.<org.apache.lucene.queryparser.xml.builders.SpanTermBuilder: void <init>()>();

        virtualinvoke $r37.<org.apache.lucene.queryparser.xml.builders.SpanQueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>("SpanTerm", $r42);

        $r43 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        virtualinvoke $r43.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("SpanTerm", $r42);

        $r44 = new org.apache.lucene.queryparser.xml.builders.SpanOrBuilder;

        specialinvoke $r44.<org.apache.lucene.queryparser.xml.builders.SpanOrBuilder: void <init>(org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>($r37);

        virtualinvoke $r37.<org.apache.lucene.queryparser.xml.builders.SpanQueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>("SpanOr", $r44);

        $r45 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        virtualinvoke $r45.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("SpanOr", $r44);

        $r46 = new org.apache.lucene.queryparser.xml.builders.SpanOrTermsBuilder;

        specialinvoke $r46.<org.apache.lucene.queryparser.xml.builders.SpanOrTermsBuilder: void <init>(org.apache.lucene.analysis.Analyzer)>(r1);

        virtualinvoke $r37.<org.apache.lucene.queryparser.xml.builders.SpanQueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>("SpanOrTerms", $r46);

        $r47 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        virtualinvoke $r47.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("SpanOrTerms", $r46);

        $r48 = new org.apache.lucene.queryparser.xml.builders.SpanFirstBuilder;

        specialinvoke $r48.<org.apache.lucene.queryparser.xml.builders.SpanFirstBuilder: void <init>(org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>($r37);

        virtualinvoke $r37.<org.apache.lucene.queryparser.xml.builders.SpanQueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>("SpanFirst", $r48);

        $r49 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        virtualinvoke $r49.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("SpanFirst", $r48);

        $r50 = new org.apache.lucene.queryparser.xml.builders.SpanNotBuilder;

        specialinvoke $r50.<org.apache.lucene.queryparser.xml.builders.SpanNotBuilder: void <init>(org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>($r37);

        virtualinvoke $r37.<org.apache.lucene.queryparser.xml.builders.SpanQueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)>("SpanNot", $r50);

        $r51 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        virtualinvoke $r51.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>("SpanNot", $r50);

        return;
    }

    public org.apache.lucene.search.Query parse(java.io.InputStream) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.search.Query $r4;
        org.w3c.dom.Element $r3;
        org.w3c.dom.Document $r2;
        org.apache.lucene.queryparser.xml.CoreParser r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.lucene.queryparser.xml.CoreParser;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <org.apache.lucene.queryparser.xml.CoreParser: org.w3c.dom.Document parseXML(java.io.InputStream)>(r1);

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r4 = virtualinvoke r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.search.Query getQuery(org.w3c.dom.Element)>($r3);

        return $r4;
    }

    public void addQueryBuilder(java.lang.String, org.apache.lucene.queryparser.xml.QueryBuilder)
    {
        org.apache.lucene.queryparser.xml.QueryBuilder r2;
        org.apache.lucene.queryparser.xml.QueryBuilderFactory $r3;
        org.apache.lucene.queryparser.xml.CoreParser r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.queryparser.xml.CoreParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.queryparser.xml.QueryBuilder;

        $r3 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        virtualinvoke $r3.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.QueryBuilder)>(r1, r2);

        return;
    }

    public void addFilterBuilder(java.lang.String, org.apache.lucene.queryparser.xml.FilterBuilder)
    {
        org.apache.lucene.queryparser.xml.FilterBuilder r2;
        org.apache.lucene.queryparser.xml.FilterBuilderFactory $r3;
        org.apache.lucene.queryparser.xml.CoreParser r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.queryparser.xml.CoreParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.queryparser.xml.FilterBuilder;

        $r3 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.FilterBuilderFactory filterFactory>;

        virtualinvoke $r3.<org.apache.lucene.queryparser.xml.FilterBuilderFactory: void addBuilder(java.lang.String,org.apache.lucene.queryparser.xml.FilterBuilder)>(r1, r2);

        return;
    }

    private static org.w3c.dom.Document parseXML(java.io.InputStream) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.queryparser.xml.ParserException $r5, $r11;
        java.lang.Exception $r4, $r10;
        org.w3c.dom.Document $r3;
        javax.xml.parsers.DocumentBuilder $r1;
        java.lang.StringBuilder $r6, $r7, $r8;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.lang.String $r9;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label1:
        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.apache.lucene.queryparser.xml.ParserException;

        specialinvoke $r11.<org.apache.lucene.queryparser.xml.ParserException: void <init>(java.lang.String,java.lang.Throwable)>("XML Parser configuration error", $r10);

        throw $r11;

     label4:
        $r3 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r2);

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

        $r5 = new org.apache.lucene.queryparser.xml.ParserException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing XML stream:");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.lucene.queryparser.xml.ParserException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r4);

        throw $r5;

     label7:
        return $r3;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public org.apache.lucene.search.Query getQuery(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.search.Query $r3;
        org.w3c.dom.Element r1;
        org.apache.lucene.queryparser.xml.QueryBuilderFactory $r2;
        org.apache.lucene.queryparser.xml.CoreParser r0;

        r0 := @this: org.apache.lucene.queryparser.xml.CoreParser;

        r1 := @parameter0: org.w3c.dom.Element;

        $r2 = r0.<org.apache.lucene.queryparser.xml.CoreParser: org.apache.lucene.queryparser.xml.QueryBuilderFactory queryFactory>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.queryparser.xml.QueryBuilderFactory: org.apache.lucene.search.Query getQuery(org.w3c.dom.Element)>(r1);

        return $r3;
    }

    static void <clinit>()
    {
        <org.apache.lucene.queryparser.xml.CoreParser: int maxNumCachedFilters> = 20;

        return;
    }
}
