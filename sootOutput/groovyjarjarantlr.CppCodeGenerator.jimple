public class groovyjarjarantlr.CppCodeGenerator extends groovyjarjarantlr.CodeGenerator
{
    boolean DEBUG_CPP_CODE_GENERATOR;
    protected int syntacticPredLevel;
    protected boolean genAST;
    protected boolean saveText;
    protected boolean genHashLines;
    protected boolean noConstructors;
    protected int outputLine;
    protected java.lang.String outputFile;
    boolean usingCustomAST;
    java.lang.String labeledElementType;
    java.lang.String labeledElementASTType;
    java.lang.String labeledElementASTInit;
    java.lang.String labeledElementInit;
    java.lang.String commonExtraArgs;
    java.lang.String commonExtraParams;
    java.lang.String commonLocalVars;
    java.lang.String lt1Value;
    java.lang.String exceptionThrown;
    java.lang.String throwNoViable;
    groovyjarjarantlr.RuleBlock currentRule;
    java.lang.String currentASTResult;
    java.util.Hashtable treeVariableMap;
    java.util.Hashtable declaredASTVariables;
    int astVarNumber;
    protected static final java.lang.String NONUNIQUE;
    public static final int caseSizeThreshold;
    private groovyjarjarantlr.collections.impl.Vector semPreds;
    private groovyjarjarantlr.collections.impl.Vector astTypes;
    private static java.lang.String namespaceStd;
    private static java.lang.String namespaceAntlr;
    private static groovyjarjarantlr.NameSpace nameSpace;
    private static final java.lang.String preIncludeCpp;
    private static final java.lang.String preIncludeHpp;
    private static final java.lang.String postIncludeCpp;
    private static final java.lang.String postIncludeHpp;

    public void <init>()
    {
        groovyjarjarantlr.CppCharFormatter $r3;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.util.Hashtable $r1, $r2;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        specialinvoke r0.<groovyjarjarantlr.CodeGenerator: void <init>()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR> = 0;

        r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel> = 0;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = 0;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = 0;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genHashLines> = 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors> = 0;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST> = 0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable treeVariableMap> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable declaredASTVariables> = $r2;

        r0.<groovyjarjarantlr.CppCodeGenerator: int astVarNumber> = 1;

        $r3 = new groovyjarjarantlr.CppCharFormatter;

        specialinvoke $r3.<groovyjarjarantlr.CppCharFormatter: void <init>()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter> = $r3;

        return;
    }

    protected int addSemPred(java.lang.String)
    {
        groovyjarjarantlr.CppCodeGenerator r0;
        int $i0, $i1;
        java.lang.String r1;
        groovyjarjarantlr.collections.impl.Vector $r2, $r3;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector semPreds>;

        virtualinvoke $r2.<groovyjarjarantlr.collections.impl.Vector: void appendElement(java.lang.Object)>(r1);

        $r3 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector semPreds>;

        $i0 = virtualinvoke $r3.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        $i1 = $i0 - 1;

        return $i1;
    }

    public void exitIfError()
    {
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.Tool $r1, $r2;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $z0 = virtualinvoke $r1.<groovyjarjarantlr.Tool: boolean hasError()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r2.<groovyjarjarantlr.Tool: void fatalError(java.lang.String)>("Exiting due to errors.");

     label1:
        return;
    }

    protected int countLines(java.lang.String)
    {
        groovyjarjarantlr.CppCodeGenerator r1;
        int $i0, i2, i3, $i4;
        char $c1;
        java.lang.String r0;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        if $i4 != 10 goto label2;

        i2 = i2 + 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    protected void _print(java.lang.String)
    {
        java.io.PrintWriter $r2;
        groovyjarjarantlr.CppCodeGenerator r1;
        int $i0, $i1, $i2;
        java.lang.String r0;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = r1.<groovyjarjarantlr.CppCodeGenerator: int outputLine>;

        $i1 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: int countLines(java.lang.String)>(r0);

        $i2 = $i0 + $i1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = $i2;

        $r2 = r1.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(r0);

     label1:
        return;
    }

    protected void _printAction(java.lang.String)
    {
        groovyjarjarantlr.CppCodeGenerator r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String r0;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = r1.<groovyjarjarantlr.CppCodeGenerator: int outputLine>;

        $i1 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: int countLines(java.lang.String)>(r0);

        $i2 = $i1 + 1;

        $i3 = $i0 + $i2;

        r1.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = $i3;

        specialinvoke r1.<groovyjarjarantlr.CodeGenerator: void _printAction(java.lang.String)>(r0);

     label1:
        return;
    }

    public void printAction(groovyjarjarantlr.Token)
    {
        groovyjarjarantlr.CppCodeGenerator r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;
        groovyjarjarantlr.Token r0;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.Token;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<groovyjarjarantlr.Token: int getLine()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(int)>($i0);

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void printTabs()>();

        $r2 = virtualinvoke r0.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $i1 = virtualinvoke r0.<groovyjarjarantlr.Token: int getLine()>();

        $r3 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>($r2, $i1, null, null);

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void _printAction(java.lang.String)>($r3);

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genLineNo2()>();

     label1:
        return;
    }

    public void printHeaderAction(java.lang.String)
    {
        groovyjarjarantlr.CppCodeGenerator r0;
        int $i0, $i1;
        java.lang.Object $r4;
        groovyjarjarantlr.DefineGrammarSymbols $r1;
        java.lang.String r2, $r6, $r7;
        java.util.Hashtable $r3;
        groovyjarjarantlr.Token r5;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.DefineGrammarSymbols behavior>;

        $r3 = $r1.<groovyjarjarantlr.DefineGrammarSymbols: java.util.Hashtable headerActions>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (groovyjarjarantlr.Token) $r4;

        if r5 == null goto label1;

        $i0 = virtualinvoke r5.<groovyjarjarantlr.Token: int getLine()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(int)>($i0);

        $r6 = virtualinvoke r5.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $i1 = virtualinvoke r5.<groovyjarjarantlr.Token: int getLine()>();

        $r7 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>($r6, $i1, null, null);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r7);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo2()>();

     label1:
        return;
    }

    protected void _println(java.lang.String)
    {
        java.io.PrintWriter $r2;
        groovyjarjarantlr.CppCodeGenerator r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String r0;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = r1.<groovyjarjarantlr.CppCodeGenerator: int outputLine>;

        $i1 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: int countLines(java.lang.String)>(r0);

        $i2 = $i1 + 1;

        $i3 = $i0 + $i2;

        r1.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = $i3;

        $r2 = r1.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(r0);

     label1:
        return;
    }

    protected void println(java.lang.String)
    {
        java.io.PrintWriter $r2;
        groovyjarjarantlr.CppCodeGenerator r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String r0;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void printTabs()>();

        $i0 = r1.<groovyjarjarantlr.CppCodeGenerator: int outputLine>;

        $i1 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: int countLines(java.lang.String)>(r0);

        $i2 = $i1 + 1;

        $i3 = $i0 + $i2;

        r1.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = $i3;

        $r2 = r1.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(r0);

     label1:
        return;
    }

    public void genLineNo(int)
    {
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.Tool $r5, $r7;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r9, $r10;
        int i0;
        java.lang.String $r6, $r8, $r11;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        i0 = i0 + 1;

     label1:
        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genHashLines>;

        if $z0 == 0 goto label2;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#line ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r5 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r6 = $r5.<groovyjarjarantlr.Tool: java.lang.String grammarFile>;

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.Tool: java.lang.String fileMinusPath(java.lang.String)>($r6);

        $r9 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>($r11);

     label2:
        return;
    }

    public void genLineNo(groovyjarjarantlr.GrammarElement)
    {
        groovyjarjarantlr.GrammarElement r0;
        int $i0;
        groovyjarjarantlr.CppCodeGenerator r1;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.GrammarElement;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<groovyjarjarantlr.GrammarElement: int getLine()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(int)>($i0);

     label1:
        return;
    }

    public void genLineNo(groovyjarjarantlr.Token)
    {
        int $i0;
        groovyjarjarantlr.CppCodeGenerator r1;
        groovyjarjarantlr.Token r0;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.Token;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<groovyjarjarantlr.Token: int getLine()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(int)>($i0);

     label1:
        return;
    }

    public void genLineNo2()
    {
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r7;
        int $i0, $i1;
        java.lang.String $r5, $r8;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genHashLines>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#line ");

        $i0 = r0.<groovyjarjarantlr.CppCodeGenerator: int outputLine>;

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");

        $r5 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>($r8);

     label1:
        return;
    }

    private boolean charIsDigit(java.lang.String, int)
    {
        groovyjarjarantlr.CppCodeGenerator r1;
        int i0, $i1;
        char $c2;
        java.lang.String r0;
        boolean $z0, $z1;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i1 goto label1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private java.lang.String convertJavaToCppString(java.lang.String, boolean)
    {
        java.lang.StringBuffer $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r15, $r18, $r20, $r23, $r24, $r26, $r29, $r30, $r32, $r35, $r36, $r39, $r40, $r41, $r44, $r46, $r48, $r49, $r50, $r51, $r52, $r56, $r57, $r58, $r59, $r64, $r65, $r66, $r68, $r69, $r73, $r74, $r75, $r77, $r78, $r85, $r86, $r87, $r95, $r96, $r97, $r99, $r100, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120;
        groovyjarjarantlr.CharFormatter $r16, $r21, $r27, $r33, $r61;
        groovyjarjarantlr.Grammar $r80, $r92, $r102;
        groovyjarjarantlr.LexerGrammar $r81;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i40, $i41, $i42, $i44, $i45, $i47, $i48, $i49, $i50, $i52, $i53, $i54, $i55, $i57, $i58, $i59, i60, i61, $i62, $i63, i64, $i65, $i66, $i67, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i77;
        groovyjarjarantlr.Tool $r4, $r38, $r47, $r55, $r63, $r72, $r84, $r93;
        java.lang.String r1, $r8, $r17, $r22, $r28, $r34, $r42, $r45, $r53, $r60, $r67, $r70, $r76, $r79, $r88, r89, $r90, r91, $r98, $r101, r103, $r105, $r106;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        groovyjarjarantlr.collections.impl.BitSet $r82;
        groovyjarjarantlr.CppCodeGenerator r2;
        char $c0, $c7, $c11, $c17, $c23, $c28, $c36, $c39, $c43, $c46, $c51, $c56, $c68, $c76;

        r2 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r106 = new java.lang.String;

        specialinvoke $r106.<java.lang.String: void <init>()>();

        r89 = $r106;

        i60 = 0;

        i61 = 0;

        if z0 == 0 goto label02;

        $z6 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        if $z6 == 0 goto label01;

        $z7 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("\'");

        if $z7 != 0 goto label04;

     label01:
        $r84 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r107 = new java.lang.StringBuffer;

        specialinvoke $r107.<java.lang.StringBuffer: void <init>()>();

        $r85 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid character literal: \'");

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r84.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r88);

        goto label04;

     label02:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z1 == 0 goto label03;

        $z5 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z5 != 0 goto label04;

     label03:
        $r4 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r108 = new java.lang.StringBuffer;

        specialinvoke $r108.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid character string: \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r8);

     label04:
        $i62 = virtualinvoke r1.<java.lang.String: int length()>();

        $i63 = $i62 - 1;

        $r90 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i63);

        r91 = "";

        i64 = 255;

        $r92 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z8 = $r92 instanceof groovyjarjarantlr.LexerGrammar;

        if $z8 == 0 goto label05;

        $r80 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r81 = (groovyjarjarantlr.LexerGrammar) $r80;

        $r82 = $r81.<groovyjarjarantlr.LexerGrammar: groovyjarjarantlr.collections.impl.BitSet charVocabulary>;

        $i59 = virtualinvoke $r82.<groovyjarjarantlr.collections.impl.BitSet: int size()>();

        i64 = $i59 - 1;

        if i64 <= 255 goto label05;

        r91 = "L";

     label05:
        $i65 = virtualinvoke $r90.<java.lang.String: int length()>();

        if i60 >= $i65 goto label33;

        $c0 = virtualinvoke $r90.<java.lang.String: char charAt(int)>(i60);

        $i66 = (int) $c0;

        if $i66 != 92 goto label22;

        $i4 = virtualinvoke $r90.<java.lang.String: int length()>();

        $i5 = i60 + 1;

        if $i4 != $i5 goto label06;

        $r72 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r109 = new java.lang.StringBuffer;

        specialinvoke $r109.<java.lang.StringBuffer: void <init>()>();

        $r73 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid escape in char literal: \'");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' looking at \'");

        $r76 = virtualinvoke $r90.<java.lang.String: java.lang.String substring(int)>(i60);

        $r77 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r72.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r79);

     label06:
        $i6 = i60 + 1;

        $c7 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i6);

        $i67 = (int) $c7;

        lookupswitch($i67)
        {
            case 34: goto label13;
            case 39: goto label13;
            case 48: goto label16;
            case 49: goto label16;
            case 50: goto label16;
            case 51: goto label16;
            case 52: goto label19;
            case 53: goto label19;
            case 54: goto label19;
            case 55: goto label19;
            case 92: goto label13;
            case 97: goto label07;
            case 98: goto label08;
            case 102: goto label11;
            case 110: goto label10;
            case 114: goto label12;
            case 116: goto label09;
            case 117: goto label14;
            default: goto label21;
        };

     label07:
        i61 = 7;

        i60 = i60 + 2;

        goto label23;

     label08:
        i61 = 8;

        i60 = i60 + 2;

        goto label23;

     label09:
        i61 = 9;

        i60 = i60 + 2;

        goto label23;

     label10:
        i61 = 10;

        i60 = i60 + 2;

        goto label23;

     label11:
        i61 = 12;

        i60 = i60 + 2;

        goto label23;

     label12:
        i61 = 13;

        i60 = i60 + 2;

        goto label23;

     label13:
        $i58 = i60 + 1;

        $c68 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i58);

        $i69 = (int) $c68;

        i61 = $i69;

        i60 = i60 + 2;

        goto label23;

     label14:
        $i8 = i60 + 5;

        $i9 = virtualinvoke $r90.<java.lang.String: int length()>();

        if $i8 >= $i9 goto label15;

        $i10 = i60 + 2;

        $c11 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i10);

        $i12 = staticinvoke <java.lang.Character: int digit(char,int)>($c11, 16);

        $i13 = $i12 * 16;

        $i14 = $i13 * 16;

        $i16 = $i14 * 16;

        $i15 = i60 + 3;

        $c17 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i15);

        $i18 = staticinvoke <java.lang.Character: int digit(char,int)>($c17, 16);

        $i19 = $i18 * 16;

        $i20 = $i19 * 16;

        $i22 = $i16 + $i20;

        $i21 = i60 + 4;

        $c23 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i21);

        $i24 = staticinvoke <java.lang.Character: int digit(char,int)>($c23, 16);

        $i25 = $i24 * 16;

        $i27 = $i22 + $i25;

        $i26 = i60 + 5;

        $c28 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i26);

        $i29 = staticinvoke <java.lang.Character: int digit(char,int)>($c28, 16);

        i61 = $i27 + $i29;

        i60 = i60 + 6;

        goto label23;

     label15:
        $r63 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r110 = new java.lang.StringBuffer;

        specialinvoke $r110.<java.lang.StringBuffer: void <init>()>();

        $r64 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid escape in char literal: \'");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' looking at \'");

        $r67 = virtualinvoke $r90.<java.lang.String: java.lang.String substring(int)>(i60);

        $r68 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r63.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r70);

        goto label23;

     label16:
        $i34 = i60 + 2;

        $z3 = specialinvoke r2.<groovyjarjarantlr.CppCodeGenerator: boolean charIsDigit(java.lang.String,int)>($r90, $i34);

        if $z3 == 0 goto label18;

        $i37 = i60 + 3;

        $z4 = specialinvoke r2.<groovyjarjarantlr.CppCodeGenerator: boolean charIsDigit(java.lang.String,int)>($r90, $i37);

        if $z4 == 0 goto label17;

        $i45 = i60 + 1;

        $c46 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i45);

        $i70 = (int) $c46;

        $i47 = $i70 - 48;

        $i48 = $i47 * 8;

        $i50 = $i48 * 8;

        $i49 = i60 + 2;

        $c51 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i49);

        $i71 = (int) $c51;

        $i52 = $i71 - 48;

        $i53 = $i52 * 8;

        $i55 = $i50 + $i53;

        $i54 = i60 + 3;

        $c56 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i54);

        $i72 = (int) $c56;

        $i57 = $i72 - 48;

        i61 = $i55 + $i57;

        i60 = i60 + 4;

        goto label23;

     label17:
        $i38 = i60 + 1;

        $c39 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i38);

        $i73 = (int) $c39;

        $i40 = $i73 - 48;

        $i42 = $i40 * 8;

        $i41 = i60 + 2;

        $c43 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i41);

        $i74 = (int) $c43;

        $i44 = $i74 - 48;

        i61 = $i42 + $i44;

        i60 = i60 + 3;

        goto label23;

     label18:
        $i35 = i60 + 1;

        $c36 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i35);

        $i75 = (int) $c36;

        i61 = $i75 - 48;

        i60 = i60 + 2;

        goto label23;

     label19:
        $i30 = i60 + 2;

        $z2 = specialinvoke r2.<groovyjarjarantlr.CppCodeGenerator: boolean charIsDigit(java.lang.String,int)>($r90, $i30);

        if $z2 == 0 goto label20;

        $i32 = i60 + 1;

        virtualinvoke $r90.<java.lang.String: char charAt(int)>($i32);

        $i33 = i60 + 2;

        virtualinvoke $r90.<java.lang.String: char charAt(int)>($i33);

        i60 = i60 + 3;

        goto label21;

     label20:
        $i31 = i60 + 1;

        virtualinvoke $r90.<java.lang.String: char charAt(int)>($i31);

        i60 = i60 + 2;

     label21:
        $r93 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r111 = new java.lang.StringBuffer;

        specialinvoke $r111.<java.lang.StringBuffer: void <init>()>();

        $r95 = virtualinvoke $r111.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unhandled escape in char literal: \'");

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' looking at \'");

        $r98 = virtualinvoke $r90.<java.lang.String: java.lang.String substring(int)>(i60);

        $r99 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r98);

        $r100 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r93.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r101);

        i61 = 0;

        goto label23;

     label22:
        $i1 = i60;

        i60 = i60 + 1;

        $c76 = virtualinvoke $r90.<java.lang.String: char charAt(int)>($i1);

        $i77 = (int) $c76;

        i61 = $i77;

     label23:
        $r102 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z9 = $r102 instanceof groovyjarjarantlr.LexerGrammar;

        if $z9 == 0 goto label28;

        if i61 <= i64 goto label28;

        if 32 > i61 goto label24;

        if i61 >= 127 goto label24;

        $r61 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter>;

        r103 = interfaceinvoke $r61.<groovyjarjarantlr.CharFormatter: java.lang.String escapeChar(int,boolean)>(i61, 1);

        goto label25;

     label24:
        $r112 = new java.lang.StringBuffer;

        specialinvoke $r112.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i61, 16);

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        r103 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

     label25:
        $r47 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r113 = new java.lang.StringBuffer;

        specialinvoke $r113.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Character out of range in ");

        if z0 == 0 goto label26;

        $r105 = "char literal";

        goto label27;

     label26:
        $r105 = "string constant";

     label27:
        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r105);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": \'");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r90);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r47.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r53);

        $r55 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r114 = new java.lang.StringBuffer;

        specialinvoke $r114.<java.lang.StringBuffer: void <init>()>();

        $r56 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Vocabulary size: ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i64);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Character ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r103);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r55.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r60);

     label28:
        if z0 == 0 goto label32;

        $i2 = virtualinvoke $r90.<java.lang.String: int length()>();

        if i60 == $i2 goto label29;

        $r38 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r115 = new java.lang.StringBuffer;

        specialinvoke $r115.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r115.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid char literal: \'");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r38.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r42);

     label29:
        if i64 > 255 goto label31;

        if i61 > 255 goto label30;

        $i3 = i61 & 128;

        if $i3 == 0 goto label30;

        $r116 = new java.lang.StringBuffer;

        specialinvoke $r116.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r116.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static_cast<unsigned char>(\'");

        $r33 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter>;

        $r34 = interfaceinvoke $r33.<groovyjarjarantlr.CharFormatter: java.lang.String escapeChar(int,boolean)>(i61, 1);

        $r35 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\')");

        r89 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label05;

     label30:
        $r117 = new java.lang.StringBuffer;

        specialinvoke $r117.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r117.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r27 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter>;

        $r28 = interfaceinvoke $r27.<groovyjarjarantlr.CharFormatter: java.lang.String escapeChar(int,boolean)>(i61, 1);

        $r29 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        r89 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label05;

     label31:
        $r118 = new java.lang.StringBuffer;

        specialinvoke $r118.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("L\'");

        $r21 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter>;

        $r22 = interfaceinvoke $r21.<groovyjarjarantlr.CharFormatter: java.lang.String escapeChar(int,boolean)>(i61, 1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        r89 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label05;

     label32:
        $r119 = new java.lang.StringBuffer;

        specialinvoke $r119.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r89);

        $r16 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter>;

        $r17 = interfaceinvoke $r16.<groovyjarjarantlr.CharFormatter: java.lang.String escapeChar(int,boolean)>(i61, 1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        r89 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label05;

     label33:
        if z0 != 0 goto label34;

        $r120 = new java.lang.StringBuffer;

        specialinvoke $r120.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r91);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r89);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        r89 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

     label34:
        return r89;
    }

    public void gen()
    {
        java.util.Enumeration $r3, $r6;
        groovyjarjarantlr.LLkGrammarAnalyzer $r10, $r11;
        groovyjarjarantlr.Grammar r20;
        groovyjarjarantlr.Tool $r13, $r19;
        java.lang.StringBuffer $r12, $r15, $r16;
        java.lang.String $r14, $r17;
        groovyjarjarantlr.TokenManager r8;
        java.util.Hashtable $r2, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.io.IOException $r18;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.Object $r7, $r9;
        groovyjarjarantlr.DefineGrammarSymbols $r1, $r4;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

     label1:
        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.DefineGrammarSymbols behavior>;

        $r2 = $r1.<groovyjarjarantlr.DefineGrammarSymbols: java.util.Hashtable grammars>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration elements()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r20 = (groovyjarjarantlr.Grammar) $r9;

        $z3 = r20.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z3 == 0 goto label3;

        $r13 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke r20.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": C++ mode does not support -debug");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r17);

     label3:
        $r10 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.LLkGrammarAnalyzer analyzer>;

        virtualinvoke r20.<groovyjarjarantlr.Grammar: void setGrammarAnalyzer(groovyjarjarantlr.LLkGrammarAnalyzer)>($r10);

        virtualinvoke r20.<groovyjarjarantlr.Grammar: void setCodeGenerator(groovyjarjarantlr.CodeGenerator)>(r0);

        $r11 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.LLkGrammarAnalyzer analyzer>;

        interfaceinvoke $r11.<groovyjarjarantlr.LLkGrammarAnalyzer: void setGrammar(groovyjarjarantlr.Grammar)>(r20);

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void setupGrammarParameters(groovyjarjarantlr.Grammar)>(r20);

        virtualinvoke r20.<groovyjarjarantlr.Grammar: void generate()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void exitIfError()>();

        goto label2;

     label4:
        $r4 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.DefineGrammarSymbols behavior>;

        $r5 = $r4.<groovyjarjarantlr.DefineGrammarSymbols: java.util.Hashtable tokenManagers>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.util.Enumeration elements()>();

     label5:
        $z1 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        r8 = (groovyjarjarantlr.TokenManager) $r7;

        $z2 = interfaceinvoke r8.<groovyjarjarantlr.TokenManager: boolean isReadOnly()>();

        if $z2 != 0 goto label6;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genTokenTypes(groovyjarjarantlr.TokenManager)>(r8);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genTokenInterchange(groovyjarjarantlr.TokenManager)>(r8);

     label6:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void exitIfError()>();

        goto label5;

     label7:
        goto label9;

     label8:
        $r18 := @caughtexception;

        $r19 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r19.<groovyjarjarantlr.Tool: void reportException(java.lang.Exception,java.lang.String)>($r18, null);

     label9:
        return;

        catch java.io.IOException from label1 to label7 with label8;
    }

    public void gen(groovyjarjarantlr.ActionElement)
    {
        groovyjarjarantlr.RuleBlock $r11;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r44, $r45, $r47, $r48, $r50, $r52, $r53, $r55, $r56;
        groovyjarjarantlr.ActionElement r4;
        java.lang.String $r7, $r10, $r12, $r13, $r17, $r20, $r23, $r26, $r29, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r51, $r54, $r57, $r58;
        groovyjarjarantlr.ActionTransInfo $r9;
        groovyjarjarantlr.Grammar $r8, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        groovyjarjarantlr.CppCodeGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.io.PrintStream $r2;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.ActionElement;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label1;

        $z4 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z4 == 0 goto label2;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genAction(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label2:
        $z5 = r4.<groovyjarjarantlr.ActionElement: boolean isSemPred>;

        if $z5 == 0 goto label3;

        $r58 = r4.<groovyjarjarantlr.ActionElement: java.lang.String actionText>;

        $i13 = r4.<groovyjarjarantlr.ActionElement: int line>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genSemPred(java.lang.String,int)>($r58, $i13);

        goto label7;

     label3:
        $r8 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r8.<groovyjarjarantlr.Grammar: boolean hasSyntacticPredicate>;

        if $z1 == 0 goto label4;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("if ( inputState->guessing==0 ) {");

        $i11 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i12 = $i11 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i12;

     label4:
        $r9 = new groovyjarjarantlr.ActionTransInfo;

        specialinvoke $r9.<groovyjarjarantlr.ActionTransInfo: void <init>()>();

        $r10 = r4.<groovyjarjarantlr.ActionElement: java.lang.String actionText>;

        $i0 = virtualinvoke r4.<groovyjarjarantlr.ActionElement: int getLine()>();

        $r11 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r12 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>($r10, $i0, $r11, $r9);

        $r13 = $r9.<groovyjarjarantlr.ActionTransInfo: java.lang.String refRuleRoot>;

        if $r13 == null goto label5;

        $r50 = new java.lang.StringBuffer;

        specialinvoke $r50.<java.lang.StringBuffer: void <init>()>();

        $r51 = $r9.<groovyjarjarantlr.ActionTransInfo: java.lang.String refRuleRoot>;

        $r52 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r54 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r55 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(currentAST.root);");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r57);

     label5:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(groovyjarjarantlr.GrammarElement)>(r4);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printAction(java.lang.String)>($r12);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo2()>();

        $z2 = $r9.<groovyjarjarantlr.ActionTransInfo: boolean assignToRoot>;

        if $z2 == 0 goto label6;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("currentAST.root = ");

        $r17 = $r9.<groovyjarjarantlr.ActionTransInfo: java.lang.String refRuleRoot>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r20);

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ( ");

        $r23 = $r9.<groovyjarjarantlr.ActionTransInfo: java.lang.String refRuleRoot>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("!=");

        $r26 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" &&");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r29);

        $i3 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i4 = $i3 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i4;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = $r9.<groovyjarjarantlr.ActionTransInfo: java.lang.String refRuleRoot>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("->getFirstChild() != ");

        $r34 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  currentAST.child = ");

        $r40 = $r9.<groovyjarjarantlr.ActionTransInfo: java.lang.String refRuleRoot>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("->getFirstChild();");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r43);

        $i5 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i6 = $i5 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i6;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("else");

        $i7 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i8 = $i7 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i8;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("currentAST.child = ");

        $r46 = $r9.<groovyjarjarantlr.ActionTransInfo: java.lang.String refRuleRoot>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r49);

        $i9 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i10 = $i9 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i10;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("currentAST.advanceChildToEnd();");

     label6:
        $r14 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r14.<groovyjarjarantlr.Grammar: boolean hasSyntacticPredicate>;

        if $z3 == 0 goto label7;

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

     label7:
        return;
    }

    public void gen(groovyjarjarantlr.AlternativeBlock)
    {
        groovyjarjarantlr.AlternativeBlock r4;
        groovyjarjarantlr.LLkGrammarAnalyzer $r9;
        groovyjarjarantlr.Grammar $r8;
        java.lang.StringBuffer $r1, $r3, $r5, $r6;
        java.lang.String $r7, $r11, $r12, $r13, $r14;
        boolean $z0, $z1;
        java.io.PrintStream $r2;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.CppBlockFinishingInfo $r10;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.AlternativeBlock;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label1;

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z1 == 0 goto label2;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("gen(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label2:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockPreamble(groovyjarjarantlr.AlternativeBlock)>(r4);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockInitAction(groovyjarjarantlr.AlternativeBlock)>(r4);

        $r13 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult>;

        $r14 = virtualinvoke r4.<groovyjarjarantlr.AlternativeBlock: java.lang.String getLabel()>();

        if $r14 == null goto label3;

        $r12 = virtualinvoke r4.<groovyjarjarantlr.AlternativeBlock: java.lang.String getLabel()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult> = $r12;

     label3:
        $r8 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r9 = $r8.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        interfaceinvoke $r9.<groovyjarjarantlr.LLkGrammarAnalyzer: boolean deterministic(groovyjarjarantlr.AlternativeBlock)>(r4);

        $r10 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CppBlockFinishingInfo genCommonBlock(groovyjarjarantlr.AlternativeBlock,boolean)>(r4, 1);

        $r11 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String throwNoViable>;

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockFinish(groovyjarjarantlr.CppBlockFinishingInfo,java.lang.String)>($r10, $r11);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult> = $r13;

        return;
    }

    public void gen(groovyjarjarantlr.BlockEndElement)
    {
        java.io.PrintStream $r2;
        groovyjarjarantlr.BlockEndElement r4;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.StringBuffer $r1, $r3, $r5, $r6;
        java.lang.String $r7;
        boolean $z0, $z1;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.BlockEndElement;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label1;

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z1 == 0 goto label2;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genRuleEnd(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label2:
        return;
    }

    public void gen(groovyjarjarantlr.CharLiteralElement)
    {
        groovyjarjarantlr.Grammar $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.CharLiteralElement r4;
        groovyjarjarantlr.Tool $r20;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r11, $r13, $r14, $r16, $r17, $r19, $r21, $r22;
        int $i0, $i1, $i2;
        java.lang.String $r7, $r8, $r9, $r10, $r12, $r15, $r18, $r23, $r25;
        java.io.PrintStream $r2;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.CharLiteralElement;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label01;

        $z4 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z4 == 0 goto label02;

     label01:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genChar(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label02:
        $r24 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z5 = $r24 instanceof groovyjarjarantlr.LexerGrammar;

        if $z5 != 0 goto label03;

        $r20 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cannot ref character literals in grammar: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r20.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r23);

     label03:
        $r8 = virtualinvoke r4.<groovyjarjarantlr.CharLiteralElement: java.lang.String getLabel()>();

        if $r8 == null goto label04;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke r4.<groovyjarjarantlr.CharLiteralElement: java.lang.String getLabel()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r15 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r18);

     label04:
        $z3 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z1 == 0 goto label05;

        $i2 = virtualinvoke r4.<groovyjarjarantlr.CharLiteralElement: int getAutoGenType()>();

        if $i2 != 1 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = $z6;

        $z7 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z7 == 0 goto label07;

        $i1 = virtualinvoke r4.<groovyjarjarantlr.CharLiteralElement: int getAutoGenType()>();

        if $i1 != 3 goto label08;

     label07:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_saveIndex = text.length();");

     label08:
        $z8 = r4.<groovyjarjarantlr.CharLiteralElement: boolean not>;

        if $z8 == 0 goto label09;

        $r25 = "matchNot(";

        goto label10;

     label09:
        $r25 = "match(";

     label10:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r25);

        $r9 = r4.<groovyjarjarantlr.CharLiteralElement: java.lang.String atomText>;

        $r10 = specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String convertJavaToCppString(java.lang.String,boolean)>($r9, 1);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r10);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>(" /* charlit */ );");

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z2 == 0 goto label11;

        $i0 = virtualinvoke r4.<groovyjarjarantlr.CharLiteralElement: int getAutoGenType()>();

        if $i0 != 3 goto label12;

     label11:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("text.erase(_saveIndex);");

     label12:
        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = $z3;

        return;
    }

    public void gen(groovyjarjarantlr.CharRangeElement)
    {
        groovyjarjarantlr.Grammar $r37, $r38;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z7, $z8;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.CharRangeElement r4;
        groovyjarjarantlr.Tool $r33;
        java.lang.StringBuffer $r1, $r3, $r6, $r7, $r9, $r10, $r13, $r14, $r17, $r18, $r21, $r22, $r24, $r26, $r27, $r29, $r30, $r32, $r34, $r35;
        int $i0, $i1;
        java.lang.String $r5, $r8, $r11, $r12, $r15, $r16, $r19, $r20, $r23, $r25, $r28, $r31, $r36;
        java.io.PrintStream $r2;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.CharRangeElement;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label1;

        $z3 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z3 == 0 goto label2;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genCharRangeElement(");

        $r5 = r4.<groovyjarjarantlr.CharRangeElement: java.lang.String beginText>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("..");

        $r8 = r4.<groovyjarjarantlr.CharRangeElement: java.lang.String endText>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label2:
        $r37 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r37 instanceof groovyjarjarantlr.LexerGrammar;

        if $z4 != 0 goto label3;

        $r33 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cannot ref character range in grammar: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r33.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r36);

     label3:
        $r12 = virtualinvoke r4.<groovyjarjarantlr.CharRangeElement: java.lang.String getLabel()>();

        if $r12 == null goto label4;

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        if $i1 != 0 goto label4;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke r4.<groovyjarjarantlr.CharRangeElement: java.lang.String getLabel()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r28 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r31);

     label4:
        $r38 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z5 = $r38 instanceof groovyjarjarantlr.LexerGrammar;

        if $z5 == 0 goto label6;

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z2 == 0 goto label5;

        $i0 = virtualinvoke r4.<groovyjarjarantlr.CharRangeElement: int getAutoGenType()>();

        if $i0 != 3 goto label6;

     label5:
        $z8 = 1;

        $z7 = 1;

        goto label7;

     label6:
        $z8 = 0;

        $z7 = 0;

     label7:
        z1 = $z7;

        if $z8 == 0 goto label8;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_saveIndex=text.length();");

     label8:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("matchRange(");

        $r15 = r4.<groovyjarjarantlr.CharRangeElement: java.lang.String beginText>;

        $r16 = specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String convertJavaToCppString(java.lang.String,boolean)>($r15, 1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r19 = r4.<groovyjarjarantlr.CharRangeElement: java.lang.String endText>;

        $r20 = specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String convertJavaToCppString(java.lang.String,boolean)>($r19, 1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r23);

        if z1 == 0 goto label9;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("text.erase(_saveIndex);");

     label9:
        return;
    }

    public void gen(groovyjarjarantlr.LexerGrammar) throws java.io.IOException
    {
        groovyjarjarantlr.LexerGrammar r0;
        groovyjarjarantlr.Grammar $r3;
        groovyjarjarantlr.Tool $r4, $r6;
        java.lang.StringBuffer $r5, $r8, $r9, $r11, $r12;
        int $i0, $i1;
        java.lang.String $r7, $r13;
        groovyjarjarantlr.collections.impl.Vector $r14;
        boolean $z0, $z1;
        groovyjarjarantlr.collections.impl.BitSet $r1, $r10;
        groovyjarjarantlr.CppCodeGenerator r2;

        r2 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.LexerGrammar;

        $z0 = r0.<groovyjarjarantlr.LexerGrammar: boolean debuggingOutput>;

        if $z0 == 0 goto label1;

        $r14 = new groovyjarjarantlr.collections.impl.Vector;

        specialinvoke $r14.<groovyjarjarantlr.collections.impl.Vector: void <init>()>();

        r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector semPreds> = $r14;

     label1:
        $r1 = r0.<groovyjarjarantlr.LexerGrammar: groovyjarjarantlr.collections.impl.BitSet charVocabulary>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.collections.impl.BitSet: int size()>();

        if $i0 <= 256 goto label2;

        $r6 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke r0.<groovyjarjarantlr.LexerGrammar: java.lang.String getFilename()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": Vocabularies of this size still experimental in C++ mode (vocabulary size now: ");

        $r10 = r0.<groovyjarjarantlr.LexerGrammar: groovyjarjarantlr.collections.impl.BitSet charVocabulary>;

        $i1 = virtualinvoke $r10.<groovyjarjarantlr.collections.impl.BitSet: int size()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<groovyjarjarantlr.Tool: void warning(java.lang.String)>($r13);

     label2:
        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void setGrammar(groovyjarjarantlr.Grammar)>(r0);

        $r3 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r3 instanceof groovyjarjarantlr.LexerGrammar;

        if $z1 != 0 goto label3;

        $r4 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r4.<groovyjarjarantlr.Tool: void panic(java.lang.String)>("Internal error generating lexer");

     label3:
        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void genBody(groovyjarjarantlr.LexerGrammar)>(r0);

        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void genInclude(groovyjarjarantlr.LexerGrammar)>(r0);

        return;
    }

    public void gen(groovyjarjarantlr.OneOrMoreBlock)
    {
        groovyjarjarantlr.Lookahead[] $r30, $r41;
        groovyjarjarantlr.LLkGrammarAnalyzer $r22;
        groovyjarjarantlr.OneOrMoreBlock r4;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r24, $r26, $r27, $r34, $r35, $r37, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r53, $r54, $r55, $r56, $r57, $r58, $r60, $r61, $r63, $r64, $r65, $r67, $r68, $r69;
        java.lang.String $r7, $r15, $r16, $r20, $r28, $r32, $r33, $r36, $r38, r39, r40, $r42, $r51, $r59, $r62, $r66, $r70;
        groovyjarjarantlr.Grammar $r21, $r23, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        groovyjarjarantlr.CppCodeGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11;
        java.io.PrintStream $r2, $r25;
        groovyjarjarantlr.Lookahead $r31;
        groovyjarjarantlr.CppBlockFinishingInfo $r52;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.OneOrMoreBlock;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label01;

        $z5 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z5 == 0 goto label02;

     label01:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("gen+(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label02:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{ // ( ... )+");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockPreamble(groovyjarjarantlr.AlternativeBlock)>(r4);

        $r38 = virtualinvoke r4.<groovyjarjarantlr.OneOrMoreBlock: java.lang.String getLabel()>();

        if $r38 == null goto label03;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_cnt_");

        $r36 = virtualinvoke r4.<groovyjarjarantlr.OneOrMoreBlock: java.lang.String getLabel()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        r39 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label04;

     label03:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_cnt");

        $i0 = r4.<groovyjarjarantlr.OneOrMoreBlock: int ID>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        r39 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label04:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("int ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r39);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=0;");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r15);

        $r16 = virtualinvoke r4.<groovyjarjarantlr.OneOrMoreBlock: java.lang.String getLabel()>();

        if $r16 == null goto label05;

        r40 = virtualinvoke r4.<groovyjarjarantlr.OneOrMoreBlock: java.lang.String getLabel()>();

        goto label06;

     label05:
        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_loop");

        $i1 = r4.<groovyjarjarantlr.OneOrMoreBlock: int ID>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        r40 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

     label06:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("for (;;) {");

        $i2 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i3 = $i2 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i3;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockInitAction(groovyjarjarantlr.AlternativeBlock)>(r4);

        $r33 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult>;

        $r20 = virtualinvoke r4.<groovyjarjarantlr.OneOrMoreBlock: java.lang.String getLabel()>();

        if $r20 == null goto label07;

        $r32 = virtualinvoke r4.<groovyjarjarantlr.OneOrMoreBlock: java.lang.String getLabel()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult> = $r32;

     label07:
        $r21 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r22 = $r21.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        interfaceinvoke $r22.<groovyjarjarantlr.LLkGrammarAnalyzer: boolean deterministic(groovyjarjarantlr.OneOrMoreBlock)>(r4);

        z6 = 0;

        $r23 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        i9 = $r23.<groovyjarjarantlr.Grammar: int maxk>;

        $z1 = r4.<groovyjarjarantlr.OneOrMoreBlock: boolean greedy>;

        if $z1 != 0 goto label08;

        $i7 = r4.<groovyjarjarantlr.OneOrMoreBlock: int exitLookaheadDepth>;

        $r29 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $i6 = $r29.<groovyjarjarantlr.Grammar: int maxk>;

        if $i7 > $i6 goto label08;

        $r30 = r4.<groovyjarjarantlr.OneOrMoreBlock: groovyjarjarantlr.Lookahead[] exitCache>;

        $i8 = r4.<groovyjarjarantlr.OneOrMoreBlock: int exitLookaheadDepth>;

        $r31 = $r30[$i8];

        $z4 = virtualinvoke $r31.<groovyjarjarantlr.Lookahead: boolean containsEpsilon()>();

        if $z4 == 0 goto label08;

        z6 = 1;

        i9 = r4.<groovyjarjarantlr.OneOrMoreBlock: int exitLookaheadDepth>;

        goto label09;

     label08:
        $z7 = r4.<groovyjarjarantlr.OneOrMoreBlock: boolean greedy>;

        if $z7 != 0 goto label09;

        $i5 = r4.<groovyjarjarantlr.OneOrMoreBlock: int exitLookaheadDepth>;

        if $i5 != 2147483647 goto label09;

        z6 = 1;

     label09:
        if z6 == 0 goto label12;

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z2 != 0 goto label10;

        $z3 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z3 == 0 goto label11;

     label10:
        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nongreedy (...)+ loop; exit depth is ");

        $i4 = r4.<groovyjarjarantlr.OneOrMoreBlock: int exitLookaheadDepth>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label11:
        $r41 = r4.<groovyjarjarantlr.OneOrMoreBlock: groovyjarjarantlr.Lookahead[] exitCache>;

        $r42 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getLookaheadTestExpression(groovyjarjarantlr.Lookahead[],int)>($r41, i9);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// nongreedy exit test");

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ( ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r39);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">=1 && ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") goto ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r40);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r51);

     label12:
        $r52 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CppBlockFinishingInfo genCommonBlock(groovyjarjarantlr.AlternativeBlock,boolean)>(r4, 0);

        $r53 = new java.lang.StringBuffer;

        specialinvoke $r53.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ( ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r39);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">=1 ) { goto ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r40);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; } else {");

        $r59 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String throwNoViable>;

        $r60 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockFinish(groovyjarjarantlr.CppBlockFinishingInfo,java.lang.String)>($r52, $r62);

        $r63 = new java.lang.StringBuffer;

        specialinvoke $r63.<java.lang.StringBuffer: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r39);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("++;");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r66);

        $i10 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i11 = $i10 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i11;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r67 = new java.lang.StringBuffer;

        specialinvoke $r67.<java.lang.StringBuffer: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r40);

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":;");

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r70);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}  // ( ... )+");

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult> = $r33;

        return;
    }

    public void gen(groovyjarjarantlr.ParserGrammar) throws java.io.IOException
    {
        groovyjarjarantlr.CppCodeGenerator r1;
        groovyjarjarantlr.Tool $r3;
        groovyjarjarantlr.Grammar $r2;
        groovyjarjarantlr.collections.impl.Vector $r4;
        groovyjarjarantlr.ParserGrammar r0;
        boolean $z0, $z1;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.ParserGrammar;

        $z0 = r0.<groovyjarjarantlr.ParserGrammar: boolean debuggingOutput>;

        if $z0 == 0 goto label1;

        $r4 = new groovyjarjarantlr.collections.impl.Vector;

        specialinvoke $r4.<groovyjarjarantlr.collections.impl.Vector: void <init>()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector semPreds> = $r4;

     label1:
        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void setGrammar(groovyjarjarantlr.Grammar)>(r0);

        $r2 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r2 instanceof groovyjarjarantlr.ParserGrammar;

        if $z1 != 0 goto label2;

        $r3 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r3.<groovyjarjarantlr.Tool: void panic(java.lang.String)>("Internal error generating parser");

     label2:
        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genBody(groovyjarjarantlr.ParserGrammar)>(r0);

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genInclude(groovyjarjarantlr.ParserGrammar)>(r0);

        return;
    }

    public void gen(groovyjarjarantlr.RuleRefElement)
    {
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r8, $r10, $r12, $r13, $r22, $r24, $r25, $r28, $r29, $r31, $r32, $r35, $r37, $r38, $r44, $r46, $r48, $r49, $r55, $r57, $r58, $r60, $r62, $r64, $r65, $r70, $r72, $r73, $r75, $r76, $r78, $r79, $r81, $r83, $r85, $r86;
        groovyjarjarantlr.Grammar $r15, $r17, $r18, $r19, $r20, $r40, $r51, $r67, $r88, $r90, $r94, $r96, $r97;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.io.PrintStream $r2;
        groovyjarjarantlr.RuleBlock $r42, $r53;
        groovyjarjarantlr.GrammarSymbol $r92;
        groovyjarjarantlr.Tool $r9, $r27, $r45, $r61, $r82;
        java.lang.String $r7, $r11, $r14, $r16, $r21, $r23, $r26, $r30, $r33, $r34, $r36, $r39, $r41, $r43, $r47, $r50, $r52, $r54, $r56, $r59, $r63, $r66, $r68, $r69, $r71, $r74, $r77, $r80, $r84, $r87, $r89, $r91, $r95;
        groovyjarjarantlr.RuleSymbol $r93;
        groovyjarjarantlr.RuleRefElement r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z20;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.RuleRefElement;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label01;

        $z13 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z13 == 0 goto label02;

     label01:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genRR(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label02:
        $r90 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r91 = r4.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r92 = virtualinvoke $r90.<groovyjarjarantlr.Grammar: groovyjarjarantlr.GrammarSymbol getSymbol(java.lang.String)>($r91);

        $r93 = (groovyjarjarantlr.RuleSymbol) $r92;

        if $r93 == null goto label03;

        $z1 = virtualinvoke $r93.<groovyjarjarantlr.RuleSymbol: boolean isDefined()>();

        if $z1 != 0 goto label04;

     label03:
        $r9 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Rule \'");

        $r11 = r4.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is not defined");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r16 = virtualinvoke $r15.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i0 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getLine()>();

        $i1 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getColumn()>();

        virtualinvoke $r9.<groovyjarjarantlr.Tool: void error(java.lang.String,java.lang.String,int,int)>($r14, $r16, $i0, $i1);

        return;

     label04:
        $z2 = $r93 instanceof groovyjarjarantlr.RuleSymbol;

        if $z2 != 0 goto label05;

        $r82 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r81 = new java.lang.StringBuffer;

        specialinvoke $r81.<java.lang.StringBuffer: void <init>()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r84 = r4.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r85 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' does not name a grammar rule");

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.String toString()>();

        $r88 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r89 = virtualinvoke $r88.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i16 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getLine()>();

        $i17 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getColumn()>();

        virtualinvoke $r82.<groovyjarjarantlr.Tool: void error(java.lang.String,java.lang.String,int,int)>($r87, $r89, $i16, $i17);

        return;

     label05:
        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genErrorTryForElement(groovyjarjarantlr.AlternativeElement)>(r4);

        $r17 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r17 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z3 == 0 goto label06;

        $r69 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: java.lang.String getLabel()>();

        if $r69 == null goto label06;

        $i15 = r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        if $i15 != 0 goto label06;

        $r70 = new java.lang.StringBuffer;

        specialinvoke $r70.<java.lang.StringBuffer: void <init>()>();

        $r71 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: java.lang.String getLabel()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = (_t == ASTNULL) ? ");

        $r74 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r75 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : ");

        $r77 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $r78 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r80);

     label06:
        $r94 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z14 = $r94 instanceof groovyjarjarantlr.LexerGrammar;

        if $z14 == 0 goto label08;

        $z12 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z12 == 0 goto label07;

        $i14 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getAutoGenType()>();

        if $i14 != 3 goto label08;

     label07:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_saveIndex = text.length();");

     label08:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printTabs()>();

        $r95 = r4.<groovyjarjarantlr.RuleRefElement: java.lang.String idAssign>;

        if $r95 == null goto label10;

        $r53 = $r93.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.RuleBlock block>;

        $r54 = $r53.<groovyjarjarantlr.RuleBlock: java.lang.String returnAction>;

        if $r54 != null goto label09;

        $r61 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r60 = new java.lang.StringBuffer;

        specialinvoke $r60.<java.lang.StringBuffer: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Rule \'");

        $r63 = r4.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r64 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' has no return type");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.String toString()>();

        $r67 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r68 = virtualinvoke $r67.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i12 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getLine()>();

        $i13 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getColumn()>();

        virtualinvoke $r61.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>($r66, $r68, $i12, $i13);

     label09:
        $r55 = new java.lang.StringBuffer;

        specialinvoke $r55.<java.lang.StringBuffer: void <init>()>();

        $r56 = r4.<groovyjarjarantlr.RuleRefElement: java.lang.String idAssign>;

        $r57 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r59);

        goto label11;

     label10:
        $r18 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r18 instanceof groovyjarjarantlr.LexerGrammar;

        if $z4 != 0 goto label11;

        $i9 = r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        if $i9 != 0 goto label11;

        $r42 = $r93.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.RuleBlock block>;

        $r43 = $r42.<groovyjarjarantlr.RuleBlock: java.lang.String returnAction>;

        if $r43 == null goto label11;

        $r45 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Rule \'");

        $r47 = r4.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r48 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' returns a value");

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.String toString()>();

        $r51 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r52 = virtualinvoke $r51.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i10 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getLine()>();

        $i11 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getColumn()>();

        virtualinvoke $r45.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>($r50, $r52, $i10, $i11);

     label11:
        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void GenRuleInvocation(groovyjarjarantlr.RuleRefElement)>(r4);

        $r96 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z15 = $r96 instanceof groovyjarjarantlr.LexerGrammar;

        if $z15 == 0 goto label13;

        $z11 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z11 == 0 goto label12;

        $i8 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getAutoGenType()>();

        if $i8 != 3 goto label13;

     label12:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("text.erase(_saveIndex);");

     label13:
        $i18 = r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        if $i18 != 0 goto label25;

        $r19 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z5 = $r19.<groovyjarjarantlr.Grammar: boolean hasSyntacticPredicate>;

        if $z5 == 0 goto label16;

        $r40 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z9 = $r40.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z9 == 0 goto label14;

        $r41 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: java.lang.String getLabel()>();

        if $r41 != null goto label15;

     label14:
        $z10 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        if $z10 == 0 goto label16;

        $i7 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getAutoGenType()>();

        if $i7 != 1 goto label16;

     label15:
        $z20 = 1;

        $z19 = 1;

        goto label17;

     label16:
        $z20 = 0;

        $z19 = 0;

     label17:
        z6 = $z20;

        if $z19 == 0 goto label18;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("if (inputState->guessing==0) {");

        $i5 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i6 = $i5 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i6;

     label18:
        $r20 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z7 = $r20.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z7 == 0 goto label19;

        $r34 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: java.lang.String getLabel()>();

        if $r34 == null goto label19;

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: java.lang.String getLabel()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST = returnAST;");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r39);

     label19:
        $z17 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        if $z17 == 0 goto label23;

        $i4 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: int getAutoGenType()>();

        lookupswitch($i4)
        {
            case 1: goto label20;
            case 2: goto label22;
            default: goto label23;
        };

     label20:
        $z8 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z8 == 0 goto label21;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("astFactory->addASTChild(currentAST, ");

        $r30 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST(returnAST));");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r33);

        goto label23;

     label21:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("astFactory->addASTChild( currentAST, returnAST );");

        goto label23;

     label22:
        $r27 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r27.<groovyjarjarantlr.Tool: void error(java.lang.String)>("Internal: encountered ^ after rule reference");

        goto label23;

     label23:
        $r97 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z18 = $r97 instanceof groovyjarjarantlr.LexerGrammar;

        if $z18 == 0 goto label24;

        $r21 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: java.lang.String getLabel()>();

        if $r21 == null goto label24;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke r4.<groovyjarjarantlr.RuleRefElement: java.lang.String getLabel()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=_returnToken;");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r26);

     label24:
        if z6 == 0 goto label25;

        $i2 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i3 = $i2 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i3;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

     label25:
        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genErrorCatchForElement(groovyjarjarantlr.AlternativeElement)>(r4);

        return;
    }

    public void gen(groovyjarjarantlr.StringLiteralElement)
    {
        groovyjarjarantlr.Grammar $r17;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r8, $r10, $r11, $r13, $r14;
        int $i0, $i1;
        java.lang.String $r7, $r9, $r12, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.PrintStream $r2;
        groovyjarjarantlr.StringLiteralElement r4;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.StringLiteralElement;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label1;

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z1 == 0 goto label2;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genString(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label2:
        $r16 = virtualinvoke r4.<groovyjarjarantlr.StringLiteralElement: java.lang.String getLabel()>();

        if $r16 == null goto label3;

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        if $i1 != 0 goto label3;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke r4.<groovyjarjarantlr.StringLiteralElement: java.lang.String getLabel()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r12 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r15);

     label3:
        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genElementAST(groovyjarjarantlr.AlternativeElement)>(r4);

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        $z3 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z3 == 0 goto label4;

        $i0 = virtualinvoke r4.<groovyjarjarantlr.StringLiteralElement: int getAutoGenType()>();

        if $i0 != 1 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = $z4;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genMatch(groovyjarjarantlr.GrammarAtom)>(r4);

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = $z2;

        $r17 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z5 = $r17 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z5 == 0 goto label6;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = _t->getNextSibling();");

     label6:
        return;
    }

    public void gen(groovyjarjarantlr.TokenRangeElement)
    {
        groovyjarjarantlr.TokenRangeElement r1;
        java.lang.StringBuffer $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18;
        int $i0;
        java.lang.String $r2, $r4, $r7, $r10, $r13, $r16, $r19;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: groovyjarjarantlr.TokenRangeElement;

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genErrorTryForElement(groovyjarjarantlr.AlternativeElement)>(r1);

        $r2 = virtualinvoke r1.<groovyjarjarantlr.TokenRangeElement: java.lang.String getLabel()>();

        if $r2 == null goto label1;

        $i0 = r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        if $i0 != 0 goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r1.<groovyjarjarantlr.TokenRangeElement: java.lang.String getLabel()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r10);

     label1:
        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genElementAST(groovyjarjarantlr.AlternativeElement)>(r1);

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("matchRange(");

        $r13 = r1.<groovyjarjarantlr.TokenRangeElement: java.lang.String beginText>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r16 = r1.<groovyjarjarantlr.TokenRangeElement: java.lang.String endText>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r19);

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genErrorCatchForElement(groovyjarjarantlr.AlternativeElement)>(r1);

        return;
    }

    public void gen(groovyjarjarantlr.TokenRefElement)
    {
        groovyjarjarantlr.Grammar $r18, $r19;
        groovyjarjarantlr.Tool $r17;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r9, $r11, $r12, $r14, $r15;
        int $i0;
        java.lang.String $r7, $r8, $r10, $r13, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream $r2;
        groovyjarjarantlr.TokenRefElement r4;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.TokenRefElement;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label1;

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z1 == 0 goto label2;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genTokenRef(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label2:
        $r18 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z2 = $r18 instanceof groovyjarjarantlr.LexerGrammar;

        if $z2 == 0 goto label3;

        $r17 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r17.<groovyjarjarantlr.Tool: void panic(java.lang.String)>("Token reference found in lexer");

     label3:
        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genErrorTryForElement(groovyjarjarantlr.AlternativeElement)>(r4);

        $r8 = virtualinvoke r4.<groovyjarjarantlr.TokenRefElement: java.lang.String getLabel()>();

        if $r8 == null goto label4;

        $i0 = r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        if $i0 != 0 goto label4;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke r4.<groovyjarjarantlr.TokenRefElement: java.lang.String getLabel()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r13 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r16);

     label4:
        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genElementAST(groovyjarjarantlr.AlternativeElement)>(r4);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genMatch(groovyjarjarantlr.GrammarAtom)>(r4);

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genErrorCatchForElement(groovyjarjarantlr.AlternativeElement)>(r4);

        $r19 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r19 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z3 == 0 goto label5;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = _t->getNextSibling();");

     label5:
        return;
    }

    public void gen(groovyjarjarantlr.TreeElement)
    {
        groovyjarjarantlr.collections.impl.Vector $r68;
        groovyjarjarantlr.Tool $r49, $r53;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r7, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r29, $r30, $r32, $r33, $r35, $r37, $r38, $r39, $r40, $r42, $r43, $r45, $r46, $r56, $r59, $r60, $r62, $r63, $r65, $r66;
        java.lang.String $r2, $r8, $r10, $r22, $r27, $r31, $r34, $r36, $r41, $r44, $r47, $r50, $r54, $r58, $r61, $r64, $r67;
        groovyjarjarantlr.GrammarAtom $r9, $r11, $r12, $r13, $r15, $r16, $r51, $r55, $r57;
        groovyjarjarantlr.Grammar $r14, $r17, $r48, $r52;
        boolean $z0, $z1, $z2;
        groovyjarjarantlr.Alternative $r28;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.AlternativeElement r69;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11;
        groovyjarjarantlr.TreeElement r5;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r5 := @parameter0: groovyjarjarantlr.TreeElement;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementType>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" __t");

        $i0 = r5.<groovyjarjarantlr.TreeElement: int ID>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = _t;");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r8);

        $r9 = r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        $r10 = virtualinvoke $r9.<groovyjarjarantlr.GrammarAtom: java.lang.String getLabel()>();

        if $r10 == null goto label01;

        $r56 = new java.lang.StringBuffer;

        specialinvoke $r56.<java.lang.StringBuffer: void <init>()>();

        $r57 = r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        $r58 = virtualinvoke $r57.<groovyjarjarantlr.GrammarAtom: java.lang.String getLabel()>();

        $r59 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = (_t == ");

        $r61 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementType>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(ASTNULL)) ? ");

        $r64 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r65 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : _t;");

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r67);

     label01:
        $r11 = r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        $i1 = virtualinvoke $r11.<groovyjarjarantlr.GrammarAtom: int getAutoGenType()>();

        if $i1 != 3 goto label02;

        $r53 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r52 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r54 = virtualinvoke $r52.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i8 = virtualinvoke r5.<groovyjarjarantlr.TreeElement: int getLine()>();

        $i9 = virtualinvoke r5.<groovyjarjarantlr.TreeElement: int getColumn()>();

        virtualinvoke $r53.<groovyjarjarantlr.Tool: void error(java.lang.String,java.lang.String,int,int)>("Suffixing a root node with \'!\' is not implemented", $r54, $i8, $i9);

        $r55 = r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        virtualinvoke $r55.<groovyjarjarantlr.GrammarAtom: void setAutoGenType(int)>(1);

     label02:
        $r12 = r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        $i2 = virtualinvoke $r12.<groovyjarjarantlr.GrammarAtom: int getAutoGenType()>();

        if $i2 != 2 goto label03;

        $r49 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r48 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r50 = virtualinvoke $r48.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i6 = virtualinvoke r5.<groovyjarjarantlr.TreeElement: int getLine()>();

        $i7 = virtualinvoke r5.<groovyjarjarantlr.TreeElement: int getColumn()>();

        virtualinvoke $r49.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>("Suffixing a root node with \'^\' is redundant; already a root", $r50, $i6, $i7);

        $r51 = r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        virtualinvoke $r51.<groovyjarjarantlr.GrammarAtom: void setAutoGenType(int)>(1);

     label03:
        $r13 = r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genElementAST(groovyjarjarantlr.AlternativeElement)>($r13);

        $r14 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r14.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z0 == 0 goto label04;

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r36 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ASTPair __currentAST");

        $i5 = r5.<groovyjarjarantlr.TreeElement: int ID>;

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = currentAST;");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r41);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("currentAST.root = currentAST.child;");

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("currentAST.child = ");

        $r44 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r47);

     label04:
        $r15 = r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        $z1 = $r15 instanceof groovyjarjarantlr.WildcardElement;

        if $z1 == 0 goto label05;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ( _t == ASTNULL ) throw ");

        $r31 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MismatchedTokenException();");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r34);

        goto label06;

     label05:
        $r16 = r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genMatch(groovyjarjarantlr.GrammarAtom)>($r16);

     label06:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = _t->getFirstChild();");

        i10 = 0;

     label07:
        $r68 = virtualinvoke r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.collections.impl.Vector getAlternatives()>();

        $i11 = virtualinvoke $r68.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i10 >= $i11 goto label10;

        $r28 = virtualinvoke r5.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.Alternative getAlternativeAt(int)>(i10);

        r69 = $r28.<groovyjarjarantlr.Alternative: groovyjarjarantlr.AlternativeElement head>;

     label08:
        if r69 == null goto label09;

        virtualinvoke r69.<groovyjarjarantlr.AlternativeElement: void generate()>();

        r69 = r69.<groovyjarjarantlr.AlternativeElement: groovyjarjarantlr.AlternativeElement next>;

        goto label08;

     label09:
        i10 = i10 + 1;

        goto label07;

     label10:
        $r17 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z2 = $r17.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z2 == 0 goto label11;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("currentAST = __currentAST");

        $i4 = r5.<groovyjarjarantlr.TreeElement: int ID>;

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r27);

     label11:
        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_t = __t");

        $i3 = r5.<groovyjarjarantlr.TreeElement: int ID>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r22);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = _t->getNextSibling();");

        return;
    }

    public void gen(groovyjarjarantlr.TreeWalkerGrammar) throws java.io.IOException
    {
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.Tool $r3;
        groovyjarjarantlr.TreeWalkerGrammar r1;
        groovyjarjarantlr.Grammar $r2;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: groovyjarjarantlr.TreeWalkerGrammar;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void setGrammar(groovyjarjarantlr.Grammar)>(r1);

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r2 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z0 != 0 goto label1;

        $r3 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r3.<groovyjarjarantlr.Tool: void panic(java.lang.String)>("Internal error generating tree-walker");

     label1:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBody(groovyjarjarantlr.TreeWalkerGrammar)>(r1);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genInclude(groovyjarjarantlr.TreeWalkerGrammar)>(r1);

        return;
    }

    public void gen(groovyjarjarantlr.WildcardElement)
    {
        groovyjarjarantlr.Grammar $r3, $r10, $r28, $r29, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        groovyjarjarantlr.CppCodeGenerator r2;
        groovyjarjarantlr.WildcardElement r0;
        java.lang.StringBuffer $r4, $r5, $r7, $r8, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r22, $r23, $r25, $r26;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r6, $r9, $r13, $r16, $r19, $r21, $r24, $r27;

        r2 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.WildcardElement;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.WildcardElement: java.lang.String getLabel()>();

        if $r1 == null goto label1;

        $i2 = r2.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        if $i2 != 0 goto label1;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke r0.<groovyjarjarantlr.WildcardElement: java.lang.String getLabel()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r24 = r2.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r27);

     label1:
        specialinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void genElementAST(groovyjarjarantlr.AlternativeElement)>(r0);

        $r28 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r28 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z4 == 0 goto label2;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ( _t == ");

        $r13 = r2.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ) throw ");

        $r16 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MismatchedTokenException();");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r19);

        goto label7;

     label2:
        $r3 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r3 instanceof groovyjarjarantlr.LexerGrammar;

        if $z0 == 0 goto label6;

        $r10 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r10 instanceof groovyjarjarantlr.LexerGrammar;

        if $z1 == 0 goto label4;

        $z3 = r2.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z3 == 0 goto label3;

        $i1 = virtualinvoke r0.<groovyjarjarantlr.WildcardElement: int getAutoGenType()>();

        if $i1 != 3 goto label4;

     label3:
        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_saveIndex = text.length();");

     label4:
        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("matchNot(EOF/*_CHAR*/);");

        $r29 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z5 = $r29 instanceof groovyjarjarantlr.LexerGrammar;

        if $z5 == 0 goto label7;

        $z2 = r2.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z2 == 0 goto label5;

        $i0 = virtualinvoke r0.<groovyjarjarantlr.WildcardElement: int getAutoGenType()>();

        if $i0 != 3 goto label7;

     label5:
        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("text.erase(_saveIndex);");

        goto label7;

     label6:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("matchNot(");

        $r6 = specialinvoke r2.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getValueString(int)>(1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r9);

     label7:
        $r30 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z6 = $r30 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z6 == 0 goto label8;

        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = _t->getNextSibling();");

     label8:
        return;
    }

    public void gen(groovyjarjarantlr.ZeroOrMoreBlock)
    {
        groovyjarjarantlr.Lookahead[] $r21, $r27;
        groovyjarjarantlr.LLkGrammarAnalyzer $r13;
        groovyjarjarantlr.ZeroOrMoreBlock r4;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r8, $r9, $r10, $r15, $r17, $r18, $r29, $r30, $r31, $r32, $r33, $r34, $r37, $r38, $r39, $r40, $r42, $r43, $r44;
        java.lang.String $r7, $r11, $r19, $r23, $r24, $r25, r26, $r28, $r35, $r41, $r45;
        groovyjarjarantlr.Grammar $r12, $r14, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        groovyjarjarantlr.CppCodeGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10;
        java.io.PrintStream $r2, $r16;
        groovyjarjarantlr.Lookahead $r22;
        groovyjarjarantlr.CppBlockFinishingInfo $r36;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.ZeroOrMoreBlock;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label01;

        $z5 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z5 == 0 goto label02;

     label01:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("gen*(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label02:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{ // ( ... )*");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockPreamble(groovyjarjarantlr.AlternativeBlock)>(r4);

        $r25 = virtualinvoke r4.<groovyjarjarantlr.ZeroOrMoreBlock: java.lang.String getLabel()>();

        if $r25 == null goto label03;

        r26 = virtualinvoke r4.<groovyjarjarantlr.ZeroOrMoreBlock: java.lang.String getLabel()>();

        goto label04;

     label03:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_loop");

        $i0 = r4.<groovyjarjarantlr.ZeroOrMoreBlock: int ID>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        r26 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label04:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("for (;;) {");

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockInitAction(groovyjarjarantlr.AlternativeBlock)>(r4);

        $r24 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult>;

        $r11 = virtualinvoke r4.<groovyjarjarantlr.ZeroOrMoreBlock: java.lang.String getLabel()>();

        if $r11 == null goto label05;

        $r23 = virtualinvoke r4.<groovyjarjarantlr.ZeroOrMoreBlock: java.lang.String getLabel()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult> = $r23;

     label05:
        $r12 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r13 = $r12.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        interfaceinvoke $r13.<groovyjarjarantlr.LLkGrammarAnalyzer: boolean deterministic(groovyjarjarantlr.ZeroOrMoreBlock)>(r4);

        z6 = 0;

        $r14 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        i8 = $r14.<groovyjarjarantlr.Grammar: int maxk>;

        $z1 = r4.<groovyjarjarantlr.ZeroOrMoreBlock: boolean greedy>;

        if $z1 != 0 goto label06;

        $i6 = r4.<groovyjarjarantlr.ZeroOrMoreBlock: int exitLookaheadDepth>;

        $r20 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $i5 = $r20.<groovyjarjarantlr.Grammar: int maxk>;

        if $i6 > $i5 goto label06;

        $r21 = r4.<groovyjarjarantlr.ZeroOrMoreBlock: groovyjarjarantlr.Lookahead[] exitCache>;

        $i7 = r4.<groovyjarjarantlr.ZeroOrMoreBlock: int exitLookaheadDepth>;

        $r22 = $r21[$i7];

        $z4 = virtualinvoke $r22.<groovyjarjarantlr.Lookahead: boolean containsEpsilon()>();

        if $z4 == 0 goto label06;

        z6 = 1;

        i8 = r4.<groovyjarjarantlr.ZeroOrMoreBlock: int exitLookaheadDepth>;

        goto label07;

     label06:
        $z7 = r4.<groovyjarjarantlr.ZeroOrMoreBlock: boolean greedy>;

        if $z7 != 0 goto label07;

        $i4 = r4.<groovyjarjarantlr.ZeroOrMoreBlock: int exitLookaheadDepth>;

        if $i4 != 2147483647 goto label07;

        z6 = 1;

     label07:
        if z6 == 0 goto label10;

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z2 != 0 goto label08;

        $z3 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z3 == 0 goto label09;

     label08:
        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nongreedy (...)* loop; exit depth is ");

        $i3 = r4.<groovyjarjarantlr.ZeroOrMoreBlock: int exitLookaheadDepth>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label09:
        $r27 = r4.<groovyjarjarantlr.ZeroOrMoreBlock: groovyjarjarantlr.Lookahead[] exitCache>;

        $r28 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getLookaheadTestExpression(groovyjarjarantlr.Lookahead[],int)>($r27, i8);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// nongreedy exit test");

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if (");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") goto ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r35);

     label10:
        $r36 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CppBlockFinishingInfo genCommonBlock(groovyjarjarantlr.AlternativeBlock,boolean)>(r4, 0);

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("goto ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockFinish(groovyjarjarantlr.CppBlockFinishingInfo,java.lang.String)>($r36, $r41);

        $i9 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i10 = $i9 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i10;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":;");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r45);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("} // ( ... )*");

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult> = $r24;

        return;
    }

    protected void genAlt(groovyjarjarantlr.Alternative, groovyjarjarantlr.AlternativeBlock)
    {
        groovyjarjarantlr.Grammar $r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        groovyjarjarantlr.RuleBlock r8;
        groovyjarjarantlr.Alternative r1;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.AlternativeElement r25;
        groovyjarjarantlr.AlternativeBlock r3;
        groovyjarjarantlr.ExceptionSpec $r2, $r24, $r26;
        groovyjarjarantlr.Tool $r6;
        java.lang.StringBuffer $r9, $r11, $r12, $r14, $r16, $r17, $r19, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r4, $r7, $r10, $r13, $r15, $r18, $r21;
        java.util.Hashtable $r22, $r23;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: groovyjarjarantlr.Alternative;

        r3 := @parameter1: groovyjarjarantlr.AlternativeBlock;

        z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        if $z1 == 0 goto label01;

        $z6 = virtualinvoke r1.<groovyjarjarantlr.Alternative: boolean getAutoGen()>();

        if $z6 == 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = $z7;

        $z8 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        $z9 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z9 == 0 goto label03;

        $z5 = virtualinvoke r1.<groovyjarjarantlr.Alternative: boolean getAutoGen()>();

        if $z5 == 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = $z10;

        $r22 = r0.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable treeVariableMap>;

        $r23 = new java.util.Hashtable;

        specialinvoke $r23.<java.util.Hashtable: void <init>()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable treeVariableMap> = $r23;

        $r24 = r1.<groovyjarjarantlr.Alternative: groovyjarjarantlr.ExceptionSpec exceptionSpec>;

        if $r24 == null goto label05;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("try {      // for error handling");

        $i4 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i5 = $i4 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i5;

     label05:
        r25 = r1.<groovyjarjarantlr.Alternative: groovyjarjarantlr.AlternativeElement head>;

     label06:
        $z11 = r25 instanceof groovyjarjarantlr.BlockEndElement;

        if $z11 != 0 goto label07;

        virtualinvoke r25.<groovyjarjarantlr.AlternativeElement: void generate()>();

        r25 = r25.<groovyjarjarantlr.AlternativeElement: groovyjarjarantlr.AlternativeElement next>;

        goto label06;

     label07:
        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        if $z2 == 0 goto label10;

        $z3 = r3 instanceof groovyjarjarantlr.RuleBlock;

        if $z3 == 0 goto label09;

        r8 = (groovyjarjarantlr.RuleBlock) r3;

        $z4 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z4 == 0 goto label08;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke r8.<groovyjarjarantlr.RuleBlock: java.lang.String getRuleName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST = ");

        $r18 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(currentAST.root);");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r21);

        goto label10;

     label08:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke r8.<groovyjarjarantlr.RuleBlock: java.lang.String getRuleName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST = currentAST.root;");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r13);

        goto label10;

     label09:
        $r4 = virtualinvoke r3.<groovyjarjarantlr.AlternativeBlock: java.lang.String getLabel()>();

        if $r4 == null goto label10;

        $r6 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r5 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r7 = virtualinvoke $r5.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i2 = virtualinvoke r3.<groovyjarjarantlr.AlternativeBlock: int getLine()>();

        $i3 = virtualinvoke r3.<groovyjarjarantlr.AlternativeBlock: int getColumn()>();

        virtualinvoke $r6.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>("Labeled subrules are not implemented", $r7, $i2, $i3);

     label10:
        $r26 = r1.<groovyjarjarantlr.Alternative: groovyjarjarantlr.ExceptionSpec exceptionSpec>;

        if $r26 == null goto label11;

        $i0 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i1 = $i0 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i1;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r2 = r1.<groovyjarjarantlr.Alternative: groovyjarjarantlr.ExceptionSpec exceptionSpec>;

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genErrorHandler(groovyjarjarantlr.ExceptionSpec)>($r2);

     label11:
        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = z0;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = $z8;

        r0.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable treeVariableMap> = $r22;

        return;
    }

    protected void genBitsets(groovyjarjarantlr.collections.impl.Vector, int, java.lang.String)
    {
        groovyjarjarantlr.Grammar $r1, $r34;
        groovyjarjarantlr.CharFormatter $r42;
        groovyjarjarantlr.TokenManager r2;
        groovyjarjarantlr.collections.impl.Vector r3, $r18;
        boolean $z0, $z1;
        groovyjarjarantlr.collections.impl.BitSet r5;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.StringBuffer $r6, $r7, $r9, $r11, $r12, $r13, $r15, $r16, $r19, $r20, $r22, $r23, $r24, $r26, $r27, $r29, $r30, $r31, $r32, $r35, $r36, $r38, $r39, $r40, $r41, $r44, $r45, $r47, $r48, $r49, $r51, $r52;
        int $i0, i1, $i2, $i3, $i4, i5, i6, $i7;
        java.lang.String r8, $r10, $r14, $r17, $r21, $r25, $r28, $r33, $r37, $r43, r46, $r50;
        java.lang.Object $r4;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r3 := @parameter0: groovyjarjarantlr.collections.impl.Vector;

        i1 := @parameter1: int;

        r8 := @parameter2: java.lang.String;

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        i5 = 0;

     label1:
        $i0 = virtualinvoke r3.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i5 >= $i0 goto label9;

        $r4 = virtualinvoke r3.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i5);

        r5 = (groovyjarjarantlr.collections.impl.BitSet) $r4;

        virtualinvoke r5.<groovyjarjarantlr.collections.impl.BitSet: void growToInclude(int)>(i1);

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("const unsigned long ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r10 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getBitsetName(int)>(i5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_data_");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] = { ");

        $r14 = virtualinvoke r5.<groovyjarjarantlr.collections.impl.BitSet: java.lang.String toStringOfHalfWords()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" };");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r17);

        r46 = "// ";

        i6 = 0;

     label2:
        $r18 = interfaceinvoke r2.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.collections.impl.Vector getVocabulary()>();

        $i2 = virtualinvoke $r18.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i6 >= $i2 goto label7;

        $z0 = virtualinvoke r5.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>(i6);

        if $z0 == 0 goto label6;

        $r34 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r34 instanceof groovyjarjarantlr.LexerGrammar;

        if $z1 == 0 goto label4;

        if 32 > i6 goto label3;

        if i6 >= 127 goto label3;

        if i6 == 92 goto label3;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r46);

        $r42 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter>;

        $r43 = interfaceinvoke $r42.<groovyjarjarantlr.CharFormatter: java.lang.String escapeChar(int,boolean)>(i6, 1);

        $r44 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label5;

     label3:
        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r46);

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $r50 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i6, 16);

        $r51 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        r46 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label5;

     label4:
        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r46);

        $r37 = interfaceinvoke r2.<groovyjarjarantlr.TokenManager: java.lang.String getTokenStringAt(int)>(i6);

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        r46 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        $i7 = virtualinvoke r46.<java.lang.String: int length()>();

        if $i7 <= 70 goto label6;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>(r46);

        r46 = "// ";

     label6:
        i6 = i6 + 1;

        goto label2;

     label7:
        if r46 == "// " goto label8;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>(r46);

     label8:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("const ");

        $r21 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("BitSet ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r25 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getBitsetName(int)>(i5);

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r28 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getBitsetName(int)>(i5);

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_data_,");

        $i3 = virtualinvoke r5.<groovyjarjarantlr.collections.impl.BitSet: int size()>();

        $i4 = $i3 / 32;

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r33);

        i5 = i5 + 1;

        goto label1;

     label9:
        return;
    }

    protected void genBitsetsHeader(groovyjarjarantlr.collections.impl.Vector, int)
    {
        java.lang.StringBuffer $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18;
        int $i0, i1, i2;
        java.lang.String $r6, $r10, $r13, $r16, $r19;
        groovyjarjarantlr.collections.impl.Vector r1;
        groovyjarjarantlr.collections.impl.BitSet r3;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.Object $r2;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: groovyjarjarantlr.collections.impl.Vector;

        i1 := @parameter1: int;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i2 >= $i0 goto label2;

        $r2 = virtualinvoke r1.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i2);

        r3 = (groovyjarjarantlr.collections.impl.BitSet) $r2;

        virtualinvoke r3.<groovyjarjarantlr.collections.impl.BitSet: void growToInclude(int)>(i1);

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static const unsigned long ");

        $r6 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getBitsetName(int)>(i2);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_data_");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[];");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static const ");

        $r13 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("BitSet ");

        $r16 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getBitsetName(int)>(i2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r19);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void genBlockFinish(groovyjarjarantlr.CppBlockFinishingInfo, java.lang.String)
    {
        groovyjarjarantlr.CppCodeGenerator r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, r3, $r4;
        groovyjarjarantlr.CppBlockFinishingInfo r0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.CppBlockFinishingInfo;

        r3 := @parameter1: java.lang.String;

        $z0 = r0.<groovyjarjarantlr.CppBlockFinishingInfo: boolean needAnErrorClause>;

        if $z0 == 0 goto label4;

        $z1 = r0.<groovyjarjarantlr.CppBlockFinishingInfo: boolean generatedAnIf>;

        if $z1 != 0 goto label1;

        $z3 = r0.<groovyjarjarantlr.CppBlockFinishingInfo: boolean generatedSwitch>;

        if $z3 == 0 goto label4;

     label1:
        $z2 = r0.<groovyjarjarantlr.CppBlockFinishingInfo: boolean generatedAnIf>;

        if $z2 == 0 goto label2;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("else {");

        goto label3;

     label2:
        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

     label3:
        $i0 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i1 = $i0 + 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i1;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>(r3);

        $i2 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i3 = $i2 - 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i3;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

     label4:
        $r4 = r0.<groovyjarjarantlr.CppBlockFinishingInfo: java.lang.String postscript>;

        if $r4 == null goto label5;

        $r2 = r0.<groovyjarjarantlr.CppBlockFinishingInfo: java.lang.String postscript>;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r2);

     label5:
        return;
    }

    protected void genBlockInitAction(groovyjarjarantlr.AlternativeBlock)
    {
        groovyjarjarantlr.CppCodeGenerator r2;
        groovyjarjarantlr.AlternativeBlock r0;
        groovyjarjarantlr.RuleBlock $r3;
        int $i0;
        java.lang.String $r1, $r4, $r5;

        r2 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.AlternativeBlock;

        $r1 = r0.<groovyjarjarantlr.AlternativeBlock: java.lang.String initAction>;

        if $r1 == null goto label1;

        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(groovyjarjarantlr.GrammarElement)>(r0);

        $r4 = r0.<groovyjarjarantlr.AlternativeBlock: java.lang.String initAction>;

        $i0 = r0.<groovyjarjarantlr.AlternativeBlock: int line>;

        $r3 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r5 = virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>($r4, $i0, $r3, null);

        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void printAction(java.lang.String)>($r5);

        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void genLineNo2()>();

     label1:
        return;
    }

    protected void genBlockPreamble(groovyjarjarantlr.AlternativeBlock)
    {
        groovyjarjarantlr.LLkGrammarAnalyzer $r32;
        groovyjarjarantlr.collections.impl.Vector $r2, $r3, $r4;
        groovyjarjarantlr.RuleBlock r1;
        java.lang.StringBuffer $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r23, $r24, $r26, $r27, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r48, $r49, $r51, $r54, $r56, $r57, $r59, $r60, $r62, $r63;
        java.lang.String $r11, $r14, $r17, $r20, $r22, $r25, $r28, $r34, $r37, $r40, $r43, $r46, $r50, $r52, $r55, $r58, $r61, $r64;
        groovyjarjarantlr.GrammarAtom $r45, r47;
        groovyjarjarantlr.Grammar $r8, $r9, $r30, $r44, $r53, $r65;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        groovyjarjarantlr.CppCodeGenerator r7;
        groovyjarjarantlr.AlternativeElement r6;
        groovyjarjarantlr.AlternativeBlock r0, $r29, $r31;
        int $i0, i1;
        java.lang.Object $r5;

        r7 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.AlternativeBlock;

        $z0 = r0 instanceof groovyjarjarantlr.RuleBlock;

        if $z0 == 0 goto label9;

        r1 = (groovyjarjarantlr.RuleBlock) r0;

        $r2 = r1.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.collections.impl.Vector labeledElements>;

        if $r2 == null goto label9;

        i1 = 0;

     label1:
        $r3 = r1.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.collections.impl.Vector labeledElements>;

        $i0 = virtualinvoke $r3.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i1 >= $i0 goto label9;

        $r4 = r1.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.collections.impl.Vector labeledElements>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i1);

        r6 = (groovyjarjarantlr.AlternativeElement) $r5;

        $z1 = r6 instanceof groovyjarjarantlr.RuleRefElement;

        if $z1 != 0 goto label2;

        $z9 = r6 instanceof groovyjarjarantlr.AlternativeBlock;

        if $z9 == 0 goto label6;

        $z11 = r6 instanceof groovyjarjarantlr.RuleBlock;

        if $z11 != 0 goto label6;

        $z12 = r6 instanceof groovyjarjarantlr.SynPredBlock;

        if $z12 != 0 goto label6;

     label2:
        $z2 = r6 instanceof groovyjarjarantlr.RuleRefElement;

        if $z2 != 0 goto label3;

        $r29 = (groovyjarjarantlr.AlternativeBlock) r6;

        $z5 = $r29.<groovyjarjarantlr.AlternativeBlock: boolean not>;

        if $z5 == 0 goto label3;

        $r32 = r7.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.LLkGrammarAnalyzer analyzer>;

        $r31 = (groovyjarjarantlr.AlternativeBlock) r6;

        $r30 = r7.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z6 = $r30 instanceof groovyjarjarantlr.LexerGrammar;

        $z7 = interfaceinvoke $r32.<groovyjarjarantlr.LLkGrammarAnalyzer: boolean subruleCanBeInverted(groovyjarjarantlr.AlternativeBlock,boolean)>($r31, $z6);

        if $z7 == 0 goto label3;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = r7.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementType>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r37 = virtualinvoke r6.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r40 = r7.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementInit>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r7.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r43);

        $r44 = r7.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z8 = $r44.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z8 == 0 goto label8;

        virtualinvoke r7.<groovyjarjarantlr.CppCodeGenerator: void genASTDeclaration(groovyjarjarantlr.AlternativeElement)>(r6);

        goto label8;

     label3:
        $r53 = r7.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z13 = $r53.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z13 == 0 goto label4;

        virtualinvoke r7.<groovyjarjarantlr.CppCodeGenerator: void genASTDeclaration(groovyjarjarantlr.AlternativeElement)>(r6);

     label4:
        $r8 = r7.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r8 instanceof groovyjarjarantlr.LexerGrammar;

        if $z3 == 0 goto label5;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefToken ");

        $r25 = virtualinvoke r6.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r7.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r28);

     label5:
        $r9 = r7.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r9 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z4 == 0 goto label8;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = r7.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementType>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r14 = virtualinvoke r6.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r17 = r7.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementInit>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r7.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r20);

        goto label8;

     label6:
        $r54 = new java.lang.StringBuffer;

        specialinvoke $r54.<java.lang.StringBuffer: void <init>()>();

        $r55 = r7.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementType>;

        $r56 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r58 = virtualinvoke r6.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r61 = r7.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementInit>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r7.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r64);

        $r65 = r7.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z14 = $r65.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z14 == 0 goto label8;

        $z10 = r6 instanceof groovyjarjarantlr.GrammarAtom;

        if $z10 == 0 goto label7;

        $r45 = (groovyjarjarantlr.GrammarAtom) r6;

        $r46 = virtualinvoke $r45.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        if $r46 == null goto label7;

        r47 = (groovyjarjarantlr.GrammarAtom) r6;

        $r48 = new java.lang.StringBuffer;

        specialinvoke $r48.<java.lang.StringBuffer: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ref");

        $r50 = virtualinvoke r47.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r7.<groovyjarjarantlr.CppCodeGenerator: void genASTDeclaration(groovyjarjarantlr.AlternativeElement,java.lang.String)>(r6, $r52);

        goto label8;

     label7:
        virtualinvoke r7.<groovyjarjarantlr.CppCodeGenerator: void genASTDeclaration(groovyjarjarantlr.AlternativeElement)>(r6);

     label8:
        i1 = i1 + 1;

        goto label1;

     label9:
        return;
    }

    public void genBody(groovyjarjarantlr.LexerGrammar) throws java.io.IOException
    {
        java.util.Enumeration $r108, $r112, $r151;
        java.lang.StringBuffer $r4, $r5, $r12, $r15, $r16, $r28, $r29, $r33, $r34, $r37, $r38, $r40, $r41, $r45, $r46, $r47, $r49, $r50, $r52, $r53, $r59, $r60, $r63, $r64, $r66, $r67, $r71, $r72, $r73, $r74, $r75, $r81, $r82, $r85, $r86, $r88, $r89, $r92, $r93, $r94, $r95, $r96, $r100, $r103, $r104, $r121, $r122, $r131, $r132, $r139, $r140, $r143, $r146, $r147, $r154, $r157, $r158, $r165, $r167, $r168, $r169, $r170, $r173, $r174, $r175, $r177, $r178, $r179, $r180, $r183, $r184, $r185, $r187, $r188, $r190, $r191, $r192, $r193, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r221;
        groovyjarjarantlr.StringLiteralSymbol r201;
        groovyjarjarantlr.TokenSymbol $r163;
        groovyjarjarantlr.LexerGrammar r51, $r115;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i38, i39, $i41, $i42;
        groovyjarjarantlr.NameSpace $r19, $r124, $r127, $r197;
        groovyjarjarantlr.collections.impl.Vector $r111, $r117, $r150;
        groovyjarjarantlr.GrammarSymbol r202;
        groovyjarjarantlr.Tool $r8;
        java.lang.String $r3, $r6, $r7, $r10, $r14, $r17, $r23, $r25, $r27, $r32, $r36, $r39, $r42, $r48, $r54, $r58, $r62, $r65, $r68, $r76, $r80, $r84, $r87, $r90, $r97, $r102, $r105, $r120, $r123, $r130, $r133, $r135, $r138, $r141, $r145, $r148, $r156, $r159, $r166, $r171, $r176, $r181, $r186, $r189, $r194, r198, r199, r200;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.Grammar $r2, $r13, $r18, $r20, $r22, $r24, $r31, $r35, $r43, $r55, $r57, $r61, $r69, $r77, $r79, $r83, $r98, $r101, $r106, $r109, $r110, $r113, $r114, $r119, $r129, $r137, $r144, $r149, $r161, $r195;
        groovyjarjarantlr.Token $r21;
        java.lang.Object $r134, $r152, $r160;
        groovyjarjarantlr.TokenManager $r107, $r162;
        java.io.PrintWriter $r9, $r125, $r126, $r196;
        groovyjarjarantlr.RuleSymbol $r155, r203;
        groovyjarjarantlr.collections.impl.BitSet $r116;
        char $c35;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r51 := @parameter0: groovyjarjarantlr.LexerGrammar;

        $r204 = new java.lang.StringBuffer;

        specialinvoke $r204.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r3 = virtualinvoke $r2.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r204.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".cpp");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile> = $r6;

        r0.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = 1;

        $r8 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>($r7);

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = $r9;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = 0;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        $r10 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genHeader(java.lang.String)>($r10);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("pre_include_cpp");

        $r205 = new java.lang.StringBuffer;

        specialinvoke $r205.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r205.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#include \"");

        $r13 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r14 = virtualinvoke $r13.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r17);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/CharBuffer.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/TokenStreamException.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/TokenStreamIOException.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/TokenStreamRecognitionException.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/CharStreamException.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/CharStreamIOException.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/NoViableAltForCharException.hpp>");

        $r18 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r18.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/DebuggingInputBuffer.hpp>");

     label01:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("post_include_cpp");

        $r19 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r19 == null goto label02;

        $r197 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r196 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r197.<groovyjarjarantlr.NameSpace: void emitDeclarations(java.io.PrintWriter)>($r196);

     label02:
        $r20 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r21 = $r20.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token preambleAction>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printAction(groovyjarjarantlr.Token)>($r21);

        $r22 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r23 = $r22.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        if $r23 == null goto label03;

        $r195 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        r198 = $r195.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        goto label05;

     label03:
        $r24 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r25 = virtualinvoke $r24.<groovyjarjarantlr.Grammar: java.lang.String getSuperClass()>();

        r199 = $r25;

        $i0 = virtualinvoke $r25.<java.lang.String: int lastIndexOf(int)>(46);

        $i41 = (int) -1;

        if $i0 == $i41 goto label04;

        $i37 = virtualinvoke $r25.<java.lang.String: int lastIndexOf(int)>(46);

        $i38 = $i37 + 1;

        r199 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int)>($i38);

     label04:
        $r206 = new java.lang.StringBuffer;

        specialinvoke $r206.<java.lang.StringBuffer: void <init>()>();

        $r27 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r28 = virtualinvoke $r206.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r199);

        r198 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

     label05:
        $z17 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z17 == 0 goto label06;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#if 0");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

     label06:
        $r207 = new java.lang.StringBuffer;

        specialinvoke $r207.<java.lang.StringBuffer: void <init>()>();

        $r31 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r32 = virtualinvoke $r31.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r33 = virtualinvoke $r207.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r35 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r36 = virtualinvoke $r35.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r37 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r39 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceStd>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("istream& in)");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r42);

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        $r43 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r43.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z1 == 0 goto label07;

        $r208 = new java.lang.StringBuffer;

        specialinvoke $r208.<java.lang.StringBuffer: void <init>()>();

        $r183 = virtualinvoke $r208.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r184 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r198);

        $r185 = virtualinvoke $r184.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(new ");

        $r186 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r187 = virtualinvoke $r185.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r186);

        $r188 = virtualinvoke $r187.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DebuggingInputBuffer(new ");

        $r189 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r190 = virtualinvoke $r188.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r189);

        $r191 = virtualinvoke $r190.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CharBuffer(in)),");

        $z16 = r51.<groovyjarjarantlr.LexerGrammar: boolean caseSensitive>;

        $r192 = virtualinvoke $r191.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z16);

        $r193 = virtualinvoke $r192.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r194 = virtualinvoke $r193.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r194);

        goto label08;

     label07:
        $r209 = new java.lang.StringBuffer;

        specialinvoke $r209.<java.lang.StringBuffer: void <init>()>();

        $r45 = virtualinvoke $r209.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r198);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(new ");

        $r48 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CharBuffer(in),");

        $z2 = r51.<groovyjarjarantlr.LexerGrammar: boolean caseSensitive>;

        $r52 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z2);

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r54);

     label08:
        $i3 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i4 = $i3 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i4;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i5 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i6 = $i5 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i6;

        $r55 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r55.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z3 == 0 goto label09;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("setRuleNames(_ruleNames);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("setSemPredNames(_semPredNames);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("setupDebugging();");

     label09:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("initLiterals();");

        $i7 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i8 = $i7 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i8;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r210 = new java.lang.StringBuffer;

        specialinvoke $r210.<java.lang.StringBuffer: void <init>()>();

        $r57 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r58 = virtualinvoke $r57.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r59 = virtualinvoke $r210.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r61 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r62 = virtualinvoke $r61.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r63 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r65 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r66 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("InputBuffer& ib)");

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r68);

        $i9 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i10 = $i9 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i10;

        $r69 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r69.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z4 == 0 goto label10;

        $r211 = new java.lang.StringBuffer;

        specialinvoke $r211.<java.lang.StringBuffer: void <init>()>();

        $r173 = virtualinvoke $r211.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r174 = virtualinvoke $r173.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r198);

        $r175 = virtualinvoke $r174.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(new ");

        $r176 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r177 = virtualinvoke $r175.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r176);

        $r178 = virtualinvoke $r177.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DebuggingInputBuffer(ib),");

        $z15 = r51.<groovyjarjarantlr.LexerGrammar: boolean caseSensitive>;

        $r179 = virtualinvoke $r178.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z15);

        $r180 = virtualinvoke $r179.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r181 = virtualinvoke $r180.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r181);

        goto label11;

     label10:
        $r212 = new java.lang.StringBuffer;

        specialinvoke $r212.<java.lang.StringBuffer: void <init>()>();

        $r71 = virtualinvoke $r212.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r198);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(ib,");

        $z5 = r51.<groovyjarjarantlr.LexerGrammar: boolean caseSensitive>;

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z5);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r76);

     label11:
        $i11 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i12 = $i11 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i12;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i13 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i14 = $i13 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i14;

        $r77 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z6 = $r77.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z6 == 0 goto label12;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("setRuleNames(_ruleNames);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("setSemPredNames(_semPredNames);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("setupDebugging();");

     label12:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("initLiterals();");

        $i15 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i16 = $i15 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i16;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r213 = new java.lang.StringBuffer;

        specialinvoke $r213.<java.lang.StringBuffer: void <init>()>();

        $r79 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r80 = virtualinvoke $r79.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r81 = virtualinvoke $r213.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r83 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r84 = virtualinvoke $r83.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r85 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(const ");

        $r87 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r88 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LexerSharedInputState& state)");

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r90);

        $i17 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i18 = $i17 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i18;

        $r214 = new java.lang.StringBuffer;

        specialinvoke $r214.<java.lang.StringBuffer: void <init>()>();

        $r92 = virtualinvoke $r214.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r198);

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(state,");

        $z7 = r51.<groovyjarjarantlr.LexerGrammar: boolean caseSensitive>;

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z7);

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r97);

        $i19 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i20 = $i19 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i20;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i21 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i22 = $i21 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i22;

        $r98 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z8 = $r98.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z8 == 0 goto label13;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("setRuleNames(_ruleNames);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("setSemPredNames(_semPredNames);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("setupDebugging();");

     label13:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("initLiterals();");

        $i23 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i24 = $i23 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i24;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $z9 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z9 == 0 goto label14;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#endif");

     label14:
        $r215 = new java.lang.StringBuffer;

        specialinvoke $r215.<java.lang.StringBuffer: void <init>()>();

        $r100 = virtualinvoke $r215.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void ");

        $r101 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r102 = virtualinvoke $r101.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r103 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r102);

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::initLiterals()");

        $r105 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r105);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i25 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i26 = $i25 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i26;

        $r106 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r107 = $r106.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r108 = interfaceinvoke $r107.<groovyjarjarantlr.TokenManager: java.util.Enumeration getTokenSymbolKeys()>();

     label15:
        $z18 = interfaceinvoke $r108.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z18 == 0 goto label17;

        $r160 = interfaceinvoke $r108.<java.util.Enumeration: java.lang.Object nextElement()>();

        r200 = (java.lang.String) $r160;

        $c35 = virtualinvoke r200.<java.lang.String: char charAt(int)>(0);

        $i42 = (int) $c35;

        if $i42 == 34 goto label16;

        goto label15;

     label16:
        $r161 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r162 = $r161.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r163 = interfaceinvoke $r162.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.TokenSymbol getTokenSymbol(java.lang.String)>(r200);

        $z14 = $r163 instanceof groovyjarjarantlr.StringLiteralSymbol;

        if $z14 == 0 goto label15;

        r201 = (groovyjarjarantlr.StringLiteralSymbol) $r163;

        $r216 = new java.lang.StringBuffer;

        specialinvoke $r216.<java.lang.StringBuffer: void <init>()>();

        $r165 = virtualinvoke $r216.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("literals[");

        $r166 = virtualinvoke r201.<groovyjarjarantlr.StringLiteralSymbol: java.lang.String getId()>();

        $r167 = virtualinvoke $r165.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r166);

        $r168 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] = ");

        $i36 = virtualinvoke r201.<groovyjarjarantlr.StringLiteralSymbol: int getTokenType()>();

        $r169 = virtualinvoke $r168.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i36);

        $r170 = virtualinvoke $r169.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r171 = virtualinvoke $r170.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r171);

        goto label15;

     label17:
        $i27 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i28 = $i27 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i28;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r109 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z10 = $r109.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z10 == 0 goto label20;

        $r217 = new java.lang.StringBuffer;

        specialinvoke $r217.<java.lang.StringBuffer: void <init>()>();

        $r143 = virtualinvoke $r217.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("const char* ");

        $r144 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r145 = virtualinvoke $r144.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r146 = virtualinvoke $r143.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r145);

        $r147 = virtualinvoke $r146.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::_ruleNames[] = {");

        $r148 = virtualinvoke $r147.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r148);

        $i31 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i32 = $i31 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i32;

        $r149 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r150 = $r149.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $r151 = virtualinvoke $r150.<groovyjarjarantlr.collections.impl.Vector: java.util.Enumeration elements()>();

     label18:
        $z19 = interfaceinvoke $r151.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z19 == 0 goto label19;

        $r152 = interfaceinvoke $r151.<java.util.Enumeration: java.lang.Object nextElement()>();

        r202 = (groovyjarjarantlr.GrammarSymbol) $r152;

        $z13 = r202 instanceof groovyjarjarantlr.RuleSymbol;

        if $z13 == 0 goto label18;

        $r218 = new java.lang.StringBuffer;

        specialinvoke $r218.<java.lang.StringBuffer: void <init>()>();

        $r154 = virtualinvoke $r218.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r155 = (groovyjarjarantlr.RuleSymbol) r202;

        $r156 = virtualinvoke $r155.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r157 = virtualinvoke $r154.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r156);

        $r158 = virtualinvoke $r157.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\",");

        $r159 = virtualinvoke $r158.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r159);

        goto label18;

     label19:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("0");

        $i33 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i34 = $i33 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i34;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

     label20:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genNextToken()>();

        $r110 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r111 = $r110.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $r112 = virtualinvoke $r111.<groovyjarjarantlr.collections.impl.Vector: java.util.Enumeration elements()>();

        i39 = 0;

     label21:
        $z20 = interfaceinvoke $r112.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z20 == 0 goto label23;

        $r134 = interfaceinvoke $r112.<java.util.Enumeration: java.lang.Object nextElement()>();

        r203 = (groovyjarjarantlr.RuleSymbol) $r134;

        $r135 = virtualinvoke r203.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $z12 = virtualinvoke $r135.<java.lang.String: boolean equals(java.lang.Object)>("mnextToken");

        if $z12 != 0 goto label22;

        $i30 = i39;

        i39 = i39 + 1;

        $r219 = new java.lang.StringBuffer;

        specialinvoke $r219.<java.lang.StringBuffer: void <init>()>();

        $r137 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r138 = virtualinvoke $r137.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r139 = virtualinvoke $r219.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r138);

        $r140 = virtualinvoke $r139.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r141 = virtualinvoke $r140.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genRule(groovyjarjarantlr.RuleSymbol,boolean,int,java.lang.String)>(r203, 0, $i30, $r141);

     label22:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void exitIfError()>();

        goto label21;

     label23:
        $r113 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z11 = $r113.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z11 == 0 goto label24;

        $r220 = new java.lang.StringBuffer;

        specialinvoke $r220.<java.lang.StringBuffer: void <init>()>();

        $r129 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r130 = virtualinvoke $r129.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r131 = virtualinvoke $r220.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r130);

        $r132 = virtualinvoke $r131.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r133 = virtualinvoke $r132.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genSemPredMap(java.lang.String)>($r133);

     label24:
        $r117 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector bitsetsUsed>;

        $r114 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r115 = (groovyjarjarantlr.LexerGrammar) $r114;

        $r116 = $r115.<groovyjarjarantlr.LexerGrammar: groovyjarjarantlr.collections.impl.BitSet charVocabulary>;

        $i29 = virtualinvoke $r116.<groovyjarjarantlr.collections.impl.BitSet: int size()>();

        $r221 = new java.lang.StringBuffer;

        specialinvoke $r221.<java.lang.StringBuffer: void <init>()>();

        $r119 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r120 = virtualinvoke $r119.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r121 = virtualinvoke $r221.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r120);

        $r122 = virtualinvoke $r121.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r123 = virtualinvoke $r122.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBitsets(groovyjarjarantlr.collections.impl.Vector,int,java.lang.String)>($r117, $i29, $r123);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r124 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r124 == null goto label25;

        $r127 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r126 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r127.<groovyjarjarantlr.NameSpace: void emitClosures(java.io.PrintWriter)>($r126);

     label25:
        $r125 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r125.<java.io.PrintWriter: void close()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = null;

        return;
    }

    public void genInitFactory(groovyjarjarantlr.Grammar)
    {
        java.util.Enumeration $r15;
        groovyjarjarantlr.TokenManager r14, $r20;
        groovyjarjarantlr.collections.impl.Vector $r16, $r24, $r38, $r39, $r61;
        groovyjarjarantlr.Tool $r44, $r52;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r17, $r18, $r21, $r22, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r43, $r45, $r46, $r47, $r51, $r53, $r54, $r55, $r57;
        java.lang.String $r4, $r7, $r12, $r23, $r34, $r37, r41, $r42, $r48, $r50, $r56, $r58, $r60, $r62, r63, r64, r65;
        groovyjarjarantlr.Grammar r0, $r13, $r19, $r49, $r59;
        boolean $z0, $z1, $z2, $z3;
        groovyjarjarantlr.TokenSymbol $r36;
        groovyjarjarantlr.CppCodeGenerator r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Object $r25, $r35, $r40;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.Grammar;

        r63 = "factory ";

        $z0 = r0.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z0 != 0 goto label1;

        r63 = "";

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void ");

        $r4 = virtualinvoke r0.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::initializeASTFactory( ");

        $r7 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ASTFactory& ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r63);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r12);

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i0 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i1 = $i0 + 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i1;

        $z1 = r0.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z1 == 0 goto label8;

        $r13 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        r14 = $r13.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r15 = interfaceinvoke r14.<groovyjarjarantlr.TokenManager: java.util.Enumeration getTokenSymbolKeys()>();

     label2:
        $z3 = interfaceinvoke $r15.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z3 == 0 goto label4;

        $r35 = interfaceinvoke $r15.<java.util.Enumeration: java.lang.Object nextElement()>();

        r64 = (java.lang.String) $r35;

        $r36 = interfaceinvoke r14.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.TokenSymbol getTokenSymbol(java.lang.String)>(r64);

        $r37 = virtualinvoke $r36.<groovyjarjarantlr.TokenSymbol: java.lang.String getASTNodeType()>();

        if $r37 == null goto label2;

        $r38 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes>;

        $i6 = virtualinvoke $r36.<groovyjarjarantlr.TokenSymbol: int getTokenType()>();

        virtualinvoke $r38.<groovyjarjarantlr.collections.impl.Vector: void ensureCapacity(int)>($i6);

        $r39 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes>;

        $i7 = virtualinvoke $r36.<groovyjarjarantlr.TokenSymbol: int getTokenType()>();

        $r40 = virtualinvoke $r39.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>($i7);

        r41 = (java.lang.String) $r40;

        if r41 != null goto label3;

        $r61 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes>;

        $r62 = virtualinvoke $r36.<groovyjarjarantlr.TokenSymbol: java.lang.String getASTNodeType()>();

        $i8 = virtualinvoke $r36.<groovyjarjarantlr.TokenSymbol: int getTokenType()>();

        virtualinvoke $r61.<groovyjarjarantlr.collections.impl.Vector: void setElementAt(java.lang.Object,int)>($r62, $i8);

        goto label2;

     label3:
        $r42 = virtualinvoke $r36.<groovyjarjarantlr.TokenSymbol: java.lang.String getASTNodeType()>();

        $z2 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r41);

        if $z2 != 0 goto label2;

        $r44 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r64);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" taking most specific AST type");

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        $r49 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r50 = virtualinvoke $r49.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        virtualinvoke $r44.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>($r48, $r50, 1, 1);

        $r52 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r51 = new java.lang.StringBuffer;

        specialinvoke $r51.<java.lang.StringBuffer: void <init>()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  using ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r41);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ignoring ");

        $r56 = virtualinvoke $r36.<groovyjarjarantlr.TokenSymbol: java.lang.String getASTNodeType()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        $r59 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r60 = virtualinvoke $r59.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        virtualinvoke $r52.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>($r58, $r60, 1, 1);

        goto label2;

     label4:
        i9 = 0;

     label5:
        $r16 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes>;

        $i4 = virtualinvoke $r16.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i9 >= $i4 goto label7;

        $r24 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes>;

        $r25 = virtualinvoke $r24.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i9);

        r65 = (java.lang.String) $r25;

        if r65 == null goto label6;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("factory.registerFactory(");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i9);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", \"");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r65);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r65);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::factory);");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r34);

     label6:
        i9 = i9 + 1;

        goto label5;

     label7:
        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("factory.setMaxNodeType(");

        $r19 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r20 = $r19.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $i5 = interfaceinvoke $r20.<groovyjarjarantlr.TokenManager: int maxTokenType()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r23);

     label8:
        $i2 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i3 = $i2 - 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i3;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        return;
    }

    public void genBody(groovyjarjarantlr.ParserGrammar) throws java.io.IOException
    {
        java.util.Enumeration $r142, $r188;
        java.lang.StringBuffer $r4, $r5, $r13, $r16, $r17, $r28, $r29, $r33, $r34, $r37, $r40, $r42, $r43, $r46, $r47, $r48, $r53, $r54, $r57, $r60, $r62, $r63, $r66, $r67, $r68, $r70, $r71, $r76, $r77, $r80, $r83, $r85, $r86, $r89, $r90, $r91, $r96, $r97, $r100, $r103, $r105, $r106, $r109, $r110, $r111, $r113, $r114, $r119, $r120, $r123, $r126, $r128, $r129, $r132, $r133, $r134, $r136, $r137, $r147, $r148, $r156, $r157, $r167, $r168, $r176, $r177, $r180, $r183, $r184, $r191, $r194, $r195, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r221, $r222, $r223, $r224, $r226, $r227, $r228, $r229;
        groovyjarjarantlr.Grammar $r2, $r10, $r14, $r20, $r22, $r24, $r31, $r35, $r51, $r55, $r69, $r74, $r78, $r94, $r98, $r112, $r117, $r121, $r135, $r140, $r145, $r150, $r154, $r159, $r165, $r174, $r181, $r186, $r197, $r202;
        groovyjarjarantlr.Token $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i15;
        groovyjarjarantlr.NameSpace $r19, $r160, $r163, $r199;
        groovyjarjarantlr.ParserGrammar r143;
        java.lang.Object $r170, $r189;
        groovyjarjarantlr.TokenManager $r151;
        groovyjarjarantlr.collections.impl.Vector $r141, $r152, $r172, $r187, $r225;
        java.io.PrintWriter $r9, $r161, $r162, $r198;
        groovyjarjarantlr.GrammarSymbol r203, r204;
        groovyjarjarantlr.Tool $r8;
        java.lang.String $r3, $r6, $r7, $r11, $r15, $r18, $r23, $r25, $r27, $r32, $r36, $r38, $r41, $r44, $r49, $r52, $r56, $r58, $r61, $r64, $r72, $r75, $r79, $r81, $r84, $r87, $r92, $r95, $r99, $r101, $r104, $r107, $r115, $r118, $r122, $r124, $r127, $r130, $r138, $r146, $r149, $r155, $r158, $r166, $r169, $r175, $r178, $r182, $r185, $r193, $r196, r200, r201;
        groovyjarjarantlr.RuleSymbol r171, $r192;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r143 := @parameter0: groovyjarjarantlr.ParserGrammar;

        $r205 = new java.lang.StringBuffer;

        specialinvoke $r205.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r3 = virtualinvoke $r2.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r205.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".cpp");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile> = $r6;

        r0.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = 1;

        $r8 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>($r7);

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = $r9;

        $r10 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r10.<groovyjarjarantlr.Grammar: boolean buildAST>;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = $z0;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        $r11 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genHeader(java.lang.String)>($r11);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("pre_include_cpp");

        $r206 = new java.lang.StringBuffer;

        specialinvoke $r206.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r206.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#include \"");

        $r14 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r15 = virtualinvoke $r14.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r18);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/NoViableAltException.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/SemanticException.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/ASTFactory.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("post_include_cpp");

        $r19 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r19 == null goto label01;

        $r199 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r198 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r199.<groovyjarjarantlr.NameSpace: void emitDeclarations(java.io.PrintWriter)>($r198);

     label01:
        $r20 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r21 = $r20.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token preambleAction>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printAction(groovyjarjarantlr.Token)>($r21);

        $r22 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r23 = $r22.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        if $r23 == null goto label02;

        $r197 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        r200 = $r197.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        goto label04;

     label02:
        $r24 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r25 = virtualinvoke $r24.<groovyjarjarantlr.Grammar: java.lang.String getSuperClass()>();

        r201 = $r25;

        $i0 = virtualinvoke $r25.<java.lang.String: int lastIndexOf(int)>(46);

        $i15 = (int) -1;

        if $i0 == $i15 goto label03;

        $i11 = virtualinvoke $r25.<java.lang.String: int lastIndexOf(int)>(46);

        $i12 = $i11 + 1;

        r201 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int)>($i12);

     label03:
        $r207 = new java.lang.StringBuffer;

        specialinvoke $r207.<java.lang.StringBuffer: void <init>()>();

        $r27 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r28 = virtualinvoke $r207.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r201);

        r200 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

     label04:
        $r202 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z6 = $r202.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z6 == 0 goto label07;

        $r208 = new java.lang.StringBuffer;

        specialinvoke $r208.<java.lang.StringBuffer: void <init>()>();

        $r180 = virtualinvoke $r208.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("const char* ");

        $r181 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r182 = virtualinvoke $r181.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r183 = virtualinvoke $r180.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r182);

        $r184 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::_ruleNames[] = {");

        $r185 = virtualinvoke $r184.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r185);

        $i7 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i8 = $i7 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i8;

        $r186 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r187 = $r186.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $r188 = virtualinvoke $r187.<groovyjarjarantlr.collections.impl.Vector: java.util.Enumeration elements()>();

     label05:
        $z7 = interfaceinvoke $r188.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z7 == 0 goto label06;

        $r189 = interfaceinvoke $r188.<java.util.Enumeration: java.lang.Object nextElement()>();

        r203 = (groovyjarjarantlr.GrammarSymbol) $r189;

        $z5 = r203 instanceof groovyjarjarantlr.RuleSymbol;

        if $z5 == 0 goto label05;

        $r209 = new java.lang.StringBuffer;

        specialinvoke $r209.<java.lang.StringBuffer: void <init>()>();

        $r191 = virtualinvoke $r209.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r192 = (groovyjarjarantlr.RuleSymbol) r203;

        $r193 = virtualinvoke $r192.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r194 = virtualinvoke $r191.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r193);

        $r195 = virtualinvoke $r194.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\",");

        $r196 = virtualinvoke $r195.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r196);

        goto label05;

     label06:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("0");

        $i9 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i10 = $i9 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i10;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

     label07:
        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z1 == 0 goto label08;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#if 0");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

     label08:
        $r210 = new java.lang.StringBuffer;

        specialinvoke $r210.<java.lang.StringBuffer: void <init>()>();

        $r31 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r32 = virtualinvoke $r31.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r33 = virtualinvoke $r210.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r35 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r36 = virtualinvoke $r35.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r37 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r38);

        $r211 = new java.lang.StringBuffer;

        specialinvoke $r211.<java.lang.StringBuffer: void <init>()>();

        $r40 = virtualinvoke $r211.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r41 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r42 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenBuffer& tokenBuf, int k)");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r44);

        $r212 = new java.lang.StringBuffer;

        specialinvoke $r212.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r212.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r200);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(tokenBuf,k)");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r49);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r213 = new java.lang.StringBuffer;

        specialinvoke $r213.<java.lang.StringBuffer: void <init>()>();

        $r51 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r52 = virtualinvoke $r51.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r53 = virtualinvoke $r213.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r55 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r56 = virtualinvoke $r55.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r57 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r58);

        $r214 = new java.lang.StringBuffer;

        specialinvoke $r214.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r214.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r61 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenBuffer& tokenBuf)");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r64);

        $r215 = new java.lang.StringBuffer;

        specialinvoke $r215.<java.lang.StringBuffer: void <init>()>();

        $r66 = virtualinvoke $r215.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r200);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(tokenBuf,");

        $r69 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $i1 = $r69.<groovyjarjarantlr.Grammar: int maxk>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r72);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r216 = new java.lang.StringBuffer;

        specialinvoke $r216.<java.lang.StringBuffer: void <init>()>();

        $r74 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r75 = virtualinvoke $r74.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r76 = virtualinvoke $r216.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r78 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r79 = virtualinvoke $r78.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r80 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r81);

        $r217 = new java.lang.StringBuffer;

        specialinvoke $r217.<java.lang.StringBuffer: void <init>()>();

        $r83 = virtualinvoke $r217.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r84 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r85 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenStream& lexer, int k)");

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r87);

        $r218 = new java.lang.StringBuffer;

        specialinvoke $r218.<java.lang.StringBuffer: void <init>()>();

        $r89 = virtualinvoke $r218.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r200);

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(lexer,k)");

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r92);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r219 = new java.lang.StringBuffer;

        specialinvoke $r219.<java.lang.StringBuffer: void <init>()>();

        $r94 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r95 = virtualinvoke $r94.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r96 = virtualinvoke $r219.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r95);

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r98 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r99 = virtualinvoke $r98.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r100 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r101);

        $r220 = new java.lang.StringBuffer;

        specialinvoke $r220.<java.lang.StringBuffer: void <init>()>();

        $r103 = virtualinvoke $r220.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r104 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r105 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r104);

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenStream& lexer)");

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r107);

        $r221 = new java.lang.StringBuffer;

        specialinvoke $r221.<java.lang.StringBuffer: void <init>()>();

        $r109 = virtualinvoke $r221.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r200);

        $r111 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(lexer,");

        $r112 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $i2 = $r112.<groovyjarjarantlr.Grammar: int maxk>;

        $r113 = virtualinvoke $r111.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r114 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r115 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r115);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r222 = new java.lang.StringBuffer;

        specialinvoke $r222.<java.lang.StringBuffer: void <init>()>();

        $r117 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r118 = virtualinvoke $r117.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r119 = virtualinvoke $r222.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r118);

        $r120 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r121 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r122 = virtualinvoke $r121.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r123 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r122);

        $r124 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r124);

        $r223 = new java.lang.StringBuffer;

        specialinvoke $r223.<java.lang.StringBuffer: void <init>()>();

        $r126 = virtualinvoke $r223.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(const ");

        $r127 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r128 = virtualinvoke $r126.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r127);

        $r129 = virtualinvoke $r128.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ParserSharedInputState& state)");

        $r130 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r130);

        $r224 = new java.lang.StringBuffer;

        specialinvoke $r224.<java.lang.StringBuffer: void <init>()>();

        $r132 = virtualinvoke $r224.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r133 = virtualinvoke $r132.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r200);

        $r134 = virtualinvoke $r133.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(state,");

        $r135 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $i3 = $r135.<groovyjarjarantlr.Grammar: int maxk>;

        $r136 = virtualinvoke $r134.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r137 = virtualinvoke $r136.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r138 = virtualinvoke $r137.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r138);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z2 == 0 goto label09;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#endif");

     label09:
        $r225 = new groovyjarjarantlr.collections.impl.Vector;

        specialinvoke $r225.<groovyjarjarantlr.collections.impl.Vector: void <init>()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes> = $r225;

        $r140 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r141 = $r140.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $r142 = virtualinvoke $r141.<groovyjarjarantlr.collections.impl.Vector: java.util.Enumeration elements()>();

        i13 = 0;

     label10:
        $z8 = interfaceinvoke $r142.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z8 == 0 goto label14;

        $r170 = interfaceinvoke $r142.<java.util.Enumeration: java.lang.Object nextElement()>();

        r204 = (groovyjarjarantlr.GrammarSymbol) $r170;

        $z4 = r204 instanceof groovyjarjarantlr.RuleSymbol;

        if $z4 == 0 goto label13;

        r171 = (groovyjarjarantlr.RuleSymbol) r204;

        $r172 = r171.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.collections.impl.Vector references>;

        $i5 = virtualinvoke $r172.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if $i5 != 0 goto label11;

        $z9 = 1;

        goto label12;

     label11:
        $z9 = 0;

     label12:
        $i6 = i13;

        i13 = i13 + 1;

        $r226 = new java.lang.StringBuffer;

        specialinvoke $r226.<java.lang.StringBuffer: void <init>()>();

        $r174 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r175 = virtualinvoke $r174.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r176 = virtualinvoke $r226.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r175);

        $r177 = virtualinvoke $r176.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r178 = virtualinvoke $r177.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genRule(groovyjarjarantlr.RuleSymbol,boolean,int,java.lang.String)>(r171, $z9, $i6, $r178);

     label13:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void exitIfError()>();

        goto label10;

     label14:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genInitFactory(groovyjarjarantlr.Grammar)>(r143);

        $r227 = new java.lang.StringBuffer;

        specialinvoke $r227.<java.lang.StringBuffer: void <init>()>();

        $r145 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r146 = virtualinvoke $r145.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r147 = virtualinvoke $r227.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r146);

        $r148 = virtualinvoke $r147.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r149 = virtualinvoke $r148.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genTokenStrings(java.lang.String)>($r149);

        $r152 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector bitsetsUsed>;

        $r150 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r151 = $r150.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $i4 = interfaceinvoke $r151.<groovyjarjarantlr.TokenManager: int maxTokenType()>();

        $r228 = new java.lang.StringBuffer;

        specialinvoke $r228.<java.lang.StringBuffer: void <init>()>();

        $r154 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r155 = virtualinvoke $r154.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r156 = virtualinvoke $r228.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r155);

        $r157 = virtualinvoke $r156.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r158 = virtualinvoke $r157.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBitsets(groovyjarjarantlr.collections.impl.Vector,int,java.lang.String)>($r152, $i4, $r158);

        $r159 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r159.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z3 == 0 goto label15;

        $r229 = new java.lang.StringBuffer;

        specialinvoke $r229.<java.lang.StringBuffer: void <init>()>();

        $r165 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r166 = virtualinvoke $r165.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r167 = virtualinvoke $r229.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r166);

        $r168 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r169 = virtualinvoke $r168.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genSemPredMap(java.lang.String)>($r169);

     label15:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r160 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r160 == null goto label16;

        $r163 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r162 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r163.<groovyjarjarantlr.NameSpace: void emitClosures(java.io.PrintWriter)>($r162);

     label16:
        $r161 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r161.<java.io.PrintWriter: void close()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = null;

        return;
    }

    public void genBody(groovyjarjarantlr.TreeWalkerGrammar) throws java.io.IOException
    {
        java.util.Enumeration $r49;
        groovyjarjarantlr.TokenManager $r58;
        groovyjarjarantlr.collections.impl.Vector $r48, $r59, $r73, $r91;
        java.io.PrintWriter $r9, $r67, $r68, $r81;
        groovyjarjarantlr.GrammarSymbol r71;
        groovyjarjarantlr.Tool $r8;
        java.lang.StringBuffer $r4, $r5, $r13, $r16, $r17, $r28, $r29, $r33, $r34, $r37, $r38, $r41, $r43, $r44, $r54, $r55, $r63, $r64, $r77, $r78, $r86, $r87, $r88, $r89, $r90, $r92, $r93, $r94;
        java.lang.String $r3, $r6, $r7, $r11, $r15, $r18, $r23, $r25, $r27, $r32, $r36, $r39, $r42, $r45, $r53, $r56, $r62, $r65, $r76, $r79, r84, r85;
        groovyjarjarantlr.RuleSymbol r72;
        groovyjarjarantlr.Grammar $r2, $r10, $r14, $r20, $r22, $r24, $r31, $r35, $r47, $r50, $r52, $r57, $r61, $r75, $r80;
        groovyjarjarantlr.Token $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        groovyjarjarantlr.CppCodeGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i12;
        groovyjarjarantlr.NameSpace $r19, $r66, $r69, $r82;
        java.lang.Object $r70;
        groovyjarjarantlr.TreeWalkerGrammar r83;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r83 := @parameter0: groovyjarjarantlr.TreeWalkerGrammar;

        $r86 = new java.lang.StringBuffer;

        specialinvoke $r86.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r3 = virtualinvoke $r2.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".cpp");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile> = $r6;

        r0.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = 1;

        $r8 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>($r7);

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = $r9;

        $r10 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r10.<groovyjarjarantlr.Grammar: boolean buildAST>;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = $z0;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        $r11 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genHeader(java.lang.String)>($r11);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("pre_include_cpp");

        $r87 = new java.lang.StringBuffer;

        specialinvoke $r87.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#include \"");

        $r14 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r15 = virtualinvoke $r14.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r18);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/Token.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/AST.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/NoViableAltException.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/MismatchedTokenException.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/SemanticException.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/BitSet.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("post_include_cpp");

        $r19 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r19 == null goto label01;

        $r82 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r81 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r82.<groovyjarjarantlr.NameSpace: void emitDeclarations(java.io.PrintWriter)>($r81);

     label01:
        $r20 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r21 = $r20.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token preambleAction>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printAction(groovyjarjarantlr.Token)>($r21);

        $r22 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r23 = $r22.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        if $r23 == null goto label02;

        $r80 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        r84 = $r80.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        goto label04;

     label02:
        $r24 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r25 = virtualinvoke $r24.<groovyjarjarantlr.Grammar: java.lang.String getSuperClass()>();

        r85 = $r25;

        $i0 = virtualinvoke $r25.<java.lang.String: int lastIndexOf(int)>(46);

        $i12 = (int) -1;

        if $i0 == $i12 goto label03;

        $i8 = virtualinvoke $r25.<java.lang.String: int lastIndexOf(int)>(46);

        $i9 = $i8 + 1;

        r85 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int)>($i9);

     label03:
        $r88 = new java.lang.StringBuffer;

        specialinvoke $r88.<java.lang.StringBuffer: void <init>()>();

        $r27 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r28 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r85);

        virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

     label04:
        $z3 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z3 == 0 goto label05;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#if 0");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

     label05:
        $r89 = new java.lang.StringBuffer;

        specialinvoke $r89.<java.lang.StringBuffer: void <init>()>();

        $r31 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r32 = virtualinvoke $r31.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r33 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r35 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r36 = virtualinvoke $r35.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r37 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r39);

        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t: ");

        $r42 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TreeParser() {");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r45);

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        $i3 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i4 = $i3 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i4;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z1 == 0 goto label06;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#endif");

     label06:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r91 = new groovyjarjarantlr.collections.impl.Vector;

        specialinvoke $r91.<groovyjarjarantlr.collections.impl.Vector: void <init>()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes> = $r91;

        $r47 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r48 = $r47.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $r49 = virtualinvoke $r48.<groovyjarjarantlr.collections.impl.Vector: java.util.Enumeration elements()>();

        i10 = 0;

     label07:
        $z4 = interfaceinvoke $r49.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z4 == 0 goto label11;

        $r70 = interfaceinvoke $r49.<java.util.Enumeration: java.lang.Object nextElement()>();

        r71 = (groovyjarjarantlr.GrammarSymbol) $r70;

        $z2 = r71 instanceof groovyjarjarantlr.RuleSymbol;

        if $z2 == 0 goto label10;

        r72 = (groovyjarjarantlr.RuleSymbol) r71;

        $r73 = r72.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.collections.impl.Vector references>;

        $i6 = virtualinvoke $r73.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if $i6 != 0 goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        $i7 = i10;

        i10 = i10 + 1;

        $r92 = new java.lang.StringBuffer;

        specialinvoke $r92.<java.lang.StringBuffer: void <init>()>();

        $r75 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r76 = virtualinvoke $r75.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r77 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genRule(groovyjarjarantlr.RuleSymbol,boolean,int,java.lang.String)>(r72, $z5, $i7, $r79);

     label10:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void exitIfError()>();

        goto label07;

     label11:
        $r50 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genInitFactory(groovyjarjarantlr.Grammar)>($r50);

        $r93 = new java.lang.StringBuffer;

        specialinvoke $r93.<java.lang.StringBuffer: void <init>()>();

        $r52 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r53 = virtualinvoke $r52.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r54 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genTokenStrings(java.lang.String)>($r56);

        $r59 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector bitsetsUsed>;

        $r57 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r58 = $r57.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $i5 = interfaceinvoke $r58.<groovyjarjarantlr.TokenManager: int maxTokenType()>();

        $r94 = new java.lang.StringBuffer;

        specialinvoke $r94.<java.lang.StringBuffer: void <init>()>();

        $r61 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r62 = virtualinvoke $r61.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r63 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBitsets(groovyjarjarantlr.collections.impl.Vector,int,java.lang.String)>($r59, $i5, $r65);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r66 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r66 == null goto label12;

        $r69 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r68 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r69.<groovyjarjarantlr.NameSpace: void emitClosures(java.io.PrintWriter)>($r68);

     label12:
        $r67 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r67.<java.io.PrintWriter: void close()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = null;

        return;
    }

    protected void genCases(groovyjarjarantlr.collections.impl.BitSet)
    {
        int[] $r14;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r8, $r9, $r11, $r12;
        int $i0, i1, i2, $i3;
        java.lang.String $r7, $r10, $r13;
        boolean $z0, $z1, z2;
        java.io.PrintStream $r2;
        groovyjarjarantlr.collections.impl.BitSet r4;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.collections.impl.BitSet;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label1;

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z1 == 0 goto label2;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genCases(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label2:
        $r14 = virtualinvoke r4.<groovyjarjarantlr.collections.impl.BitSet: int[] toArray()>();

        i1 = 1;

        z2 = 1;

        i2 = 0;

     label3:
        $i3 = lengthof $r14;

        if i2 >= $i3 goto label8;

        if i1 != 1 goto label4;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>("");

        goto label5;

     label4:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>("  ");

     label5:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("case ");

        $i0 = $r14[i2];

        $r10 = specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getValueString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r13);

        if i1 != 1 goto label6;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("");

        z2 = 1;

        i1 = 1;

        goto label7;

     label6:
        i1 = i1 + 1;

        z2 = 0;

     label7:
        i2 = i2 + 1;

        goto label3;

     label8:
        if z2 != 0 goto label9;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("");

     label9:
        return;
    }

    public groovyjarjarantlr.CppBlockFinishingInfo genCommonBlock(groovyjarjarantlr.AlternativeBlock, boolean)
    {
        java.lang.StringBuffer $r4, $r6, $r7, $r12, $r13, $r16, $r17, $r20, $r21, $r26, $r27, $r38, $r39, $r40, $r43, $r45, $r46, $r51, $r52, $r53, $r62, $r63, $r64, $r65, $r66, $r69, $r70, $r71, $r74, $r75, $r76, $r77, $r82, $r83, $r84, $r88, $r89, $r90, $r93, $r95, $r96, $r100, $r101, $r102, $r103, $r113, $r114, $r115, $r127, $r129, $r130, $r151, $r152, $r153, $r156, $r157, $r159, $r160, $r165, $r166, $r169, $r170, $r181, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r194, $r195, $r196, $r197, $r198, $r199, $r200;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, $i40, i41, i42, $i43, i44, $i45, $i46, i47, i48, $i49, i50, $i51, $i52, $i53, $i54, i55, $i57, $i59;
        java.io.PrintStream $r3, $r19, $r25, $r99, $r108;
        groovyjarjarantlr.collections.impl.Vector $r9, $r173, $r174, $r176;
        groovyjarjarantlr.Tool $r122, $r138;
        java.lang.String $r8, $r14, $r22, $r28, $r41, $r44, $r47, $r54, $r58, $r59, $r73, $r79, $r85, $r91, $r94, $r97, $r104, $r110, $r116, $r123, $r128, $r131, $r135, $r136, $r139, $r148, $r150, $r155, $r158, $r161, r162, $r168, $r171, r177, $r178, r179;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z23, $z24, $z25, $z26, $z27, $z28, $z29, z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, z40, $z41, $z42, z43, z44;
        groovyjarjarantlr.CppCodeGenerator r1;
        groovyjarjarantlr.AlternativeBlock r5;
        groovyjarjarantlr.LLkGrammarAnalyzer $r145, $r146;
        groovyjarjarantlr.SynPredBlock $r35, $r48, $r49, $r55, $r80, $r134, $r141, $r143;
        groovyjarjarantlr.Grammar $r10, $r29, $r30, $r31, $r36, $r60, $r67, $r78, $r86, $r107, $r109, $r111, $r121, $r137, $r144, $r163, $r172;
        groovyjarjarantlr.CharFormatter $r72;
        groovyjarjarantlr.AlternativeElement $r124, $r125;
        groovyjarjarantlr.Lookahead $r33, $r106, $r147, r175;
        groovyjarjarantlr.Lookahead[] $r32, $r105, $r118;
        groovyjarjarantlr.RuleBlock $r57;
        groovyjarjarantlr.ActionTransInfo $r193;
        groovyjarjarantlr.collections.impl.BitSet $r34, $r119, $r120, $r167;
        groovyjarjarantlr.Alternative $r23, $r117, $r132, $r133, $r140, $r142;
        groovyjarjarantlr.CppBlockFinishingInfo $r180;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r5 := @parameter0: groovyjarjarantlr.AlternativeBlock;

        z23 := @parameter1: boolean;

        i38 = 0;

        z30 = 0;

        z44 = 0;

        z43 = 0;

        i39 = 0;

        $r180 = new groovyjarjarantlr.CppBlockFinishingInfo;

        specialinvoke $r180.<groovyjarjarantlr.CppBlockFinishingInfo: void <init>()>();

        $z0 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label01;

        $z29 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z29 == 0 goto label02;

     label01:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r181 = new java.lang.StringBuffer;

        specialinvoke $r181.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r181.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genCommonBlk(");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label02:
        $z31 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        $z32 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        if $z32 == 0 goto label03;

        $z28 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: boolean getAutoGen()>();

        if $z28 == 0 goto label03;

        $z33 = 1;

        goto label04;

     label03:
        $z33 = 0;

     label04:
        r1.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = $z33;

        $z34 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        $z35 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z35 == 0 goto label05;

        $z27 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: boolean getAutoGen()>();

        if $z27 == 0 goto label05;

        $z36 = 1;

        goto label06;

     label05:
        $z36 = 0;

     label06:
        r1.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = $z36;

        $z37 = r5.<groovyjarjarantlr.AlternativeBlock: boolean not>;

        if $z37 == 0 goto label11;

        $r145 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.LLkGrammarAnalyzer analyzer>;

        $r144 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z24 = $r144 instanceof groovyjarjarantlr.LexerGrammar;

        $z25 = interfaceinvoke $r145.<groovyjarjarantlr.LLkGrammarAnalyzer: boolean subruleCanBeInverted(groovyjarjarantlr.AlternativeBlock,boolean)>(r5, $z24);

        if $z25 == 0 goto label11;

        $r146 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.LLkGrammarAnalyzer analyzer>;

        $r147 = interfaceinvoke $r146.<groovyjarjarantlr.LLkGrammarAnalyzer: groovyjarjarantlr.Lookahead look(int,groovyjarjarantlr.AlternativeBlock)>(1, r5);

        $r148 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: java.lang.String getLabel()>();

        if $r148 == null goto label07;

        $i37 = r1.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        if $i37 != 0 goto label07;

        $r182 = new java.lang.StringBuffer;

        specialinvoke $r182.<java.lang.StringBuffer: void <init>()>();

        $r155 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: java.lang.String getLabel()>();

        $r156 = virtualinvoke $r182.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r155);

        $r157 = virtualinvoke $r156.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r158 = r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $r159 = virtualinvoke $r157.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r158);

        $r160 = virtualinvoke $r159.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r161 = virtualinvoke $r160.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r161);

     label07:
        specialinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genElementAST(groovyjarjarantlr.AlternativeElement)>(r5);

        r162 = "";

        $r163 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z38 = $r163 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z38 == 0 goto label09;

        $z26 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z26 == 0 goto label08;

        $r183 = new java.lang.StringBuffer;

        specialinvoke $r183.<java.lang.StringBuffer: void <init>()>();

        $r150 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r151 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r150);

        $r152 = virtualinvoke $r151.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST");

        $r153 = virtualinvoke $r152.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(_t),");

        r162 = virtualinvoke $r153.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label09;

     label08:
        r162 = "_t,";

     label09:
        $r184 = new java.lang.StringBuffer;

        specialinvoke $r184.<java.lang.StringBuffer: void <init>()>();

        $r165 = virtualinvoke $r184.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("match(");

        $r166 = virtualinvoke $r165.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r162);

        $r167 = $r147.<groovyjarjarantlr.Lookahead: groovyjarjarantlr.collections.impl.BitSet fset>;

        $i40 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: int markBitsetForGen(groovyjarjarantlr.collections.impl.BitSet)>($r167);

        $r168 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getBitsetName(int)>($i40);

        $r169 = virtualinvoke $r166.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r168);

        $r170 = virtualinvoke $r169.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r171 = virtualinvoke $r170.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r171);

        $r172 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z39 = $r172 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z39 == 0 goto label10;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = _t->getNextSibling();");

     label10:
        return $r180;

     label11:
        $r9 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: groovyjarjarantlr.collections.impl.Vector getAlternatives()>();

        $i0 = virtualinvoke $r9.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if $i0 != 1 goto label14;

        $r133 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: groovyjarjarantlr.Alternative getAlternativeAt(int)>(0);

        $r134 = $r133.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        if $r134 == null goto label12;

        $r138 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r137 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r139 = virtualinvoke $r137.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $r140 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: groovyjarjarantlr.Alternative getAlternativeAt(int)>(0);

        $r141 = $r140.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        $i35 = virtualinvoke $r141.<groovyjarjarantlr.SynPredBlock: int getLine()>();

        $r142 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: groovyjarjarantlr.Alternative getAlternativeAt(int)>(0);

        $r143 = $r142.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        $i36 = virtualinvoke $r143.<groovyjarjarantlr.SynPredBlock: int getColumn()>();

        virtualinvoke $r138.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>("Syntactic predicate superfluous for single alternative", $r139, $i35, $i36);

     label12:
        if z23 == 0 goto label14;

        $r135 = $r133.<groovyjarjarantlr.Alternative: java.lang.String semPred>;

        if $r135 == null goto label13;

        $r136 = $r133.<groovyjarjarantlr.Alternative: java.lang.String semPred>;

        $i34 = r5.<groovyjarjarantlr.AlternativeBlock: int line>;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genSemPred(java.lang.String,int)>($r136, $i34);

     label13:
        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genAlt(groovyjarjarantlr.Alternative,groovyjarjarantlr.AlternativeBlock)>($r133, r5);

        return $r180;

     label14:
        i41 = 0;

        i42 = 0;

     label15:
        $r173 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: groovyjarjarantlr.collections.impl.Vector getAlternatives()>();

        $i43 = virtualinvoke $r173.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i42 >= $i43 goto label17;

        $r132 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: groovyjarjarantlr.Alternative getAlternativeAt(int)>(i42);

        $z22 = staticinvoke <groovyjarjarantlr.CppCodeGenerator: boolean suitableForCaseExpression(groovyjarjarantlr.Alternative)>($r132);

        if $z22 == 0 goto label16;

        i41 = i41 + 1;

     label16:
        i42 = i42 + 1;

        goto label15;

     label17:
        $i1 = r1.<groovyjarjarantlr.CppCodeGenerator: int makeSwitchThreshold>;

        if i41 < $i1 goto label24;

        $r110 = specialinvoke r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lookaheadString(int)>(1);

        z30 = 1;

        z44 = 1;

        z43 = 1;

        $r111 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z19 = $r111 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z19 == 0 goto label18;

        $r185 = new java.lang.StringBuffer;

        specialinvoke $r185.<java.lang.StringBuffer: void <init>()>();

        $r127 = virtualinvoke $r185.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if (_t == ");

        $r128 = r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r129 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r128);

        $r130 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r131 = virtualinvoke $r130.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r131);

        $i30 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i31 = $i30 + 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i31;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = ASTNULL;");

        $i32 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i33 = $i32 - 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i33;

     label18:
        $r186 = new java.lang.StringBuffer;

        specialinvoke $r186.<java.lang.StringBuffer: void <init>()>();

        $r113 = virtualinvoke $r186.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("switch ( ");

        $r114 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r110);

        $r115 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") {");

        $r116 = virtualinvoke $r115.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r116);

        i44 = 0;

     label19:
        $r174 = r5.<groovyjarjarantlr.AlternativeBlock: groovyjarjarantlr.collections.impl.Vector alternatives>;

        $i45 = virtualinvoke $r174.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i44 >= $i45 goto label23;

        $r117 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: groovyjarjarantlr.Alternative getAlternativeAt(int)>(i44);

        $z20 = staticinvoke <groovyjarjarantlr.CppCodeGenerator: boolean suitableForCaseExpression(groovyjarjarantlr.Alternative)>($r117);

        if $z20 != 0 goto label20;

        goto label22;

     label20:
        $r118 = $r117.<groovyjarjarantlr.Alternative: groovyjarjarantlr.Lookahead[] cache>;

        r175 = $r118[1];

        $r119 = r175.<groovyjarjarantlr.Lookahead: groovyjarjarantlr.collections.impl.BitSet fset>;

        $i23 = virtualinvoke $r119.<groovyjarjarantlr.collections.impl.BitSet: int degree()>();

        if $i23 != 0 goto label21;

        $z21 = virtualinvoke r175.<groovyjarjarantlr.Lookahead: boolean containsEpsilon()>();

        if $z21 != 0 goto label21;

        $r122 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r121 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r123 = virtualinvoke $r121.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $r124 = $r117.<groovyjarjarantlr.Alternative: groovyjarjarantlr.AlternativeElement head>;

        $i28 = virtualinvoke $r124.<groovyjarjarantlr.AlternativeElement: int getLine()>();

        $r125 = $r117.<groovyjarjarantlr.Alternative: groovyjarjarantlr.AlternativeElement head>;

        $i29 = virtualinvoke $r125.<groovyjarjarantlr.AlternativeElement: int getColumn()>();

        virtualinvoke $r122.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>("Alternate omitted due to empty prediction set", $r123, $i28, $i29);

        goto label22;

     label21:
        $r120 = r175.<groovyjarjarantlr.Lookahead: groovyjarjarantlr.collections.impl.BitSet fset>;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genCases(groovyjarjarantlr.collections.impl.BitSet)>($r120);

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i24 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i25 = $i24 + 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i25;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genAlt(groovyjarjarantlr.Alternative,groovyjarjarantlr.AlternativeBlock)>($r117, r5);

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("break;");

        $i26 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i27 = $i26 - 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i27;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

     label22:
        i44 = i44 + 1;

        goto label19;

     label23:
        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("default:");

        $i21 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i22 = $i21 + 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i22;

     label24:
        $r10 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r10 instanceof groovyjarjarantlr.LexerGrammar;

        if $z1 == 0 goto label25;

        $r109 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $i46 = $r109.<groovyjarjarantlr.Grammar: int maxk>;

        goto label26;

     label25:
        $i46 = 0;

     label26:
        i47 = $i46;

     label27:
        if i47 < 0 goto label57;

        $z2 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z2 != 0 goto label28;

        $z18 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z18 == 0 goto label29;

     label28:
        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r187 = new java.lang.StringBuffer;

        specialinvoke $r187.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r187.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("checking depth ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i47);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

     label29:
        i48 = 0;

     label30:
        $r176 = r5.<groovyjarjarantlr.AlternativeBlock: groovyjarjarantlr.collections.impl.Vector alternatives>;

        $i49 = virtualinvoke $r176.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i48 >= $i49 goto label56;

        $r23 = virtualinvoke r5.<groovyjarjarantlr.AlternativeBlock: groovyjarjarantlr.Alternative getAlternativeAt(int)>(i48);

        $z3 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z3 != 0 goto label31;

        $z17 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z17 == 0 goto label32;

     label31:
        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r188 = new java.lang.StringBuffer;

        specialinvoke $r188.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r188.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genAlt: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i48);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label32:
        if z43 == 0 goto label34;

        $z14 = staticinvoke <groovyjarjarantlr.CppCodeGenerator: boolean suitableForCaseExpression(groovyjarjarantlr.Alternative)>($r23);

        if $z14 == 0 goto label34;

        $z15 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z15 != 0 goto label33;

        $z16 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z16 == 0 goto label55;

     label33:
        $r108 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r108.<java.io.PrintStream: void println(java.lang.String)>("ignoring alt because it was in the switch");

        goto label55;

     label34:
        $r29 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r29 instanceof groovyjarjarantlr.LexerGrammar;

        if $z4 == 0 goto label39;

        i50 = $r23.<groovyjarjarantlr.Alternative: int lookaheadDepth>;

        if i50 != 2147483647 goto label35;

        $r107 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        i50 = $r107.<groovyjarjarantlr.Grammar: int maxk>;

     label35:
        if i50 < 1 goto label36;

        $r105 = $r23.<groovyjarjarantlr.Alternative: groovyjarjarantlr.Lookahead[] cache>;

        $r106 = $r105[i50];

        $z13 = virtualinvoke $r106.<groovyjarjarantlr.Lookahead: boolean containsEpsilon()>();

        if $z13 == 0 goto label36;

        $i57 = (int) -1;

        i50 = i50 + $i57;

        goto label35;

     label36:
        if i50 == i47 goto label38;

        $z11 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z11 != 0 goto label37;

        $z12 = r1.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z12 == 0 goto label55;

     label37:
        $r99 = <java.lang.System: java.io.PrintStream out>;

        $r189 = new java.lang.StringBuffer;

        specialinvoke $r189.<java.lang.StringBuffer: void <init>()>();

        $r100 = virtualinvoke $r189.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ignoring alt because effectiveDepth!=altDepth;");

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i50);

        $r102 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("!=");

        $r103 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i47);

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r99.<java.io.PrintStream: void println(java.lang.String)>($r104);

        goto label55;

     label38:
        z40 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: boolean lookaheadIsEmpty(groovyjarjarantlr.Alternative,int)>($r23, i50);

        r177 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getLookaheadTestExpression(groovyjarjarantlr.Alternative,int)>($r23, i50);

        goto label40;

     label39:
        $r30 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $i6 = $r30.<groovyjarjarantlr.Grammar: int maxk>;

        z40 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: boolean lookaheadIsEmpty(groovyjarjarantlr.Alternative,int)>($r23, $i6);

        $r31 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $i7 = $r31.<groovyjarjarantlr.Grammar: int maxk>;

        r177 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getLookaheadTestExpression(groovyjarjarantlr.Alternative,int)>($r23, $i7);

     label40:
        $r32 = $r23.<groovyjarjarantlr.Alternative: groovyjarjarantlr.Lookahead[] cache>;

        $r33 = $r32[1];

        $r34 = $r33.<groovyjarjarantlr.Lookahead: groovyjarjarantlr.collections.impl.BitSet fset>;

        $i8 = virtualinvoke $r34.<groovyjarjarantlr.collections.impl.BitSet: int degree()>();

        if $i8 <= 127 goto label43;

        $z9 = staticinvoke <groovyjarjarantlr.CppCodeGenerator: boolean suitableForCaseExpression(groovyjarjarantlr.Alternative)>($r23);

        if $z9 == 0 goto label43;

        if i38 != 0 goto label42;

        $r86 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z10 = $r86 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z10 == 0 goto label41;

        $r190 = new java.lang.StringBuffer;

        specialinvoke $r190.<java.lang.StringBuffer: void <init>()>();

        $r93 = virtualinvoke $r190.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if (_t == ");

        $r94 = r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r95 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r94);

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r97);

        $i17 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i18 = $i17 + 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i18;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = ASTNULL;");

        $i19 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i20 = $i19 - 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i20;

     label41:
        $r191 = new java.lang.StringBuffer;

        specialinvoke $r191.<java.lang.StringBuffer: void <init>()>();

        $r88 = virtualinvoke $r191.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ");

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r177);

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {");

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r91);

        goto label54;

     label42:
        $r192 = new java.lang.StringBuffer;

        specialinvoke $r192.<java.lang.StringBuffer: void <init>()>();

        $r82 = virtualinvoke $r192.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("else if ");

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r177);

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {");

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r85);

        goto label54;

     label43:
        if z40 == 0 goto label46;

        $r79 = $r23.<groovyjarjarantlr.Alternative: java.lang.String semPred>;

        if $r79 != null goto label46;

        $r80 = $r23.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        if $r80 != null goto label46;

        if i38 != 0 goto label44;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        goto label45;

     label44:
        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("else {");

     label45:
        $r180.<groovyjarjarantlr.CppBlockFinishingInfo: boolean needAnErrorClause> = 0;

        goto label54;

     label46:
        $r178 = $r23.<groovyjarjarantlr.Alternative: java.lang.String semPred>;

        if $r178 == null goto label49;

        $r193 = new groovyjarjarantlr.ActionTransInfo;

        specialinvoke $r193.<groovyjarjarantlr.ActionTransInfo: void <init>()>();

        $r58 = $r23.<groovyjarjarantlr.Alternative: java.lang.String semPred>;

        $i15 = r5.<groovyjarjarantlr.AlternativeBlock: int line>;

        $r57 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r59 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>($r58, $i15, $r57, $r193);

        $r60 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z6 = $r60.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z6 == 0 goto label48;

        $r67 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z7 = $r67 instanceof groovyjarjarantlr.ParserGrammar;

        if $z7 != 0 goto label47;

        $r78 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z8 = $r78 instanceof groovyjarjarantlr.LexerGrammar;

        if $z8 == 0 goto label48;

     label47:
        $r194 = new java.lang.StringBuffer;

        specialinvoke $r194.<java.lang.StringBuffer: void <init>()>();

        $r69 = virtualinvoke $r194.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r177);

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&& fireSemanticPredicateEvaluated(antlr.debug.SemanticPredicateEvent.PREDICTING,");

        $r72 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter>;

        $r73 = interfaceinvoke $r72.<groovyjarjarantlr.CharFormatter: java.lang.String escapeString(java.lang.String)>($r59);

        $i16 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: int addSemPred(java.lang.String)>($r73);

        $r74 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i16);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r59);

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("))");

        r177 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label49;

     label48:
        $r195 = new java.lang.StringBuffer;

        specialinvoke $r195.<java.lang.StringBuffer: void <init>()>();

        $r62 = virtualinvoke $r195.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r177);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&&(");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r59);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("))");

        r177 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

     label49:
        if i38 <= 0 goto label51;

        $r49 = $r23.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        if $r49 == null goto label50;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("else {");

        $i13 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i14 = $i13 + 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i14;

        $r55 = $r23.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genSynPred(groovyjarjarantlr.SynPredBlock,java.lang.String)>($r55, r177);

        i39 = i39 + 1;

        goto label54;

     label50:
        $r196 = new java.lang.StringBuffer;

        specialinvoke $r196.<java.lang.StringBuffer: void <init>()>();

        $r51 = virtualinvoke $r196.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("else if ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r177);

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {");

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r54);

        goto label54;

     label51:
        $r35 = $r23.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        if $r35 == null goto label52;

        $r48 = $r23.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genSynPred(groovyjarjarantlr.SynPredBlock,java.lang.String)>($r48, r177);

        goto label54;

     label52:
        $r36 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z5 = $r36 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z5 == 0 goto label53;

        $r197 = new java.lang.StringBuffer;

        specialinvoke $r197.<java.lang.StringBuffer: void <init>()>();

        $r43 = virtualinvoke $r197.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if (_t == ");

        $r44 = r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r47);

        $i9 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i10 = $i9 + 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i10;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = ASTNULL;");

        $i11 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i12 = $i11 - 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i12;

     label53:
        $r198 = new java.lang.StringBuffer;

        specialinvoke $r198.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r198.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r177);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r41);

     label54:
        i38 = i38 + 1;

        $i51 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i52 = $i51 + 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i52;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genAlt(groovyjarjarantlr.Alternative,groovyjarjarantlr.AlternativeBlock)>($r23, r5);

        $i53 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i54 = $i53 - 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i54;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

     label55:
        i48 = i48 + 1;

        goto label30;

     label56:
        $i59 = (int) -1;

        i47 = i47 + $i59;

        goto label27;

     label57:
        r179 = "";

        i55 = 1;

     label58:
        if i55 > i39 goto label59;

        $i4 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i5 = $i4 - 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i5;

        $r199 = new java.lang.StringBuffer;

        specialinvoke $r199.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r199.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r179);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        r179 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        i55 = i55 + 1;

        goto label58;

     label59:
        r1.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = $z31;

        r1.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = $z34;

        if z44 == 0 goto label62;

        $i2 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i3 = $i2 - 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i3;

        $r200 = new java.lang.StringBuffer;

        specialinvoke $r200.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r200.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r179);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r180.<groovyjarjarantlr.CppBlockFinishingInfo: java.lang.String postscript> = $r14;

        $r180.<groovyjarjarantlr.CppBlockFinishingInfo: boolean generatedSwitch> = 1;

        if i38 <= 0 goto label60;

        $z41 = 1;

        goto label61;

     label60:
        $z41 = 0;

     label61:
        $r180.<groovyjarjarantlr.CppBlockFinishingInfo: boolean generatedAnIf> = $z41;

        goto label65;

     label62:
        $r180.<groovyjarjarantlr.CppBlockFinishingInfo: java.lang.String postscript> = r179;

        $r180.<groovyjarjarantlr.CppBlockFinishingInfo: boolean generatedSwitch> = 0;

        if i38 <= 0 goto label63;

        $z42 = 1;

        goto label64;

     label63:
        $z42 = 0;

     label64:
        $r180.<groovyjarjarantlr.CppBlockFinishingInfo: boolean generatedAnIf> = $z42;

     label65:
        return $r180;
    }

    private static boolean suitableForCaseExpression(groovyjarjarantlr.Alternative)
    {
        groovyjarjarantlr.Lookahead[] $r2, $r4;
        groovyjarjarantlr.collections.impl.BitSet $r6;
        groovyjarjarantlr.Alternative r0;
        groovyjarjarantlr.Lookahead $r3, $r5;
        int $i0, $i1;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @parameter0: groovyjarjarantlr.Alternative;

        $i0 = r0.<groovyjarjarantlr.Alternative: int lookaheadDepth>;

        if $i0 != 1 goto label1;

        $r1 = r0.<groovyjarjarantlr.Alternative: java.lang.String semPred>;

        if $r1 != null goto label1;

        $r2 = r0.<groovyjarjarantlr.Alternative: groovyjarjarantlr.Lookahead[] cache>;

        $r3 = $r2[1];

        $z0 = virtualinvoke $r3.<groovyjarjarantlr.Lookahead: boolean containsEpsilon()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<groovyjarjarantlr.Alternative: groovyjarjarantlr.Lookahead[] cache>;

        $r5 = $r4[1];

        $r6 = $r5.<groovyjarjarantlr.Lookahead: groovyjarjarantlr.collections.impl.BitSet fset>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.collections.impl.BitSet: int degree()>();

        if $i1 > 127 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void genElementAST(groovyjarjarantlr.AlternativeElement)
    {
        java.lang.StringBuffer $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r23, $r24, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r38, $r39, $r40, $r42, $r43, $r46, $r47, $r48, $r49, $r50, $r52, $r53, $r54, $r57, $r58, $r60, $r61, $r62, $r64, $r65, $r67, $r68, $r69, $r72, $r73, $r75, $r77, $r78, $r79, $r80, $r82, $r83, $r88, $r89, $r91, $r96, $r97, $r98, $r99, $r101, $r103, $r104, $r105, $r106, $r107, $r108, $r116, $r117, $r118;
        groovyjarjarantlr.GrammarAtom $r21, $r36, $r55, $r70, r115;
        groovyjarjarantlr.Grammar $r1, $r2, $r45, $r94, $r111, $r120;
        groovyjarjarantlr.AlternativeElement r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r7, $r10, $r15, $r20, $r22, $r25, $r30, $r35, $r37, $r41, $r44, $r51, $r56, $r59, $r63, $r66, $r71, $r74, $r76, $r81, $r84, $r85, $r86, $r87, $r90, $r92, $r93, $r95, $r100, $r102, $r109, r110, $r112, r113, r114, $r119, $r121, r122;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15, $z16, z17, $z18, $z19;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r3 := @parameter0: groovyjarjarantlr.AlternativeElement;

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r1 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z0 == 0 goto label02;

        $r94 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z12 = $r94.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z12 != 0 goto label02;

        $r95 = virtualinvoke r3.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        if $r95 != null goto label01;

        r110 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $r96 = new java.lang.StringBuffer;

        specialinvoke $r96.<java.lang.StringBuffer: void <init>()>();

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("tmp");

        $i10 = r0.<groovyjarjarantlr.CppCodeGenerator: int astVarNumber>;

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i10);

        $r99 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST");

        $r100 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.String toString()>();

        $i11 = r0.<groovyjarjarantlr.CppCodeGenerator: int astVarNumber>;

        $i12 = $i11 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int astVarNumber> = $i12;

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void mapTreeVariable(groovyjarjarantlr.AlternativeElement,java.lang.String)>(r3, $r100);

        $r101 = new java.lang.StringBuffer;

        specialinvoke $r101.<java.lang.StringBuffer: void <init>()>();

        $r102 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r103 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r102);

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r105 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r100);

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_in = ");

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r110);

        $r108 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r109 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r109);

     label01:
        return;

     label02:
        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r2.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z1 == 0 goto label28;

        $i0 = r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        if $i0 != 0 goto label28;

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        if $z2 == 0 goto label04;

        $r93 = virtualinvoke r3.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        if $r93 != null goto label03;

        $i9 = virtualinvoke r3.<groovyjarjarantlr.AlternativeElement: int getAutoGenType()>();

        if $i9 == 3 goto label04;

     label03:
        $z13 = 1;

        goto label05;

     label04:
        $z13 = 0;

     label05:
        z14 = $z13;

        $i13 = virtualinvoke r3.<groovyjarjarantlr.AlternativeElement: int getAutoGenType()>();

        if $i13 == 3 goto label06;

        $z11 = r3 instanceof groovyjarjarantlr.TokenRefElement;

        if $z11 == 0 goto label06;

        z14 = 1;

     label06:
        $r111 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z15 = $r111.<groovyjarjarantlr.Grammar: boolean hasSyntacticPredicate>;

        if $z15 == 0 goto label07;

        if z14 == 0 goto label07;

        $z16 = 1;

        goto label08;

     label07:
        $z16 = 0;

     label08:
        z17 = $z16;

        $r112 = virtualinvoke r3.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        if $r112 == null goto label09;

        r113 = virtualinvoke r3.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        r114 = virtualinvoke r3.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        goto label10;

     label09:
        r113 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("tmp");

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int astVarNumber>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        r114 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $i2 = r0.<groovyjarjarantlr.CppCodeGenerator: int astVarNumber>;

        $i3 = $i2 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int astVarNumber> = $i3;

     label10:
        if z14 == 0 goto label13;

        $z10 = r3 instanceof groovyjarjarantlr.GrammarAtom;

        if $z10 == 0 goto label12;

        r115 = (groovyjarjarantlr.GrammarAtom) r3;

        $r86 = virtualinvoke r115.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        if $r86 == null goto label11;

        $r88 = new java.lang.StringBuffer;

        specialinvoke $r88.<java.lang.StringBuffer: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ref");

        $r90 = virtualinvoke r115.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        $r91 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genASTDeclaration(groovyjarjarantlr.AlternativeElement,java.lang.String,java.lang.String)>(r3, r114, $r92);

        goto label13;

     label11:
        $r87 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genASTDeclaration(groovyjarjarantlr.AlternativeElement,java.lang.String,java.lang.String)>(r3, r114, $r87);

        goto label13;

     label12:
        $r85 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genASTDeclaration(groovyjarjarantlr.AlternativeElement,java.lang.String,java.lang.String)>(r3, r114, $r85);

     label13:
        $r116 = new java.lang.StringBuffer;

        specialinvoke $r116.<java.lang.StringBuffer: void <init>()>();

        $r117 = virtualinvoke $r116.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r114);

        $r118 = virtualinvoke $r117.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST");

        $r119 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void mapTreeVariable(groovyjarjarantlr.AlternativeElement,java.lang.String)>(r3, $r119);

        $r120 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z18 = $r120 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z18 == 0 goto label14;

        $r75 = new java.lang.StringBuffer;

        specialinvoke $r75.<java.lang.StringBuffer: void <init>()>();

        $r76 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r77 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_in = ");

        $r81 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r82 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r84);

     label14:
        if z17 == 0 goto label15;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("if ( inputState->guessing == 0 ) {");

        $i7 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i8 = $i7 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i8;

     label15:
        $r7 = virtualinvoke r3.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        if $r7 == null goto label17;

        $z9 = r3 instanceof groovyjarjarantlr.GrammarAtom;

        if $z9 == 0 goto label16;

        $r67 = new java.lang.StringBuffer;

        specialinvoke $r67.<java.lang.StringBuffer: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r70 = (groovyjarjarantlr.GrammarAtom) r3;

        $r71 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getASTCreateString(groovyjarjarantlr.GrammarAtom,java.lang.String)>($r70, r113);

        $r72 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r74);

        goto label17;

     label16:
        $r60 = new java.lang.StringBuffer;

        specialinvoke $r60.<java.lang.StringBuffer: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r63 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getASTCreateString(java.lang.String)>(r113);

        $r64 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r66);

     label17:
        $r121 = virtualinvoke r3.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        if $r121 != null goto label20;

        if z14 == 0 goto label20;

        r122 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value>;

        $z7 = r3 instanceof groovyjarjarantlr.GrammarAtom;

        if $z7 == 0 goto label18;

        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r55 = (groovyjarjarantlr.GrammarAtom) r3;

        $r56 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getASTCreateString(groovyjarjarantlr.GrammarAtom,java.lang.String)>($r55, r122);

        $r57 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r59);

        goto label19;

     label18:
        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r41 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getASTCreateString(java.lang.String)>(r122);

        $r42 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r44);

     label19:
        $r45 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z8 = $r45 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z8 == 0 goto label20;

        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_in = ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r122);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r51);

     label20:
        $z19 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        if $z19 == 0 goto label27;

        $i6 = virtualinvoke r3.<groovyjarjarantlr.AlternativeElement: int getAutoGenType()>();

        lookupswitch($i6)
        {
            case 1: goto label21;
            case 2: goto label24;
            default: goto label27;
        };

     label21:
        $z5 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z5 != 0 goto label22;

        $z6 = r3 instanceof groovyjarjarantlr.GrammarAtom;

        if $z6 == 0 goto label23;

        $r36 = (groovyjarjarantlr.GrammarAtom) r3;

        $r37 = virtualinvoke $r36.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        if $r37 == null goto label23;

     label22:
        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("astFactory->addASTChild(currentAST, ");

        $r25 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST(");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("));");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r30);

        goto label27;

     label23:
        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("astFactory->addASTChild(currentAST, ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r35);

        goto label27;

     label24:
        $z3 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z3 != 0 goto label25;

        $z4 = r3 instanceof groovyjarjarantlr.GrammarAtom;

        if $z4 == 0 goto label26;

        $r21 = (groovyjarjarantlr.GrammarAtom) r3;

        $r22 = virtualinvoke $r21.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        if $r22 == null goto label26;

     label25:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("astFactory->makeASTRoot(currentAST, ");

        $r10 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST(");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("));");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r15);

        goto label27;

     label26:
        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("astFactory->makeASTRoot(currentAST, ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r20);

        goto label27;

     label27:
        if z17 == 0 goto label28;

        $i4 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i5 = $i4 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i5;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

     label28:
        return;
    }

    private void genErrorCatchForElement(groovyjarjarantlr.AlternativeElement)
    {
        groovyjarjarantlr.ExceptionSpec $r8;
        groovyjarjarantlr.Grammar $r3, $r4;
        groovyjarjarantlr.Tool $r9;
        int $i0, $i1;
        java.lang.String $r1, $r7, $r10, r12;
        boolean $z0;
        groovyjarjarantlr.RuleBlock $r6;
        groovyjarjarantlr.RuleSymbol $r11;
        groovyjarjarantlr.CppCodeGenerator r2;
        groovyjarjarantlr.GrammarSymbol $r5;
        groovyjarjarantlr.AlternativeElement r0;

        r2 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.AlternativeElement;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        if $r1 != null goto label1;

        return;

     label1:
        r12 = r0.<groovyjarjarantlr.AlternativeElement: java.lang.String enclosingRuleName>;

        $r3 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r3 instanceof groovyjarjarantlr.LexerGrammar;

        if $z0 == 0 goto label2;

        $r10 = r0.<groovyjarjarantlr.AlternativeElement: java.lang.String enclosingRuleName>;

        r12 = staticinvoke <groovyjarjarantlr.CodeGenerator: java.lang.String encodeLexerRuleName(java.lang.String)>($r10);

     label2:
        $r4 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.Grammar: groovyjarjarantlr.GrammarSymbol getSymbol(java.lang.String)>(r12);

        $r11 = (groovyjarjarantlr.RuleSymbol) $r5;

        if $r11 != null goto label3;

        $r9 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r9.<groovyjarjarantlr.Tool: void panic(java.lang.String)>("Enclosing rule not found!");

     label3:
        $r6 = $r11.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.RuleBlock block>;

        $r7 = virtualinvoke r0.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        $r8 = virtualinvoke $r6.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.ExceptionSpec findExceptionSpec(java.lang.String)>($r7);

        if $r8 == null goto label4;

        $i0 = r2.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i1 = $i0 - 1;

        r2.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i1;

        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        specialinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void genErrorHandler(groovyjarjarantlr.ExceptionSpec)>($r8);

     label4:
        return;
    }

    private void genErrorHandler(groovyjarjarantlr.ExceptionSpec)
    {
        groovyjarjarantlr.ExceptionHandler r4;
        groovyjarjarantlr.Grammar $r13, $r21;
        groovyjarjarantlr.collections.impl.Vector $r1, $r2;
        groovyjarjarantlr.Token $r8, $r15, $r16, $r18;
        boolean $z0, $z1;
        groovyjarjarantlr.RuleBlock $r19;
        groovyjarjarantlr.CppCodeGenerator r5;
        groovyjarjarantlr.ExceptionSpec r0;
        java.lang.StringBuffer $r6, $r7, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        java.lang.String $r9, $r12, $r17, $r20;
        groovyjarjarantlr.ActionTransInfo $r14;
        java.lang.Object $r3;

        r5 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.ExceptionSpec;

        i14 = 0;

     label1:
        $r1 = r0.<groovyjarjarantlr.ExceptionSpec: groovyjarjarantlr.collections.impl.Vector handlers>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i14 >= $i0 goto label4;

        $r2 = r0.<groovyjarjarantlr.ExceptionSpec: groovyjarjarantlr.collections.impl.Vector handlers>;

        $r3 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i14);

        r4 = (groovyjarjarantlr.ExceptionHandler) $r3;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("catch (");

        $r8 = r4.<groovyjarjarantlr.ExceptionHandler: groovyjarjarantlr.Token exceptionTypeAndName>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") {");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r5.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r12);

        $i1 = r5.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 + 1;

        r5.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        $r13 = r5.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r13.<groovyjarjarantlr.Grammar: boolean hasSyntacticPredicate>;

        if $z0 == 0 goto label2;

        virtualinvoke r5.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("if (inputState->guessing==0) {");

        $i12 = r5.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i13 = $i12 + 1;

        r5.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i13;

     label2:
        $r14 = new groovyjarjarantlr.ActionTransInfo;

        specialinvoke $r14.<groovyjarjarantlr.ActionTransInfo: void <init>()>();

        $r15 = r4.<groovyjarjarantlr.ExceptionHandler: groovyjarjarantlr.Token action>;

        virtualinvoke r5.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(groovyjarjarantlr.Token)>($r15);

        $r16 = r4.<groovyjarjarantlr.ExceptionHandler: groovyjarjarantlr.Token action>;

        $r17 = virtualinvoke $r16.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r18 = r4.<groovyjarjarantlr.ExceptionHandler: groovyjarjarantlr.Token action>;

        $i3 = virtualinvoke $r18.<groovyjarjarantlr.Token: int getLine()>();

        $r19 = r5.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r20 = virtualinvoke r5.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>($r17, $i3, $r19, $r14);

        virtualinvoke r5.<groovyjarjarantlr.CppCodeGenerator: void printAction(java.lang.String)>($r20);

        virtualinvoke r5.<groovyjarjarantlr.CppCodeGenerator: void genLineNo2()>();

        $r21 = r5.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r21.<groovyjarjarantlr.Grammar: boolean hasSyntacticPredicate>;

        if $z1 == 0 goto label3;

        $i6 = r5.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i7 = $i6 - 1;

        r5.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i7;

        virtualinvoke r5.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("} else {");

        $i8 = r5.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i9 = $i8 + 1;

        r5.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i9;

        virtualinvoke r5.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("throw;");

        $i10 = r5.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i11 = $i10 - 1;

        r5.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i11;

        virtualinvoke r5.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

     label3:
        $i4 = r5.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i5 = $i4 - 1;

        r5.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i5;

        virtualinvoke r5.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        i14 = i14 + 1;

        goto label1;

     label4:
        return;
    }

    private void genErrorTryForElement(groovyjarjarantlr.AlternativeElement)
    {
        groovyjarjarantlr.ExceptionSpec $r8;
        groovyjarjarantlr.Grammar $r3, $r4;
        groovyjarjarantlr.Tool $r9;
        int $i0, $i1;
        java.lang.String $r1, $r7, $r10, r12;
        boolean $z0;
        groovyjarjarantlr.RuleBlock $r6;
        groovyjarjarantlr.RuleSymbol $r11;
        groovyjarjarantlr.CppCodeGenerator r2;
        groovyjarjarantlr.GrammarSymbol $r5;
        groovyjarjarantlr.AlternativeElement r0;

        r2 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.AlternativeElement;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        if $r1 != null goto label1;

        return;

     label1:
        r12 = r0.<groovyjarjarantlr.AlternativeElement: java.lang.String enclosingRuleName>;

        $r3 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r3 instanceof groovyjarjarantlr.LexerGrammar;

        if $z0 == 0 goto label2;

        $r10 = r0.<groovyjarjarantlr.AlternativeElement: java.lang.String enclosingRuleName>;

        r12 = staticinvoke <groovyjarjarantlr.CodeGenerator: java.lang.String encodeLexerRuleName(java.lang.String)>($r10);

     label2:
        $r4 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.Grammar: groovyjarjarantlr.GrammarSymbol getSymbol(java.lang.String)>(r12);

        $r11 = (groovyjarjarantlr.RuleSymbol) $r5;

        if $r11 != null goto label3;

        $r9 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r9.<groovyjarjarantlr.Tool: void panic(java.lang.String)>("Enclosing rule not found!");

     label3:
        $r6 = $r11.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.RuleBlock block>;

        $r7 = virtualinvoke r0.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        $r8 = virtualinvoke $r6.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.ExceptionSpec findExceptionSpec(java.lang.String)>($r7);

        if $r8 == null goto label4;

        virtualinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("try { // for error handling");

        $i0 = r2.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i1 = $i0 + 1;

        r2.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i1;

     label4:
        return;
    }

    protected void genHeader(java.lang.String)
    {
        groovyjarjarantlr.Tool $r7, $r9;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r6, $r11, $r12, $r13, $r14, $r16, $r17;
        java.lang.String $r3, $r8, $r10, r15, $r18;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r15 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/* $ANTLR ");

        $r3 = <groovyjarjarantlr.Tool: java.lang.String version>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r9 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r8 = $r7.<groovyjarjarantlr.Tool: java.lang.String grammarFile>;

        $r10 = virtualinvoke $r9.<groovyjarjarantlr.Tool: java.lang.String fileMinusPath(java.lang.String)>($r8);

        $r11 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"$ */");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r18);

        return;
    }

    public void genInclude(groovyjarjarantlr.LexerGrammar) throws java.io.IOException
    {
        java.util.Enumeration $r110;
        java.lang.StringBuffer $r4, $r5, $r11, $r14, $r15, $r18, $r21, $r22, $r26, $r30, $r32, $r33, $r40, $r41, $r42, $r46, $r47, $r51, $r54, $r55, $r56, $r59, $r63, $r65, $r71, $r73, $r74, $r79, $r80, $r82, $r83, $r88, $r89, $r91, $r92, $r97, $r98, $r100, $r101, $r105, $r106, $r119, $r122, $r123, $r143, $r144, $r153, $r154, $r155, $r158, $r159, $r160, $r167, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183;
        groovyjarjarantlr.Grammar $r2, $r12, $r19, $r27, $r35, $r37, $r48, $r52, $r60, $r67, $r77, $r86, $r95, $r108, $r111, $r112, $r113, $r120, $r131, $r133, $r136, $r146, $r151, $r165;
        groovyjarjarantlr.Token $r132, $r134, $r137, $r148, $r166;
        groovyjarjarantlr.LexerGrammar r72, $r114;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        groovyjarjarantlr.NameSpace $r117, $r127, $r150, $r164;
        java.lang.Object $r69, $r128;
        groovyjarjarantlr.TokenManager $r28, $r61;
        groovyjarjarantlr.collections.impl.Vector $r109, $r116;
        java.io.PrintWriter $r9, $r125, $r126, $r149;
        groovyjarjarantlr.RuleBlock $r138;
        groovyjarjarantlr.Tool $r8;
        java.lang.String $r3, $r6, $r7, $r13, $r16, $r20, $r23, $r24, $r29, $r31, $r34, $r36, $r38, $r43, $r45, $r49, $r53, $r57, $r62, $r64, $r66, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r102, $r104, $r107, $r121, $r124, $r130, $r135, $r139, $r140, $r141, $r145, $r147, $r156, $r161, r162, r163;
        groovyjarjarantlr.RuleSymbol r129;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        groovyjarjarantlr.collections.impl.BitSet $r115;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.util.Hashtable $r68;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r72 := @parameter0: groovyjarjarantlr.LexerGrammar;

        $r167 = new java.lang.StringBuffer;

        specialinvoke $r167.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r3 = virtualinvoke $r2.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile> = $r6;

        r0.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = 1;

        $r8 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>($r7);

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = $r9;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = 0;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        $r168 = new java.lang.StringBuffer;

        specialinvoke $r168.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r168.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#ifndef INC_");

        $r12 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r13 = virtualinvoke $r12.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r16);

        $r169 = new java.lang.StringBuffer;

        specialinvoke $r169.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r169.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#define INC_");

        $r19 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r20 = virtualinvoke $r19.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r23);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("pre_include_hpp");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/config.hpp>");

        $r24 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genHeader(java.lang.String)>($r24);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/CommonToken.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/InputBuffer.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/BitSet.hpp>");

        $r170 = new java.lang.StringBuffer;

        specialinvoke $r170.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r170.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#include \"");

        $r27 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r28 = $r27.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r29 = interfaceinvoke $r28.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r34);

        $r35 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r36 = $r35.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        if $r36 == null goto label01;

        $r151 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        r162 = $r151.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("\n// Include correct superclass header with a header statement for example:");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// header \"post_include_hpp\" {");

        $r171 = new java.lang.StringBuffer;

        specialinvoke $r171.<java.lang.StringBuffer: void <init>()>();

        $r153 = virtualinvoke $r171.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("// #include \"");

        $r154 = virtualinvoke $r153.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r162);

        $r155 = virtualinvoke $r154.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r156 = virtualinvoke $r155.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r156);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// }");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// Or....");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// header {");

        $r172 = new java.lang.StringBuffer;

        specialinvoke $r172.<java.lang.StringBuffer: void <init>()>();

        $r158 = virtualinvoke $r172.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("// #include \"");

        $r159 = virtualinvoke $r158.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r162);

        $r160 = virtualinvoke $r159.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r161 = virtualinvoke $r160.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r161);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// }\n");

        goto label03;

     label01:
        $r37 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r38 = virtualinvoke $r37.<groovyjarjarantlr.Grammar: java.lang.String getSuperClass()>();

        r163 = $r38;

        $i0 = virtualinvoke $r38.<java.lang.String: int lastIndexOf(int)>(46);

        $i10 = (int) -1;

        if $i0 == $i10 goto label02;

        $i7 = virtualinvoke $r38.<java.lang.String: int lastIndexOf(int)>(46);

        $i8 = $i7 + 1;

        r163 = virtualinvoke $r38.<java.lang.String: java.lang.String substring(int)>($i8);

     label02:
        $r173 = new java.lang.StringBuffer;

        specialinvoke $r173.<java.lang.StringBuffer: void <init>()>();

        $r40 = virtualinvoke $r173.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#include <antlr/");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r163);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp>");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r43);

        $r174 = new java.lang.StringBuffer;

        specialinvoke $r174.<java.lang.StringBuffer: void <init>()>();

        $r45 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r46 = virtualinvoke $r174.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r163);

        r162 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

     label03:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("post_include_hpp");

        $r164 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r164 == null goto label04;

        $r150 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r149 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r150.<groovyjarjarantlr.NameSpace: void emitDeclarations(java.io.PrintWriter)>($r149);

     label04:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("");

        $r48 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r49 = $r48.<groovyjarjarantlr.Grammar: java.lang.String comment>;

        if $r49 == null goto label05;

        $r146 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r147 = $r146.<groovyjarjarantlr.Grammar: java.lang.String comment>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>($r147);

     label05:
        $r175 = new java.lang.StringBuffer;

        specialinvoke $r175.<java.lang.StringBuffer: void <init>()>();

        $r51 = virtualinvoke $r175.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class CUSTOM_API ");

        $r52 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r53 = virtualinvoke $r52.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r54 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : public ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r162);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r57);

        $r176 = new java.lang.StringBuffer;

        specialinvoke $r176.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r176.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", public ");

        $r60 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r61 = $r60.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r62 = interfaceinvoke $r61.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r63 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        $r64 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r65 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r66);

        $r67 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r68 = $r67.<groovyjarjarantlr.Grammar: java.util.Hashtable options>;

        $r69 = virtualinvoke $r68.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("classHeaderSuffix");

        $r148 = (groovyjarjarantlr.Token) $r69;

        if $r148 == null goto label06;

        $r140 = virtualinvoke $r148.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r141 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r140, "\"", "\"");

        if $r141 == null goto label06;

        $r177 = new java.lang.StringBuffer;

        specialinvoke $r177.<java.lang.StringBuffer: void <init>()>();

        $r143 = virtualinvoke $r177.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r144 = virtualinvoke $r143.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r141);

        $r145 = virtualinvoke $r144.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r145);

     label06:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $r165 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r166 = $r165.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        if $r166 == null goto label07;

        $r131 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r132 = $r131.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(groovyjarjarantlr.Token)>($r132);

        $r133 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r134 = $r133.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        $r135 = virtualinvoke $r134.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r136 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r137 = $r136.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        $i6 = virtualinvoke $r137.<groovyjarjarantlr.Token: int getLine()>();

        $r138 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r139 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>($r135, $i6, $r138, null);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r139);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo2()>();

     label07:
        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("private:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("void initLiterals();");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("public:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("bool getCaseSensitiveLiterals() const");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        $r178 = new java.lang.StringBuffer;

        specialinvoke $r178.<java.lang.StringBuffer: void <init>()>();

        $r71 = virtualinvoke $r178.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $z0 = r72.<groovyjarjarantlr.LexerGrammar: boolean caseSensitiveLiterals>;

        $r73 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r75);

        $i3 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i4 = $i3 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i4;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("public:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z1 == 0 goto label08;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#if 0");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

     label08:
        $r179 = new java.lang.StringBuffer;

        specialinvoke $r179.<java.lang.StringBuffer: void <init>()>();

        $r77 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r78 = virtualinvoke $r77.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r79 = virtualinvoke $r179.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r81 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceStd>;

        $r82 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("istream& in);");

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r84);

        $r180 = new java.lang.StringBuffer;

        specialinvoke $r180.<java.lang.StringBuffer: void <init>()>();

        $r86 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r87 = virtualinvoke $r86.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r88 = virtualinvoke $r180.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r90 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r91 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("InputBuffer& ib);");

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r93);

        $r181 = new java.lang.StringBuffer;

        specialinvoke $r181.<java.lang.StringBuffer: void <init>()>();

        $r95 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r96 = virtualinvoke $r95.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r97 = virtualinvoke $r181.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r96);

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(const ");

        $r99 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r100 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LexerSharedInputState& state);");

        $r102 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r102);

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z2 == 0 goto label09;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#endif");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

     label09:
        $r182 = new java.lang.StringBuffer;

        specialinvoke $r182.<java.lang.StringBuffer: void <init>()>();

        $r104 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r105 = virtualinvoke $r182.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r104);

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefToken nextToken();");

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r107);

        $r108 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r109 = $r108.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $r110 = virtualinvoke $r109.<groovyjarjarantlr.collections.impl.Vector: java.util.Enumeration elements()>();

     label10:
        $z6 = interfaceinvoke $r110.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z6 == 0 goto label12;

        $r128 = interfaceinvoke $r110.<java.util.Enumeration: java.lang.Object nextElement()>();

        r129 = (groovyjarjarantlr.RuleSymbol) $r128;

        $r130 = virtualinvoke r129.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $z5 = virtualinvoke $r130.<java.lang.String: boolean equals(java.lang.Object)>("mnextToken");

        if $z5 != 0 goto label11;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genRuleHeader(groovyjarjarantlr.RuleSymbol,boolean)>(r129, 0);

     label11:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void exitIfError()>();

        goto label10;

     label12:
        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("private:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r111 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r111.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z3 == 0 goto label13;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("static const char* _ruleNames[];");

     label13:
        $r112 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r112.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z4 == 0 goto label14;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("static const char* _semPredNames[];");

     label14:
        $r116 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector bitsetsUsed>;

        $r113 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r114 = (groovyjarjarantlr.LexerGrammar) $r113;

        $r115 = $r114.<groovyjarjarantlr.LexerGrammar: groovyjarjarantlr.collections.impl.BitSet charVocabulary>;

        $i5 = virtualinvoke $r115.<groovyjarjarantlr.collections.impl.BitSet: int size()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBitsetsHeader(groovyjarjarantlr.collections.impl.Vector,int)>($r116, $i5);

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r117 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r117 == null goto label15;

        $r127 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r126 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r127.<groovyjarjarantlr.NameSpace: void emitClosures(java.io.PrintWriter)>($r126);

     label15:
        $r183 = new java.lang.StringBuffer;

        specialinvoke $r183.<java.lang.StringBuffer: void <init>()>();

        $r119 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#endif /*INC_");

        $r120 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r121 = virtualinvoke $r120.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r122 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r121);

        $r123 = virtualinvoke $r122.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_*/");

        $r124 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r124);

        $r125 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r125.<java.io.PrintWriter: void close()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = null;

        return;
    }

    public void genInclude(groovyjarjarantlr.ParserGrammar) throws java.io.IOException
    {
        java.util.Enumeration $r147;
        java.lang.StringBuffer $r4, $r5, $r12, $r15, $r16, $r19, $r22, $r23, $r27, $r31, $r33, $r34, $r41, $r42, $r43, $r47, $r48, $r52, $r55, $r56, $r57, $r60, $r64, $r66, $r74, $r76, $r77, $r82, $r83, $r85, $r86, $r91, $r92, $r94, $r95, $r100, $r101, $r103, $r104, $r109, $r110, $r112, $r113, $r118, $r119, $r121, $r122, $r125, $r128, $r129, $r132, $r135, $r136, $r139, $r142, $r143, $r150, $r151, $r155, $r156, $r159, $r163, $r164, $r167, $r171, $r179, $r182, $r183, $r189, $r191, $r192, $r210, $r211, $r220, $r221, $r222, $r225, $r226, $r227, $r234, $r235, $r236, $r237, $r238, $r239, $r240, $r241, $r242, $r243, $r244, $r245, $r246, $r247, $r248, $r249, $r250, $r251, $r252, $r253, $r254, $r255, $r256, $r257, $r258, $r259;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30;
        groovyjarjarantlr.NameSpace $r177, $r187, $r217, $r232;
        groovyjarjarantlr.collections.impl.Vector $r146, $r162, $r170, $r175, $r197;
        groovyjarjarantlr.GrammarSymbol r195;
        groovyjarjarantlr.Tool $r8;
        java.lang.String $r3, $r6, $r7, $r14, $r17, $r21, $r24, $r25, $r30, $r32, $r35, $r37, $r39, $r44, $r46, $r50, $r54, $r58, $r63, $r65, $r67, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r117, $r120, $r123, $r127, $r130, $r134, $r137, $r141, $r144, $r149, $r152, $r154, $r157, $r165, $r172, $r181, $r184, $r190, $r193, $r202, $r206, $r207, $r208, $r212, $r214, $r223, $r228, r230, r231;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.Grammar $r2, $r10, $r13, $r20, $r28, $r36, $r38, $r49, $r53, $r61, $r68, $r71, $r80, $r89, $r98, $r107, $r116, $r126, $r133, $r140, $r145, $r160, $r168, $r173, $r176, $r180, $r198, $r200, $r203, $r213, $r218, $r233;
        groovyjarjarantlr.Token $r72, $r199, $r201, $r204, $r215;
        groovyjarjarantlr.ParserGrammar r229;
        java.lang.Object $r70, $r194;
        groovyjarjarantlr.TokenManager $r29, $r62, $r161, $r169, $r174;
        java.io.PrintWriter $r9, $r185, $r186, $r216;
        groovyjarjarantlr.RuleBlock $r205;
        groovyjarjarantlr.RuleSymbol r196;
        java.util.Hashtable $r69;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r229 := @parameter0: groovyjarjarantlr.ParserGrammar;

        $r234 = new java.lang.StringBuffer;

        specialinvoke $r234.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r3 = virtualinvoke $r2.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r234.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile> = $r6;

        r0.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = 1;

        $r8 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>($r7);

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = $r9;

        $r10 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r10.<groovyjarjarantlr.Grammar: boolean buildAST>;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = $z0;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        $r235 = new java.lang.StringBuffer;

        specialinvoke $r235.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r235.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#ifndef INC_");

        $r13 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r14 = virtualinvoke $r13.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r17);

        $r236 = new java.lang.StringBuffer;

        specialinvoke $r236.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r236.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#define INC_");

        $r20 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r21 = virtualinvoke $r20.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r24);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("pre_include_hpp");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/config.hpp>");

        $r25 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genHeader(java.lang.String)>($r25);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/TokenStream.hpp>");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/TokenBuffer.hpp>");

        $r237 = new java.lang.StringBuffer;

        specialinvoke $r237.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r237.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#include \"");

        $r28 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r29 = $r28.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r30 = interfaceinvoke $r29.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r35);

        $r36 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r37 = $r36.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        if $r37 == null goto label01;

        $r218 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        r230 = $r218.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("\n// Include correct superclass header with a header statement for example:");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// header \"post_include_hpp\" {");

        $r238 = new java.lang.StringBuffer;

        specialinvoke $r238.<java.lang.StringBuffer: void <init>()>();

        $r220 = virtualinvoke $r238.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("// #include \"");

        $r221 = virtualinvoke $r220.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r230);

        $r222 = virtualinvoke $r221.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r223 = virtualinvoke $r222.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r223);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// }");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// Or....");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// header {");

        $r239 = new java.lang.StringBuffer;

        specialinvoke $r239.<java.lang.StringBuffer: void <init>()>();

        $r225 = virtualinvoke $r239.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("// #include \"");

        $r226 = virtualinvoke $r225.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r230);

        $r227 = virtualinvoke $r226.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r228 = virtualinvoke $r227.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r228);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// }\n");

        goto label03;

     label01:
        $r38 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r39 = virtualinvoke $r38.<groovyjarjarantlr.Grammar: java.lang.String getSuperClass()>();

        r231 = $r39;

        $i0 = virtualinvoke $r39.<java.lang.String: int lastIndexOf(int)>(46);

        $i30 = (int) -1;

        if $i0 == $i30 goto label02;

        $i27 = virtualinvoke $r39.<java.lang.String: int lastIndexOf(int)>(46);

        $i28 = $i27 + 1;

        r231 = virtualinvoke $r39.<java.lang.String: java.lang.String substring(int)>($i28);

     label02:
        $r240 = new java.lang.StringBuffer;

        specialinvoke $r240.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r240.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#include <antlr/");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r231);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp>");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r44);

        $r241 = new java.lang.StringBuffer;

        specialinvoke $r241.<java.lang.StringBuffer: void <init>()>();

        $r46 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r47 = virtualinvoke $r241.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r231);

        r230 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

     label03:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("post_include_hpp");

        $r232 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r232 == null goto label04;

        $r217 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r216 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r217.<groovyjarjarantlr.NameSpace: void emitDeclarations(java.io.PrintWriter)>($r216);

     label04:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("");

        $r49 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r50 = $r49.<groovyjarjarantlr.Grammar: java.lang.String comment>;

        if $r50 == null goto label05;

        $r213 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r214 = $r213.<groovyjarjarantlr.Grammar: java.lang.String comment>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>($r214);

     label05:
        $r242 = new java.lang.StringBuffer;

        specialinvoke $r242.<java.lang.StringBuffer: void <init>()>();

        $r52 = virtualinvoke $r242.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class CUSTOM_API ");

        $r53 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r54 = virtualinvoke $r53.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r55 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : public ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r230);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r58);

        $r243 = new java.lang.StringBuffer;

        specialinvoke $r243.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r243.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", public ");

        $r61 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r62 = $r61.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r63 = interfaceinvoke $r62.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r64 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r63);

        $r65 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r66 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r67);

        $r68 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r69 = $r68.<groovyjarjarantlr.Grammar: java.util.Hashtable options>;

        $r70 = virtualinvoke $r69.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("classHeaderSuffix");

        $r215 = (groovyjarjarantlr.Token) $r70;

        if $r215 == null goto label06;

        $r207 = virtualinvoke $r215.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r208 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r207, "\"", "\"");

        if $r208 == null goto label06;

        $r244 = new java.lang.StringBuffer;

        specialinvoke $r244.<java.lang.StringBuffer: void <init>()>();

        $r210 = virtualinvoke $r244.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r211 = virtualinvoke $r210.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r208);

        $r212 = virtualinvoke $r211.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r212);

     label06:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $r233 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z6 = $r233.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z6 == 0 goto label07;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("public: static const char* _ruleNames[];");

     label07:
        $r71 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r72 = $r71.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        if $r72 == null goto label08;

        $r198 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r199 = $r198.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        $i25 = virtualinvoke $r199.<groovyjarjarantlr.Token: int getLine()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(int)>($i25);

        $r200 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r201 = $r200.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        $r202 = virtualinvoke $r201.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r203 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r204 = $r203.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        $i26 = virtualinvoke $r204.<groovyjarjarantlr.Token: int getLine()>();

        $r205 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r206 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>($r202, $i26, $r205, null);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r206);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo2()>();

     label08:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("public:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r245 = new java.lang.StringBuffer;

        specialinvoke $r245.<java.lang.StringBuffer: void <init>()>();

        $r74 = virtualinvoke $r245.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void initializeASTFactory( ");

        $r75 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r76 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ASTFactory& factory );");

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r78);

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z1 == 0 goto label09;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#if 0");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

     label09:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("protected:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r246 = new java.lang.StringBuffer;

        specialinvoke $r246.<java.lang.StringBuffer: void <init>()>();

        $r80 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r81 = virtualinvoke $r80.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r82 = virtualinvoke $r246.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r84 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r85 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenBuffer& tokenBuf, int k);");

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r87);

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("public:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r247 = new java.lang.StringBuffer;

        specialinvoke $r247.<java.lang.StringBuffer: void <init>()>();

        $r89 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r90 = virtualinvoke $r89.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r91 = virtualinvoke $r247.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r93 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r94 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenBuffer& tokenBuf);");

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r96);

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("protected:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r248 = new java.lang.StringBuffer;

        specialinvoke $r248.<java.lang.StringBuffer: void <init>()>();

        $r98 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r99 = virtualinvoke $r98.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r100 = virtualinvoke $r248.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r102 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r103 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r102);

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenStream& lexer, int k);");

        $r105 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r105);

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("public:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r249 = new java.lang.StringBuffer;

        specialinvoke $r249.<java.lang.StringBuffer: void <init>()>();

        $r107 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r108 = virtualinvoke $r107.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r109 = virtualinvoke $r249.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r108);

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r111 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r112 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r111);

        $r113 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenStream& lexer);");

        $r114 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r114);

        $r250 = new java.lang.StringBuffer;

        specialinvoke $r250.<java.lang.StringBuffer: void <init>()>();

        $r116 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r117 = virtualinvoke $r116.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r118 = virtualinvoke $r250.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r117);

        $r119 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(const ");

        $r120 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r121 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r120);

        $r122 = virtualinvoke $r121.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ParserSharedInputState& state);");

        $r123 = virtualinvoke $r122.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r123);

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z2 == 0 goto label10;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#endif");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

     label10:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("int getNumTokens() const");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        $r251 = new java.lang.StringBuffer;

        specialinvoke $r251.<java.lang.StringBuffer: void <init>()>();

        $r125 = virtualinvoke $r251.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r126 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r127 = virtualinvoke $r126.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r128 = virtualinvoke $r125.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r127);

        $r129 = virtualinvoke $r128.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::NUM_TOKENS;");

        $r130 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r130);

        $i3 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i4 = $i3 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i4;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("const char* getTokenName( int type ) const");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i5 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i6 = $i5 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i6;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("if( type > getNumTokens() ) return 0;");

        $r252 = new java.lang.StringBuffer;

        specialinvoke $r252.<java.lang.StringBuffer: void <init>()>();

        $r132 = virtualinvoke $r252.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r133 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r134 = virtualinvoke $r133.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r135 = virtualinvoke $r132.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r134);

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::tokenNames[type];");

        $r137 = virtualinvoke $r136.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r137);

        $i7 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i8 = $i7 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i8;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("const char* const* getTokenNames() const");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i9 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i10 = $i9 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i10;

        $r253 = new java.lang.StringBuffer;

        specialinvoke $r253.<java.lang.StringBuffer: void <init>()>();

        $r139 = virtualinvoke $r253.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r140 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r141 = virtualinvoke $r140.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r142 = virtualinvoke $r139.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r141);

        $r143 = virtualinvoke $r142.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::tokenNames;");

        $r144 = virtualinvoke $r143.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r144);

        $i11 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i12 = $i11 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i12;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r145 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r146 = $r145.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $r147 = virtualinvoke $r146.<groovyjarjarantlr.collections.impl.Vector: java.util.Enumeration elements()>();

     label11:
        $z7 = interfaceinvoke $r147.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z7 == 0 goto label15;

        $r194 = interfaceinvoke $r147.<java.util.Enumeration: java.lang.Object nextElement()>();

        r195 = (groovyjarjarantlr.GrammarSymbol) $r194;

        $z5 = r195 instanceof groovyjarjarantlr.RuleSymbol;

        if $z5 == 0 goto label14;

        r196 = (groovyjarjarantlr.RuleSymbol) r195;

        $r197 = r196.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.collections.impl.Vector references>;

        $i24 = virtualinvoke $r197.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if $i24 != 0 goto label12;

        $z8 = 1;

        goto label13;

     label12:
        $z8 = 0;

     label13:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genRuleHeader(groovyjarjarantlr.RuleSymbol,boolean)>(r196, $z8);

     label14:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void exitIfError()>();

        goto label11;

     label15:
        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("public:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r254 = new java.lang.StringBuffer;

        specialinvoke $r254.<java.lang.StringBuffer: void <init>()>();

        $r149 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r150 = virtualinvoke $r254.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r149);

        $r151 = virtualinvoke $r150.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST getAST()");

        $r152 = virtualinvoke $r151.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r152);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $z3 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z3 == 0 goto label16;

        $i20 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i21 = $i20 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i21;

        $r255 = new java.lang.StringBuffer;

        specialinvoke $r255.<java.lang.StringBuffer: void <init>()>();

        $r189 = virtualinvoke $r255.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r190 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r191 = virtualinvoke $r189.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r190);

        $r192 = virtualinvoke $r191.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST(returnAST);");

        $r193 = virtualinvoke $r192.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r193);

        $i22 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i23 = $i22 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i23;

        goto label17;

     label16:
        $i13 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i14 = $i13 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i14;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("return returnAST;");

        $i15 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i16 = $i15 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i16;

     label17:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("protected:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r256 = new java.lang.StringBuffer;

        specialinvoke $r256.<java.lang.StringBuffer: void <init>()>();

        $r154 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r155 = virtualinvoke $r256.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r154);

        $r156 = virtualinvoke $r155.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" returnAST;");

        $r157 = virtualinvoke $r156.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r157);

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("private:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("static const char* tokenNames[];");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("#ifndef NO_STATIC_CONSTS");

        $r257 = new java.lang.StringBuffer;

        specialinvoke $r257.<java.lang.StringBuffer: void <init>()>();

        $r159 = virtualinvoke $r257.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static const int NUM_TOKENS = ");

        $r160 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r161 = $r160.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r162 = interfaceinvoke $r161.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.collections.impl.Vector getVocabulary()>();

        $i17 = virtualinvoke $r162.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        $r163 = virtualinvoke $r159.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i17);

        $r164 = virtualinvoke $r163.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r165 = virtualinvoke $r164.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r165);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("#else");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("enum {");

        $r258 = new java.lang.StringBuffer;

        specialinvoke $r258.<java.lang.StringBuffer: void <init>()>();

        $r167 = virtualinvoke $r258.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\tNUM_TOKENS = ");

        $r168 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r169 = $r168.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r170 = interfaceinvoke $r169.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.collections.impl.Vector getVocabulary()>();

        $i18 = virtualinvoke $r170.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        $r171 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i18);

        $r172 = virtualinvoke $r171.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r172);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("#endif");

        $r175 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector bitsetsUsed>;

        $r173 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r174 = $r173.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $i19 = interfaceinvoke $r174.<groovyjarjarantlr.TokenManager: int maxTokenType()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBitsetsHeader(groovyjarjarantlr.collections.impl.Vector,int)>($r175, $i19);

        $r176 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r176.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z4 == 0 goto label18;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("static const char* _semPredNames[];");

     label18:
        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r177 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r177 == null goto label19;

        $r187 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r186 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r187.<groovyjarjarantlr.NameSpace: void emitClosures(java.io.PrintWriter)>($r186);

     label19:
        $r259 = new java.lang.StringBuffer;

        specialinvoke $r259.<java.lang.StringBuffer: void <init>()>();

        $r179 = virtualinvoke $r259.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#endif /*INC_");

        $r180 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r181 = virtualinvoke $r180.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r182 = virtualinvoke $r179.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r181);

        $r183 = virtualinvoke $r182.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_*/");

        $r184 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r184);

        $r185 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r185.<java.io.PrintWriter: void close()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = null;

        return;
    }

    public void genInclude(groovyjarjarantlr.TreeWalkerGrammar) throws java.io.IOException
    {
        java.util.Enumeration $r106;
        java.lang.StringBuffer $r4, $r5, $r12, $r15, $r16, $r19, $r22, $r23, $r26, $r30, $r32, $r33, $r41, $r42, $r43, $r47, $r48, $r52, $r55, $r56, $r57, $r60, $r64, $r66, $r74, $r75, $r78, $r80, $r81, $r84, $r87, $r88, $r91, $r94, $r95, $r98, $r101, $r102, $r109, $r110, $r114, $r115, $r119, $r120, $r123, $r127, $r128, $r131, $r135, $r142, $r145, $r146, $r152, $r154, $r155, $r173, $r174, $r183, $r184, $r185, $r188, $r189, $r190, $r198, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220;
        groovyjarjarantlr.Grammar $r2, $r10, $r13, $r20, $r27, $r36, $r38, $r49, $r53, $r61, $r68, $r72, $r85, $r92, $r99, $r104, $r124, $r132, $r137, $r143, $r161, $r163, $r166, $r176, $r181, $r196;
        groovyjarjarantlr.Token $r162, $r164, $r167, $r178, $r197;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30;
        groovyjarjarantlr.NameSpace $r140, $r150, $r180, $r195;
        java.lang.Object $r70, $r157;
        groovyjarjarantlr.TreeWalkerGrammar r192;
        groovyjarjarantlr.TokenManager $r28, $r62, $r125, $r133, $r138;
        groovyjarjarantlr.collections.impl.Vector $r105, $r126, $r134, $r139, $r160;
        java.io.PrintWriter $r9, $r148, $r149, $r179;
        groovyjarjarantlr.RuleBlock $r168;
        groovyjarjarantlr.GrammarSymbol r158;
        groovyjarjarantlr.Tool $r8;
        java.lang.String $r3, $r6, $r7, $r14, $r17, $r21, $r24, $r29, $r31, $r34, $r35, $r37, $r39, $r44, $r46, $r50, $r54, $r58, $r63, $r65, $r67, $r73, $r76, $r79, $r82, $r86, $r89, $r93, $r96, $r100, $r103, $r108, $r111, $r113, $r116, $r118, $r121, $r129, $r136, $r144, $r147, $r153, $r156, $r165, $r169, $r170, $r171, $r175, $r177, $r186, $r191, r193, r194;
        groovyjarjarantlr.RuleSymbol r159;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.util.Hashtable $r69;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r192 := @parameter0: groovyjarjarantlr.TreeWalkerGrammar;

        $r198 = new java.lang.StringBuffer;

        specialinvoke $r198.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r3 = virtualinvoke $r2.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r198.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile> = $r6;

        r0.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = 1;

        $r8 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>($r7);

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = $r9;

        $r10 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r10.<groovyjarjarantlr.Grammar: boolean buildAST>;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = $z0;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        $r199 = new java.lang.StringBuffer;

        specialinvoke $r199.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r199.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#ifndef INC_");

        $r13 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r14 = virtualinvoke $r13.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r17);

        $r200 = new java.lang.StringBuffer;

        specialinvoke $r200.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r200.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#define INC_");

        $r20 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r21 = virtualinvoke $r20.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r24);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("pre_include_hpp");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#include <antlr/config.hpp>");

        $r201 = new java.lang.StringBuffer;

        specialinvoke $r201.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r201.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#include \"");

        $r27 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r28 = $r27.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r29 = interfaceinvoke $r28.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r34);

        $r35 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genHeader(java.lang.String)>($r35);

        $r36 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r37 = $r36.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        if $r37 == null goto label01;

        $r181 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        r193 = $r181.<groovyjarjarantlr.Grammar: java.lang.String superClass>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("\n// Include correct superclass header with a header statement for example:");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// header \"post_include_hpp\" {");

        $r202 = new java.lang.StringBuffer;

        specialinvoke $r202.<java.lang.StringBuffer: void <init>()>();

        $r183 = virtualinvoke $r202.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("// #include \"");

        $r184 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r193);

        $r185 = virtualinvoke $r184.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r186 = virtualinvoke $r185.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r186);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// }");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// Or....");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// header {");

        $r203 = new java.lang.StringBuffer;

        specialinvoke $r203.<java.lang.StringBuffer: void <init>()>();

        $r188 = virtualinvoke $r203.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("// #include \"");

        $r189 = virtualinvoke $r188.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r193);

        $r190 = virtualinvoke $r189.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp\"");

        $r191 = virtualinvoke $r190.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r191);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// }\n");

        goto label03;

     label01:
        $r38 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r39 = virtualinvoke $r38.<groovyjarjarantlr.Grammar: java.lang.String getSuperClass()>();

        r194 = $r39;

        $i0 = virtualinvoke $r39.<java.lang.String: int lastIndexOf(int)>(46);

        $i30 = (int) -1;

        if $i0 == $i30 goto label02;

        $i27 = virtualinvoke $r39.<java.lang.String: int lastIndexOf(int)>(46);

        $i28 = $i27 + 1;

        r194 = virtualinvoke $r39.<java.lang.String: java.lang.String substring(int)>($i28);

     label02:
        $r204 = new java.lang.StringBuffer;

        specialinvoke $r204.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r204.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#include <antlr/");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r194);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp>");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r44);

        $r205 = new java.lang.StringBuffer;

        specialinvoke $r205.<java.lang.StringBuffer: void <init>()>();

        $r46 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r47 = virtualinvoke $r205.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r194);

        r193 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

     label03:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("post_include_hpp");

        $r195 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r195 == null goto label04;

        $r180 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r179 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r180.<groovyjarjarantlr.NameSpace: void emitDeclarations(java.io.PrintWriter)>($r179);

     label04:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void printHeaderAction(java.lang.String)>("");

        $r49 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r50 = $r49.<groovyjarjarantlr.Grammar: java.lang.String comment>;

        if $r50 == null goto label05;

        $r176 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r177 = $r176.<groovyjarjarantlr.Grammar: java.lang.String comment>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>($r177);

     label05:
        $r206 = new java.lang.StringBuffer;

        specialinvoke $r206.<java.lang.StringBuffer: void <init>()>();

        $r52 = virtualinvoke $r206.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class CUSTOM_API ");

        $r53 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r54 = virtualinvoke $r53.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r55 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : public ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r193);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r58);

        $r207 = new java.lang.StringBuffer;

        specialinvoke $r207.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r207.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", public ");

        $r61 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r62 = $r61.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r63 = interfaceinvoke $r62.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r64 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r63);

        $r65 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r66 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r67);

        $r68 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r69 = $r68.<groovyjarjarantlr.Grammar: java.util.Hashtable options>;

        $r70 = virtualinvoke $r69.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("classHeaderSuffix");

        $r178 = (groovyjarjarantlr.Token) $r70;

        if $r178 == null goto label06;

        $r170 = virtualinvoke $r178.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r171 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r170, "\"", "\"");

        if $r171 == null goto label06;

        $r208 = new java.lang.StringBuffer;

        specialinvoke $r208.<java.lang.StringBuffer: void <init>()>();

        $r173 = virtualinvoke $r208.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r174 = virtualinvoke $r173.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r171);

        $r175 = virtualinvoke $r174.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r175);

     label06:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $r196 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r197 = $r196.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        if $r197 == null goto label07;

        $r161 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r162 = $r161.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        $i25 = virtualinvoke $r162.<groovyjarjarantlr.Token: int getLine()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(int)>($i25);

        $r163 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r164 = $r163.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        $r165 = virtualinvoke $r164.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r166 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r167 = $r166.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token classMemberAction>;

        $i26 = virtualinvoke $r167.<groovyjarjarantlr.Token: int getLine()>();

        $r168 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r169 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>($r165, $i26, $r168, null);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r169);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo2()>();

     label07:
        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("public:");

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z1 == 0 goto label08;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#if 0");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("// constructor creation turned of with \'noConstructor\' option");

     label08:
        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r209 = new java.lang.StringBuffer;

        specialinvoke $r209.<java.lang.StringBuffer: void <init>()>();

        $r72 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r73 = virtualinvoke $r72.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r74 = virtualinvoke $r209.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r76);

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors>;

        if $z2 == 0 goto label09;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#endif");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

     label09:
        $r210 = new java.lang.StringBuffer;

        specialinvoke $r210.<java.lang.StringBuffer: void <init>()>();

        $r78 = virtualinvoke $r210.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static void initializeASTFactory( ");

        $r79 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r80 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ASTFactory& factory );");

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r82);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("int getNumTokens() const");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        $r211 = new java.lang.StringBuffer;

        specialinvoke $r211.<java.lang.StringBuffer: void <init>()>();

        $r84 = virtualinvoke $r211.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r85 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r86 = virtualinvoke $r85.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r87 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::NUM_TOKENS;");

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r89);

        $i3 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i4 = $i3 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i4;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("const char* getTokenName( int type ) const");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i5 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i6 = $i5 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i6;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("if( type > getNumTokens() ) return 0;");

        $r212 = new java.lang.StringBuffer;

        specialinvoke $r212.<java.lang.StringBuffer: void <init>()>();

        $r91 = virtualinvoke $r212.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r92 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r93 = virtualinvoke $r92.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r94 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::tokenNames[type];");

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r96);

        $i7 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i8 = $i7 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i8;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("const char* const* getTokenNames() const");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i9 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i10 = $i9 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i10;

        $r213 = new java.lang.StringBuffer;

        specialinvoke $r213.<java.lang.StringBuffer: void <init>()>();

        $r98 = virtualinvoke $r213.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r99 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r100 = virtualinvoke $r99.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r101 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r100);

        $r102 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::tokenNames;");

        $r103 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r103);

        $i11 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i12 = $i11 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i12;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r104 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r105 = $r104.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $r106 = virtualinvoke $r105.<groovyjarjarantlr.collections.impl.Vector: java.util.Enumeration elements()>();

     label10:
        $z5 = interfaceinvoke $r106.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z5 == 0 goto label14;

        $r157 = interfaceinvoke $r106.<java.util.Enumeration: java.lang.Object nextElement()>();

        r158 = (groovyjarjarantlr.GrammarSymbol) $r157;

        $z4 = r158 instanceof groovyjarjarantlr.RuleSymbol;

        if $z4 == 0 goto label13;

        r159 = (groovyjarjarantlr.RuleSymbol) r158;

        $r160 = r159.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.collections.impl.Vector references>;

        $i24 = virtualinvoke $r160.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if $i24 != 0 goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genRuleHeader(groovyjarjarantlr.RuleSymbol,boolean)>(r159, $z6);

     label13:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void exitIfError()>();

        goto label10;

     label14:
        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("public:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r214 = new java.lang.StringBuffer;

        specialinvoke $r214.<java.lang.StringBuffer: void <init>()>();

        $r108 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r109 = virtualinvoke $r214.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r108);

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST getAST()");

        $r111 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r111);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $z3 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z3 == 0 goto label15;

        $i20 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i21 = $i20 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i21;

        $r215 = new java.lang.StringBuffer;

        specialinvoke $r215.<java.lang.StringBuffer: void <init>()>();

        $r152 = virtualinvoke $r215.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r153 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r154 = virtualinvoke $r152.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r153);

        $r155 = virtualinvoke $r154.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST(returnAST);");

        $r156 = virtualinvoke $r155.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r156);

        $i22 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i23 = $i22 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i23;

        goto label16;

     label15:
        $i13 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i14 = $i13 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i14;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("return returnAST;");

        $i15 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i16 = $i15 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i16;

     label16:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("protected:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $r216 = new java.lang.StringBuffer;

        specialinvoke $r216.<java.lang.StringBuffer: void <init>()>();

        $r113 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r114 = virtualinvoke $r216.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r113);

        $r115 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" returnAST;");

        $r116 = virtualinvoke $r115.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r116);

        $r217 = new java.lang.StringBuffer;

        specialinvoke $r217.<java.lang.StringBuffer: void <init>()>();

        $r118 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r119 = virtualinvoke $r217.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r118);

        $r120 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" _retTree;");

        $r121 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r121);

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("private:");

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("static const char* tokenNames[];");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("#ifndef NO_STATIC_CONSTS");

        $r218 = new java.lang.StringBuffer;

        specialinvoke $r218.<java.lang.StringBuffer: void <init>()>();

        $r123 = virtualinvoke $r218.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static const int NUM_TOKENS = ");

        $r124 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r125 = $r124.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r126 = interfaceinvoke $r125.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.collections.impl.Vector getVocabulary()>();

        $i17 = virtualinvoke $r126.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        $r127 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i17);

        $r128 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r129 = virtualinvoke $r128.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r129);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("#else");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("enum {");

        $r219 = new java.lang.StringBuffer;

        specialinvoke $r219.<java.lang.StringBuffer: void <init>()>();

        $r131 = virtualinvoke $r219.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\tNUM_TOKENS = ");

        $r132 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r133 = $r132.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r134 = interfaceinvoke $r133.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.collections.impl.Vector getVocabulary()>();

        $i18 = virtualinvoke $r134.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        $r135 = virtualinvoke $r131.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i18);

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r136);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("#endif");

        $r139 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector bitsetsUsed>;

        $r137 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r138 = $r137.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $i19 = interfaceinvoke $r138.<groovyjarjarantlr.TokenManager: int maxTokenType()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBitsetsHeader(groovyjarjarantlr.collections.impl.Vector,int)>($r139, $i19);

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r140 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r140 == null goto label17;

        $r150 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r149 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r150.<groovyjarjarantlr.NameSpace: void emitClosures(java.io.PrintWriter)>($r149);

     label17:
        $r220 = new java.lang.StringBuffer;

        specialinvoke $r220.<java.lang.StringBuffer: void <init>()>();

        $r142 = virtualinvoke $r220.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#endif /*INC_");

        $r143 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r144 = virtualinvoke $r143.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r145 = virtualinvoke $r142.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r144);

        $r146 = virtualinvoke $r145.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_*/");

        $r147 = virtualinvoke $r146.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r147);

        $r148 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r148.<java.io.PrintWriter: void close()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = null;

        return;
    }

    protected void genASTDeclaration(groovyjarjarantlr.AlternativeElement)
    {
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.String $r2;
        groovyjarjarantlr.AlternativeElement r1;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: groovyjarjarantlr.AlternativeElement;

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genASTDeclaration(groovyjarjarantlr.AlternativeElement,java.lang.String)>(r1, $r2);

        return;
    }

    protected void genASTDeclaration(groovyjarjarantlr.AlternativeElement, java.lang.String)
    {
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.String $r2, r3;
        groovyjarjarantlr.AlternativeElement r1;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: groovyjarjarantlr.AlternativeElement;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r1.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genASTDeclaration(groovyjarjarantlr.AlternativeElement,java.lang.String,java.lang.String)>(r1, $r2, r3);

        return;
    }

    protected void genASTDeclaration(groovyjarjarantlr.AlternativeElement, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r7, $r8, $r11, $r12, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        java.lang.String r3, r4, $r6, $r10, $r13, r16, $r24;
        java.util.Hashtable $r2, $r25;
        boolean $z0, $z1;
        groovyjarjarantlr.GrammarAtom $r5, $r9;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.AlternativeElement r1;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: groovyjarjarantlr.AlternativeElement;

        r4 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable declaredASTVariables>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        r16 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $z1 = r1 instanceof groovyjarjarantlr.GrammarAtom;

        if $z1 == 0 goto label2;

        $r5 = (groovyjarjarantlr.GrammarAtom) r1;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        if $r6 == null goto label2;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ref");

        $r9 = (groovyjarjarantlr.GrammarAtom) r1;

        $r10 = virtualinvoke $r9.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r13 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST = ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r24);

        $r25 = r0.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable declaredASTVariables>;

        virtualinvoke $r25.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r1);

        return;
    }

    private void genLiteralsTest()
    {
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_ttype = testLiteralsTable(_ttype);");

        return;
    }

    private void genLiteralsTestForPartialToken()
    {
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_ttype = testLiteralsTable(text.substr(_begin, text.length()-_begin),_ttype);");

        return;
    }

    protected void genMatch(groovyjarjarantlr.collections.impl.BitSet)
    {
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.collections.impl.BitSet r1;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: groovyjarjarantlr.collections.impl.BitSet;

        return;
    }

    protected void genMatch(groovyjarjarantlr.GrammarAtom)
    {
        groovyjarjarantlr.Grammar $r8;
        groovyjarjarantlr.GrammarAtom r0;
        groovyjarjarantlr.WildcardElement $r2;
        groovyjarjarantlr.CppCodeGenerator r1;
        groovyjarjarantlr.Tool $r4;
        java.lang.StringBuffer $r3, $r5, $r6;
        java.lang.String $r7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.GrammarAtom;

        $z0 = r0 instanceof groovyjarjarantlr.StringLiteralElement;

        if $z0 == 0 goto label2;

        $r8 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r8 instanceof groovyjarjarantlr.LexerGrammar;

        if $z4 == 0 goto label1;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genMatchUsingAtomText(groovyjarjarantlr.GrammarAtom)>(r0);

        goto label5;

     label1:
        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genMatchUsingAtomTokenType(groovyjarjarantlr.GrammarAtom)>(r0);

        goto label5;

     label2:
        $z1 = r0 instanceof groovyjarjarantlr.CharLiteralElement;

        if $z1 == 0 goto label3;

        $r4 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cannot ref character literals in grammar: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r7);

        goto label5;

     label3:
        $z2 = r0 instanceof groovyjarjarantlr.TokenRefElement;

        if $z2 == 0 goto label4;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void genMatchUsingAtomTokenType(groovyjarjarantlr.GrammarAtom)>(r0);

        goto label5;

     label4:
        $z3 = r0 instanceof groovyjarjarantlr.WildcardElement;

        if $z3 == 0 goto label5;

        $r2 = (groovyjarjarantlr.WildcardElement) r0;

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void gen(groovyjarjarantlr.WildcardElement)>($r2);

     label5:
        return;
    }

    protected void genMatchUsingAtomText(groovyjarjarantlr.GrammarAtom)
    {
        groovyjarjarantlr.Grammar $r1, $r4, $r19, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.StringBuffer $r8, $r10, $r11, $r13, $r15, $r16, $r17;
        int $i0, $i1;
        java.lang.String $r3, $r5, $r6, $r7, $r9, $r12, $r14, r18, $r20;
        groovyjarjarantlr.GrammarAtom r2;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r2 := @parameter0: groovyjarjarantlr.GrammarAtom;

        r18 = "";

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r1 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z0 == 0 goto label02;

        $z5 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z5 == 0 goto label01;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(_t),");

        r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label02;

     label01:
        r18 = "_t,";

     label02:
        $r19 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z6 = $r19 instanceof groovyjarjarantlr.LexerGrammar;

        if $z6 == 0 goto label04;

        $z4 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z4 == 0 goto label03;

        $i1 = virtualinvoke r2.<groovyjarjarantlr.GrammarAtom: int getAutoGenType()>();

        if $i1 != 3 goto label04;

     label03:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_saveIndex = text.length();");

     label04:
        $z7 = r2.<groovyjarjarantlr.GrammarAtom: boolean not>;

        if $z7 == 0 goto label05;

        $r20 = "matchNot(";

        goto label06;

     label05:
        $r20 = "match(";

     label06:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r20);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>(r18);

        $r3 = r2.<groovyjarjarantlr.GrammarAtom: java.lang.String atomText>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("EOF");

        if $z1 == 0 goto label07;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token::EOF_TYPE");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r12);

        goto label09;

     label07:
        $r4 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z2 = $r4 instanceof groovyjarjarantlr.LexerGrammar;

        if $z2 == 0 goto label08;

        $r6 = r2.<groovyjarjarantlr.GrammarAtom: java.lang.String atomText>;

        $r7 = specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String convertJavaToCppString(java.lang.String,boolean)>($r6, 0);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r7);

        goto label09;

     label08:
        $r5 = r2.<groovyjarjarantlr.GrammarAtom: java.lang.String atomText>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r5);

     label09:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>(");");

        $r21 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z8 = $r21 instanceof groovyjarjarantlr.LexerGrammar;

        if $z8 == 0 goto label11;

        $z3 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText>;

        if $z3 == 0 goto label10;

        $i0 = virtualinvoke r2.<groovyjarjarantlr.GrammarAtom: int getAutoGenType()>();

        if $i0 != 3 goto label11;

     label10:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("text.erase(_saveIndex);");

     label11:
        return;
    }

    protected void genMatchUsingAtomTokenType(groovyjarjarantlr.GrammarAtom)
    {
        groovyjarjarantlr.Grammar $r1;
        java.lang.StringBuffer $r3, $r4, $r5, $r7, $r9, $r10, $r11, $r13, $r14, $r16, $r18;
        int $i0;
        java.lang.String $r6, $r8, r12, $r15, $r17, $r19;
        boolean $z0, $z1, $z2;
        groovyjarjarantlr.GrammarAtom r2;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r2 := @parameter0: groovyjarjarantlr.GrammarAtom;

        r12 = "";

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r1 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z0 == 0 goto label2;

        $z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z1 == 0 goto label1;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(_t),");

        r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        r12 = "_t,";

     label2:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        $i0 = virtualinvoke r2.<groovyjarjarantlr.GrammarAtom: int getType()>();

        $r15 = specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getValueString(int)>($i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $z2 = r2.<groovyjarjarantlr.GrammarAtom: boolean not>;

        if $z2 == 0 goto label3;

        $r19 = "matchNot(";

        goto label4;

     label3:
        $r19 = "match(";

     label4:
        $r3 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r6);

        return;
    }

    public void genNextToken()
    {
        java.lang.StringBuffer $r13, $r15, $r16, $r19, $r20, $r22, $r24, $r25, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r51, $r52, $r53, $r54, $r56, $r57, $r58, $r59, $r63, $r64, $r65, $r67, $r68, $r69, $r70, $r72, $r73, $r77, $r78, $r80, $r81, $r83, $r84, $r86, $r87, $r89, $r90, $r92, $r93, $r95, $r96, $r98, $r99, $r101, $r102, $r104, $r105, $r107, $r108, $r109, $r110, $r112, $r113, $r115, $r116, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r158, $r160, $r161, $r162, $r165, $r167, $r168, $r169, $r172, $r174, $r175, $r176, $r180, $r182, $r183, $r186, $r187, $r189, $r190, $r192, $r193, $r195, $r196, $r209, $r210, $r211, $r212, $r213;
        groovyjarjarantlr.LexerGrammar $r12, $r39, $r62, $r76, $r179, $r208, $r216;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, $i32, $i33, i34, $i35;
        groovyjarjarantlr.collections.impl.Vector $r2, $r4, $r199, $r205;
        groovyjarjarantlr.GrammarSymbol $r155;
        groovyjarjarantlr.Tool $r150, $r159, $r166, $r173;
        java.lang.String $r14, $r18, $r21, $r23, $r26, $r28, $r31, $r34, $r37, $r40, $r50, $r55, $r60, $r66, $r71, $r74, $r79, $r82, $r85, $r88, $r91, $r94, $r97, $r100, $r103, $r106, $r111, $r114, $r117, $r129, $r152, $r154, $r156, $r163, $r170, $r177, $r181, $r185, $r188, $r191, $r194, $r197, $r201, r203, r206, $r214;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12, $z13;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.LLkGrammarAnalyzer $r10;
        groovyjarjarantlr.Grammar $r1, $r3, $r5, $r8, $r9, $r11, $r17, $r38, $r61, $r75, $r151, $r153, $r157, $r164, $r171, $r178, $r184, $r198, $r207, $r215;
        groovyjarjarantlr.Lookahead $r149;
        java.lang.Object $r200;
        groovyjarjarantlr.Lookahead[] $r148;
        groovyjarjarantlr.RuleBlock $r6;
        groovyjarjarantlr.RuleSymbol $r7, r202, r204;
        groovyjarjarantlr.Alternative $r147;
        groovyjarjarantlr.CppBlockFinishingInfo $r41;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        z10 = 0;

        i31 = 0;

     label01:
        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $i0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i31 >= $i0 goto label03;

        $r198 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r199 = $r198.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $r200 = virtualinvoke $r199.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i31);

        r202 = (groovyjarjarantlr.RuleSymbol) $r200;

        $z8 = virtualinvoke r202.<groovyjarjarantlr.RuleSymbol: boolean isDefined()>();

        if $z8 == 0 goto label02;

        $r201 = r202.<groovyjarjarantlr.RuleSymbol: java.lang.String access>;

        $z9 = virtualinvoke $r201.<java.lang.String: boolean equals(java.lang.Object)>("public");

        if $z9 == 0 goto label02;

        z10 = 1;

        goto label03;

     label02:
        i31 = i31 + 1;

        goto label01;

     label03:
        if z10 != 0 goto label04;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r180 = new java.lang.StringBuffer;

        specialinvoke $r180.<java.lang.StringBuffer: void <init>()>();

        $r181 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r182 = virtualinvoke $r180.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r181);

        $r183 = virtualinvoke $r182.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefToken ");

        $r184 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r185 = virtualinvoke $r184.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r186 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r185);

        $r187 = virtualinvoke $r186.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::nextToken() { return ");

        $r188 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r189 = virtualinvoke $r187.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r188);

        $r190 = virtualinvoke $r189.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefToken(new ");

        $r191 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r192 = virtualinvoke $r190.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r191);

        $r193 = virtualinvoke $r192.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CommonToken(");

        $r194 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r195 = virtualinvoke $r193.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r194);

        $r196 = virtualinvoke $r195.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token::EOF_TYPE, \"\")); }");

        $r197 = virtualinvoke $r196.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r197);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        return;

     label04:
        $r5 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r3 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r4 = $r3.<groovyjarjarantlr.Grammar: groovyjarjarantlr.collections.impl.Vector rules>;

        $r6 = staticinvoke <groovyjarjarantlr.MakeGrammar: groovyjarjarantlr.RuleBlock createNextTokenRule(groovyjarjarantlr.Grammar,groovyjarjarantlr.collections.impl.Vector,java.lang.String)>($r5, $r4, "nextToken");

        $r7 = new groovyjarjarantlr.RuleSymbol;

        specialinvoke $r7.<groovyjarjarantlr.RuleSymbol: void <init>(java.lang.String)>("mnextToken");

        virtualinvoke $r7.<groovyjarjarantlr.RuleSymbol: void setDefined()>();

        virtualinvoke $r7.<groovyjarjarantlr.RuleSymbol: void setBlock(groovyjarjarantlr.RuleBlock)>($r6);

        $r7.<groovyjarjarantlr.RuleSymbol: java.lang.String access> = "private";

        $r8 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        virtualinvoke $r8.<groovyjarjarantlr.Grammar: void define(groovyjarjarantlr.RuleSymbol)>($r7);

        $r9 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r10 = $r9.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        interfaceinvoke $r10.<groovyjarjarantlr.LLkGrammarAnalyzer: boolean deterministic(groovyjarjarantlr.AlternativeBlock)>($r6);

        r203 = null;

        $r11 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r12 = (groovyjarjarantlr.LexerGrammar) $r11;

        $z0 = $r12.<groovyjarjarantlr.LexerGrammar: boolean filterMode>;

        if $z0 == 0 goto label05;

        $r178 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r179 = (groovyjarjarantlr.LexerGrammar) $r178;

        r203 = $r179.<groovyjarjarantlr.LexerGrammar: java.lang.String filterRule>;

     label05:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefToken ");

        $r17 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r18 = virtualinvoke $r17.<groovyjarjarantlr.Grammar: java.lang.String getClassName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::nextToken()");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r21);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefToken theRetToken;");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r26);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("for (;;) {");

        $i3 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i4 = $i3 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i4;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefToken theRetToken;");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("int _ttype = ");

        $r34 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token::INVALID_TYPE;");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r37);

        $r38 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r39 = (groovyjarjarantlr.LexerGrammar) $r38;

        $z1 = $r39.<groovyjarjarantlr.LexerGrammar: boolean filterMode>;

        if $z1 == 0 goto label09;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("setCommitToPath(false);");

        if r203 == null goto label09;

        $r151 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r152 = staticinvoke <groovyjarjarantlr.CodeGenerator: java.lang.String encodeLexerRuleName(java.lang.String)>(r203);

        $z5 = virtualinvoke $r151.<groovyjarjarantlr.Grammar: boolean isDefined(java.lang.String)>($r152);

        if $z5 != 0 goto label06;

        $r171 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r173 = $r171.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Tool antlrTool>;

        $r172 = new java.lang.StringBuffer;

        specialinvoke $r172.<java.lang.StringBuffer: void <init>()>();

        $r174 = virtualinvoke $r172.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Filter rule ");

        $r175 = virtualinvoke $r174.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r203);

        $r176 = virtualinvoke $r175.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not exist in this lexer");

        $r177 = virtualinvoke $r176.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r173.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r177);

        goto label08;

     label06:
        $r153 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r154 = staticinvoke <groovyjarjarantlr.CodeGenerator: java.lang.String encodeLexerRuleName(java.lang.String)>(r203);

        $r155 = virtualinvoke $r153.<groovyjarjarantlr.Grammar: groovyjarjarantlr.GrammarSymbol getSymbol(java.lang.String)>($r154);

        r204 = (groovyjarjarantlr.RuleSymbol) $r155;

        $z6 = virtualinvoke r204.<groovyjarjarantlr.RuleSymbol: boolean isDefined()>();

        if $z6 != 0 goto label07;

        $r164 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r166 = $r164.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Tool antlrTool>;

        $r165 = new java.lang.StringBuffer;

        specialinvoke $r165.<java.lang.StringBuffer: void <init>()>();

        $r167 = virtualinvoke $r165.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Filter rule ");

        $r168 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r203);

        $r169 = virtualinvoke $r168.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not exist in this lexer");

        $r170 = virtualinvoke $r169.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r166.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r170);

        goto label08;

     label07:
        $r156 = r204.<groovyjarjarantlr.RuleSymbol: java.lang.String access>;

        $z7 = virtualinvoke $r156.<java.lang.String: boolean equals(java.lang.Object)>("public");

        if $z7 == 0 goto label08;

        $r157 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r159 = $r157.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Tool antlrTool>;

        $r158 = new java.lang.StringBuffer;

        specialinvoke $r158.<java.lang.StringBuffer: void <init>()>();

        $r160 = virtualinvoke $r158.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Filter rule ");

        $r161 = virtualinvoke $r160.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r203);

        $r162 = virtualinvoke $r161.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" must be protected");

        $r163 = virtualinvoke $r162.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r159.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r163);

     label08:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("int _m;");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_m = mark();");

     label09:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("resetText();");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("try {   // for lexical and char stream error handling");

        $i32 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i33 = $i32 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i33;

        i34 = 0;

     label10:
        $r205 = virtualinvoke $r6.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.collections.impl.Vector getAlternatives()>();

        $i35 = virtualinvoke $r205.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i34 >= $i35 goto label12;

        $r147 = virtualinvoke $r6.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.Alternative getAlternativeAt(int)>(i34);

        $r148 = $r147.<groovyjarjarantlr.Alternative: groovyjarjarantlr.Lookahead[] cache>;

        $r149 = $r148[1];

        $z4 = virtualinvoke $r149.<groovyjarjarantlr.Lookahead: boolean containsEpsilon()>();

        if $z4 == 0 goto label11;

        $r150 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r150.<groovyjarjarantlr.Tool: void warning(java.lang.String)>("found optional path in nextToken()");

     label11:
        i34 = i34 + 1;

        goto label10;

     label12:
        $r40 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r41 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CppBlockFinishingInfo genCommonBlock(groovyjarjarantlr.AlternativeBlock,boolean)>($r6, 0);

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if (LA(1)==EOF_CHAR)");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t{");

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t\tuponEOF();");

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t\t_returnToken = makeToken(");

        $r50 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token::EOF_TYPE);");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t}");

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.String toString()>();

        $r56 = new java.lang.StringBuffer;

        specialinvoke $r56.<java.lang.StringBuffer: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t");

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.String toString()>();

        $r61 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r62 = (groovyjarjarantlr.LexerGrammar) $r61;

        $z2 = $r62.<groovyjarjarantlr.LexerGrammar: boolean filterMode>;

        if $z2 == 0 goto label14;

        if r203 != null goto label13;

        $r144 = new java.lang.StringBuffer;

        specialinvoke $r144.<java.lang.StringBuffer: void <init>()>();

        $r145 = virtualinvoke $r144.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r60);

        $r146 = virtualinvoke $r145.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("else {consume(); goto tryAgain;}");

        r206 = virtualinvoke $r146.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label13:
        $r118 = new java.lang.StringBuffer;

        specialinvoke $r118.<java.lang.StringBuffer: void <init>()>();

        $r119 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r60);

        $r120 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("else {");

        $r121 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r122 = virtualinvoke $r121.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t\tcommit();");

        $r123 = virtualinvoke $r122.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r124 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t\ttry {m");

        $r125 = virtualinvoke $r124.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r203);

        $r126 = virtualinvoke $r125.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(false);}");

        $r127 = virtualinvoke $r126.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r128 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t\tcatch(");

        $r129 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r130 = virtualinvoke $r128.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r129);

        $r131 = virtualinvoke $r130.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RecognitionException& e) {");

        $r132 = virtualinvoke $r131.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r133 = virtualinvoke $r132.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t\t\t// catastrophic failure");

        $r134 = virtualinvoke $r133.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r135 = virtualinvoke $r134.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t\t\treportError(e);");

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r137 = virtualinvoke $r136.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t\t\tconsume();");

        $r138 = virtualinvoke $r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r139 = virtualinvoke $r138.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t\t}");

        $r140 = virtualinvoke $r139.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r141 = virtualinvoke $r140.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t\tgoto tryAgain;");

        $r142 = virtualinvoke $r141.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r143 = virtualinvoke $r142.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\t}");

        r206 = virtualinvoke $r143.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label14:
        $r63 = new java.lang.StringBuffer;

        specialinvoke $r63.<java.lang.StringBuffer: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r60);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("else {");

        $r66 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String throwNoViable>;

        $r67 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        r206 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.String toString()>();

     label15:
        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockFinish(groovyjarjarantlr.CppBlockFinishingInfo,java.lang.String)>($r41, r206);

        $r207 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r208 = (groovyjarjarantlr.LexerGrammar) $r207;

        $z11 = $r208.<groovyjarjarantlr.LexerGrammar: boolean filterMode>;

        if $z11 == 0 goto label16;

        if r203 == null goto label16;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("commit();");

     label16:
        $r209 = new java.lang.StringBuffer;

        specialinvoke $r209.<java.lang.StringBuffer: void <init>()>();

        $r210 = virtualinvoke $r209.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ( !_returnToken )");

        $r211 = virtualinvoke $r210.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r212 = virtualinvoke $r211.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\t\tgoto tryAgain; // found SKIP token");

        $r213 = virtualinvoke $r212.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r214 = virtualinvoke $r213.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r214);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_ttype = _returnToken->getType();");

        $r215 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r216 = (groovyjarjarantlr.LexerGrammar) $r215;

        $z12 = virtualinvoke $r216.<groovyjarjarantlr.LexerGrammar: boolean getTestLiterals()>();

        if $z12 == 0 goto label17;

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLiteralsTest()>();

     label17:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_returnToken->setType(_ttype);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("return _returnToken;");

        $i5 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i6 = $i5 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i6;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("catch (");

        $r71 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RecognitionException& e) {");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r74);

        $i7 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i8 = $i7 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i8;

        $r75 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r76 = (groovyjarjarantlr.LexerGrammar) $r75;

        $z3 = $r76.<groovyjarjarantlr.LexerGrammar: boolean filterMode>;

        if $z3 == 0 goto label19;

        if r203 != null goto label18;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("if ( !getCommitToPath() ) {");

        $i27 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i28 = $i27 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i28;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("consume();");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("goto tryAgain;");

        $i29 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i30 = $i29 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i30;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        goto label19;

     label18:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("if ( !getCommitToPath() ) {");

        $i23 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i24 = $i23 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i24;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("rewind(_m);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("resetText();");

        $r107 = new java.lang.StringBuffer;

        specialinvoke $r107.<java.lang.StringBuffer: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("try {m");

        $r109 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r203);

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(false);}");

        $r111 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r111);

        $r112 = new java.lang.StringBuffer;

        specialinvoke $r112.<java.lang.StringBuffer: void <init>()>();

        $r113 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("catch(");

        $r114 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r115 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r114);

        $r116 = virtualinvoke $r115.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RecognitionException& ee) {");

        $r117 = virtualinvoke $r116.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r117);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("\t// horrendous failure: error in filter rule");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("\treportError(ee);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("\tconsume();");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $i25 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i26 = $i25 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i26;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("else");

     label19:
        $z13 = virtualinvoke $r6.<groovyjarjarantlr.RuleBlock: boolean getDefaultErrorHandler()>();

        if $z13 == 0 goto label20;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("{");

        $i19 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i20 = $i19 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i20;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("reportError(e);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("consume();");

        $i21 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i22 = $i21 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i22;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        goto label21;

     label20:
        $i9 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i10 = $i9 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i10;

        $r77 = new java.lang.StringBuffer;

        specialinvoke $r77.<java.lang.StringBuffer: void <init>()>();

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("throw ");

        $r79 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r80 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenStreamRecognitionException(e);");

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r82);

        $i11 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i12 = $i11 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i12;

     label21:
        $i13 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i14 = $i13 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i14;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r83 = new java.lang.StringBuffer;

        specialinvoke $r83.<java.lang.StringBuffer: void <init>()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("catch (");

        $r85 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r86 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r85);

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CharStreamIOException& csie) {");

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r88);

        $r89 = new java.lang.StringBuffer;

        specialinvoke $r89.<java.lang.StringBuffer: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\tthrow ");

        $r91 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r92 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r91);

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenStreamIOException(csie.io);");

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r94);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r95 = new java.lang.StringBuffer;

        specialinvoke $r95.<java.lang.StringBuffer: void <init>()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("catch (");

        $r97 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r98 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r97);

        $r99 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CharStreamException& cse) {");

        $r100 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r100);

        $r101 = new java.lang.StringBuffer;

        specialinvoke $r101.<java.lang.StringBuffer: void <init>()>();

        $r102 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\tthrow ");

        $r103 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r104 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenStreamException(cse.getMessage());");

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r106);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("tryAgain:;");

        $i15 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i16 = $i15 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i16;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $i17 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i18 = $i17 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i18;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        return;
    }

    public void genRule(groovyjarjarantlr.RuleSymbol, boolean, int, java.lang.String)
    {
        java.lang.StringBuffer $r3, $r6, $r7, $r15, $r17, $r18, $r34, $r37, $r38, $r41, $r43, $r44, $r46, $r47, $r51, $r53, $r54, $r57, $r59, $r60, $r65, $r67, $r68, $r78, $r79, $r80, $r91, $r93, $r94, $r98, $r99, $r103, $r104, $r106, $r107, $r109, $r110, $r114, $r115, $r117, $r118, $r120, $r121, $r123, $r124, $r129, $r130, $r131, $r134, $r135, $r136, $r140, $r143, $r144, $r148, $r149, $r152, $r154, $r155, $r160, $r161, $r165, $r167, $r168, $r171, $r173, $r174, $r177, $r179, $r180, $r182, $r183, $r184, $r187, $r188, $r191, $r196, $r197, $r198, $r203, $r204, $r209, $r211, $r225, $r226, $r227, $r228, $r229, $r230, $r231, $r232, $r233, $r234, $r235, $r236, $r237, $r238, $r239, $r240, $r241, $r242, $r243, $r244, $r245, $r246, $r247, $r248, $r249;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, i41, $i42, $i43, $i44, $i46, $i48, $i50, $i52, $i54;
        java.io.PrintStream $r2;
        groovyjarjarantlr.collections.impl.Vector $r221;
        groovyjarjarantlr.Tool $r85, $r208;
        java.lang.String $r5, $r8, $r10, $r12, r14, $r16, $r19, $r20, $r21, $r23, $r30, $r32, $r35, $r36, $r39, $r42, $r45, $r48, $r49, $r52, $r55, $r58, $r61, $r66, $r69, $r76, $r81, $r86, $r92, $r95, $r97, $r100, $r102, $r105, $r108, $r111, $r113, $r116, $r119, $r122, $r125, $r132, $r137, $r138, $r141, $r142, $r145, $r147, $r150, $r153, $r156, $r157, $r159, $r162, $r166, $r169, $r172, $r175, $r178, $r181, $r185, $r189, $r190, $r192, $r193, $r194, $r199, $r201, $r202, $r205, $r206, $r210, $r212, $r213, $r214, r215, r216, r217, $r218, r222;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.LLkGrammarAnalyzer $r28, $r73;
        groovyjarjarantlr.SynPredBlock $r83, $r87, $r88;
        groovyjarjarantlr.RuleEndElement $r72;
        groovyjarjarantlr.Grammar $r22, $r24, $r25, $r27, $r31, $r62, $r63, $r70, $r71, $r84, $r126, $r127, $r163, $r219, $r220, $r223, $r224;
        groovyjarjarantlr.Lookahead $r74;
        groovyjarjarantlr.RuleBlock $r9, $r89;
        groovyjarjarantlr.RuleSymbol r4;
        groovyjarjarantlr.collections.impl.BitSet $r75;
        groovyjarjarantlr.Alternative $r82;
        groovyjarjarantlr.ExceptionSpec $r26;
        java.util.Hashtable $r11;
        groovyjarjarantlr.CppBlockFinishingInfo $r29;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.RuleSymbol;

        z23 := @parameter1: boolean;

        i31 := @parameter2: int;

        r14 := @parameter3: java.lang.String;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label01;

        $z22 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z22 == 0 goto label02;

     label01:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r225 = new java.lang.StringBuffer;

        specialinvoke $r225.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r225.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genRule(");

        $r5 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label02:
        $z24 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: boolean isDefined()>();

        if $z24 != 0 goto label03;

        $r208 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r226 = new java.lang.StringBuffer;

        specialinvoke $r226.<java.lang.StringBuffer: void <init>()>();

        $r209 = virtualinvoke $r226.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("undefined rule: ");

        $r210 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r211 = virtualinvoke $r209.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r210);

        $r212 = virtualinvoke $r211.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r208.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r212);

        return;

     label03:
        $r9 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.RuleBlock getBlock()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule> = $r9;

        $r10 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult> = $r10;

        $r11 = r0.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable declaredASTVariables>;

        virtualinvoke $r11.<java.util.Hashtable: void clear()>();

        z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        if $z2 == 0 goto label04;

        $z21 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: boolean getAutoGen()>();

        if $z21 == 0 goto label04;

        $z25 = 1;

        goto label05;

     label04:
        $z25 = 0;

     label05:
        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = $z25;

        $z26 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: boolean getAutoGen()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = $z26;

        $r213 = r4.<groovyjarjarantlr.RuleSymbol: java.lang.String comment>;

        if $r213 == null goto label06;

        $r206 = r4.<groovyjarjarantlr.RuleSymbol: java.lang.String comment>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>($r206);

     label06:
        $r12 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String returnAction>;

        if $r12 == null goto label07;

        $r227 = new java.lang.StringBuffer;

        specialinvoke $r227.<java.lang.StringBuffer: void <init>()>();

        $r201 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String returnAction>;

        $i38 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: int getLine()>();

        $i39 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: int getColumn()>();

        $r202 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String extractTypeOfAction(java.lang.String,int,int)>($r201, $i38, $i39);

        $r203 = virtualinvoke $r227.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r202);

        $r204 = virtualinvoke $r203.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r205 = virtualinvoke $r204.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r205);

        goto label08;

     label07:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>("void ");

     label08:
        $r228 = new java.lang.StringBuffer;

        specialinvoke $r228.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r228.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        $r16 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r19);

        $r20 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraParams>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r20);

        $r21 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraParams>;

        $i0 = virtualinvoke $r21.<java.lang.String: int length()>();

        if $i0 == 0 goto label09;

        $r199 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String argAction>;

        if $r199 == null goto label09;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>(",");

     label09:
        $r214 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String argAction>;

        if $r214 == null goto label13;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("");

        $i32 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i33 = $i32 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i33;

        r215 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String argAction>;

        r216 = "";

        r217 = "";

        $i34 = virtualinvoke r215.<java.lang.String: int indexOf(int)>(61);

        i40 = $i34;

        $i46 = (int) -1;

        if $i34 == $i46 goto label11;

        i41 = 0;

     label10:
        $i48 = (int) -1;

        if i41 == $i48 goto label12;

        $i50 = (int) -1;

        if i40 == $i50 goto label12;

        $r229 = new java.lang.StringBuffer;

        specialinvoke $r229.<java.lang.StringBuffer: void <init>()>();

        $r187 = virtualinvoke $r229.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r216);

        $r188 = virtualinvoke $r187.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r217);

        $r189 = virtualinvoke r215.<java.lang.String: java.lang.String substring(int,int)>(0, i40);

        $r190 = virtualinvoke $r189.<java.lang.String: java.lang.String trim()>();

        $r191 = virtualinvoke $r188.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r190);

        $r192 = virtualinvoke $r191.<java.lang.StringBuffer: java.lang.String toString()>();

        r216 = $r192;

        r217 = ", ";

        $i35 = virtualinvoke r215.<java.lang.String: int indexOf(int,int)>(44, i40);

        i41 = $i35;

        $i52 = (int) -1;

        if $i35 == $i52 goto label10;

        $i36 = $i35 + 1;

        $r193 = virtualinvoke r215.<java.lang.String: java.lang.String substring(int)>($i36);

        $r194 = virtualinvoke $r193.<java.lang.String: java.lang.String trim()>();

        r215 = $r194;

        $i37 = virtualinvoke $r194.<java.lang.String: int indexOf(int)>(61);

        i40 = $i37;

        $i54 = (int) -1;

        if $i37 != $i54 goto label10;

        $r230 = new java.lang.StringBuffer;

        specialinvoke $r230.<java.lang.StringBuffer: void <init>()>();

        $r196 = virtualinvoke $r230.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r192);

        $r197 = virtualinvoke $r196.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r198 = virtualinvoke $r197.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r194);

        r216 = virtualinvoke $r198.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label10;

     label11:
        r216 = r215;

     label12:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>(r216);

        $i42 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i43 = $i42 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i43;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>(") ");

        goto label14;

     label13:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>(") ");

     label14:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("{");

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        $r22 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r22.<groovyjarjarantlr.Grammar: boolean traceRules>;

        if $z3 == 0 goto label17;

        $r163 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z19 = $r163 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z19 == 0 goto label16;

        $z20 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z20 == 0 goto label15;

        $r231 = new java.lang.StringBuffer;

        specialinvoke $r231.<java.lang.StringBuffer: void <init>()>();

        $r177 = virtualinvoke $r231.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Tracer traceInOut(this,\"");

        $r178 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r179 = virtualinvoke $r177.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r178);

        $r180 = virtualinvoke $r179.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\",");

        $r181 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r182 = virtualinvoke $r180.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r181);

        $r183 = virtualinvoke $r182.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST");

        $r184 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(_t));");

        $r185 = virtualinvoke $r184.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r185);

        goto label17;

     label15:
        $r232 = new java.lang.StringBuffer;

        specialinvoke $r232.<java.lang.StringBuffer: void <init>()>();

        $r171 = virtualinvoke $r232.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Tracer traceInOut(this,\"");

        $r172 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r173 = virtualinvoke $r171.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r172);

        $r174 = virtualinvoke $r173.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\",_t);");

        $r175 = virtualinvoke $r174.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r175);

        goto label17;

     label16:
        $r233 = new java.lang.StringBuffer;

        specialinvoke $r233.<java.lang.StringBuffer: void <init>()>();

        $r165 = virtualinvoke $r233.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Tracer traceInOut(this, \"");

        $r166 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r167 = virtualinvoke $r165.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r166);

        $r168 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\");");

        $r169 = virtualinvoke $r168.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r169);

     label17:
        $r218 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String returnAction>;

        if $r218 == null goto label18;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo(groovyjarjarantlr.GrammarElement)>($r9);

        $r234 = new java.lang.StringBuffer;

        specialinvoke $r234.<java.lang.StringBuffer: void <init>()>();

        $r159 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String returnAction>;

        $r160 = virtualinvoke $r234.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r159);

        $r161 = virtualinvoke $r160.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r162 = virtualinvoke $r161.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r162);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLineNo2()>();

     label18:
        $r23 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonLocalVars>;

        $z4 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z4 != 0 goto label19;

        $r157 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonLocalVars>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r157);

     label19:
        $r24 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z5 = $r24 instanceof groovyjarjarantlr.LexerGrammar;

        if $z5 == 0 goto label22;

        $r138 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $z18 = virtualinvoke $r138.<java.lang.String: boolean equals(java.lang.Object)>("mEOF");

        if $z18 == 0 goto label20;

        $r235 = new java.lang.StringBuffer;

        specialinvoke $r235.<java.lang.StringBuffer: void <init>()>();

        $r152 = virtualinvoke $r235.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_ttype = ");

        $r153 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r154 = virtualinvoke $r152.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r153);

        $r155 = virtualinvoke $r154.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token::EOF_TYPE;");

        $r156 = virtualinvoke $r155.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r156);

        goto label21;

     label20:
        $r236 = new java.lang.StringBuffer;

        specialinvoke $r236.<java.lang.StringBuffer: void <init>()>();

        $r140 = virtualinvoke $r236.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_ttype = ");

        $r141 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r142 = virtualinvoke $r141.<java.lang.String: java.lang.String substring(int)>(1);

        $r143 = virtualinvoke $r140.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r142);

        $r144 = virtualinvoke $r143.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r145 = virtualinvoke $r144.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r145);

     label21:
        $r237 = new java.lang.StringBuffer;

        specialinvoke $r237.<java.lang.StringBuffer: void <init>()>();

        $r147 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceStd>;

        $r148 = virtualinvoke $r237.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147);

        $r149 = virtualinvoke $r148.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("string::size_type _saveIndex;");

        $r150 = virtualinvoke $r149.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r150);

     label22:
        $r219 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z27 = $r219.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z27 == 0 goto label24;

        $r126 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z16 = $r126 instanceof groovyjarjarantlr.ParserGrammar;

        if $z16 == 0 goto label23;

        $r238 = new java.lang.StringBuffer;

        specialinvoke $r238.<java.lang.StringBuffer: void <init>()>();

        $r134 = virtualinvoke $r238.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("fireEnterRule(");

        $r135 = virtualinvoke $r134.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i31);

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",0);");

        $r137 = virtualinvoke $r136.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r137);

        goto label24;

     label23:
        $r127 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z17 = $r127 instanceof groovyjarjarantlr.LexerGrammar;

        if $z17 == 0 goto label24;

        $r239 = new java.lang.StringBuffer;

        specialinvoke $r239.<java.lang.StringBuffer: void <init>()>();

        $r129 = virtualinvoke $r239.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("fireEnterRule(");

        $r130 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i31);

        $r131 = virtualinvoke $r130.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",_ttype);");

        $r132 = virtualinvoke $r131.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r132);

     label24:
        $r220 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z28 = $r220 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z28 == 0 goto label25;

        $r240 = new java.lang.StringBuffer;

        specialinvoke $r240.<java.lang.StringBuffer: void <init>()>();

        $r113 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r114 = virtualinvoke $r240.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r113);

        $r115 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r116 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r117 = virtualinvoke $r115.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r116);

        $r118 = virtualinvoke $r117.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST_in = (_t == ");

        $r119 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r120 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r119);

        $r121 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(ASTNULL)) ? ");

        $r122 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r123 = virtualinvoke $r121.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r122);

        $r124 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : _t;");

        $r125 = virtualinvoke $r124.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r125);

     label25:
        $r25 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z6 = $r25.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z6 == 0 goto label26;

        $r241 = new java.lang.StringBuffer;

        specialinvoke $r241.<java.lang.StringBuffer: void <init>()>();

        $r91 = virtualinvoke $r241.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("returnAST = ");

        $r92 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r93 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r92);

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r95);

        $r242 = new java.lang.StringBuffer;

        specialinvoke $r242.<java.lang.StringBuffer: void <init>()>();

        $r97 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r98 = virtualinvoke $r242.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r97);

        $r99 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ASTPair currentAST;");

        $r100 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r100);

        $r243 = new java.lang.StringBuffer;

        specialinvoke $r243.<java.lang.StringBuffer: void <init>()>();

        $r102 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r103 = virtualinvoke $r243.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r102);

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r105 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r106 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r105);

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST = ");

        $r108 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r109 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r108);

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r111 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r111);

     label26:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockPreamble(groovyjarjarantlr.AlternativeBlock)>($r9);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockInitAction(groovyjarjarantlr.AlternativeBlock)>($r9);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r26 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.ExceptionSpec findExceptionSpec(java.lang.String)>("");

        if $r26 != null goto label27;

        $z15 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: boolean getDefaultErrorHandler()>();

        if $z15 == 0 goto label28;

     label27:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("try {      // for error handling");

        $i3 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i4 = $i3 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i4;

     label28:
        $r221 = $r9.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.collections.impl.Vector alternatives>;

        $i44 = virtualinvoke $r221.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if $i44 != 1 goto label31;

        $r82 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.Alternative getAlternativeAt(int)>(0);

        r222 = $r82.<groovyjarjarantlr.Alternative: java.lang.String semPred>;

        if r222 == null goto label29;

        $r89 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $i30 = $r89.<groovyjarjarantlr.RuleBlock: int line>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genSemPred(java.lang.String,int)>(r222, $i30);

     label29:
        $r83 = $r82.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        if $r83 == null goto label30;

        $r85 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r84 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r86 = virtualinvoke $r84.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $r87 = $r82.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        $i28 = virtualinvoke $r87.<groovyjarjarantlr.SynPredBlock: int getLine()>();

        $r88 = $r82.<groovyjarjarantlr.Alternative: groovyjarjarantlr.SynPredBlock synPred>;

        $i29 = virtualinvoke $r88.<groovyjarjarantlr.SynPredBlock: int getColumn()>();

        virtualinvoke $r85.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>("Syntactic predicate ignored for single alternative", $r86, $i28, $i29);

     label30:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genAlt(groovyjarjarantlr.Alternative,groovyjarjarantlr.AlternativeBlock)>($r82, $r9);

        goto label32;

     label31:
        $r27 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r28 = $r27.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        interfaceinvoke $r28.<groovyjarjarantlr.LLkGrammarAnalyzer: boolean deterministic(groovyjarjarantlr.AlternativeBlock)>($r9);

        $r29 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CppBlockFinishingInfo genCommonBlock(groovyjarjarantlr.AlternativeBlock,boolean)>($r9, 0);

        $r30 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String throwNoViable>;

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genBlockFinish(groovyjarjarantlr.CppBlockFinishingInfo,java.lang.String)>($r29, $r30);

     label32:
        if $r26 != null goto label33;

        $z14 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: boolean getDefaultErrorHandler()>();

        if $z14 == 0 goto label34;

     label33:
        $i5 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i6 = $i5 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i6;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

     label34:
        if $r26 == null goto label35;

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genErrorHandler(groovyjarjarantlr.ExceptionSpec)>($r26);

        goto label40;

     label35:
        $z7 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: boolean getDefaultErrorHandler()>();

        if $z7 == 0 goto label40;

        $r244 = new java.lang.StringBuffer;

        specialinvoke $r244.<java.lang.StringBuffer: void <init>()>();

        $r57 = virtualinvoke $r244.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("catch (");

        $r58 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String exceptionThrown>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("& ex) {");

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r61);

        $i11 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i12 = $i11 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i12;

        $r62 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z11 = $r62.<groovyjarjarantlr.Grammar: boolean hasSyntacticPredicate>;

        if $z11 == 0 goto label36;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("if( inputState->guessing == 0 ) {");

        $i26 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i27 = $i26 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i27;

     label36:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("reportError(ex);");

        $r63 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z12 = $r63 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z12 != 0 goto label37;

        $r71 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r73 = $r71.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        $r72 = $r9.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.RuleEndElement endNode>;

        $r74 = interfaceinvoke $r73.<groovyjarjarantlr.LLkGrammarAnalyzer: groovyjarjarantlr.Lookahead FOLLOW(int,groovyjarjarantlr.RuleEndElement)>(1, $r72);

        $r75 = $r74.<groovyjarjarantlr.Lookahead: groovyjarjarantlr.collections.impl.BitSet fset>;

        $i25 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: int markBitsetForGen(groovyjarjarantlr.collections.impl.BitSet)>($r75);

        $r76 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getBitsetName(int)>($i25);

        $r245 = new java.lang.StringBuffer;

        specialinvoke $r245.<java.lang.StringBuffer: void <init>()>();

        $r78 = virtualinvoke $r245.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("recover(ex,");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r76);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r81);

        goto label38;

     label37:
        $r246 = new java.lang.StringBuffer;

        specialinvoke $r246.<java.lang.StringBuffer: void <init>()>();

        $r65 = virtualinvoke $r246.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ( _t != ");

        $r66 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit>;

        $r67 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r69);

        $i13 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i14 = $i13 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i14;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = _t->getNextSibling();");

        $i15 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i16 = $i15 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i16;

     label38:
        $r70 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z13 = $r70.<groovyjarjarantlr.Grammar: boolean hasSyntacticPredicate>;

        if $z13 == 0 goto label39;

        $i19 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i20 = $i19 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i20;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("} else {");

        $i21 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i22 = $i21 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i22;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("throw;");

        $i23 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i24 = $i23 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i24;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

     label39:
        $i17 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i18 = $i17 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i18;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

     label40:
        $r223 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z29 = $r223.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z29 == 0 goto label41;

        $r247 = new java.lang.StringBuffer;

        specialinvoke $r247.<java.lang.StringBuffer: void <init>()>();

        $r51 = virtualinvoke $r247.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("returnAST = ");

        $r52 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST;");

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r55);

     label41:
        $r31 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z8 = $r31 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z8 == 0 goto label42;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_retTree = _t;");

     label42:
        $z9 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: boolean getTestLiterals()>();

        if $z9 == 0 goto label44;

        $r49 = r4.<groovyjarjarantlr.RuleSymbol: java.lang.String access>;

        $z10 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>("protected");

        if $z10 == 0 goto label43;

        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLiteralsTestForPartialToken()>();

        goto label44;

     label43:
        specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genLiteralsTest()>();

     label44:
        $r224 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z30 = $r224 instanceof groovyjarjarantlr.LexerGrammar;

        if $z30 == 0 goto label45;

        $r248 = new java.lang.StringBuffer;

        specialinvoke $r248.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r248.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ( _createToken && _token==");

        $r42 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nullToken && _ttype!=");

        $r45 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token::SKIP ) {");

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r48);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("   _token = makeToken(_ttype);");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("   _token->setText(text.substr(_begin, text.length()-_begin));");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_returnToken = _token;");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_saveIndex=0;");

     label45:
        $r32 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String returnAction>;

        if $r32 == null goto label46;

        $r249 = new java.lang.StringBuffer;

        specialinvoke $r249.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r249.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r35 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String returnAction>;

        $i9 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: int getLine()>();

        $i10 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: int getColumn()>();

        $r36 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String extractIdOfAction(java.lang.String,int,int)>($r35, $i9, $i10);

        $r37 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r39);

     label46:
        $i7 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i8 = $i7 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i8;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = z1;

        return;
    }

    public void genRuleHeader(groovyjarjarantlr.RuleSymbol, boolean)
    {
        boolean $z0, z1, $z2, $z3, $z4, z5, $z6, $z7, $z8;
        groovyjarjarantlr.RuleBlock $r9;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.Tool $r27;
        java.lang.StringBuffer $r1, $r3, $r6, $r7, $r11, $r13, $r14, $r20, $r23, $r24, $r26, $r28, $r30, $r32, $r34, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r5, $r8, $r10, $r12, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r25, $r29, $r31, $r33, $r36, $r37, $r38;
        java.io.PrintStream $r2;
        groovyjarjarantlr.RuleSymbol r4;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.RuleSymbol;

        z5 := @parameter1: boolean;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 1;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label01;

        $z4 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z4 == 0 goto label02;

     label01:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("genRuleHeader(");

        $r5 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label02:
        $z6 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: boolean isDefined()>();

        if $z6 != 0 goto label03;

        $r27 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("undefined rule: ");

        $r29 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r27.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r31);

        return;

     label03:
        $r9 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.RuleBlock getBlock()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule> = $r9;

        $r10 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String currentASTResult> = $r10;

        z1 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        $z2 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST>;

        if $z2 == 0 goto label04;

        $z3 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: boolean getAutoGen()>();

        if $z3 == 0 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = $z7;

        $z8 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: boolean getAutoGen()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean saveText> = $z8;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = r4.<groovyjarjarantlr.RuleSymbol: java.lang.String access>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r36);

        $r37 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String returnAction>;

        if $r37 == null goto label06;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String returnAction>;

        $i7 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: int getLine()>();

        $i8 = virtualinvoke $r9.<groovyjarjarantlr.RuleBlock: int getColumn()>();

        $r22 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String extractTypeOfAction(java.lang.String,int,int)>($r21, $i7, $i8);

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r25);

        goto label07;

     label06:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>("void ");

     label07:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke r4.<groovyjarjarantlr.RuleSymbol: java.lang.String getId()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r15);

        $r16 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraParams>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r16);

        $r17 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraParams>;

        $i0 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i0 == 0 goto label08;

        $r19 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String argAction>;

        if $r19 == null goto label08;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>(",");

     label08:
        $r38 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String argAction>;

        if $r38 == null goto label09;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>("");

        $i3 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i4 = $i3 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i4;

        $r18 = $r9.<groovyjarjarantlr.RuleBlock: java.lang.String argAction>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r18);

        $i5 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i6 = $i5 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i6;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>(")");

        goto label10;

     label09:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>(")");

     label10:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>(";");

        $i1 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i2 = $i1 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i2;

        r0.<groovyjarjarantlr.CppCodeGenerator: boolean genAST> = z1;

        return;
    }

    private void GenRuleInvocation(groovyjarjarantlr.RuleRefElement)
    {
        groovyjarjarantlr.Grammar $r7, $r31, $r40, $r47;
        groovyjarjarantlr.RuleRefElement r2;
        boolean $z0, $z1, $z2;
        groovyjarjarantlr.RuleBlock $r9, $r18, $r45;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.GrammarSymbol $r42;
        groovyjarjarantlr.Tool $r13, $r25;
        java.lang.StringBuffer $r1, $r4, $r5, $r12, $r14, $r16, $r17, $r20, $r21, $r22, $r24, $r26, $r28, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r3, $r6, $r10, $r11, $r15, $r19, $r23, $r27, $r30, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r44, $r46;
        groovyjarjarantlr.ActionTransInfo $r8;
        groovyjarjarantlr.RuleSymbol $r43;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r2 := @parameter0: groovyjarjarantlr.RuleRefElement;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = r2.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r6);

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r7 instanceof groovyjarjarantlr.LexerGrammar;

        if $z0 == 0 goto label4;

        $r35 = virtualinvoke r2.<groovyjarjarantlr.RuleRefElement: java.lang.String getLabel()>();

        if $r35 == null goto label1;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>("true");

        goto label2;

     label1:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>("false");

     label2:
        $r36 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraArgs>;

        $i4 = virtualinvoke $r36.<java.lang.String: int length()>();

        if $i4 != 0 goto label3;

        $r37 = r2.<groovyjarjarantlr.RuleRefElement: java.lang.String args>;

        if $r37 == null goto label4;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>(",");

     label4:
        $r38 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraArgs>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r38);

        $r39 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraArgs>;

        $i5 = virtualinvoke $r39.<java.lang.String: int length()>();

        if $i5 == 0 goto label5;

        $r34 = r2.<groovyjarjarantlr.RuleRefElement: java.lang.String args>;

        if $r34 == null goto label5;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>(",");

     label5:
        $r40 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r41 = r2.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r42 = virtualinvoke $r40.<groovyjarjarantlr.Grammar: groovyjarjarantlr.GrammarSymbol getSymbol(java.lang.String)>($r41);

        $r43 = (groovyjarjarantlr.RuleSymbol) $r42;

        $r44 = r2.<groovyjarjarantlr.RuleRefElement: java.lang.String args>;

        if $r44 == null goto label8;

        $r8 = new groovyjarjarantlr.ActionTransInfo;

        specialinvoke $r8.<groovyjarjarantlr.ActionTransInfo: void <init>()>();

        $r10 = r2.<groovyjarjarantlr.RuleRefElement: java.lang.String args>;

        $i0 = r2.<groovyjarjarantlr.RuleRefElement: int line>;

        $r9 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r11 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>($r10, $i0, $r9, $r8);

        $z1 = $r8.<groovyjarjarantlr.ActionTransInfo: boolean assignToRoot>;

        if $z1 != 0 goto label6;

        $r33 = $r8.<groovyjarjarantlr.ActionTransInfo: java.lang.String refRuleRoot>;

        if $r33 == null goto label7;

     label6:
        $r13 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Arguments of rule reference \'");

        $r15 = r2.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' cannot set or ref #");

        $r18 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r19 = virtualinvoke $r18.<groovyjarjarantlr.RuleBlock: java.lang.String getRuleName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" on line ");

        $i1 = virtualinvoke r2.<groovyjarjarantlr.RuleRefElement: int getLine()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r23);

     label7:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _print(java.lang.String)>($r11);

        $r45 = $r43.<groovyjarjarantlr.RuleSymbol: groovyjarjarantlr.RuleBlock block>;

        $r46 = $r45.<groovyjarjarantlr.RuleBlock: java.lang.String argAction>;

        if $r46 != null goto label8;

        $r25 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Rule \'");

        $r27 = r2.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' accepts no arguments");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        $r31 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r32 = virtualinvoke $r31.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i2 = virtualinvoke r2.<groovyjarjarantlr.RuleRefElement: int getLine()>();

        $i3 = virtualinvoke r2.<groovyjarjarantlr.RuleRefElement: int getColumn()>();

        virtualinvoke $r25.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>($r30, $r32, $i2, $i3);

     label8:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>(");");

        $r47 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z2 = $r47 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z2 == 0 goto label9;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("_t = _retTree;");

     label9:
        return;
    }

    protected void genSemPred(java.lang.String, int)
    {
        groovyjarjarantlr.CharFormatter $r4;
        groovyjarjarantlr.Grammar $r6, $r7, $r14;
        boolean $z0, $z1, $z2;
        groovyjarjarantlr.RuleBlock $r2;
        groovyjarjarantlr.CppCodeGenerator r1;
        java.lang.StringBuffer $r8, $r9, $r10, $r11, $r12, $r13, $r17, $r18, $r19, $r20, $r22, $r23, $r25, $r26, $r27, $r28;
        int i0, $i1, $i2, $i3, $i4, $i5;
        groovyjarjarantlr.ActionTransInfo $r0;
        java.lang.String $r3, $r5, r15, r16, $r21, $r24, $r29;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new groovyjarjarantlr.ActionTransInfo;

        specialinvoke $r0.<groovyjarjarantlr.ActionTransInfo: void <init>()>();

        $r2 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r3 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String processActionForSpecialSymbols(java.lang.String,int,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.ActionTransInfo)>(r15, i0, $r2, $r0);

        r16 = $r3;

        $r4 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter>;

        $r5 = interfaceinvoke $r4.<groovyjarjarantlr.CharFormatter: java.lang.String escapeString(java.lang.String)>($r3);

        $r6 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r6.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z0 == 0 goto label2;

        $r7 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r7 instanceof groovyjarjarantlr.ParserGrammar;

        if $z1 != 0 goto label1;

        $r14 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z2 = $r14 instanceof groovyjarjarantlr.LexerGrammar;

        if $z2 == 0 goto label2;

     label1:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("fireSemanticPredicateEvaluated(antlr.debug.SemanticPredicateEvent.VALIDATING,");

        $i1 = virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: int addSemPred(java.lang.String)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if (!(");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("))");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r21);

        $i2 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i3 = $i2 + 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i3;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("throw ");

        $r24 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SemanticException(\"");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\");");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r29);

        $i4 = r1.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i5 = $i4 - 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i5;

        return;
    }

    protected void genSemPredMap(java.lang.String)
    {
        java.util.Enumeration $r2;
        java.lang.StringBuffer $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13;
        int $i0, $i1, $i2, $i3;
        java.lang.String r5, $r8, $r14;
        groovyjarjarantlr.collections.impl.Vector $r1;
        boolean $z0;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.Object $r11;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector semPreds>;

        $r2 = virtualinvoke $r1.<groovyjarjarantlr.collections.impl.Vector: java.util.Enumeration elements()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("const char* ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_semPredNames[] = {");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r8);

        $i0 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i1 = $i0 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i1;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r11 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\",");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r14);

        goto label1;

     label2:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("0");

        $i2 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i3 = $i2 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i3;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

        return;
    }

    protected void genSynPred(groovyjarjarantlr.SynPredBlock, java.lang.String)
    {
        groovyjarjarantlr.SynPredBlock r4;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r20, $r21, $r22, $r23, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r36, $r40, $r42, $r43, $r44, $r45, $r47, $r48, $r49, $r50, $r52, $r53, $r54, $r55, $r58, $r59, $r61, $r62, $r64, $r65, $r66, $r67, $r70, $r71, $r72, $r73;
        java.lang.String $r7, r8, $r13, $r18, $r24, $r31, $r37, $r41, $r46, $r51, $r56, $r60, $r63, $r68, $r74;
        groovyjarjarantlr.Grammar $r19, $r25, $r26, $r32, $r38, $r39, $r57, $r69;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        groovyjarjarantlr.CppCodeGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.io.PrintStream $r2;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r4 := @parameter0: groovyjarjarantlr.SynPredBlock;

        r8 := @parameter1: java.lang.String;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CODE_GENERATOR>;

        if $z0 != 0 goto label01;

        $z7 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean DEBUG_CPP_CODE_GENERATOR>;

        if $z7 == 0 goto label02;

     label01:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("gen=>(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label02:
        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("bool synPredMatched");

        $i6 = r4.<groovyjarjarantlr.SynPredBlock: int ID>;

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = false;");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r51);

        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if (");

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") {");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r56);

        $i7 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i8 = $i7 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i8;

        $r57 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z8 = $r57 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z8 == 0 goto label03;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r41 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementType>;

        $r42 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" __t");

        $i5 = r4.<groovyjarjarantlr.SynPredBlock: int ID>;

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = _t;");

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r46);

        goto label04;

     label03:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("int _m");

        $i0 = r4.<groovyjarjarantlr.SynPredBlock: int ID>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = mark();");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r13);

     label04:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("synPredMatched");

        $i1 = r4.<groovyjarjarantlr.SynPredBlock: int ID>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = true;");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r18);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("inputState->guessing++;");

        $r19 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r19.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z1 == 0 goto label06;

        $r38 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z5 = $r38 instanceof groovyjarjarantlr.ParserGrammar;

        if $z5 != 0 goto label05;

        $r39 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z6 = $r39 instanceof groovyjarjarantlr.LexerGrammar;

        if $z6 == 0 goto label06;

     label05:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("fireSyntacticPredicateStarted();");

     label06:
        $i9 = r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        $i10 = $i9 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel> = $i10;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("try {");

        $i11 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i12 = $i11 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i12;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void gen(groovyjarjarantlr.AlternativeBlock)>(r4);

        $i13 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i14 = $i13 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i14;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("catch (");

        $r60 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String exceptionThrown>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("& pe) {");

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r63);

        $i15 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i16 = $i15 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i16;

        $r64 = new java.lang.StringBuffer;

        specialinvoke $r64.<java.lang.StringBuffer: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("synPredMatched");

        $i17 = r4.<groovyjarjarantlr.SynPredBlock: int ID>;

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i17);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = false;");

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r68);

        $i18 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i19 = $i18 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i19;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r69 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z9 = $r69 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z9 == 0 goto label07;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_t = __t");

        $i4 = r4.<groovyjarjarantlr.SynPredBlock: int ID>;

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r37);

        goto label08;

     label07:
        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rewind(_m");

        $i2 = r4.<groovyjarjarantlr.SynPredBlock: int ID>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r24);

     label08:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("inputState->guessing--;");

        $r25 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z2 = $r25.<groovyjarjarantlr.Grammar: boolean debuggingOutput>;

        if $z2 == 0 goto label10;

        $r26 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r26 instanceof groovyjarjarantlr.ParserGrammar;

        if $z3 != 0 goto label09;

        $r32 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r32 instanceof groovyjarjarantlr.LexerGrammar;

        if $z4 == 0 goto label10;

     label09:
        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if (synPredMatched");

        $i3 = r4.<groovyjarjarantlr.SynPredBlock: int ID>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r31);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("  fireSyntacticPredicateSucceeded();");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("else");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("  fireSyntacticPredicateFailed();");

     label10:
        $i20 = r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel>;

        $i21 = $i20 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int syntacticPredLevel> = $i21;

        $i22 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i23 = $i22 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i23;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("}");

        $r70 = new java.lang.StringBuffer;

        specialinvoke $r70.<java.lang.StringBuffer: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ( synPredMatched");

        $i24 = r4.<groovyjarjarantlr.SynPredBlock: int ID>;

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i24);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ) {");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r74);

        return;
    }

    public void genTokenStrings(java.lang.String)
    {
        groovyjarjarantlr.Grammar $r7, $r11;
        groovyjarjarantlr.CharFormatter $r22;
        groovyjarjarantlr.TokenManager $r8, $r12;
        groovyjarjarantlr.collections.impl.Vector $r9;
        boolean $z0, $z1;
        groovyjarjarantlr.TokenSymbol $r13;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r16, $r17, $r19, $r20;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r3, $r6, $r14, $r15, $r18, r21, $r23;
        java.lang.Object $r10;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("const char* ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("tokenNames[] = {");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r6);

        $i0 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i1 = $i0 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i1;

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r8 = $r7.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r9 = interfaceinvoke $r8.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.collections.impl.Vector getVocabulary()>();

        i5 = 0;

     label1:
        $i2 = virtualinvoke $r9.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i5 >= $i2 goto label4;

        $r10 = virtualinvoke $r9.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i5);

        r21 = (java.lang.String) $r10;

        if r21 != null goto label2;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i5);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $z0 = virtualinvoke r21.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r21.<java.lang.String: boolean startsWith(java.lang.String)>("<");

        if $z1 != 0 goto label3;

        $r11 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r12 = $r11.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r13 = interfaceinvoke $r12.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.TokenSymbol getTokenSymbol(java.lang.String)>(r21);

        if $r13 == null goto label3;

        $r14 = virtualinvoke $r13.<groovyjarjarantlr.TokenSymbol: java.lang.String getParaphrase()>();

        if $r14 == null goto label3;

        $r15 = virtualinvoke $r13.<groovyjarjarantlr.TokenSymbol: java.lang.String getParaphrase()>();

        r21 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r15, "\"", "\"");

     label3:
        $r22 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter>;

        $r23 = interfaceinvoke $r22.<groovyjarjarantlr.CharFormatter: java.lang.String literalString(java.lang.String)>(r21);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void print(java.lang.String)>($r23);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void _println(java.lang.String)>(",");

        i5 = i5 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("0");

        $i3 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i4 = $i3 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i4;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

        return;
    }

    protected void genTokenTypes(groovyjarjarantlr.TokenManager) throws java.io.IOException
    {
        groovyjarjarantlr.TokenManager r2;
        groovyjarjarantlr.collections.impl.Vector $r38;
        java.io.PrintWriter $r11, $r48, $r49, $r88;
        groovyjarjarantlr.Tool $r10, $r83;
        java.lang.StringBuffer $r1, $r4, $r6, $r7, $r12, $r13, $r15, $r17, $r18, $r20, $r21, $r23, $r25, $r26, $r30, $r31, $r33, $r35, $r36, $r40, $r41, $r43, $r45, $r46, $r53, $r54, $r55, $r56, $r57, $r63, $r64, $r65, $r66, $r67, $r69, $r70, $r71, $r72, $r73, $r75, $r77, $r78, $r79, $r80, $r82, $r84, $r85, $r86;
        java.lang.String $r3, $r5, $r8, $r9, $r14, $r16, $r19, $r22, $r24, $r27, $r29, $r32, $r34, $r37, $r42, $r44, $r47, r52, $r58, $r61, $r62, $r68, $r74, $r76, $r81, $r87;
        groovyjarjarantlr.StringLiteralSymbol r60;
        boolean $z0, $z1;
        groovyjarjarantlr.TokenSymbol $r59;
        groovyjarjarantlr.CppCodeGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        groovyjarjarantlr.NameSpace $r28, $r39, $r50, $r89;
        java.lang.Object $r51;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r2 := @parameter0: groovyjarjarantlr.TokenManager;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = interfaceinvoke r2.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".hpp");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile> = $r8;

        r0.<groovyjarjarantlr.CppCodeGenerator: int outputLine> = 1;

        $r10 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r9 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        $r11 = virtualinvoke $r10.<groovyjarjarantlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>($r9);

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = $r11;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = 0;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#ifndef INC_");

        $r14 = interfaceinvoke r2.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#define INC_");

        $r22 = interfaceinvoke r2.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r27);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        $r28 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r28 == null goto label1;

        $r89 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r88 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r89.<groovyjarjarantlr.NameSpace: void emitDeclarations(java.io.PrintWriter)>($r88);

     label1:
        $r29 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String outputFile>;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void genHeader(java.lang.String)>($r29);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#ifndef CUSTOM_API");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("# define CUSTOM_API");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#endif");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#ifdef __cplusplus");

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("struct CUSTOM_API ");

        $r32 = interfaceinvoke r2.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r37);

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#endif");

        $i0 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i1 = $i0 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i1;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("enum {");

        $i2 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i3 = $i2 + 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i3;

        $r38 = interfaceinvoke r2.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.collections.impl.Vector getVocabulary()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("EOF_ = 1,");

        i8 = 4;

     label2:
        $i9 = virtualinvoke $r38.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i8 >= $i9 goto label8;

        $r51 = virtualinvoke $r38.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i8);

        r52 = (java.lang.String) $r51;

        if r52 == null goto label7;

        $z0 = virtualinvoke r52.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label6;

        $r59 = interfaceinvoke r2.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.TokenSymbol getTokenSymbol(java.lang.String)>(r52);

        r60 = (groovyjarjarantlr.StringLiteralSymbol) $r59;

        if r60 != null goto label3;

        $r83 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r82 = new java.lang.StringBuffer;

        specialinvoke $r82.<java.lang.StringBuffer: void <init>()>();

        $r84 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("String literal ");

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r52);

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not in symbol table");

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r83.<groovyjarjarantlr.Tool: void panic(java.lang.String)>($r87);

        goto label7;

     label3:
        $r61 = r60.<groovyjarjarantlr.StringLiteralSymbol: java.lang.String label>;

        if $r61 == null goto label4;

        $r75 = new java.lang.StringBuffer;

        specialinvoke $r75.<java.lang.StringBuffer: void <init>()>();

        $r76 = r60.<groovyjarjarantlr.StringLiteralSymbol: java.lang.String label>;

        $r77 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i8);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r81);

        goto label7;

     label4:
        $r62 = specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String mangleLiteral(java.lang.String)>(r52);

        if $r62 == null goto label5;

        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i8);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r74);

        r60.<groovyjarjarantlr.StringLiteralSymbol: java.lang.String label> = $r62;

        goto label7;

     label5:
        $r63 = new java.lang.StringBuffer;

        specialinvoke $r63.<java.lang.StringBuffer: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("// ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r52);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i8);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r68);

        goto label7;

     label6:
        $z1 = virtualinvoke r52.<java.lang.String: boolean startsWith(java.lang.String)>("<");

        if $z1 != 0 goto label7;

        $r53 = new java.lang.StringBuffer;

        specialinvoke $r53.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r52);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i8);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r58);

     label7:
        i8 = i8 + 1;

        goto label2;

     label8:
        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("NULL_TREE_LOOKAHEAD = 3");

        $i4 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i5 = $i4 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i5;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

        $i6 = r0.<groovyjarjarantlr.CppCodeGenerator: int tabs>;

        $i7 = $i6 - 1;

        r0.<groovyjarjarantlr.CppCodeGenerator: int tabs> = $i7;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#ifdef __cplusplus");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("};");

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>("#endif");

        $r39 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        if $r39 == null goto label9;

        $r50 = <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace>;

        $r49 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r50.<groovyjarjarantlr.NameSpace: void emitClosures(java.io.PrintWriter)>($r49);

     label9:
        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#endif /*INC_");

        $r42 = interfaceinvoke r2.<groovyjarjarantlr.TokenManager: java.lang.String getName()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r44 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_hpp_*/");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void println(java.lang.String)>($r47);

        $r48 = r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput>;

        virtualinvoke $r48.<java.io.PrintWriter: void close()>();

        r0.<groovyjarjarantlr.CppCodeGenerator: java.io.PrintWriter currentOutput> = null;

        virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: void exitIfError()>();

        return;
    }

    public java.lang.String processStringForASTConstructor(java.lang.String)
    {
        groovyjarjarantlr.Grammar $r2, $r3, $r12;
        java.lang.StringBuffer $r5, $r7, $r8, $r9, $r10;
        java.lang.String r1, $r6, $r11;
        groovyjarjarantlr.TokenManager $r4;
        boolean $z0, $z1, $z2, $z3;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z0 == 0 goto label2;

        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r2 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z1 != 0 goto label1;

        $r12 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r12 instanceof groovyjarjarantlr.ParserGrammar;

        if $z3 == 0 goto label2;

     label1:
        $r3 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r4 = $r3.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $z2 = interfaceinvoke $r4.<groovyjarjarantlr.TokenManager: boolean tokenDefined(java.lang.String)>(r1);

        if $z2 != 0 goto label2;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST(");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;

     label2:
        return r1;
    }

    public java.lang.String getASTCreateString(groovyjarjarantlr.collections.impl.Vector)
    {
        java.lang.StringBuffer $r1, $r2, $r5, $r6, $r8, $r9, $r10, $r11, $r14, $r15, $r17, $r18;
        int $i0, $i1, $i2, i3;
        java.lang.String $r4, $r7, $r12, $r13, $r19;
        groovyjarjarantlr.collections.impl.Vector r0;
        groovyjarjarantlr.CppCodeGenerator r3;
        java.lang.Object $r16;

        r3 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.collections.impl.Vector;

        $i0 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = r3.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(astFactory->make((new ");

        $r7 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ASTArray(");

        $i1 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("))");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        i3 = 0;

     label2:
        $i2 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i3 >= $i2 goto label3;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("->add(");

        $r16 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i3);

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        i3 = i3 + 1;

        goto label2;

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("))");

        $r13 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;
    }

    public java.lang.String getASTCreateString(groovyjarjarantlr.GrammarAtom, java.lang.String)
    {
        groovyjarjarantlr.TokenManager $r5, $r15;
        groovyjarjarantlr.collections.impl.Vector $r18, $r19, $r22, $r45;
        groovyjarjarantlr.Tool $r25, $r33;
        java.lang.StringBuffer $r7, $r9, $r10, $r11, $r12, $r26, $r28, $r34, $r35, $r36, $r38, $r39, $r40, $r41, $r49, $r50, $r51, $r54, $r55, $r56, $r58, $r59, $r60, $r61, $r62;
        java.lang.String r1, $r8, $r13, $r16, $r17, $r21, $r23, $r27, $r29, $r31, $r37, $r42, $r44, $r46, r47, $r52, $r57;
        groovyjarjarantlr.GrammarAtom r0;
        groovyjarjarantlr.Grammar $r3, $r4, $r14, $r30, $r43;
        boolean $z0, $z1, $z2, $z3, z4;
        groovyjarjarantlr.CppCodeGenerator r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        java.lang.Object $r20;

        r2 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.GrammarAtom;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label4;

        $r17 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        if $r17 == null goto label4;

        $r18 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes>;

        $i2 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: int getType()>();

        virtualinvoke $r18.<groovyjarjarantlr.collections.impl.Vector: void ensureCapacity(int)>($i2);

        $r19 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes>;

        $i3 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: int getType()>();

        $r20 = virtualinvoke $r19.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>($i3);

        r47 = (java.lang.String) $r20;

        if r47 != null goto label1;

        $r45 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes>;

        $r46 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        $i9 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: int getType()>();

        virtualinvoke $r45.<groovyjarjarantlr.collections.impl.Vector: void setElementAt(java.lang.Object,int)>($r46, $i9);

        goto label3;

     label1:
        $r21 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        $z3 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z3 != 0 goto label2;

        $r25 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attempt to redefine AST type for ");

        $r27 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: java.lang.String getText()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        $r30 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r31 = virtualinvoke $r30.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i5 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: int getLine()>();

        $i6 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: int getColumn()>();

        virtualinvoke $r25.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>($r29, $r31, $i5, $i6);

        $r33 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" from \"");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r47);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" to \"");

        $r37 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" sticking to \"");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r47);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        $r43 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r44 = virtualinvoke $r43.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        $i7 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: int getLine()>();

        $i8 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: int getColumn()>();

        virtualinvoke $r33.<groovyjarjarantlr.Tool: void warning(java.lang.String,java.lang.String,int,int)>($r42, $r44, $i7, $i8);

        goto label3;

     label2:
        $r22 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.collections.impl.Vector astTypes>;

        $r23 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: java.lang.String getASTNodeType()>();

        $i4 = virtualinvoke r0.<groovyjarjarantlr.GrammarAtom: int getType()>();

        virtualinvoke $r22.<groovyjarjarantlr.collections.impl.Vector: void setElementAt(java.lang.Object,int)>($r23, $i4);

     label3:
        $r60 = new java.lang.StringBuffer;

        specialinvoke $r60.<java.lang.StringBuffer: void <init>()>();

        $r49 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("astFactory->create(");

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r52;

     label4:
        z4 = 0;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(44);

        $i11 = (int) -1;

        if $i0 == $i11 goto label5;

        $r14 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r15 = $r14.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(44);

        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        z4 = interfaceinvoke $r15.<groovyjarjarantlr.TokenManager: boolean tokenDefined(java.lang.String)>($r16);

     label5:
        $z0 = r2.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z0 == 0 goto label6;

        $r3 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r3 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z1 == 0 goto label6;

        $r4 = r2.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r5 = $r4.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $z2 = interfaceinvoke $r5.<groovyjarjarantlr.TokenManager: boolean tokenDefined(java.lang.String)>(r1);

        if $z2 != 0 goto label6;

        if z4 != 0 goto label6;

        $r61 = new java.lang.StringBuffer;

        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("astFactory->create(");

        $r8 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST(");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("))");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;

     label6:
        $r62 = new java.lang.StringBuffer;

        specialinvoke $r62.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("astFactory->create(");

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r57;
    }

    public java.lang.String getASTCreateString(java.lang.String)
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r7, $r9, $r10, $r12, $r13, $r14, $r15;
        java.lang.String r3, $r6, $r8, $r11, $r16;
        boolean $z0;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r3 := @parameter0: java.lang.String;

        $z0 = r0.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(astFactory->create(");

        $r11 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST(");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")))");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("astFactory->create(");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    protected java.lang.String getLookaheadTestExpression(groovyjarjarantlr.Lookahead[], int)
    {
        groovyjarjarantlr.Lookahead[] r2;
        groovyjarjarantlr.collections.impl.BitSet r4;
        groovyjarjarantlr.CppCodeGenerator r6;
        java.lang.StringBuffer $r0;
        groovyjarjarantlr.Lookahead $r3, $r5;
        int i0, i1;
        java.lang.String $r1, $r7;
        boolean $z0, z1;

        r6 := @this: groovyjarjarantlr.CppCodeGenerator;

        r2 := @parameter0: groovyjarjarantlr.Lookahead[];

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(100);

        z1 = 1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        i1 = 1;

     label1:
        if i1 > i0 goto label5;

        $r3 = r2[i1];

        r4 = $r3.<groovyjarjarantlr.Lookahead: groovyjarjarantlr.collections.impl.BitSet fset>;

        if z1 != 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") && (");

     label2:
        z1 = 0;

        $r5 = r2[i1];

        $z0 = virtualinvoke $r5.<groovyjarjarantlr.Lookahead: boolean containsEpsilon()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("true");

        goto label4;

     label3:
        $r7 = virtualinvoke r6.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getLookaheadTestTerm(int,groovyjarjarantlr.collections.impl.BitSet)>(i1, r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    protected java.lang.String getLookaheadTestExpression(groovyjarjarantlr.Alternative, int)
    {
        groovyjarjarantlr.Lookahead[] $r4;
        groovyjarjarantlr.Grammar $r9;
        groovyjarjarantlr.Alternative r0;
        groovyjarjarantlr.CppCodeGenerator r3;
        java.lang.StringBuffer $r1, $r2, $r6, $r7;
        int i0, i1;
        java.lang.String $r5, $r8;

        r3 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.Alternative;

        i0 := @parameter1: int;

        i1 = r0.<groovyjarjarantlr.Alternative: int lookaheadDepth>;

        if i1 != 2147483647 goto label1;

        $r9 = r3.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        i1 = $r9.<groovyjarjarantlr.Grammar: int maxk>;

     label1:
        if i0 != 0 goto label2;

        return "true";

     label2:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r4 = r0.<groovyjarjarantlr.Alternative: groovyjarjarantlr.Lookahead[] cache>;

        $r5 = virtualinvoke r3.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getLookaheadTestExpression(groovyjarjarantlr.Lookahead[],int)>($r4, i1);

        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    protected java.lang.String getLookaheadTestTerm(int, groovyjarjarantlr.collections.impl.BitSet)
    {
        int[] $r3;
        java.lang.StringBuffer $r4, $r7, $r9, $r10, $r11, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r1, $r5, $r6, $r8, $r13, $r14;
        boolean $z0;
        groovyjarjarantlr.collections.impl.BitSet r2;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        i0 := @parameter0: int;

        r2 := @parameter1: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lookaheadString(int)>(i0);

        $r3 = virtualinvoke r2.<groovyjarjarantlr.collections.impl.BitSet: int[] toArray()>();

        $z0 = staticinvoke <groovyjarjarantlr.CppCodeGenerator: boolean elementsAreRange(int[])>($r3);

        if $z0 == 0 goto label1;

        $r14 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getRangeExpression(int,int[])>(i0, $r3);

        return $r14;

     label1:
        $i1 = virtualinvoke r2.<groovyjarjarantlr.collections.impl.BitSet: int degree()>();

        if $i1 != 0 goto label2;

        return "true";

     label2:
        $i2 = r0.<groovyjarjarantlr.CppCodeGenerator: int bitsetTestThreshold>;

        if $i1 < $i2 goto label3;

        $i5 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: int markBitsetForGen(groovyjarjarantlr.collections.impl.BitSet)>(r2);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getBitsetName(int)>($i5);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".member(");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;

     label3:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        i6 = 0;

     label4:
        $i3 = lengthof $r3;

        if i6 >= $i3 goto label6;

        $i4 = $r3[i6];

        $r6 = specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getValueString(int)>($i4);

        if i6 <= 0 goto label5;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" || ");

     label5:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" == ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        i6 = i6 + 1;

        goto label4;

     label6:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String getRangeExpression(int, int[])
    {
        int[] r0;
        groovyjarjarantlr.Tool $r17;
        java.lang.StringBuffer $r1, $r2, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15;
        int $i0, $i1, i2, $i3, $i4;
        java.lang.String $r4, $r7, $r10, $r13, $r16;
        boolean $z0;
        groovyjarjarantlr.CppCodeGenerator r3;

        r3 := @this: groovyjarjarantlr.CppCodeGenerator;

        i2 := @parameter0: int;

        r0 := @parameter1: int[];

        $z0 = staticinvoke <groovyjarjarantlr.CppCodeGenerator: boolean elementsAreRange(int[])>(r0);

        if $z0 != 0 goto label1;

        $r17 = r3.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r17.<groovyjarjarantlr.Tool: void panic(java.lang.String)>("getRangeExpression called with non-range");

     label1:
        $i3 = r0[0];

        $i0 = lengthof r0;

        $i1 = $i0 - 1;

        $i4 = r0[$i1];

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r4 = specialinvoke r3.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lookaheadString(int)>(i2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" >= ");

        $r7 = specialinvoke r3.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getValueString(int)>($i3);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" && ");

        $r10 = specialinvoke r3.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lookaheadString(int)>(i2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <= ");

        $r13 = specialinvoke r3.<groovyjarjarantlr.CppCodeGenerator: java.lang.String getValueString(int)>($i4);

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;
    }

    private java.lang.String getValueString(int)
    {
        groovyjarjarantlr.StringLiteralSymbol r10;
        groovyjarjarantlr.Grammar $r1, $r2;
        groovyjarjarantlr.CharFormatter $r17;
        java.lang.StringBuffer $r6, $r8, $r9, $r13, $r14, $r15;
        int i0;
        java.lang.String $r5, $r7, $r11, $r12, $r16, r18;
        groovyjarjarantlr.TokenManager $r3;
        boolean $z0, $z1, $z2;
        groovyjarjarantlr.TokenSymbol $r4;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r1 instanceof groovyjarjarantlr.LexerGrammar;

        if $z0 == 0 goto label1;

        $r17 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.CharFormatter charFormatter>;

        r18 = interfaceinvoke $r17.<groovyjarjarantlr.CharFormatter: java.lang.String literalChar(int)>(i0);

        goto label6;

     label1:
        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r3 = $r2.<groovyjarjarantlr.Grammar: groovyjarjarantlr.TokenManager tokenManager>;

        $r4 = interfaceinvoke $r3.<groovyjarjarantlr.TokenManager: groovyjarjarantlr.TokenSymbol getTokenSymbolAt(int)>(i0);

        if $r4 != null goto label2;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;

     label2:
        $r5 = virtualinvoke $r4.<groovyjarjarantlr.TokenSymbol: java.lang.String getId()>();

        $z1 = $r4 instanceof groovyjarjarantlr.StringLiteralSymbol;

        if $z1 == 0 goto label4;

        r10 = (groovyjarjarantlr.StringLiteralSymbol) $r4;

        $r11 = virtualinvoke r10.<groovyjarjarantlr.StringLiteralSymbol: java.lang.String getLabel()>();

        if $r11 == null goto label3;

        r18 = $r11;

        goto label6;

     label3:
        $r12 = specialinvoke r0.<groovyjarjarantlr.CppCodeGenerator: java.lang.String mangleLiteral(java.lang.String)>($r5);

        r18 = $r12;

        if $r12 != null goto label6;

        r18 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        goto label6;

     label4:
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("EOF");

        if $z2 == 0 goto label5;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token::EOF_TYPE");

        r18 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label6;

     label5:
        r18 = $r5;

     label6:
        return r18;
    }

    protected boolean lookaheadIsEmpty(groovyjarjarantlr.Alternative, int)
    {
        groovyjarjarantlr.Lookahead[] $r1;
        groovyjarjarantlr.collections.impl.BitSet r3;
        groovyjarjarantlr.Grammar $r5;
        groovyjarjarantlr.Alternative r0;
        groovyjarjarantlr.CppCodeGenerator r4;
        groovyjarjarantlr.Lookahead $r2;
        int i0, $i1, i2, i3;

        r4 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.Alternative;

        i0 := @parameter1: int;

        i2 = r0.<groovyjarjarantlr.Alternative: int lookaheadDepth>;

        if i2 != 2147483647 goto label1;

        $r5 = r4.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        i2 = $r5.<groovyjarjarantlr.Grammar: int maxk>;

     label1:
        i3 = 1;

     label2:
        if i3 > i2 goto label4;

        if i3 > i0 goto label4;

        $r1 = r0.<groovyjarjarantlr.Alternative: groovyjarjarantlr.Lookahead[] cache>;

        $r2 = $r1[i3];

        r3 = $r2.<groovyjarjarantlr.Lookahead: groovyjarjarantlr.collections.impl.BitSet fset>;

        $i1 = virtualinvoke r3.<groovyjarjarantlr.collections.impl.BitSet: int degree()>();

        if $i1 == 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 1;
    }

    private java.lang.String lookaheadString(int)
    {
        groovyjarjarantlr.Grammar $r1;
        groovyjarjarantlr.CppCodeGenerator r0;
        java.lang.StringBuffer $r2, $r3, $r4, $r5;
        int i0;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r1 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z0 == 0 goto label1;

        return "_t->getType()";

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LA(");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    private java.lang.String mangleLiteral(java.lang.String)
    {
        groovyjarjarantlr.Tool $r1, $r3;
        java.lang.StringBuffer $r5, $r6, $r8;
        int $i0, $i1, i5, $i6;
        java.lang.String r2, r7;
        boolean $z0, $z1;
        char $c2, $c3, $c4;
        groovyjarjarantlr.CppCodeGenerator r0;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        r7 = $r1.<groovyjarjarantlr.Tool: java.lang.String literalsPrefix>;

        i5 = 1;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        if i5 >= $i1 goto label3;

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i5);

        $z1 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c2);

        if $z1 != 0 goto label2;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i5);

        $i6 = (int) $c4;

        if $i6 == 95 goto label2;

        return null;

     label2:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i5);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        i5 = i5 + 1;

        goto label1;

     label3:
        $r3 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $z0 = $r3.<groovyjarjarantlr.Tool: boolean upperCaseMangledLiterals>;

        if $z0 == 0 goto label4;

        r7 = virtualinvoke r7.<java.lang.String: java.lang.String toUpperCase()>();

     label4:
        return r7;
    }

    public java.lang.String mapTreeId(java.lang.String, groovyjarjarantlr.ActionTransInfo)
    {
        groovyjarjarantlr.collections.impl.Vector $r40, $r49;
        groovyjarjarantlr.RuleBlock $r1, $r6, $r16, $r26, $r35, $r39, $r48;
        groovyjarjarantlr.Tool $r22, $r31;
        java.lang.StringBuffer $r8, $r9, $r10, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r28, $r30, $r32, $r33, $r34, $r37, $r43, $r44, $r45;
        java.lang.String r2, $r7, $r15, $r17, $r27, $r29, $r36, $r38, $r42, r47, $r51, r52, $r53, $r54, r55;
        groovyjarjarantlr.ActionTransInfo r11;
        groovyjarjarantlr.Grammar $r3, $r46;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, z7, z8, z9;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.AlternativeElement r50;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        java.util.Hashtable $r4;
        java.lang.Object $r5, $r41;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r2 := @parameter0: java.lang.String;

        r11 := @parameter1: groovyjarjarantlr.ActionTransInfo;

        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        if $r1 != null goto label01;

        return r2;

     label01:
        z5 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        r47 = r2;

        $r3 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r3 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z0 == 0 goto label03;

        $r46 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z4 = $r46.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z4 != 0 goto label02;

        z5 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

     label02:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 3 goto label03;

        $i1 = virtualinvoke r2.<java.lang.String: int lastIndexOf(java.lang.String)>("_in");

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $i3 = $i2 - 3;

        if $i1 != $i3 goto label03;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        $i5 = $i4 - 3;

        r47 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        z5 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

     label03:
        i6 = 0;

     label04:
        $r48 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r49 = $r48.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.collections.impl.Vector labeledElements>;

        $i7 = virtualinvoke $r49.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i6 >= $i7 goto label08;

        $r39 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r40 = $r39.<groovyjarjarantlr.RuleBlock: groovyjarjarantlr.collections.impl.Vector labeledElements>;

        $r41 = virtualinvoke $r40.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i6);

        r50 = (groovyjarjarantlr.AlternativeElement) $r41;

        $r42 = virtualinvoke r50.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        $z3 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z3 == 0 goto label07;

        if z6 == 0 goto label05;

        $r51 = r47;

        goto label06;

     label05:
        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r47);

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST");

        $r51 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

     label06:
        return $r51;

     label07:
        i6 = i6 + 1;

        goto label04;

     label08:
        $r4 = r0.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable treeVariableMap>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r47);

        r52 = (java.lang.String) $r5;

        if r52 == null goto label13;

        $r15 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String NONUNIQUE>;

        if r52 != $r15 goto label09;

        $r31 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ambiguous reference to AST element ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r47);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in rule ");

        $r35 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r36 = virtualinvoke $r35.<groovyjarjarantlr.RuleBlock: java.lang.String getRuleName()>();

        $r37 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r31.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r38);

        return null;

     label09:
        $r16 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r17 = virtualinvoke $r16.<groovyjarjarantlr.RuleBlock: java.lang.String getRuleName()>();

        $z2 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z2 == 0 goto label10;

        $r22 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ambiguous reference to AST element ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r47);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in rule ");

        $r26 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r27 = virtualinvoke $r26.<groovyjarjarantlr.RuleBlock: java.lang.String getRuleName()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r22.<groovyjarjarantlr.Tool: void error(java.lang.String)>($r29);

        return null;

     label10:
        if z7 == 0 goto label11;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r52);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_in");

        $r53 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label12;

     label11:
        $r53 = r52;

     label12:
        return $r53;

     label13:
        $r6 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.RuleBlock currentRule>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.RuleBlock: java.lang.String getRuleName()>();

        $z1 = virtualinvoke r47.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label17;

        if z8 == 0 goto label14;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r47);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST_in");

        $r54 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label14:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r47);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_AST");

        $r54 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label15:
        r55 = $r54;

        if r11 == null goto label16;

        if z9 != 0 goto label16;

        r11.<groovyjarjarantlr.ActionTransInfo: java.lang.String refRuleRoot> = $r54;

     label16:
        return r55;

     label17:
        return r47;
    }

    private void mapTreeVariable(groovyjarjarantlr.AlternativeElement, java.lang.String)
    {
        groovyjarjarantlr.RuleRefElement $r10;
        java.lang.String $r1, r5, $r8, r14;
        groovyjarjarantlr.TreeElement $r12;
        java.util.Hashtable $r3, $r6, $r7, $r9;
        boolean $z0, $z1, $z2;
        groovyjarjarantlr.TokenRefElement $r11;
        groovyjarjarantlr.GrammarAtom $r13;
        groovyjarjarantlr.CppCodeGenerator r2;
        java.lang.Object $r4;
        groovyjarjarantlr.AlternativeElement r0;

        r2 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.AlternativeElement;

        r5 := @parameter1: java.lang.String;

        $z0 = r0 instanceof groovyjarjarantlr.TreeElement;

        if $z0 == 0 goto label1;

        $r12 = (groovyjarjarantlr.TreeElement) r0;

        $r13 = $r12.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        specialinvoke r2.<groovyjarjarantlr.CppCodeGenerator: void mapTreeVariable(groovyjarjarantlr.AlternativeElement,java.lang.String)>($r13, r5);

        return;

     label1:
        r14 = null;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.AlternativeElement: java.lang.String getLabel()>();

        if $r1 != null goto label3;

        $z1 = r0 instanceof groovyjarjarantlr.TokenRefElement;

        if $z1 == 0 goto label2;

        $r11 = (groovyjarjarantlr.TokenRefElement) r0;

        r14 = $r11.<groovyjarjarantlr.TokenRefElement: java.lang.String atomText>;

        goto label3;

     label2:
        $z2 = r0 instanceof groovyjarjarantlr.RuleRefElement;

        if $z2 == 0 goto label3;

        $r10 = (groovyjarjarantlr.RuleRefElement) r0;

        r14 = $r10.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

     label3:
        if r14 == null goto label5;

        $r3 = r2.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable treeVariableMap>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r14);

        if $r4 == null goto label4;

        $r7 = r2.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable treeVariableMap>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r14);

        $r9 = r2.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable treeVariableMap>;

        $r8 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String NONUNIQUE>;

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r8);

        goto label5;

     label4:
        $r6 = r2.<groovyjarjarantlr.CppCodeGenerator: java.util.Hashtable treeVariableMap>;

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, r5);

     label5:
        return;
    }

    protected java.lang.String processActionForSpecialSymbols(java.lang.String, int, groovyjarjarantlr.RuleBlock, groovyjarjarantlr.ActionTransInfo)
    {
        groovyjarjarantlr.Grammar $r1, $r2, $r3, $r6, $r7, $r23;
        groovyjarjarantlr.Token $r26;
        boolean $z0, $z1, $z2, $z3;
        groovyjarjarantlr.RuleBlock r4;
        groovyjarjarantlr.CppCodeGenerator r0;
        groovyjarjarantlr.CharStreamException $r8;
        groovyjarjarantlr.RecognitionException $r20;
        groovyjarjarantlr.Tool $r10, $r16, $r25;
        java.lang.StringBuffer $r11, $r12, $r17, $r18, $r28, $r29;
        int $i0, i1, $i2, $i3, $i5, $i7;
        groovyjarjarantlr.ActionTransInfo r5;
        java.lang.String $r13, $r19, r21, $r24;
        groovyjarjarantlr.actions.cpp.ActionLexer $r27;
        groovyjarjarantlr.TokenStreamException $r14;

        r0 := @this: groovyjarjarantlr.CppCodeGenerator;

        r21 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r4 := @parameter2: groovyjarjarantlr.RuleBlock;

        r5 := @parameter3: groovyjarjarantlr.ActionTransInfo;

        if r21 == null goto label01;

        $i0 = virtualinvoke r21.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return null;

     label02:
        $r1 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        if $r1 != null goto label03;

        return r21;

     label03:
        $r2 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z0 = $r2.<groovyjarjarantlr.Grammar: boolean buildAST>;

        if $z0 == 0 goto label04;

        $i3 = virtualinvoke r21.<java.lang.String: int indexOf(int)>(35);

        $i5 = (int) -1;

        if $i3 != $i5 goto label06;

     label04:
        $r3 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z1 = $r3 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z1 != 0 goto label06;

        $r6 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z2 = $r6 instanceof groovyjarjarantlr.LexerGrammar;

        if $z2 != 0 goto label05;

        $r7 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $z3 = $r7 instanceof groovyjarjarantlr.ParserGrammar;

        if $z3 == 0 goto label12;

     label05:
        $i2 = virtualinvoke r21.<java.lang.String: int indexOf(int)>(36);

        $i7 = (int) -1;

        if $i2 == $i7 goto label12;

     label06:
        $r27 = new groovyjarjarantlr.actions.cpp.ActionLexer;

        specialinvoke $r27.<groovyjarjarantlr.actions.cpp.ActionLexer: void <init>(java.lang.String,groovyjarjarantlr.RuleBlock,groovyjarjarantlr.CodeGenerator,groovyjarjarantlr.ActionTransInfo)>(r21, r4, r0, r5);

        virtualinvoke $r27.<groovyjarjarantlr.actions.cpp.ActionLexer: void setLineOffset(int)>(i1);

        $r23 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Grammar grammar>;

        $r24 = virtualinvoke $r23.<groovyjarjarantlr.Grammar: java.lang.String getFilename()>();

        virtualinvoke $r27.<groovyjarjarantlr.actions.cpp.ActionLexer: void setFilename(java.lang.String)>($r24);

        $r25 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r27.<groovyjarjarantlr.actions.cpp.ActionLexer: void setTool(groovyjarjarantlr.Tool)>($r25);

     label07:
        virtualinvoke $r27.<groovyjarjarantlr.actions.cpp.ActionLexer: void mACTION(boolean)>(1);

        $r26 = virtualinvoke $r27.<groovyjarjarantlr.actions.cpp.ActionLexer: groovyjarjarantlr.Token getTokenObject()>();

        r21 = virtualinvoke $r26.<groovyjarjarantlr.Token: java.lang.String getText()>();

     label08:
        goto label12;

     label09:
        $r20 := @caughtexception;

        virtualinvoke $r27.<groovyjarjarantlr.actions.cpp.ActionLexer: void reportError(groovyjarjarantlr.RecognitionException)>($r20);

        return r21;

     label10:
        $r14 := @caughtexception;

        $r16 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error reading action:");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r21);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<groovyjarjarantlr.Tool: void panic(java.lang.String)>($r19);

        return r21;

     label11:
        $r8 := @caughtexception;

        $r10 = r0.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error reading action:");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r21);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<groovyjarjarantlr.Tool: void panic(java.lang.String)>($r13);

        return r21;

     label12:
        return r21;

        catch groovyjarjarantlr.RecognitionException from label07 to label08 with label09;
        catch groovyjarjarantlr.TokenStreamException from label07 to label08 with label10;
        catch groovyjarjarantlr.CharStreamException from label07 to label08 with label11;
    }

    private java.lang.String fixNameSpaceOption(java.lang.String)
    {
        groovyjarjarantlr.CppCodeGenerator r5;
        java.lang.StringBuffer $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r1, r6, r7;
        boolean $z0;

        r5 := @this: groovyjarjarantlr.CppCodeGenerator;

        r6 := @parameter0: java.lang.String;

        $r0 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>(r6, "\"", "\"");

        r7 = $r0;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 2 goto label1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i1 - 2;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("::");

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return r7;
    }

    private void setupGrammarParameters(groovyjarjarantlr.Grammar)
    {
        java.lang.StringBuffer $r8, $r10, $r11, $r13, $r15, $r16, $r18, $r20, $r21, $r23, $r25, $r26, $r28, $r30, $r31, $r33, $r34, $r36, $r37, $r39, $r41, $r42, $r45, $r47, $r48, $r53, $r54, $r55, $r57, $r58, $r61, $r62, $r63, $r65, $r66, $r68, $r69, $r71, $r72, $r74, $r75, $r77, $r78, $r80, $r81, $r83, $r85, $r86, $r88, $r89, $r91, $r92, $r94, $r96, $r97, $r99, $r101, $r102, $r107, $r108, $r109, $r111, $r112, $r127, $r128, $r129, $r134, $r135, $r136, $r154, $r156, $r157, $r159, $r161, $r162, $r164, $r166, $r167, $r169, $r170, $r172, $r173;
        groovyjarjarantlr.Grammar r0;
        groovyjarjarantlr.Token $r44, $r50, $r104, $r114, $r120, $r123, $r130, $r137;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        groovyjarjarantlr.NameSpace $r138, $r147, $r149;
        groovyjarjarantlr.Tool $r2, $r4, $r6, $r7, $r117, $r118, $r140, $r143, $r146, $r148, $r152;
        java.lang.String $r3, $r5, $r9, $r12, $r14, $r17, $r19, $r22, $r24, $r27, $r29, $r32, $r35, $r38, $r40, $r43, $r46, $r49, $r51, $r52, $r56, $r59, $r60, $r64, $r67, $r70, $r73, $r76, $r79, $r82, $r84, $r87, $r90, $r93, $r95, $r98, $r100, $r103, $r105, $r106, $r110, $r113, $r115, $r116, $r119, $r121, $r122, $r124, $r125, $r126, $r131, $r132, $r133, $r139, $r141, $r142, $r144, $r145, r150, r151, $r153, $r155, $r158, $r160, $r163, $r165, $r168, $r171, $r174;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        groovyjarjarantlr.CppCodeGenerator r1;

        r1 := @this: groovyjarjarantlr.CppCodeGenerator;

        r0 := @parameter0: groovyjarjarantlr.Grammar;

        $z0 = r0 instanceof groovyjarjarantlr.ParserGrammar;

        if $z0 != 0 goto label01;

        $z12 = r0 instanceof groovyjarjarantlr.LexerGrammar;

        if $z12 != 0 goto label01;

        $z13 = r0 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z13 == 0 goto label12;

     label01:
        $r148 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r149 = $r148.<groovyjarjarantlr.Tool: groovyjarjarantlr.NameSpace nameSpace>;

        if $r149 == null goto label02;

        $r146 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r147 = $r146.<groovyjarjarantlr.Tool: groovyjarjarantlr.NameSpace nameSpace>;

        <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace> = $r147;

     label02:
        $r2 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r3 = $r2.<groovyjarjarantlr.Tool: java.lang.String namespaceStd>;

        if $r3 == null goto label03;

        $r143 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r144 = $r143.<groovyjarjarantlr.Tool: java.lang.String namespaceStd>;

        $r145 = specialinvoke r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String fixNameSpaceOption(java.lang.String)>($r144);

        <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceStd> = $r145;

     label03:
        $r4 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r5 = $r4.<groovyjarjarantlr.Tool: java.lang.String namespaceAntlr>;

        if $r5 == null goto label04;

        $r140 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r141 = $r140.<groovyjarjarantlr.Tool: java.lang.String namespaceAntlr>;

        $r142 = specialinvoke r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String fixNameSpaceOption(java.lang.String)>($r141);

        <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr> = $r142;

     label04:
        $r6 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $z1 = $r6.<groovyjarjarantlr.Tool: boolean genHashLines>;

        r1.<groovyjarjarantlr.CppCodeGenerator: boolean genHashLines> = $z1;

        $z2 = virtualinvoke r0.<groovyjarjarantlr.Grammar: boolean hasOption(java.lang.String)>("namespace");

        if $z2 == 0 goto label05;

        $r137 = virtualinvoke r0.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token getOption(java.lang.String)>("namespace");

        if $r137 == null goto label05;

        $r138 = new groovyjarjarantlr.NameSpace;

        $r139 = virtualinvoke $r137.<groovyjarjarantlr.Token: java.lang.String getText()>();

        specialinvoke $r138.<groovyjarjarantlr.NameSpace: void <init>(java.lang.String)>($r139);

        <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace> = $r138;

     label05:
        $z14 = virtualinvoke r0.<groovyjarjarantlr.Grammar: boolean hasOption(java.lang.String)>("namespaceAntlr");

        if $z14 == 0 goto label07;

        $r130 = virtualinvoke r0.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token getOption(java.lang.String)>("namespaceAntlr");

        if $r130 == null goto label07;

        $r131 = virtualinvoke $r130.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r132 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r131, "\"", "\"");

        r150 = $r132;

        if $r132 == null goto label07;

        $i6 = virtualinvoke $r132.<java.lang.String: int length()>();

        if $i6 <= 2 goto label06;

        $i7 = virtualinvoke $r132.<java.lang.String: int length()>();

        $i8 = $i7 - 2;

        $i9 = virtualinvoke $r132.<java.lang.String: int length()>();

        $r133 = virtualinvoke $r132.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9);

        $z11 = virtualinvoke $r133.<java.lang.String: boolean equals(java.lang.Object)>("::");

        if $z11 != 0 goto label06;

        $r134 = new java.lang.StringBuffer;

        specialinvoke $r134.<java.lang.StringBuffer: void <init>()>();

        $r135 = virtualinvoke $r134.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r132);

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        r150 = virtualinvoke $r136.<java.lang.StringBuffer: java.lang.String toString()>();

     label06:
        <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr> = r150;

     label07:
        $z15 = virtualinvoke r0.<groovyjarjarantlr.Grammar: boolean hasOption(java.lang.String)>("namespaceStd");

        if $z15 == 0 goto label09;

        $r123 = virtualinvoke r0.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token getOption(java.lang.String)>("namespaceStd");

        if $r123 == null goto label09;

        $r124 = virtualinvoke $r123.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r125 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r124, "\"", "\"");

        r151 = $r125;

        if $r125 == null goto label09;

        $i2 = virtualinvoke $r125.<java.lang.String: int length()>();

        if $i2 <= 2 goto label08;

        $i3 = virtualinvoke $r125.<java.lang.String: int length()>();

        $i4 = $i3 - 2;

        $i5 = virtualinvoke $r125.<java.lang.String: int length()>();

        $r126 = virtualinvoke $r125.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5);

        $z10 = virtualinvoke $r126.<java.lang.String: boolean equals(java.lang.Object)>("::");

        if $z10 != 0 goto label08;

        $r127 = new java.lang.StringBuffer;

        specialinvoke $r127.<java.lang.StringBuffer: void <init>()>();

        $r128 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r125);

        $r129 = virtualinvoke $r128.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        r151 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.String toString()>();

     label08:
        <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceStd> = r151;

     label09:
        $z16 = virtualinvoke r0.<groovyjarjarantlr.Grammar: boolean hasOption(java.lang.String)>("genHashLines");

        if $z16 == 0 goto label10;

        $r120 = virtualinvoke r0.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token getOption(java.lang.String)>("genHashLines");

        if $r120 == null goto label10;

        $r121 = virtualinvoke $r120.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r122 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r121, "\"", "\"");

        $z9 = virtualinvoke $r122.<java.lang.String: boolean equals(java.lang.Object)>("true");

        r1.<groovyjarjarantlr.CppCodeGenerator: boolean genHashLines> = $z9;

     label10:
        $r152 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $z17 = $r152.<groovyjarjarantlr.Tool: boolean noConstructors>;

        r1.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors> = $z17;

        $z18 = virtualinvoke r0.<groovyjarjarantlr.Grammar: boolean hasOption(java.lang.String)>("noConstructors");

        if $z18 == 0 goto label12;

        $r114 = virtualinvoke r0.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token getOption(java.lang.String)>("noConstructors");

        if $r114 == null goto label11;

        $r115 = virtualinvoke $r114.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $z7 = virtualinvoke $r115.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z7 != 0 goto label11;

        $r116 = virtualinvoke $r114.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $z8 = virtualinvoke $r116.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z8 != 0 goto label11;

        $r118 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r117 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        $r119 = virtualinvoke $r117.<groovyjarjarantlr.Tool: java.lang.String getGrammarFile()>();

        $i0 = virtualinvoke $r114.<groovyjarjarantlr.Token: int getLine()>();

        $i1 = virtualinvoke $r114.<groovyjarjarantlr.Token: int getColumn()>();

        virtualinvoke $r118.<groovyjarjarantlr.Tool: void error(java.lang.String,java.lang.String,int,int)>("noConstructors option must be true or false", $r119, $i0, $i1);

     label11:
        $r153 = virtualinvoke $r114.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $z19 = virtualinvoke $r153.<java.lang.String: boolean equals(java.lang.Object)>("true");

        r1.<groovyjarjarantlr.CppCodeGenerator: boolean noConstructors> = $z19;

     label12:
        $z20 = r0 instanceof groovyjarjarantlr.ParserGrammar;

        if $z20 == 0 goto label14;

        $r94 = new java.lang.StringBuffer;

        specialinvoke $r94.<java.lang.StringBuffer: void <init>()>();

        $r95 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r96 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r95);

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST");

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType> = $r98;

        $r99 = new java.lang.StringBuffer;

        specialinvoke $r99.<java.lang.StringBuffer: void <init>()>();

        $r100 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r101 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r100);

        $r102 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nullAST");

        $r103 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit> = $r103;

        $z6 = virtualinvoke r0.<groovyjarjarantlr.Grammar: boolean hasOption(java.lang.String)>("ASTLabelType");

        if $z6 == 0 goto label13;

        $r104 = virtualinvoke r0.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token getOption(java.lang.String)>("ASTLabelType");

        if $r104 == null goto label13;

        $r105 = virtualinvoke $r104.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r106 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r105, "\"", "\"");

        if $r106 == null goto label13;

        r1.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST> = 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType> = $r106;

        $r107 = new java.lang.StringBuffer;

        specialinvoke $r107.<java.lang.StringBuffer: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r106);

        $r109 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r110 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r111 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r110);

        $r112 = virtualinvoke $r111.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nullAST)");

        $r113 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit> = $r113;

     label13:
        $r154 = new java.lang.StringBuffer;

        specialinvoke $r154.<java.lang.StringBuffer: void <init>()>();

        $r155 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r156 = virtualinvoke $r154.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r155);

        $r157 = virtualinvoke $r156.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefToken ");

        $r158 = virtualinvoke $r157.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementType> = $r158;

        $r159 = new java.lang.StringBuffer;

        specialinvoke $r159.<java.lang.StringBuffer: void <init>()>();

        $r160 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r161 = virtualinvoke $r159.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r160);

        $r162 = virtualinvoke $r161.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nullToken");

        $r163 = virtualinvoke $r162.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementInit> = $r163;

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraArgs> = "";

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraParams> = "";

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonLocalVars> = "";

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value> = "LT(1)";

        $r164 = new java.lang.StringBuffer;

        specialinvoke $r164.<java.lang.StringBuffer: void <init>()>();

        $r165 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r166 = virtualinvoke $r164.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r165);

        $r167 = virtualinvoke $r166.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RecognitionException");

        $r168 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String exceptionThrown> = $r168;

        $r169 = new java.lang.StringBuffer;

        specialinvoke $r169.<java.lang.StringBuffer: void <init>()>();

        $r170 = virtualinvoke $r169.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("throw ");

        $r171 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r172 = virtualinvoke $r170.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r171);

        $r173 = virtualinvoke $r172.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NoViableAltException(LT(1), getFilename());");

        $r174 = virtualinvoke $r173.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String throwNoViable> = $r174;

        goto label19;

     label14:
        $z3 = r0 instanceof groovyjarjarantlr.LexerGrammar;

        if $z3 == 0 goto label15;

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementType> = "char ";

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementInit> = "\'\\0\'";

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraArgs> = "";

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraParams> = "bool _createToken";

        $r74 = new java.lang.StringBuffer;

        specialinvoke $r74.<java.lang.StringBuffer: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("int _ttype; ");

        $r76 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r77 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefToken _token; ");

        $r79 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceStd>;

        $r80 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("string::size_type _begin = text.length();");

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonLocalVars> = $r82;

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value> = "LA(1)";

        $r83 = new java.lang.StringBuffer;

        specialinvoke $r83.<java.lang.StringBuffer: void <init>()>();

        $r84 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r85 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RecognitionException");

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String exceptionThrown> = $r87;

        $r88 = new java.lang.StringBuffer;

        specialinvoke $r88.<java.lang.StringBuffer: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("throw ");

        $r90 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r91 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NoViableAltForCharException(LA(1), getFilename(), getLine(), getColumn());");

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String throwNoViable> = $r93;

        goto label19;

     label15:
        $z4 = r0 instanceof groovyjarjarantlr.TreeWalkerGrammar;

        if $z4 == 0 goto label18;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nullAST");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementInit> = $r12;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nullAST");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit> = $r17;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType> = $r22;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementType> = $r27;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST _t");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraParams> = $r32;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("throw ");

        $r35 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NoViableAltException(_t);");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String throwNoViable> = $r38;

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value> = "_t";

        $z5 = virtualinvoke r0.<groovyjarjarantlr.Grammar: boolean hasOption(java.lang.String)>("ASTLabelType");

        if $z5 == 0 goto label16;

        $r50 = virtualinvoke r0.<groovyjarjarantlr.Grammar: groovyjarjarantlr.Token getOption(java.lang.String)>("ASTLabelType");

        if $r50 == null goto label16;

        $r51 = virtualinvoke $r50.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r52 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r51, "\"", "\"");

        if $r52 == null goto label16;

        r1.<groovyjarjarantlr.CppCodeGenerator: boolean usingCustomAST> = 1;

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTType> = $r52;

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementType> = $r52;

        $r53 = new java.lang.StringBuffer;

        specialinvoke $r53.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r56 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r57 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nullAST)");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementInit> = $r59;

        $r60 = r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementInit>;

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String labeledElementASTInit> = $r60;

        $r61 = new java.lang.StringBuffer;

        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" _t");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraParams> = $r64;

        $r65 = new java.lang.StringBuffer;

        specialinvoke $r65.<java.lang.StringBuffer: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("throw ");

        $r67 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r68 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NoViableAltException(");

        $r70 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r71 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST(_t));");

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String throwNoViable> = $r73;

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String lt1Value> = "_t";

     label16:
        $z21 = virtualinvoke r0.<groovyjarjarantlr.Grammar: boolean hasOption(java.lang.String)>("ASTLabelType");

        if $z21 != 0 goto label17;

        $r44 = new groovyjarjarantlr.Token;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r46 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RefAST");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r44.<groovyjarjarantlr.Token: void <init>(int,java.lang.String)>(6, $r49);

        virtualinvoke r0.<groovyjarjarantlr.Grammar: boolean setOption(java.lang.String,groovyjarjarantlr.Token)>("ASTLabelType", $r44);

     label17:
        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonExtraArgs> = "_t";

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String commonLocalVars> = "";

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r40 = <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RecognitionException");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.CppCodeGenerator: java.lang.String exceptionThrown> = $r43;

        goto label19;

     label18:
        $r7 = r1.<groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r7.<groovyjarjarantlr.Tool: void panic(java.lang.String)>("Unknown grammar type");

     label19:
        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        <groovyjarjarantlr.CppCodeGenerator: java.lang.String postIncludeHpp> = "post_include_hpp";

        <groovyjarjarantlr.CppCodeGenerator: java.lang.String postIncludeCpp> = "post_include_cpp";

        <groovyjarjarantlr.CppCodeGenerator: java.lang.String preIncludeHpp> = "pre_include_hpp";

        <groovyjarjarantlr.CppCodeGenerator: java.lang.String preIncludeCpp> = "pre_include_cpp";

        <groovyjarjarantlr.CppCodeGenerator: int caseSizeThreshold> = 127;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>()>();

        <groovyjarjarantlr.CppCodeGenerator: java.lang.String NONUNIQUE> = $r0;

        <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceStd> = "ANTLR_USE_NAMESPACE(std)";

        <groovyjarjarantlr.CppCodeGenerator: java.lang.String namespaceAntlr> = "ANTLR_USE_NAMESPACE(antlr)";

        <groovyjarjarantlr.CppCodeGenerator: groovyjarjarantlr.NameSpace nameSpace> = null;

        return;
    }
}
