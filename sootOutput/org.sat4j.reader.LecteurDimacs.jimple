public class org.sat4j.reader.LecteurDimacs extends org.sat4j.reader.Reader implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final int TAILLE_BUF;
    private final org.sat4j.specs.ISolver s;
    private transient java.io.BufferedInputStream in;
    private int nbVars;
    private int nbClauses;
    private static final char EOF;

    public void <init>(org.sat4j.specs.ISolver)
    {
        org.sat4j.specs.ISolver r1;
        int $i1, $i3;
        org.sat4j.reader.LecteurDimacs r0;

        r0 := @this: org.sat4j.reader.LecteurDimacs;

        r1 := @parameter0: org.sat4j.specs.ISolver;

        specialinvoke r0.<org.sat4j.reader.Reader: void <init>()>();

        $i1 = (int) -1;

        r0.<org.sat4j.reader.LecteurDimacs: int nbVars> = $i1;

        $i3 = (int) -1;

        r0.<org.sat4j.reader.LecteurDimacs: int nbClauses> = $i3;

        r0.<org.sat4j.reader.LecteurDimacs: org.sat4j.specs.ISolver s> = r1;

        return;
    }

    public final org.sat4j.specs.IProblem parseInstance(java.io.InputStream) throws org.sat4j.reader.ParseFormatException, org.sat4j.specs.ContradictionException, java.io.IOException
    {
        java.io.BufferedInputStream $r9;
        org.sat4j.specs.ISolver $r3, $r4, $r5, $r6;
        org.sat4j.reader.LecteurDimacs r0;
        int $i0, $i1, $i2, $i4, $i5, $i7;
        char $c3;
        org.sat4j.reader.ParseFormatException $r10, $r11;
        java.io.InputStream r2;

        r0 := @this: org.sat4j.reader.LecteurDimacs;

        r2 := @parameter0: java.io.InputStream;

        $r9 = new java.io.BufferedInputStream;

        specialinvoke $r9.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r2, 16384);

        r0.<org.sat4j.reader.LecteurDimacs: java.io.BufferedInputStream in> = $r9;

        $r3 = r0.<org.sat4j.reader.LecteurDimacs: org.sat4j.specs.ISolver s>;

        interfaceinvoke $r3.<org.sat4j.specs.ISolver: void reset()>();

        specialinvoke r0.<org.sat4j.reader.LecteurDimacs: char passerCommentaire()>();

        $i0 = r0.<org.sat4j.reader.LecteurDimacs: int nbVars>;

        if $i0 >= 0 goto label1;

        $r10 = new org.sat4j.reader.ParseFormatException;

        specialinvoke $r10.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>("DIMACS error: wrong max number of variables");

        throw $r10;

     label1:
        $r4 = r0.<org.sat4j.reader.LecteurDimacs: org.sat4j.specs.ISolver s>;

        $i1 = r0.<org.sat4j.reader.LecteurDimacs: int nbVars>;

        interfaceinvoke $r4.<org.sat4j.specs.ISolver: int newVar(int)>($i1);

        $r5 = r0.<org.sat4j.reader.LecteurDimacs: org.sat4j.specs.ISolver s>;

        $i2 = r0.<org.sat4j.reader.LecteurDimacs: int nbClauses>;

        interfaceinvoke $r5.<org.sat4j.specs.ISolver: void setExpectedNumberOfClauses(int)>($i2);

        $c3 = specialinvoke r0.<org.sat4j.reader.LecteurDimacs: char passerEspaces()>();

        $i4 = r0.<org.sat4j.reader.LecteurDimacs: int nbClauses>;

        if $i4 <= 0 goto label3;

        $i5 = (int) $c3;

        $i7 = (int) 65535;

        if $i5 != $i7 goto label2;

        $r11 = new org.sat4j.reader.ParseFormatException;

        specialinvoke $r11.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>("DIMACS error: the clauses are missing");

        throw $r11;

     label2:
        specialinvoke r0.<org.sat4j.reader.LecteurDimacs: void ajouterClauses(char)>($c3);

     label3:
        virtualinvoke r2.<java.io.InputStream: void close()>();

        $r6 = r0.<org.sat4j.reader.LecteurDimacs: org.sat4j.specs.ISolver s>;

        return $r6;
    }

    private char passerCommentaire() throws java.io.IOException
    {
        char $c0, $c1, c2;
        org.sat4j.reader.LecteurDimacs r0;
        int $i3, $i4, $i5, $i6, $i8;

        r0 := @this: org.sat4j.reader.LecteurDimacs;

     label1:
        $c0 = specialinvoke r0.<org.sat4j.reader.LecteurDimacs: char passerEspaces()>();

        c2 = $c0;

        $i3 = (int) $c0;

        if $i3 != 112 goto label2;

        c2 = specialinvoke r0.<org.sat4j.reader.LecteurDimacs: char lectureNombreLiteraux()>();

     label2:
        $i4 = (int) c2;

        if $i4 == 99 goto label3;

        $i5 = (int) c2;

        if $i5 == 112 goto label3;

        goto label4;

     label3:
        $c1 = specialinvoke r0.<org.sat4j.reader.LecteurDimacs: char nextLine()>();

        c2 = $c1;

        $i6 = (int) $c1;

        $i8 = (int) 65535;

        if $i6 != $i8 goto label1;

        goto label4;

     label4:
        return c2;
    }

    private char lectureNombreLiteraux() throws java.io.IOException
    {
        java.io.BufferedInputStream $r1, $r2;
        org.sat4j.reader.LecteurDimacs r0;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31;
        char $c0, $c3, $c13, c14, $c16;

        r0 := @this: org.sat4j.reader.LecteurDimacs;

        $c0 = specialinvoke r0.<org.sat4j.reader.LecteurDimacs: char nextChiffre()>();

        c14 = $c0;

        $i17 = (int) $c0;

        $i19 = (int) 65535;

        if $i17 == $i19 goto label7;

        $i20 = (int) $c0;

        $i1 = $i20 - 48;

        r0.<org.sat4j.reader.LecteurDimacs: int nbVars> = $i1;

     label1:
        $r1 = r0.<org.sat4j.reader.LecteurDimacs: java.io.BufferedInputStream in>;

        $i2 = virtualinvoke $r1.<java.io.BufferedInputStream: int read()>();

        $c13 = (char) $i2;

        $i21 = (int) $c13;

        if $i21 < 48 goto label3;

        $i22 = (int) $c13;

        if $i22 <= 57 goto label2;

        goto label3;

     label2:
        $i9 = r0.<org.sat4j.reader.LecteurDimacs: int nbVars>;

        $i10 = 10 * $i9;

        $i23 = (int) $c13;

        $i11 = $i10 + $i23;

        $i12 = $i11 - 48;

        r0.<org.sat4j.reader.LecteurDimacs: int nbVars> = $i12;

        goto label1;

     label3:
        $c3 = specialinvoke r0.<org.sat4j.reader.LecteurDimacs: char nextChiffre()>();

        $i24 = (int) $c3;

        $i4 = $i24 - 48;

        r0.<org.sat4j.reader.LecteurDimacs: int nbClauses> = $i4;

     label4:
        $r2 = r0.<org.sat4j.reader.LecteurDimacs: java.io.BufferedInputStream in>;

        $i15 = virtualinvoke $r2.<java.io.BufferedInputStream: int read()>();

        $c16 = (char) $i15;

        c14 = $c16;

        $i25 = (int) $c16;

        if $i25 < 48 goto label6;

        $i26 = (int) $c16;

        if $i26 <= 57 goto label5;

        goto label6;

     label5:
        $i5 = r0.<org.sat4j.reader.LecteurDimacs: int nbClauses>;

        $i6 = 10 * $i5;

        $i27 = (int) $c16;

        $i7 = $i6 + $i27;

        $i8 = $i7 - 48;

        r0.<org.sat4j.reader.LecteurDimacs: int nbClauses> = $i8;

        goto label4;

     label6:
        $i28 = (int) $c16;

        if $i28 == 10 goto label7;

        $i29 = (int) $c16;

        $i31 = (int) 65535;

        if $i29 == $i31 goto label7;

        specialinvoke r0.<org.sat4j.reader.LecteurDimacs: char nextLine()>();

     label7:
        return c14;
    }

    private void ajouterClauses(char) throws java.io.IOException, org.sat4j.specs.ContradictionException, org.sat4j.reader.ParseFormatException
    {
        java.io.BufferedInputStream $r7, $r10, $r11, $r12;
        org.sat4j.reader.LecteurDimacs r6;
        boolean $z0, z1;
        org.sat4j.reader.ParseFormatException $r15;
        java.lang.StringBuilder $r3, $r4, $r14;
        org.sat4j.specs.ISolver $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i22;
        java.lang.String $r5;
        char c6;
        org.sat4j.core.VecInt $r13;

        r6 := @this: org.sat4j.reader.LecteurDimacs;

        c6 := @parameter0: char;

        $r13 = new org.sat4j.core.VecInt;

        specialinvoke $r13.<org.sat4j.core.VecInt: void <init>()>();

        i7 = 0;

        z1 = 0;

     label01:
        $i9 = (int) c6;

        if $i9 != 45 goto label02;

        z1 = 1;

        $r12 = r6.<org.sat4j.reader.LecteurDimacs: java.io.BufferedInputStream in>;

        $i5 = virtualinvoke $r12.<java.io.BufferedInputStream: int read()>();

        c6 = (char) $i5;

        goto label05;

     label02:
        $i10 = (int) c6;

        if $i10 != 43 goto label03;

        $r11 = r6.<org.sat4j.reader.LecteurDimacs: java.io.BufferedInputStream in>;

        $i4 = virtualinvoke $r11.<java.io.BufferedInputStream: int read()>();

        c6 = (char) $i4;

        goto label05;

     label03:
        $i11 = (int) c6;

        if $i11 < 48 goto label04;

        $i12 = (int) c6;

        if $i12 > 57 goto label04;

        $i13 = (int) c6;

        i7 = $i13 - 48;

        $r7 = r6.<org.sat4j.reader.LecteurDimacs: java.io.BufferedInputStream in>;

        $i0 = virtualinvoke $r7.<java.io.BufferedInputStream: int read()>();

        c6 = (char) $i0;

        goto label05;

     label04:
        $r15 = new org.sat4j.reader.ParseFormatException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown character ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>($r5);

        throw $r15;

     label05:
        $i14 = (int) c6;

        if $i14 < 48 goto label06;

        $i15 = (int) c6;

        if $i15 > 57 goto label06;

        $i1 = i7 * 10;

        $i16 = (int) c6;

        $i2 = $i1 + $i16;

        i7 = $i2 - 48;

        $r10 = r6.<org.sat4j.reader.LecteurDimacs: java.io.BufferedInputStream in>;

        $i3 = virtualinvoke $r10.<java.io.BufferedInputStream: int read()>();

        c6 = (char) $i3;

        goto label05;

     label06:
        if i7 != 0 goto label07;

        $r9 = r6.<org.sat4j.reader.LecteurDimacs: org.sat4j.specs.ISolver s>;

        interfaceinvoke $r9.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r13);

        interfaceinvoke $r13.<org.sat4j.specs.IVecInt: void clear()>();

        goto label10;

     label07:
        if z1 == 0 goto label08;

        $i8 = neg i7;

        goto label09;

     label08:
        $i8 = i7;

     label09:
        interfaceinvoke $r13.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        z1 = 0;

        i7 = 0;

     label10:
        $i17 = (int) c6;

        $i19 = (int) 65535;

        if $i17 == $i19 goto label11;

        c6 = specialinvoke r6.<org.sat4j.reader.LecteurDimacs: char passerEspaces()>();

     label11:
        $i20 = (int) c6;

        $i22 = (int) 65535;

        if $i20 != $i22 goto label01;

        $z0 = interfaceinvoke $r13.<org.sat4j.specs.IVecInt: boolean isEmpty()>();

        if $z0 != 0 goto label12;

        $r8 = r6.<org.sat4j.reader.LecteurDimacs: org.sat4j.specs.ISolver s>;

        interfaceinvoke $r8.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r13);

        goto label12;

     label12:
        return;
    }

    private char passerEspaces() throws java.io.IOException
    {
        java.io.BufferedInputStream $r1;
        int $i0, $i2, $i3;
        char $c1;
        org.sat4j.reader.LecteurDimacs r0;

        r0 := @this: org.sat4j.reader.LecteurDimacs;

     label1:
        $r1 = r0.<org.sat4j.reader.LecteurDimacs: java.io.BufferedInputStream in>;

        $i0 = virtualinvoke $r1.<java.io.BufferedInputStream: int read()>();

        $c1 = (char) $i0;

        $i2 = (int) $c1;

        if $i2 == 32 goto label1;

        $i3 = (int) $c1;

        if $i3 == 10 goto label1;

        return $c1;
    }

    private char nextLine() throws java.io.IOException
    {
        java.io.BufferedInputStream $r1;
        int $i0, $i2, $i3, $i5;
        char $c1;
        org.sat4j.reader.LecteurDimacs r0;

        r0 := @this: org.sat4j.reader.LecteurDimacs;

     label1:
        $r1 = r0.<org.sat4j.reader.LecteurDimacs: java.io.BufferedInputStream in>;

        $i0 = virtualinvoke $r1.<java.io.BufferedInputStream: int read()>();

        $c1 = (char) $i0;

        $i2 = (int) $c1;

        if $i2 == 10 goto label2;

        $i3 = (int) $c1;

        $i5 = (int) 65535;

        if $i3 != $i5 goto label1;

     label2:
        return $c1;
    }

    private char nextChiffre() throws java.io.IOException
    {
        java.io.BufferedInputStream $r1;
        char $c1;
        org.sat4j.reader.LecteurDimacs r0;
        int $i0, $i2, $i3, $i4, $i6;

        r0 := @this: org.sat4j.reader.LecteurDimacs;

     label1:
        $r1 = r0.<org.sat4j.reader.LecteurDimacs: java.io.BufferedInputStream in>;

        $i0 = virtualinvoke $r1.<java.io.BufferedInputStream: int read()>();

        $c1 = (char) $i0;

        $i2 = (int) $c1;

        if $i2 < 48 goto label1;

        $i3 = (int) $c1;

        if $i3 <= 57 goto label2;

        $i4 = (int) $c1;

        $i6 = (int) 65535;

        if $i4 != $i6 goto label1;

     label2:
        return $c1;
    }

    public java.lang.String decode(int[])
    {
        int[] r1;
        java.lang.StringBuffer $r0;
        int i0, i1, i2;
        java.lang.String $r2;
        org.sat4j.reader.LecteurDimacs r3;

        r3 := @this: org.sat4j.reader.LecteurDimacs;

        r1 := @parameter0: int[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        i1 = r1[i2];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public void decode(int[], java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        int[] r0;
        int i0, i1, i2;
        org.sat4j.reader.LecteurDimacs r2;

        r2 := @this: org.sat4j.reader.LecteurDimacs;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.io.PrintWriter;

        i0 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        i1 = r0[i2];

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("0");

        return;
    }

    public static void <clinit>()
    {
        <org.sat4j.reader.LecteurDimacs: char EOF> = 65535;

        <org.sat4j.reader.LecteurDimacs: int TAILLE_BUF> = 16384;

        <org.sat4j.reader.LecteurDimacs: long serialVersionUID> = 1L;

        return;
    }
}
