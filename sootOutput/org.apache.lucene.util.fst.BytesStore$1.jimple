class org.apache.lucene.util.fst.BytesStore$1 extends org.apache.lucene.util.fst.FST$BytesReader
{
    private byte[] current;
    private int nextBuffer;
    private int nextRead;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.util.fst.BytesStore this$0;

    void <init>(org.apache.lucene.util.fst.BytesStore)
    {
        org.apache.lucene.util.fst.BytesStore$1 r0;
        org.apache.lucene.util.fst.BytesStore r1, $r2;
        int $i0;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$1;

        r1 := @parameter0: org.apache.lucene.util.fst.BytesStore;

        r0.<org.apache.lucene.util.fst.BytesStore$1: org.apache.lucene.util.fst.BytesStore this$0> = r1;

        specialinvoke r0.<org.apache.lucene.util.fst.FST$BytesReader: void <init>()>();

        $r2 = r0.<org.apache.lucene.util.fst.BytesStore$1: org.apache.lucene.util.fst.BytesStore this$0>;

        $i0 = staticinvoke <org.apache.lucene.util.fst.BytesStore: int access$000(org.apache.lucene.util.fst.BytesStore)>($r2);

        r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead> = $i0;

        return;
    }

    public byte readByte()
    {
        byte[] $r2, $r6;
        org.apache.lucene.util.fst.BytesStore $r1, $r3;
        org.apache.lucene.util.fst.BytesStore$1 r0;
        java.util.List $r4;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        java.lang.Object $r5;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$1;

        $i0 = r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead>;

        $r1 = r0.<org.apache.lucene.util.fst.BytesStore$1: org.apache.lucene.util.fst.BytesStore this$0>;

        $i1 = staticinvoke <org.apache.lucene.util.fst.BytesStore: int access$000(org.apache.lucene.util.fst.BytesStore)>($r1);

        if $i0 != $i1 goto label1;

        $r3 = r0.<org.apache.lucene.util.fst.BytesStore$1: org.apache.lucene.util.fst.BytesStore this$0>;

        $r4 = staticinvoke <org.apache.lucene.util.fst.BytesStore: java.util.List access$100(org.apache.lucene.util.fst.BytesStore)>($r3);

        $i5 = r0.<org.apache.lucene.util.fst.BytesStore$1: int nextBuffer>;

        $i6 = $i5 + 1;

        r0.<org.apache.lucene.util.fst.BytesStore$1: int nextBuffer> = $i6;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i5);

        $r6 = (byte[]) $r5;

        r0.<org.apache.lucene.util.fst.BytesStore$1: byte[] current> = $r6;

        r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead> = 0;

     label1:
        $r2 = r0.<org.apache.lucene.util.fst.BytesStore$1: byte[] current>;

        $i2 = r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead> = $i3;

        $b4 = $r2[$i2];

        return $b4;
    }

    public void skipBytes(int)
    {
        org.apache.lucene.util.fst.BytesStore$1 r0;
        int i1;
        long $l0, $l2, $l3;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$1;

        i1 := @parameter0: int;

        $l0 = virtualinvoke r0.<org.apache.lucene.util.fst.BytesStore$1: long getPosition()>();

        $l2 = (long) i1;

        $l3 = $l0 + $l2;

        virtualinvoke r0.<org.apache.lucene.util.fst.BytesStore$1: void setPosition(long)>($l3);

        return;
    }

    public void readBytes(byte[], int, int)
    {
        byte[] $r5, r6, $r7, $r8;
        org.apache.lucene.util.fst.BytesStore $r1, $r2;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        org.apache.lucene.util.fst.BytesStore$1 r0;
        java.util.List $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$1;

        r6 := @parameter0: byte[];

        i9 := @parameter1: int;

        i10 := @parameter2: int;

     label1:
        if i10 <= 0 goto label4;

        $r1 = r0.<org.apache.lucene.util.fst.BytesStore$1: org.apache.lucene.util.fst.BytesStore this$0>;

        $i0 = staticinvoke <org.apache.lucene.util.fst.BytesStore: int access$000(org.apache.lucene.util.fst.BytesStore)>($r1);

        $i1 = r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead>;

        i2 = $i0 - $i1;

        if i10 > i2 goto label2;

        $r8 = r0.<org.apache.lucene.util.fst.BytesStore$1: byte[] current>;

        $i6 = r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i6, r6, i9, i10);

        $i7 = r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead>;

        $i8 = $i7 + i10;

        r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead> = $i8;

        goto label4;

     label2:
        if i2 <= 0 goto label3;

        $r7 = r0.<org.apache.lucene.util.fst.BytesStore$1: byte[] current>;

        $i5 = r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i5, r6, i9, i2);

        i9 = i9 + i2;

        i10 = i10 - i2;

     label3:
        $r2 = r0.<org.apache.lucene.util.fst.BytesStore$1: org.apache.lucene.util.fst.BytesStore this$0>;

        $r3 = staticinvoke <org.apache.lucene.util.fst.BytesStore: java.util.List access$100(org.apache.lucene.util.fst.BytesStore)>($r2);

        $i3 = r0.<org.apache.lucene.util.fst.BytesStore$1: int nextBuffer>;

        $i4 = $i3 + 1;

        r0.<org.apache.lucene.util.fst.BytesStore$1: int nextBuffer> = $i4;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i3);

        $r5 = (byte[]) $r4;

        r0.<org.apache.lucene.util.fst.BytesStore$1: byte[] current> = $r5;

        r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead> = 0;

        goto label1;

     label4:
        return;
    }

    public long getPosition()
    {
        org.apache.lucene.util.fst.BytesStore $r1;
        long $l1, $l2, $l4, $l6, $l7, $l8;
        org.apache.lucene.util.fst.BytesStore$1 r0;
        int $i0, $i3, $i5;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$1;

        $i0 = r0.<org.apache.lucene.util.fst.BytesStore$1: int nextBuffer>;

        $l1 = (long) $i0;

        $l2 = $l1 - 1L;

        $r1 = r0.<org.apache.lucene.util.fst.BytesStore$1: org.apache.lucene.util.fst.BytesStore this$0>;

        $i3 = staticinvoke <org.apache.lucene.util.fst.BytesStore: int access$000(org.apache.lucene.util.fst.BytesStore)>($r1);

        $l4 = (long) $i3;

        $l7 = $l2 * $l4;

        $i5 = r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead>;

        $l6 = (long) $i5;

        $l8 = $l7 + $l6;

        return $l8;
    }

    public void setPosition(long)
    {
        byte[] $r5;
        org.apache.lucene.util.fst.BytesStore $r1, $r2, $r6;
        long l0, $l2, $l6, $l7, $l9;
        java.lang.AssertionError $r7;
        byte $b10;
        int $i1, i3, $i4, $i5, $i8;
        boolean $z0;
        org.apache.lucene.util.fst.BytesStore$1 r0;
        java.util.List $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$1;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.lucene.util.fst.BytesStore$1: org.apache.lucene.util.fst.BytesStore this$0>;

        $i1 = staticinvoke <org.apache.lucene.util.fst.BytesStore: int access$200(org.apache.lucene.util.fst.BytesStore)>($r1);

        $l2 = l0 >> $i1;

        i3 = (int) $l2;

        $i4 = i3 + 1;

        r0.<org.apache.lucene.util.fst.BytesStore$1: int nextBuffer> = $i4;

        $r2 = r0.<org.apache.lucene.util.fst.BytesStore$1: org.apache.lucene.util.fst.BytesStore this$0>;

        $r3 = staticinvoke <org.apache.lucene.util.fst.BytesStore: java.util.List access$100(org.apache.lucene.util.fst.BytesStore)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        $r5 = (byte[]) $r4;

        r0.<org.apache.lucene.util.fst.BytesStore$1: byte[] current> = $r5;

        $r6 = r0.<org.apache.lucene.util.fst.BytesStore$1: org.apache.lucene.util.fst.BytesStore this$0>;

        $i5 = staticinvoke <org.apache.lucene.util.fst.BytesStore: int access$300(org.apache.lucene.util.fst.BytesStore)>($r6);

        $l6 = (long) $i5;

        $l7 = l0 & $l6;

        $i8 = (int) $l7;

        r0.<org.apache.lucene.util.fst.BytesStore$1: int nextRead> = $i8;

        $z0 = <org.apache.lucene.util.fst.BytesStore$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $l9 = virtualinvoke r0.<org.apache.lucene.util.fst.BytesStore$1: long getPosition()>();

        $b10 = $l9 cmp l0;

        if $b10 == 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        return;
    }

    public boolean reversed()
    {
        org.apache.lucene.util.fst.BytesStore$1 r0;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$1;

        return 0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/util/fst/BytesStore;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.fst.BytesStore$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
