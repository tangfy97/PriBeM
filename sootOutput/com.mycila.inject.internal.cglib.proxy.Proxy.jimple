public class com.mycila.inject.internal.cglib.proxy.Proxy extends java.lang.Object implements java.io.Serializable
{
    protected com.mycila.inject.internal.cglib.proxy.InvocationHandler h;
    private static final com.mycila.inject.internal.cglib.proxy.CallbackFilter BAD_OBJECT_METHOD_FILTER;
    static java.lang.Class class$net$sf$cglib$proxy$Proxy$ProxyImpl;
    static java.lang.Class class$net$sf$cglib$proxy$InvocationHandler;
    static java.lang.Class class$net$sf$cglib$proxy$NoOp;

    protected void <init>(com.mycila.inject.internal.cglib.proxy.InvocationHandler)
    {
        com.mycila.inject.internal.cglib.proxy.Proxy r0;
        com.mycila.inject.internal.cglib.proxy.InvocationHandler r3;
        com.mycila.inject.internal.cglib.proxy.Callback[] $r2;
        java.lang.Class $r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Proxy;

        r3 := @parameter0: com.mycila.inject.internal.cglib.proxy.InvocationHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (com.mycila.inject.internal.cglib.proxy.Callback)[2];

        $r2[0] = r3;

        $r2[1] = null;

        staticinvoke <com.mycila.inject.internal.cglib.proxy.Enhancer: void registerCallbacks(java.lang.Class,com.mycila.inject.internal.cglib.proxy.Callback[])>($r1, $r2);

        r0.<com.mycila.inject.internal.cglib.proxy.Proxy: com.mycila.inject.internal.cglib.proxy.InvocationHandler h> = r3;

        return;
    }

    public static com.mycila.inject.internal.cglib.proxy.InvocationHandler getInvocationHandler(java.lang.Object)
    {
        com.mycila.inject.internal.cglib.proxy.Proxy $r1;
        com.mycila.inject.internal.cglib.proxy.InvocationHandler $r2;
        java.lang.Object r0;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.mycila.inject.internal.cglib.proxy.Proxy$ProxyImpl;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Object is not a proxy");

        throw $r3;

     label1:
        $r1 = (com.mycila.inject.internal.cglib.proxy.Proxy) r0;

        $r2 = $r1.<com.mycila.inject.internal.cglib.proxy.Proxy: com.mycila.inject.internal.cglib.proxy.InvocationHandler h>;

        return $r2;
    }

    public static java.lang.Class getProxyClass(java.lang.ClassLoader, java.lang.Class[])
    {
        java.lang.Class[] r2, $r3;
        com.mycila.inject.internal.cglib.proxy.Enhancer $r0;
        com.mycila.inject.internal.cglib.proxy.CallbackFilter $r6;
        java.lang.Class $r1, $r4, $r5, $r7, $r9, $r10, $r11;
        java.lang.ClassLoader r8;

        r8 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.Class[];

        $r0 = new com.mycila.inject.internal.cglib.proxy.Enhancer;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Enhancer: void <init>()>();

        $r1 = <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$Proxy$ProxyImpl>;

        if $r1 != null goto label1;

        $r9 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.proxy.Proxy$ProxyImpl");

        <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$Proxy$ProxyImpl> = $r9;

        goto label2;

     label1:
        $r9 = <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$Proxy$ProxyImpl>;

     label2:
        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Enhancer: void setSuperclass(java.lang.Class)>($r9);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Enhancer: void setInterfaces(java.lang.Class[])>(r2);

        $r3 = newarray (java.lang.Class)[2];

        $r4 = <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$InvocationHandler>;

        if $r4 != null goto label3;

        $r10 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.proxy.InvocationHandler");

        <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$InvocationHandler> = $r10;

        goto label4;

     label3:
        $r10 = <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$InvocationHandler>;

     label4:
        $r3[0] = $r10;

        $r5 = <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$NoOp>;

        if $r5 != null goto label5;

        $r11 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.proxy.NoOp");

        <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$NoOp> = $r11;

        goto label6;

     label5:
        $r11 = <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$NoOp>;

     label6:
        $r3[1] = $r11;

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Enhancer: void setCallbackTypes(java.lang.Class[])>($r3);

        $r6 = <com.mycila.inject.internal.cglib.proxy.Proxy: com.mycila.inject.internal.cglib.proxy.CallbackFilter BAD_OBJECT_METHOD_FILTER>;

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Enhancer: void setCallbackFilter(com.mycila.inject.internal.cglib.proxy.CallbackFilter)>($r6);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Enhancer: void setUseFactory(boolean)>(0);

        $r7 = virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Enhancer: java.lang.Class createClass()>();

        return $r7;
    }

    public static boolean isProxyClass(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r2 = <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$Proxy$ProxyImpl>;

        if $r2 != null goto label1;

        $r3 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.proxy.Proxy$ProxyImpl");

        <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$Proxy$ProxyImpl> = $r3;

        goto label2;

     label1:
        $r3 = <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$Proxy$ProxyImpl>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public static java.lang.Object newProxyInstance(java.lang.ClassLoader, java.lang.Class[], com.mycila.inject.internal.cglib.proxy.InvocationHandler)
    {
        java.lang.Object[] $r6;
        com.mycila.inject.internal.cglib.proxy.InvocationHandler r7;
        com.mycila.inject.internal.cglib.core.CodeGenerationException $r10;
        java.lang.Class[] r1, $r3;
        java.lang.RuntimeException $r11;
        java.lang.reflect.Constructor $r5;
        java.lang.Exception $r9;
        java.lang.Class $r2, $r4, $r12;
        java.lang.Object $r8;
        java.lang.ClassLoader r0;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.Class[];

        r7 := @parameter2: com.mycila.inject.internal.cglib.proxy.InvocationHandler;

     label1:
        $r2 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>(r0, r1);

        $r3 = newarray (java.lang.Class)[1];

        $r4 = <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$InvocationHandler>;

        if $r4 != null goto label2;

        $r12 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.proxy.InvocationHandler");

        <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$InvocationHandler> = $r12;

        goto label3;

     label2:
        $r12 = <com.mycila.inject.internal.cglib.proxy.Proxy: java.lang.Class class$net$sf$cglib$proxy$InvocationHandler>;

     label3:
        $r3[0] = $r12;

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r7;

        $r8 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

     label4:
        return $r8;

     label5:
        $r11 := @caughtexception;

        throw $r11;

     label6:
        $r9 := @caughtexception;

        $r10 = new com.mycila.inject.internal.cglib.core.CodeGenerationException;

        specialinvoke $r10.<com.mycila.inject.internal.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.lang.RuntimeException from label1 to label4 with label5;
        catch java.lang.Exception from label1 to label4 with label6;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.proxy.Proxy$1 $r0;

        $r0 = new com.mycila.inject.internal.cglib.proxy.Proxy$1;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Proxy$1: void <init>()>();

        <com.mycila.inject.internal.cglib.proxy.Proxy: com.mycila.inject.internal.cglib.proxy.CallbackFilter BAD_OBJECT_METHOD_FILTER> = $r0;

        return;
    }
}
