public final class com.google.gxp.compiler.io.CIndenter extends java.lang.Object
{
    private static final java.lang.String INDENT;
    private static final java.lang.String HALF_INDENT;
    private static final java.util.regex.Pattern NEWLINE_PATTERN;
    private final java.lang.Appendable out;
    private final java.util.List halfIndentMarkers;
    private int indentationLevel;

    public transient void <init>(java.lang.Appendable, java.lang.String[])
    {
        java.lang.Appendable r1, $r3;
        java.lang.Object $r2;
        java.lang.String[] r4;
        com.google.gxp.com.google.common.collect.ImmutableList $r5;
        com.google.gxp.compiler.io.CIndenter r0;

        r0 := @this: com.google.gxp.compiler.io.CIndenter;

        r1 := @parameter0: java.lang.Appendable;

        r4 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.gxp.compiler.io.CIndenter: int indentationLevel> = 0;

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.Appendable) $r2;

        r0.<com.google.gxp.compiler.io.CIndenter: java.lang.Appendable out> = $r3;

        $r5 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList of(java.lang.Object[])>(r4);

        r0.<com.google.gxp.compiler.io.CIndenter: java.util.List halfIndentMarkers> = $r5;

        return;
    }

    private void appendIndent(boolean) throws java.io.IOException
    {
        java.lang.Appendable $r1;
        com.google.gxp.compiler.io.CIndenter r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r2;
        boolean z0;

        r0 := @this: com.google.gxp.compiler.io.CIndenter;

        z0 := @parameter0: boolean;

        i3 = 0;

     label1:
        $i0 = r0.<com.google.gxp.compiler.io.CIndenter: int indentationLevel>;

        if i3 >= $i0 goto label4;

        $r1 = r0.<com.google.gxp.compiler.io.CIndenter: java.lang.Appendable out>;

        if z0 == 0 goto label2;

        $i1 = r0.<com.google.gxp.compiler.io.CIndenter: int indentationLevel>;

        $i2 = $i1 - 1;

        if i3 != $i2 goto label2;

        $r2 = " ";

        goto label3;

     label2:
        $r2 = "  ";

     label3:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    private void appendTailComment(int, java.lang.String) throws java.io.IOException
    {
        java.lang.Appendable $r3, $r4;
        com.google.gxp.compiler.io.CIndenter r1;
        int $i0, $i1, $i2, i3, i4, $i5, $i6, $i7, i8;
        java.lang.String r0, $r2;

        r1 := @this: com.google.gxp.compiler.io.CIndenter;

        i4 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $i1 = r1.<com.google.gxp.compiler.io.CIndenter: int indentationLevel>;

        $r2 = "  ";

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        i3 = $i1 * $i2;

        $i5 = i4 + i3;

        $i6 = 80 - $i5;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, 3);

        i8 = 0;

     label1:
        if i8 >= $i7 goto label2;

        $r4 = r1.<com.google.gxp.compiler.io.CIndenter: java.lang.Appendable out>;

        interfaceinvoke $r4.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(" ");

        i8 = i8 + 1;

        goto label1;

     label2:
        $r3 = r1.<com.google.gxp.compiler.io.CIndenter: java.lang.Appendable out>;

        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r0);

     label3:
        return;
    }

    public void addIndent()
    {
        int $i0, $i1;
        com.google.gxp.compiler.io.CIndenter r0;

        r0 := @this: com.google.gxp.compiler.io.CIndenter;

        $i0 = r0.<com.google.gxp.compiler.io.CIndenter: int indentationLevel>;

        $i1 = $i0 + 1;

        r0.<com.google.gxp.compiler.io.CIndenter: int indentationLevel> = $i1;

        return;
    }

    public void appendLine(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        com.google.gxp.compiler.io.CIndenter r0;

        r0 := @this: com.google.gxp.compiler.io.CIndenter;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.io.CIndenter: void appendLine(java.lang.CharSequence,java.lang.String)>(r1, "");

        return;
    }

    public void appendLine(java.lang.CharSequence, java.lang.String)
    {
        com.google.gxp.compiler.io.CIndenter r1;
        java.util.regex.Matcher $r4;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence r0, $r5, $r9;
        java.util.List $r2, $r12;
        java.util.regex.Pattern $r3;
        com.google.gxp.compiler.io.RuntimeIOException $r16;
        int $i0, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16;
        java.lang.String r7;
        java.lang.Appendable $r6, $r8, $r10, $r11, $r13;
        char $c1, $c6;
        java.io.IOException $r14;

        r1 := @this: com.google.gxp.compiler.io.CIndenter;

        r0 := @parameter0: java.lang.CharSequence;

        r7 := @parameter1: java.lang.String;

     label1:
        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label3;

        $i13 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i13 <= 0 goto label2;

        specialinvoke r1.<com.google.gxp.compiler.io.CIndenter: void appendIndent(boolean)>(0);

        specialinvoke r1.<com.google.gxp.compiler.io.CIndenter: void appendTailComment(int,java.lang.String)>(0, r7);

     label2:
        $r13 = r1.<com.google.gxp.compiler.io.CIndenter: java.lang.Appendable out>;

        interfaceinvoke $r13.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\n");

        goto label7;

     label3:
        $c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(0);

        $i15 = (int) $c1;

        if $i15 != 125 goto label4;

        $i11 = r1.<com.google.gxp.compiler.io.CIndenter: int indentationLevel>;

        $i12 = $i11 - 1;

        r1.<com.google.gxp.compiler.io.CIndenter: int indentationLevel> = $i12;

     label4:
        $r2 = r1.<com.google.gxp.compiler.io.CIndenter: java.util.List halfIndentMarkers>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r0);

        specialinvoke r1.<com.google.gxp.compiler.io.CIndenter: void appendIndent(boolean)>($z0);

        $r3 = <com.google.gxp.compiler.io.CIndenter: java.util.regex.Pattern NEWLINE_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        i14 = 0;

     label5:
        $z2 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z2 == 0 goto label6;

        $i9 = virtualinvoke $r4.<java.util.regex.Matcher: int start()>();

        $r9 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i14, $i9);

        $r10 = r1.<com.google.gxp.compiler.io.CIndenter: java.lang.Appendable out>;

        interfaceinvoke $r10.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r9);

        $i10 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        specialinvoke r1.<com.google.gxp.compiler.io.CIndenter: void appendTailComment(int,java.lang.String)>($i10, r7);

        $r11 = r1.<com.google.gxp.compiler.io.CIndenter: java.lang.Appendable out>;

        interfaceinvoke $r11.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\n");

        $r12 = r1.<com.google.gxp.compiler.io.CIndenter: java.util.List halfIndentMarkers>;

        $z1 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>(r0);

        specialinvoke r1.<com.google.gxp.compiler.io.CIndenter: void appendIndent(boolean)>($z1);

        i14 = virtualinvoke $r4.<java.util.regex.Matcher: int end()>();

        goto label5;

     label6:
        $i2 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $r5 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i14, $i2);

        $r6 = r1.<com.google.gxp.compiler.io.CIndenter: java.lang.Appendable out>;

        interfaceinvoke $r6.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r5);

        $i3 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        specialinvoke r1.<com.google.gxp.compiler.io.CIndenter: void appendTailComment(int,java.lang.String)>($i3, r7);

        $r8 = r1.<com.google.gxp.compiler.io.CIndenter: java.lang.Appendable out>;

        interfaceinvoke $r8.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\n");

        $i4 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $i5 = $i4 - 1;

        $c6 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i5);

        $i16 = (int) $c6;

        if $i16 != 123 goto label7;

        $i7 = r1.<com.google.gxp.compiler.io.CIndenter: int indentationLevel>;

        $i8 = $i7 + 1;

        r1.<com.google.gxp.compiler.io.CIndenter: int indentationLevel> = $i8;

     label7:
        goto label9;

     label8:
        $r14 := @caughtexception;

        $r16 = new com.google.gxp.compiler.io.RuntimeIOException;

        specialinvoke $r16.<com.google.gxp.compiler.io.RuntimeIOException: void <init>(java.io.IOException)>($r14);

        throw $r16;

     label9:
        return;

        catch java.io.IOException from label1 to label7 with label8;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <com.google.gxp.compiler.io.CIndenter: java.lang.String HALF_INDENT> = " ";

        <com.google.gxp.compiler.io.CIndenter: java.lang.String INDENT> = "  ";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\n");

        <com.google.gxp.compiler.io.CIndenter: java.util.regex.Pattern NEWLINE_PATTERN> = $r0;

        return;
    }
}
