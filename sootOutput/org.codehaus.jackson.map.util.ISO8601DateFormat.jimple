public class org.codehaus.jackson.map.util.ISO8601DateFormat extends java.text.DateFormat
{
    private static final long serialVersionUID;
    private static java.util.Calendar CALENDAR;
    private static java.text.NumberFormat NUMBER_FORMAT;

    public void <init>()
    {
        org.codehaus.jackson.map.util.ISO8601DateFormat r0;
        java.util.Calendar $r2;
        java.text.NumberFormat $r1;

        r0 := @this: org.codehaus.jackson.map.util.ISO8601DateFormat;

        specialinvoke r0.<java.text.DateFormat: void <init>()>();

        $r1 = <org.codehaus.jackson.map.util.ISO8601DateFormat: java.text.NumberFormat NUMBER_FORMAT>;

        r0.<org.codehaus.jackson.map.util.ISO8601DateFormat: java.text.NumberFormat numberFormat> = $r1;

        $r2 = <org.codehaus.jackson.map.util.ISO8601DateFormat: java.util.Calendar CALENDAR>;

        r0.<org.codehaus.jackson.map.util.ISO8601DateFormat: java.util.Calendar calendar> = $r2;

        return;
    }

    public java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.text.FieldPosition r4;
        java.util.Date r0;
        java.lang.StringBuffer r2;
        java.lang.String $r1;
        org.codehaus.jackson.map.util.ISO8601DateFormat r3;

        r3 := @this: org.codehaus.jackson.map.util.ISO8601DateFormat;

        r0 := @parameter0: java.util.Date;

        r2 := @parameter1: java.lang.StringBuffer;

        r4 := @parameter2: java.text.FieldPosition;

        $r1 = staticinvoke <org.codehaus.jackson.map.util.ISO8601Utils: java.lang.String format(java.util.Date)>(r0);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        return r2;
    }

    public java.util.Date parse(java.lang.String, java.text.ParsePosition)
    {
        java.util.Date $r2;
        java.text.ParsePosition r0;
        int $i0;
        java.lang.String r1;
        org.codehaus.jackson.map.util.ISO8601DateFormat r3;

        r3 := @this: org.codehaus.jackson.map.util.ISO8601DateFormat;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.text.ParsePosition;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r0.<java.text.ParsePosition: void setIndex(int)>($i0);

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ISO8601Utils: java.util.Date parse(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.Object clone()
    {
        org.codehaus.jackson.map.util.ISO8601DateFormat r0;

        r0 := @this: org.codehaus.jackson.map.util.ISO8601DateFormat;

        return r0;
    }

    static void <clinit>()
    {
        java.text.DecimalFormat $r1;
        java.util.GregorianCalendar $r0;

        <org.codehaus.jackson.map.util.ISO8601DateFormat: long serialVersionUID> = 1L;

        $r0 = new java.util.GregorianCalendar;

        specialinvoke $r0.<java.util.GregorianCalendar: void <init>()>();

        <org.codehaus.jackson.map.util.ISO8601DateFormat: java.util.Calendar CALENDAR> = $r0;

        $r1 = new java.text.DecimalFormat;

        specialinvoke $r1.<java.text.DecimalFormat: void <init>()>();

        <org.codehaus.jackson.map.util.ISO8601DateFormat: java.text.NumberFormat NUMBER_FORMAT> = $r1;

        return;
    }
}
