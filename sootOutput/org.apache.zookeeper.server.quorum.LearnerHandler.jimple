public class org.apache.zookeeper.server.quorum.LearnerHandler extends java.lang.Thread
{
    private static final org.slf4j.Logger LOG;
    protected final java.net.Socket sock;
    final org.apache.zookeeper.server.quorum.Leader leader;
    long tickOfLastAck;
    protected long sid;
    protected int version;
    final java.util.concurrent.LinkedBlockingQueue queuedPackets;
    private org.apache.jute.BinaryInputArchive ia;
    private org.apache.jute.BinaryOutputArchive oa;
    private java.io.BufferedOutputStream bufferedOutput;
    final org.apache.zookeeper.server.quorum.QuorumPacket proposalOfDeath;
    private org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType learnerType;

    public java.net.Socket getSocket()
    {
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        java.net.Socket $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        $r1 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        return $r1;
    }

    long getSid()
    {
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        $l0 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid>;

        return $l0;
    }

    int getVersion()
    {
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        int $i0;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        $i0 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: int version>;

        return $i0;
    }

    void <init>(java.net.Socket, org.apache.zookeeper.server.quorum.Leader) throws java.io.IOException
    {
        java.net.Socket r3;
        java.net.SocketAddress $r4;
        java.util.concurrent.LinkedBlockingQueue $r7;
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        org.apache.zookeeper.server.quorum.QuorumPacket $r8;
        org.apache.zookeeper.server.quorum.Leader r10;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r9;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        r3 := @parameter0: java.net.Socket;

        r10 := @parameter1: org.apache.zookeeper.server.quorum.Leader;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LearnerHandler-");

        $r4 = virtualinvoke r3.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>($r6);

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid> = 0L;

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: int version> = 1;

        $r7 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r7.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.util.concurrent.LinkedBlockingQueue queuedPackets> = $r7;

        $r8 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r8.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.QuorumPacket proposalOfDeath> = $r8;

        $r9 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType learnerType> = $r9;

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock> = r3;

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader> = r10;

        virtualinvoke r10.<org.apache.zookeeper.server.quorum.Leader: void addLearnerHandler(org.apache.zookeeper.server.quorum.LearnerHandler)>(r0);

        return;
    }

    public java.lang.String toString()
    {
        java.net.Socket $r3;
        long $l0;
        java.util.concurrent.LinkedBlockingQueue $r7;
        org.apache.zookeeper.server.quorum.LearnerHandler r2;
        int $i1;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6;
        java.lang.String $r8;
        boolean $z0;

        r2 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LearnerHandler ");

        $r3 = r2.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tickOfLastAck:");

        $l0 = virtualinvoke r2.<org.apache.zookeeper.server.quorum.LearnerHandler: long tickOfLastAck()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" synced?:");

        $z0 = virtualinvoke r2.<org.apache.zookeeper.server.quorum.LearnerHandler: boolean synced()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" queuedPacketLength:");

        $r7 = r2.<org.apache.zookeeper.server.quorum.LearnerHandler: java.util.concurrent.LinkedBlockingQueue queuedPackets>;

        $i1 = virtualinvoke $r7.<java.util.concurrent.LinkedBlockingQueue: int size()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType getLearnerType()
    {
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        $r1 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType learnerType>;

        return $r1;
    }

    private void sendPackets() throws java.lang.InterruptedException
    {
        org.apache.jute.BinaryOutputArchive $r5;
        java.net.Socket $r18, $r24;
        long l1;
        java.io.BufferedOutputStream $r8;
        org.apache.zookeeper.server.quorum.QuorumPacket $r3, $r6, r25;
        int $i0;
        java.lang.String $r16, $r23;
        boolean $z0, $z1;
        org.slf4j.Logger $r4, $r7, $r13, $r20;
        java.io.IOException $r11, $r17;
        java.util.concurrent.LinkedBlockingQueue $r1, $r9;
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        java.lang.Object $r2, $r10;
        java.lang.StringBuilder $r12, $r14, $r15, $r19, $r21, $r22;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        l1 = 16L;

     label01:
        $r1 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.util.concurrent.LinkedBlockingQueue queuedPackets>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll()>();

        $r6 = (org.apache.zookeeper.server.quorum.QuorumPacket) $r2;

        r25 = $r6;

        if $r6 != null goto label02;

        $r8 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.io.BufferedOutputStream bufferedOutput>;

        virtualinvoke $r8.<java.io.BufferedOutputStream: void flush()>();

        $r9 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.util.concurrent.LinkedBlockingQueue queuedPackets>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>();

        r25 = (org.apache.zookeeper.server.quorum.QuorumPacket) $r10;

     label02:
        $r3 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.QuorumPacket proposalOfDeath>;

        if r25 != $r3 goto label04;

     label03:
        goto label13;

     label04:
        $i0 = virtualinvoke r25.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i0 != 5 goto label05;

        l1 = 128L;

     label05:
        $r4 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label06;

        $r7 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logQuorumPacket(org.slf4j.Logger,long,char,org.apache.zookeeper.server.quorum.QuorumPacket)>($r7, l1, 111, r25);

     label06:
        $r5 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryOutputArchive oa>;

        virtualinvoke $r5.<org.apache.jute.BinaryOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>(r25, "packet");

     label07:
        goto label01;

     label08:
        $r17 := @caughtexception;

        $r18 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $z1 = virtualinvoke $r18.<java.net.Socket: boolean isClosed()>();

        if $z1 != 0 goto label12;

        $r20 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected exception at ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r23, $r17);

     label09:
        $r24 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        virtualinvoke $r24.<java.net.Socket: void close()>();

     label10:
        goto label12;

     label11:
        $r11 := @caughtexception;

        $r13 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error closing socket for handler ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r16, $r11);

     label12:
        goto label13;

     label13:
        return;

        catch java.io.IOException from label01 to label03 with label08;
        catch java.io.IOException from label04 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public static java.lang.String packetToString(org.apache.zookeeper.server.quorum.QuorumPacket)
    {
        org.apache.zookeeper.server.quorum.QuorumPacket r0;

        r0 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPacket;

        return null;
    }

    public void run()
    {
        java.io.BufferedInputStream $r290;
        java.lang.Integer $r166;
        org.apache.zookeeper.server.quorum.StateSummary r266, $r296, $r300;
        java.io.Serializable $r284, $r285, $r286, $r287, $r288, $r289;
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        org.apache.zookeeper.server.quorum.LearnerSyncRequest $r320;
        java.io.ByteArrayOutputStream $r316;
        org.apache.zookeeper.server.quorum.LearnerInfo $r294;
        org.apache.jute.BinaryOutputArchive $r9, $r18, $r63, $r157, $r158, $r162;
        java.io.ByteArrayInputStream $r312, $r314;
        java.io.DataInputStream $r313, $r315;
        int $i0, $i7, $i9, $i10, $i18, $i22, $i23, $i26, $i27, $i28, $i29, $i30, $i32, $i34, $i35, $i37, $i40, $i41, $i42, $i51, $i53, $i55, $i58, $i72, $i73, $i74, $i75, $i76;
        org.apache.jute.BinaryInputArchive $r4, $r11, $r21, $r68, $r84;
        org.apache.zookeeper.server.quorum.Leader $r13, $r15, $r25, $r26, $r31, $r34, $r51, $r55, $r69, $r72, $r74, $r77, $r79, $r86, $r93, $r105, $r110, $r125, $r130, $r154, $r159, $r191, $r259, $r278, $r279;
        java.lang.String $r42, $r45, $r48, $r50, $r100, $r104, $r119, $r139, $r144, $r148, $r151, $r153, $r164, $r169, $r170, $r178, $r181, $r188, $r199, $r202, $r209, $r218, $r228, $r237, $r248, $r251, $r265, $r275, $r277;
        java.net.SocketAddress $r71, $r281;
        org.apache.zookeeper.server.quorum.LearnerHandler$1 $r307;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8;
        org.apache.zookeeper.server.Request r283, $r321;
        java.util.List $r124, $r128;
        java.io.OutputStream $r7;
        java.io.InputStream $r3;
        byte[] $r12, $r22, $r89, $r95, $r108, $r120, r267;
        byte $b20, $b43, $b44, $b45, $b47, $b48, b59, b68, b69, b70, b71;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r30;
        java.lang.Long $r262;
        java.util.Map $r261;
        java.lang.StringBuilder $r39, $r40, $r41, $r43, $r44, $r46, $r47, $r49, $r99, $r101, $r102, $r103, $r117, $r118, $r135, $r137, $r138, $r143, $r145, $r146, $r147, $r149, $r150, $r152, $r179, $r180, $r184, $r186, $r187, $r198, $r200, $r201, $r205, $r207, $r208, $r214, $r216, $r217, $r224, $r226, $r227, $r233, $r235, $r236, $r247, $r249, $r250, $r256, $r257, $r258, $r264, $r274, $r276, $r293, $r295, $r299, $r301, $r303, $r306, $r311, $r318, $r319, $r322, $r323, $r324, $r325, $r326, $r327;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l8, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l19, $l21, $l24, $l25, $l31, $l33, $l36, $l38, $l39, $l46, $l49, $l50, $l52, $l54, $l56, $l57, l60, l61, l62, $l63, $l64, l65, $l66, $l67;
        java.io.IOException $r230, $r239;
        java.util.concurrent.atomic.AtomicLong $r14;
        java.util.LinkedList $r54;
        org.slf4j.Logger $r38, $r58, $r85, $r98, $r114, $r116, $r129, $r132, $r134, $r142, $r163, $r165, $r167, $r168, $r171, $r177, $r183, $r197, $r204, $r213, $r221, $r223, $r232, $r242, $r246, $r254, $r272, $r282;
        org.apache.zookeeper.KeeperException$SessionExpiredException $r244;
        org.apache.zookeeper.server.quorum.LeaderZooKeeperServer $r27, $r32, $r35, $r52, $r56, $r78, $r80, $r94, $r106, $r111, $r126, $r131, $r155, $r160;
        java.lang.Object $r173, $r263;
        org.apache.zookeeper.server.quorum.QuorumPeer $r73, $r75, $r87, $r260;
        org.apache.zookeeper.server.quorum.QuorumPacket $r174, $r175, $r269, $r271, $r292, $r297, $r298, $r302, $r304, $r305, $r308, $r309, $r310;
        java.io.DataOutputStream $r317;
        org.apache.zookeeper.server.quorum.Leader$Proposal r268;
        java.lang.Throwable $r211, $r252, $r253;
        org.apache.zookeeper.server.ZKDatabase $r28, $r33, $r36, $r53, $r57, $r156, $r161;
        java.util.concurrent.locks.ReentrantReadWriteLock $r29;
        java.io.BufferedOutputStream $r8, $r19, $r61, $r64, $r65, $r291;
        java.nio.ByteBuffer $r16, $r23, $r121, $r122, $r194, $r195;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r112, $r113, $r192;
        java.util.concurrent.LinkedBlockingQueue $r60, $r82, $r96;
        java.net.Socket $r2, $r6, $r70, $r76, $r136, $r140, $r185, $r189, $r206, $r210, $r215, $r219, $r225, $r229, $r234, $r238, $r240, $r241, $r243, $r280;
        java.util.Iterator $r172;
        java.lang.InterruptedException $r220;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

     label01:
        $r290 = new java.io.BufferedInputStream;

        $r2 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r3 = virtualinvoke $r2.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r290.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r3);

        $r4 = staticinvoke <org.apache.jute.BinaryInputArchive: org.apache.jute.BinaryInputArchive getArchive(java.io.InputStream)>($r290);

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryInputArchive ia> = $r4;

        $r291 = new java.io.BufferedOutputStream;

        $r6 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r7 = virtualinvoke $r6.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r291.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r7);

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.io.BufferedOutputStream bufferedOutput> = $r291;

        $r8 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.io.BufferedOutputStream bufferedOutput>;

        $r9 = staticinvoke <org.apache.jute.BinaryOutputArchive: org.apache.jute.BinaryOutputArchive getArchive(java.io.OutputStream)>($r8);

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryOutputArchive oa> = $r9;

        $r292 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r292.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>()>();

        $r11 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryInputArchive ia>;

        virtualinvoke $r11.<org.apache.jute.BinaryInputArchive: void readRecord(org.apache.jute.Record,java.lang.String)>($r292, "packet");

        $i0 = virtualinvoke $r292.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i0 == 11 goto label03;

        $i55 = virtualinvoke $r292.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i55 == 16 goto label03;

        $r197 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r293 = new java.lang.StringBuilder;

        specialinvoke $r293.<java.lang.StringBuilder: void <init>()>();

        $r198 = virtualinvoke $r293.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("First packet ");

        $r199 = virtualinvoke $r292.<org.apache.zookeeper.server.quorum.QuorumPacket: java.lang.String toString()>();

        $r200 = virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r199);

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not FOLLOWERINFO or OBSERVERINFO!");

        $r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r197.<org.slf4j.Logger: void error(java.lang.String)>($r202);

        goto label66;

     label02:
        return;

     label03:
        $r12 = virtualinvoke $r292.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        if $r12 == null goto label05;

        $i51 = lengthof $r12;

        if $i51 != 8 goto label04;

        $r195 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r12);

        $l54 = virtualinvoke $r195.<java.nio.ByteBuffer: long getLong()>();

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid> = $l54;

        goto label06;

     label04:
        $r294 = new org.apache.zookeeper.server.quorum.LearnerInfo;

        specialinvoke $r294.<org.apache.zookeeper.server.quorum.LearnerInfo: void <init>()>();

        $r194 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r12);

        staticinvoke <org.apache.zookeeper.server.ByteBufferInputStream: void byteBuffer2Record(java.nio.ByteBuffer,org.apache.jute.Record)>($r194, $r294);

        $l52 = virtualinvoke $r294.<org.apache.zookeeper.server.quorum.LearnerInfo: long getServerid()>();

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid> = $l52;

        $i53 = virtualinvoke $r294.<org.apache.zookeeper.server.quorum.LearnerInfo: int getProtocolVersion()>();

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: int version> = $i53;

        goto label06;

     label05:
        $r13 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r14 = $r13.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.atomic.AtomicLong followerCounter>;

        $l1 = virtualinvoke $r14.<java.util.concurrent.atomic.AtomicLong: long getAndDecrement()>();

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid> = $l1;

     label06:
        $r254 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r295 = new java.lang.StringBuilder;

        specialinvoke $r295.<java.lang.StringBuilder: void <init>()>();

        $r256 = virtualinvoke $r295.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Follower sid: ");

        $l56 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid>;

        $r257 = virtualinvoke $r256.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l56);

        $r258 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : info : ");

        $r259 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r260 = $r259.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r261 = $r260.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map quorumPeers>;

        $l57 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid>;

        $r262 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l57);

        $r263 = interfaceinvoke $r261.<java.util.Map: java.lang.Object get(java.lang.Object)>($r262);

        $r264 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r263);

        $r265 = virtualinvoke $r264.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r254.<org.slf4j.Logger: void info(java.lang.String)>($r265);

        $i58 = virtualinvoke $r292.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i58 != 16 goto label07;

        $r192 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType OBSERVER>;

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType learnerType> = $r192;

     label07:
        $l2 = virtualinvoke $r292.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $l3 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long getEpochFromZxid(long)>($l2);

        $l4 = virtualinvoke $r292.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r15 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $l5 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long getSid()>();

        $l6 = virtualinvoke $r15.<org.apache.zookeeper.server.quorum.Leader: long getEpochToPropose(long,long)>($l5, $l3);

        $i7 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: int getVersion()>();

        if $i7 >= 65536 goto label08;

        $l49 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long getEpochFromZxid(long)>($l4);

        $r296 = new org.apache.zookeeper.server.quorum.StateSummary;

        specialinvoke $r296.<org.apache.zookeeper.server.quorum.StateSummary: void <init>(long,long)>($l49, $l4);

        r266 = $r296;

        $r191 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $l50 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long getSid()>();

        virtualinvoke $r191.<org.apache.zookeeper.server.quorum.Leader: void waitForEpochAck(long,org.apache.zookeeper.server.quorum.StateSummary)>($l50, $r296);

        goto label11;

     label08:
        r267 = newarray (byte)[4];

        $r16 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r267);

        virtualinvoke $r16.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(65536);

        $r297 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        $l8 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long makeZxid(long,long)>($l6, 0L);

        specialinvoke $r297.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(17, $l8, r267, null);

        $r18 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryOutputArchive oa>;

        virtualinvoke $r18.<org.apache.jute.BinaryOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>($r297, "packet");

        $r19 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.io.BufferedOutputStream bufferedOutput>;

        virtualinvoke $r19.<java.io.BufferedOutputStream: void flush()>();

        $r298 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r298.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>()>();

        $r21 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryInputArchive ia>;

        virtualinvoke $r21.<org.apache.jute.BinaryInputArchive: void readRecord(org.apache.jute.Record,java.lang.String)>($r298, "packet");

        $i9 = virtualinvoke $r298.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i9 == 18 goto label10;

        $r177 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r299 = new java.lang.StringBuilder;

        specialinvoke $r299.<java.lang.StringBuilder: void <init>()>();

        $r178 = virtualinvoke $r298.<org.apache.zookeeper.server.quorum.QuorumPacket: java.lang.String toString()>();

        $r179 = virtualinvoke $r299.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r178);

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not ACKEPOCH");

        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r177.<org.slf4j.Logger: void error(java.lang.String)>($r181);

        goto label69;

     label09:
        return;

     label10:
        $r22 = virtualinvoke $r298.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        $r23 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r22);

        $r300 = new org.apache.zookeeper.server.quorum.StateSummary;

        $i10 = virtualinvoke $r23.<java.nio.ByteBuffer: int getInt()>();

        $l11 = (long) $i10;

        $l12 = virtualinvoke $r298.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        specialinvoke $r300.<org.apache.zookeeper.server.quorum.StateSummary: void <init>(long,long)>($l11, $l12);

        r266 = $r300;

        $r25 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $l13 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long getSid()>();

        virtualinvoke $r25.<org.apache.zookeeper.server.quorum.Leader: void waitForEpochAck(long,org.apache.zookeeper.server.quorum.StateSummary)>($l13, $r300);

     label11:
        $l14 = virtualinvoke r266.<org.apache.zookeeper.server.quorum.StateSummary: long getLastZxid()>();

        b59 = 15;

        b71 = 15;

        b70 = 15;

        b69 = 15;

        b68 = 15;

        l60 = 0L;

        l61 = $l14;

        $r26 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r27 = $r26.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r28 = virtualinvoke $r27.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $r29 = virtualinvoke $r28.<org.apache.zookeeper.server.ZKDatabase: java.util.concurrent.locks.ReentrantReadWriteLock getLogLock()>();

        $r30 = virtualinvoke $r29.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

     label12:
        virtualinvoke $r30.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>();

        $r31 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r32 = $r31.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r33 = virtualinvoke $r32.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $l15 = virtualinvoke $r33.<org.apache.zookeeper.server.ZKDatabase: long getmaxCommittedLog()>();

        $r34 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r35 = $r34.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r36 = virtualinvoke $r35.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $l16 = virtualinvoke $r36.<org.apache.zookeeper.server.ZKDatabase: long getminCommittedLog()>();

        $r38 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r301 = new java.lang.StringBuilder;

        specialinvoke $r301.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r301.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Synchronizing with Follower sid: ");

        $l17 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid>;

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxCommittedLog=0x");

        $r42 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l15);

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minCommittedLog=0x");

        $r45 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l16);

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" peerLastZxid=0x");

        $r48 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l14);

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r38.<org.slf4j.Logger: void info(java.lang.String)>($r50);

        $r51 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r52 = $r51.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r53 = virtualinvoke $r52.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $r54 = virtualinvoke $r53.<org.apache.zookeeper.server.ZKDatabase: java.util.LinkedList getCommittedLog()>();

        $i18 = virtualinvoke $r54.<java.util.LinkedList: int size()>();

        if $i18 == 0 goto label19;

        $r165 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $i42 = virtualinvoke $r54.<java.util.LinkedList: int size()>();

        $r166 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i42);

        interfaceinvoke $r165.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("proposal size is {}", $r166);

        $b43 = $l15 cmp $l14;

        $i72 = (int) $b43;

        if $i72 < 0 goto label17;

        $b45 = $l16 cmp $l14;

        $i73 = (int) $b45;

        if $i73 > 0 goto label17;

        $r171 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        interfaceinvoke $r171.<org.slf4j.Logger: void debug(java.lang.String)>("Sending proposals to follower");

        l62 = $l16;

        z6 = 1;

        b59 = 13;

        b71 = 13;

        b70 = 13;

        b69 = 13;

        b68 = 13;

        l60 = $l15;

        $r172 = virtualinvoke $r54.<java.util.LinkedList: java.util.Iterator iterator()>();

     label13:
        $z7 = interfaceinvoke $r172.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label16;

        $r173 = interfaceinvoke $r172.<java.util.Iterator: java.lang.Object next()>();

        r268 = (org.apache.zookeeper.server.quorum.Leader$Proposal) $r173;

        $r174 = r268.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        $l46 = virtualinvoke $r174.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $b47 = $l46 cmp $l14;

        $i74 = (int) $b47;

        if $i74 > 0 goto label14;

        $r175 = r268.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        l62 = virtualinvoke $r175.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        goto label13;

     label14:
        if z6 == 0 goto label15;

        z6 = 0;

        $b48 = l62 cmp $l14;

        $i75 = (int) $b48;

        if $i75 >= 0 goto label15;

        b59 = 14;

        b71 = 14;

        b70 = 14;

        b69 = 14;

        b68 = 14;

        l60 = l62;

        l61 = l62;

     label15:
        $r269 = r268.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void queuePacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r269);

        $r302 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        $r271 = r268.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        $l63 = virtualinvoke $r271.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        specialinvoke $r302.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(4, $l63, null, null);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void queuePacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r302);

        goto label13;

     label16:
        goto label21;

     label17:
        $b44 = $l14 cmp $l15;

        $i76 = (int) $b44;

        if $i76 <= 0 goto label18;

        $r168 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r169 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l15);

        $r170 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l14);

        interfaceinvoke $r168.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Sending TRUNC to follower zxidToSend=0x{} updates=0x{}", $r169, $r170);

        b59 = 14;

        b71 = 14;

        b70 = 14;

        b69 = 14;

        b68 = 14;

        l60 = $l15;

        l61 = $l15;

        goto label21;

     label18:
        $r167 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        interfaceinvoke $r167.<org.slf4j.Logger: void warn(java.lang.String)>("Unhandled proposal scenario");

        goto label21;

     label19:
        $r55 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r56 = $r55.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r57 = virtualinvoke $r56.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $l19 = virtualinvoke $r57.<org.apache.zookeeper.server.ZKDatabase: long getDataTreeLastProcessedZxid()>();

        $b20 = $l14 cmp $l19;

        if $b20 != 0 goto label20;

        $r163 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r164 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l14);

        interfaceinvoke $r163.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("committedLog is empty but leader and follower are in sync, zxid=0x{}", $r164);

        b59 = 13;

        b71 = 13;

        b70 = 13;

        b69 = 13;

        b68 = 13;

        l60 = $l14;

        goto label21;

     label20:
        $r58 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        interfaceinvoke $r58.<org.slf4j.Logger: void debug(java.lang.String)>("proposals is empty");

     label21:
        $r272 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r303 = new java.lang.StringBuilder;

        specialinvoke $r303.<java.lang.StringBuilder: void <init>()>();

        $r274 = virtualinvoke $r303.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending ");

        $r275 = staticinvoke <org.apache.zookeeper.server.quorum.Leader: java.lang.String getPacketType(int)>(b70);

        $r276 = virtualinvoke $r274.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r275);

        $r277 = virtualinvoke $r276.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r272.<org.slf4j.Logger: void info(java.lang.String)>($r277);

        $r278 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $l64 = virtualinvoke $r278.<org.apache.zookeeper.server.quorum.Leader: long startForwarding(org.apache.zookeeper.server.quorum.LearnerHandler,long)>(r0, l61);

        goto label72;

     label22:
        goto label25;

     label23:
        $r253 := @caughtexception;

        goto label73;

     label24:
        throw $r253;

     label25:
        $r304 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        $l21 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long makeZxid(long,long)>($l6, 0L);

        specialinvoke $r304.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(10, $l21, null, null);

        $i22 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: int getVersion()>();

        if $i22 >= 65536 goto label26;

        $r162 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryOutputArchive oa>;

        virtualinvoke $r162.<org.apache.jute.BinaryOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>($r304, "packet");

        goto label27;

     label26:
        $r60 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.util.concurrent.LinkedBlockingQueue queuedPackets>;

        virtualinvoke $r60.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>($r304);

     label27:
        $r61 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.io.BufferedOutputStream bufferedOutput>;

        virtualinvoke $r61.<java.io.BufferedOutputStream: void flush()>();

        if b71 != 15 goto label28;

        $r159 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r160 = $r159.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r161 = virtualinvoke $r160.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        l60 = virtualinvoke $r161.<org.apache.zookeeper.server.ZKDatabase: long getDataTreeLastProcessedZxid()>();

     label28:
        $r63 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryOutputArchive oa>;

        $r305 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r305.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(b69, l60, null, null);

        virtualinvoke $r63.<org.apache.jute.BinaryOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>($r305, "packet");

        $r64 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.io.BufferedOutputStream bufferedOutput>;

        virtualinvoke $r64.<java.io.BufferedOutputStream: void flush()>();

        if b68 != 15 goto label29;

        $r142 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r306 = new java.lang.StringBuilder;

        specialinvoke $r306.<java.lang.StringBuilder: void <init>()>();

        $r143 = virtualinvoke $r306.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending snapshot last zxid of peer is 0x");

        $r144 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l14);

        $r145 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144);

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" zxid of leader is 0x");

        $r148 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l64);

        $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148);

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sent zxid of db as 0x");

        $r151 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l60);

        $r152 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r151);

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r142.<org.slf4j.Logger: void info(java.lang.String)>($r153);

        $r154 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r155 = $r154.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r156 = virtualinvoke $r155.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $r157 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryOutputArchive oa>;

        virtualinvoke $r156.<org.apache.zookeeper.server.ZKDatabase: void serializeSnapshot(org.apache.jute.OutputArchive)>($r157);

        $r158 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryOutputArchive oa>;

        virtualinvoke $r158.<org.apache.jute.BinaryOutputArchive: void writeString(java.lang.String,java.lang.String)>("BenWasHere", "signature");

     label29:
        $r65 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.io.BufferedOutputStream bufferedOutput>;

        virtualinvoke $r65.<java.io.BufferedOutputStream: void flush()>();

        $r307 = new org.apache.zookeeper.server.quorum.LearnerHandler$1;

        specialinvoke $r307.<org.apache.zookeeper.server.quorum.LearnerHandler$1: void <init>(org.apache.zookeeper.server.quorum.LearnerHandler)>(r0);

        virtualinvoke $r307.<org.apache.zookeeper.server.quorum.LearnerHandler$1: void start()>();

        $r308 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r308.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>()>();

        $r68 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryInputArchive ia>;

        virtualinvoke $r68.<org.apache.jute.BinaryInputArchive: void readRecord(org.apache.jute.Record,java.lang.String)>($r308, "packet");

        $i23 = virtualinvoke $r308.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i23 == 3 goto label31;

        $r132 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        interfaceinvoke $r132.<org.slf4j.Logger: void error(java.lang.String)>("Next packet was supposed to be an ACK");

        goto label74;

     label30:
        return;

     label31:
        $r69 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $l24 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid>;

        $l25 = virtualinvoke $r308.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r70 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r71 = virtualinvoke $r70.<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>();

        virtualinvoke $r69.<org.apache.zookeeper.server.quorum.Leader: void processAck(long,long,java.net.SocketAddress)>($l24, $l25, $r71);

        $r76 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r72 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r73 = $r72.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i27 = $r73.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $r74 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r75 = $r74.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i26 = $r75.<org.apache.zookeeper.server.quorum.QuorumPeer: int syncLimit>;

        $i28 = $i27 * $i26;

        virtualinvoke $r76.<java.net.Socket: void setSoTimeout(int)>($i28);

        $r77 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r78 = $r77.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        entermonitor $r78;

     label32:
        $r79 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r80 = $r79.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $z0 = virtualinvoke $r80.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: boolean isRunning()>();

        if $z0 != 0 goto label33;

        $z4 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: boolean isInterrupted()>();

        if $z4 != 0 goto label33;

        $r130 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r131 = $r130.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r131.<java.lang.Object: void wait(long)>(20L);

        goto label32;

     label33:
        exitmonitor $r78;

     label34:
        goto label37;

     label35:
        $r252 := @caughtexception;

        exitmonitor $r78;

     label36:
        throw $r252;

     label37:
        $r82 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.util.concurrent.LinkedBlockingQueue queuedPackets>;

        $r309 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r309.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(12, -1L, null, null);

        virtualinvoke $r82.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>($r309);

     label38:
        $r310 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r310.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>()>();

        $r84 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.jute.BinaryInputArchive ia>;

        virtualinvoke $r84.<org.apache.jute.BinaryInputArchive: void readRecord(org.apache.jute.Record,java.lang.String)>($r310, "packet");

        l65 = 16L;

        $i29 = virtualinvoke $r310.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i29 != 5 goto label39;

        l65 = 128L;

     label39:
        $r85 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r85.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label40;

        $r129 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logQuorumPacket(org.slf4j.Logger,long,char,org.apache.zookeeper.server.quorum.QuorumPacket)>($r129, l65, 105, $r310);

     label40:
        $r86 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r87 = $r86.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i30 = $r87.<org.apache.zookeeper.server.quorum.QuorumPeer: int tick>;

        $l31 = (long) $i30;

        r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long tickOfLastAck> = $l31;

        $i32 = virtualinvoke $r310.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        tableswitch($i32)
        {
            case 1: goto label51;
            case 2: goto label54;
            case 3: goto label41;
            case 4: goto label54;
            case 5: goto label43;
            case 6: goto label45;
            default: goto label54;
        };

     label41:
        $r113 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType learnerType>;

        $r112 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType OBSERVER>;

        if $r113 != $r112 goto label42;

        $r114 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $z3 = interfaceinvoke $r114.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label42;

        $r116 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r311 = new java.lang.StringBuilder;

        specialinvoke $r311.<java.lang.StringBuilder: void <init>()>();

        $r117 = virtualinvoke $r311.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received ACK from Observer  ");

        $l38 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid>;

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l38);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r116.<org.slf4j.Logger: void debug(java.lang.String)>($r119);

     label42:
        $r279 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $l66 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long sid>;

        $l67 = virtualinvoke $r310.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r280 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r281 = virtualinvoke $r280.<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>();

        virtualinvoke $r279.<org.apache.zookeeper.server.quorum.Leader: void processAck(long,long,java.net.SocketAddress)>($l66, $l67, $r281);

        goto label54;

     label43:
        $r312 = new java.io.ByteArrayInputStream;

        $r108 = virtualinvoke $r310.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        specialinvoke $r312.<java.io.ByteArrayInputStream: void <init>(byte[])>($r108);

        $r313 = new java.io.DataInputStream;

        specialinvoke $r313.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r312);

     label44:
        $i35 = virtualinvoke $r313.<java.io.DataInputStream: int available()>();

        if $i35 <= 0 goto label54;

        $l36 = virtualinvoke $r313.<java.io.DataInputStream: long readLong()>();

        $i37 = virtualinvoke $r313.<java.io.DataInputStream: int readInt()>();

        $r110 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r111 = $r110.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r111.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: boolean touch(long,int)>($l36, $i37);

        goto label44;

     label45:
        $r314 = new java.io.ByteArrayInputStream;

        $r89 = virtualinvoke $r310.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        specialinvoke $r314.<java.io.ByteArrayInputStream: void <init>(byte[])>($r89);

        $r315 = new java.io.DataInputStream;

        specialinvoke $r315.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r314);

        $l33 = virtualinvoke $r315.<java.io.DataInputStream: long readLong()>();

        $i34 = virtualinvoke $r315.<java.io.DataInputStream: int readInt()>();

        $r316 = new java.io.ByteArrayOutputStream;

        specialinvoke $r316.<java.io.ByteArrayOutputStream: void <init>()>();

        $r317 = new java.io.DataOutputStream;

        specialinvoke $r317.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r316);

        virtualinvoke $r317.<java.io.DataOutputStream: void writeLong(long)>($l33);

        $r93 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r94 = $r93.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $z2 = virtualinvoke $r94.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: boolean touch(long,int)>($l33, $i34);

        if $z2 == 0 goto label49;

     label46:
        $r105 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r106 = $r105.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r106.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void setOwner(long,java.lang.Object)>($l33, r0);

     label47:
        goto label49;

     label48:
        $r244 := @caughtexception;

        $r246 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r318 = new java.lang.StringBuilder;

        specialinvoke $r318.<java.lang.StringBuilder: void <init>()>();

        $r247 = virtualinvoke $r318.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Somehow session ");

        $r248 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l33);

        $r249 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r248);

        $r250 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expired right after being renewed! (impossible)");

        $r251 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r246.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r251, $r244);

     label49:
        $r282 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $z8 = interfaceinvoke $r282.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z8 == 0 goto label50;

        $r98 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r319 = new java.lang.StringBuilder;

        specialinvoke $r319.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r319.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session 0x");

        $r100 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l33);

        $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is valid: ");

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r98, 32L, $r104);

     label50:
        virtualinvoke $r317.<java.io.DataOutputStream: void writeBoolean(boolean)>($z2);

        $r95 = virtualinvoke $r316.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r310.<org.apache.zookeeper.server.quorum.QuorumPacket: void setData(byte[])>($r95);

        $r96 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.util.concurrent.LinkedBlockingQueue queuedPackets>;

        virtualinvoke $r96.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>($r310);

        goto label54;

     label51:
        $r120 = virtualinvoke $r310.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        $r121 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r120);

        $l39 = virtualinvoke $r121.<java.nio.ByteBuffer: long getLong()>();

        $i40 = virtualinvoke $r121.<java.nio.ByteBuffer: int getInt()>();

        $i41 = virtualinvoke $r121.<java.nio.ByteBuffer: int getInt()>();

        $r122 = virtualinvoke $r121.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        if $i41 != 9 goto label52;

        $r320 = new org.apache.zookeeper.server.quorum.LearnerSyncRequest;

        $r128 = virtualinvoke $r310.<org.apache.zookeeper.server.quorum.QuorumPacket: java.util.List getAuthinfo()>();

        specialinvoke $r320.<org.apache.zookeeper.server.quorum.LearnerSyncRequest: void <init>(org.apache.zookeeper.server.quorum.LearnerHandler,long,int,int,java.nio.ByteBuffer,java.util.List)>(r0, $l39, $i40, $i41, $r122, $r128);

        r283 = $r320;

        goto label53;

     label52:
        $r321 = new org.apache.zookeeper.server.Request;

        $r124 = virtualinvoke $r310.<org.apache.zookeeper.server.quorum.QuorumPacket: java.util.List getAuthinfo()>();

        specialinvoke $r321.<org.apache.zookeeper.server.Request: void <init>(org.apache.zookeeper.server.ServerCnxn,long,int,int,java.nio.ByteBuffer,java.util.List)>(null, $l39, $i40, $i41, $r122, $r124);

        r283 = $r321;

     label53:
        virtualinvoke r283.<org.apache.zookeeper.server.Request: void setOwner(java.lang.Object)>(r0);

        $r125 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r126 = $r125.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r126.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void submitRequest(org.apache.zookeeper.server.Request)>(r283);

        goto label54;

     label54:
        goto label38;

     label55:
        $r239 := @caughtexception;

        $r240 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        if $r240 == null goto label59;

        $r241 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $z5 = virtualinvoke $r241.<java.net.Socket: boolean isClosed()>();

        if $z5 != 0 goto label59;

        $r242 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        interfaceinvoke $r242.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected exception causing shutdown while sock still open", $r239);

     label56:
        $r243 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        virtualinvoke $r243.<java.net.Socket: void close()>();

     label57:
        goto label59;

     label58:
        $r230 := @caughtexception;

     label59:
        goto label77;

     label60:
        goto label65;

     label61:
        $r220 := @caughtexception;

        $r221 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        interfaceinvoke $r221.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected exception causing shutdown", $r220);

        goto label80;

     label62:
        goto label65;

     label63:
        $r211 := @caughtexception;

        goto label83;

     label64:
        throw $r211;

     label65:
        return;

     label66:
        $r204 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r322 = new java.lang.StringBuilder;

        specialinvoke $r322.<java.lang.StringBuilder: void <init>()>();

        $r205 = virtualinvoke $r322.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("******* GOODBYE ");

        $r206 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        if $r206 == null goto label67;

        $r210 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r284 = virtualinvoke $r210.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        goto label68;

     label67:
        $r284 = "<null>";

     label68:
        $r207 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r284);

        $r208 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ********");

        $r209 = virtualinvoke $r208.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r204.<org.slf4j.Logger: void warn(java.lang.String)>($r209);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void shutdown()>();

        goto label02;

     label69:
        $r183 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r323 = new java.lang.StringBuilder;

        specialinvoke $r323.<java.lang.StringBuilder: void <init>()>();

        $r184 = virtualinvoke $r323.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("******* GOODBYE ");

        $r185 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        if $r185 == null goto label70;

        $r189 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r285 = virtualinvoke $r189.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        goto label71;

     label70:
        $r285 = "<null>";

     label71:
        $r186 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r285);

        $r187 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ********");

        $r188 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r183.<org.slf4j.Logger: void warn(java.lang.String)>($r188);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void shutdown()>();

        goto label09;

     label72:
        virtualinvoke $r30.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        goto label22;

     label73:
        virtualinvoke $r30.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        goto label24;

     label74:
        $r134 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r324 = new java.lang.StringBuilder;

        specialinvoke $r324.<java.lang.StringBuilder: void <init>()>();

        $r135 = virtualinvoke $r324.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("******* GOODBYE ");

        $r136 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        if $r136 == null goto label75;

        $r140 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r286 = virtualinvoke $r140.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        goto label76;

     label75:
        $r286 = "<null>";

     label76:
        $r137 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r286);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ********");

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r134.<org.slf4j.Logger: void warn(java.lang.String)>($r139);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void shutdown()>();

        goto label30;

     label77:
        $r232 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r325 = new java.lang.StringBuilder;

        specialinvoke $r325.<java.lang.StringBuilder: void <init>()>();

        $r233 = virtualinvoke $r325.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("******* GOODBYE ");

        $r234 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        if $r234 == null goto label78;

        $r238 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r287 = virtualinvoke $r238.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        goto label79;

     label78:
        $r287 = "<null>";

     label79:
        $r235 = virtualinvoke $r233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r287);

        $r236 = virtualinvoke $r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ********");

        $r237 = virtualinvoke $r236.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r232.<org.slf4j.Logger: void warn(java.lang.String)>($r237);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void shutdown()>();

        goto label60;

     label80:
        $r223 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r326 = new java.lang.StringBuilder;

        specialinvoke $r326.<java.lang.StringBuilder: void <init>()>();

        $r224 = virtualinvoke $r326.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("******* GOODBYE ");

        $r225 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        if $r225 == null goto label81;

        $r229 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r288 = virtualinvoke $r229.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        goto label82;

     label81:
        $r288 = "<null>";

     label82:
        $r226 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r288);

        $r227 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ********");

        $r228 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r223.<org.slf4j.Logger: void warn(java.lang.String)>($r228);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void shutdown()>();

        goto label62;

     label83:
        $r213 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        $r327 = new java.lang.StringBuilder;

        specialinvoke $r327.<java.lang.StringBuilder: void <init>()>();

        $r214 = virtualinvoke $r327.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("******* GOODBYE ");

        $r215 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        if $r215 == null goto label84;

        $r219 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $r289 = virtualinvoke $r219.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        goto label85;

     label84:
        $r289 = "<null>";

     label85:
        $r216 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r289);

        $r217 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ********");

        $r218 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r213.<org.slf4j.Logger: void warn(java.lang.String)>($r218);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void shutdown()>();

        goto label64;

        catch java.lang.Throwable from label12 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
        catch java.lang.Throwable from label32 to label34 with label35;
        catch java.lang.Throwable from label35 to label36 with label35;
        catch org.apache.zookeeper.KeeperException$SessionExpiredException from label46 to label47 with label48;
        catch java.io.IOException from label01 to label02 with label55;
        catch java.io.IOException from label03 to label09 with label55;
        catch java.io.IOException from label10 to label30 with label55;
        catch java.io.IOException from label31 to label55 with label55;
        catch java.io.IOException from label56 to label57 with label58;
        catch java.lang.InterruptedException from label01 to label02 with label61;
        catch java.lang.InterruptedException from label03 to label09 with label61;
        catch java.lang.InterruptedException from label10 to label30 with label61;
        catch java.lang.InterruptedException from label31 to label55 with label61;
        catch java.lang.Throwable from label01 to label02 with label63;
        catch java.lang.Throwable from label03 to label09 with label63;
        catch java.lang.Throwable from label10 to label30 with label63;
        catch java.lang.Throwable from label31 to label60 with label63;
        catch java.lang.Throwable from label61 to label62 with label63;
        catch java.lang.Throwable from label63 to label64 with label63;
        catch java.io.IOException from label72 to label73 with label55;
        catch java.lang.InterruptedException from label72 to label73 with label61;
        catch java.lang.Throwable from label72 to label73 with label63;
        catch java.io.IOException from label73 to label74 with label55;
        catch java.lang.InterruptedException from label73 to label74 with label61;
        catch java.lang.Throwable from label73 to label74 with label63;
    }

    public void shutdown()
    {
        java.net.Socket $r3, $r5, $r6;
        org.slf4j.Logger $r8, $r10;
        java.io.IOException $r7;
        java.util.concurrent.LinkedBlockingQueue $r2;
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        org.apache.zookeeper.server.quorum.QuorumPacket $r1;
        org.apache.zookeeper.server.quorum.Leader $r4;
        java.lang.InterruptedException $r9;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.util.concurrent.LinkedBlockingQueue queuedPackets>;

        $r1 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.QuorumPacket proposalOfDeath>;

        virtualinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: void put(java.lang.Object)>($r1);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring unexpected exception", $r9);

     label4:
        $r3 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        if $r3 == null goto label5;

        $r5 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        $z0 = virtualinvoke $r5.<java.net.Socket: boolean isClosed()>();

        if $z0 != 0 goto label5;

        $r6 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.net.Socket sock>;

        virtualinvoke $r6.<java.net.Socket: void close()>();

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        $r8 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring unexpected exception during socket close", $r7);

     label7:
        virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void interrupt()>();

        $r4 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        virtualinvoke $r4.<org.apache.zookeeper.server.quorum.Leader: void removeLearnerHandler(org.apache.zookeeper.server.quorum.LearnerHandler)>(r0);

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public long tickOfLastAck()
    {
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        $l0 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long tickOfLastAck>;

        return $l0;
    }

    public void ping()
    {
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        org.apache.zookeeper.server.quorum.QuorumPacket $r3;
        java.lang.Throwable $r4;
        org.apache.zookeeper.server.quorum.Leader $r1, $r2;
        long l0;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        $r1 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        l0 = $r2.<org.apache.zookeeper.server.quorum.Leader: long lastProposed>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        $r3 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r3.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(5, l0, null, null);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void queuePacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r3);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void queuePacket(org.apache.zookeeper.server.quorum.QuorumPacket)
    {
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        org.apache.zookeeper.server.quorum.QuorumPacket r1;
        java.util.concurrent.LinkedBlockingQueue $r2;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPacket;

        $r2 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: java.util.concurrent.LinkedBlockingQueue queuedPackets>;

        virtualinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean synced()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r2, $r4;
        long $l3, $l4;
        org.apache.zookeeper.server.quorum.LearnerHandler r0;
        org.apache.zookeeper.server.quorum.Leader $r1, $r3;
        byte $b5;
        int $i0, $i1, $i2, $i6;
        boolean $z0, $z1;

        r0 := @this: org.apache.zookeeper.server.quorum.LearnerHandler;

        $z0 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: boolean isAlive()>();

        if $z0 == 0 goto label1;

        $l4 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: long tickOfLastAck>;

        $r1 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r2 = $r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i1 = $r2.<org.apache.zookeeper.server.quorum.QuorumPeer: int tick>;

        $r3 = r0.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.Leader leader>;

        $r4 = $r3.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i0 = $r4.<org.apache.zookeeper.server.quorum.QuorumPeer: int syncLimit>;

        $i2 = $i1 - $i0;

        $l3 = (long) $i2;

        $b5 = $l4 cmp $l3;

        $i6 = (int) $b5;

        if $i6 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static void access$000(org.apache.zookeeper.server.quorum.LearnerHandler) throws java.lang.InterruptedException
    {
        org.apache.zookeeper.server.quorum.LearnerHandler r0;

        r0 := @parameter0: org.apache.zookeeper.server.quorum.LearnerHandler;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.LearnerHandler: void sendPackets()>();

        return;
    }

    static org.slf4j.Logger access$100()
    {
        org.slf4j.Logger $r0;

        $r0 = <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/quorum/LearnerHandler;");

        <org.apache.zookeeper.server.quorum.LearnerHandler: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
