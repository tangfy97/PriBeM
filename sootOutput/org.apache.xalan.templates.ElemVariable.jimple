public class org.apache.xalan.templates.ElemVariable extends org.apache.xalan.templates.ElemTemplateElement
{
    protected int m_index;
    int m_frameSize;
    private org.apache.xpath.XPath m_selectPattern;
    protected org.apache.xml.utils.QName m_qname;
    private boolean m_isTopLevel;

    public void <init>()
    {
        int $i1;
        org.apache.xalan.templates.ElemVariable r0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.xalan.templates.ElemVariable: int m_frameSize> = $i1;

        r0.<org.apache.xalan.templates.ElemVariable: boolean m_isTopLevel> = 0;

        return;
    }

    public void setIndex(int)
    {
        int i0;
        org.apache.xalan.templates.ElemVariable r0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        i0 := @parameter0: int;

        r0.<org.apache.xalan.templates.ElemVariable: int m_index> = i0;

        return;
    }

    public int getIndex()
    {
        int $i0;
        org.apache.xalan.templates.ElemVariable r0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        $i0 = r0.<org.apache.xalan.templates.ElemVariable: int m_index>;

        return $i0;
    }

    public void setSelect(org.apache.xpath.XPath)
    {
        org.apache.xalan.templates.ElemVariable r0;
        org.apache.xpath.XPath r1;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        r1 := @parameter0: org.apache.xpath.XPath;

        r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern> = r1;

        return;
    }

    public org.apache.xpath.XPath getSelect()
    {
        org.apache.xalan.templates.ElemVariable r0;
        org.apache.xpath.XPath $r1;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        $r1 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        return $r1;
    }

    public void setName(org.apache.xml.utils.QName)
    {
        org.apache.xml.utils.QName r1;
        org.apache.xalan.templates.ElemVariable r0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r0.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName m_qname> = r1;

        return;
    }

    public org.apache.xml.utils.QName getName()
    {
        org.apache.xml.utils.QName $r1;
        org.apache.xalan.templates.ElemVariable r0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        $r1 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName m_qname>;

        return $r1;
    }

    public void setIsTopLevel(boolean)
    {
        org.apache.xalan.templates.ElemVariable r0;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        z0 := @parameter0: boolean;

        r0.<org.apache.xalan.templates.ElemVariable: boolean m_isTopLevel> = z0;

        return;
    }

    public boolean getIsTopLevel()
    {
        org.apache.xalan.templates.ElemVariable r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        $z0 = r0.<org.apache.xalan.templates.ElemVariable: boolean m_isTopLevel>;

        return $z0;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemVariable r0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        return 73;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemVariable r0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        return "variable";
    }

    public void <init>(org.apache.xalan.templates.ElemVariable) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.utils.QName $r3;
        org.apache.xalan.templates.ElemVariable r0, r1;
        org.apache.xpath.XPath $r2;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        r1 := @parameter0: org.apache.xalan.templates.ElemVariable;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.xalan.templates.ElemVariable: int m_frameSize> = $i1;

        r0.<org.apache.xalan.templates.ElemVariable: boolean m_isTopLevel> = 0;

        $r2 = r1.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern> = $r2;

        $r3 = r1.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName m_qname>;

        r0.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName m_qname> = $r3;

        $z0 = r1.<org.apache.xalan.templates.ElemVariable: boolean m_isTopLevel>;

        r0.<org.apache.xalan.templates.ElemVariable: boolean m_isTopLevel> = $z0;

        return;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemVariable r2;
        org.apache.xalan.trace.TraceManager $r6, $r7;
        org.apache.xpath.VariableStack $r5;
        org.apache.xpath.XPathContext $r1, $r4;
        int $i0, $i1;
        org.apache.xpath.objects.XObject $r3;
        boolean $z0, $z1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r2 := @this: org.apache.xalan.templates.ElemVariable;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r7.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label1:
        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $i0 = virtualinvoke $r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r3 = virtualinvoke r2.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)>(r0, $i0);

        $r4 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r5 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        $i1 = r2.<org.apache.xalan.templates.ElemVariable: int m_index>;

        virtualinvoke $r5.<org.apache.xpath.VariableStack: void setLocalVariable(int,org.apache.xpath.objects.XObject)>($i1, $r3);

        $z1 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r6.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label2:
        return;
    }

    public org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl, int) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r11, $r12;
        org.apache.xalan.templates.ElemVariable r2;
        org.apache.xalan.trace.TraceManager $r9;
        org.apache.xpath.objects.XRTreeFrag $r6;
        org.apache.xpath.XPathContext $r1;
        int i0, i1;
        boolean $z0, $z1;
        org.apache.xpath.XPath $r3, $r7, $r10;
        org.apache.xalan.templates.ElemTemplateElement $r4, $r5;
        org.apache.xpath.objects.XObject $r8, r13;
        org.apache.xalan.transformer.TransformerImpl r0;

        r2 := @this: org.apache.xalan.templates.ElemVariable;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

     label01:
        $r3 = r2.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        if null == $r3 goto label02;

        $r7 = r2.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        $r8 = virtualinvoke $r7.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r1, i0, r2);

        r13 = $r8;

        virtualinvoke $r8.<org.apache.xpath.objects.XObject: void allowDetachToRelease(boolean)>(0);

        $z1 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z1 == 0 goto label10;

        $r9 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        $r10 = r2.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        virtualinvoke $r9.<org.apache.xalan.trace.TraceManager: void fireSelectedEvent(int,org.apache.xalan.templates.ElemTemplateElement,java.lang.String,org.apache.xpath.XPath,org.apache.xpath.objects.XObject)>(i0, r2, "select", $r10, $r8);

        goto label10;

     label02:
        $r4 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        if null != $r4 goto label03;

        r13 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        goto label10;

     label03:
        $r5 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $z0 = $r5 instanceof org.apache.xalan.templates.Stylesheet;

        if $z0 == 0 goto label04;

        i1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: int transformToGlobalRTF(org.apache.xalan.templates.ElemTemplateElement)>(r2);

        goto label05;

     label04:
        i1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: int transformToRTF(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label05:
        goto label15;

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

        goto label16;

     label08:
        throw $r12;

     label09:
        $r6 = new org.apache.xpath.objects.XRTreeFrag;

        specialinvoke $r6.<org.apache.xpath.objects.XRTreeFrag: void <init>(int,org.apache.xpath.XPathContext,org.apache.xpath.ExpressionNode)>(i1, $r1, r2);

        r13 = $r6;

     label10:
        goto label17;

     label11:
        goto label14;

     label12:
        $r11 := @caughtexception;

        goto label18;

     label13:
        throw $r11;

     label14:
        return r13;

     label15:
        goto label06;

     label16:
        goto label08;

     label17:
        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label11;

     label18:
        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label13;

        catch java.lang.Throwable from label03 to label07 with label07;
        catch java.lang.Throwable from label01 to label12 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
        catch java.lang.Throwable from label16 to label17 with label12;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemVariable r0;
        java.util.Vector $r10;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r9;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        org.apache.xml.utils.QName $r5, $r6;
        org.apache.xpath.XPath $r1, $r7, $r8, $r11;
        org.apache.xalan.templates.ElemTemplateElement $r3, $r4;
        org.apache.xalan.templates.StylesheetRoot r2;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        r2 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        $r1 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        if null != $r1 goto label1;

        $z2 = <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize>;

        if $z2 == 0 goto label1;

        $r8 = staticinvoke <org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath rewriteChildToExpression(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        if null == $r8 goto label1;

        r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern> = $r8;

     label1:
        $r9 = virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $r10 = virtualinvoke $r9.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r11 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        if null == $r11 goto label2;

        $r7 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        $i3 = virtualinvoke $r9.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r7.<org.apache.xpath.XPath: void fixupVariables(java.util.Vector,int)>($r10, $i3);

     label2:
        $r3 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $z0 = $r3 instanceof org.apache.xalan.templates.Stylesheet;

        if $z0 != 0 goto label3;

        $r5 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName m_qname>;

        if $r5 == null goto label3;

        $r6 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName m_qname>;

        $i0 = virtualinvoke $r9.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int addVariableName(org.apache.xml.utils.QName)>($r6);

        $i1 = virtualinvoke $r9.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        $i2 = $i0 - $i1;

        r0.<org.apache.xalan.templates.ElemVariable: int m_index> = $i2;

        goto label4;

     label3:
        $r4 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $z1 = $r4 instanceof org.apache.xalan.templates.Stylesheet;

        if $z1 == 0 goto label4;

        virtualinvoke $r9.<org.apache.xalan.templates.StylesheetRoot$ComposeState: void resetStackFrameSize()>();

     label4:
        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r2);

        return;
    }

    public void endCompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetRoot r1;
        org.apache.xalan.templates.ElemVariable r0;
        org.apache.xalan.templates.ElemTemplateElement $r2;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void endCompose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $z0 = $r2 instanceof org.apache.xalan.templates.Stylesheet;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $i0 = virtualinvoke $r3.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getFrameSize()>();

        r0.<org.apache.xalan.templates.ElemVariable: int m_frameSize> = $i0;

        virtualinvoke $r3.<org.apache.xalan.templates.StylesheetRoot$ComposeState: void resetStackFrameSize()>();

     label1:
        return;
    }

    static org.apache.xpath.XPath rewriteChildToExpression(org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.w3c.dom.Node $r3, $r8;
        int $i0;
        java.lang.String $r4;
        org.apache.xalan.templates.ElemTextLiteral r14;
        boolean $z0, $z1;
        org.apache.xpath.Expression $r12;
        org.apache.xalan.templates.ElemTemplateElement r0, $r1, $r2;
        org.apache.xpath.XPath $r6, $r9, $r11;
        org.apache.xalan.templates.ElemValueOf r13;
        org.apache.xpath.objects.XString $r5;
        org.apache.xpath.objects.XRTreeFragSelectWrapper $r7, $r10;

        r0 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        if null == $r1 goto label3;

        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

        if null != $r2 goto label3;

        $i0 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if 30 != $i0 goto label2;

        r13 = (org.apache.xalan.templates.ElemValueOf) $r1;

        $z1 = virtualinvoke r13.<org.apache.xalan.templates.ElemValueOf: boolean getDisableOutputEscaping()>();

        if $z1 != 0 goto label1;

        $r8 = virtualinvoke r13.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getDOMBackPointer()>();

        if $r8 != null goto label1;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = null;

        $r9 = new org.apache.xpath.XPath;

        $r10 = new org.apache.xpath.objects.XRTreeFragSelectWrapper;

        $r11 = virtualinvoke r13.<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath getSelect()>();

        $r12 = virtualinvoke $r11.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        specialinvoke $r10.<org.apache.xpath.objects.XRTreeFragSelectWrapper: void <init>(org.apache.xpath.Expression)>($r12);

        specialinvoke $r9.<org.apache.xpath.XPath: void <init>(org.apache.xpath.Expression)>($r10);

        return $r9;

     label1:
        goto label3;

     label2:
        if 78 != $i0 goto label3;

        r14 = (org.apache.xalan.templates.ElemTextLiteral) $r1;

        $z0 = virtualinvoke r14.<org.apache.xalan.templates.ElemTextLiteral: boolean getDisableOutputEscaping()>();

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke r14.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getDOMBackPointer()>();

        if $r3 != null goto label3;

        $r4 = virtualinvoke r14.<org.apache.xalan.templates.ElemTextLiteral: java.lang.String getNodeValue()>();

        $r5 = new org.apache.xpath.objects.XString;

        specialinvoke $r5.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r4);

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = null;

        $r6 = new org.apache.xpath.XPath;

        $r7 = new org.apache.xpath.objects.XRTreeFragSelectWrapper;

        specialinvoke $r7.<org.apache.xpath.objects.XRTreeFragSelectWrapper: void <init>(org.apache.xpath.Expression)>($r5);

        specialinvoke $r6.<org.apache.xpath.XPath: void <init>(org.apache.xpath.Expression)>($r7);

        return $r6;

     label3:
        return null;
    }

    public void recompose(org.apache.xalan.templates.StylesheetRoot)
    {
        org.apache.xalan.templates.StylesheetRoot r0;
        org.apache.xalan.templates.ElemVariable r1;

        r1 := @this: org.apache.xalan.templates.ElemVariable;

        r0 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        virtualinvoke r0.<org.apache.xalan.templates.StylesheetRoot: void recomposeVariables(org.apache.xalan.templates.ElemVariable)>(r1);

        return;
    }

    public void setParentElem(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemVariable r0;
        org.apache.xalan.templates.ElemTemplateElement r1;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        r1.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasVariableDecl> = 1;

        return;
    }

    protected boolean accept(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.XSLTVisitor r0;
        org.apache.xalan.templates.ElemVariable r1;
        boolean $z0;

        r1 := @this: org.apache.xalan.templates.ElemVariable;

        r0 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r0.<org.apache.xalan.templates.XSLTVisitor: boolean visitVariableOrParamDecl(org.apache.xalan.templates.ElemVariable)>(r1);

        return $z0;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xpath.Expression $r4;
        org.apache.xalan.templates.XSLTVisitor r2;
        org.apache.xalan.templates.ElemVariable r0;
        org.apache.xpath.XPath $r1, $r3, $r5;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        r2 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        if null == $r1 goto label1;

        $r3 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        $r5 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        virtualinvoke $r4.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r5, r2);

     label1:
        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r2, z0);

        return;
    }

    public boolean isPsuedoVar()
    {
        org.apache.xml.utils.QName $r1, $r3;
        org.apache.xalan.templates.ElemVariable r0;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        $r1 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName m_qname>;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.QName: java.lang.String getNamespaceURI()>();

        if null == $r2 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/psuedovar");

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName m_qname>;

        $r4 = virtualinvoke $r3.<org.apache.xml.utils.QName: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        java.lang.Object[] $r4;
        org.apache.xalan.templates.ElemVariable r0;
        org.apache.xpath.XPath $r1;
        org.apache.xalan.templates.ElemTemplateElement r2, $r3;
        java.lang.StringBuffer $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: org.apache.xalan.templates.ElemVariable;

        r2 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath m_selectPattern>;

        if $r1 == null goto label1;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xsl:");

        $r7 = virtualinvoke r0.<org.apache.xalan.templates.ElemVariable: java.lang.String getNodeName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4[0] = $r9;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_CANT_HAVE_CONTENT_AND_SELECT", $r4);

        return null;

     label1:
        $r3 = specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r2);

        return $r3;
    }
}
