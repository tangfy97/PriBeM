public class org.apache.batik.util.ParsedURLDataProtocolHandler extends org.apache.batik.util.AbstractParsedURLProtocolHandler
{
    static final java.lang.String DATA_PROTOCOL;
    static final java.lang.String BASE64;
    static final java.lang.String CHARSET;

    public void <init>()
    {
        org.apache.batik.util.ParsedURLDataProtocolHandler r0;

        r0 := @this: org.apache.batik.util.ParsedURLDataProtocolHandler;

        specialinvoke r0.<org.apache.batik.util.AbstractParsedURLProtocolHandler: void <init>(java.lang.String)>("data");

        return;
    }

    public org.apache.batik.util.ParsedURLData parseURL(org.apache.batik.util.ParsedURL, java.lang.String)
    {
        org.apache.batik.util.ParsedURL r3;
        java.lang.String r1;
        org.apache.batik.util.ParsedURLDataProtocolHandler r0;
        org.apache.batik.util.ParsedURLData $r2;

        r0 := @this: org.apache.batik.util.ParsedURLDataProtocolHandler;

        r3 := @parameter0: org.apache.batik.util.ParsedURL;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.batik.util.ParsedURLDataProtocolHandler: org.apache.batik.util.ParsedURLData parseURL(java.lang.String)>(r1);

        return $r2;
    }

    public org.apache.batik.util.ParsedURLData parseURL(java.lang.String)
    {
        org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData $r26;
        boolean $z0;
        org.apache.batik.util.ParsedURLDataProtocolHandler r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, i16, i17, $i18, $i19, $i21, $i23, $i25, $i27, $i29, $i31, $i33, $i35, $i37;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, r24, $r25;

        r23 := @this: org.apache.batik.util.ParsedURLDataProtocolHandler;

        r24 := @parameter0: java.lang.String;

        $r26 = new org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData;

        specialinvoke $r26.<org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData: void <init>()>();

        i13 = 0;

        $i0 = virtualinvoke r24.<java.lang.String: int length()>();

        $i1 = virtualinvoke r24.<java.lang.String: int indexOf(int)>(35);

        $r26.<org.apache.batik.util.ParsedURLData: java.lang.String ref> = null;

        $i21 = (int) -1;

        if $i1 == $i21 goto label02;

        $i11 = $i1 + 1;

        if $i11 >= $i0 goto label01;

        $i12 = $i1 + 1;

        $r22 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int)>($i12);

        $r26.<org.apache.batik.util.ParsedURLData: java.lang.String ref> = $r22;

     label01:
        $r21 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        r24 = $r21;

        virtualinvoke $r21.<java.lang.String: int length()>();

     label02:
        $i14 = virtualinvoke r24.<java.lang.String: int indexOf(int)>(58);

        $i23 = (int) -1;

        if $i14 == $i23 goto label04;

        $r19 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int,int)>(0, $i14);

        $r26.<org.apache.batik.util.ParsedURLData: java.lang.String protocol> = $r19;

        $r20 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String protocol>;

        $i10 = virtualinvoke $r20.<java.lang.String: int indexOf(int)>(47);

        $i25 = (int) -1;

        if $i10 != $i25 goto label03;

        i13 = $i14 + 1;

        goto label04;

     label03:
        $r26.<org.apache.batik.util.ParsedURLData: java.lang.String protocol> = null;

        i13 = 0;

     label04:
        $i15 = virtualinvoke r24.<java.lang.String: int indexOf(int,int)>(44, i13);

        $i27 = (int) -1;

        if $i15 == $i27 goto label13;

        if $i15 == i13 goto label13;

        $r2 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int,int)>(i13, $i15);

        $r26.<org.apache.batik.util.ParsedURLData: java.lang.String host> = $r2;

        i13 = $i15 + 1;

        $r3 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String host>;

        $i2 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(int)>(59);

        $i29 = (int) -1;

        if $i2 == $i29 goto label05;

        $r5 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String host>;

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i2 != $i3 goto label06;

     label05:
        $r4 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String host>;

        $r26.<org.apache.batik.util.ParsedURLData: java.lang.String contentType> = $r4;

        goto label13;

     label06:
        $r6 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String host>;

        $i4 = $i2 + 1;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i4);

        $i5 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>(61);

        $i31 = (int) -1;

        if $i5 != $i31 goto label07;

        $r26.<org.apache.batik.util.ParsedURLData: java.lang.String contentEncoding> = $r7;

        $r17 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String host>;

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r26.<org.apache.batik.util.ParsedURLData: java.lang.String contentType> = $r18;

        goto label08;

     label07:
        $r8 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String host>;

        $r26.<org.apache.batik.util.ParsedURLData: java.lang.String contentType> = $r8;

     label08:
        $r9 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String contentType>;

        $i6 = virtualinvoke $r9.<java.lang.String: int indexOf(int,int)>(59, 0);

        $i33 = (int) -1;

        if $i6 == $i33 goto label13;

        i16 = $i6 + 1;

        goto label12;

     label09:
        $r10 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String contentType>;

        $i7 = virtualinvoke $r10.<java.lang.String: int indexOf(int,int)>(59, i16);

        i17 = $i7;

        $i35 = (int) -1;

        if $i7 != $i35 goto label10;

        $r16 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String contentType>;

        i17 = virtualinvoke $r16.<java.lang.String: int length()>();

     label10:
        $r11 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String contentType>;

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(i16, i17);

        $i8 = virtualinvoke $r12.<java.lang.String: int indexOf(int)>(61);

        $i37 = (int) -1;

        if $i8 == $i37 goto label11;

        $r13 = "charset";

        $r14 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i8);

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label11;

        $i9 = $i8 + 1;

        $r15 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int)>($i9);

        $r26.<org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData: java.lang.String charset> = $r15;

     label11:
        i16 = i17 + 1;

     label12:
        $r25 = $r26.<org.apache.batik.util.ParsedURLData: java.lang.String contentType>;

        $i18 = virtualinvoke $r25.<java.lang.String: int length()>();

        if i16 < $i18 goto label09;

     label13:
        $i19 = virtualinvoke r24.<java.lang.String: int length()>();

        if i13 >= $i19 goto label14;

        $r1 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int)>(i13);

        $r26.<org.apache.batik.util.ParsedURLData: java.lang.String path> = $r1;

     label14:
        return $r26;
    }

    public static void <clinit>()
    {
        <org.apache.batik.util.ParsedURLDataProtocolHandler: java.lang.String CHARSET> = "charset";

        <org.apache.batik.util.ParsedURLDataProtocolHandler: java.lang.String BASE64> = "base64";

        <org.apache.batik.util.ParsedURLDataProtocolHandler: java.lang.String DATA_PROTOCOL> = "data";

        return;
    }
}
