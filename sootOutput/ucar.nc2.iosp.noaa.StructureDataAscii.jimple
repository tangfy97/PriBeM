public class ucar.nc2.iosp.noaa.StructureDataAscii extends ucar.ma2.StructureData
{
    protected java.lang.String line;

    public void <init>(ucar.ma2.StructureMembers, java.lang.String)
    {
        ucar.ma2.StructureMembers r1;
        java.lang.String r2;
        ucar.nc2.iosp.noaa.StructureDataAscii r0;

        r0 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r1 := @parameter0: ucar.ma2.StructureMembers;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<ucar.ma2.StructureData: void <init>(ucar.ma2.StructureMembers)>(r1);

        r0.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line> = r2;

        return;
    }

    public ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)
    {
        byte[] $r21;
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        int[] $r23, $r27, $r31, $r38;
        ucar.ma2.ArrayScalar $r12;
        boolean $z0;
        ucar.ma2.DataType $r3, $r4, $r5, $r6, $r10, $r11, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r26, $r30;
        java.lang.Object[] $r37;
        float[] $r29;
        ucar.ma2.ArrayChar $r13;
        java.lang.String $r8, $r14, $r34, $r39, r40;
        ucar.nc2.iosp.noaa.StructureDataAscii r7;
        ucar.ma2.ArrayObject $r36;
        ucar.ma2.Array $r24, $r28, $r32;
        ucar.ma2.ArraySequence $r33;
        char[] $r25;
        java.lang.Object $r1, $r9, $r35;

        r7 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r3 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r3 != $r4 goto label1;

        $r34 = r7.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r35 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r34);

        r40 = (java.lang.String) $r35;

        $r36 = new ucar.ma2.ArrayObject;

        $r38 = newarray (int)[0];

        $r37 = newarray (java.lang.Object)[1];

        $r39 = virtualinvoke r40.<java.lang.String: java.lang.String trim()>();

        $r37[0] = $r39;

        specialinvoke $r36.<ucar.ma2.ArrayObject: void <init>(java.lang.Class,int[],java.lang.Object[])>(class "Ljava/lang/String;", $r38, $r37);

        return $r36;

     label1:
        $r5 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r5 != $r6 goto label2;

        $r33 = virtualinvoke r7.<ucar.nc2.iosp.noaa.StructureDataAscii: ucar.ma2.ArraySequence getArraySequence(ucar.ma2.StructureMembers$Member)>(r0);

        return $r33;

     label2:
        $z0 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: boolean isScalar()>();

        if $z0 != 0 goto label5;

        $r15 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r16 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if $r15 != $r16 goto label3;

        $r29 = virtualinvoke r7.<ucar.nc2.iosp.noaa.StructureDataAscii: float[] getJavaArrayFloat(ucar.ma2.StructureMembers$Member)>(r0);

        $r30 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r31 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int[] getShape()>();

        $r32 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r30, $r31, $r29);

        return $r32;

     label3:
        $r17 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r18 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r17 != $r18 goto label4;

        $r25 = virtualinvoke r7.<ucar.nc2.iosp.noaa.StructureDataAscii: char[] getJavaArrayChar(ucar.ma2.StructureMembers$Member)>(r0);

        $r26 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        $r27 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int[] getShape()>();

        $r28 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r26, $r27, $r25);

        return $r28;

     label4:
        $r19 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r20 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if $r19 != $r20 goto label5;

        $r21 = virtualinvoke r7.<ucar.nc2.iosp.noaa.StructureDataAscii: byte[] getJavaArrayByte(ucar.ma2.StructureMembers$Member)>(r0);

        $r22 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        $r23 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int[] getShape()>();

        $r24 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r22, $r23, $r21);

        return $r24;

     label5:
        $r8 = r7.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r9 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r8);

        $r10 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r11 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r10 != $r11 goto label6;

        $r13 = new ucar.ma2.ArrayChar;

        $r14 = (java.lang.String) $r9;

        specialinvoke $r13.<ucar.ma2.ArrayChar: void <init>(java.lang.String)>($r14);

        return $r13;

     label6:
        $r12 = new ucar.ma2.ArrayScalar;

        specialinvoke $r12.<ucar.ma2.ArrayScalar: void <init>(java.lang.Object)>($r9);

        return $r12;
    }

    public float convertScalarFloat(ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        float $f0;
        java.lang.Object $r1, $r5;
        java.lang.String $r4;
        java.lang.Number $r6;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $r6 = (java.lang.Number) $r5;

        $f0 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    public double convertScalarDouble(ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        java.lang.Object $r1, $r5;
        java.lang.String $r4;
        java.lang.Number $r6;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;
        double $d0;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $r6 = (java.lang.Number) $r5;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    public int convertScalarInt(ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        int $i0;
        java.lang.Object $r1, $r5;
        java.lang.String $r4;
        java.lang.Number $r6;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        return $i0;
    }

    public long convertScalarLong(ucar.ma2.StructureMembers$Member)
    {
        long $l0;
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        java.lang.Object $r1, $r5;
        java.lang.String $r4;
        java.lang.Number $r6;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $r6 = (java.lang.Number) $r5;

        $l0 = virtualinvoke $r6.<java.lang.Number: long longValue()>();

        return $l0;
    }

    public double getScalarDouble(ucar.ma2.StructureMembers$Member)
    {
        java.lang.Double $r6;
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        java.lang.Object $r1, $r5;
        java.lang.String $r4;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;
        double $d0;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $r6 = (java.lang.Double) $r5;

        $d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public double[] getJavaArrayDouble(ucar.ma2.StructureMembers$Member)
    {
        double[] $r0;
        ucar.nc2.iosp.noaa.StructureDataAscii r1;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r2 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r0 = newarray (double)[0];

        return $r0;
    }

    public float getScalarFloat(ucar.ma2.StructureMembers$Member)
    {
        java.lang.Float $r11;
        java.lang.Double $r8;
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        float $f0;
        java.lang.Object $r1, $r5, $r7, $r10;
        java.lang.String $r4, $r6, $r9;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;
        boolean $z0;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $z0 = $r5 instanceof java.lang.Float;

        if $z0 == 0 goto label1;

        $r9 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r10 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r9);

        $r11 = (java.lang.Float) $r10;

        $f0 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

        goto label2;

     label1:
        $r6 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r7 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r6);

        $r8 = (java.lang.Double) $r7;

        $f0 = virtualinvoke $r8.<java.lang.Double: float floatValue()>();

     label2:
        return $f0;
    }

    public float[] getJavaArrayFloat(ucar.ma2.StructureMembers$Member)
    {
        java.lang.Float $r7;
        float[] r1;
        ucar.nc2.util.TableParser$Field r3;
        ucar.ma2.StructureMembers$Member r0;
        int $i0, $i1, i2;
        float $f0;
        java.lang.Object $r2, $r6;
        java.lang.String $r5;
        ucar.nc2.iosp.noaa.StructureDataAscii r4;

        r4 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $i0 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int getSize()>();

        r1 = newarray (float)[$i0];

        $r2 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r3 = (ucar.nc2.util.TableParser$Field) $r2;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        $r5 = r4.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $i1 = i2 * 8;

        $r6 = virtualinvoke r3.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String,int)>($r5, $i1);

        $r7 = (java.lang.Float) $r6;

        $f0 = virtualinvoke $r7.<java.lang.Float: float floatValue()>();

        r1[i2] = $f0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public byte getScalarByte(ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        byte $b0;
        java.lang.Object $r1, $r5;
        java.lang.String $r4;
        java.lang.Byte $r6;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $r6 = (java.lang.Byte) $r5;

        $b0 = virtualinvoke $r6.<java.lang.Byte: byte byteValue()>();

        return $b0;
    }

    public byte[] getJavaArrayByte(ucar.ma2.StructureMembers$Member)
    {
        byte[] r1;
        char $c2;
        ucar.nc2.util.TableParser$Field r3;
        ucar.ma2.StructureMembers$Member r0;
        byte $b3;
        int $i0, $i1, i4;
        java.lang.Object $r2, $r6;
        java.lang.String $r5, r7;
        ucar.nc2.iosp.noaa.StructureDataAscii r4;

        r4 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $i0 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int getSize()>();

        r1 = newarray (byte)[$i0];

        $r2 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r3 = (ucar.nc2.util.TableParser$Field) $r2;

        i4 = 0;

     label1:
        if i4 >= $i0 goto label2;

        $r5 = r4.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $i1 = i4 * 8;

        $r6 = virtualinvoke r3.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String,int)>($r5, $i1);

        r7 = (java.lang.String) $r6;

        $c2 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0);

        $b3 = (byte) $c2;

        r1[i4] = $b3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r1;
    }

    public int getScalarInt(ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.util.TableParser$Field r2;
        java.lang.Integer $r6;
        ucar.ma2.StructureMembers$Member r0;
        int $i0;
        java.lang.Object $r1, $r5;
        java.lang.String $r4;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int[] getJavaArrayInt(ucar.ma2.StructureMembers$Member)
    {
        int[] $r0;
        ucar.nc2.iosp.noaa.StructureDataAscii r1;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r2 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r0 = newarray (int)[0];

        return $r0;
    }

    public short getScalarShort(ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        short $s0;
        java.lang.Short $r6;
        java.lang.Object $r1, $r5;
        java.lang.String $r4;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $r6 = (java.lang.Short) $r5;

        $s0 = virtualinvoke $r6.<java.lang.Short: short shortValue()>();

        return $s0;
    }

    public short[] getJavaArrayShort(ucar.ma2.StructureMembers$Member)
    {
        short[] $r0;
        ucar.nc2.iosp.noaa.StructureDataAscii r1;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r2 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r0 = newarray (short)[0];

        return $r0;
    }

    public long getScalarLong(ucar.ma2.StructureMembers$Member)
    {
        long $l0;
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        java.lang.Long $r6;
        java.lang.Object $r1, $r5;
        java.lang.String $r4;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $r6 = (java.lang.Long) $r5;

        $l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public long[] getJavaArrayLong(ucar.ma2.StructureMembers$Member)
    {
        long[] $r0;
        ucar.nc2.iosp.noaa.StructureDataAscii r1;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r2 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r0 = newarray (long)[0];

        return $r0;
    }

    public char getScalarChar(ucar.ma2.StructureMembers$Member)
    {
        char $c0;
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        java.lang.Object $r1, $r5;
        java.lang.String $r4, r6;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        r6 = (java.lang.String) $r5;

        $c0 = virtualinvoke r6.<java.lang.String: char charAt(int)>(0);

        return $c0;
    }

    public char[] getJavaArrayChar(ucar.ma2.StructureMembers$Member)
    {
        char $c2;
        ucar.nc2.util.TableParser$Field r3;
        ucar.ma2.StructureMembers$Member r0;
        int $i0, $i1, i3;
        char[] r1;
        java.lang.Object $r2, $r6;
        java.lang.String $r5, r7;
        ucar.nc2.iosp.noaa.StructureDataAscii r4;

        r4 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $i0 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int getSize()>();

        r1 = newarray (char)[$i0];

        $r2 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r3 = (ucar.nc2.util.TableParser$Field) $r2;

        i3 = 0;

     label1:
        if i3 >= $i0 goto label2;

        $r5 = r4.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $i1 = i3 * 8;

        $r6 = virtualinvoke r3.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String,int)>($r5, $i1);

        r7 = (java.lang.String) $r6;

        $c2 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0);

        r1[i3] = $c2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public java.lang.String getScalarString(ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.util.TableParser$Field r2;
        ucar.ma2.StructureMembers$Member r0;
        java.lang.Object $r1, $r5;
        java.lang.String $r4, $r6, $r7;
        ucar.nc2.iosp.noaa.StructureDataAscii r3;

        r3 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.Object getDataObject()>();

        r2 = (ucar.nc2.util.TableParser$Field) $r1;

        $r4 = r3.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String line>;

        $r5 = virtualinvoke r2.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>($r4);

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        return $r7;
    }

    public java.lang.String[] getJavaArrayString(ucar.ma2.StructureMembers$Member)
    {
        java.lang.String[] $r0;
        java.lang.String $r3;
        ucar.nc2.iosp.noaa.StructureDataAscii r1;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r2 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r0 = newarray (java.lang.String)[1];

        $r3 = virtualinvoke r1.<ucar.nc2.iosp.noaa.StructureDataAscii: java.lang.String getScalarString(ucar.ma2.StructureMembers$Member)>(r2);

        $r0[0] = $r3;

        return $r0;
    }

    public ucar.ma2.StructureData getScalarStructure(ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.noaa.StructureDataAscii r0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        return null;
    }

    public ucar.ma2.ArrayStructure getArrayStructure(ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.noaa.StructureDataAscii r0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        return null;
    }

    public ucar.ma2.ArraySequence getArraySequence(ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.noaa.StructureDataAscii r0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.nc2.iosp.noaa.StructureDataAscii;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        return null;
    }
}
