public class org.apache.batik.util.gui.LanguageDialog extends javax.swing.JDialog implements org.apache.batik.util.gui.resource.ActionMap
{
    public static final int OK_OPTION;
    public static final int CANCEL_OPTION;
    protected static final java.lang.String RESOURCES;
    protected static java.util.ResourceBundle bundle;
    protected static org.apache.batik.util.resources.ResourceManager resources;
    protected java.util.Map listeners;
    protected org.apache.batik.util.gui.LanguageDialog$Panel panel;
    protected int returnCode;

    public void <init>(javax.swing.JFrame)
    {
        org.apache.batik.util.gui.LanguageDialog$OKButtonAction $r6;
        java.util.HashMap $r2;
        org.apache.batik.util.gui.LanguageDialog$Panel $r3, $r11;
        org.apache.batik.util.gui.LanguageDialog r0;
        java.util.Map $r7, $r9;
        org.apache.batik.util.gui.LanguageDialog$CancelButtonAction $r8;
        org.apache.batik.util.resources.ResourceManager $r4;
        java.lang.String $r5;
        java.awt.Container $r10, $r12;
        javax.swing.JFrame r1;
        javax.swing.JPanel $r13;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog;

        r1 := @parameter0: javax.swing.JFrame;

        specialinvoke r0.<javax.swing.JDialog: void <init>(java.awt.Frame)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.util.gui.LanguageDialog: java.util.Map listeners> = $r2;

        $r3 = new org.apache.batik.util.gui.LanguageDialog$Panel;

        specialinvoke $r3.<org.apache.batik.util.gui.LanguageDialog$Panel: void <init>()>();

        r0.<org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.gui.LanguageDialog$Panel panel> = $r3;

        virtualinvoke r0.<java.awt.Dialog: void setModal(boolean)>(1);

        $r4 = <org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.resources.ResourceManager resources>;

        $r5 = virtualinvoke $r4.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Dialog.title");

        virtualinvoke r0.<java.awt.Dialog: void setTitle(java.lang.String)>($r5);

        $r7 = r0.<org.apache.batik.util.gui.LanguageDialog: java.util.Map listeners>;

        $r6 = new org.apache.batik.util.gui.LanguageDialog$OKButtonAction;

        specialinvoke $r6.<org.apache.batik.util.gui.LanguageDialog$OKButtonAction: void <init>(org.apache.batik.util.gui.LanguageDialog)>(r0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("OKButtonAction", $r6);

        $r9 = r0.<org.apache.batik.util.gui.LanguageDialog: java.util.Map listeners>;

        $r8 = new org.apache.batik.util.gui.LanguageDialog$CancelButtonAction;

        specialinvoke $r8.<org.apache.batik.util.gui.LanguageDialog$CancelButtonAction: void <init>(org.apache.batik.util.gui.LanguageDialog)>(r0);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CancelButtonAction", $r8);

        $r10 = virtualinvoke r0.<javax.swing.JDialog: java.awt.Container getContentPane()>();

        $r11 = r0.<org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.gui.LanguageDialog$Panel panel>;

        virtualinvoke $r10.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r11);

        $r12 = virtualinvoke r0.<javax.swing.JDialog: java.awt.Container getContentPane()>();

        $r13 = virtualinvoke r0.<org.apache.batik.util.gui.LanguageDialog: javax.swing.JPanel createButtonsPanel()>();

        virtualinvoke $r12.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r13, "South");

        virtualinvoke r0.<java.awt.Window: void pack()>();

        return;
    }

    public int showDialog()
    {
        int $i0;
        org.apache.batik.util.gui.LanguageDialog r0;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog;

        virtualinvoke r0.<java.awt.Component: void setVisible(boolean)>(1);

        $i0 = r0.<org.apache.batik.util.gui.LanguageDialog: int returnCode>;

        return $i0;
    }

    public void setLanguages(java.lang.String)
    {
        org.apache.batik.util.gui.LanguageDialog$Panel $r2;
        org.apache.batik.util.gui.LanguageDialog r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.gui.LanguageDialog$Panel panel>;

        virtualinvoke $r2.<org.apache.batik.util.gui.LanguageDialog$Panel: void setLanguages(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getLanguages()
    {
        org.apache.batik.util.gui.LanguageDialog$Panel $r1;
        org.apache.batik.util.gui.LanguageDialog r0;
        java.lang.String $r2;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog;

        $r1 = r0.<org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.gui.LanguageDialog$Panel panel>;

        $r2 = virtualinvoke $r1.<org.apache.batik.util.gui.LanguageDialog$Panel: java.lang.String getLanguages()>();

        return $r2;
    }

    public javax.swing.Action getAction(java.lang.String) throws org.apache.batik.util.gui.resource.MissingListenerException
    {
        org.apache.batik.util.gui.LanguageDialog r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        javax.swing.Action $r4;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.util.gui.LanguageDialog: java.util.Map listeners>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (javax.swing.Action) $r3;

        return $r4;
    }

    protected javax.swing.JPanel createButtonsPanel()
    {
        java.awt.FlowLayout $r1;
        org.apache.batik.util.gui.LanguageDialog r3;
        javax.swing.JButton $r5, $r6;
        java.util.ResourceBundle $r4;
        org.apache.batik.util.gui.resource.ButtonFactory $r2;
        javax.swing.JPanel $r0;

        r3 := @this: org.apache.batik.util.gui.LanguageDialog;

        $r0 = new javax.swing.JPanel;

        $r1 = new java.awt.FlowLayout;

        specialinvoke $r1.<java.awt.FlowLayout: void <init>(int)>(2);

        specialinvoke $r0.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r1);

        $r2 = new org.apache.batik.util.gui.resource.ButtonFactory;

        $r4 = <org.apache.batik.util.gui.LanguageDialog: java.util.ResourceBundle bundle>;

        specialinvoke $r2.<org.apache.batik.util.gui.resource.ButtonFactory: void <init>(java.util.ResourceBundle,org.apache.batik.util.gui.resource.ActionMap)>($r4, r3);

        $r5 = virtualinvoke $r2.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("OKButton");

        virtualinvoke $r0.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r5);

        $r6 = virtualinvoke $r2.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("CancelButton");

        virtualinvoke $r0.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r6);

        return $r0;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r1, $r3;
        java.util.Locale $r0;
        org.apache.batik.util.resources.ResourceManager $r2;

        <org.apache.batik.util.gui.LanguageDialog: java.lang.String RESOURCES> = "org.apache.batik.util.gui.resources.LanguageDialogMessages";

        <org.apache.batik.util.gui.LanguageDialog: int CANCEL_OPTION> = 1;

        <org.apache.batik.util.gui.LanguageDialog: int OK_OPTION> = 0;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.apache.batik.util.gui.resources.LanguageDialogMessages", $r0);

        <org.apache.batik.util.gui.LanguageDialog: java.util.ResourceBundle bundle> = $r1;

        $r2 = new org.apache.batik.util.resources.ResourceManager;

        $r3 = <org.apache.batik.util.gui.LanguageDialog: java.util.ResourceBundle bundle>;

        specialinvoke $r2.<org.apache.batik.util.resources.ResourceManager: void <init>(java.util.ResourceBundle)>($r3);

        <org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.resources.ResourceManager resources> = $r2;

        return;
    }
}
