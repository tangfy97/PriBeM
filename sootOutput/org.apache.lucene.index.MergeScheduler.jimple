public abstract class org.apache.lucene.index.MergeScheduler extends java.lang.Object implements java.io.Closeable, java.lang.Cloneable
{

    protected void <init>()
    {
        org.apache.lucene.index.MergeScheduler r0;

        r0 := @this: org.apache.lucene.index.MergeScheduler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void merge(org.apache.lucene.index.IndexWriter) throws java.io.IOException;

    public abstract void close() throws java.io.IOException;

    public org.apache.lucene.index.MergeScheduler clone()
    {
        org.apache.lucene.index.MergeScheduler r0, $r2;
        java.lang.Error $r4;
        java.lang.Object $r1;
        java.lang.CloneNotSupportedException $r3;

        r0 := @this: org.apache.lucene.index.MergeScheduler;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.lucene.index.MergeScheduler) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.index.MergeScheduler r0, $r1;

        r0 := @this: org.apache.lucene.index.MergeScheduler;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.MergeScheduler: org.apache.lucene.index.MergeScheduler clone()>();

        return $r1;
    }
}
