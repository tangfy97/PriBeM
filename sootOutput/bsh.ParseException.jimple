public class bsh.ParseException extends bsh.EvalError
{
    java.lang.String sourceFile;
    protected boolean specialConstructor;
    public bsh.Token currentToken;
    public int[][] expectedTokenSequences;
    public java.lang.String[] tokenImage;
    protected java.lang.String eol;

    public void setErrorSourceFile(java.lang.String)
    {
        java.lang.String r1;
        bsh.ParseException r0;

        r0 := @this: bsh.ParseException;

        r1 := @parameter0: java.lang.String;

        r0.<bsh.ParseException: java.lang.String sourceFile> = r1;

        return;
    }

    public java.lang.String getErrorSourceFile()
    {
        java.lang.String $r1;
        bsh.ParseException r0;

        r0 := @this: bsh.ParseException;

        $r1 = r0.<bsh.ParseException: java.lang.String sourceFile>;

        return $r1;
    }

    public void <init>(bsh.Token, int[][], java.lang.String[])
    {
        int[][] r2;
        bsh.Token r1;
        java.lang.String[] r3;
        bsh.ParseException r0;

        r0 := @this: bsh.ParseException;

        r1 := @parameter0: bsh.Token;

        r2 := @parameter1: int[][];

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<bsh.ParseException: void <init>()>();

        r0.<bsh.ParseException: boolean specialConstructor> = 1;

        r0.<bsh.ParseException: bsh.Token currentToken> = r1;

        r0.<bsh.ParseException: int[][] expectedTokenSequences> = r2;

        r0.<bsh.ParseException: java.lang.String[] tokenImage> = r3;

        return;
    }

    public void <init>()
    {
        bsh.ParseException r0;

        r0 := @this: bsh.ParseException;

        specialinvoke r0.<bsh.ParseException: void <init>(java.lang.String)>("");

        r0.<bsh.ParseException: boolean specialConstructor> = 0;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1, $r2;
        bsh.ParseException r0;

        r0 := @this: bsh.ParseException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>(r1, null, null);

        r0.<bsh.ParseException: java.lang.String sourceFile> = "<unknown>";

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        r0.<bsh.ParseException: java.lang.String eol> = $r2;

        r0.<bsh.ParseException: boolean specialConstructor> = 0;

        return;
    }

    public java.lang.String getMessage()
    {
        java.lang.String $r1;
        bsh.ParseException r0;

        r0 := @this: bsh.ParseException;

        $r1 = virtualinvoke r0.<bsh.ParseException: java.lang.String getMessage(boolean)>(0);

        return $r1;
    }

    public java.lang.String getMessage(boolean)
    {
        java.lang.StringBuffer $r5, $r6, $r11, $r12, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r27, $r28, $r30, $r31, $r33, $r34, $r37, $r38, $r39, $r42, $r43, $r44, $r45, $r48, $r49, $r52, $r53, $r55, $r58, $r59, $r60, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r71, $r72, $r73, $r74, $r75;
        bsh.Token $r32, $r46, $r47, $r50, $r51, r80;
        java.lang.String $r10, $r19, $r29, $r35, $r36, $r41, $r54, $r56, $r61, $r70, $r76, r77, r79, r81, r82;
        int[][] $r1, $r3, $r7, $r13, $r14, $r25, $r57, $r78;
        int[] $r2, $r4, $r8, $r15, $r16, $r26;
        boolean $z0, z1;
        java.lang.String[] $r9, $r40;
        bsh.ParseException r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i13, i14;

        r0 := @this: bsh.ParseException;

        z1 := @parameter0: boolean;

        $z0 = r0.<bsh.ParseException: boolean specialConstructor>;

        if $z0 != 0 goto label01;

        $r76 = specialinvoke r0.<bsh.EvalError: java.lang.String getMessage()>();

        return $r76;

     label01:
        r77 = "";

        i10 = 0;

        i11 = 0;

        goto label07;

     label02:
        $r1 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $r2 = $r1[i11];

        $i0 = lengthof $r2;

        if i10 >= $i0 goto label03;

        $r25 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $r26 = $r25[i11];

        i10 = lengthof $r26;

     label03:
        i12 = 0;

        goto label05;

     label04:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r77);

        $r9 = r0.<bsh.ParseException: java.lang.String[] tokenImage>;

        $r7 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $r8 = $r7[i11];

        $i2 = $r8[i12];

        $r10 = $r9[$i2];

        $r11 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        r77 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        i12 = i12 + 1;

     label05:
        $r3 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $r4 = $r3[i11];

        $i1 = lengthof $r4;

        if i12 < $i1 goto label04;

        $r13 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $r16 = $r13[i11];

        $r14 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $r15 = $r14[i11];

        $i3 = lengthof $r15;

        $i4 = $i3 - 1;

        $i5 = $r16[$i4];

        if $i5 == 0 goto label06;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r77);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

        r77 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

     label06:
        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r77);

        $r19 = r0.<bsh.ParseException: java.lang.String eol>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        r77 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        i11 = i11 + 1;

     label07:
        $r78 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $i13 = lengthof $r78;

        if i11 < $i13 goto label02;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("In file: ");

        $r29 = r0.<bsh.ParseException: java.lang.String sourceFile>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Encountered \"");

        r79 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        $r32 = r0.<bsh.ParseException: bsh.Token currentToken>;

        r80 = $r32.<bsh.Token: bsh.Token next>;

        i14 = 0;

        goto label11;

     label08:
        if i14 == 0 goto label09;

        $r73 = new java.lang.StringBuffer;

        specialinvoke $r73.<java.lang.StringBuffer: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r79);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        r79 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        $i6 = r80.<bsh.Token: int kind>;

        if $i6 != 0 goto label10;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r79);

        $r40 = r0.<bsh.ParseException: java.lang.String[] tokenImage>;

        $r41 = $r40[0];

        $r42 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        r79 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label12;

     label10:
        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r79);

        $r35 = r80.<bsh.Token: java.lang.String image>;

        $r36 = virtualinvoke r0.<bsh.ParseException: java.lang.String add_escapes(java.lang.String)>($r35);

        $r37 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        r79 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        r80 = r80.<bsh.Token: bsh.Token next>;

        i14 = i14 + 1;

     label11:
        if i14 < i10 goto label08;

     label12:
        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r79);

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" at line ");

        $r46 = r0.<bsh.ParseException: bsh.Token currentToken>;

        $r47 = $r46.<bsh.Token: bsh.Token next>;

        $i7 = $r47.<bsh.Token: int beginLine>;

        $r48 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i7);

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", column ");

        $r50 = r0.<bsh.ParseException: bsh.Token currentToken>;

        $r51 = $r50.<bsh.Token: bsh.Token next>;

        $i8 = $r51.<bsh.Token: int beginColumn>;

        $r52 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i8);

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r54 = r0.<bsh.ParseException: java.lang.String eol>;

        $r55 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>();

        r81 = $r56;

        if z1 == 0 goto label15;

        $r57 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $i9 = lengthof $r57;

        if $i9 != 1 goto label13;

        $r67 = new java.lang.StringBuffer;

        specialinvoke $r67.<java.lang.StringBuffer: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Was expecting:");

        $r70 = r0.<bsh.ParseException: java.lang.String eol>;

        $r71 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        r82 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label14;

     label13:
        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Was expecting one of:");

        $r61 = r0.<bsh.ParseException: java.lang.String eol>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        r82 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

     label14:
        $r64 = new java.lang.StringBuffer;

        specialinvoke $r64.<java.lang.StringBuffer: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r82);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r77);

        r81 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

     label15:
        return r81;
    }

    protected java.lang.String add_escapes(java.lang.String)
    {
        bsh.ParseException r13;
        java.lang.StringBuffer $r3, $r5, $r8, $r10, $r14, $r15, $r16;
        int $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String r1, $r4, $r6, $r9, $r11, $r12;
        char $c0, $c1;

        r13 := @this: bsh.ParseException;

        r1 := @parameter0: java.lang.String;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        i5 = 0;

        goto label15;

     label01:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        $i7 = (int) $c0;

        lookupswitch($i7)
        {
            case 0: goto label02;
            case 8: goto label03;
            case 9: goto label04;
            case 10: goto label05;
            case 12: goto label06;
            case 13: goto label07;
            case 34: goto label08;
            case 39: goto label09;
            case 92: goto label10;
            default: goto label11;
        };

     label02:
        goto label14;

     label03:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");

        goto label14;

     label04:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

        goto label14;

     label05:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label14;

     label06:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");

        goto label14;

     label07:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label14;

     label08:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\"");

        goto label14;

     label09:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\'");

        goto label14;

     label10:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");

        goto label14;

     label11:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        $i8 = (int) $c1;

        if $i8 < 32 goto label12;

        $i9 = (int) $c1;

        if $i9 <= 126 goto label13;

     label12:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0000");

        $i10 = (int) $c1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i10, 16);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u");

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i3 = $i2 - 4;

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label14;

     label13:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label14:
        i5 = i5 + 1;

     label15:
        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 < $i6 goto label01;

        $r12 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    public int getErrorLineNumber()
    {
        bsh.Token $r1, $r2;
        int $i0;
        bsh.ParseException r0;

        r0 := @this: bsh.ParseException;

        $r1 = r0.<bsh.ParseException: bsh.Token currentToken>;

        $r2 = $r1.<bsh.Token: bsh.Token next>;

        $i0 = $r2.<bsh.Token: int beginLine>;

        return $i0;
    }

    public java.lang.String getErrorText()
    {
        int[][] $r1, $r3, $r19;
        java.lang.String[] $r13;
        bsh.ParseException r0;
        int[] $r2, $r4;
        bsh.Token $r5, r21;
        java.lang.StringBuffer $r6, $r7, $r10, $r11, $r12, $r15, $r16, $r17, $r18;
        int $i0, $i1, i2, i3, $i4, i5;
        java.lang.String $r8, $r9, $r14, r20;

        r0 := @this: bsh.ParseException;

        i2 = 0;

        i3 = 0;

        goto label3;

     label1:
        $r1 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $r2 = $r1[i3];

        $i0 = lengthof $r2;

        if i2 >= $i0 goto label2;

        $r3 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $r4 = $r3[i3];

        i2 = lengthof $r4;

     label2:
        i3 = i3 + 1;

     label3:
        $r19 = r0.<bsh.ParseException: int[][] expectedTokenSequences>;

        $i4 = lengthof $r19;

        if i3 < $i4 goto label1;

        r20 = "";

        $r5 = r0.<bsh.ParseException: bsh.Token currentToken>;

        r21 = $r5.<bsh.Token: bsh.Token next>;

        i5 = 0;

        goto label7;

     label4:
        if i5 == 0 goto label5;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        $i1 = r21.<bsh.Token: int kind>;

        if $i1 != 0 goto label6;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r13 = r0.<bsh.ParseException: java.lang.String[] tokenImage>;

        $r14 = $r13[0];

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        r20 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label8;

     label6:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r8 = r21.<bsh.Token: java.lang.String image>;

        $r9 = virtualinvoke r0.<bsh.ParseException: java.lang.String add_escapes(java.lang.String)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        r20 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r21 = r21.<bsh.Token: bsh.Token next>;

        i5 = i5 + 1;

     label7:
        if i5 < i2 goto label4;

     label8:
        return r20;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        bsh.ParseException r0;

        r0 := @this: bsh.ParseException;

        $r1 = virtualinvoke r0.<bsh.ParseException: java.lang.String getMessage()>();

        return $r1;
    }
}
