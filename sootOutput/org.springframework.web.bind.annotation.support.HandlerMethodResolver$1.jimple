final class org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1 extends java.lang.Object implements org.springframework.util.ReflectionUtils$MethodCallback
{
    final org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0;
    private final java.lang.Class val$targetClass;

    void <init>(org.springframework.web.bind.'annotation'.support.HandlerMethodResolver, java.lang.Class)
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r1;
        java.lang.Class r2;
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1 r0;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1;

        r1 := @parameter0: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        r2 := @parameter1: java.lang.Class;

        r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0> = r1;

        r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: java.lang.Class val$targetClass> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void doWith(java.lang.reflect.Method)
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r16;
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1 r1;
        java.lang.reflect.Method r0, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Set $r9, $r12, $r15;
        java.lang.Class $r2;

        r1 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1;

        r0 := @parameter0: java.lang.reflect.Method;

        $r2 = r1.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: java.lang.Class val$targetClass>;

        $r3 = staticinvoke <org.springframework.util.ClassUtils: java.lang.reflect.Method getMostSpecificMethod(java.lang.reflect.Method,java.lang.Class)>(r0, $r2);

        $r4 = staticinvoke <org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>($r3);

        $r5 = r1.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0>;

        $z0 = virtualinvoke $r5.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: boolean isHandlerMethod(java.lang.reflect.Method)>($r3);

        if $z0 == 0 goto label2;

        if $r4 == $r3 goto label1;

        $r16 = r1.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0>;

        $z5 = virtualinvoke $r16.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: boolean isHandlerMethod(java.lang.reflect.Method)>($r4);

        if $z5 != 0 goto label2;

     label1:
        $r14 = r1.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0>;

        $r15 = staticinvoke <org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set access$0(org.springframework.web.bind.'annotation'.support.HandlerMethodResolver)>($r14);

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>($r3);

        goto label6;

     label2:
        $r6 = r1.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0>;

        $z1 = virtualinvoke $r6.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: boolean isInitBinderMethod(java.lang.reflect.Method)>($r3);

        if $z1 == 0 goto label4;

        if $r4 == $r3 goto label3;

        $r13 = r1.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0>;

        $z4 = virtualinvoke $r13.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: boolean isInitBinderMethod(java.lang.reflect.Method)>($r4);

        if $z4 != 0 goto label4;

     label3:
        $r11 = r1.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0>;

        $r12 = staticinvoke <org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set access$1(org.springframework.web.bind.'annotation'.support.HandlerMethodResolver)>($r11);

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r3);

        goto label6;

     label4:
        $r7 = r1.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0>;

        $z2 = virtualinvoke $r7.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: boolean isModelAttributeMethod(java.lang.reflect.Method)>($r3);

        if $z2 == 0 goto label6;

        if $r4 == $r3 goto label5;

        $r10 = r1.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0>;

        $z3 = virtualinvoke $r10.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: boolean isModelAttributeMethod(java.lang.reflect.Method)>($r4);

        if $z3 != 0 goto label6;

     label5:
        $r8 = r1.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver this$0>;

        $r9 = staticinvoke <org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set access$2(org.springframework.web.bind.'annotation'.support.HandlerMethodResolver)>($r8);

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r3);

     label6:
        return;
    }
}
