public class org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl extends java.lang.Object implements org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore
{
    private static final double CACHE_EXPIRATION_TIME_MS;
    public static final java.lang.String GADGET_METADATA_PATH;
    private final java.util.Map metadataMap;
    private static org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl singleton;

    private void <init>()
    {
        java.util.HashMap $r1;
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl r0;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: java.util.Map metadataMap> = $r1;

        return;
    }

    static org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore getInstance()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl $r0, $r1, $r2;

        $r0 = <org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl singleton>;

        if $r0 != null goto label1;

        $r2 = new org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl;

        specialinvoke $r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: void <init>()>();

        <org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl singleton> = $r2;

     label1:
        $r1 = <org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl singleton>;

        return $r1;
    }

    private void cleanupExpiredCache()
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl$CacheElement $r5;
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl r0;
        java.util.Map $r1;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: java.util.Map metadataMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl$CacheElement) $r4;

        $z0 = virtualinvoke $r5.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl$CacheElement: boolean expired()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    private boolean fetchDataByKey(java.lang.String, org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetMetadata $r7;
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl$CacheElement r5;
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl r0;
        java.util.Map $r2, $r3;
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback r6;
        java.lang.Object $r4;
        java.lang.String r1, $r8;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback;

        $r2 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: java.util.Map metadataMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: java.util.Map metadataMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl$CacheElement) $r4;

        $r7 = virtualinvoke r5.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl$CacheElement: org.waveprotocol.wave.client.gadget.renderer.GadgetMetadata getMetadata()>();

        $r8 = virtualinvoke r5.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl$CacheElement: java.lang.String getSecurityToken()>();

        interfaceinvoke r6.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback: void onDataReady(org.waveprotocol.wave.client.gadget.renderer.GadgetMetadata,java.lang.String)>($r7, $r8);

        return 1;

     label1:
        return 0;
    }

    public void getGadgetData(java.lang.String, org.waveprotocol.wave.model.id.WaveletName, int, org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback)
    {
        com.google.gwt.json.client.JSONValue $r35, $r36, $r37, $r38, $r39;
        com.google.gwt.http.client.RequestBuilder $r33;
        boolean $z0, $z1;
        org.waveprotocol.wave.model.id.WaveletName r2;
        org.waveprotocol.wave.model.id.WaveId $r3;
        com.google.gwt.http.client.RequestBuilder$Method $r22;
        com.google.gwt.json.client.JSONString $r31, $r32;
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback r14;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r26;
        com.google.gwt.json.client.JSONArray $r29;
        java.lang.Throwable $r25;
        org.waveprotocol.wave.model.id.WaveletId $r6;
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl r0;
        int i0;
        java.lang.String r11, $r13, $r23;
        com.google.gwt.json.client.JSONObject $r27, $r28, $r30;
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl$1 $r34;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl;

        r11 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletName;

        i0 := @parameter2: int;

        r14 := @parameter3: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback;

        specialinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: void cleanupExpiredCache()>();

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r4 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r2.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: boolean fetchDataByKey(java.lang.String,org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback)>($r13, r14);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = specialinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: boolean fetchDataByKey(java.lang.String,org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback)>(r11, r14);

        if $z1 == 0 goto label2;

        return;

     label2:
        $r27 = new com.google.gwt.json.client.JSONObject;

        specialinvoke $r27.<com.google.gwt.json.client.JSONObject: void <init>()>();

        $r28 = new com.google.gwt.json.client.JSONObject;

        specialinvoke $r28.<com.google.gwt.json.client.JSONObject: void <init>()>();

        $r29 = new com.google.gwt.json.client.JSONArray;

        specialinvoke $r29.<com.google.gwt.json.client.JSONArray: void <init>()>();

        $r30 = new com.google.gwt.json.client.JSONObject;

        specialinvoke $r30.<com.google.gwt.json.client.JSONObject: void <init>()>();

     label3:
        $r31 = new com.google.gwt.json.client.JSONString;

        specialinvoke $r31.<com.google.gwt.json.client.JSONString: void <init>(java.lang.String)>(r11);

        $r35 = (com.google.gwt.json.client.JSONValue) $r31;

        virtualinvoke $r30.<com.google.gwt.json.client.JSONObject: com.google.gwt.json.client.JSONValue put(java.lang.String,com.google.gwt.json.client.JSONValue)>("url", $r35);

        $r36 = (com.google.gwt.json.client.JSONValue) $r30;

        virtualinvoke $r29.<com.google.gwt.json.client.JSONArray: com.google.gwt.json.client.JSONValue set(int,com.google.gwt.json.client.JSONValue)>(0, $r36);

        $r32 = new com.google.gwt.json.client.JSONString;

        specialinvoke $r32.<com.google.gwt.json.client.JSONString: void <init>(java.lang.String)>("wave");

        $r37 = (com.google.gwt.json.client.JSONValue) $r32;

        virtualinvoke $r28.<com.google.gwt.json.client.JSONObject: com.google.gwt.json.client.JSONValue put(java.lang.String,com.google.gwt.json.client.JSONValue)>("container", $r37);

        $r38 = (com.google.gwt.json.client.JSONValue) $r28;

        virtualinvoke $r27.<com.google.gwt.json.client.JSONObject: com.google.gwt.json.client.JSONValue put(java.lang.String,com.google.gwt.json.client.JSONValue)>("context", $r38);

        $r39 = (com.google.gwt.json.client.JSONValue) $r29;

        virtualinvoke $r27.<com.google.gwt.json.client.JSONObject: com.google.gwt.json.client.JSONValue put(java.lang.String,com.google.gwt.json.client.JSONValue)>("gadgets", $r39);

        $r33 = new com.google.gwt.http.client.RequestBuilder;

        $r22 = <com.google.gwt.http.client.RequestBuilder: com.google.gwt.http.client.RequestBuilder$Method POST>;

        specialinvoke $r33.<com.google.gwt.http.client.RequestBuilder: void <init>(com.google.gwt.http.client.RequestBuilder$Method,java.lang.String)>($r22, "/gadgets/metadata");

        $r23 = virtualinvoke $r27.<com.google.gwt.json.client.JSONObject: java.lang.String toString()>();

        $r34 = new org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl$1;

        specialinvoke $r34.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl$1: void <init>(org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl,org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback,java.lang.String)>(r0, r14, r11);

        virtualinvoke $r33.<com.google.gwt.http.client.RequestBuilder: com.google.gwt.http.client.Request sendRequest(java.lang.String,com.google.gwt.http.client.RequestCallback)>($r23, $r34);

     label4:
        goto label6;

     label5:
        $r25 := @caughtexception;

        interfaceinvoke r14.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStore$DataCallback: void onError(java.lang.String,java.lang.Throwable)>("Unable to process gadget request.", $r25);

     label6:
        return;

        catch com.google.gwt.http.client.RequestException from label3 to label4 with label5;
    }

    static java.util.Map access$000(org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl r0;
        java.util.Map $r1;

        r0 := @parameter0: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: java.util.Map metadataMap>;

        return $r1;
    }

    static void <clinit>()
    {
        <org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: java.lang.String GADGET_METADATA_PATH> = "/gadgets/metadata";

        <org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: double CACHE_EXPIRATION_TIME_MS> = 3600000.0;

        <org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl: org.waveprotocol.wave.client.gadget.renderer.GadgetDataStoreImpl singleton> = null;

        return;
    }
}
