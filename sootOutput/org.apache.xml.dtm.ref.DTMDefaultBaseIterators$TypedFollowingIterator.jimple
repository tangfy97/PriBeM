public final class org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator extends org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator
{
    private final int _nodeType;
    private final org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0;

    public void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators, int)
    {
        int i0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseIterators;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)>(r1);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0> = r1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int _nodeType> = i0;

        return;
    }

    public int next()
    {
        short $s5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11, $i13, $i15;
        org.apache.xml.dtm.DTMAxisTraverser $r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators $r2, $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator;

     label1:
        $i7 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator: org.apache.xml.dtm.DTMAxisTraverser m_traverser>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $i2 = virtualinvoke $r1.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int)>($i1, $i0);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i2;

        $i10 = (int) -1;

        if $i7 == $i10 goto label2;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i3 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int getExpandedTypeID(int)>($i7);

        $i4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int _nodeType>;

        if $i3 == $i4 goto label2;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $s5 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: short getNodeType(int)>($i7);

        $i6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int _nodeType>;

        $i11 = (int) $s5;

        if $i11 != $i6 goto label1;

     label2:
        $i13 = (int) -1;

        if $i7 != $i13 goto label3;

        $i15 = (int) -1;

        $i8 = $i15;

        goto label4;

     label3:
        $i8 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>($i7);

     label4:
        return $i8;
    }
}
