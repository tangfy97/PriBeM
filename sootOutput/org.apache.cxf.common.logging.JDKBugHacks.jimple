final class org.apache.cxf.common.logging.JDKBugHacks extends java.lang.Object
{

    private void <init>()
    {
        org.apache.cxf.common.logging.JDKBugHacks r0;

        r0 := @this: org.apache.cxf.common.logging.JDKBugHacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean skipHack(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.cxf.common.logging.JDKBugHacks: boolean skipHack(java.lang.String,java.lang.String)>(r0, "false");

        return $z0;
    }

    private static boolean skipHack(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r18, $r19;
        java.lang.Thread $r4;
        java.lang.String r1, r3, $r9, $r13, $r17, r20;
        boolean $z0, $z1, $z2;
        java.io.InputStreamReader $r12;
        org.apache.cxf.common.logging.JDKBugHacks$1 $r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r6, $r7, $r8, $r14, $r15, $r16;
        java.lang.ClassLoader $r5;
        java.io.BufferedReader $r11;
        java.io.InputStream $r10, r21;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r20 = null;

     label01:
        $r0 = new org.apache.cxf.common.logging.JDKBugHacks$1;

        specialinvoke $r0.<org.apache.cxf.common.logging.JDKBugHacks$1: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        r20 = (java.lang.String) $r2;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r20);

        if $z0 == 0 goto label07;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/cxf/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r9);

        r21 = $r10;

        if $r10 != null goto label02;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/cxf/");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r21 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>($r17);

     label02:
        if r21 == null goto label07;

        $r11 = new java.io.BufferedReader;

        $r12 = new java.io.InputStreamReader;

        specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r21);

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r12);

     label03:
        $r13 = virtualinvoke $r11.<java.io.BufferedReader: java.lang.String readLine()>();

        r20 = $r13;

        if $r13 == null goto label04;

        r20 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

     label04:
        virtualinvoke $r11.<java.io.BufferedReader: void close()>();

        goto label07;

     label05:
        $r19 := @caughtexception;

     label06:
        virtualinvoke $r11.<java.io.BufferedReader: void close()>();

        throw $r19;

     label07:
        goto label09;

     label08:
        $r18 := @caughtexception;

     label09:
        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r20);

        if $z1 == 0 goto label10;

        r20 = r3;

     label10:
        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r20);

        return $z2;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label07 with label08;
    }

    public static void doHacks()
    {
        java.net.URL $r2;
        byte $b1;
        java.lang.Long r14, $r19;
        java.lang.reflect.Method $r7, $r11, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder $r1;
        org.apache.cxf.common.logging.JDKBugHacks$2 $r3;
        java.lang.ClassLoader $r0, $r4;
        javax.xml.parsers.DocumentBuilderFactory $r20;
        java.lang.Throwable $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        java.lang.Object[] $r8, $r12, $r18;
        long $l0;
        java.lang.Class[] $r6, $r10, $r15;
        java.lang.Class $r5, $r9, $r16;
        java.lang.Object $r13;

        $z0 = staticinvoke <org.apache.cxf.common.logging.JDKBugHacks: boolean skipHack(java.lang.String)>("org.apache.cxf.JDKBugHacks.all");

        if $z0 == 0 goto label01;

        return;

     label01:
        $r0 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        $r1 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder setThreadContextClassloader(java.lang.ClassLoader)>($r0);

     label02:
        $z1 = staticinvoke <org.apache.cxf.common.logging.JDKBugHacks: boolean skipHack(java.lang.String,java.lang.String)>("org.apache.cxf.JDKBugHacks.imageIO", "true");

        if $z1 != 0 goto label03;

        staticinvoke <javax.imageio.ImageIO: java.io.File getCacheDirectory()>();

     label03:
        goto label05;

     label04:
        $r28 := @caughtexception;

     label05:
        $z2 = staticinvoke <org.apache.cxf.common.logging.JDKBugHacks: boolean skipHack(java.lang.String)>("org.apache.cxf.JDKBugHacks.documentBuilderFactory");

        if $z2 != 0 goto label06;

        $r20 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r20.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label06:
        goto label08;

     label07:
        $r27 := @caughtexception;

     label08:
        $z3 = staticinvoke <org.apache.cxf.common.logging.JDKBugHacks: boolean skipHack(java.lang.String)>("org.apache.cxf.JDKBugHacks.gcRequestLatency");

        if $z3 != 0 goto label09;

        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("sun.misc.GC");

        $r10 = newarray (java.lang.Class)[0];

        $r11 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("currentLatencyTarget", $r10);

        $r12 = newarray (java.lang.Object)[0];

        $r13 = virtualinvoke $r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r12);

        r14 = (java.lang.Long) $r13;

        if r14 == null goto label09;

        $l0 = virtualinvoke r14.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label09;

        $r15 = newarray (java.lang.Class)[1];

        $r16 = <java.lang.Long: java.lang.Class TYPE>;

        $r15[0] = $r16;

        $r17 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("requestLatency", $r15);

        $r18 = newarray (java.lang.Object)[1];

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(36000000L);

        $r18[0] = $r19;

        virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r18);

     label09:
        goto label11;

     label10:
        $r26 := @caughtexception;

     label11:
        $z4 = staticinvoke <org.apache.cxf.common.logging.JDKBugHacks: boolean skipHack(java.lang.String)>("org.apache.cxf.JDKBugHacks.policy");

        if $z4 != 0 goto label12;

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.security.auth.Policy");

        $r6 = newarray (java.lang.Class)[0];

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPolicy", $r6);

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r8);

     label12:
        goto label14;

     label13:
        $r25 := @caughtexception;

     label14:
        $z5 = staticinvoke <org.apache.cxf.common.logging.JDKBugHacks: boolean skipHack(java.lang.String)>("org.apache.cxf.JDKBugHacks.authConfiguration");

        if $z5 != 0 goto label15;

        $r4 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("javax.security.auth.login.Configuration", 1, $r4);

     label15:
        goto label17;

     label16:
        $r24 := @caughtexception;

     label17:
        $z6 = staticinvoke <org.apache.cxf.common.logging.JDKBugHacks: boolean skipHack(java.lang.String)>("org.apache.cxf.JDKBugHacks.securityProviders");

        if $z6 != 0 goto label18;

        staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();

     label18:
        $z7 = staticinvoke <org.apache.cxf.common.logging.JDKBugHacks: boolean skipHack(java.lang.String)>("org.apache.cxf.JDKBugHacks.defaultUsesCaches");

        if $z7 != 0 goto label19;

        $r2 = new java.net.URL;

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>("jar:file://dummy.jar!/");

        $r3 = new org.apache.cxf.common.logging.JDKBugHacks$2;

        specialinvoke $r3.<org.apache.cxf.common.logging.JDKBugHacks$2: void <init>(java.net.URL)>($r2);

        virtualinvoke $r3.<java.net.URLConnection: void setDefaultUseCaches(boolean)>(0);

     label19:
        goto label21;

     label20:
        $r23 := @caughtexception;

     label21:
        if $r1 == null goto label25;

        virtualinvoke $r1.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

        goto label25;

     label22:
        $r22 := @caughtexception;

     label23:
        if $r1 == null goto label24;

        virtualinvoke $r1.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

     label24:
        throw $r22;

     label25:
        goto label27;

     label26:
        $r21 := @caughtexception;

     label27:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label02 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label01 to label25 with label26;
    }
}
