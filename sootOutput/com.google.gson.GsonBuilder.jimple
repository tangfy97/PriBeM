public final class com.google.gson.GsonBuilder extends java.lang.Object
{
    private static final com.google.gson.MapAsArrayTypeAdapter COMPLEX_KEY_MAP_TYPE_ADAPTER;
    private static final com.google.gson.InnerClassExclusionStrategy innerClassExclusionStrategy;
    private static final com.google.gson.ExposeAnnotationDeserializationExclusionStrategy exposeAnnotationDeserializationExclusionStrategy;
    private static final com.google.gson.ExposeAnnotationSerializationExclusionStrategy exposeAnnotationSerializationExclusionStrategy;
    private final java.util.Set serializeExclusionStrategies;
    private final java.util.Set deserializeExclusionStrategies;
    private double ignoreVersionsAfter;
    private com.google.gson.ModifierBasedExclusionStrategy modifierBasedExclusionStrategy;
    private boolean serializeInnerClasses;
    private boolean excludeFieldsWithoutExposeAnnotation;
    private com.google.gson.LongSerializationPolicy longSerializationPolicy;
    private com.google.gson.FieldNamingStrategy2 fieldNamingPolicy;
    private final com.google.gson.ParameterizedTypeHandlerMap instanceCreators;
    private final com.google.gson.ParameterizedTypeHandlerMap serializers;
    private final com.google.gson.ParameterizedTypeHandlerMap deserializers;
    private boolean serializeNulls;
    private java.lang.String datePattern;
    private int dateStyle;
    private int timeStyle;
    private boolean serializeSpecialFloatingPointValues;
    private boolean escapeHtmlChars;
    private boolean prettyPrinting;
    private boolean generateNonExecutableJson;

    public void <init>()
    {
        com.google.gson.SyntheticFieldExclusionStrategy $r5, $r9;
        com.google.gson.GsonBuilder r0;
        com.google.gson.AnonymousAndLocalClassExclusionStrategy $r3, $r7;
        java.util.HashSet $r1, $r2;
        java.util.Set $r4, $r6, $r8, $r10;
        com.google.gson.ParameterizedTypeHandlerMap $r14, $r15, $r16;
        com.google.gson.ModifierBasedExclusionStrategy $r11;
        com.google.gson.FieldNamingStrategy2 $r13;
        com.google.gson.LongSerializationPolicy $r12;

        r0 := @this: com.google.gson.GsonBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.google.gson.GsonBuilder: java.util.Set serializeExclusionStrategies> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.google.gson.GsonBuilder: java.util.Set deserializeExclusionStrategies> = $r2;

        $r4 = r0.<com.google.gson.GsonBuilder: java.util.Set deserializeExclusionStrategies>;

        $r3 = <com.google.gson.Gson: com.google.gson.AnonymousAndLocalClassExclusionStrategy DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r6 = r0.<com.google.gson.GsonBuilder: java.util.Set deserializeExclusionStrategies>;

        $r5 = <com.google.gson.Gson: com.google.gson.SyntheticFieldExclusionStrategy DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r8 = r0.<com.google.gson.GsonBuilder: java.util.Set serializeExclusionStrategies>;

        $r7 = <com.google.gson.Gson: com.google.gson.AnonymousAndLocalClassExclusionStrategy DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $r10 = r0.<com.google.gson.GsonBuilder: java.util.Set serializeExclusionStrategies>;

        $r9 = <com.google.gson.Gson: com.google.gson.SyntheticFieldExclusionStrategy DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r9);

        r0.<com.google.gson.GsonBuilder: double ignoreVersionsAfter> = -1.0;

        r0.<com.google.gson.GsonBuilder: boolean serializeInnerClasses> = 1;

        r0.<com.google.gson.GsonBuilder: boolean prettyPrinting> = 0;

        r0.<com.google.gson.GsonBuilder: boolean escapeHtmlChars> = 1;

        $r11 = <com.google.gson.Gson: com.google.gson.ModifierBasedExclusionStrategy DEFAULT_MODIFIER_BASED_EXCLUSION_STRATEGY>;

        r0.<com.google.gson.GsonBuilder: com.google.gson.ModifierBasedExclusionStrategy modifierBasedExclusionStrategy> = $r11;

        r0.<com.google.gson.GsonBuilder: boolean excludeFieldsWithoutExposeAnnotation> = 0;

        $r12 = <com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy DEFAULT>;

        r0.<com.google.gson.GsonBuilder: com.google.gson.LongSerializationPolicy longSerializationPolicy> = $r12;

        $r13 = <com.google.gson.Gson: com.google.gson.FieldNamingStrategy2 DEFAULT_NAMING_POLICY>;

        r0.<com.google.gson.GsonBuilder: com.google.gson.FieldNamingStrategy2 fieldNamingPolicy> = $r13;

        $r14 = new com.google.gson.ParameterizedTypeHandlerMap;

        specialinvoke $r14.<com.google.gson.ParameterizedTypeHandlerMap: void <init>()>();

        r0.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap instanceCreators> = $r14;

        $r15 = new com.google.gson.ParameterizedTypeHandlerMap;

        specialinvoke $r15.<com.google.gson.ParameterizedTypeHandlerMap: void <init>()>();

        r0.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap serializers> = $r15;

        $r16 = new com.google.gson.ParameterizedTypeHandlerMap;

        specialinvoke $r16.<com.google.gson.ParameterizedTypeHandlerMap: void <init>()>();

        r0.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap deserializers> = $r16;

        r0.<com.google.gson.GsonBuilder: boolean serializeNulls> = 0;

        r0.<com.google.gson.GsonBuilder: int dateStyle> = 2;

        r0.<com.google.gson.GsonBuilder: int timeStyle> = 2;

        r0.<com.google.gson.GsonBuilder: boolean serializeSpecialFloatingPointValues> = 0;

        r0.<com.google.gson.GsonBuilder: boolean generateNonExecutableJson> = 0;

        return;
    }

    public com.google.gson.GsonBuilder setVersion(double)
    {
        com.google.gson.GsonBuilder r0;
        double d0;

        r0 := @this: com.google.gson.GsonBuilder;

        d0 := @parameter0: double;

        r0.<com.google.gson.GsonBuilder: double ignoreVersionsAfter> = d0;

        return r0;
    }

    public transient com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[])
    {
        com.google.gson.ModifierBasedExclusionStrategy $r1;
        int[] r2;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r2 := @parameter0: int[];

        $r1 = new com.google.gson.ModifierBasedExclusionStrategy;

        specialinvoke $r1.<com.google.gson.ModifierBasedExclusionStrategy: void <init>(int[])>(r2);

        r0.<com.google.gson.GsonBuilder: com.google.gson.ModifierBasedExclusionStrategy modifierBasedExclusionStrategy> = $r1;

        return r0;
    }

    public com.google.gson.GsonBuilder generateNonExecutableJson()
    {
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r0.<com.google.gson.GsonBuilder: boolean generateNonExecutableJson> = 1;

        return r0;
    }

    public com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation()
    {
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r0.<com.google.gson.GsonBuilder: boolean excludeFieldsWithoutExposeAnnotation> = 1;

        return r0;
    }

    public com.google.gson.GsonBuilder serializeNulls()
    {
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r0.<com.google.gson.GsonBuilder: boolean serializeNulls> = 1;

        return r0;
    }

    public com.google.gson.GsonBuilder enableComplexMapKeySerialization()
    {
        com.google.gson.GsonBuilder r0;
        com.google.gson.MapAsArrayTypeAdapter $r1;

        r0 := @this: com.google.gson.GsonBuilder;

        $r1 = <com.google.gson.GsonBuilder: com.google.gson.MapAsArrayTypeAdapter COMPLEX_KEY_MAP_TYPE_ADAPTER>;

        virtualinvoke r0.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)>(class "Ljava/util/Map;", $r1);

        return r0;
    }

    public com.google.gson.GsonBuilder disableInnerClassSerialization()
    {
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r0.<com.google.gson.GsonBuilder: boolean serializeInnerClasses> = 0;

        return r0;
    }

    public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)
    {
        com.google.gson.LongSerializationPolicy r1;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: com.google.gson.LongSerializationPolicy;

        r0.<com.google.gson.GsonBuilder: com.google.gson.LongSerializationPolicy longSerializationPolicy> = r1;

        return r0;
    }

    public com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)
    {
        com.google.gson.FieldNamingStrategy2 $r2;
        com.google.gson.FieldNamingPolicy r1;
        com.google.gson.GsonBuilder r0, $r3;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: com.google.gson.FieldNamingPolicy;

        $r2 = virtualinvoke r1.<com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingStrategy2 getFieldNamingPolicy()>();

        $r3 = virtualinvoke r0.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy2)>($r2);

        return $r3;
    }

    public com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)
    {
        com.google.gson.FieldNamingStrategy r2;
        com.google.gson.FieldNamingStrategy2Adapter $r1;
        com.google.gson.GsonBuilder r0, $r3;

        r0 := @this: com.google.gson.GsonBuilder;

        r2 := @parameter0: com.google.gson.FieldNamingStrategy;

        $r1 = new com.google.gson.FieldNamingStrategy2Adapter;

        specialinvoke $r1.<com.google.gson.FieldNamingStrategy2Adapter: void <init>(com.google.gson.FieldNamingStrategy)>(r2);

        $r3 = virtualinvoke r0.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy2)>($r1);

        return $r3;
    }

    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy2)
    {
        com.google.gson.FieldNamingStrategy2 r2;
        com.google.gson.SerializedNameAnnotationInterceptingNamingPolicy $r1;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r2 := @parameter0: com.google.gson.FieldNamingStrategy2;

        $r1 = new com.google.gson.SerializedNameAnnotationInterceptingNamingPolicy;

        specialinvoke $r1.<com.google.gson.SerializedNameAnnotationInterceptingNamingPolicy: void <init>(com.google.gson.FieldNamingStrategy2)>(r2);

        r0.<com.google.gson.GsonBuilder: com.google.gson.FieldNamingStrategy2 fieldNamingPolicy> = $r1;

        return r0;
    }

    public transient com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])
    {
        java.util.List $r1;
        java.util.Set $r3, $r4;
        com.google.gson.GsonBuilder r2;
        com.google.gson.ExclusionStrategy[] r0;

        r2 := @this: com.google.gson.GsonBuilder;

        r0 := @parameter0: com.google.gson.ExclusionStrategy[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r3 = r2.<com.google.gson.GsonBuilder: java.util.Set serializeExclusionStrategies>;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>($r1);

        $r4 = r2.<com.google.gson.GsonBuilder: java.util.Set deserializeExclusionStrategies>;

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>($r1);

        return r2;
    }

    public com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)
    {
        java.util.Set $r2;
        com.google.gson.ExclusionStrategy r1;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: com.google.gson.ExclusionStrategy;

        $r2 = r0.<com.google.gson.GsonBuilder: java.util.Set serializeExclusionStrategies>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)
    {
        java.util.Set $r2;
        com.google.gson.ExclusionStrategy r1;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: com.google.gson.ExclusionStrategy;

        $r2 = r0.<com.google.gson.GsonBuilder: java.util.Set deserializeExclusionStrategies>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public com.google.gson.GsonBuilder setPrettyPrinting()
    {
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r0.<com.google.gson.GsonBuilder: boolean prettyPrinting> = 1;

        return r0;
    }

    public com.google.gson.GsonBuilder disableHtmlEscaping()
    {
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r0.<com.google.gson.GsonBuilder: boolean escapeHtmlChars> = 0;

        return r0;
    }

    public com.google.gson.GsonBuilder setDateFormat(java.lang.String)
    {
        java.lang.String r1;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<com.google.gson.GsonBuilder: java.lang.String datePattern> = r1;

        return r0;
    }

    public com.google.gson.GsonBuilder setDateFormat(int)
    {
        int i0;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        i0 := @parameter0: int;

        r0.<com.google.gson.GsonBuilder: int dateStyle> = i0;

        r0.<com.google.gson.GsonBuilder: java.lang.String datePattern> = null;

        return r0;
    }

    public com.google.gson.GsonBuilder setDateFormat(int, int)
    {
        int i0, i1;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.google.gson.GsonBuilder: int dateStyle> = i0;

        r0.<com.google.gson.GsonBuilder: int timeStyle> = i1;

        r0.<com.google.gson.GsonBuilder: java.lang.String datePattern> = null;

        return r0;
    }

    public com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)
    {
        com.google.gson.JsonSerializer $r4;
        com.google.gson.GsonBuilder r1;
        com.google.gson.InstanceCreator $r5;
        java.lang.reflect.Type r2;
        com.google.gson.JsonDeserializer $r3;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r1 := @this: com.google.gson.GsonBuilder;

        r2 := @parameter0: java.lang.reflect.Type;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof com.google.gson.JsonSerializer;

        if $z0 != 0 goto label1;

        $z4 = r0 instanceof com.google.gson.JsonDeserializer;

        if $z4 != 0 goto label1;

        $z5 = r0 instanceof com.google.gson.InstanceCreator;

        if $z5 == 0 goto label2;

     label1:
        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        staticinvoke <com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)>($z6);

        $z1 = r0 instanceof com.google.gson.InstanceCreator;

        if $z1 == 0 goto label4;

        $r5 = (com.google.gson.InstanceCreator) r0;

        specialinvoke r1.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerInstanceCreator(java.lang.reflect.Type,com.google.gson.InstanceCreator)>(r2, $r5);

     label4:
        $z2 = r0 instanceof com.google.gson.JsonSerializer;

        if $z2 == 0 goto label5;

        $r4 = (com.google.gson.JsonSerializer) r0;

        specialinvoke r1.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerSerializer(java.lang.reflect.Type,com.google.gson.JsonSerializer)>(r2, $r4);

     label5:
        $z3 = r0 instanceof com.google.gson.JsonDeserializer;

        if $z3 == 0 goto label6;

        $r3 = (com.google.gson.JsonDeserializer) r0;

        specialinvoke r1.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerDeserializer(java.lang.reflect.Type,com.google.gson.JsonDeserializer)>(r2, $r3);

     label6:
        return r1;
    }

    private com.google.gson.GsonBuilder registerInstanceCreator(java.lang.reflect.Type, com.google.gson.InstanceCreator)
    {
        com.google.gson.InstanceCreator r2;
        java.lang.reflect.Type r1;
        com.google.gson.ParameterizedTypeHandlerMap $r3;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: com.google.gson.InstanceCreator;

        $r3 = r0.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap instanceCreators>;

        virtualinvoke $r3.<com.google.gson.ParameterizedTypeHandlerMap: void register(java.lang.reflect.Type,java.lang.Object)>(r1, r2);

        return r0;
    }

    private com.google.gson.GsonBuilder registerSerializer(java.lang.reflect.Type, com.google.gson.JsonSerializer)
    {
        java.lang.reflect.Type r1;
        com.google.gson.JsonSerializer r2;
        com.google.gson.ParameterizedTypeHandlerMap $r3;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: com.google.gson.JsonSerializer;

        $r3 = r0.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap serializers>;

        virtualinvoke $r3.<com.google.gson.ParameterizedTypeHandlerMap: void register(java.lang.reflect.Type,java.lang.Object)>(r1, r2);

        return r0;
    }

    private com.google.gson.GsonBuilder registerDeserializer(java.lang.reflect.Type, com.google.gson.JsonDeserializer)
    {
        java.lang.reflect.Type r1;
        com.google.gson.JsonDeserializerExceptionWrapper $r2;
        com.google.gson.JsonDeserializer r3;
        com.google.gson.ParameterizedTypeHandlerMap $r4;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: java.lang.reflect.Type;

        r3 := @parameter1: com.google.gson.JsonDeserializer;

        $r4 = r0.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap deserializers>;

        $r2 = new com.google.gson.JsonDeserializerExceptionWrapper;

        specialinvoke $r2.<com.google.gson.JsonDeserializerExceptionWrapper: void <init>(com.google.gson.JsonDeserializer)>(r3);

        virtualinvoke $r4.<com.google.gson.ParameterizedTypeHandlerMap: void register(java.lang.reflect.Type,java.lang.Object)>(r1, $r2);

        return r0;
    }

    public com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class, java.lang.Object)
    {
        com.google.gson.JsonSerializer $r4;
        com.google.gson.GsonBuilder r1;
        com.google.gson.InstanceCreator $r5;
        com.google.gson.JsonDeserializer $r3;
        java.lang.Object r0;
        java.lang.Class r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r1 := @this: com.google.gson.GsonBuilder;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof com.google.gson.JsonSerializer;

        if $z0 != 0 goto label1;

        $z4 = r0 instanceof com.google.gson.JsonDeserializer;

        if $z4 != 0 goto label1;

        $z5 = r0 instanceof com.google.gson.InstanceCreator;

        if $z5 == 0 goto label2;

     label1:
        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        staticinvoke <com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)>($z6);

        $z1 = r0 instanceof com.google.gson.InstanceCreator;

        if $z1 == 0 goto label4;

        $r5 = (com.google.gson.InstanceCreator) r0;

        specialinvoke r1.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerInstanceCreatorForTypeHierarchy(java.lang.Class,com.google.gson.InstanceCreator)>(r2, $r5);

     label4:
        $z2 = r0 instanceof com.google.gson.JsonSerializer;

        if $z2 == 0 goto label5;

        $r4 = (com.google.gson.JsonSerializer) r0;

        specialinvoke r1.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerSerializerForTypeHierarchy(java.lang.Class,com.google.gson.JsonSerializer)>(r2, $r4);

     label5:
        $z3 = r0 instanceof com.google.gson.JsonDeserializer;

        if $z3 == 0 goto label6;

        $r3 = (com.google.gson.JsonDeserializer) r0;

        specialinvoke r1.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerDeserializerForTypeHierarchy(java.lang.Class,com.google.gson.JsonDeserializer)>(r2, $r3);

     label6:
        return r1;
    }

    private com.google.gson.GsonBuilder registerInstanceCreatorForTypeHierarchy(java.lang.Class, com.google.gson.InstanceCreator)
    {
        com.google.gson.InstanceCreator r2;
        java.lang.Class r1;
        com.google.gson.ParameterizedTypeHandlerMap $r3;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.google.gson.InstanceCreator;

        $r3 = r0.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap instanceCreators>;

        virtualinvoke $r3.<com.google.gson.ParameterizedTypeHandlerMap: void registerForTypeHierarchy(java.lang.Class,java.lang.Object)>(r1, r2);

        return r0;
    }

    private com.google.gson.GsonBuilder registerSerializerForTypeHierarchy(java.lang.Class, com.google.gson.JsonSerializer)
    {
        java.lang.Class r1;
        com.google.gson.JsonSerializer r2;
        com.google.gson.ParameterizedTypeHandlerMap $r3;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.google.gson.JsonSerializer;

        $r3 = r0.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap serializers>;

        virtualinvoke $r3.<com.google.gson.ParameterizedTypeHandlerMap: void registerForTypeHierarchy(java.lang.Class,java.lang.Object)>(r1, r2);

        return r0;
    }

    private com.google.gson.GsonBuilder registerDeserializerForTypeHierarchy(java.lang.Class, com.google.gson.JsonDeserializer)
    {
        com.google.gson.JsonDeserializerExceptionWrapper $r2;
        com.google.gson.JsonDeserializer r3;
        java.lang.Class r1;
        com.google.gson.ParameterizedTypeHandlerMap $r4;
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: com.google.gson.JsonDeserializer;

        $r4 = r0.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap deserializers>;

        $r2 = new com.google.gson.JsonDeserializerExceptionWrapper;

        specialinvoke $r2.<com.google.gson.JsonDeserializerExceptionWrapper: void <init>(com.google.gson.JsonDeserializer)>(r3);

        virtualinvoke $r4.<com.google.gson.ParameterizedTypeHandlerMap: void registerForTypeHierarchy(java.lang.Class,java.lang.Object)>(r1, $r2);

        return r0;
    }

    public com.google.gson.GsonBuilder serializeSpecialFloatingPointValues()
    {
        com.google.gson.GsonBuilder r0;

        r0 := @this: com.google.gson.GsonBuilder;

        r0.<com.google.gson.GsonBuilder: boolean serializeSpecialFloatingPointValues> = 1;

        return r0;
    }

    public com.google.gson.Gson create()
    {
        com.google.gson.GsonBuilder r1;
        byte $b0;
        com.google.gson.Gson $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.google.gson.ExposeAnnotationDeserializationExclusionStrategy $r28;
        java.util.Set $r2, $r4;
        com.google.gson.DisjunctionExclusionStrategy $r25, $r26;
        com.google.gson.ModifierBasedExclusionStrategy $r5, $r6;
        com.google.gson.FieldNamingStrategy2 $r27;
        com.google.gson.LongSerializationPolicy $r16;
        com.google.gson.ExposeAnnotationSerializationExclusionStrategy $r29;
        int $i1, $i2;
        java.lang.String $r15;
        java.util.LinkedList $r0, $r3;
        double $d0, $d1;
        com.google.gson.MappedObjectConstructor $r23;
        com.google.gson.InnerClassExclusionStrategy $r31, $r32;
        com.google.gson.ParameterizedTypeHandlerMap $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r22;
        com.google.gson.VersionExclusionStrategy $r30;

        r1 := @this: com.google.gson.GsonBuilder;

        $r0 = new java.util.LinkedList;

        $r2 = r1.<com.google.gson.GsonBuilder: java.util.Set deserializeExclusionStrategies>;

        specialinvoke $r0.<java.util.LinkedList: void <init>(java.util.Collection)>($r2);

        $r3 = new java.util.LinkedList;

        $r4 = r1.<com.google.gson.GsonBuilder: java.util.Set serializeExclusionStrategies>;

        specialinvoke $r3.<java.util.LinkedList: void <init>(java.util.Collection)>($r4);

        $r5 = r1.<com.google.gson.GsonBuilder: com.google.gson.ModifierBasedExclusionStrategy modifierBasedExclusionStrategy>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = r1.<com.google.gson.GsonBuilder: com.google.gson.ModifierBasedExclusionStrategy modifierBasedExclusionStrategy>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $z0 = r1.<com.google.gson.GsonBuilder: boolean serializeInnerClasses>;

        if $z0 != 0 goto label1;

        $r31 = <com.google.gson.GsonBuilder: com.google.gson.InnerClassExclusionStrategy innerClassExclusionStrategy>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r32 = <com.google.gson.GsonBuilder: com.google.gson.InnerClassExclusionStrategy innerClassExclusionStrategy>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r32);

     label1:
        $d0 = r1.<com.google.gson.GsonBuilder: double ignoreVersionsAfter>;

        $b0 = $d0 cmpl -1.0;

        if $b0 == 0 goto label2;

        $r30 = new com.google.gson.VersionExclusionStrategy;

        $d1 = r1.<com.google.gson.GsonBuilder: double ignoreVersionsAfter>;

        specialinvoke $r30.<com.google.gson.VersionExclusionStrategy: void <init>(double)>($d1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r30);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r30);

     label2:
        $z1 = r1.<com.google.gson.GsonBuilder: boolean excludeFieldsWithoutExposeAnnotation>;

        if $z1 == 0 goto label3;

        $r28 = <com.google.gson.GsonBuilder: com.google.gson.ExposeAnnotationDeserializationExclusionStrategy exposeAnnotationDeserializationExclusionStrategy>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r28);

        $r29 = <com.google.gson.GsonBuilder: com.google.gson.ExposeAnnotationSerializationExclusionStrategy exposeAnnotationSerializationExclusionStrategy>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r29);

     label3:
        $r7 = <com.google.gson.DefaultTypeAdapters: com.google.gson.ParameterizedTypeHandlerMap DEFAULT_HIERARCHY_SERIALIZERS>;

        $r8 = virtualinvoke $r7.<com.google.gson.ParameterizedTypeHandlerMap: com.google.gson.ParameterizedTypeHandlerMap copyOf()>();

        $r9 = r1.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap serializers>;

        $r10 = virtualinvoke $r9.<com.google.gson.ParameterizedTypeHandlerMap: com.google.gson.ParameterizedTypeHandlerMap copyOf()>();

        virtualinvoke $r8.<com.google.gson.ParameterizedTypeHandlerMap: void register(com.google.gson.ParameterizedTypeHandlerMap)>($r10);

        $r11 = <com.google.gson.DefaultTypeAdapters: com.google.gson.ParameterizedTypeHandlerMap DEFAULT_HIERARCHY_DESERIALIZERS>;

        $r12 = virtualinvoke $r11.<com.google.gson.ParameterizedTypeHandlerMap: com.google.gson.ParameterizedTypeHandlerMap copyOf()>();

        $r13 = r1.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap deserializers>;

        $r14 = virtualinvoke $r13.<com.google.gson.ParameterizedTypeHandlerMap: com.google.gson.ParameterizedTypeHandlerMap copyOf()>();

        virtualinvoke $r12.<com.google.gson.ParameterizedTypeHandlerMap: void register(com.google.gson.ParameterizedTypeHandlerMap)>($r14);

        $r15 = r1.<com.google.gson.GsonBuilder: java.lang.String datePattern>;

        $i2 = r1.<com.google.gson.GsonBuilder: int dateStyle>;

        $i1 = r1.<com.google.gson.GsonBuilder: int timeStyle>;

        staticinvoke <com.google.gson.GsonBuilder: void addTypeAdaptersForDate(java.lang.String,int,int,com.google.gson.ParameterizedTypeHandlerMap,com.google.gson.ParameterizedTypeHandlerMap)>($r15, $i2, $i1, $r8, $r12);

        $z2 = r1.<com.google.gson.GsonBuilder: boolean serializeSpecialFloatingPointValues>;

        $r16 = r1.<com.google.gson.GsonBuilder: com.google.gson.LongSerializationPolicy longSerializationPolicy>;

        $r17 = staticinvoke <com.google.gson.DefaultTypeAdapters: com.google.gson.ParameterizedTypeHandlerMap getDefaultSerializers(boolean,com.google.gson.LongSerializationPolicy)>($z2, $r16);

        virtualinvoke $r8.<com.google.gson.ParameterizedTypeHandlerMap: void registerIfAbsent(com.google.gson.ParameterizedTypeHandlerMap)>($r17);

        $r18 = staticinvoke <com.google.gson.DefaultTypeAdapters: com.google.gson.ParameterizedTypeHandlerMap getDefaultDeserializers()>();

        virtualinvoke $r12.<com.google.gson.ParameterizedTypeHandlerMap: void registerIfAbsent(com.google.gson.ParameterizedTypeHandlerMap)>($r18);

        $r19 = r1.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap instanceCreators>;

        $r20 = virtualinvoke $r19.<com.google.gson.ParameterizedTypeHandlerMap: com.google.gson.ParameterizedTypeHandlerMap copyOf()>();

        $r21 = staticinvoke <com.google.gson.DefaultTypeAdapters: com.google.gson.ParameterizedTypeHandlerMap getDefaultInstanceCreators()>();

        virtualinvoke $r20.<com.google.gson.ParameterizedTypeHandlerMap: void registerIfAbsent(com.google.gson.ParameterizedTypeHandlerMap)>($r21);

        virtualinvoke $r8.<com.google.gson.ParameterizedTypeHandlerMap: void makeUnmodifiable()>();

        virtualinvoke $r12.<com.google.gson.ParameterizedTypeHandlerMap: void makeUnmodifiable()>();

        $r22 = r1.<com.google.gson.GsonBuilder: com.google.gson.ParameterizedTypeHandlerMap instanceCreators>;

        virtualinvoke $r22.<com.google.gson.ParameterizedTypeHandlerMap: void makeUnmodifiable()>();

        $r23 = new com.google.gson.MappedObjectConstructor;

        specialinvoke $r23.<com.google.gson.MappedObjectConstructor: void <init>(com.google.gson.ParameterizedTypeHandlerMap)>($r20);

        $r24 = new com.google.gson.Gson;

        $r25 = new com.google.gson.DisjunctionExclusionStrategy;

        specialinvoke $r25.<com.google.gson.DisjunctionExclusionStrategy: void <init>(java.util.Collection)>($r0);

        $r26 = new com.google.gson.DisjunctionExclusionStrategy;

        specialinvoke $r26.<com.google.gson.DisjunctionExclusionStrategy: void <init>(java.util.Collection)>($r3);

        $r27 = r1.<com.google.gson.GsonBuilder: com.google.gson.FieldNamingStrategy2 fieldNamingPolicy>;

        $z6 = r1.<com.google.gson.GsonBuilder: boolean serializeNulls>;

        $z5 = r1.<com.google.gson.GsonBuilder: boolean generateNonExecutableJson>;

        $z4 = r1.<com.google.gson.GsonBuilder: boolean escapeHtmlChars>;

        $z3 = r1.<com.google.gson.GsonBuilder: boolean prettyPrinting>;

        specialinvoke $r24.<com.google.gson.Gson: void <init>(com.google.gson.ExclusionStrategy,com.google.gson.ExclusionStrategy,com.google.gson.FieldNamingStrategy2,com.google.gson.MappedObjectConstructor,boolean,com.google.gson.ParameterizedTypeHandlerMap,com.google.gson.ParameterizedTypeHandlerMap,boolean,boolean,boolean)>($r25, $r26, $r27, $r23, $z6, $r8, $r12, $z5, $z4, $z3);

        return $r24;
    }

    private static void addTypeAdaptersForDate(java.lang.String, int, int, com.google.gson.ParameterizedTypeHandlerMap, com.google.gson.ParameterizedTypeHandlerMap)
    {
        com.google.gson.ParameterizedTypeHandlerMap r1, r2;
        com.google.gson.DefaultTypeAdapters$DefaultDateTypeAdapter $r3, $r6, r7;
        int i0, i1;
        java.lang.String r0, $r4, $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: com.google.gson.ParameterizedTypeHandlerMap;

        r2 := @parameter4: com.google.gson.ParameterizedTypeHandlerMap;

        r7 = null;

        if r0 == null goto label1;

        $r4 = "";

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r6 = new com.google.gson.DefaultTypeAdapters$DefaultDateTypeAdapter;

        specialinvoke $r6.<com.google.gson.DefaultTypeAdapters$DefaultDateTypeAdapter: void <init>(java.lang.String)>(r0);

        r7 = $r6;

        goto label2;

     label1:
        if i0 == 2 goto label2;

        if i1 == 2 goto label2;

        $r3 = new com.google.gson.DefaultTypeAdapters$DefaultDateTypeAdapter;

        specialinvoke $r3.<com.google.gson.DefaultTypeAdapters$DefaultDateTypeAdapter: void <init>(int,int)>(i0, i1);

        r7 = $r3;

     label2:
        if r7 == null goto label3;

        staticinvoke <com.google.gson.GsonBuilder: void registerIfAbsent(java.lang.Class,com.google.gson.ParameterizedTypeHandlerMap,java.lang.Object)>(class "Ljava/util/Date;", r1, r7);

        staticinvoke <com.google.gson.GsonBuilder: void registerIfAbsent(java.lang.Class,com.google.gson.ParameterizedTypeHandlerMap,java.lang.Object)>(class "Ljava/util/Date;", r2, r7);

        staticinvoke <com.google.gson.GsonBuilder: void registerIfAbsent(java.lang.Class,com.google.gson.ParameterizedTypeHandlerMap,java.lang.Object)>(class "Ljava/sql/Timestamp;", r1, r7);

        staticinvoke <com.google.gson.GsonBuilder: void registerIfAbsent(java.lang.Class,com.google.gson.ParameterizedTypeHandlerMap,java.lang.Object)>(class "Ljava/sql/Timestamp;", r2, r7);

        staticinvoke <com.google.gson.GsonBuilder: void registerIfAbsent(java.lang.Class,com.google.gson.ParameterizedTypeHandlerMap,java.lang.Object)>(class "Ljava/sql/Date;", r1, r7);

        staticinvoke <com.google.gson.GsonBuilder: void registerIfAbsent(java.lang.Class,com.google.gson.ParameterizedTypeHandlerMap,java.lang.Object)>(class "Ljava/sql/Date;", r2, r7);

     label3:
        return;
    }

    private static void registerIfAbsent(java.lang.Class, com.google.gson.ParameterizedTypeHandlerMap, java.lang.Object)
    {
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.lang.Class r1;
        java.lang.Object r2;
        boolean $z0;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: com.google.gson.ParameterizedTypeHandlerMap;

        r2 := @parameter2: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: boolean hasSpecificHandlerFor(java.lang.reflect.Type)>(r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: void register(java.lang.reflect.Type,java.lang.Object)>(r1, r2);

     label1:
        return;
    }

    static void <clinit>()
    {
        com.google.gson.ExposeAnnotationSerializationExclusionStrategy $r3;
        com.google.gson.ExposeAnnotationDeserializationExclusionStrategy $r2;
        com.google.gson.InnerClassExclusionStrategy $r1;
        com.google.gson.MapAsArrayTypeAdapter $r0;

        $r0 = new com.google.gson.MapAsArrayTypeAdapter;

        specialinvoke $r0.<com.google.gson.MapAsArrayTypeAdapter: void <init>()>();

        <com.google.gson.GsonBuilder: com.google.gson.MapAsArrayTypeAdapter COMPLEX_KEY_MAP_TYPE_ADAPTER> = $r0;

        $r1 = new com.google.gson.InnerClassExclusionStrategy;

        specialinvoke $r1.<com.google.gson.InnerClassExclusionStrategy: void <init>()>();

        <com.google.gson.GsonBuilder: com.google.gson.InnerClassExclusionStrategy innerClassExclusionStrategy> = $r1;

        $r2 = new com.google.gson.ExposeAnnotationDeserializationExclusionStrategy;

        specialinvoke $r2.<com.google.gson.ExposeAnnotationDeserializationExclusionStrategy: void <init>()>();

        <com.google.gson.GsonBuilder: com.google.gson.ExposeAnnotationDeserializationExclusionStrategy exposeAnnotationDeserializationExclusionStrategy> = $r2;

        $r3 = new com.google.gson.ExposeAnnotationSerializationExclusionStrategy;

        specialinvoke $r3.<com.google.gson.ExposeAnnotationSerializationExclusionStrategy: void <init>()>();

        <com.google.gson.GsonBuilder: com.google.gson.ExposeAnnotationSerializationExclusionStrategy exposeAnnotationSerializationExclusionStrategy> = $r3;

        return;
    }
}
