public class ucar.nc2.units.SimpleUnit extends java.lang.Object
{
    public static final ucar.nc2.units.SimpleUnit kmUnit;
    public static final ucar.nc2.units.SimpleUnit meterUnit;
    public static final ucar.nc2.units.SimpleUnit pressureUnit;
    protected static ucar.units.Unit secsUnit;
    protected static ucar.units.Unit dateReferenceUnit;
    protected static boolean debugParse;
    protected ucar.units.Unit uu;

    public static ucar.nc2.units.SimpleUnit factory(java.lang.String)
    {
        java.io.PrintStream $r4;
        java.lang.Exception $r2;
        ucar.nc2.units.SimpleUnit $r1;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8;
        java.lang.String r0, $r9;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factoryWithExceptions(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $z0 = <ucar.nc2.units.SimpleUnit: boolean debugParse>;

        if $z0 == 0 goto label4;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got Exception ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static ucar.nc2.units.SimpleUnit factoryWithExceptions(java.lang.String) throws java.lang.Exception
    {
        ucar.nc2.units.SimpleUnit $r3;
        ucar.units.Unit $r2;
        java.lang.String r1;
        ucar.nc2.units.TimeUnit $r4;
        ucar.units.UnitFormat $r0;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <ucar.units.UnitFormatManager: ucar.units.UnitFormat instance()>();

        $r2 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>(r1);

        $z0 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isTimeUnit(ucar.units.Unit)>($r2);

        if $z0 == 0 goto label1;

        $r4 = new ucar.nc2.units.TimeUnit;

        specialinvoke $r4.<ucar.nc2.units.TimeUnit: void <init>(java.lang.String)>(r1);

        return $r4;

     label1:
        $r3 = new ucar.nc2.units.SimpleUnit;

        specialinvoke $r3.<ucar.nc2.units.SimpleUnit: void <init>(ucar.units.Unit)>($r2);

        return $r3;
    }

    protected static ucar.units.Unit makeUnit(java.lang.String) throws java.lang.Exception
    {
        ucar.units.Unit $r2;
        java.lang.String r1;
        ucar.units.UnitFormat $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <ucar.units.UnitFormatManager: ucar.units.UnitFormat instance()>();

        $r2 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>(r1);

        return $r2;
    }

    public static boolean isCompatible(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r4, $r13, $r21;
        ucar.units.UnitFormat $r0, $r3;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r8, $r16;
        ucar.units.Unit $r2, $r5;
        java.lang.Exception $r6, $r14;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r15, $r17, $r18, $r19, $r20;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

     label1:
        $r0 = staticinvoke <ucar.units.UnitFormatManager: ucar.units.UnitFormat instance()>();

        $r2 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>(r1);

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        $z2 = <ucar.nc2.units.SimpleUnit: boolean debugParse>;

        if $z2 == 0 goto label4;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got Exception1 ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label4:
        return 0;

     label5:
        $r3 = staticinvoke <ucar.units.UnitFormatManager: ucar.units.UnitFormat instance()>();

        $r5 = interfaceinvoke $r3.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>(r4);

     label6:
        goto label9;

     label7:
        $r6 := @caughtexception;

        $z1 = <ucar.nc2.units.SimpleUnit: boolean debugParse>;

        if $z1 == 0 goto label8;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got Exception2 ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label8:
        return 0;

     label9:
        $z0 = interfaceinvoke $r2.<ucar.units.Unit: boolean isCompatible(ucar.units.Unit)>($r5);

        return $z0;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static boolean isCompatibleWithExceptions(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        ucar.units.Unit $r2, $r4;
        java.lang.String r1, r3;
        ucar.units.UnitFormat $r0;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = staticinvoke <ucar.units.UnitFormatManager: ucar.units.UnitFormat instance()>();

        $r2 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>(r1);

        $r4 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>(r3);

        $z0 = interfaceinvoke $r2.<ucar.units.Unit: boolean isCompatible(ucar.units.Unit)>($r4);

        return $z0;
    }

    public static boolean isDateUnit(ucar.units.Unit)
    {
        ucar.units.ConversionException $r3;
        ucar.units.Unit r0, $r1, $r2;
        boolean $z0;

        r0 := @parameter0: ucar.units.Unit;

        $r1 = <ucar.nc2.units.SimpleUnit: ucar.units.Unit dateReferenceUnit>;

        $z0 = interfaceinvoke r0.<ucar.units.Unit: boolean isCompatible(ucar.units.Unit)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = <ucar.nc2.units.SimpleUnit: ucar.units.Unit dateReferenceUnit>;

        interfaceinvoke r0.<ucar.units.Unit: ucar.units.Converter getConverterTo(ucar.units.Unit)>($r2);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch ucar.units.ConversionException from label1 to label2 with label3;
    }

    public static boolean isTimeUnit(ucar.units.Unit)
    {
        ucar.units.Unit r0, $r1;
        boolean $z0;

        r0 := @parameter0: ucar.units.Unit;

        $r1 = <ucar.nc2.units.SimpleUnit: ucar.units.Unit secsUnit>;

        $z0 = interfaceinvoke r0.<ucar.units.Unit: boolean isCompatible(ucar.units.Unit)>($r1);

        return $z0;
    }

    public static boolean isDateUnit(java.lang.String)
    {
        ucar.nc2.units.SimpleUnit $r1;
        ucar.units.Unit $r2;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factory(java.lang.String)>(r0);

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<ucar.nc2.units.SimpleUnit: ucar.units.Unit getUnit()>();

        $z0 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isDateUnit(ucar.units.Unit)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean isTimeUnit(java.lang.String)
    {
        ucar.nc2.units.SimpleUnit $r1;
        ucar.units.Unit $r2;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factory(java.lang.String)>(r0);

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<ucar.nc2.units.SimpleUnit: ucar.units.Unit getUnit()>();

        $z0 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isTimeUnit(ucar.units.Unit)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static double getConversionFactor(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException
    {
        ucar.nc2.units.SimpleUnit $r1, $r3;
        java.lang.String r0, r2;
        double $d0;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factory(java.lang.String)>(r0);

        $r3 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factory(java.lang.String)>(r2);

        $d0 = virtualinvoke $r1.<ucar.nc2.units.SimpleUnit: double convertTo(double,ucar.nc2.units.SimpleUnit)>(1.0, $r3);

        return $d0;
    }

    protected void <init>()
    {
        ucar.nc2.units.SimpleUnit r0;

        r0 := @this: ucar.nc2.units.SimpleUnit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu> = null;

        return;
    }

    void <init>(ucar.units.Unit)
    {
        ucar.units.Unit r1;
        ucar.nc2.units.SimpleUnit r0;

        r0 := @this: ucar.nc2.units.SimpleUnit;

        r1 := @parameter0: ucar.units.Unit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu> = null;

        r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu> = r1;

        return;
    }

    public java.lang.String toString()
    {
        ucar.units.Unit $r1;
        java.lang.String $r2;
        ucar.nc2.units.SimpleUnit r0;

        r0 := @this: ucar.nc2.units.SimpleUnit;

        $r1 = r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public ucar.units.Unit getUnit()
    {
        ucar.units.Unit $r1;
        ucar.nc2.units.SimpleUnit r0;

        r0 := @this: ucar.nc2.units.SimpleUnit;

        $r1 = r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu>;

        return $r1;
    }

    public double convertTo(double, ucar.nc2.units.SimpleUnit) throws java.lang.IllegalArgumentException
    {
        ucar.units.Unit $r2, $r3;
        java.lang.IllegalArgumentException $r5;
        ucar.nc2.units.SimpleUnit r0, r1;
        ucar.units.ConversionException $r4;
        java.lang.String $r6;
        double d0, $d1;

        r0 := @this: ucar.nc2.units.SimpleUnit;

        d0 := @parameter0: double;

        r1 := @parameter1: ucar.nc2.units.SimpleUnit;

     label1:
        $r2 = r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu>;

        $r3 = virtualinvoke r1.<ucar.nc2.units.SimpleUnit: ucar.units.Unit getUnit()>();

        $d1 = interfaceinvoke $r2.<ucar.units.Unit: double convertTo(double,ucar.units.Unit)>(d0, $r3);

     label2:
        return $d1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r4.<ucar.units.ConversionException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch ucar.units.ConversionException from label1 to label2 with label3;
    }

    public boolean isCompatible(java.lang.String)
    {
        java.io.PrintStream $r7;
        ucar.units.Unit $r2, $r4;
        java.lang.Exception $r5;
        ucar.nc2.units.SimpleUnit r3;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11;
        java.lang.String r1, $r12;
        ucar.units.UnitFormat $r0;
        boolean $z0, $z1;

        r3 := @this: ucar.nc2.units.SimpleUnit;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <ucar.units.UnitFormatManager: ucar.units.UnitFormat instance()>();

        $r2 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>(r1);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        $z1 = <ucar.nc2.units.SimpleUnit: boolean debugParse>;

        if $z1 == 0 goto label4;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got Exception1 ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label4:
        return 0;

     label5:
        $r4 = r3.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu>;

        $z0 = interfaceinvoke $r4.<ucar.units.Unit: boolean isCompatible(ucar.units.Unit)>($r2);

        return $z0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean isUnknownUnit()
    {
        ucar.units.DerivedUnit $r4, $r5;
        ucar.units.Unit $r1, $r3;
        ucar.nc2.units.SimpleUnit r0;
        ucar.units.ScaledUnit r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: ucar.nc2.units.SimpleUnit;

        $r1 = virtualinvoke r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit getUnit()>();

        $z0 = $r1 instanceof ucar.units.UnknownUnit;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = $r1 instanceof ucar.units.DerivedUnit;

        if $z1 == 0 goto label2;

        $r5 = (ucar.units.DerivedUnit) $r1;

        $z6 = specialinvoke r0.<ucar.nc2.units.SimpleUnit: boolean isUnknownUnit(ucar.units.DerivedUnit)>($r5);

        return $z6;

     label2:
        $z2 = $r1 instanceof ucar.units.ScaledUnit;

        if $z2 == 0 goto label4;

        r2 = (ucar.units.ScaledUnit) $r1;

        $r3 = virtualinvoke r2.<ucar.units.ScaledUnit: ucar.units.Unit getUnit()>();

        $z3 = $r3 instanceof ucar.units.UnknownUnit;

        if $z3 == 0 goto label3;

        return 1;

     label3:
        $z4 = $r3 instanceof ucar.units.DerivedUnit;

        if $z4 == 0 goto label4;

        $r4 = (ucar.units.DerivedUnit) $r3;

        $z5 = specialinvoke r0.<ucar.nc2.units.SimpleUnit: boolean isUnknownUnit(ucar.units.DerivedUnit)>($r4);

        return $z5;

     label4:
        return 0;
    }

    private boolean isUnknownUnit(ucar.units.DerivedUnit)
    {
        ucar.units.DerivedUnit r0;
        ucar.units.UnitDimension $r1;
        ucar.units.Factor r3;
        ucar.units.Base $r4;
        ucar.nc2.units.SimpleUnit r5;
        int i0, i1;
        ucar.units.Factor[] $r2;
        boolean $z0;

        r5 := @this: ucar.nc2.units.SimpleUnit;

        r0 := @parameter0: ucar.units.DerivedUnit;

        $r1 = interfaceinvoke r0.<ucar.units.DerivedUnit: ucar.units.UnitDimension getDimension()>();

        $r2 = virtualinvoke $r1.<ucar.units.UnitDimension: ucar.units.Factor[] getFactors()>();

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = $r2[i1];

        $r4 = virtualinvoke r3.<ucar.units.Factor: ucar.units.Base getBase()>();

        $z0 = $r4 instanceof ucar.units.UnknownUnit;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public double getValue()
    {
        ucar.nc2.units.SimpleUnit r0;
        ucar.units.Unit $r1, $r2;
        ucar.units.ScaledUnit r3;
        boolean $z0;
        double $d0;

        r0 := @this: ucar.nc2.units.SimpleUnit;

        $r1 = r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu>;

        $z0 = $r1 instanceof ucar.units.ScaledUnit;

        if $z0 != 0 goto label1;

        return #NaN;

     label1:
        $r2 = r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu>;

        r3 = (ucar.units.ScaledUnit) $r2;

        $d0 = virtualinvoke r3.<ucar.units.ScaledUnit: double getScale()>();

        return $d0;
    }

    public java.lang.String getUnitString()
    {
        ucar.units.DerivedUnit $r2;
        ucar.nc2.units.SimpleUnit r0;
        ucar.units.Unit $r1;
        java.lang.String $r3;

        r0 := @this: ucar.nc2.units.SimpleUnit;

        $r1 = r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu>;

        $r2 = interfaceinvoke $r1.<ucar.units.Unit: ucar.units.DerivedUnit getDerivedUnit()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getCanonicalString()
    {
        ucar.units.Unit $r1;
        java.lang.String $r2;
        ucar.nc2.units.SimpleUnit r0;

        r0 := @this: ucar.nc2.units.SimpleUnit;

        $r1 = r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu>;

        $r2 = interfaceinvoke $r1.<ucar.units.Unit: java.lang.String getCanonicalString()>();

        return $r2;
    }

    public java.lang.String getImplementingClass()
    {
        ucar.nc2.units.SimpleUnit r0;
        ucar.units.Unit $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: ucar.nc2.units.SimpleUnit;

        $r1 = r0.<ucar.nc2.units.SimpleUnit: ucar.units.Unit uu>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.String $r15, $r20;
        ucar.units.UnitFormat $r0;
        java.io.PrintStream $r12;
        ucar.units.UnitName $r5;
        ucar.units.Unit $r1, $r2, $r4, $r6;
        java.lang.RuntimeException $r16;
        java.lang.Exception $r10;
        ucar.units.UnitDB $r3;
        ucar.nc2.units.SimpleUnit $r7, $r8, $r9;
        java.lang.StringBuilder $r11, $r13, $r14, $r17, $r18, $r19;

        <ucar.nc2.units.SimpleUnit: boolean debugParse> = 0;

     label1:
        $r0 = staticinvoke <ucar.units.UnitFormatManager: ucar.units.UnitFormat instance()>();

        $r1 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("sec");

        <ucar.nc2.units.SimpleUnit: ucar.units.Unit secsUnit> = $r1;

        $r2 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("ms since 1970-01-01");

        <ucar.nc2.units.SimpleUnit: ucar.units.Unit dateReferenceUnit> = $r2;

        $r3 = staticinvoke <ucar.units.UnitDBManager: ucar.units.UnitDB instance()>();

        $r4 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("millibar");

        $r5 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String)>("mb");

        $r6 = interfaceinvoke $r4.<ucar.units.Unit: ucar.units.Unit clone(ucar.units.UnitName)>($r5);

        interfaceinvoke $r3.<ucar.units.UnitDB: void addUnit(ucar.units.Unit)>($r6);

        $r7 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factoryWithExceptions(java.lang.String)>("km");

        <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit kmUnit> = $r7;

        $r8 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factoryWithExceptions(java.lang.String)>("m");

        <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit meterUnit> = $r8;

        $r9 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factoryWithExceptions(java.lang.String)>("Pa");

        <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit pressureUnit> = $r9;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SimpleUnit initialization failed ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r16 = new java.lang.RuntimeException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SimpleUnit initialization failed ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
