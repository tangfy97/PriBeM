public final class org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream extends org.apache.xmlbeans.impl.common.GenericXmlInputStream implements org.apache.xmlbeans.impl.common.ValidatorListener$Event
{
    private org.apache.xmlbeans.XMLStreamValidationException _exception;
    private org.apache.xmlbeans.xml.stream.XMLInputStream _source;
    private org.apache.xmlbeans.impl.validator.Validator _validator;
    private java.lang.StringBuffer _text;
    private boolean _finished;
    private java.lang.String _xsiType;
    private java.lang.String _xsiNil;
    private java.lang.String _xsiLoc;
    private java.lang.String _xsiNoLoc;
    private org.apache.xmlbeans.xml.stream.XMLName _name;
    private org.apache.xmlbeans.xml.stream.StartElement _startElement;
    static java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatingXMLInputStream;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.xmlbeans.xml.stream.XMLInputStream, org.apache.xmlbeans.SchemaTypeLoader, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.xml.stream.XMLStreamException
    {
        org.apache.xmlbeans.xml.stream.XMLInputStream $r5, r11;
        org.apache.xmlbeans.xml.stream.XMLName $r7;
        java.lang.StringBuffer $r1;
        org.apache.xmlbeans.impl.validator.Validator $r14;
        org.apache.xmlbeans.SchemaType $r9, r10, r13;
        boolean $z0;
        org.apache.xmlbeans.SchemaTypeLoader r4;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;
        org.apache.xmlbeans.XmlOptions $r2, r12;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream$ExceptionXmlErrorListener $r15;
        java.lang.Object $r3;
        org.apache.xmlbeans.xml.stream.XMLEvent $r6;
        javax.xml.namespace.QName $r8;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        r11 := @parameter0: org.apache.xmlbeans.xml.stream.XMLInputStream;

        r4 := @parameter1: org.apache.xmlbeans.SchemaTypeLoader;

        r10 := @parameter2: org.apache.xmlbeans.SchemaType;

        r12 := @parameter3: org.apache.xmlbeans.XmlOptions;

        specialinvoke r0.<org.apache.xmlbeans.impl.common.GenericXmlInputStream: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.StringBuffer _text> = $r1;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.xml.stream.XMLInputStream _source> = r11;

        $r2 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r12);

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("DOCUMENT_TYPE");

        r13 = (org.apache.xmlbeans.SchemaType) $r3;

        if r13 != null goto label1;

        r13 = r10;

     label1:
        if r13 != null goto label3;

        r13 = <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.impl.schema.SchemaTypeImpl ST_ANY_TYPE>;

        $r5 = interfaceinvoke r11.<org.apache.xmlbeans.xml.stream.XMLInputStream: org.apache.xmlbeans.xml.stream.XMLInputStream getSubStream()>();

        $z0 = interfaceinvoke $r5.<org.apache.xmlbeans.xml.stream.XMLInputStream: boolean skip(int)>(2);

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.xml.stream.XMLInputStream: org.apache.xmlbeans.xml.stream.XMLEvent next()>();

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.xml.stream.XMLEvent: org.apache.xmlbeans.xml.stream.XMLName getName()>();

        $r8 = staticinvoke <org.apache.xmlbeans.impl.common.XMLNameHelper: javax.xml.namespace.QName getQName(org.apache.xmlbeans.xml.stream.XMLName)>($r7);

        $r9 = interfaceinvoke r4.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findDocumentType(javax.xml.namespace.QName)>($r8);

        if $r9 == null goto label2;

        r13 = $r9;

     label2:
        interfaceinvoke $r5.<org.apache.xmlbeans.xml.stream.XMLInputStream: void close()>();

     label3:
        $r14 = new org.apache.xmlbeans.impl.validator.Validator;

        $r15 = new org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream$ExceptionXmlErrorListener;

        specialinvoke $r15.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream$ExceptionXmlErrorListener: void <init>(org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream,org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream$1)>(r0, null);

        specialinvoke $r14.<org.apache.xmlbeans.impl.validator.Validator: void <init>(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaField,org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions,java.util.Collection)>(r13, null, r4, $r2, $r15);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.impl.validator.Validator _validator> = $r14;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void nextEvent(int)>(1);

        return;
    }

    protected org.apache.xmlbeans.xml.stream.XMLEvent nextEvent() throws org.apache.xmlbeans.xml.stream.XMLStreamException
    {
        org.apache.xmlbeans.xml.stream.XMLInputStream $r1;
        org.apache.xmlbeans.xml.stream.Attribute $r8, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.xmlbeans.xml.stream.AttributeIterator $r5, $r7;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;
        org.apache.xmlbeans.xml.stream.StartElement r26;
        org.apache.xmlbeans.xml.stream.XMLEvent $r2;
        org.apache.xmlbeans.xml.stream.XMLName $r6, $r9, $r14, $r17;
        java.lang.StringBuffer $r3, $r12;
        int $i0;
        org.apache.xmlbeans.xml.stream.CharacterData r25;
        java.lang.String $r4, $r10, $r11, $r13, $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r24;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.xml.stream.XMLInputStream _source>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.xml.stream.XMLInputStream: org.apache.xmlbeans.xml.stream.XMLEvent next()>();

        if $r2 != null goto label01;

        $z12 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: boolean _finished>;

        if $z12 != 0 goto label17;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void flushText()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void nextEvent(int)>(2);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: boolean _finished> = 1;

        goto label17;

     label01:
        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.xml.stream.XMLEvent: int getType()>();

        lookupswitch($i0)
        {
            case 2: goto label03;
            case 4: goto label16;
            case 16: goto label02;
            case 64: goto label02;
            default: goto label17;
        };

     label02:
        r25 = (org.apache.xmlbeans.xml.stream.CharacterData) $r2;

        $z0 = interfaceinvoke r25.<org.apache.xmlbeans.xml.stream.CharacterData: boolean hasContent()>();

        if $z0 == 0 goto label17;

        $r3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.StringBuffer _text>;

        $r4 = interfaceinvoke r25.<org.apache.xmlbeans.xml.stream.CharacterData: java.lang.String getContent()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label17;

     label03:
        r26 = (org.apache.xmlbeans.xml.stream.StartElement) $r2;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void flushText()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.xml.stream.StartElement _startElement> = r26;

        $r5 = interfaceinvoke r26.<org.apache.xmlbeans.xml.stream.StartElement: org.apache.xmlbeans.xml.stream.AttributeIterator getAttributes()>();

     label04:
        $z1 = interfaceinvoke $r5.<org.apache.xmlbeans.xml.stream.AttributeIterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r16 = interfaceinvoke $r5.<org.apache.xmlbeans.xml.stream.AttributeIterator: org.apache.xmlbeans.xml.stream.Attribute next()>();

        $r17 = interfaceinvoke $r16.<org.apache.xmlbeans.xml.stream.Attribute: org.apache.xmlbeans.xml.stream.XMLName getName()>();

        $r18 = "http://www.w3.org/2001/XMLSchema-instance";

        $r19 = interfaceinvoke $r17.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getNamespaceUri()>();

        $z7 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z7 == 0 goto label08;

        $r20 = interfaceinvoke $r17.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getLocalName()>();

        $z8 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("type");

        if $z8 == 0 goto label05;

        $r24 = interfaceinvoke $r16.<org.apache.xmlbeans.xml.stream.Attribute: java.lang.String getValue()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.String _xsiType> = $r24;

        goto label08;

     label05:
        $z9 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("nil");

        if $z9 == 0 goto label06;

        $r23 = interfaceinvoke $r16.<org.apache.xmlbeans.xml.stream.Attribute: java.lang.String getValue()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.String _xsiNil> = $r23;

        goto label08;

     label06:
        $z10 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("schemaLocation");

        if $z10 == 0 goto label07;

        $r22 = interfaceinvoke $r16.<org.apache.xmlbeans.xml.stream.Attribute: java.lang.String getValue()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.String _xsiLoc> = $r22;

        goto label08;

     label07:
        $z11 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("noNamespaceSchemaLocation");

        if $z11 == 0 goto label08;

        $r21 = interfaceinvoke $r16.<org.apache.xmlbeans.xml.stream.Attribute: java.lang.String getValue()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.String _xsiNoLoc> = $r21;

     label08:
        goto label04;

     label09:
        $r6 = interfaceinvoke $r2.<org.apache.xmlbeans.xml.stream.XMLEvent: org.apache.xmlbeans.xml.stream.XMLName getName()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.xml.stream.XMLName _name> = $r6;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void nextEvent(int)>(1);

        $r7 = interfaceinvoke r26.<org.apache.xmlbeans.xml.stream.StartElement: org.apache.xmlbeans.xml.stream.AttributeIterator getAttributes()>();

     label10:
        $z13 = interfaceinvoke $r7.<org.apache.xmlbeans.xml.stream.AttributeIterator: boolean hasNext()>();

        if $z13 == 0 goto label15;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.xml.stream.AttributeIterator: org.apache.xmlbeans.xml.stream.Attribute next()>();

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.xml.stream.Attribute: org.apache.xmlbeans.xml.stream.XMLName getName()>();

        $r10 = "http://www.w3.org/2001/XMLSchema-instance";

        $r11 = interfaceinvoke $r9.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getNamespaceUri()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label14;

        $r15 = interfaceinvoke $r9.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("type");

        if $z3 == 0 goto label11;

        goto label10;

     label11:
        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("nil");

        if $z4 == 0 goto label12;

        goto label10;

     label12:
        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("schemaLocation");

        if $z5 == 0 goto label13;

        goto label10;

     label13:
        $z6 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("noNamespaceSchemaLocation");

        if $z6 == 0 goto label14;

        goto label10;

     label14:
        $r12 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.StringBuffer _text>;

        $r13 = interfaceinvoke $r8.<org.apache.xmlbeans.xml.stream.Attribute: java.lang.String getValue()>();

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r14 = interfaceinvoke $r8.<org.apache.xmlbeans.xml.stream.Attribute: org.apache.xmlbeans.xml.stream.XMLName getName()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.xml.stream.XMLName _name> = $r14;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void nextEvent(int)>(4);

        goto label10;

     label15:
        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void clearText()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.xml.stream.StartElement _startElement> = null;

        goto label17;

     label16:
        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void flushText()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void nextEvent(int)>(2);

     label17:
        return $r2;
    }

    private void clearText()
    {
        java.lang.StringBuffer $r1, $r2;
        int $i0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.StringBuffer _text>;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.StringBuffer _text>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i0);

        return;
    }

    private void flushText() throws org.apache.xmlbeans.xml.stream.XMLStreamException
    {
        int $i0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.StringBuffer _text>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label1;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void nextEvent(int)>(3);

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: void clearText()>();

     label1:
        return;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String)
    {
        java.util.Map $r3;
        java.lang.Object $r5;
        java.lang.String r4, $r6;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;
        org.apache.xmlbeans.xml.stream.StartElement $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.xml.stream.StartElement _startElement>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.xml.stream.StartElement _startElement>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.xml.stream.StartElement: java.util.Map getNamespaceMap()>();

        if $r3 != null goto label2;

        return null;

     label2:
        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    public org.apache.xmlbeans.XmlCursor getLocationAsCursor()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        return null;
    }

    public javax.xml.stream.Location getLocation()
    {
        org.apache.xmlbeans.xml.stream.XMLStreamException $r5;
        org.apache.xmlbeans.xml.stream.XMLInputStream $r1;
        org.apache.xmlbeans.xml.stream.Location $r3;
        org.apache.xmlbeans.xml.stream.XMLEvent $r2;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream$1 $r4;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.xml.stream.XMLInputStream _source>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.xml.stream.XMLInputStream: org.apache.xmlbeans.xml.stream.XMLEvent peek()>();

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.xml.stream.XMLEvent: org.apache.xmlbeans.xml.stream.Location getLocation()>();

        if $r3 != null goto label3;

     label2:
        return null;

     label3:
        $r4 = new org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream$1;

        specialinvoke $r4.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream$1: void <init>(org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream,org.apache.xmlbeans.xml.stream.Location)>(r0, $r3);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        return null;

        catch org.apache.xmlbeans.xml.stream.XMLStreamException from label1 to label2 with label5;
        catch org.apache.xmlbeans.xml.stream.XMLStreamException from label3 to label4 with label5;
    }

    public java.lang.String getXsiType()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.String _xsiType>;

        return $r1;
    }

    public java.lang.String getXsiNil()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.String _xsiNil>;

        return $r1;
    }

    public java.lang.String getXsiLoc()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.String _xsiLoc>;

        return $r1;
    }

    public java.lang.String getXsiNoLoc()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.String _xsiNoLoc>;

        return $r1;
    }

    public javax.xml.namespace.QName getName()
    {
        javax.xml.namespace.QName $r2;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;
        org.apache.xmlbeans.xml.stream.XMLName $r1;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.xml.stream.XMLName _name>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.common.XMLNameHelper: javax.xml.namespace.QName getQName(org.apache.xmlbeans.xml.stream.XMLName)>($r1);

        return $r2;
    }

    public java.lang.String getText()
    {
        java.lang.String $r2;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.StringBuffer _text>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getText(int)
    {
        java.lang.StringBuffer $r1;
        int i0;
        java.lang.String $r2, $r3;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.StringBuffer _text>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: java.lang.String collapse(java.lang.String,int)>($r2, i0);

        return $r3;
    }

    public boolean textIsWhitespace()
    {
        java.lang.StringBuffer $r1, $r2;
        int $i0, i2, $i3;
        char $c1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        i2 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.StringBuffer _text>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if i2 >= $i0 goto label5;

        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.StringBuffer _text>;

        $c1 = virtualinvoke $r2.<java.lang.StringBuffer: char charAt(int)>(i2);

        $i3 = (int) $c1;

        lookupswitch($i3)
        {
            case 9: goto label2;
            case 10: goto label2;
            case 13: goto label2;
            case 32: goto label2;
            default: goto label3;
        };

     label2:
        goto label4;

     label3:
        return 0;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return 1;
    }

    private void nextEvent(int) throws org.apache.xmlbeans.xml.stream.XMLStreamException
    {
        java.lang.AssertionError $r5;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;
        org.apache.xmlbeans.impl.validator.Validator $r1;
        int i0;
        org.apache.xmlbeans.XMLStreamValidationException $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.XMLStreamValidationException _exception>;

        if $r4 == null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.impl.validator.Validator _validator>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(i0, r0);

        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.XMLStreamValidationException _exception>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.XMLStreamValidationException _exception>;

        throw $r3;

     label2:
        return;
    }

    static org.apache.xmlbeans.XMLStreamValidationException access$100(org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream)
    {
        org.apache.xmlbeans.XMLStreamValidationException $r1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.XMLStreamValidationException _exception>;

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static org.apache.xmlbeans.XMLStreamValidationException access$102(org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream, org.apache.xmlbeans.XMLStreamValidationException)
    {
        org.apache.xmlbeans.XMLStreamValidationException r1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream;

        r1 := @parameter1: org.apache.xmlbeans.XMLStreamValidationException;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: org.apache.xmlbeans.XMLStreamValidationException _exception> = r1;

        return r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatingXMLInputStream>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream");

        <org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatingXMLInputStream> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatingXMLInputStream>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.validator.ValidatingXMLInputStream: boolean $assertionsDisabled> = $z1;

        return;
    }
}
