class org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1 extends java.lang.Object implements org.waveprotocol.wave.model.adt.docbased.Initializer
{
    final org.waveprotocol.wave.model.supplement.WantedEvaluation val$wantedEvaluation;
    final org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory this$0;

    void <init>(org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory, org.waveprotocol.wave.model.supplement.WantedEvaluation)
    {
        org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory r1;
        org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1 r0;
        org.waveprotocol.wave.model.supplement.WantedEvaluation r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory;

        r2 := @parameter1: org.waveprotocol.wave.model.supplement.WantedEvaluation;

        r0.<org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1: org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory this$0> = r1;

        r0.<org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1: org.waveprotocol.wave.model.supplement.WantedEvaluation val$wantedEvaluation> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void initialize(java.util.Map)
    {
        java.lang.Long $r16;
        java.util.Map r0;
        boolean $z0, $z1;
        org.waveprotocol.wave.model.supplement.WantedEvaluation $r2, $r6, $r10, $r14, $r18, $r20, $r22, $r24;
        java.lang.Double $r12;
        org.waveprotocol.wave.model.id.WaveletId $r4;
        long $l0;
        java.lang.Boolean $r8, $r26;
        java.lang.String $r5, $r9, $r13, $r17, $r19, $r21, $r23, $r27;
        double $d0;
        org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1 r1;
        org.waveprotocol.wave.model.util.Serializer $r3, $r7, $r11, $r15, $r25;

        r1 := @this: org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1;

        r0 := @parameter0: java.util.Map;

        $r3 = <org.waveprotocol.wave.model.id.WaveletIdSerializer: org.waveprotocol.wave.model.util.Serializer INSTANCE>;

        $r2 = r1.<org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1: org.waveprotocol.wave.model.supplement.WantedEvaluation val$wantedEvaluation>;

        $r4 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.WantedEvaluation: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $r5 = interfaceinvoke $r3.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>($r4);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("wavelet_id", $r5);

        $r7 = <org.waveprotocol.wave.model.util.Serializer: org.waveprotocol.wave.model.util.Serializer BOOLEAN>;

        $r6 = r1.<org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1: org.waveprotocol.wave.model.supplement.WantedEvaluation val$wantedEvaluation>;

        $z0 = interfaceinvoke $r6.<org.waveprotocol.wave.model.supplement.WantedEvaluation: boolean isWanted()>();

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r9 = interfaceinvoke $r7.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>($r8);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("wanted", $r9);

        $r11 = <org.waveprotocol.wave.model.util.Serializer: org.waveprotocol.wave.model.util.Serializer DOUBLE>;

        $r10 = r1.<org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1: org.waveprotocol.wave.model.supplement.WantedEvaluation val$wantedEvaluation>;

        $d0 = interfaceinvoke $r10.<org.waveprotocol.wave.model.supplement.WantedEvaluation: double getCertainty()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r13 = interfaceinvoke $r11.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>($r12);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("certainty", $r13);

        $r15 = <org.waveprotocol.wave.model.util.Serializer: org.waveprotocol.wave.model.util.Serializer LONG>;

        $r14 = r1.<org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1: org.waveprotocol.wave.model.supplement.WantedEvaluation val$wantedEvaluation>;

        $l0 = interfaceinvoke $r14.<org.waveprotocol.wave.model.supplement.WantedEvaluation: long getTimestamp()>();

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r17 = interfaceinvoke $r15.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>($r16);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timestamp", $r17);

        $r18 = r1.<org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1: org.waveprotocol.wave.model.supplement.WantedEvaluation val$wantedEvaluation>;

        $r19 = interfaceinvoke $r18.<org.waveprotocol.wave.model.supplement.WantedEvaluation: java.lang.String getAdderAddress()>();

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("adder", $r19);

        $r20 = r1.<org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1: org.waveprotocol.wave.model.supplement.WantedEvaluation val$wantedEvaluation>;

        $r21 = interfaceinvoke $r20.<org.waveprotocol.wave.model.supplement.WantedEvaluation: java.lang.String getAgentIdentity()>();

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("agent", $r21);

        $r22 = r1.<org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1: org.waveprotocol.wave.model.supplement.WantedEvaluation val$wantedEvaluation>;

        $r23 = interfaceinvoke $r22.<org.waveprotocol.wave.model.supplement.WantedEvaluation: java.lang.String getComment()>();

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("comment", $r23);

        $r25 = <org.waveprotocol.wave.model.util.Serializer: org.waveprotocol.wave.model.util.Serializer BOOLEAN>;

        $r24 = r1.<org.waveprotocol.wave.model.supplement.DocumentBasedAbuseStore$ElementFactory$1: org.waveprotocol.wave.model.supplement.WantedEvaluation val$wantedEvaluation>;

        $z1 = interfaceinvoke $r24.<org.waveprotocol.wave.model.supplement.WantedEvaluation: boolean isIgnored()>();

        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r27 = interfaceinvoke $r25.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>($r26);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ignored", $r27);

        return;
    }
}
