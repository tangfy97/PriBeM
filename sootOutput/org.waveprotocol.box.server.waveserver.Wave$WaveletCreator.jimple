class org.waveprotocol.box.server.waveserver.Wave$WaveletCreator extends java.lang.Object implements com.google.common.base.Function
{
    private final org.waveprotocol.box.server.waveserver.WaveletContainer$Factory factory;
    private final java.lang.String waveDomain;
    final org.waveprotocol.box.server.waveserver.Wave this$0;

    public void <init>(org.waveprotocol.box.server.waveserver.Wave, org.waveprotocol.box.server.waveserver.WaveletContainer$Factory, java.lang.String)
    {
        org.waveprotocol.box.server.waveserver.Wave$WaveletCreator r0;
        org.waveprotocol.box.server.waveserver.WaveletContainer$Factory r2;
        org.waveprotocol.box.server.waveserver.Wave r1;
        java.lang.String r3;

        r0 := @this: org.waveprotocol.box.server.waveserver.Wave$WaveletCreator;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.Wave;

        r2 := @parameter1: org.waveprotocol.box.server.waveserver.WaveletContainer$Factory;

        r3 := @parameter2: java.lang.String;

        r0.<org.waveprotocol.box.server.waveserver.Wave$WaveletCreator: org.waveprotocol.box.server.waveserver.Wave this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.waveserver.Wave$WaveletCreator: org.waveprotocol.box.server.waveserver.WaveletContainer$Factory factory> = r2;

        r0.<org.waveprotocol.box.server.waveserver.Wave$WaveletCreator: java.lang.String waveDomain> = r3;

        return;
    }

    public org.waveprotocol.box.server.waveserver.WaveletContainer apply(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.id.WaveletName $r7;
        org.waveprotocol.box.server.waveserver.WaveletContainer $r9;
        org.waveprotocol.wave.model.id.WaveId $r5;
        org.waveprotocol.box.server.waveserver.Wave$WaveletCreator r0;
        org.waveprotocol.wave.model.id.WaveletId r6;
        org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber $r3;
        org.waveprotocol.box.server.waveserver.WaveletContainer$Factory $r2;
        org.waveprotocol.box.server.waveserver.Wave $r1, $r4;
        java.lang.String $r8;

        r0 := @this: org.waveprotocol.box.server.waveserver.Wave$WaveletCreator;

        r6 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.box.server.waveserver.Wave$WaveletCreator: org.waveprotocol.box.server.waveserver.WaveletContainer$Factory factory>;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.Wave$WaveletCreator: org.waveprotocol.box.server.waveserver.Wave this$0>;

        $r3 = staticinvoke <org.waveprotocol.box.server.waveserver.Wave: org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber access$000(org.waveprotocol.box.server.waveserver.Wave)>($r1);

        $r4 = r0.<org.waveprotocol.box.server.waveserver.Wave$WaveletCreator: org.waveprotocol.box.server.waveserver.Wave this$0>;

        $r5 = staticinvoke <org.waveprotocol.box.server.waveserver.Wave: org.waveprotocol.wave.model.id.WaveId access$100(org.waveprotocol.box.server.waveserver.Wave)>($r4);

        $r7 = staticinvoke <org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletName of(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>($r5, r6);

        $r8 = r0.<org.waveprotocol.box.server.waveserver.Wave$WaveletCreator: java.lang.String waveDomain>;

        $r9 = interfaceinvoke $r2.<org.waveprotocol.box.server.waveserver.WaveletContainer$Factory: org.waveprotocol.box.server.waveserver.WaveletContainer create(org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber,org.waveprotocol.wave.model.id.WaveletName,java.lang.String)>($r3, $r7, $r8);

        return $r9;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        org.waveprotocol.box.server.waveserver.WaveletContainer $r3;
        org.waveprotocol.box.server.waveserver.Wave$WaveletCreator r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.id.WaveletId $r2;

        r0 := @this: org.waveprotocol.box.server.waveserver.Wave$WaveletCreator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.id.WaveletId) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.Wave$WaveletCreator: org.waveprotocol.box.server.waveserver.WaveletContainer apply(org.waveprotocol.wave.model.id.WaveletId)>($r2);

        return $r3;
    }
}
