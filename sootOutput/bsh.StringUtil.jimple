public class bsh.StringUtil extends java.lang.Object
{

    public void <init>()
    {
        bsh.StringUtil r0;

        r0 := @this: bsh.StringUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String[] split(java.lang.String, java.lang.String)
    {
        java.lang.String[] r5;
        java.util.Vector $r0;
        java.util.StringTokenizer $r1;
        int $i0;
        java.lang.String r2, r3, $r4;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        goto label2;

     label1:
        $r4 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r4);

     label2:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke $r0.<java.util.Vector: int size()>();

        r5 = newarray (java.lang.String)[$i0];

        virtualinvoke $r0.<java.util.Vector: void copyInto(java.lang.Object[])>(r5);

        return r5;
    }

    public static java.lang.String[] bubbleSort(java.lang.String[])
    {
        java.lang.String[] r1, r9;
        java.util.Vector $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        java.lang.String $r2, $r4, $r6, r8;
        boolean z0;
        java.lang.Object $r3, $r5, $r7;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        i6 = 0;

        goto label2;

     label1:
        $r2 = r1[i6];

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        i6 = i6 + 1;

     label2:
        $i0 = lengthof r1;

        if i6 < $i0 goto label1;

        $i1 = virtualinvoke $r0.<java.util.Vector: int size()>();

        z0 = 1;

        goto label7;

     label3:
        z0 = 0;

        i7 = 0;

        goto label6;

     label4:
        $r3 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>(i7);

        $r4 = (java.lang.String) $r3;

        $i2 = i7 + 1;

        $r5 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i2);

        $r6 = (java.lang.String) $r5;

        $i3 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r6);

        if $i3 <= 0 goto label5;

        $i4 = i7 + 1;

        $r7 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i4);

        r8 = (java.lang.String) $r7;

        $i5 = i7 + 1;

        virtualinvoke $r0.<java.util.Vector: void removeElementAt(int)>($i5);

        virtualinvoke $r0.<java.util.Vector: void insertElementAt(java.lang.Object,int)>(r8, i7);

        z0 = 1;

     label5:
        i7 = i7 + 1;

     label6:
        $i8 = $i1 - 1;

        if i7 < $i8 goto label4;

     label7:
        if z0 != 0 goto label3;

        r9 = newarray (java.lang.String)[$i1];

        virtualinvoke $r0.<java.util.Vector: void copyInto(java.lang.Object[])>(r9);

        return r9;
    }

    public static java.lang.String maxCommonPrefix(java.lang.String, java.lang.String)
    {
        int $i0, i1;
        java.lang.String r0, r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i1 = 0;

        goto label2;

     label1:
        i1 = i1 + 1;

     label2:
        $z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, r1, 0, i1);

        if $z0 != 0 goto label1;

        $i0 = i1 - 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r2;
    }

    public static java.lang.String methodString(java.lang.String, java.lang.Class[])
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r8, $r9, $r10;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.String r2, $r5, $r11, $r12, $r13, $r14;
        java.lang.Class[] r6;
        java.lang.Class r7;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Class[];

        $r0 = new java.lang.StringBuffer;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $i0 = lengthof r6;

        if $i0 <= 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

     label1:
        i3 = 0;

        goto label7;

     label2:
        r7 = r6[i3];

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        if r7 != null goto label3;

        $r13 = "null";

        goto label4;

     label3:
        $r13 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();

     label4:
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $i1 = lengthof r6;

        $i2 = $i1 - 1;

        if i3 >= $i2 goto label5;

        $r14 = ", ";

        goto label6;

     label5:
        $r14 = " ";

     label6:
        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        i3 = i3 + 1;

     label7:
        $i4 = lengthof r6;

        if i3 < $i4 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r12 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    public static java.lang.String normalizeClassName(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <bsh.Reflect: java.lang.String normalizeClassName(java.lang.Class)>(r0);

        return $r1;
    }
}
