public class org.codehaus.groovy.runtime.WritableFile extends java.io.File implements groovy.lang.Writable
{
    private final java.lang.String encoding;

    public void <init>(java.io.File)
    {
        org.codehaus.groovy.runtime.WritableFile r0;
        java.io.File r1;

        r0 := @this: org.codehaus.groovy.runtime.WritableFile;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.codehaus.groovy.runtime.WritableFile: void <init>(java.io.File,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(java.io.File, java.lang.String)
    {
        org.codehaus.groovy.runtime.WritableFile r0;
        java.net.URI $r2;
        java.lang.String r3;
        java.io.File r1;

        r0 := @this: org.codehaus.groovy.runtime.WritableFile;

        r1 := @parameter0: java.io.File;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r1.<java.io.File: java.net.URI toURI()>();

        specialinvoke r0.<java.io.File: void <init>(java.net.URI)>($r2);

        r0.<org.codehaus.groovy.runtime.WritableFile: java.lang.String encoding> = r3;

        return;
    }

    public java.io.Writer writeTo(java.io.Writer) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        java.io.Writer r4;
        int i0, $i2;
        org.codehaus.groovy.runtime.WritableFile r0;
        java.lang.String $r1, $r2;
        java.io.BufferedReader r3, $r6;

        r0 := @this: org.codehaus.groovy.runtime.WritableFile;

        r4 := @parameter0: java.io.Writer;

        $r1 = r0.<org.codehaus.groovy.runtime.WritableFile: java.lang.String encoding>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.io.BufferedReader newReader(java.io.File)>(r0);

        goto label2;

     label1:
        $r2 = r0.<org.codehaus.groovy.runtime.WritableFile: java.lang.String encoding>;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.io.BufferedReader newReader(java.io.File,java.lang.String)>(r0, $r2);

     label2:
        r3 = $r6;

     label3:
        i0 = virtualinvoke $r6.<java.io.Reader: int read()>();

     label4:
        $i2 = (int) -1;

        if i0 == $i2 goto label5;

        virtualinvoke r4.<java.io.Writer: void write(int)>(i0);

        i0 = virtualinvoke r3.<java.io.Reader: int read()>();

        goto label4;

     label5:
        virtualinvoke r3.<java.io.Reader: void close()>();

        goto label8;

     label6:
        $r5 := @caughtexception;

     label7:
        virtualinvoke r3.<java.io.Reader: void close()>();

        throw $r5;

     label8:
        return r4;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
