class org.sat4j.minisat.core.Solver$8 extends org.sat4j.minisat.core.ConflictTimerAdapter
{
    private static final long serialVersionUID;
    private int nbconflict;
    private static final int MAX_CLAUSE;
    private static final int INC_CLAUSE;
    private int nextbound;
    final org.sat4j.minisat.core.Solver this$0;

    void <init>(org.sat4j.minisat.core.Solver, int)
    {
        int i0;
        org.sat4j.minisat.core.Solver r1;
        org.sat4j.minisat.core.Solver$8 r0;

        r0 := @this: org.sat4j.minisat.core.Solver$8;

        r1 := @parameter0: org.sat4j.minisat.core.Solver;

        i0 := @parameter1: int;

        r0.<org.sat4j.minisat.core.Solver$8: org.sat4j.minisat.core.Solver this$0> = r1;

        specialinvoke r0.<org.sat4j.minisat.core.ConflictTimerAdapter: void <init>(int)>(i0);

        r0.<org.sat4j.minisat.core.Solver$8: int nbconflict> = 0;

        r0.<org.sat4j.minisat.core.Solver$8: int nextbound> = 5000;

        return;
    }

    public void run()
    {
        org.sat4j.minisat.core.Solver$8 r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.sat4j.minisat.core.Solver $r1;

        r0 := @this: org.sat4j.minisat.core.Solver$8;

        $i0 = r0.<org.sat4j.minisat.core.Solver$8: int nbconflict>;

        $i1 = virtualinvoke r0.<org.sat4j.minisat.core.Solver$8: int bound()>();

        $i2 = $i0 + $i1;

        r0.<org.sat4j.minisat.core.Solver$8: int nbconflict> = $i2;

        $i4 = r0.<org.sat4j.minisat.core.Solver$8: int nbconflict>;

        $i3 = r0.<org.sat4j.minisat.core.Solver$8: int nextbound>;

        if $i4 < $i3 goto label1;

        $i5 = r0.<org.sat4j.minisat.core.Solver$8: int nextbound>;

        $i6 = $i5 + 1000;

        r0.<org.sat4j.minisat.core.Solver$8: int nextbound> = $i6;

        r0.<org.sat4j.minisat.core.Solver$8: int nbconflict> = 0;

        $r1 = r0.<org.sat4j.minisat.core.Solver$8: org.sat4j.minisat.core.Solver this$0>;

        staticinvoke <org.sat4j.minisat.core.Solver: boolean access$302(org.sat4j.minisat.core.Solver,boolean)>($r1, 1);

     label1:
        return;
    }

    public void reset()
    {
        int $i0, $i1;
        org.sat4j.minisat.core.Solver $r1;
        org.sat4j.minisat.core.Solver$8 r0;

        r0 := @this: org.sat4j.minisat.core.Solver$8;

        specialinvoke r0.<org.sat4j.minisat.core.ConflictTimerAdapter: void reset()>();

        r0.<org.sat4j.minisat.core.Solver$8: int nextbound> = 5000;

        $i1 = r0.<org.sat4j.minisat.core.Solver$8: int nbconflict>;

        $i0 = r0.<org.sat4j.minisat.core.Solver$8: int nextbound>;

        if $i1 < $i0 goto label1;

        r0.<org.sat4j.minisat.core.Solver$8: int nbconflict> = 0;

        $r1 = r0.<org.sat4j.minisat.core.Solver$8: org.sat4j.minisat.core.Solver this$0>;

        staticinvoke <org.sat4j.minisat.core.Solver: boolean access$302(org.sat4j.minisat.core.Solver,boolean)>($r1, 1);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.sat4j.minisat.core.Solver$8: int INC_CLAUSE> = 1000;

        <org.sat4j.minisat.core.Solver$8: int MAX_CLAUSE> = 5000;

        <org.sat4j.minisat.core.Solver$8: long serialVersionUID> = 1L;

        return;
    }
}
