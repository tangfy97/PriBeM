public class nu.xom.converters.DOMConverter extends java.lang.Object
{
    private static final java.lang.String XMLNS_NAMESPACE;

    private void <init>()
    {
        nu.xom.converters.DOMConverter r0;

        r0 := @this: nu.xom.converters.DOMConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static nu.xom.Document convert(org.w3c.dom.Document)
    {
        nu.xom.NodeFactory $r1;
        nu.xom.Document $r2;
        org.w3c.dom.Document r0;

        r0 := @parameter0: org.w3c.dom.Document;

        $r1 = new nu.xom.NodeFactory;

        specialinvoke $r1.<nu.xom.NodeFactory: void <init>()>();

        $r2 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Document convert(org.w3c.dom.Document,nu.xom.NodeFactory)>(r0, $r1);

        return $r2;
    }

    public static nu.xom.Document convert(org.w3c.dom.Document, nu.xom.NodeFactory)
    {
        nu.xom.Element $r5, $r13;
        short $s1;
        org.w3c.dom.Document r0;
        org.w3c.dom.Node r14, r15;
        int $i0, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10;
        nu.xom.Nodes $r7, $r8, $r10;
        java.lang.String $r3, $r4;
        boolean $z0, z1;
        nu.xom.Node $r9, $r11, $r12;
        org.w3c.dom.Element $r1;
        nu.xom.NodeFactory r2;
        nu.xom.Document $r6;

        r0 := @parameter0: org.w3c.dom.Document;

        r2 := @parameter1: nu.xom.NodeFactory;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r4 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r5 = virtualinvoke r2.<nu.xom.NodeFactory: nu.xom.Element makeRootElement(java.lang.String,java.lang.String)>($r3, $r4);

        $r6 = virtualinvoke r2.<nu.xom.NodeFactory: nu.xom.Document startMakingDocument()>();

        virtualinvoke $r6.<nu.xom.Document: void setRootElement(nu.xom.Element)>($r5);

        $r7 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Element,nu.xom.NodeFactory)>($r1, r2);

        z1 = 1;

        i6 = 0;

        i7 = 0;

     label01:
        $i0 = virtualinvoke $r7.<nu.xom.Nodes: int size()>();

        if i7 >= $i0 goto label05;

        $r12 = virtualinvoke $r7.<nu.xom.Nodes: nu.xom.Node get(int)>(i7);

        if z1 == 0 goto label03;

        $z0 = $r12 instanceof nu.xom.Element;

        if $z0 == 0 goto label02;

        $r13 = (nu.xom.Element) $r12;

        virtualinvoke $r6.<nu.xom.Document: void setRootElement(nu.xom.Element)>($r13);

        z1 = 0;

        goto label04;

     label02:
        $i5 = i6;

        i6 = i6 + 1;

        virtualinvoke $r6.<nu.xom.Document: void insertChild(nu.xom.Node,int)>($r12, $i5);

        goto label04;

     label03:
        virtualinvoke $r6.<nu.xom.Document: void appendChild(nu.xom.Node)>($r12);

     label04:
        i7 = i7 + 1;

        goto label01;

     label05:
        r14 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Node getFirstChild()>();

        i8 = 0;

     label06:
        $s1 = interfaceinvoke r14.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 == 1 goto label09;

        $r10 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Node,nu.xom.NodeFactory)>(r14, r2);

        i9 = 0;

     label07:
        $i3 = virtualinvoke $r10.<nu.xom.Nodes: int size()>();

        if i9 >= $i3 goto label08;

        $r11 = virtualinvoke $r10.<nu.xom.Nodes: nu.xom.Node get(int)>(i9);

        $i4 = i8;

        i8 = i8 + 1;

        virtualinvoke $r6.<nu.xom.Document: void insertChild(nu.xom.Node,int)>($r11, $i4);

        i9 = i9 + 1;

        goto label07;

     label08:
        r14 = interfaceinvoke r14.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label06;

     label09:
        r15 = interfaceinvoke r14.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label10:
        if r15 == null goto label13;

        $r8 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Node,nu.xom.NodeFactory)>(r15, r2);

        i10 = 0;

     label11:
        $i2 = virtualinvoke $r8.<nu.xom.Nodes: int size()>();

        if i10 >= $i2 goto label12;

        $r9 = virtualinvoke $r8.<nu.xom.Nodes: nu.xom.Node get(int)>(i10);

        virtualinvoke $r6.<nu.xom.Document: void appendChild(nu.xom.Node)>($r9);

        i10 = i10 + 1;

        goto label11;

     label12:
        r15 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label10;

     label13:
        return $r6;
    }

    public static nu.xom.Nodes convert(org.w3c.dom.DocumentFragment)
    {
        org.w3c.dom.DocumentFragment r0;
        nu.xom.Nodes $r2;
        nu.xom.NodeFactory $r1;

        r0 := @parameter0: org.w3c.dom.DocumentFragment;

        $r1 = new nu.xom.NodeFactory;

        specialinvoke $r1.<nu.xom.NodeFactory: void <init>()>();

        $r2 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.DocumentFragment,nu.xom.NodeFactory)>(r0, $r1);

        return $r2;
    }

    public static nu.xom.Nodes convert(org.w3c.dom.DocumentFragment, nu.xom.NodeFactory)
    {
        org.w3c.dom.NodeList $r2;
        org.w3c.dom.DocumentFragment r1;
        nu.xom.NodeFactory r4;
        org.w3c.dom.Node $r3;
        int $i0, i1;
        nu.xom.Nodes $r0, $r5;

        r1 := @parameter0: org.w3c.dom.DocumentFragment;

        r4 := @parameter1: nu.xom.NodeFactory;

        $r0 = new nu.xom.Nodes;

        specialinvoke $r0.<nu.xom.Nodes: void <init>()>();

        $r2 = interfaceinvoke r1.<org.w3c.dom.DocumentFragment: org.w3c.dom.NodeList getChildNodes()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if i1 >= $i0 goto label2;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        $r5 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Node,nu.xom.NodeFactory)>($r3, r4);

        staticinvoke <nu.xom.converters.DOMConverter: void appendNodes(nu.xom.Nodes,nu.xom.Nodes)>($r0, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static void appendNodes(nu.xom.Nodes, nu.xom.Nodes)
    {
        int $i0, i1;
        nu.xom.Nodes r0, r1;
        nu.xom.Node $r2;

        r1 := @parameter0: nu.xom.Nodes;

        r0 := @parameter1: nu.xom.Nodes;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<nu.xom.Nodes: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<nu.xom.Nodes: nu.xom.Node get(int)>(i1);

        virtualinvoke r1.<nu.xom.Nodes: void append(nu.xom.Node)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static nu.xom.Nodes convert(org.w3c.dom.Node, nu.xom.NodeFactory)
    {
        org.w3c.dom.Text $r8, $r10;
        org.w3c.dom.ProcessingInstruction $r6;
        short $s0;
        java.lang.StringBuffer $r16, $r17, $r19;
        org.w3c.dom.Node r0;
        int $i1, $i2;
        nu.xom.Nodes $r3, $r5, $r7, $r9, $r11, $r13;
        java.lang.String $r18;
        org.w3c.dom.Comment $r4;
        org.w3c.dom.DocumentType $r2;
        org.w3c.dom.Element $r12;
        nu.xom.NodeFactory r1;
        nu.xom.XMLException $r20;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: nu.xom.NodeFactory;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label7;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label7;
            case 6: goto label7;
            case 7: goto label6;
            case 8: goto label2;
            case 9: goto label7;
            case 10: goto label3;
            default: goto label7;
        };

     label1:
        $r12 = (org.w3c.dom.Element) r0;

        $r13 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Element,nu.xom.NodeFactory)>($r12, r1);

        return $r13;

     label2:
        $r4 = (org.w3c.dom.Comment) r0;

        $r5 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Comment,nu.xom.NodeFactory)>($r4, r1);

        return $r5;

     label3:
        $r2 = (org.w3c.dom.DocumentType) r0;

        $r3 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.DocumentType,nu.xom.NodeFactory)>($r2, r1);

        return $r3;

     label4:
        $r10 = (org.w3c.dom.Text) r0;

        $r11 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Text,nu.xom.NodeFactory)>($r10, r1);

        return $r11;

     label5:
        $r8 = (org.w3c.dom.Text) r0;

        $r9 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Text,nu.xom.NodeFactory)>($r8, r1);

        return $r9;

     label6:
        $r6 = (org.w3c.dom.ProcessingInstruction) r0;

        $r7 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.ProcessingInstruction,nu.xom.NodeFactory)>($r6, r1);

        return $r7;

     label7:
        $r20 = new nu.xom.XMLException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected DOM node type: ");

        $i2 = (int) $s0;

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<nu.xom.XMLException: void <init>(java.lang.String)>($r18);

        throw $r20;
    }

    public static nu.xom.Comment convert(org.w3c.dom.Comment)
    {
        java.lang.String $r2;
        org.w3c.dom.Comment r1;
        nu.xom.Comment $r0;

        r1 := @parameter0: org.w3c.dom.Comment;

        $r0 = new nu.xom.Comment;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Comment: java.lang.String getNodeValue()>();

        specialinvoke $r0.<nu.xom.Comment: void <init>(java.lang.String)>($r2);

        return $r0;
    }

    private static nu.xom.Nodes convert(org.w3c.dom.Comment, nu.xom.NodeFactory)
    {
        nu.xom.NodeFactory r0;
        nu.xom.Nodes $r3;
        java.lang.String $r2;
        org.w3c.dom.Comment r1;

        r1 := @parameter0: org.w3c.dom.Comment;

        r0 := @parameter1: nu.xom.NodeFactory;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Comment: java.lang.String getNodeValue()>();

        $r3 = virtualinvoke r0.<nu.xom.NodeFactory: nu.xom.Nodes makeComment(java.lang.String)>($r2);

        return $r3;
    }

    public static nu.xom.Text convert(org.w3c.dom.Text)
    {
        org.w3c.dom.Text r1;
        java.lang.String $r2;
        nu.xom.Text $r0;

        r1 := @parameter0: org.w3c.dom.Text;

        $r0 = new nu.xom.Text;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Text: java.lang.String getNodeValue()>();

        specialinvoke $r0.<nu.xom.Text: void <init>(java.lang.String)>($r2);

        return $r0;
    }

    private static nu.xom.Nodes convert(org.w3c.dom.Text, nu.xom.NodeFactory)
    {
        org.w3c.dom.Text r1;
        nu.xom.NodeFactory r0;
        nu.xom.Nodes $r3;
        java.lang.String $r2;

        r1 := @parameter0: org.w3c.dom.Text;

        r0 := @parameter1: nu.xom.NodeFactory;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Text: java.lang.String getNodeValue()>();

        $r3 = virtualinvoke r0.<nu.xom.NodeFactory: nu.xom.Nodes makeText(java.lang.String)>($r2);

        return $r3;
    }

    public static nu.xom.Attribute convert(org.w3c.dom.Attr)
    {
        nu.xom.Attribute $r3;
        java.lang.String $r1, $r2, $r4, r5;
        org.w3c.dom.Attr r0;

        r0 := @parameter0: org.w3c.dom.Attr;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Attr: java.lang.String getName()>();

        $r2 = interfaceinvoke r0.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        r5 = $r2;

        if $r2 != null goto label1;

        r5 = "";

     label1:
        $r3 = new nu.xom.Attribute;

        $r4 = interfaceinvoke r0.<org.w3c.dom.Attr: java.lang.String getNodeValue()>();

        specialinvoke $r3.<nu.xom.Attribute: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, r5, $r4);

        return $r3;
    }

    public static nu.xom.ProcessingInstruction convert(org.w3c.dom.ProcessingInstruction)
    {
        org.w3c.dom.ProcessingInstruction r1;
        nu.xom.ProcessingInstruction $r0;
        java.lang.String $r2, $r3;

        r1 := @parameter0: org.w3c.dom.ProcessingInstruction;

        $r0 = new nu.xom.ProcessingInstruction;

        $r2 = interfaceinvoke r1.<org.w3c.dom.ProcessingInstruction: java.lang.String getTarget()>();

        $r3 = interfaceinvoke r1.<org.w3c.dom.ProcessingInstruction: java.lang.String getNodeValue()>();

        specialinvoke $r0.<nu.xom.ProcessingInstruction: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        return $r0;
    }

    private static nu.xom.Nodes convert(org.w3c.dom.ProcessingInstruction, nu.xom.NodeFactory)
    {
        nu.xom.NodeFactory r0;
        org.w3c.dom.ProcessingInstruction r1;
        nu.xom.Nodes $r4;
        java.lang.String $r2, $r3;

        r1 := @parameter0: org.w3c.dom.ProcessingInstruction;

        r0 := @parameter1: nu.xom.NodeFactory;

        $r2 = interfaceinvoke r1.<org.w3c.dom.ProcessingInstruction: java.lang.String getTarget()>();

        $r3 = interfaceinvoke r1.<org.w3c.dom.ProcessingInstruction: java.lang.String getNodeValue()>();

        $r4 = virtualinvoke r0.<nu.xom.NodeFactory: nu.xom.Nodes makeProcessingInstruction(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public static nu.xom.DocType convert(org.w3c.dom.DocumentType)
    {
        java.lang.String $r2, $r3, $r4, $r5;
        nu.xom.DocType $r0;
        org.w3c.dom.DocumentType r1;

        r1 := @parameter0: org.w3c.dom.DocumentType;

        $r0 = new nu.xom.DocType;

        $r2 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getName()>();

        $r3 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getPublicId()>();

        $r4 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getSystemId()>();

        specialinvoke $r0.<nu.xom.DocType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        $r5 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getInternalSubset()>();

        virtualinvoke $r0.<nu.xom.DocType: void setInternalDTDSubset(java.lang.String)>($r5);

        return $r0;
    }

    private static nu.xom.Nodes convert(org.w3c.dom.DocumentType, nu.xom.NodeFactory)
    {
        nu.xom.Node $r6;
        org.w3c.dom.DocumentType r1;
        nu.xom.NodeFactory r0;
        int $i0, i1;
        nu.xom.Nodes $r5;
        java.lang.String $r2, $r3, $r4, $r8;
        boolean $z0;
        nu.xom.DocType $r7;

        r1 := @parameter0: org.w3c.dom.DocumentType;

        r0 := @parameter1: nu.xom.NodeFactory;

        $r2 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getName()>();

        $r3 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getPublicId()>();

        $r4 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getSystemId()>();

        $r5 = virtualinvoke r0.<nu.xom.NodeFactory: nu.xom.Nodes makeDocType(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        i1 = 0;

     label1:
        $i0 = virtualinvoke $r5.<nu.xom.Nodes: int size()>();

        if i1 >= $i0 goto label3;

        $r6 = virtualinvoke $r5.<nu.xom.Nodes: nu.xom.Node get(int)>(i1);

        $z0 = $r6 instanceof nu.xom.DocType;

        if $z0 == 0 goto label2;

        $r7 = (nu.xom.DocType) $r6;

        $r8 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getInternalSubset()>();

        virtualinvoke $r7.<nu.xom.DocType: void setInternalDTDSubset(java.lang.String)>($r8);

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r5;
    }

    public static nu.xom.Element convert(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        nu.xom.NodeFactory $r1;
        nu.xom.Element $r4;
        nu.xom.Nodes $r2;
        nu.xom.Node $r3;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = new nu.xom.NodeFactory;

        specialinvoke $r1.<nu.xom.NodeFactory: void <init>()>();

        $r2 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Element,nu.xom.NodeFactory)>(r0, $r1);

        $r3 = virtualinvoke $r2.<nu.xom.Nodes: nu.xom.Node get(int)>(0);

        $r4 = (nu.xom.Element) $r3;

        return $r4;
    }

    private static nu.xom.Nodes convert(org.w3c.dom.Element, nu.xom.NodeFactory)
    {
        nu.xom.Element $r2, $r8;
        short $s0;
        org.w3c.dom.Node $r3, $r12, r15;
        int $i1, $i2, $i3, i4, i5, i6;
        nu.xom.Nodes $r5, $r9, $r10, $r13;
        nu.xom.ParentNode $r4, r16;
        boolean $z0, z1, $z2;
        org.w3c.dom.NodeList $r11;
        nu.xom.Node $r6, $r14;
        org.w3c.dom.Element r0, $r7;
        nu.xom.NodeFactory r1;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: nu.xom.NodeFactory;

        r15 = r0;

        $r2 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Element makeElement(org.w3c.dom.Element,nu.xom.NodeFactory)>(r0, r1);

        if $r2 != null goto label05;

        $r10 = new nu.xom.Nodes;

        specialinvoke $r10.<nu.xom.Nodes: void <init>()>();

        $r11 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i4 = 0;

     label01:
        $i2 = interfaceinvoke $r11.<org.w3c.dom.NodeList: int getLength()>();

        if i4 >= $i2 goto label04;

        $r12 = interfaceinvoke $r11.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i4);

        $r13 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Node,nu.xom.NodeFactory)>($r12, r1);

        i5 = 0;

     label02:
        $i3 = virtualinvoke $r13.<nu.xom.Nodes: int size()>();

        if i5 >= $i3 goto label03;

        $r14 = virtualinvoke $r13.<nu.xom.Nodes: nu.xom.Node get(int)>(i5);

        virtualinvoke $r10.<nu.xom.Nodes: void append(nu.xom.Node)>($r14);

        i5 = i5 + 1;

        goto label02;

     label03:
        i4 = i4 + 1;

        goto label01;

     label04:
        return $r10;

     label05:
        r16 = $r2;

        z1 = 0;

     label06:
        $z2 = interfaceinvoke r15.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z2 == 0 goto label07;

        if z1 != 0 goto label07;

        r15 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        z1 = 0;

        goto label10;

     label07:
        if r15 != r0 goto label08;

        goto label15;

     label08:
        $r3 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        if $r3 == null goto label09;

        r15 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        z1 = 0;

        goto label10;

     label09:
        r15 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        z1 = 1;

        $r4 = virtualinvoke r16.<nu.xom.ParentNode: nu.xom.ParentNode getParent()>();

        if $r4 == null goto label06;

        r16 = virtualinvoke r16.<nu.xom.ParentNode: nu.xom.ParentNode getParent()>();

        goto label06;

     label10:
        $s0 = interfaceinvoke r15.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label12;

        $r7 = (org.w3c.dom.Element) r15;

        $r8 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Element makeElement(org.w3c.dom.Element,nu.xom.NodeFactory)>($r7, r1);

        if $r8 == null goto label11;

        virtualinvoke r16.<nu.xom.ParentNode: void appendChild(nu.xom.Node)>($r8);

        $z0 = interfaceinvoke r15.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z0 == 0 goto label11;

        r16 = $r8;

     label11:
        goto label14;

     label12:
        $r5 = staticinvoke <nu.xom.converters.DOMConverter: nu.xom.Nodes convert(org.w3c.dom.Node,nu.xom.NodeFactory)>(r15, r1);

        i6 = 0;

     label13:
        $i1 = virtualinvoke $r5.<nu.xom.Nodes: int size()>();

        if i6 >= $i1 goto label14;

        $r6 = virtualinvoke $r5.<nu.xom.Nodes: nu.xom.Node get(int)>(i6);

        virtualinvoke r16.<nu.xom.ParentNode: void appendChild(nu.xom.Node)>($r6);

        i6 = i6 + 1;

        goto label13;

     label14:
        goto label06;

     label15:
        $r9 = virtualinvoke r1.<nu.xom.NodeFactory: nu.xom.Nodes finishMakingElement(nu.xom.Element)>($r2);

        return $r9;
    }

    private static nu.xom.Element makeElement(org.w3c.dom.Element, nu.xom.NodeFactory)
    {
        boolean $z0, $z1, $z2, $z3;
        nu.xom.Node $r13;
        nu.xom.NodeFactory r4;
        nu.xom.Element r18;
        org.w3c.dom.Attr r7;
        nu.xom.Attribute$Type $r11;
        short $s4;
        org.w3c.dom.Node $r3, $r6, $r17;
        int $i0, $i1, $i2, $i3, i5, i6, $i7;
        org.w3c.dom.NamedNodeMap $r5;
        nu.xom.Nodes $r12;
        java.lang.String $r1, $r2, $r8, $r9, $r10, $r15, $r16, r19;
        nu.xom.Attribute $r14;
        org.w3c.dom.Element r0;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: nu.xom.NodeFactory;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        if $r3 == null goto label01;

        $r17 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        $s4 = interfaceinvoke $r17.<org.w3c.dom.Node: short getNodeType()>();

        $i7 = (int) $s4;

        if $i7 != 9 goto label02;

     label01:
        r18 = virtualinvoke r4.<nu.xom.NodeFactory: nu.xom.Element makeRootElement(java.lang.String,java.lang.String)>($r2, $r1);

        goto label03;

     label02:
        r18 = virtualinvoke r4.<nu.xom.NodeFactory: nu.xom.Element startMakingElement(java.lang.String,java.lang.String)>($r2, $r1);

     label03:
        if r18 != null goto label04;

        return null;

     label04:
        $r5 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i5 = 0;

     label05:
        $i0 = interfaceinvoke $r5.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i5 >= $i0 goto label14;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i5);

        r7 = (org.w3c.dom.Attr) $r6;

        $r8 = interfaceinvoke r7.<org.w3c.dom.Attr: java.lang.String getName()>();

        $r9 = interfaceinvoke r7.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        r19 = $r9;

        $r10 = interfaceinvoke r7.<org.w3c.dom.Attr: java.lang.String getValue()>();

        if $r9 != null goto label06;

        r19 = "";

     label06:
        $z0 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/xmlns/");

        if $z0 == 0 goto label09;

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z2 == 0 goto label07;

        goto label13;

     label07:
        $i2 = virtualinvoke $r8.<java.lang.String: int indexOf(int)>(58);

        $i3 = $i2 + 1;

        $r15 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i3);

        $r16 = virtualinvoke r18.<nu.xom.Element: java.lang.String getNamespaceURI(java.lang.String)>($r15);

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z3 != 0 goto label08;

        virtualinvoke r18.<nu.xom.Element: void addNamespaceDeclaration(java.lang.String,java.lang.String)>($r15, $r10);

     label08:
        goto label13;

     label09:
        $r11 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type UNDECLARED>;

        $r12 = virtualinvoke r4.<nu.xom.NodeFactory: nu.xom.Nodes makeAttribute(java.lang.String,java.lang.String,java.lang.String,nu.xom.Attribute$Type)>($r8, r19, $r10, $r11);

        i6 = 0;

     label10:
        $i1 = virtualinvoke $r12.<nu.xom.Nodes: int size()>();

        if i6 >= $i1 goto label13;

        $r13 = virtualinvoke $r12.<nu.xom.Nodes: nu.xom.Node get(int)>(i6);

        $z1 = $r13 instanceof nu.xom.Attribute;

        if $z1 == 0 goto label11;

        $r14 = (nu.xom.Attribute) $r13;

        virtualinvoke r18.<nu.xom.Element: void addAttribute(nu.xom.Attribute)>($r14);

        goto label12;

     label11:
        virtualinvoke r18.<nu.xom.Element: void appendChild(nu.xom.Node)>($r13);

     label12:
        i6 = i6 + 1;

        goto label10;

     label13:
        i5 = i5 + 1;

        goto label05;

     label14:
        return r18;
    }

    public static org.w3c.dom.Document convert(nu.xom.Document, org.w3c.dom.DOMImplementation)
    {
        nu.xom.Element $r1, $r10;
        org.w3c.dom.Document $r6;
        org.w3c.dom.Node $r9;
        int i0, $i1;
        java.lang.String $r2, $r3, $r11, $r12;
        org.w3c.dom.DOMImplementation r5;
        nu.xom.DocType $r4;
        boolean $z0, $z1, z2;
        nu.xom.Node $r8;
        org.w3c.dom.DocumentType r13;
        org.w3c.dom.Element $r7;
        nu.xom.Document r0;

        r0 := @parameter0: nu.xom.Document;

        r5 := @parameter1: org.w3c.dom.DOMImplementation;

        $r1 = virtualinvoke r0.<nu.xom.Document: nu.xom.Element getRootElement()>();

        $r2 = virtualinvoke $r1.<nu.xom.Element: java.lang.String getQualifiedName()>();

        $r3 = virtualinvoke $r1.<nu.xom.Element: java.lang.String getNamespaceURI()>();

        $r4 = virtualinvoke r0.<nu.xom.Document: nu.xom.DocType getDocType()>();

        r13 = null;

        if $r4 == null goto label1;

        $r11 = virtualinvoke $r4.<nu.xom.DocType: java.lang.String getPublicID()>();

        $r12 = virtualinvoke $r4.<nu.xom.DocType: java.lang.String getSystemID()>();

        r13 = interfaceinvoke r5.<org.w3c.dom.DOMImplementation: org.w3c.dom.DocumentType createDocumentType(java.lang.String,java.lang.String,java.lang.String)>($r2, $r11, $r12);

     label1:
        $r6 = interfaceinvoke r5.<org.w3c.dom.DOMImplementation: org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)>($r3, $r2, r13);

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        z2 = 1;

        i0 = 0;

     label2:
        $i1 = virtualinvoke r0.<nu.xom.Document: int getChildCount()>();

        if i0 >= $i1 goto label7;

        $r8 = virtualinvoke r0.<nu.xom.Document: nu.xom.Node getChild(int)>(i0);

        $z0 = $r8 instanceof nu.xom.DocType;

        if $z0 == 0 goto label3;

        goto label6;

     label3:
        $z1 = $r8 instanceof nu.xom.Element;

        if $z1 == 0 goto label4;

        $r10 = (nu.xom.Element) $r8;

        staticinvoke <nu.xom.converters.DOMConverter: org.w3c.dom.Element convert(nu.xom.Element,org.w3c.dom.Document)>($r10, $r6);

        z2 = 0;

        goto label6;

     label4:
        $r9 = staticinvoke <nu.xom.converters.DOMConverter: org.w3c.dom.Node convert(nu.xom.Node,org.w3c.dom.Document)>($r8, $r6);

        if z2 == 0 goto label5;

        interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>($r9, $r7);

        goto label6;

     label5:
        interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

     label6:
        i0 = i0 + 1;

        goto label2;

     label7:
        return $r6;
    }

    private static org.w3c.dom.Node convert(nu.xom.Node, org.w3c.dom.Document)
    {
        org.w3c.dom.Text $r14;
        org.w3c.dom.ProcessingInstruction $r10;
        java.lang.StringBuffer $r2, $r3, $r6;
        org.w3c.dom.Document r8;
        java.lang.String $r5, $r7;
        nu.xom.ProcessingInstruction $r9;
        nu.xom.Comment $r11;
        nu.xom.Text $r13;
        boolean $z0, $z1, $z2;
        org.w3c.dom.Comment $r12;
        nu.xom.Node r0;
        nu.xom.XMLException $r1;
        java.lang.Class $r4;

        r0 := @parameter0: nu.xom.Node;

        r8 := @parameter1: org.w3c.dom.Document;

        $z0 = r0 instanceof nu.xom.Text;

        if $z0 == 0 goto label1;

        $r13 = (nu.xom.Text) r0;

        $r14 = staticinvoke <nu.xom.converters.DOMConverter: org.w3c.dom.Text convert(nu.xom.Text,org.w3c.dom.Document)>($r13, r8);

        return $r14;

     label1:
        $z1 = r0 instanceof nu.xom.Comment;

        if $z1 == 0 goto label2;

        $r11 = (nu.xom.Comment) r0;

        $r12 = staticinvoke <nu.xom.converters.DOMConverter: org.w3c.dom.Comment convert(nu.xom.Comment,org.w3c.dom.Document)>($r11, r8);

        return $r12;

     label2:
        $z2 = r0 instanceof nu.xom.ProcessingInstruction;

        if $z2 == 0 goto label3;

        $r9 = (nu.xom.ProcessingInstruction) r0;

        $r10 = staticinvoke <nu.xom.converters.DOMConverter: org.w3c.dom.ProcessingInstruction convert(nu.xom.ProcessingInstruction,org.w3c.dom.Document)>($r9, r8);

        return $r10;

     label3:
        $r1 = new nu.xom.XMLException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected node type: ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<nu.xom.XMLException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    private static org.w3c.dom.Comment convert(nu.xom.Comment, org.w3c.dom.Document)
    {
        org.w3c.dom.Document r0;
        java.lang.String $r2;
        org.w3c.dom.Comment $r3;
        nu.xom.Comment r1;

        r1 := @parameter0: nu.xom.Comment;

        r0 := @parameter1: org.w3c.dom.Document;

        $r2 = virtualinvoke r1.<nu.xom.Comment: java.lang.String getValue()>();

        $r3 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r2);

        return $r3;
    }

    private static org.w3c.dom.Text convert(nu.xom.Text, org.w3c.dom.Document)
    {
        org.w3c.dom.Text $r3;
        org.w3c.dom.Document r0;
        java.lang.String $r2;
        nu.xom.Text r1;

        r1 := @parameter0: nu.xom.Text;

        r0 := @parameter1: org.w3c.dom.Document;

        $r2 = virtualinvoke r1.<nu.xom.Text: java.lang.String getValue()>();

        $r3 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r2);

        return $r3;
    }

    private static org.w3c.dom.ProcessingInstruction convert(nu.xom.ProcessingInstruction, org.w3c.dom.Document)
    {
        org.w3c.dom.ProcessingInstruction $r4;
        org.w3c.dom.Document r0;
        nu.xom.ProcessingInstruction r1;
        java.lang.String $r2, $r3;

        r1 := @parameter0: nu.xom.ProcessingInstruction;

        r0 := @parameter1: org.w3c.dom.Document;

        $r2 = virtualinvoke r1.<nu.xom.ProcessingInstruction: java.lang.String getTarget()>();

        $r3 = virtualinvoke r1.<nu.xom.ProcessingInstruction: java.lang.String getValue()>();

        $r4 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    private static org.w3c.dom.Element convert(nu.xom.Element, org.w3c.dom.Document)
    {
        nu.xom.Element r0, r12;
        short $s0;
        int[] $r8, r11;
        org.w3c.dom.Document r1;
        org.w3c.dom.Node $r4, $r5, r9;
        int $i1, i2, i3, $i4, $i5, $i7;
        nu.xom.ParentNode $r3, $r7;
        boolean $z0, $z1, z2;
        nu.xom.Node r10;
        org.w3c.dom.Element $r2, $r6;

        r0 := @parameter0: nu.xom.Element;

        r1 := @parameter1: org.w3c.dom.Document;

        $r2 = staticinvoke <nu.xom.converters.DOMConverter: org.w3c.dom.Element makeElement(nu.xom.Element,org.w3c.dom.Document)>(r0, r1);

        r9 = $r2;

        r10 = r0;

        i2 = 0;

        r11 = newarray (int)[10];

        i3 = 0;

        r11[0] = 0;

        z2 = 0;

     label1:
        if z2 != 0 goto label2;

        $i1 = virtualinvoke r10.<nu.xom.Node: int getChildCount()>();

        if $i1 <= 0 goto label2;

        r10 = virtualinvoke r10.<nu.xom.Node: nu.xom.Node getChild(int)>(0);

        i2 = 0;

        i3 = i3 + 1;

        $r8 = staticinvoke <nu.xom.converters.DOMConverter: int[] grow(int[],int)>(r11, i3);

        r11 = $r8;

        $r8[i3] = 0;

        goto label7;

     label2:
        z2 = 0;

        $r3 = virtualinvoke r10.<nu.xom.Node: nu.xom.ParentNode getParent()>();

        $r4 = interfaceinvoke r9.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $s0 = interfaceinvoke $r4.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label3;

        $z1 = r10 instanceof nu.xom.Element;

        if $z1 == 0 goto label3;

        r9 = $r4;

     label3:
        $i4 = virtualinvoke $r3.<nu.xom.ParentNode: int getChildCount()>();

        $i5 = $i4 - 1;

        if $i5 != i2 goto label6;

        r10 = $r3;

        $i7 = (int) -1;

        i3 = i3 + $i7;

        if $r3 != r0 goto label4;

        goto label9;

     label4:
        $r7 = virtualinvoke $r3.<nu.xom.Node: nu.xom.ParentNode getParent()>();

        if $r7 != null goto label5;

        goto label9;

     label5:
        i2 = r11[i3];

        z2 = 1;

        goto label1;

     label6:
        i2 = i2 + 1;

        r11[i3] = i2;

        r10 = virtualinvoke $r3.<nu.xom.ParentNode: nu.xom.Node getChild(int)>(i2);

     label7:
        $z0 = r10 instanceof nu.xom.Element;

        if $z0 == 0 goto label8;

        r12 = (nu.xom.Element) r10;

        $r6 = staticinvoke <nu.xom.converters.DOMConverter: org.w3c.dom.Element makeElement(nu.xom.Element,org.w3c.dom.Document)>(r12, r1);

        interfaceinvoke r9.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        r9 = $r6;

        goto label1;

     label8:
        $r5 = staticinvoke <nu.xom.converters.DOMConverter: org.w3c.dom.Node convert(nu.xom.Node,org.w3c.dom.Document)>(r10, r1);

        interfaceinvoke r9.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        goto label1;

     label9:
        return $r2;
    }

    private static int[] grow(int[], int)
    {
        int[] r0, r1;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        return r0;

     label1:
        $i2 = lengthof r0;

        $i3 = $i2 * 2;

        r1 = newarray (int)[$i3];

        $i4 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i4);

        return r1;
    }

    private static org.w3c.dom.Element makeElement(nu.xom.Element, org.w3c.dom.Document)
    {
        org.w3c.dom.Document r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        nu.xom.Element r0, r26;
        org.w3c.dom.Attr $r13, $r14, $r19, $r22, r25;
        java.lang.StringBuffer $r9, $r10, $r11;
        int $i0, $i1, i2, i3;
        java.lang.String $r1, $r4, $r5, $r6, $r8, $r12, $r15, $r17, $r18, $r20, $r21, $r23;
        nu.xom.ParentNode $r2, $r7;
        nu.xom.Attribute $r16;
        org.w3c.dom.Element r24;

        r0 := @parameter0: nu.xom.Element;

        r3 := @parameter1: org.w3c.dom.Document;

        $r1 = virtualinvoke r0.<nu.xom.Element: java.lang.String getNamespaceURI()>();

        $r2 = virtualinvoke r0.<nu.xom.Element: nu.xom.ParentNode getParent()>();

        $z0 = $r2 instanceof nu.xom.Document;

        if $z0 == 0 goto label01;

        r24 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        goto label03;

     label01:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label02;

        $r23 = virtualinvoke r0.<nu.xom.Element: java.lang.String getQualifiedName()>();

        r24 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>($r23);

        goto label03;

     label02:
        $r4 = virtualinvoke r0.<nu.xom.Element: java.lang.String getQualifiedName()>();

        r24 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>($r1, $r4);

     label03:
        $i1 = virtualinvoke r0.<nu.xom.Element: int getAttributeCount()>();

        i2 = 0;

     label04:
        if i2 >= $i1 goto label07;

        $r16 = virtualinvoke r0.<nu.xom.Element: nu.xom.Attribute getAttribute(int)>(i2);

        $r17 = virtualinvoke $r16.<nu.xom.Attribute: java.lang.String getNamespaceURI()>();

        $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z6 == 0 goto label05;

        $r21 = virtualinvoke $r16.<nu.xom.Attribute: java.lang.String getLocalName()>();

        $r22 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Attr createAttribute(java.lang.String)>($r21);

        r25 = $r22;

        interfaceinvoke r24.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)>($r22);

        goto label06;

     label05:
        $r18 = virtualinvoke $r16.<nu.xom.Attribute: java.lang.String getQualifiedName()>();

        $r19 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)>($r17, $r18);

        r25 = $r19;

        interfaceinvoke r24.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)>($r19);

     label06:
        $r20 = virtualinvoke $r16.<nu.xom.Attribute: java.lang.String getValue()>();

        interfaceinvoke r25.<org.w3c.dom.Attr: void setValue(java.lang.String)>($r20);

        i2 = i2 + 1;

        goto label04;

     label07:
        $i0 = virtualinvoke r0.<nu.xom.Element: int getNamespaceDeclarationCount()>();

        i3 = 0;

     label08:
        if i3 >= $i0 goto label14;

        $r5 = virtualinvoke r0.<nu.xom.Element: java.lang.String getNamespacePrefix(int)>(i3);

        $r6 = virtualinvoke r0.<nu.xom.Element: java.lang.String getNamespaceURI(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<nu.xom.Element: nu.xom.ParentNode getParent()>();

        $z2 = $r7 instanceof nu.xom.Element;

        if $z2 == 0 goto label10;

        r26 = (nu.xom.Element) $r7;

        $r15 = virtualinvoke r26.<nu.xom.Element: java.lang.String getNamespaceURI(java.lang.String)>($r5);

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z5 == 0 goto label09;

        goto label13;

     label09:
        goto label11;

     label10:
        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 == 0 goto label11;

        goto label13;

     label11:
        $r8 = "";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z4 == 0 goto label12;

        $r14 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", "xmlns");

        interfaceinvoke r24.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)>($r14);

        interfaceinvoke $r14.<org.w3c.dom.Attr: void setValue(java.lang.String)>($r6);

        goto label13;

     label12:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xmlns:");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", $r12);

        interfaceinvoke r24.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)>($r13);

        interfaceinvoke $r13.<org.w3c.dom.Attr: void setValue(java.lang.String)>($r6);

     label13:
        i3 = i3 + 1;

        goto label08;

     label14:
        return r24;
    }

    public static void <clinit>()
    {
        <nu.xom.converters.DOMConverter: java.lang.String XMLNS_NAMESPACE> = "http://www.w3.org/2000/xmlns/";

        return;
    }
}
