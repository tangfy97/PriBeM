class com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat extends java.lang.Object implements com.coremedia.iso.boxes.Box
{
    com.coremedia.iso.boxes.Container parent;
    long size_;
    final com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder this$0;
    private final long val$startSample;
    private final long val$endSample;
    private final com.googlecode.mp4parser.authoring.Track val$track;
    private final int val$i;

    void <init>(com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder, long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.Track r2;
        int i2;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        long l0, l1;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter4: int;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder this$0> = r1;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$startSample> = l0;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$endSample> = l1;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.Track val$track> = r2;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: int val$i> = i2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long size_> = -1L;

        return;
    }

    public com.coremedia.iso.boxes.Container getParent()
    {
        com.coremedia.iso.boxes.Container $r1;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        $r1 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.coremedia.iso.boxes.Container parent>;

        return $r1;
    }

    public long getOffset()
    {
        java.lang.RuntimeException $r0;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r1;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Doesn\'t have any meaning for programmatically created boxes");

        throw $r0;
    }

    public void setParent(com.coremedia.iso.boxes.Container)
    {
        com.coremedia.iso.boxes.Container r1;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        r1 := @parameter0: com.coremedia.iso.boxes.Container;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.coremedia.iso.boxes.Container parent> = r1;

        return;
    }

    public long getSize()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder $r2;
        long $l0, $l3, $l4, $l5, $l6, l7;
        byte $b1;
        int $i2;
        boolean $z0;
        java.util.Iterator $r4;
        com.googlecode.mp4parser.authoring.Sample r6;
        java.util.List $r3;
        java.lang.Object $r5;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        $l0 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long size_>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $l6 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long size_>;

        return $l6;

     label1:
        l7 = 8L;

        $r2 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder this$0>;

        $l4 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$startSample>;

        $l3 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$endSample>;

        $r1 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.Track val$track>;

        $i2 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: int val$i>;

        $r3 = virtualinvoke $r2.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List getSamples(long,long,com.googlecode.mp4parser.authoring.Track,int)>($l4, $l3, $r1, $i2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.googlecode.mp4parser.authoring.Sample) $r5;

        $l5 = interfaceinvoke r6.<com.googlecode.mp4parser.authoring.Sample: long getSize()>();

        l7 = l7 + $l5;

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long size_> = l7;

        return l7;
    }

    public java.lang.String getType()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        return "mdat";
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.Track $r5;
        byte[] $r3;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder $r6;
        long $l0, $l2, $l4, $l5;
        java.nio.ByteBuffer $r0;
        int $i1, $i3;
        java.lang.String $r2;
        boolean $z0;
        java.util.Iterator $r8;
        com.googlecode.mp4parser.authoring.Sample r10;
        java.util.List $r7;
        java.nio.channels.WritableByteChannel r4;
        java.lang.Object $r9;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r1;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        r4 := @parameter0: java.nio.channels.WritableByteChannel;

        $r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        $l0 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long getSize()>();

        $i1 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l0);

        $l2 = (long) $i1;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r0, $l2);

        $r2 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: java.lang.String getType()>();

        $r3 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r2);

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r3);

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        interfaceinvoke r4.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r0);

        $r6 = r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder this$0>;

        $l5 = r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$startSample>;

        $l4 = r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$endSample>;

        $r5 = r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.Track val$track>;

        $i3 = r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: int val$i>;

        $r7 = virtualinvoke $r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List getSamples(long,long,com.googlecode.mp4parser.authoring.Track,int)>($l5, $l4, $r5, $i3);

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.googlecode.mp4parser.authoring.Sample) $r9;

        interfaceinvoke r10.<com.googlecode.mp4parser.authoring.Sample: void writeTo(java.nio.channels.WritableByteChannel)>(r4);

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public void parse(com.googlecode.mp4parser.DataSource, java.nio.ByteBuffer, long, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource r1;
        com.coremedia.iso.BoxParser r3;
        long l0;
        java.nio.ByteBuffer r2;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        r2 := @parameter1: java.nio.ByteBuffer;

        l0 := @parameter2: long;

        r3 := @parameter3: com.coremedia.iso.BoxParser;

        return;
    }
}
