class org.joda.time.format.PeriodFormatterBuilder$FieldFormatter extends java.lang.Object implements org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser
{
    private final int iMinPrintedDigits;
    private final int iPrintZeroSetting;
    private final int iMaxParsedDigits;
    private final boolean iRejectSignedValues;
    private final int iFieldType;
    private final org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters;
    private final org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix;
    private final org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix;

    void <init>(int, int, int, boolean, int, org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[], org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix r2, r3;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] r1;
        int i0, i1, i2, i3;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        boolean z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        i3 := @parameter4: int;

        r1 := @parameter5: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[];

        r2 := @parameter6: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        r3 := @parameter7: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits> = i0;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting> = i1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits> = i2;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues> = z0;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> = i3;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = r2;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix> = r3;

        return;
    }

    void <init>(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r3, $r4, $r6, r7;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r2;
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix $r5;
        int $i0, $i1, $i2, $i3;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0, r1;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r7 := @parameter1: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits> = $i0;

        $i1 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting> = $i1;

        $i2 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits> = $i2;

        $z0 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues> = $z0;

        $i3 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> = $i3;

        $r2 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r2;

        $r3 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = $r3;

        $r4 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r4 == null goto label1;

        $r5 = new org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r6 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        specialinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: void <init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r6, r7);

        r7 = $r5;

     label1:
        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix> = r7;

        return;
    }

    public int countFieldsToPrint(org.joda.time.ReadablePeriod, int, java.util.Locale)
    {
        org.joda.time.ReadablePeriod r1;
        byte $b3;
        java.util.Locale r2;
        int i0, $i1;
        long $l2;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Locale;

        if i0 > 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        if $i1 == 4 goto label2;

        $l2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>(r1);

        $b3 = $l2 cmp 9223372036854775807L;

        if $b3 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public int calculatePrintedLength(org.joda.time.ReadablePeriod, java.util.Locale)
    {
        long $l0, $l10, $l11, l13;
        byte $b1, $b12;
        java.util.Locale r5;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i14, $i15, $i17;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r3, $r4, $r6;
        org.joda.time.ReadablePeriod r1;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        r5 := @parameter1: java.util.Locale;

        $l0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>(r1);

        l13 = $l0;

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        return 0;

     label1:
        $i2 = staticinvoke <org.joda.time.format.FormatUtils: int calculateDigitCount(long)>($l0);

        $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        i14 = $i4;

        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i5 < 8 goto label3;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i4, 4);

        i14 = $i8 + 1;

        $i9 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i9 != 9 goto label2;

        $l10 = staticinvoke <java.lang.Math: long abs(long)>($l0);

        $l11 = $l10 % 1000L;

        $b12 = $l11 cmp 0L;

        if $b12 != 0 goto label2;

        $i17 = (int) -4;

        i14 = i14 + $i17;

     label2:
        l13 = $l0 / 1000L;

     label3:
        $i15 = (int) l13;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r6 == null goto label4;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        $i7 = interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int calculatePrintedLength(int)>($i15);

        i14 = i14 + $i7;

     label4:
        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r2 == null goto label5;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        $i6 = interfaceinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int calculatePrintedLength(int)>($i15);

        i14 = i14 + $i6;

     label5:
        return i14;
    }

    public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale)
    {
        long $l0, $l4, $l5, $l9;
        byte $b1;
        java.lang.StringBuffer r3;
        java.util.Locale r6;
        int $i2, $i3, i6, $i7, $i8, i10;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r4, $r5, $r7;
        org.joda.time.ReadablePeriod r1;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r3 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: org.joda.time.ReadablePeriod;

        r6 := @parameter2: java.util.Locale;

        $l0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>(r1);

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        return;

     label1:
        i10 = (int) $l0;

        $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i2 < 8 goto label2;

        $l9 = $l0 / 1000L;

        i10 = (int) $l9;

     label2:
        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r2 == null goto label3;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        interfaceinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.lang.StringBuffer,int)>(r3, i10);

     label3:
        $i8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        if $i8 > 1 goto label4;

        staticinvoke <org.joda.time.format.FormatUtils: void appendUnpaddedInteger(java.lang.StringBuffer,int)>(r3, i10);

        goto label5;

     label4:
        staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>(r3, i10, $i8);

     label5:
        $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i3 < 8 goto label7;

        $l4 = staticinvoke <java.lang.Math: long abs(long)>($l0);

        $l5 = $l4 % 1000L;

        i6 = (int) $l5;

        $i7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i7 == 8 goto label6;

        if i6 <= 0 goto label7;

     label6:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>(r3, i6, 3);

     label7:
        $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r7 == null goto label8;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.lang.StringBuffer,int)>(r3, i10);

     label8:
        return;
    }

    public void printTo(java.io.Writer, org.joda.time.ReadablePeriod, java.util.Locale) throws java.io.IOException
    {
        long $l0, $l4, $l5, $l9;
        byte $b1;
        java.util.Locale r6;
        int $i2, $i3, i6, $i7, $i8, i10;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r4, $r5, $r7;
        org.joda.time.ReadablePeriod r1;
        java.io.Writer r3;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r3 := @parameter0: java.io.Writer;

        r1 := @parameter1: org.joda.time.ReadablePeriod;

        r6 := @parameter2: java.util.Locale;

        $l0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>(r1);

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        return;

     label1:
        i10 = (int) $l0;

        $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i2 < 8 goto label2;

        $l9 = $l0 / 1000L;

        i10 = (int) $l9;

     label2:
        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r2 == null goto label3;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        interfaceinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.io.Writer,int)>(r3, i10);

     label3:
        $i8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        if $i8 > 1 goto label4;

        staticinvoke <org.joda.time.format.FormatUtils: void writeUnpaddedInteger(java.io.Writer,int)>(r3, i10);

        goto label5;

     label4:
        staticinvoke <org.joda.time.format.FormatUtils: void writePaddedInteger(java.io.Writer,int,int)>(r3, i10, $i8);

     label5:
        $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i3 < 8 goto label7;

        $l4 = staticinvoke <java.lang.Math: long abs(long)>($l0);

        $l5 = $l4 % 1000L;

        i6 = (int) $l5;

        $i7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i7 == 8 goto label6;

        if i6 <= 0 goto label7;

     label6:
        virtualinvoke r3.<java.io.Writer: void write(int)>(46);

        staticinvoke <org.joda.time.format.FormatUtils: void writePaddedInteger(java.io.Writer,int,int)>(r3, i6, 3);

     label7:
        $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r7 == null goto label8;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.io.Writer,int)>(r3, i10);

     label8:
        return;
    }

    public int parseInto(org.joda.time.ReadWritablePeriod, java.lang.String, int, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.PeriodType $r7;
        java.lang.String r1;
        org.joda.time.ReadWritablePeriod r4;
        java.util.Locale r10;
        boolean $z0, $z1, z3, z4, $z5, $z6, $z7, $z8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, $i40, i41, i42, i43, i44, i45, i46, $i47, i48, $i50, $i52, $i54, $i56, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i69;
        char $c18, $c28;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r3, $r5, $r6, $r8, $r9;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r4 := @parameter0: org.joda.time.ReadWritablePeriod;

        r1 := @parameter1: java.lang.String;

        i39 := @parameter2: int;

        r10 := @parameter3: java.util.Locale;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        if $i0 != 4 goto label01;

        $z8 = 1;

        $z7 = 1;

        $z6 = 1;

        goto label02;

     label01:
        $z8 = 0;

        $z7 = 0;

        $z6 = 0;

     label02:
        z3 = $z6;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i39 < $i1 goto label05;

        if $z7 == 0 goto label03;

        $i50 = (int) -1;

        $i40 = i39 ^ $i50;

        goto label04;

     label03:
        $i40 = i39;

     label04:
        return $i40;

     label05:
        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r2 == null goto label08;

        $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        $i37 = interfaceinvoke $r9.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r1, i39);

        i39 = $i37;

        if $i37 < 0 goto label06;

        z3 = 1;

        goto label08;

     label06:
        if $z8 != 0 goto label07;

        $i52 = (int) -1;

        $i38 = $i37 ^ $i52;

        return $i38;

     label07:
        return $i37;

     label08:
        $i54 = (int) -1;

        i41 = $i54;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r3 == null goto label11;

        if z3 != 0 goto label11;

        $r8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        $i35 = interfaceinvoke $r8.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>(r1, i39);

        i41 = $i35;

        if $i35 < 0 goto label09;

        z3 = 1;

        goto label11;

     label09:
        if z3 != 0 goto label10;

        $i56 = (int) -1;

        $i36 = $i35 ^ $i56;

        return $i36;

     label10:
        return $i35;

     label11:
        if z3 != 0 goto label12;

        $r7 = interfaceinvoke r4.<org.joda.time.ReadWritablePeriod: org.joda.time.PeriodType getPeriodType()>();

        $i34 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $z1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>($r7, $i34);

        if $z1 != 0 goto label12;

        return i39;

     label12:
        if i41 <= 0 goto label13;

        $i33 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>;

        $i32 = i41 - i39;

        i42 = staticinvoke <java.lang.Math: int min(int,int)>($i33, $i32);

        goto label14;

     label13:
        $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = $i3 - i39;

        i42 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i4);

     label14:
        i43 = 0;

        $i58 = (int) -1;

        i44 = $i58;

        z4 = 0;

     label15:
        if i43 >= i42 goto label28;

        $i17 = i39 + i43;

        $c18 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i17);

        if i43 != 0 goto label22;

        $i59 = (int) $c18;

        if $i59 == 45 goto label16;

        $i60 = (int) $c18;

        if $i60 != 43 goto label22;

     label16:
        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues>;

        if $z0 != 0 goto label22;

        $i61 = (int) $c18;

        if $i61 != 45 goto label17;

        $z5 = 1;

        goto label18;

     label17:
        $z5 = 0;

     label18:
        $i25 = i43 + 1;

        if $i25 >= i42 goto label28;

        $i26 = i39 + i43;

        $i27 = $i26 + 1;

        $c28 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i27);

        $i62 = (int) $c28;

        if $i62 < 48 goto label28;

        $i63 = (int) $c28;

        if $i63 <= 57 goto label19;

        goto label28;

     label19:
        if $z5 == 0 goto label20;

        i43 = i43 + 1;

        goto label21;

     label20:
        i39 = i39 + 1;

     label21:
        $i29 = i42 + 1;

        $i30 = virtualinvoke r1.<java.lang.String: int length()>();

        $i31 = $i30 - i39;

        i42 = staticinvoke <java.lang.Math: int min(int,int)>($i29, $i31);

        goto label15;

     label22:
        $i64 = (int) $c18;

        if $i64 < 48 goto label23;

        $i65 = (int) $c18;

        if $i65 > 57 goto label23;

        z4 = 1;

        goto label27;

     label23:
        $i66 = (int) $c18;

        if $i66 == 46 goto label24;

        $i67 = (int) $c18;

        if $i67 != 44 goto label28;

     label24:
        $i19 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i19 == 8 goto label25;

        $i24 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i24 != 9 goto label28;

     label25:
        if i44 < 0 goto label26;

        goto label28;

     label26:
        $i20 = i39 + i43;

        i44 = $i20 + 1;

        $i21 = i42 + 1;

        $i22 = virtualinvoke r1.<java.lang.String: int length()>();

        $i23 = $i22 - i39;

        i42 = staticinvoke <java.lang.Math: int min(int,int)>($i21, $i23);

     label27:
        i43 = i43 + 1;

        goto label15;

     label28:
        if z4 != 0 goto label29;

        $i69 = (int) -1;

        $i16 = i39 ^ $i69;

        return $i16;

     label29:
        if i41 < 0 goto label30;

        $i15 = i39 + i43;

        if $i15 == i41 goto label30;

        return i39;

     label30:
        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i5 == 8 goto label31;

        $i12 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i12 == 9 goto label31;

        $i13 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $i14 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r1, i39, i43);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r4, $i13, $i14);

        goto label38;

     label31:
        if i44 >= 0 goto label32;

        $i11 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r1, i39, i43);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r4, 6, $i11);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r4, 7, 0);

        goto label38;

     label32:
        $i6 = i44 - i39;

        $i7 = $i6 - 1;

        $i8 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r1, i39, $i7);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r4, 6, $i8);

        $i9 = i39 + i43;

        i45 = $i9 - i44;

        if i45 > 0 goto label33;

        i46 = 0;

        goto label37;

     label33:
        if i45 < 3 goto label34;

        i46 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r1, i44, 3);

        goto label36;

     label34:
        $i10 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r1, i44, i45);

        if i45 != 1 goto label35;

        i46 = $i10 * 100;

        goto label36;

     label35:
        i46 = $i10 * 10;

     label36:
        if $i8 >= 0 goto label37;

        i46 = neg i46;

     label37:
        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r4, 7, i46);

     label38:
        $i47 = i39 + i43;

        i48 = $i47;

        if $i47 < 0 goto label39;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r5 == null goto label39;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        i48 = interfaceinvoke $r6.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r1, $i47);

     label39:
        return i48;
    }

    private int parseInt(java.lang.String, int, int)
    {
        int $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, i10, i11, i12, i14, i15, $i16, $i17, $i19, $i20, $i22, $i23, $i25, $i26;
        java.lang.String r0, $r1;
        boolean z0;
        char $c0, $c5, c13;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r2;

        r2 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r0 := @parameter0: java.lang.String;

        i10 := @parameter1: int;

        i11 := @parameter2: int;

        if i11 < 10 goto label1;

        $i8 = i10 + i11;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i10, $i8);

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i9;

     label1:
        if i11 > 0 goto label2;

        return 0;

     label2:
        i12 = i10 + 1;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10);

        c13 = $c0;

        $i19 = (int) -1;

        i14 = i11 + $i19;

        $i20 = (int) $c0;

        if $i20 != 45 goto label4;

        $i22 = (int) -1;

        i14 = i14 + $i22;

        if i14 >= 0 goto label3;

        return 0;

     label3:
        z0 = 1;

        $i7 = i12;

        i12 = i12 + 1;

        c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        goto label5;

     label4:
        z0 = 0;

     label5:
        $i23 = (int) c13;

        $i25 = (int) -48;

        i15 = $i23 + $i25;

     label6:
        $i16 = i14;

        i14 = i14 - 1;

        if $i16 <= 0 goto label7;

        $i2 = i15 << 3;

        $i1 = i15 << 1;

        $i4 = $i2 + $i1;

        $i3 = i12;

        i12 = i12 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i26 = (int) $c5;

        $i6 = $i4 + $i26;

        i15 = $i6 - 48;

        goto label6;

     label7:
        if z0 == 0 goto label8;

        $i17 = neg i15;

        goto label9;

     label8:
        $i17 = i15;

     label9:
        return $i17;
    }

    long getFieldValue(org.joda.time.ReadablePeriod)
    {
        byte $b23;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r4, $r6, $r8, $r10;
        org.joda.time.ReadablePeriod r1;
        org.joda.time.DurationFieldType $r2, $r3, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0, $r5, $r7, $r9, $r11;
        long $l4, $l5, $l6, l22;
        org.joda.time.PeriodType r20;
        int $i0, $i1, $i2, $i3, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i24, i25, $i27, $i29;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        if $i0 != 4 goto label01;

        r20 = null;

        goto label02;

     label01:
        r20 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: org.joda.time.PeriodType getPeriodType()>();

     label02:
        if r20 == null goto label03;

        $i21 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $z4 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>(r20, $i21);

        if $z4 != 0 goto label03;

        return 9223372036854775807L;

     label03:
        $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        tableswitch($i1)
        {
            case 0: goto label05;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label10;
            case 6: goto label11;
            case 7: goto label12;
            case 8: goto label13;
            case 9: goto label13;
            default: goto label04;
        };

     label04:
        return 9223372036854775807L;

     label05:
        $r19 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $i20 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r19);

        l22 = (long) $i20;

        goto label14;

     label06:
        $r18 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $i19 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r18);

        l22 = (long) $i19;

        goto label14;

     label07:
        $r17 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $i18 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r17);

        l22 = (long) $i18;

        goto label14;

     label08:
        $r16 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $i17 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r16);

        l22 = (long) $i17;

        goto label14;

     label09:
        $r15 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $i16 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r15);

        l22 = (long) $i16;

        goto label14;

     label10:
        $r14 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $i15 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r14);

        l22 = (long) $i15;

        goto label14;

     label11:
        $r13 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $i14 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r13);

        l22 = (long) $i14;

        goto label14;

     label12:
        $r12 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $i13 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r12);

        l22 = (long) $i13;

        goto label14;

     label13:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $i2 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r2);

        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $i3 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l4 = (long) $i2;

        $l6 = $l4 * 1000L;

        $l5 = (long) $i3;

        l22 = $l6 + $l5;

     label14:
        $b23 = l22 cmp 0L;

        if $b23 != 0 goto label24;

        $i7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        tableswitch($i7)
        {
            case 1: goto label20;
            case 2: goto label16;
            case 3: goto label24;
            case 4: goto label24;
            case 5: goto label15;
            default: goto label24;
        };

     label15:
        return 9223372036854775807L;

     label16:
        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isZero(org.joda.time.ReadablePeriod)>(r1);

        if $z0 == 0 goto label19;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $i8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $r5 = $r4[$i8];

        if $r5 != r0 goto label19;

        $i9 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        i24 = $i9 + 1;

     label17:
        if i24 > 9 goto label24;

        $z1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>(r20, i24);

        if $z1 == 0 goto label18;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r7 = $r6[i24];

        if $r7 == null goto label18;

        return 9223372036854775807L;

     label18:
        i24 = i24 + 1;

        goto label17;

     label19:
        return 9223372036854775807L;

     label20:
        $z2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isZero(org.joda.time.ReadablePeriod)>(r1);

        if $z2 == 0 goto label23;

        $r8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $i10 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $r9 = $r8[$i10];

        if $r9 != r0 goto label23;

        $i11 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i11, 8);

        $i27 = (int) -1;

        i25 = $i12 + $i27;

     label21:
        if i25 < 0 goto label24;

        if i25 > 9 goto label24;

        $z3 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>(r20, i25);

        if $z3 == 0 goto label22;

        $r10 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r11 = $r10[i25];

        if $r11 == null goto label22;

        return 9223372036854775807L;

     label22:
        $i29 = (int) -1;

        i25 = i25 + $i29;

        goto label21;

     label23:
        return 9223372036854775807L;

     label24:
        return l22;
    }

    boolean isZero(org.joda.time.ReadablePeriod)
    {
        org.joda.time.ReadablePeriod r0;
        int $i0, $i1, i2;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r1;

        r1 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r0 := @parameter0: org.joda.time.ReadablePeriod;

        i2 = 0;

        $i0 = interfaceinvoke r0.<org.joda.time.ReadablePeriod: int size()>();

     label1:
        if i2 >= $i0 goto label3;

        $i1 = interfaceinvoke r0.<org.joda.time.ReadablePeriod: int getValue(int)>(i2);

        if $i1 == 0 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    boolean isSupported(org.joda.time.PeriodType, int)
    {
        org.joda.time.PeriodType r0;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.joda.time.DurationFieldType $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r11;

        r11 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r0 := @parameter0: org.joda.time.PeriodType;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label10;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        $r10 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $z9 = virtualinvoke r0.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r10);

        return $z9;

     label03:
        $r9 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $z8 = virtualinvoke r0.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r9);

        return $z8;

     label04:
        $r8 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $z7 = virtualinvoke r0.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r8);

        return $z7;

     label05:
        $r7 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $z6 = virtualinvoke r0.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r7);

        return $z6;

     label06:
        $r6 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $z5 = virtualinvoke r0.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r6);

        return $z5;

     label07:
        $r5 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $z4 = virtualinvoke r0.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r5);

        return $z4;

     label08:
        $r4 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $z3 = virtualinvoke r0.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r4);

        return $z3;

     label09:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $z2 = virtualinvoke r0.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r3);

        return $z2;

     label10:
        $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $z0 = virtualinvoke r0.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r1);

        if $z0 != 0 goto label11;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $z1 = virtualinvoke r0.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        if $z1 == 0 goto label12;

     label11:
        $z10 = 1;

        goto label13;

     label12:
        $z10 = 0;

     label13:
        return $z10;
    }

    void setFieldValue(org.joda.time.ReadWritablePeriod, int, int)
    {
        org.joda.time.ReadWritablePeriod r0;
        int i0, i1;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r1;

        r1 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r0 := @parameter0: org.joda.time.ReadWritablePeriod;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            default: goto label01;
        };

     label01:
        goto label10;

     label02:
        interfaceinvoke r0.<org.joda.time.ReadWritablePeriod: void setYears(int)>(i1);

        goto label10;

     label03:
        interfaceinvoke r0.<org.joda.time.ReadWritablePeriod: void setMonths(int)>(i1);

        goto label10;

     label04:
        interfaceinvoke r0.<org.joda.time.ReadWritablePeriod: void setWeeks(int)>(i1);

        goto label10;

     label05:
        interfaceinvoke r0.<org.joda.time.ReadWritablePeriod: void setDays(int)>(i1);

        goto label10;

     label06:
        interfaceinvoke r0.<org.joda.time.ReadWritablePeriod: void setHours(int)>(i1);

        goto label10;

     label07:
        interfaceinvoke r0.<org.joda.time.ReadWritablePeriod: void setMinutes(int)>(i1);

        goto label10;

     label08:
        interfaceinvoke r0.<org.joda.time.ReadWritablePeriod: void setSeconds(int)>(i1);

        goto label10;

     label09:
        interfaceinvoke r0.<org.joda.time.ReadWritablePeriod: void setMillis(int)>(i1);

     label10:
        return;
    }

    int getFieldType()
    {
        int $i0;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        return $i0;
    }
}
