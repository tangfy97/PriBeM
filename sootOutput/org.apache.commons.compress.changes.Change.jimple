class org.apache.commons.compress.changes.Change extends java.lang.Object
{
    private final java.lang.String targetFile;
    private final org.apache.commons.compress.archivers.ArchiveEntry entry;
    private final java.io.InputStream input;
    private final boolean replaceMode;
    private final int type;
    static final int TYPE_DELETE;
    static final int TYPE_ADD;
    static final int TYPE_MOVE;
    static final int TYPE_DELETE_DIR;

    void <init>(java.lang.String, int)
    {
        org.apache.commons.compress.changes.Change r0;
        int i0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.commons.compress.changes.Change;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.commons.compress.changes.Change: java.lang.String targetFile> = r1;

        r0.<org.apache.commons.compress.changes.Change: int type> = i0;

        r0.<org.apache.commons.compress.changes.Change: java.io.InputStream input> = null;

        r0.<org.apache.commons.compress.changes.Change: org.apache.commons.compress.archivers.ArchiveEntry entry> = null;

        r0.<org.apache.commons.compress.changes.Change: boolean replaceMode> = 1;

        return;
    }

    void <init>(org.apache.commons.compress.archivers.ArchiveEntry, java.io.InputStream, boolean)
    {
        org.apache.commons.compress.archivers.ArchiveEntry r1;
        org.apache.commons.compress.changes.Change r0;
        java.lang.NullPointerException $r2;
        java.io.InputStream r3;
        boolean z0;

        r0 := @this: org.apache.commons.compress.changes.Change;

        r1 := @parameter0: org.apache.commons.compress.archivers.ArchiveEntry;

        r3 := @parameter1: java.io.InputStream;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label2:
        r0.<org.apache.commons.compress.changes.Change: org.apache.commons.compress.archivers.ArchiveEntry entry> = r1;

        r0.<org.apache.commons.compress.changes.Change: java.io.InputStream input> = r3;

        r0.<org.apache.commons.compress.changes.Change: int type> = 2;

        r0.<org.apache.commons.compress.changes.Change: java.lang.String targetFile> = null;

        r0.<org.apache.commons.compress.changes.Change: boolean replaceMode> = z0;

        return;
    }

    org.apache.commons.compress.archivers.ArchiveEntry getEntry()
    {
        org.apache.commons.compress.changes.Change r0;
        org.apache.commons.compress.archivers.ArchiveEntry $r1;

        r0 := @this: org.apache.commons.compress.changes.Change;

        $r1 = r0.<org.apache.commons.compress.changes.Change: org.apache.commons.compress.archivers.ArchiveEntry entry>;

        return $r1;
    }

    java.io.InputStream getInput()
    {
        org.apache.commons.compress.changes.Change r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.compress.changes.Change;

        $r1 = r0.<org.apache.commons.compress.changes.Change: java.io.InputStream input>;

        return $r1;
    }

    java.lang.String targetFile()
    {
        org.apache.commons.compress.changes.Change r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.compress.changes.Change;

        $r1 = r0.<org.apache.commons.compress.changes.Change: java.lang.String targetFile>;

        return $r1;
    }

    int type()
    {
        org.apache.commons.compress.changes.Change r0;
        int $i0;

        r0 := @this: org.apache.commons.compress.changes.Change;

        $i0 = r0.<org.apache.commons.compress.changes.Change: int type>;

        return $i0;
    }

    boolean isReplaceMode()
    {
        org.apache.commons.compress.changes.Change r0;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.changes.Change;

        $z0 = r0.<org.apache.commons.compress.changes.Change: boolean replaceMode>;

        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.compress.changes.Change: int TYPE_DELETE_DIR> = 4;

        <org.apache.commons.compress.changes.Change: int TYPE_MOVE> = 3;

        <org.apache.commons.compress.changes.Change: int TYPE_ADD> = 2;

        <org.apache.commons.compress.changes.Change: int TYPE_DELETE> = 1;

        return;
    }
}
