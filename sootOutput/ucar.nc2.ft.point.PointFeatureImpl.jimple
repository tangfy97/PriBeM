public abstract class ucar.nc2.ft.point.PointFeatureImpl extends java.lang.Object implements ucar.nc2.ft.PointFeature, java.lang.Comparable
{
    protected ucar.unidata.geoloc.EarthLocation location;
    protected double obsTime;
    protected double nomTime;
    protected ucar.nc2.units.DateUnit timeUnit;

    public void <init>(ucar.nc2.units.DateUnit)
    {
        ucar.nc2.units.DateUnit r1;
        ucar.nc2.ft.point.PointFeatureImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        r1 := @parameter0: ucar.nc2.units.DateUnit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.point.PointFeatureImpl: ucar.nc2.units.DateUnit timeUnit> = r1;

        return;
    }

    public void <init>(ucar.unidata.geoloc.EarthLocation, double, double, ucar.nc2.units.DateUnit)
    {
        ucar.nc2.ft.point.PointFeatureImpl r0;
        byte $b0;
        ucar.unidata.geoloc.EarthLocation r1;
        ucar.nc2.units.DateUnit r2;
        double d0, d1, $d2;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        r1 := @parameter0: ucar.unidata.geoloc.EarthLocation;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: ucar.nc2.units.DateUnit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.point.PointFeatureImpl: ucar.unidata.geoloc.EarthLocation location> = r1;

        r0.<ucar.nc2.ft.point.PointFeatureImpl: double obsTime> = d0;

        $b0 = d1 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d2 = d0;

        goto label2;

     label1:
        $d2 = d1;

     label2:
        r0.<ucar.nc2.ft.point.PointFeatureImpl: double nomTime> = $d2;

        r0.<ucar.nc2.ft.point.PointFeatureImpl: ucar.nc2.units.DateUnit timeUnit> = r2;

        return;
    }

    public ucar.unidata.geoloc.EarthLocation getLocation()
    {
        ucar.nc2.ft.point.PointFeatureImpl r0;
        ucar.unidata.geoloc.EarthLocation $r1;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointFeatureImpl: ucar.unidata.geoloc.EarthLocation location>;

        return $r1;
    }

    public double getNominalTime()
    {
        ucar.nc2.ft.point.PointFeatureImpl r0;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        $d0 = r0.<ucar.nc2.ft.point.PointFeatureImpl: double nomTime>;

        return $d0;
    }

    public double getObservationTime()
    {
        ucar.nc2.ft.point.PointFeatureImpl r0;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        $d0 = r0.<ucar.nc2.ft.point.PointFeatureImpl: double obsTime>;

        return $d0;
    }

    public java.lang.String getZcoordUnits()
    {
        ucar.nc2.ft.point.PointFeatureImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        return "meters";
    }

    public java.lang.String getDescription()
    {
        ucar.nc2.ft.point.PointFeatureImpl r0;
        java.lang.String $r2;
        ucar.unidata.geoloc.EarthLocation $r1;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointFeatureImpl: ucar.unidata.geoloc.EarthLocation location>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public java.util.Date getObservationTimeAsDate()
    {
        ucar.nc2.ft.point.PointFeatureImpl r0;
        java.util.Date $r2;
        ucar.nc2.units.DateUnit $r1;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointFeatureImpl: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = virtualinvoke r0.<ucar.nc2.ft.point.PointFeatureImpl: double getObservationTime()>();

        $r2 = virtualinvoke $r1.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        return $r2;
    }

    public java.util.Date getNominalTimeAsDate()
    {
        ucar.nc2.ft.point.PointFeatureImpl r0;
        java.util.Date $r2;
        ucar.nc2.units.DateUnit $r1;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointFeatureImpl: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = virtualinvoke r0.<ucar.nc2.ft.point.PointFeatureImpl: double getNominalTime()>();

        $r2 = virtualinvoke $r1.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        return $r2;
    }

    public ucar.nc2.units.DateUnit getTimeUnit()
    {
        ucar.nc2.units.DateUnit $r1;
        ucar.nc2.ft.point.PointFeatureImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointFeatureImpl: ucar.nc2.units.DateUnit timeUnit>;

        return $r1;
    }

    public int compareTo(ucar.nc2.ft.PointFeature)
    {
        ucar.nc2.ft.point.PointFeatureImpl r0;
        ucar.nc2.ft.PointFeature r1;
        byte $b0, $b1;
        int $i2, $i4, $i5;
        double $d0, $d1, $d2, $d3;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        r1 := @parameter0: ucar.nc2.ft.PointFeature;

        $d0 = r0.<ucar.nc2.ft.point.PointFeatureImpl: double obsTime>;

        $d1 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: double getObservationTime()>();

        $b0 = $d0 cmpg $d1;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        $i4 = (int) -1;

        return $i4;

     label1:
        $d2 = r0.<ucar.nc2.ft.point.PointFeatureImpl: double obsTime>;

        $d3 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: double getObservationTime()>();

        $b1 = $d2 cmpl $d3;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r13;
        double $d0, $d1;
        ucar.nc2.ft.point.PointFeatureImpl r2;
        ucar.nc2.units.DateUnit $r10;
        ucar.unidata.geoloc.EarthLocation $r3;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12;

        r2 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PointFeatureImpl{location=");

        $r3 = r2.<ucar.nc2.ft.point.PointFeatureImpl: ucar.unidata.geoloc.EarthLocation location>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", obsTime=");

        $d0 = r2.<ucar.nc2.ft.point.PointFeatureImpl: double obsTime>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nomTime=");

        $d1 = r2.<ucar.nc2.ft.point.PointFeatureImpl: double nomTime>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timeUnit=");

        $r10 = r2.<ucar.nc2.ft.point.PointFeatureImpl: ucar.nc2.units.DateUnit timeUnit>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ucar.nc2.ft.PointFeature $r2;
        ucar.nc2.ft.point.PointFeatureImpl r0;
        int $i0;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.ft.point.PointFeatureImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.ft.PointFeature) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.ft.point.PointFeatureImpl: int compareTo(ucar.nc2.ft.PointFeature)>($r2);

        return $i0;
    }
}
