public final enum class org.aspectj.lang.reflect.AdviceKind extends java.lang.Enum
{
    public static final enum org.aspectj.lang.reflect.AdviceKind BEFORE;
    public static final enum org.aspectj.lang.reflect.AdviceKind AFTER;
    public static final enum org.aspectj.lang.reflect.AdviceKind AFTER_RETURNING;
    public static final enum org.aspectj.lang.reflect.AdviceKind AFTER_THROWING;
    public static final enum org.aspectj.lang.reflect.AdviceKind AROUND;
    private static final org.aspectj.lang.reflect.AdviceKind[] $VALUES;

    public static org.aspectj.lang.reflect.AdviceKind[] values()
    {
        org.aspectj.lang.reflect.AdviceKind[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.aspectj.lang.reflect.AdviceKind[]) $r1;

        return $r2;
    }

    public static org.aspectj.lang.reflect.AdviceKind valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.aspectj.lang.reflect.AdviceKind $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/aspectj/lang/reflect/AdviceKind;", r0);

        $r2 = (org.aspectj.lang.reflect.AdviceKind) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.aspectj.lang.reflect.AdviceKind r0;

        r0 := @this: org.aspectj.lang.reflect.AdviceKind;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.aspectj.lang.reflect.AdviceKind $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        org.aspectj.lang.reflect.AdviceKind[] $r5;

        $r0 = new org.aspectj.lang.reflect.AdviceKind;

        specialinvoke $r0.<org.aspectj.lang.reflect.AdviceKind: void <init>(java.lang.String,int)>("BEFORE", 0);

        <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind BEFORE> = $r0;

        $r1 = new org.aspectj.lang.reflect.AdviceKind;

        specialinvoke $r1.<org.aspectj.lang.reflect.AdviceKind: void <init>(java.lang.String,int)>("AFTER", 1);

        <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AFTER> = $r1;

        $r2 = new org.aspectj.lang.reflect.AdviceKind;

        specialinvoke $r2.<org.aspectj.lang.reflect.AdviceKind: void <init>(java.lang.String,int)>("AFTER_RETURNING", 2);

        <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AFTER_RETURNING> = $r2;

        $r3 = new org.aspectj.lang.reflect.AdviceKind;

        specialinvoke $r3.<org.aspectj.lang.reflect.AdviceKind: void <init>(java.lang.String,int)>("AFTER_THROWING", 3);

        <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AFTER_THROWING> = $r3;

        $r4 = new org.aspectj.lang.reflect.AdviceKind;

        specialinvoke $r4.<org.aspectj.lang.reflect.AdviceKind: void <init>(java.lang.String,int)>("AROUND", 4);

        <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AROUND> = $r4;

        $r5 = newarray (org.aspectj.lang.reflect.AdviceKind)[5];

        $r6 = <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind BEFORE>;

        $r5[0] = $r6;

        $r7 = <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AFTER>;

        $r5[1] = $r7;

        $r8 = <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AFTER_RETURNING>;

        $r5[2] = $r8;

        $r9 = <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AFTER_THROWING>;

        $r5[3] = $r9;

        $r10 = <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AROUND>;

        $r5[4] = $r10;

        <org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind[] $VALUES> = $r5;

        return;
    }
}
