public class com.hp.hpl.jena.sparql.engine.iterator.QueryIterDiff extends com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft
{

    public void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterDiff r0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1, r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterDiff;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r2 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r3 := @parameter2: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1, r2, r3);

        return;
    }

    protected com.hp.hpl.jena.sparql.engine.binding.Binding getNextSlot(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r3, r5;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterDiff r0;
        java.lang.Object $r4;
        com.hp.hpl.jena.sparql.algebra.Table $r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r2;
        boolean $z0, $z1, z2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterDiff;

        r3 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        z2 = 1;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterDiff: com.hp.hpl.jena.sparql.algebra.Table tableRight>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.algebra.Table: com.hp.hpl.jena.sparql.engine.QueryIterator iterator(com.hp.hpl.jena.sparql.engine.ExecutionContext)>(null);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.sparql.engine.binding.Binding) $r4;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: boolean compatible(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r3, r5);

        if $z1 == 0 goto label2;

        z2 = 0;

        goto label3;

     label2:
        goto label1;

     label3:
        if z2 == 0 goto label4;

        return r3;

     label4:
        return null;
    }
}
