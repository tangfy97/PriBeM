class com.mongodb.RawDBObject$Element extends java.lang.Object
{
    final int _start;
    final byte _type;
    final java.lang.String _name;
    final int _dataStart;
    final int _size;
    java.lang.Object _cached;
    final com.mongodb.RawDBObject this$0;

    void <init>(com.mongodb.RawDBObject, int)
    {
        java.nio.ByteBuffer $r2, $r4, $r5, $r6;
        byte $b2, $b10, $b26, $b27;
        int[] r3;
        com.mongodb.RawDBObject$Element r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9, $r10, $r14, $r16, $r17, $r18, $r19, $r22, $r23;
        com.mongodb.RawDBObject r1;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i28, i29, $i30, $i31, $i32;
        java.lang.String $r11, $r15, $r20, $r21;
        java.io.PrintStream $r13;
        java.lang.RuntimeException $r24;

        r0 := @this: com.mongodb.RawDBObject$Element;

        r1 := @parameter0: com.mongodb.RawDBObject;

        i0 := @parameter1: int;

        r0.<com.mongodb.RawDBObject$Element: com.mongodb.RawDBObject this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mongodb.RawDBObject$Element: int _start> = i0;

        $r2 = r1.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i1 = r0.<com.mongodb.RawDBObject$Element: int _start>;

        $b2 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get(int)>($i1);

        r0.<com.mongodb.RawDBObject$Element: byte _type> = $b2;

        r3 = newarray (int)[1];

        $z0 = virtualinvoke r0.<com.mongodb.RawDBObject$Element: boolean eoo()>();

        if $z0 == 0 goto label01;

        $r21 = "";

        goto label02;

     label01:
        $i3 = r0.<com.mongodb.RawDBObject$Element: int _start>;

        $i4 = $i3 + 1;

        $r21 = virtualinvoke r1.<com.mongodb.RawDBObject: java.lang.String _readCStr(int,int[])>($i4, r3);

     label02:
        r0.<com.mongodb.RawDBObject$Element: java.lang.String _name> = $r21;

        $z1 = <com.mongodb.RawDBObject: boolean DEBUG>;

        if $z1 == 0 goto label03;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name [");

        $r15 = r0.<com.mongodb.RawDBObject$Element: java.lang.String _name>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] type [");

        $b27 = r0.<com.mongodb.RawDBObject$Element: byte _type>;

        $i30 = (int) $b27;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label03:
        $i6 = r3[0];

        $i5 = r0.<com.mongodb.RawDBObject$Element: int _start>;

        $i7 = $i6 - $i5;

        $i28 = 1 + $i7;

        i29 = $i28;

        $i8 = r0.<com.mongodb.RawDBObject$Element: int _start>;

        $i9 = $i8 + $i28;

        r0.<com.mongodb.RawDBObject$Element: int _dataStart> = $i9;

        $b10 = r0.<com.mongodb.RawDBObject$Element: byte _type>;

        $i31 = (int) $b10;

        lookupswitch($i31)
        {
            case -1: goto label04;
            case 0: goto label04;
            case 1: goto label06;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label04;
            case 7: goto label08;
            case 8: goto label05;
            case 9: goto label06;
            case 10: goto label04;
            case 11: goto label13;
            case 12: goto label09;
            case 13: goto label10;
            case 14: goto label10;
            case 15: goto label11;
            case 16: goto label07;
            case 17: goto label14;
            case 18: goto label06;
            case 127: goto label04;
            default: goto label15;
        };

     label04:
        goto label16;

     label05:
        i29 = $i28 + 1;

        goto label16;

     label06:
        i29 = $i28 + 8;

        goto label16;

     label07:
        i29 = $i28 + 4;

        goto label16;

     label08:
        i29 = $i28 + 12;

        goto label16;

     label09:
        i29 = $i28 + 12;

     label10:
        $r4 = r1.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i11 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $i12 = virtualinvoke $r4.<java.nio.ByteBuffer: int getInt(int)>($i11);

        $i13 = 4 + $i12;

        i29 = i29 + $i13;

        goto label16;

     label11:
        $r6 = r1.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i24 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $i25 = virtualinvoke $r6.<java.nio.ByteBuffer: int getInt(int)>($i24);

        i29 = $i28 + $i25;

        goto label16;

     label12:
        $r5 = r1.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i20 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $i21 = virtualinvoke $r5.<java.nio.ByteBuffer: int getInt(int)>($i20);

        $i22 = 4 + $i21;

        $i23 = $i22 + 1;

        i29 = $i28 + $i23;

        goto label16;

     label13:
        $i14 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $i15 = virtualinvoke r1.<com.mongodb.RawDBObject: int _cStrLength(int)>($i14);

        $i16 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $i17 = $i16 + $i15;

        $i18 = virtualinvoke r1.<com.mongodb.RawDBObject: int _cStrLength(int)>($i17);

        $i19 = $i15 + $i18;

        i29 = $i28 + $i19;

        goto label16;

     label14:
        i29 = $i28 + 8;

        goto label16;

     label15:
        $r24 = new java.lang.RuntimeException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RawDBObject can\'t size type ");

        $b26 = r0.<com.mongodb.RawDBObject$Element: byte _type>;

        $i32 = (int) $b26;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i32);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r24;

     label16:
        r0.<com.mongodb.RawDBObject$Element: int _size> = i29;

        return;
    }

    java.lang.String fieldName()
    {
        java.lang.String $r1;
        com.mongodb.RawDBObject$Element r0;

        r0 := @this: com.mongodb.RawDBObject$Element;

        $r1 = r0.<com.mongodb.RawDBObject$Element: java.lang.String _name>;

        return $r1;
    }

    boolean eoo()
    {
        byte $b0, $b1;
        int $i2;
        com.mongodb.RawDBObject$Element r0;
        boolean $z0;

        r0 := @this: com.mongodb.RawDBObject$Element;

        $b0 = r0.<com.mongodb.RawDBObject$Element: byte _type>;

        if $b0 == 0 goto label1;

        $b1 = r0.<com.mongodb.RawDBObject$Element: byte _type>;

        $i2 = (int) $b1;

        if $i2 != 127 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    int size()
    {
        int $i0;
        com.mongodb.RawDBObject$Element r0;

        r0 := @this: com.mongodb.RawDBObject$Element;

        $i0 = r0.<com.mongodb.RawDBObject$Element: int _size>;

        return $i0;
    }

    java.lang.Object getObject()
    {
        java.util.Date $r35;
        java.lang.Integer $r4;
        java.nio.ByteBuffer $r3, $r9, $r11, $r15, $r17, $r19, $r25;
        byte $b0, $b6, $b17;
        com.mongodb.RawDBObject$Element r0;
        boolean $z0;
        java.lang.StringBuilder $r29, $r30, $r39;
        java.lang.Double $r26;
        long $l4;
        com.mongodb.RawDBObject $r2, $r8, $r10, $r14, $r16, $r18, $r22, $r24;
        int $i1, $i2, $i3, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20;
        java.lang.Boolean $r12;
        java.lang.String $r23, $r31;
        double $d0;
        java.lang.RuntimeException $r34, $r36, $r37, $r38, $r40;
        org.bson.types.ObjectId $r33;
        java.lang.Object $r1, $r32;

        r0 := @this: com.mongodb.RawDBObject$Element;

        $r1 = r0.<com.mongodb.RawDBObject$Element: java.lang.Object _cached>;

        if $r1 == null goto label01;

        $r32 = r0.<com.mongodb.RawDBObject$Element: java.lang.Object _cached>;

        return $r32;

     label01:
        $b0 = r0.<com.mongodb.RawDBObject$Element: byte _type>;

        $i18 = (int) $b0;

        lookupswitch($i18)
        {
            case -1: goto label14;
            case 0: goto label14;
            case 1: goto label02;
            case 2: goto label06;
            case 3: goto label13;
            case 4: goto label13;
            case 5: goto label09;
            case 6: goto label14;
            case 7: goto label04;
            case 8: goto label10;
            case 9: goto label07;
            case 10: goto label14;
            case 11: goto label08;
            case 13: goto label05;
            case 14: goto label06;
            case 15: goto label05;
            case 16: goto label03;
            case 127: goto label14;
            default: goto label15;
        };

     label02:
        $r24 = r0.<com.mongodb.RawDBObject$Element: com.mongodb.RawDBObject this$0>;

        $r25 = $r24.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i16 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $d0 = virtualinvoke $r25.<java.nio.ByteBuffer: double getDouble(int)>($i16);

        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r26;

     label03:
        $r2 = r0.<com.mongodb.RawDBObject$Element: com.mongodb.RawDBObject this$0>;

        $r3 = $r2.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i1 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $i2 = virtualinvoke $r3.<java.nio.ByteBuffer: int getInt(int)>($i1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r4;

     label04:
        $r33 = new org.bson.types.ObjectId;

        $r14 = r0.<com.mongodb.RawDBObject$Element: com.mongodb.RawDBObject this$0>;

        $r15 = $r14.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i7 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $i8 = virtualinvoke $r15.<java.nio.ByteBuffer: int getInt(int)>($i7);

        $r16 = r0.<com.mongodb.RawDBObject$Element: com.mongodb.RawDBObject this$0>;

        $r17 = $r16.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i9 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $i10 = $i9 + 4;

        $i11 = virtualinvoke $r17.<java.nio.ByteBuffer: int getInt(int)>($i10);

        $r18 = r0.<com.mongodb.RawDBObject$Element: com.mongodb.RawDBObject this$0>;

        $r19 = $r18.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i12 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $i13 = $i12 + 8;

        $i14 = virtualinvoke $r19.<java.nio.ByteBuffer: int getInt(int)>($i13);

        specialinvoke $r33.<org.bson.types.ObjectId: void <init>(int,int,int)>($i8, $i11, $i14);

        return $r33;

     label05:
        $r34 = new java.lang.RuntimeException;

        specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.String)>("can\'t handle code");

        throw $r34;

     label06:
        $r22 = r0.<com.mongodb.RawDBObject$Element: com.mongodb.RawDBObject this$0>;

        $i15 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $r23 = virtualinvoke $r22.<com.mongodb.RawDBObject: java.lang.String _readJavaString(int)>($i15);

        return $r23;

     label07:
        $r35 = new java.util.Date;

        $r8 = r0.<com.mongodb.RawDBObject$Element: com.mongodb.RawDBObject this$0>;

        $r9 = $r8.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i3 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $l4 = virtualinvoke $r9.<java.nio.ByteBuffer: long getLong(int)>($i3);

        specialinvoke $r35.<java.util.Date: void <init>(long)>($l4);

        return $r35;

     label08:
        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>("can\'t handle regex");

        throw $r36;

     label09:
        $r37 = new java.lang.RuntimeException;

        specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.String)>("can\'t inspect binary in db");

        throw $r37;

     label10:
        $r10 = r0.<com.mongodb.RawDBObject$Element: com.mongodb.RawDBObject this$0>;

        $r11 = $r10.<com.mongodb.RawDBObject: java.nio.ByteBuffer _buf>;

        $i5 = r0.<com.mongodb.RawDBObject$Element: int _dataStart>;

        $b6 = virtualinvoke $r11.<java.nio.ByteBuffer: byte get(int)>($i5);

        $i19 = (int) $b6;

        if $i19 <= 0 goto label11;

        $z0 = 1;

        goto label12;

     label11:
        $z0 = 0;

     label12:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r12;

     label13:
        $r38 = new java.lang.RuntimeException;

        specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.String)>("can\'t handle emebdded objects");

        throw $r38;

     label14:
        return null;

     label15:
        $r40 = new java.lang.RuntimeException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t decode type ");

        $b17 = r0.<com.mongodb.RawDBObject$Element: byte _type>;

        $i20 = (int) $b17;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String)>($r31);

        throw $r40;
    }
}
