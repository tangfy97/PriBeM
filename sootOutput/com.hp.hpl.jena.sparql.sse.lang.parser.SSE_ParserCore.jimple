public class com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore extends com.hp.hpl.jena.sparql.sse.lang.ParserSSEBase implements com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreConstants
{
    public com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source;
    com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream jj_input_stream;
    public com.hp.hpl.jena.sparql.sse.lang.parser.Token token;
    public com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_nt;
    private int jj_ntk;
    private int jj_gen;
    private final int[] jj_la1;
    private static int[] jj_la1_0;
    private static int[] jj_la1_1;
    private java.util.List jj_expentries;
    private int[] jj_expentry;
    private int jj_kind;

    public final void parse() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        int[] $r1;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void parseStart()>();

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 1: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r1[0] = $i1;

        goto label7;

     label6:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(1);

        goto label1;

     label7:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void TermOrList()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(0);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void parseFinish()>();

        return;
    }

    public final void term() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void parseStart()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void Term()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(0);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void parseFinish()>();

        return;
    }

    public final void TermOrList() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r4;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label02;

     label01:
        $i4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label02:
        tableswitch($i4)
        {
            case 4: goto label03;
            case 5: goto label03;
            case 6: goto label03;
            case 7: goto label03;
            case 8: goto label03;
            case 9: goto label11;
            case 10: goto label03;
            case 11: goto label03;
            case 12: goto label03;
            case 13: goto label11;
            case 14: goto label11;
            case 15: goto label11;
            case 16: goto label11;
            case 17: goto label03;
            case 18: goto label03;
            case 19: goto label03;
            case 20: goto label03;
            case 21: goto label10;
            case 22: goto label11;
            case 23: goto label11;
            case 24: goto label11;
            case 25: goto label10;
            case 26: goto label11;
            case 27: goto label11;
            case 28: goto label11;
            case 29: goto label11;
            case 30: goto label11;
            case 31: goto label11;
            case 32: goto label11;
            case 33: goto label11;
            case 34: goto label11;
            case 35: goto label11;
            case 36: goto label11;
            case 37: goto label11;
            case 38: goto label11;
            case 39: goto label11;
            case 40: goto label11;
            case 41: goto label03;
            default: goto label11;
        };

     label03:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void Term()>();

     label04:
        $i1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label05;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label06;

     label05:
        $i5 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label06:
        lookupswitch($i5)
        {
            case 1: goto label07;
            default: goto label08;
        };

     label07:
        goto label09;

     label08:
        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r1[1] = $i2;

        goto label12;

     label09:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(1);

        goto label04;

     label10:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void List()>();

        goto label12;

     label11:
        $r2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r2[2] = $i3;

        $i11 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>($i11);

        $r4 = new com.hp.hpl.jena.sparql.sse.lang.parser.ParseException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: void <init>()>();

        throw $r4;

     label12:
        return;
    }

    public final void List() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r11;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1, $r3, $r5, $r7;
        int[] $r2, $r4, $r6, $r8, $r9;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i26, $i28, $i30, $i32, $i34;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i24 = (int) -1;

        if $i0 != $i24 goto label01;

        $i18 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label02;

     label01:
        $i18 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label02:
        lookupswitch($i18)
        {
            case 21: goto label03;
            case 25: goto label18;
            default: goto label33;
        };

     label03:
        $r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(21);

     label04:
        $i9 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i26 = (int) -1;

        if $i9 != $i26 goto label05;

        $i19 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label06;

     label05:
        $i19 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label06:
        lookupswitch($i19)
        {
            case 1: goto label07;
            default: goto label08;
        };

     label07:
        goto label09;

     label08:
        $r6 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i10 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r6[3] = $i10;

        goto label10;

     label09:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(1);

        goto label04;

     label10:
        $i12 = $r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i11 = $r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void listStart(int,int)>($i12, $i11);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void BareList()>();

        $r7 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(22);

     label11:
        $i13 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i28 = (int) -1;

        if $i13 != $i28 goto label12;

        $i20 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label13;

     label12:
        $i20 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label13:
        lookupswitch($i20)
        {
            case 1: goto label14;
            default: goto label15;
        };

     label14:
        goto label16;

     label15:
        $r8 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i14 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r8[4] = $i14;

        goto label17;

     label16:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(1);

        goto label11;

     label17:
        $i16 = $r7.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i15 = $r7.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void listFinish(int,int)>($i16, $i15);

        goto label34;

     label18:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(25);

     label19:
        $i1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i30 = (int) -1;

        if $i1 != $i30 goto label20;

        $i21 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label21;

     label20:
        $i21 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label21:
        lookupswitch($i21)
        {
            case 1: goto label22;
            default: goto label23;
        };

     label22:
        goto label24;

     label23:
        $r2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r2[5] = $i2;

        goto label25;

     label24:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(1);

        goto label19;

     label25:
        $i4 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i3 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void listStart(int,int)>($i4, $i3);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void BareList()>();

        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(26);

     label26:
        $i5 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i32 = (int) -1;

        if $i5 != $i32 goto label27;

        $i22 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label28;

     label27:
        $i22 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label28:
        lookupswitch($i22)
        {
            case 1: goto label29;
            default: goto label30;
        };

     label29:
        goto label31;

     label30:
        $r4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i6 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r4[6] = $i6;

        goto label32;

     label31:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(1);

        goto label26;

     label32:
        $i8 = $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i7 = $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void listFinish(int,int)>($i8, $i7);

        goto label34;

     label33:
        $r9 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i17 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r9[7] = $i17;

        $i34 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>($i34);

        $r11 = new com.hp.hpl.jena.sparql.sse.lang.parser.ParseException;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: void <init>()>();

        throw $r11;

     label34:
        return;
    }

    public final void BareList() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        int[] $r1;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label3:
        tableswitch($i2)
        {
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label4;
            case 8: goto label4;
            case 9: goto label5;
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label4;
            case 13: goto label5;
            case 14: goto label5;
            case 15: goto label5;
            case 16: goto label5;
            case 17: goto label4;
            case 18: goto label4;
            case 19: goto label4;
            case 20: goto label4;
            case 21: goto label4;
            case 22: goto label5;
            case 23: goto label5;
            case 24: goto label5;
            case 25: goto label4;
            case 26: goto label5;
            case 27: goto label5;
            case 28: goto label5;
            case 29: goto label5;
            case 30: goto label5;
            case 31: goto label5;
            case 32: goto label5;
            case 33: goto label5;
            case 34: goto label5;
            case 35: goto label5;
            case 36: goto label5;
            case 37: goto label5;
            case 38: goto label5;
            case 39: goto label5;
            case 40: goto label5;
            case 41: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r1[8] = $i1;

        goto label7;

     label6:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void TermOrList()>();

        goto label1;

     label7:
        return;
    }

    public final void Term() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r3;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label01;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label02;

     label01:
        $i2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label02:
        tableswitch($i2)
        {
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label08;
            case 7: goto label06;
            case 8: goto label06;
            case 9: goto label09;
            case 10: goto label07;
            case 11: goto label07;
            case 12: goto label07;
            case 13: goto label09;
            case 14: goto label09;
            case 15: goto label09;
            case 16: goto label09;
            case 17: goto label07;
            case 18: goto label07;
            case 19: goto label07;
            case 20: goto label07;
            case 21: goto label09;
            case 22: goto label09;
            case 23: goto label09;
            case 24: goto label09;
            case 25: goto label09;
            case 26: goto label09;
            case 27: goto label09;
            case 28: goto label09;
            case 29: goto label09;
            case 30: goto label09;
            case 31: goto label09;
            case 32: goto label09;
            case 33: goto label09;
            case 34: goto label09;
            case 35: goto label09;
            case 36: goto label09;
            case 37: goto label09;
            case 38: goto label09;
            case 39: goto label09;
            case 40: goto label09;
            case 41: goto label03;
            default: goto label09;
        };

     label03:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void Symbol()>();

        goto label10;

     label04:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void IRIref()>();

        goto label10;

     label05:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void PrefixedName()>();

        goto label10;

     label06:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void Var()>();

        goto label10;

     label07:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void Literal()>();

        goto label10;

     label08:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void BlankNode()>();

        goto label10;

     label09:
        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r1[9] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>($i6);

        $r3 = new com.hp.hpl.jena.sparql.sse.lang.parser.ParseException;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: void <init>()>();

        throw $r3;

     label10:
        return;
    }

    public final void Symbol() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        int $i0, $i1;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(41);

        $i1 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i0 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        $r2 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void emitSymbol(int,int,java.lang.String)>($i1, $i0, $r2);

        return;
    }

    public final void IRIref() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3, r4;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(4);

        r4 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String stripQuotes(java.lang.String)>(r4);

        $i1 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i0 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String unescapeStr(java.lang.String,int,int)>($r2, $i1, $i0);

        $i3 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i2 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void emitIRI(int,int,java.lang.String)>($i3, $i2, $r3);

        return;
    }

    public final void PrefixedName() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        int $i0, $i1;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(5);

        $i1 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i0 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        $r2 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void emitPName(int,int,java.lang.String)>($i1, $i0, $r2);

        return;
    }

    public final void Var() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r6;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token r5;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        java.lang.String $r1, $r2;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label2;

     label1:
        $i4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label2:
        lookupswitch($i4)
        {
            case 7: goto label3;
            case 8: goto label4;
            default: goto label5;
        };

     label3:
        r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(7);

        goto label6;

     label4:
        r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(8);

        goto label6;

     label5:
        $r3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r3[10] = $i3;

        $i8 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>($i8);

        $r6 = new com.hp.hpl.jena.sparql.sse.lang.parser.ParseException;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: void <init>()>();

        throw $r6;

     label6:
        $i1 = r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i2 = r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        $r1 = r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String stripChars(java.lang.String,int)>($r1, 1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void emitVar(int,int,java.lang.String)>($i1, $i2, $r2);

        return;
    }

    public final void Literal() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r3;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label4;
            case 13: goto label5;
            case 14: goto label5;
            case 15: goto label5;
            case 16: goto label5;
            case 17: goto label3;
            case 18: goto label3;
            case 19: goto label3;
            case 20: goto label3;
            default: goto label5;
        };

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void RDFLiteral()>();

        goto label6;

     label4:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void NumericLiteral()>();

        goto label6;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r1[11] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>($i6);

        $r3 = new com.hp.hpl.jena.sparql.sse.lang.parser.ParseException;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: void <init>()>();

        throw $r3;

     label6:
        return;
    }

    public final void BlankNode() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        int $i0, $i1;
        java.lang.String $r2, $r3;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(6);

        $i0 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i1 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        $r2 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String stripChars(java.lang.String,int)>($r2, 2);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void emitBNode(int,int,java.lang.String)>($i0, $i1, $r3);

        return;
    }

    public final void RDFLiteral() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r27, $r28, $r29;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1, $r3, $r5, $r6, $r13, $r15, $r17, r24;
        int[] $r8, $r10, $r12, $r19;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i17, $i19, $i21, $i23, $i25, $i27;
        java.lang.String $r2, $r4, $r7, $r14, $r16, $r18, r21, r22, r23, r25, $r26;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        r21 = null;

        r22 = null;

        r23 = null;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i15 = (int) -1;

        if $i0 != $i15 goto label01;

        $i7 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label02;

     label01:
        $i7 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label02:
        tableswitch($i7)
        {
            case 17: goto label03;
            case 18: goto label04;
            case 19: goto label05;
            case 20: goto label06;
            default: goto label07;
        };

     label03:
        $r17 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(17);

        r24 = $r17;

        $r18 = $r17.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        r25 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String stripQuotes(java.lang.String)>($r18);

        goto label08;

     label04:
        $r15 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(18);

        r24 = $r15;

        $r16 = $r15.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        r25 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String stripQuotes(java.lang.String)>($r16);

        goto label08;

     label05:
        $r13 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(19);

        r24 = $r13;

        $r14 = $r13.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        r25 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String stripQuotes3(java.lang.String)>($r14);

        goto label08;

     label06:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(20);

        r24 = $r1;

        $r2 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        r25 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String stripQuotes3(java.lang.String)>($r2);

        goto label08;

     label07:
        $r19 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i6 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r19[12] = $i6;

        $i17 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>($i17);

        $r27 = new com.hp.hpl.jena.sparql.sse.lang.parser.ParseException;

        specialinvoke $r27.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: void <init>()>();

        throw $r27;

     label08:
        $i8 = r24.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i9 = r24.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        $r26 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String unescapeStr(java.lang.String,int,int)>(r25, $i8, $i9);

        $i10 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i19 = (int) -1;

        if $i10 != $i19 goto label09;

        $i11 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label10;

     label09:
        $i11 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label10:
        lookupswitch($i11)
        {
            case 27: goto label11;
            case 28: goto label11;
            default: goto label22;
        };

     label11:
        $i1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i21 = (int) -1;

        if $i1 != $i21 goto label12;

        $i12 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label13;

     label12:
        $i12 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label13:
        lookupswitch($i12)
        {
            case 27: goto label15;
            case 28: goto label14;
            default: goto label21;
        };

     label14:
        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(28);

        $r4 = $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        r21 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String stripChars(java.lang.String,int)>($r4, 1);

        goto label23;

     label15:
        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(27);

        $i2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i23 = (int) -1;

        if $i2 != $i23 goto label16;

        $i13 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label17;

     label16:
        $i13 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label17:
        lookupswitch($i13)
        {
            case 4: goto label18;
            case 5: goto label19;
            default: goto label20;
        };

     label18:
        $r6 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(4);

        $r7 = $r6.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        r22 = staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String stripQuotes(java.lang.String)>($r7);

        goto label23;

     label19:
        $r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(5);

        r23 = $r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        goto label23;

     label20:
        $r8 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r8[13] = $i3;

        $i25 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>($i25);

        $r28 = new com.hp.hpl.jena.sparql.sse.lang.parser.ParseException;

        specialinvoke $r28.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: void <init>()>();

        throw $r28;

     label21:
        $r10 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r10[14] = $i4;

        $i27 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>($i27);

        $r29 = new com.hp.hpl.jena.sparql.sse.lang.parser.ParseException;

        specialinvoke $r29.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: void <init>()>();

        throw $r29;

     label22:
        $r12 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r12[15] = $i5;

     label23:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void emitLiteral(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($i8, $i9, $r26, r21, r22, r23);

        return;
    }

    public final void NumericLiteral() throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r9;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1, $r3, $r5;
        int[] $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12;
        java.lang.String $r2, $r4, $r6;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

        $i10 = (int) -1;

        if $i0 != $i10 goto label1;

        $i8 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk()>();

        goto label2;

     label1:
        $i8 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk>;

     label2:
        tableswitch($i8)
        {
            case 10: goto label3;
            case 11: goto label4;
            case 12: goto label5;
            default: goto label6;
        };

     label3:
        $r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(10);

        $i6 = $r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i5 = $r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        $r6 = $r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void emitLiteralInteger(int,int,java.lang.String)>($i6, $i5, $r6);

        goto label7;

     label4:
        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(11);

        $i4 = $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i3 = $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        $r4 = $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void emitLiteralDecimal(int,int,java.lang.String)>($i4, $i3, $r4);

        goto label7;

     label5:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>(12);

        $i2 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $i1 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        $r2 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: java.lang.String image>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void emitLiteralDouble(int,int,java.lang.String)>($i2, $i1, $r2);

        goto label7;

     label6:
        $r7 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i7 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $r7[16] = $i7;

        $i12 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int)>($i12);

        $r9 = new com.hp.hpl.jena.sparql.sse.lang.parser.ParseException;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: void <init>()>();

        throw $r9;

     label7:
        return;
    }

    private static void jj_la1_init_0()
    {
        int[] $r0;

        $r0 = newarray (int)[17];

        $r0[0] = 2;

        $r0[1] = 2;

        $r0[2] = 37625328;

        $r0[3] = 2;

        $r0[4] = 2;

        $r0[5] = 2;

        $r0[6] = 2;

        $r0[7] = 35651584;

        $r0[8] = 37625328;

        $r0[9] = 1973744;

        $r0[10] = 384;

        $r0[11] = 1973248;

        $r0[12] = 1966080;

        $r0[13] = 48;

        $r0[14] = 402653184;

        $r0[15] = 402653184;

        $r0[16] = 7168;

        <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1_0> = $r0;

        return;
    }

    private static void jj_la1_init_1()
    {
        int[] $r0;

        $r0 = newarray (int)[17];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 512;

        $r0[3] = 0;

        $r0[4] = 0;

        $r0[5] = 0;

        $r0[6] = 0;

        $r0[7] = 0;

        $r0[8] = 512;

        $r0[9] = 512;

        $r0[10] = 0;

        $r0[11] = 0;

        $r0[12] = 0;

        $r0[13] = 0;

        $r0[14] = 0;

        $r0[15] = 0;

        $r0[16] = 0;

        <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1_1> = $r0;

        return;
    }

    public void <init>(java.io.InputStream)
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        java.io.InputStream r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void <init>(java.io.InputStream,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(java.io.InputStream, java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream $r7, $r13;
        java.util.ArrayList $r12;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r16;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager $r15;
        int[] $r1, $r9;
        int i0, $i2, $i4, $i6;
        java.lang.String r5;
        java.lang.RuntimeException $r14;
        java.io.UnsupportedEncodingException $r10;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        java.io.InputStream r4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        r4 := @parameter0: java.io.InputStream;

        r5 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParserSSEBase: void <init>()>();

        $r1 = newarray (int)[17];

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1> = $r1;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.util.List jj_expentries> = $r12;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_kind> = $i2;

     label1:
        $r13 = new com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream;

        specialinvoke $r13.<com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream: void <init>(java.io.InputStream,java.lang.String,int,int)>(r4, r5, 1, 1);

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream jj_input_stream> = $r13;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r14;

     label4:
        $r15 = new com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager;

        $r7 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream jj_input_stream>;

        specialinvoke $r15.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager: void <init>(com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream)>($r7);

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source> = $r15;

        $r16 = new com.hp.hpl.jena.sparql.sse.lang.parser.Token;

        specialinvoke $r16.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r16;

        $i4 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk> = $i4;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen> = 0;

        i0 = 0;

     label5:
        if i0 >= 17 goto label6;

        $r9 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i6 = (int) -1;

        $r9[i0] = $i6;

        i0 = i0 + 1;

        goto label5;

     label6:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void ReInit(java.io.InputStream)
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        java.io.InputStream r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        r1 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void ReInit(java.io.InputStream,java.lang.String)>(r1, null);

        return;
    }

    public void ReInit(java.io.InputStream, java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream $r3, $r4;
        java.lang.RuntimeException $r10;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r11;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager $r5;
        int[] $r7;
        int i0, $i2, $i4;
        java.lang.String r2;
        java.io.UnsupportedEncodingException $r8;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        java.io.InputStream r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream jj_input_stream>;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream: void ReInit(java.io.InputStream,java.lang.String,int,int)>(r1, r2, 1, 1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r10;

     label4:
        $r5 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source>;

        $r4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream jj_input_stream>;

        virtualinvoke $r5.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager: void ReInit(com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream)>($r4);

        $r11 = new com.hp.hpl.jena.sparql.sse.lang.parser.Token;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r11;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk> = $i2;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen> = 0;

        i0 = 0;

     label5:
        if i0 >= 17 goto label6;

        $r7 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i4 = (int) -1;

        $r7[i0] = $i4;

        i0 = i0 + 1;

        goto label5;

     label6:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void <init>(java.io.Reader)
    {
        java.io.Reader r4;
        com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream $r6, $r10;
        java.util.ArrayList $r9;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r12;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager $r11;
        int[] $r1, $r8;
        int i0, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        r4 := @parameter0: java.io.Reader;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParserSSEBase: void <init>()>();

        $r1 = newarray (int)[17];

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1> = $r1;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.util.List jj_expentries> = $r9;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_kind> = $i2;

        $r10 = new com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream: void <init>(java.io.Reader,int,int)>(r4, 1, 1);

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream jj_input_stream> = $r10;

        $r11 = new com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager;

        $r6 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream jj_input_stream>;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager: void <init>(com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream)>($r6);

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source> = $r11;

        $r12 = new com.hp.hpl.jena.sparql.sse.lang.parser.Token;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r12;

        $i4 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk> = $i4;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 17 goto label2;

        $r8 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i6 = (int) -1;

        $r8[i0] = $i6;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void ReInit(java.io.Reader)
    {
        java.io.Reader r1;
        com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream $r2, $r3;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r7;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager $r4;
        int[] $r6;
        int i0, $i2, $i4;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        r1 := @parameter0: java.io.Reader;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream jj_input_stream>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream: void ReInit(java.io.Reader,int,int)>(r1, 1, 1);

        $r4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source>;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream jj_input_stream>;

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager: void ReInit(com.hp.hpl.jena.sparql.sse.lang.parser.JavaCharStream)>($r3);

        $r7 = new com.hp.hpl.jena.sparql.sse.lang.parser.Token;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r7;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk> = $i2;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 17 goto label2;

        $r6 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i4 = (int) -1;

        $r6[i0] = $i4;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager)
    {
        java.util.ArrayList $r6;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r7;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager r3;
        int[] $r1, $r5;
        int i0, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        r3 := @parameter0: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParserSSEBase: void <init>()>();

        $r1 = newarray (int)[17];

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1> = $r1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.util.List jj_expentries> = $r6;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_kind> = $i2;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source> = r3;

        $r7 = new com.hp.hpl.jena.sparql.sse.lang.parser.Token;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r7;

        $i4 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk> = $i4;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 17 goto label2;

        $r5 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i6 = (int) -1;

        $r5[i0] = $i6;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void ReInit(com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager)
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager r1;
        int[] $r3;
        int i0, $i2, $i4;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source> = r1;

        $r4 = new com.hp.hpl.jena.sparql.sse.lang.parser.Token;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r4;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk> = $i2;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 17 goto label2;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i4 = (int) -1;

        $r3[i0] = $i4;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_consume_token(int) throws com.hp.hpl.jena.sparql.sse.lang.parser.ParseException
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r7;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1, $r2, $r4, $r5, $r6, $r8, $r9, $r10;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager $r3;
        int i0, $i1, $i2, $i3, $i5;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        $r2 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next>;

        if $r2 == null goto label1;

        $r9 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        $r10 = $r9.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next>;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r10;

        goto label2;

     label1:
        $r4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source>;

        $r5 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager: com.hp.hpl.jena.sparql.sse.lang.parser.Token getNextToken()>();

        $r4.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next> = $r5;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r5;

     label2:
        $i5 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk> = $i5;

        $r6 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        $i1 = $r6.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int kind>;

        if $i1 != i0 goto label3;

        $i2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $i3 = $i2 + 1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen> = $i3;

        $r8 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        return $r8;

     label3:
        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_kind> = i0;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.ParseException generateParseException()>();

        throw $r7;
    }

    public final com.hp.hpl.jena.sparql.sse.lang.parser.Token getNextToken()
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1, $r2, $r4, $r5, $r6, $r7, $r8;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager $r3;
        int $i0, $i1, $i3;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        $r2 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next>;

        if $r2 == null goto label1;

        $r7 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        $r8 = $r7.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next>;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r8;

        goto label2;

     label1:
        $r4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source>;

        $r5 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager: com.hp.hpl.jena.sparql.sse.lang.parser.Token getNextToken()>();

        $r4.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next> = $r5;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token> = $r5;

     label2:
        $i3 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk> = $i3;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        $i1 = $i0 + 1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen> = $i1;

        $r6 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        return $r6;
    }

    public final com.hp.hpl.jena.sparql.sse.lang.parser.Token getToken(int)
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager $r2;
        int i0, i1;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1, $r3, r4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        i0 := @parameter0: int;

        r4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r1 = r4.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next>;

        if $r1 == null goto label2;

        r4 = r4.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next>;

        goto label3;

     label2:
        $r2 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager: com.hp.hpl.jena.sparql.sse.lang.parser.Token getNextToken()>();

        r4.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next> = $r3;

        r4 = $r3;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r4;
    }

    private int jj_ntk()
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r1, $r2, $r3, $r5, $r6;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager $r4;
        int $i0, $i1;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        $r2 = $r1.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next>;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_nt> = $r2;

        if $r2 != null goto label1;

        $r5 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        $r4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager token_source>;

        $r6 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCoreTokenManager: com.hp.hpl.jena.sparql.sse.lang.parser.Token getNextToken()>();

        $r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: com.hp.hpl.jena.sparql.sse.lang.parser.Token next> = $r6;

        $i1 = $r6.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int kind>;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk> = $i1;

        return $i1;

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token jj_nt>;

        $i0 = $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int kind>;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_ntk> = $i0;

        return $i0;
    }

    public com.hp.hpl.jena.sparql.sse.lang.parser.ParseException generateParseException()
    {
        int[][] r18;
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r19;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r7;
        int[] $r10, $r11, $r12, $r13, $r15, $r16, $r17;
        boolean $z0;
        java.util.List $r1, $r3, $r4, $r8, $r14;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;
        java.lang.String[] $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, $i18;
        boolean[] r2;
        java.lang.Object $r9;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.util.List jj_expentries>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        r2 = newarray (boolean)[43];

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_kind>;

        if $i0 < 0 goto label01;

        $i12 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_kind>;

        r2[$i12] = 1;

        $i18 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_kind> = $i18;

     label01:
        i13 = 0;

     label02:
        if i13 >= 17 goto label07;

        $r15 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1>;

        $i4 = $r15[i13];

        $i3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int jj_gen>;

        if $i4 != $i3 goto label06;

        i14 = 0;

     label03:
        if i14 >= 32 goto label06;

        $r16 = <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1_0>;

        $i6 = $r16[i13];

        $i5 = 1 << i14;

        $i7 = $i6 & $i5;

        if $i7 == 0 goto label04;

        r2[i14] = 1;

     label04:
        $r17 = <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_la1_1>;

        $i9 = $r17[i13];

        $i8 = 1 << i14;

        $i10 = $i9 & $i8;

        if $i10 == 0 goto label05;

        $i11 = 32 + i14;

        r2[$i11] = 1;

     label05:
        i14 = i14 + 1;

        goto label03;

     label06:
        i13 = i13 + 1;

        goto label02;

     label07:
        i15 = 0;

     label08:
        if i15 >= 43 goto label10;

        $z0 = r2[i15];

        if $z0 == 0 goto label09;

        $r11 = newarray (int)[1];

        r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_expentry> = $r11;

        $r12 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_expentry>;

        $r12[0] = i15;

        $r14 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.util.List jj_expentries>;

        $r13 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: int[] jj_expentry>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

     label09:
        i15 = i15 + 1;

        goto label08;

     label10:
        $r3 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.util.List jj_expentries>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        r18 = newarray (int[])[$i1];

        i16 = 0;

     label11:
        $r4 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.util.List jj_expentries>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i16 >= $i2 goto label12;

        $r8 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.util.List jj_expentries>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i16);

        $r10 = (int[]) $r9;

        r18[i16] = $r10;

        i16 = i16 + 1;

        goto label11;

     label12:
        $r19 = new com.hp.hpl.jena.sparql.sse.lang.parser.ParseException;

        $r7 = r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        $r6 = <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: java.lang.String[] tokenImage>;

        specialinvoke $r19.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: void <init>(com.hp.hpl.jena.sparql.sse.lang.parser.Token,int[][],java.lang.String[])>($r7, r18, $r6);

        return $r19;
    }

    public final void enable_tracing()
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        return;
    }

    public final void disable_tracing()
    {
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        return;
    }

    static void <clinit>()
    {
        staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void jj_la1_init_0()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void jj_la1_init_1()>();

        return;
    }
}
