public class com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner extends com.hp.hpl.jena.sparql.engine.iterator.QueryIterSub
{
    protected com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding;
    protected java.util.Iterator graphNames;
    protected com.hp.hpl.jena.sparql.algebra.op.OpGraph opGraph;

    protected void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding, java.util.Iterator, com.hp.hpl.jena.sparql.algebra.op.OpGraph, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        java.util.Iterator r3;
        com.hp.hpl.jena.sparql.algebra.op.OpGraph r4;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r3 := @parameter1: java.util.Iterator;

        r4 := @parameter2: com.hp.hpl.jena.sparql.algebra.op.OpGraph;

        r1 := @parameter3: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSub: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(null, r1);

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding> = r2;

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: java.util.Iterator graphNames> = r3;

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.algebra.op.OpGraph opGraph> = r4;

        return;
    }

    protected boolean hasNextBinding()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator iter>;

        if $r1 != null goto label2;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator nextIterator()>();

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator iter> = $r7;

     label2:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator iter>;

        if $r2 != null goto label3;

        return 0;

     label3:
        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator iter>;

        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.engine.QueryIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        return 1;

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator iter>;

        interfaceinvoke $r4.<com.hp.hpl.jena.sparql.engine.QueryIterator: void close()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator nextIterator()>();

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator iter> = $r5;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator iter>;

        if $r6 != null goto label1;

        return 0;
    }

    protected com.hp.hpl.jena.sparql.engine.binding.Binding moveToNextBinding()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r3;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String $r6, $r9;
        java.util.NoSuchElementException $r4;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator iter>;

        if $r1 != null goto label1;

        $r4 = new java.util.NoSuchElementException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".moveToNextBinding");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator iter>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.QueryIterator: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()>();

        return $r3;
    }

    protected com.hp.hpl.jena.sparql.engine.QueryIterator nextIterator()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterAssignVarValue $r14;
        com.hp.hpl.jena.graph.Node r4, $r10, $r12;
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner r0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext $r7, $r15;
        boolean $z0, $z1;
        java.util.Iterator $r1, $r2;
        com.hp.hpl.jena.sparql.algebra.op.OpGraph $r6, $r9, $r11;
        com.hp.hpl.jena.sparql.core.Var $r13;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r5;
        java.lang.Object $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r8, r16;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: java.util.Iterator graphNames>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: java.util.Iterator graphNames>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.Node) $r3;

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding>;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.algebra.op.OpGraph opGraph>;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.ExecutionContext getExecContext()>();

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.QueryIterator buildIterator(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.algebra.op.OpGraph,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r5, r4, $r6, $r7);

        r16 = $r8;

        if $r8 != null goto label2;

        return null;

     label2:
        $r9 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.algebra.op.OpGraph opGraph>;

        $r10 = virtualinvoke $r9.<com.hp.hpl.jena.sparql.algebra.op.OpGraph: com.hp.hpl.jena.graph.Node getNode()>();

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: boolean isVar(com.hp.hpl.jena.graph.Node)>($r10);

        if $z1 == 0 goto label3;

        $r11 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.algebra.op.OpGraph opGraph>;

        $r12 = virtualinvoke $r11.<com.hp.hpl.jena.sparql.algebra.op.OpGraph: com.hp.hpl.jena.graph.Node getNode()>();

        $r13 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(com.hp.hpl.jena.graph.Node)>($r12);

        $r14 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIterAssignVarValue;

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: com.hp.hpl.jena.sparql.engine.ExecutionContext getExecContext()>();

        specialinvoke $r14.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterAssignVarValue: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r8, $r13, r4, $r15);

        r16 = $r14;

     label3:
        return r16;
    }

    protected static com.hp.hpl.jena.sparql.engine.QueryIterator buildIterator(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.algebra.op.OpGraph, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterSingleton $r9;
        com.hp.hpl.jena.graph.Node r0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r5, $r8;
        com.hp.hpl.jena.sparql.algebra.Op $r2, $r4;
        com.hp.hpl.jena.graph.Graph $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.hp.hpl.jena.sparql.algebra.op.OpGraph r1;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r6, $r11;
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r12;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r10;

        r3 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r0 := @parameter1: com.hp.hpl.jena.graph.Node;

        r1 := @parameter2: com.hp.hpl.jena.sparql.algebra.op.OpGraph;

        r5 := @parameter3: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 != 0 goto label1;

        $r12 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>("QueryIterGraphInner.buildIterator");

        throw $r12;

     label1:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpGraph: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.QC: com.hp.hpl.jena.sparql.algebra.Op substitute(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r2, r3);

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z1 != 0 goto label2;

        $z3 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isUnionGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z3 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        if $z4 != 0 goto label5;

        $r11 = virtualinvoke r5.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.sparql.core.DatasetGraph getDataset()>();

        $z2 = interfaceinvoke $r11.<com.hp.hpl.jena.sparql.core.DatasetGraph: boolean containsGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z2 != 0 goto label5;

        return null;

     label5:
        $r6 = virtualinvoke r5.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.sparql.core.DatasetGraph getDataset()>();

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $r7 != null goto label6;

        return null;

     label6:
        $r8 = new com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.engine.ExecutionContext: void <init>(com.hp.hpl.jena.sparql.engine.ExecutionContext,com.hp.hpl.jena.graph.Graph)>(r5, $r7);

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.engine.iterator.QueryIterSingleton: com.hp.hpl.jena.sparql.engine.iterator.QueryIterSingleton create(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3, $r8);

        $r10 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.QC: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r4, $r9, $r8);

        return $r10;
    }

    protected void requestSubCancel()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner;

        return;
    }

    protected void closeSubIterator()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner;

        return;
    }
}
