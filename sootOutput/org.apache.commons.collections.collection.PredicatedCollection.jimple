public class org.apache.commons.collections.collection.PredicatedCollection extends org.apache.commons.collections.collection.AbstractSerializableCollectionDecorator
{
    private static final long serialVersionUID;
    protected final org.apache.commons.collections.Predicate predicate;

    public static java.util.Collection decorate(java.util.Collection, org.apache.commons.collections.Predicate)
    {
        org.apache.commons.collections.Predicate r2;
        org.apache.commons.collections.collection.PredicatedCollection $r0;
        java.util.Collection r1;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: org.apache.commons.collections.Predicate;

        $r0 = new org.apache.commons.collections.collection.PredicatedCollection;

        specialinvoke $r0.<org.apache.commons.collections.collection.PredicatedCollection: void <init>(java.util.Collection,org.apache.commons.collections.Predicate)>(r1, r2);

        return $r0;
    }

    protected void <init>(java.util.Collection, org.apache.commons.collections.Predicate)
    {
        org.apache.commons.collections.Predicate r2;
        org.apache.commons.collections.collection.PredicatedCollection r0;
        java.util.Iterator $r3;
        java.util.Collection r1;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.PredicatedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: org.apache.commons.collections.Predicate;

        specialinvoke r0.<org.apache.commons.collections.collection.AbstractSerializableCollectionDecorator: void <init>(java.util.Collection)>(r1);

        if r2 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r5;

     label1:
        r0.<org.apache.commons.collections.collection.PredicatedCollection: org.apache.commons.collections.Predicate predicate> = r2;

        $r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<org.apache.commons.collections.collection.PredicatedCollection: void validate(java.lang.Object)>($r4);

        goto label2;

     label3:
        return;
    }

    protected void validate(java.lang.Object)
    {
        org.apache.commons.collections.Predicate $r2;
        org.apache.commons.collections.collection.PredicatedCollection r0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.Object r1;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.PredicatedCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.collection.PredicatedCollection: org.apache.commons.collections.Predicate predicate>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.collections.Predicate: boolean evaluate(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot add Object \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' - Predicate rejected it");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        return;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.commons.collections.collection.PredicatedCollection r0;
        java.util.Collection $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.PredicatedCollection;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.collection.PredicatedCollection: void validate(java.lang.Object)>(r1);

        $r2 = virtualinvoke r0.<org.apache.commons.collections.collection.PredicatedCollection: java.util.Collection getCollection()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        org.apache.commons.collections.collection.PredicatedCollection r2;
        java.util.Iterator $r1;
        java.util.Collection r0, $r3;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r2 := @this: org.apache.commons.collections.collection.PredicatedCollection;

        r0 := @parameter0: java.util.Collection;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r2.<org.apache.commons.collections.collection.PredicatedCollection: void validate(java.lang.Object)>($r4);

        goto label1;

     label2:
        $r3 = virtualinvoke r2.<org.apache.commons.collections.collection.PredicatedCollection: java.util.Collection getCollection()>();

        $z1 = interfaceinvoke $r3.<java.util.Collection: boolean addAll(java.util.Collection)>(r0);

        return $z1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.collection.PredicatedCollection: long serialVersionUID> = -5259182142076705162L;

        return;
    }
}
