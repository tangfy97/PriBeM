public class org.wiztools.restclient.bean.ReqEntityMultipartBean extends java.lang.Object implements org.wiztools.restclient.bean.ReqEntityMultipart
{
    private final java.util.List parts;

    public void <init>(java.util.List)
    {
        org.wiztools.restclient.bean.ReqEntityMultipartBean r0;
        java.util.List r1, $r2;

        r0 := @this: org.wiztools.restclient.bean.ReqEntityMultipartBean;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        r0.<org.wiztools.restclient.bean.ReqEntityMultipartBean: java.util.List parts> = $r2;

        return;
    }

    public java.util.List getBody()
    {
        org.wiztools.restclient.bean.ReqEntityMultipartBean r0;
        java.util.List $r1;

        r0 := @this: org.wiztools.restclient.bean.ReqEntityMultipartBean;

        $r1 = r0.<org.wiztools.restclient.bean.ReqEntityMultipartBean: java.util.List parts>;

        return $r1;
    }

    public java.lang.Object clone()
    {
        org.wiztools.restclient.bean.ReqEntityMultipartBean r0;

        r0 := @this: org.wiztools.restclient.bean.ReqEntityMultipartBean;

        return null;
    }

    public boolean equals(java.lang.Object)
    {
        org.wiztools.restclient.bean.ReqEntityMultipartBean r1, r4;
        java.util.List $r5, $r6, $r7, $r8, $r9;
        java.lang.Object r0;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r1 := @this: org.wiztools.restclient.bean.ReqEntityMultipartBean;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label2;

        return 0;

     label2:
        r4 = (org.wiztools.restclient.bean.ReqEntityMultipartBean) r0;

        $r6 = r1.<org.wiztools.restclient.bean.ReqEntityMultipartBean: java.util.List parts>;

        $r5 = r4.<org.wiztools.restclient.bean.ReqEntityMultipartBean: java.util.List parts>;

        if $r6 == $r5 goto label4;

        $r7 = r1.<org.wiztools.restclient.bean.ReqEntityMultipartBean: java.util.List parts>;

        if $r7 == null goto label3;

        $r9 = r1.<org.wiztools.restclient.bean.ReqEntityMultipartBean: java.util.List parts>;

        $r8 = r4.<org.wiztools.restclient.bean.ReqEntityMultipartBean: java.util.List parts>;

        $z0 = interfaceinvoke $r9.<java.util.List: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        org.wiztools.restclient.bean.ReqEntityMultipartBean r0;
        java.util.List $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.wiztools.restclient.bean.ReqEntityMultipartBean;

        $r1 = r0.<org.wiztools.restclient.bean.ReqEntityMultipartBean: java.util.List parts>;

        if $r1 == null goto label1;

        $r2 = r0.<org.wiztools.restclient.bean.ReqEntityMultipartBean: java.util.List parts>;

        $i1 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $i0 = 413 + $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.wiztools.restclient.bean.ReqEntityMultipartBean r2;
        java.util.List $r3;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r5;

        r2 := @this: org.wiztools.restclient.bean.ReqEntityMultipartBean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@ReqEntityMultipart[");

        $r3 = r2.<org.wiztools.restclient.bean.ReqEntityMultipartBean: java.util.List parts>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
