public class ucar.nc2.dataset.StructurePseudoDS extends ucar.nc2.dataset.StructureDS
{
    private static org.slf4j.Logger log;
    private static boolean debugRecord;
    protected static final java.util.Set enhanceScaleMissing;
    private java.util.List orgVariables;

    protected void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, java.lang.String)
    {
        ucar.nc2.dataset.StructurePseudoDS r0;
        java.lang.String r3;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.Group r2;
        java.util.ArrayList $r4;

        r0 := @this: ucar.nc2.dataset.StructurePseudoDS;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.Group;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<ucar.nc2.dataset.StructureDS: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.lang.String)>(r1, r2, r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dataset.StructurePseudoDS: java.util.List orgVariables> = $r4;

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, java.lang.String, java.util.List, ucar.nc2.Dimension)
    {
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.dataset.VariableDS $r10;
        ucar.ma2.DataType $r12, $r39, $r40;
        java.util.Set $r20;
        ucar.nc2.Group r43;
        java.util.List $r16, $r17, $r19, $r21, $r35, r44;
        ucar.nc2.dataset.StructurePseudoDS r0;
        java.lang.StringBuilder $r23, $r24, $r26, $r27, $r28, $r30, $r32, $r33;
        java.util.ArrayList $r3, $r18, $r36;
        int $i0;
        ucar.nc2.Variable $r8, r45;
        java.lang.String r2, $r5, $r11, $r13, $r14, $r25, $r29, $r34, $r42, r46;
        org.slf4j.Logger $r31;
        java.util.Iterator $r6, $r37;
        java.lang.IllegalArgumentException $r22;
        ucar.nc2.Dimension r4, $r9, $r41;
        java.lang.Object $r7, $r15, $r38;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.StructurePseudoDS;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r43 := @parameter1: ucar.nc2.Group;

        r2 := @parameter2: java.lang.String;

        r44 := @parameter3: java.util.List;

        r4 := @parameter4: ucar.nc2.Dimension;

        specialinvoke r0.<ucar.nc2.dataset.StructureDS: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.lang.String)>(r1, r43, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dataset.StructurePseudoDS: java.util.List orgVariables> = $r3;

        $r5 = virtualinvoke r4.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dataset.StructurePseudoDS: void setDimensions(java.lang.String)>($r5);

        if r43 != null goto label1;

        r43 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

     label1:
        if r44 != null goto label5;

        $r35 = virtualinvoke r43.<ucar.nc2.Group: java.util.List getVariables()>();

        $r36 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r35.<java.util.List: int size()>();

        specialinvoke $r36.<java.util.ArrayList: void <init>(int)>($i0);

        r44 = $r36;

        $r37 = interfaceinvoke $r35.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r38 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r45 = (ucar.nc2.Variable) $r38;

        $r39 = virtualinvoke r45.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r40 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if $r39 != $r40 goto label3;

        goto label2;

     label3:
        $r41 = virtualinvoke r45.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if $r41 == null goto label4;

        $z1 = virtualinvoke $r41.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label4;

        $r42 = virtualinvoke r45.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r42);

     label4:
        goto label2;

     label5:
        $r6 = interfaceinvoke r44.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label9;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.lang.String) $r7;

        $r8 = virtualinvoke r43.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>(r46);

        if $r8 != null goto label7;

        $r31 = <ucar.nc2.dataset.StructurePseudoDS: org.slf4j.Logger log>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StructurePseudoDS cannot find variable ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r31.<org.slf4j.Logger: void warn(java.lang.String)>($r34);

        goto label6;

     label7:
        $r9 = virtualinvoke $r8.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z0 = virtualinvoke r4.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label8;

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Variable ");

        $r25 = virtualinvoke $r8.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have outermost dimension=");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r22;

     label8:
        $r10 = new ucar.nc2.dataset.VariableDS;

        $r11 = virtualinvoke $r8.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r12 = virtualinvoke $r8.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r13 = virtualinvoke $r8.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r14 = virtualinvoke $r8.<ucar.nc2.Variable: java.lang.String getDescription()>();

        specialinvoke $r10.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, r43, r0, $r11, $r12, null, $r13, $r14);

        $r15 = virtualinvoke $r8.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: void setSPobject(java.lang.Object)>($r15);

        $r16 = virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: java.util.List getAttributes()>();

        $r17 = virtualinvoke $r8.<ucar.nc2.Variable: java.util.List getAttributes()>();

        interfaceinvoke $r16.<java.util.List: boolean addAll(java.util.Collection)>($r17);

        $r18 = new java.util.ArrayList;

        $r19 = virtualinvoke $r8.<ucar.nc2.Variable: java.util.List getDimensions()>();

        specialinvoke $r18.<java.util.ArrayList: void <init>(java.util.Collection)>($r19);

        interfaceinvoke $r18.<java.util.List: java.lang.Object remove(int)>(0);

        virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: void setDimensions(java.util.List)>($r18);

        $r20 = <ucar.nc2.dataset.StructurePseudoDS: java.util.Set enhanceScaleMissing>;

        virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: void enhance(java.util.Set)>($r20);

        virtualinvoke r0.<ucar.nc2.dataset.StructurePseudoDS: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r10);

        $r21 = r0.<ucar.nc2.dataset.StructurePseudoDS: java.util.List orgVariables>;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label6;

     label9:
        virtualinvoke r0.<ucar.nc2.dataset.StructurePseudoDS: void calcElementSize()>();

        return;
    }

    protected ucar.nc2.Variable copy()
    {
        ucar.nc2.dataset.StructurePseudoDS r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: ucar.nc2.dataset.StructurePseudoDS;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public ucar.nc2.Structure select(java.util.List)
    {
        ucar.nc2.Group $r4;
        java.util.List r6;
        ucar.nc2.dataset.StructurePseudoDS $r0, r1;
        ucar.nc2.Dimension $r7;
        ucar.nc2.NetcdfFile $r2;
        java.lang.String $r5;
        ucar.nc2.dataset.NetcdfDataset $r3;

        r1 := @this: ucar.nc2.dataset.StructurePseudoDS;

        r6 := @parameter0: java.util.List;

        $r0 = new ucar.nc2.dataset.StructurePseudoDS;

        $r2 = r1.<ucar.nc2.dataset.StructurePseudoDS: ucar.nc2.NetcdfFile ncfile>;

        $r3 = (ucar.nc2.dataset.NetcdfDataset) $r2;

        $r4 = r1.<ucar.nc2.dataset.StructurePseudoDS: ucar.nc2.Group group>;

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudoDS: java.lang.String getShortName()>();

        $r7 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudoDS: ucar.nc2.Dimension getDimension(int)>(0);

        specialinvoke $r0.<ucar.nc2.dataset.StructurePseudoDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,java.util.List,ucar.nc2.Dimension)>($r3, $r4, $r5, r6, $r7);

        $r0.<ucar.nc2.dataset.StructurePseudoDS: boolean isSubset> = 1;

        return $r0;
    }

    public boolean removeMemberVariable(ucar.nc2.Variable)
    {
        java.util.Iterator $r3;
        java.util.List $r2;
        ucar.nc2.dataset.StructurePseudoDS r0;
        ucar.nc2.Variable r1, r5;
        java.lang.Object $r4;
        java.lang.String $r6, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.dataset.StructurePseudoDS;

        r1 := @parameter0: ucar.nc2.Variable;

        $z0 = specialinvoke r0.<ucar.nc2.dataset.StructureDS: boolean removeMemberVariable(ucar.nc2.Variable)>(r1);

        if $z0 == 0 goto label3;

        $r2 = r0.<ucar.nc2.dataset.StructurePseudoDS: java.util.List orgVariables>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.Variable) $r4;

        $r6 = virtualinvoke r5.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r7 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label2;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.ma2.StructureMembers$Member $r10;
        ucar.nc2.util.CancelTask r13;
        int[] $r3;
        ucar.nc2.Variable r7, r12;
        java.lang.String $r9;
        boolean $z0, $z1;
        ucar.ma2.ArrayStructureMA $r2;
        java.io.PrintStream $r11;
        java.util.Iterator $r5;
        ucar.ma2.Array $r8;
        java.util.List $r4;
        ucar.ma2.StructureMembers $r1;
        ucar.nc2.dataset.StructurePseudoDS r0;
        java.lang.Object $r6;

        r0 := @this: ucar.nc2.dataset.StructurePseudoDS;

        r12 := @parameter0: ucar.nc2.Variable;

        r13 := @parameter1: ucar.nc2.util.CancelTask;

        $z0 = <ucar.nc2.dataset.StructurePseudoDS: boolean debugRecord>;

        if $z0 == 0 goto label1;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>(" read all psuedo records ");

     label1:
        $r1 = virtualinvoke r0.<ucar.nc2.dataset.StructurePseudoDS: ucar.ma2.StructureMembers makeStructureMembers()>();

        $r2 = new ucar.ma2.ArrayStructureMA;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.StructurePseudoDS: int[] getShape()>();

        specialinvoke $r2.<ucar.ma2.ArrayStructureMA: void <init>(ucar.ma2.StructureMembers,int[])>($r1, $r3);

        $r4 = r0.<ucar.nc2.dataset.StructurePseudoDS: java.util.List orgVariables>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.nc2.Variable) $r6;

        $r8 = virtualinvoke r7.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r9 = virtualinvoke r7.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r10 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r9);

        virtualinvoke $r10.<ucar.ma2.StructureMembers$Member: void setDataArray(ucar.ma2.Array)>($r8);

        goto label2;

     label3:
        return $r2;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.ma2.Section, ucar.nc2.util.CancelTask) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r0;
        ucar.ma2.StructureMembers$Member $r16;
        java.util.ArrayList $r12;
        ucar.nc2.util.CancelTask r26;
        int[] $r2, $r7;
        ucar.nc2.Variable r11, r25;
        java.lang.String $r3, $r15, $r23;
        boolean $z0, $z1;
        ucar.ma2.ArrayStructureMA $r6;
        java.io.PrintStream $r19;
        ucar.ma2.Range $r4, $r21;
        java.util.Iterator $r9;
        ucar.ma2.Array $r14, $r24;
        java.util.List $r8, $r13;
        ucar.ma2.InvalidRangeException $r17;
        ucar.ma2.StructureMembers $r5;
        ucar.nc2.dataset.StructurePseudoDS r1;
        java.lang.Object $r10;
        java.lang.StringBuilder $r18, $r20, $r22;

        r1 := @this: ucar.nc2.dataset.StructurePseudoDS;

        r25 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: ucar.ma2.Section;

        r26 := @parameter2: ucar.nc2.util.CancelTask;

        if null != r0 goto label1;

        $r24 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudoDS: ucar.ma2.Array _read()>();

        return $r24;

     label1:
        $z0 = <ucar.nc2.dataset.StructurePseudoDS: boolean debugRecord>;

        if $z0 == 0 goto label2;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" read psuedo records ");

        $r21 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label2:
        $r2 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudoDS: int[] getShape()>();

        $r3 = virtualinvoke r0.<ucar.ma2.Section: java.lang.String checkInRange(int[])>($r2);

        if $r3 == null goto label3;

        $r17 = new ucar.ma2.InvalidRangeException;

        specialinvoke $r17.<ucar.ma2.InvalidRangeException: void <init>(java.lang.String)>($r3);

        throw $r17;

     label3:
        $r4 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudoDS: ucar.ma2.StructureMembers makeStructureMembers()>();

        $r6 = new ucar.ma2.ArrayStructureMA;

        $r7 = virtualinvoke r0.<ucar.ma2.Section: int[] getShape()>();

        specialinvoke $r6.<ucar.ma2.ArrayStructureMA: void <init>(ucar.ma2.StructureMembers,int[])>($r5, $r7);

        $r8 = r1.<ucar.nc2.dataset.StructurePseudoDS: java.util.List orgVariables>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (ucar.nc2.Variable) $r10;

        $r12 = new java.util.ArrayList;

        $r13 = virtualinvoke r11.<ucar.nc2.Variable: java.util.List getRanges()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);

        interfaceinvoke $r12.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r4);

        $r14 = virtualinvoke r11.<ucar.nc2.Variable: ucar.ma2.Array read(java.util.List)>($r12);

        $r15 = virtualinvoke r11.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r16 = virtualinvoke $r5.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r15);

        virtualinvoke $r16.<ucar.ma2.StructureMembers$Member: void setDataArray(ucar.ma2.Array)>($r14);

        goto label4;

     label5:
        return $r6;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        ucar.nc2.dataset.NetcdfDataset$Enhance $r1;
        java.util.EnumSet $r2;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dataset/StructurePseudoDS;");

        <ucar.nc2.dataset.StructurePseudoDS: org.slf4j.Logger log> = $r0;

        <ucar.nc2.dataset.StructurePseudoDS: boolean debugRecord> = 0;

        $r1 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance ScaleMissing>;

        $r2 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r1);

        <ucar.nc2.dataset.StructurePseudoDS: java.util.Set enhanceScaleMissing> = $r2;

        return;
    }
}
